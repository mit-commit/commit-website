%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: main.dvi
%%Pages: 56
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips main.dvi -o main.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.05.01:2348
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (main.dvi)
@start
%DVIPSBitmapFont: Fa cmtt8 6 4
/Fa 4 110 df<13F8EA03FE487E481380381F8FC0EA1E03383C01E0A2387800F0A34813
78A96C13F8007813F0A2EA7C01003C13E0EA3E03001E13C0EA1F8F380FFF806C13006C5A
EA00F815207E9E1A>48 D<13E0A212011203A2120F127F12FFA212791201B1387FFF80A4
111F7C9E1A>I<131E133FA4131E1300A4EA07FF5AA27EEA000FB3A3131FEA701EEAF83E
EAFFFC13F8EA7FF0EA3FC0102A7E9E1A>106 D<387CF87C38FFFDFE13FF6C7F381F1F8F
381E0F07A2EA1C0EAA397F1F8FC039FFBFDFE0A2397F1F8FC01B1581941A>109
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmtt8 8 80
/Fb 80 127 df<EB3C0F90387E1F80A6EBFE3F01FC1300A2007FB512F8B612FCA4003F14
F83901F87E00AA003FB512F8B612FCA46C14F83903F0FC00EA07F1EBE1F8A63803C0F01E
297EA823>35 D<137CEA01FE487E487FA2EBCFC0EA0F87A21303A31307A290380FCFF8EC
9FFC139F13BF3907FF0FF801FE138013FCA29038F81F00EA0FF0381FE01E383FF03E13F8
007F5BEA7E7C00FC1378EB3EF812F86D5AA290380FE03C1307EAFC0F90381FF07C387E3F
FC007FB512FC393FFE7FF8EBFC3F390FF01FE03907E007C01E2B7EA923>38
D<120FEA3F8013C0A213E0A2120F1203A31207A213C0120F121FEA3F80EA7F005A5A12F8
12700B1574A823>I<EB0380EB0FC0131FEB3F80EBFF005BEA01F81203485A485A5B485A
A248C7FCA2123E127EA2127CA212FCA25AA87EA2127CA2127EA2123E123FA26C7EA26C7E
7F6C7E6C7E1201EA00FE7FEB3F80EB1FC0130FEB0380123476AD23>I<127012FC7E127F
EA3FC0121FEA07E07F6C7E6C7E1200137EA27FA27F1480A2130FA214C0A21307A8130FA2
1480A2131FA214005BA2137EA25B1201485A485A5BEA1FC0123F48C7FC12FE5A12701234
7AAD23>I<131EA2131F131EA30070EB0380007C130F00FEEB1FC0397F9E7F8090B5FC00
1FEBFE00000713F8000113E038007F803801FFE0000713F8001F13FE007FEBFF80EB9E7F
39FE1E1FC0007CEB0F8000701303000090C7FCA3131F131EA21A1D7CA223>I<EB078049
7EAB007FB512F8B612FCA46C14F839000FC000AB6D5A1E1E7EA223>I<121FEA3F80EA7F
C013E0A4123F121F1207A2EA0FC0121FEA7F80EAFF005A5A12700B12748823>I<007FB5
1280B612C0A46C14801A067C9623>I<123E127FEAFF80A5EA7F00123E0909738823>I<EC
0380EC07C0140FA2141F1580143F15005C147EA214FE5C13015C13035C13075CA2130F5C
131F5C133F91C7FCA25B137E13FE5B12015BA212035B12075B120F5B121F5BA2123F90C8
FC5A127E12FE5AA25A12781A347CAD23>I<EB1F80EB7FE03801FFF8487F487F13F0380F
C03F391F801F80EB000F4814C0003E1307A248EB03E0A30078130100F814F0AB007CEB03
E0A3007E1307003E14C0A2003F130F391F801F80A2390FC03F003807F0FE13FF6C5B6C5B
38007FE0EB1F801C2B7DA923>I<1318133C137CA213FC120112031207127F12FFA2137C
127C1200B3A6387FFFFC14FEA314FC172A7AA923>I<EB7FC03803FFF04813FC001F7F48
EBFF80EA7F80397E003FC000FEEB0FE04813076CEB03F0A31401127C1238C7FC1403A2EC
07E0A2EC0FC0141FEC3F80150014FE1301EB03F8495A495AEB3FC0495A01FEC7FC485A48
5AD80FF013E0391FE001F0EA3F8048B5FCB6FCA36C14E01C2A7DA923>I<EB7FC03801FF
F0000713FC487F487F393FE07F809038801FC0140F1407A3EA0E00C7120FA2EC1F80143F
903801FF00EB7FFE495A5C806DB4FC9038007F80EC1FC0EC0FE01407EC03F0A21401A212
7C12FE1403A2EC07E048130F6CEB1FC0387FC07F6CB512806C14006C13FC00035B38007F
C01C2B7DA923>I<14FC497E1303A2EB07DE130F149EEB1F1E133F133E137E137C13F812
0113F0EA03E0120713C0120FEA1F8013005A123E5A12FCB612F815FCA36C14F8C7EA1E00
A7903807FFF84913FCA36D13F81E2A7EA923>I<001FB5FC481480A31500003EC8FCAAEB
1FE0EBFFF8003F13FE8015809038E03FC0EB800F90380007E0121EC7EA03F0A21401A212
3812FEA21403A2EC07E048130F007EEB1FC0397FC0FF806CB512006C5B00075B6C13F038
007F801C2A7DA823>I<EB03F8EB1FFE497E90B512804814C03803FE0F3807F01FEA0FE0
EA1FC01380003FEB0F8090C8FC127EA2EA7C01EB3FF038FCFFFCB57E8015809038C03FC0
9038000FE014075A48EB03F0A21401A3127CA2007E1303A27EEC07E0EB800F391FC01FC0
390FF07F8090B512006C5B00015B6C13F0EB3FC01C2B7DA923>I<1270B612E015F0A439
F8000FE0EC1FC000701480C7EA3F00147E14FE5C495AA2495A5C13075C130F5C131FA291
C7FC5BA2133E137EA2137CA313FCA25BA813701C2B7DA923>I<EB3FC03801FFF8487F48
7F487F391FE07F80393F801FC0EB000F007EEB07E0007C1303A4007E1307003E14C06CEB
0F80EBC03F3907FFFE006C5BC613F0A2000313FC380FF0FF391F801F80393F000FC0007E
EB07E0007C130300FC14F0481301A56C1303007EEB07E0A2393F801FC0391FE07F8090B5
FC6C1400000313FC6C5B38003FC01C2B7DA923>I<EB3FC0EBFFF000037F4813FE487F39
1FE07F80383F803F397F001FC0007E130F00FEEB07E05AA248130315F0A47EA2007E1307
140F127F383FC03F6CB5FC7E6C13FD6C13F3C613C390380803E0EB0007A2EC0FC0121F39
3F801F80143FEC7F0014FE1383EBFFFC6C13F06C5B000313806C48C7FC1C2B7DA923>I<
123E127FEAFF80A5EA7F00123EC7FCAB123E127FEAFF80A5EA7F00123E091D739C23>I<
121FEA3F80EA7FC0A5EA3F80EA1F00C7FCAB121EEA3F80127F13C0A4123F121F120FA2EA
1F80123FEA7F005A5A12F812700A26749C23>I<EC0380EC0FC0141F143F14FF49138090
3807FE00495A495AEB7FE0495A4890C7FCEA07FE485AEA1FF0EA7FE0485A90C8FCA213C0
6C7EEA1FF0EA0FFC6C7EEA01FF6C13C06D7EEB1FF86D7E6D7E903801FF806D13C0143F14
1F140FEC03801A247CA523>I<007FB512F8B612FCA4003F14F8C9FCA6003FB512F8B612
FCA46C14F81E127E9C23>I<127012FC7E7E13C06C7EEA1FF86C7E6C7E3801FF806C7FEB
3FE0EB1FF86D7EEB03FE903801FF806D13C0143FA214FF491380903803FE00EB0FFC495A
EB3FE0EBFFC0485BD807FEC7FC485A485AEA7FE0485A90C8FC5A5A12701A247CA523>I<
EB0FC0A2497EA4EB3CF0A5EB7CF8A3EB7878EBF87CA548487EA40003133F497EA290B5FC
A2481480A3EBC00F000F14C0EB8007A3397FF03FF800FF14FCA3007F14F81E2A7EA923>
65 D<B512F014FE80158015C0390F800FE01407EC03F01401A5140315E01407EC1FC090
B5128015005C8015C09038800FE01407EC03F0140115F81400A5140115F01403EC0FE0B6
FC15C01580150014FC1D297EA823>I<90380FE0E090383FF9F0EBFFFD4813FF5A3807FC
3F380FF00F381FC007A2383F80031300481301127EA2007CEB00E000FC1400A25AA97EA2
127C007E14E0EC01F0127F7EEB8003EA1FC0EC07E0380FF00F3907FC1FC06CB512806C14
006C5BEB3FF8EB0FE01C2B7DA923>I<387FFFF0B512FC80806C1480390F803FC0141FEC
07E0A2EC03F0140115F81400A315FC157CAA15F8A3140115F01403A2EC07E0EC0FC0143F
007FB51280B612005C5C6C13F01E297FA823>I<B612F015F8A4380F8000A515701500A2
1438147CA3EBFFFCA5EB807CA3143891C7FCA3151C153EA6B612FEA415FC1F297EA823>
I<007FB512FCB612FEA37E3907C0003EA5151C1500A3140E141FA390B5FCA5EBC01FA314
0E91C7FCA9EA7FFEB5FCA36C5A1F297FA823>I<90381FC1C090387FF3E090B5FC12035A
EBF83F380FE01F381FC00F1380003F13071300007E1303A3007CEB01C000FC90C7FCA25A
A6EC7FF815FCA27E15F8007CEB03E0127E1407A27EEB800F121FEBC01FEA0FE03807F87F
90B5FC7EC613FB90387FF1C090381FC0001E2B7EA923>I<397FF00FFE39FFF81FFFA339
7FF00FFE390F8001F0AC90B5FCA5EB8001AE397FF00FFE39FFF81FFFA3397FF00FFE2029
7FA823>I<B512FEA538007C00B3ADB512FEA517297AA823>I<EA7FFEB5FCA36C5AEA07C0
B3A6157CA7007FB512FCB6FCA36C14F81E297EA823>76 D<39FF8001FFA26D5AA3391EE0
0778A3EBF00FEB700EA2EB781EA2EB381CEB3C3CA2EB1C38EB1E78A2EB0E70A3EB07E0A3
EB03C0A290C7FCA939FFC003FFA520297FA823>I<397FC01FF800FFEB3FFC13E0A2397F
F01FF8390F7003C0A213781338A2133CA2131C131EA2130E130FA3EB0783A3EB03C3A313
0114E3A2130014F3A21473A2147B143BA2387FE03F38FFF01FA2140FD87FE013801E297E
A823>I<3803FFF0000F13FC487F487FA2397F807F80387E001F007C130FA200FC14C048
1307B3A46C130FA2007C1480A2007E131F387F807F6CB51200A26C5B6C5B000313F01A2B
7CA923>I<B512F014FE80158015C0390F801FE0EC07F01403140115F81400A5140115F0
14031407EC1FE090B512C0158015005C14F00180C7FCABEAFFF87FA35B1D297EA823>I<
387FFFC0B512F88014FF7E390F807F80EC1FC0140F6E7E1403A514074A5A141FEC7F8090
B5C7FCA214FC8080EB807F6E7E141F140FA61587ED8F80A215CFD87FF013DF39FFF807FF
1600806C486C5AC812F8212A7FA823>82 D<9038FF83800003EBE3C04813FF121F5AEA7F
C0EB003F00FE131F48130FA25A1407A26CEB038091C7FC127E127FEA3FF06CB4FC6C13F0
6C13FC00017F39001FFF80010113C0EB001FEC0FE01407EC03F0A20070130112F8A36C13
03A26CEB07E06C130F9038E03FC090B5FC15005C00F15B38703FE01C2B7DA923>I<007F
B512F8B612FCA439F807C07CA50070143800001400B3A7EBFFFE487FA36C5B1E297EA823
>I<39FFF81FFFA5390F8001F0B3A7EBC003A2000714E0EBE007EBF00F000314C0EBFC3F
6CB512806C14006D5AEB1FF8EB07E0202A7FA823>I<397FF00FFE00FF14FFA3007F14FE
390F8001F0A23907C003E0A43903E007C0A4EBF00F00011480A43900F81F00A4EB7C3EA4
EB3C3CEB3E7CA3EB1E78A4EB1FF86D5AA36D5AA2202A7FA823>I<397FF00FFE39FFF81F
FFA3397FF00FFE3907C003E0EBE007000314C013F00001130F01F813800000131F01FC13
00137C143E133E147EEB1F7CA26D5AA26D5AA25C1303ACEB1FFC497EA36D5A20297FA823
>89 D<003FB512E04814F0A4397C0007E0140FEC1FC01580143F0038EB7F00C7127E14FE
495A5C1303495A5C130F495A5C133F49C7FC137E13FE485A5B1203485A4913E0000FEB01
F0EA1FC01380123FEA7F00127EB6FCA46C14E01C297DA823>I<387FFFC0B512E0A314C0
00F8C7FCB3B3A6B512C014E0A36C13C0133473AD23>I<387FFFC0B512E0A37EEA0003B3
B3A6EA7FFFB5FCA36C13C013347EAD23>93 D<133013FCEA03FF000F13C0003F13F0B512
FC1387EAFE0138F8007C00601318160A7AA823>I<007FB51280B612C0A46C14801A067C
7E23>I<3803FF80000F13E04813F8487F80EB80FFEC3F80381F001FC7FC140F14FF137F
0003B5FC120F5A387FF00F130012FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E00
0713C73901FE01FC1F1D7D9C23>97 D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512
E015F09038FE0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F140190
38F803F89038FE0FF090B5FC15E001DF138001CF1300380383F81F297FA823>I<EB3FF0
EBFFFC000313FF5A5A381FE07FEA3F80387F003E007E90C7FCA25AA25AA57EA2007E1307
007FEB0F80141FEA3FC0391FF07F006CB5FC6C5B6C5BC613F0EB3FC0191D7B9C23>I<EC
FF8015C0A41407A7EB7F873801FFE74813F7000F13FF5A13E0383F803F387F001F007E13
0FA2481307A25AA56C130FA2127E141F007F133F383F807FEBE0FF6CB512FE7E000313F7
6C13C738007F031F297EA823>I<EB3FC0EBFFF800037F4813FF481480381FF07F393F80
1FC0EB000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0383F80
0713E0391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C23>I<147F9038
01FFC0010713E05B5BEB3FCF140F90383E07C091C7FCA4007FB51280B612C0A36C1480D8
003EC7FCB3383FFFFE487FA36C5B1B297EA823>I<EC01F090383F07FC9038FFDFFE0003
13FF5A48147E381FE1FE9038807E18393F003F00A2003E7FA4003F5BA2381F807EEBE1FE
6CB45A485B5C001E13C0013FC7FC90C8FC121F1340380FFFFCECFF804814C04814F0397E
0007F8007C130048147CA248143CA36C147C6C14FC007FEB03F8EBE01F6CB512F0000F14
C06C14800001EBFE0038003FF01F2E7E9D23>I<B47E7FA41207A7EBC1FCEBC7FF01DF13
8090B512C0A29038FE0FE0EBF807EBF00313E0A313C0AD39FFFE1FFF5CA38020297FA823
>I<133813FEA5133890C7FCA6EA7FFC487EA3127FEA003EB3387FFFFEB6FCA36C13FE18
2A7AA923>I<14E0EB03F8A5EB00E01400A63803FFF04813F8A37EC7FCB3AB1301123838
7C03F012FEEB0FE0B5FC14C06C13006C5AEA0FF815397DA923>I<EA7F80487EA3127F12
03A7ECFFFC13C1A313C0EC3F00147E5CEBC1F8EBC3F0EBC7E0EBCFC0EBDFE0EBFFF0A2EB
FCF8497EEBF07EEBE03E497E1580EC0FC01407EC03E0397FFE0FFFB55AA36C487E20297F
A823>I<EA7FFEB5FCA37EEA001FB3AD007FB512C0B612E0A36C14C01B297CA823>I<397E
1F01F039FF7FC7FC9038FFEFFE14FF6C80390FE1FE1FEBC1FC01C07FEB80F8A2EB00F0AE
3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13E0241D819C23>I<38FF81FCEBC7FF01DF13
8090B512C0A23907FE0FE0EBF807EBF00313E0A313C0AD39FFFE1FFF5CA380201D7F9C23
>I<133F3801FFE0487F487F487F381FC0FE383F807F383E001F007E1480007C130F00FC
14C0481307A66C130FA2007C1480007E131F6CEB3F006D5A381FE1FE6CB45A6C5B6C5B6C
5BD8003FC7FC1A1D7C9C23>I<38FF81FCEBC7FF01DF13C090B512E015F03907FE0FF8EB
F8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF0
90B5FC15E001DF138001CF1300EBC3F801C0C7FCAAEAFFFEA51F2C7F9C23>I<90383FC1
C09038FFF3E0000313FB4813FF5A381FF07F383FC01F387F000F127E14075A14035AA57E
1407127E140F007F131FEA3F80381FE07F90B5FC12076C13FB6C13E338003F83EB0003AA
EC7FFF91B51280A36E1300212C7E9C23>I<397FF00FE039FFF87FF8ECFFFC13FB6CB5FC
C613F8ECC078EC800091C7FC5BA25BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>I<3801
FF9C000F13FE5A127FA2EAFF0000FC137E48133EA26C131C6C1300EA7FF0383FFF80000F
13E06C13F838007FFCEB01FEEB007F0070133F00F8131F7E143F7E38FF80FFEBFFFE14FC
14F814F000701380181D7B9C23>I<137013F8A7007FB51280B612C0A36C1480D800F8C7
FCACEC01C0EC03E0A3EBFC07140F9038FE1FC0EB7FFF158090383FFE00EB0FFCEB07F01B
257EA423>I<39FF807FC001C013E0A400071303B01407140FEBE03F90B6FC7EA2C613F3
EB3FC1201D7F9C23>I<39FFF03FFCA5390F8007C000071480A2EBC00F00031400A26D5A
0001131EA2EBF03E0000133CA2EBF87CEB7878A2EB7CF8EB3CF0A2133F6D5AA36D5A6D5A
1E1D7E9C23>I<397FF00FFE39FFF81FFFA3397FF00FFE001FC712F86C14F0A57F390783
E1E0EB87F1A3EB8FF90003EB79C013CFA2EBDF7BA2EBDE3B00011480EBFE3FA2EBFC1FA2
3900F80F00201D7F9C23>I<397FF07FF039FFF8FFF8A3397FF07FF03903E03E003801F0
3C3800F87CEB78F8EB7CF0EB3FE0131F6D5A5C1307497E497E133DEB3CF0EB7878EBF07C
0001133C497E3803C01F397FF03FF839FFF87FFCA3397FF03FF81E1D7E9C23>I<39FFF0
3FFCA539078007C0158013C00003130F1500EA01E05CEBF01E1200A26D5A1378A26D5AA3
EB1E7014F0130EEB0FE0A213075CA35CA2130F91C7FCA2EA3E1FEA7F1E133EEA7CFC127F
5B6C5A6C5AEA0F801E2C7E9C23>I<003FB512F04814F8A4397C000FF0EC1FE0EC3FC000
38EB7F80C7EAFF00EB01FC495A495A495A495A495A49C7FC13FE485AD807F81370484813
F8485A485A485AB6FCA46C14F01D1D7E9C23>I<EC1FE0ECFFF05B130715E090380FF000
14C05CAE131F137FD87FFFC7FC485A5BA27F6C7EC66C7E131F130FAE8014F0903807FFE0
15F013017FEC1FE01C347DAD23>I<EA7FC0EAFFF87F13FF7EC66C7E131F130FAE8014F0
903807FFE06D13F07FA25B4913E090380FF00014C05CAE131F137FD87FFFC7FCB5FC13FC
5BEA7FC01C347DAD23>125 D<3803C038380FF07C381FF8FCEA3FFF4813F8B512F038FC
7FE038F83FC038700F0016097AA823>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy5 5 1
/Fc 1 49 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278A21270A2
5AA20A157D9612>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy6 6 1
/Fd 1 49 df<EA01E0EA03F0A4EA07E0A213C0120FA21380A2EA1F00A2121EA2123E123C
A25AA3127012F05A12600C1A7E9B12>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx8 8 16
/Fe 16 120 df<EB7FF80003B5FC000F14C0391FE01FF09038F007F86E7EA26E7EEA0FE0
EA07C0C7FCA214FF133F48B5FC000713C1381FFC01EA3FE0EA7FC0EAFF801300A3140313
806C6C487E263FF03F13F8381FFFFE0007EBF87FC6EBC01F251E7E9D28>97
D<EB0FFE90387FFFC048B512F03907FC07F8380FF00FEA1FE0123F13C0007FEB07F09038
8003E091C7FC12FFA8127F7FA26C6C133CA26C6C137C6C6C13F83907FE03F00001B512E0
6C6C138090380FFC001E1E7D9D24>99 D<ED0FC0EC03FFA4EC003FABEB0FF8EB7FFF48B6
FC3807FC07380FF001391FE0007F003F143F5B127F5BA212FFA9127F7F123F157F6C6C13
FF380FF0032607FC0F13FC0001B512BF6CEBFE3FEB1FF0262E7DAD2D>I<EB0FFC90387F
FF8048B512E03907FC0FF0390FF003F8391FE001FC1400484813FE007F147E5B157F12FF
A290B6FCA30180C7FCA3127F7FA2003F140F6C7E6C6C131F6C6C137E3903FE01FC6CB512
F86C6C13E001071300201E7E9D25>I<ECFF80010713E0011F13F0EB7FC79038FF0FF8EA
01FEA2EA03FCA2EC07F0EC00801500A5B512FCA4D803FCC7FCB3A4383FFFE0A41D2E7EAD
19>I<EA03F012FFA4120FABEC1FF0EC7FFC01F1B5FCD9F7E013809038FF807FD9FE0013
C049133FA25BA25BB0B53803FFFCA4262E7CAD2D>104 D<EA07C0EA0FE0EA1FF0EA3FF8
A5EA1FF0EA0FE0EA07C0C7FCA6EA03F012FFA4120FB3A3B5FCA4102F7CAE17>I<EA03F0
12FFA4120FB3B3B5FCA4102E7CAD17>108 D<3907E01FF000FFEB7FFC01E1B5FCD9E7E0
13809038EF807F260FFE0013C049133FA25BA25BB0B53803FFFCA4261E7C9D2D>110
D<EB07FE90387FFFE048B512F83903FC03FC3907F000FE4848137F4848EB3F80003F15C0
49131F007F15E0A200FF15F0A8007F15E0A26D133F003F15C0001F15806D137F6C6CEBFF
003903FC03FC6CB55A6C6C13E0D907FEC7FC241E7E9D29>I<3903F03FE039FFF1FFFC01
F713FFD9FFC013809039FE007FC0D80FFCEB3FE049EB1FF05BED0FF8A216FC1507A8ED0F
F8A3ED1FF07F6DEB3FE06DEB7FC09039FF81FF809039F7FFFE0001F113F89038F07FC091
C8FCA9B5FCA4262B7D9D2D>I<3807E07E39FFE1FF8001E313E0EBE78F9038EF1FF0EA0F
FE13FCA29038F80FE0EC07C091C7FC5BAFB57EA41C1E7D9D22>114
D<3801FF8E000713FE121FEA3F00007C137E0078133E00F8131EA27EB490C7FC13F0EBFF
806C13E06C13F86C13FE7E00037FD8003F13801300143F00F0131F140F7EA26CEB1F007E
38FF807EEBFFFC00FB13F000E01380191E7D9D20>I<133CA4137CA313FCA21201120312
07001FB5FCB6FCA3D803FCC7FCAEEC03C0A61407D801FE1380EBFF0F6CEBFF00EB3FFCEB
0FF01A2A7FA920>I<D803F0EB0FC000FFEB03FFA4000FEB003FB1157FA215FF00075BD9
F80713FC6CB512BFC6EBFE3FEB3FF0261E7C9D2D>I<3CFFFE0FFFC03FFCA43C0FF000FE
0003C06D017F130700074A1480EE800F6C6C16005CD801FEECC01E5C01FF9038CFE03E6C
163CDA0787137CD97F87EBF078148F9139CF03F8F8D93FDF5C9138DE01FDD91FFE5CA26D
486CB45AA24A137F01075D4A133F010392C7FCA26D48131E361E7E9D3B>119
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy8 8 21
/Ff 21 107 df<B812C0A32A037A9137>0 D<123C127E12FFA4127E123C08087A9414>I<
006015C000E014016C14030078EC07806CEC0F006C141E6C5C6C6C5B6C6C5B6C6C485A6C
6C485A90387807806D48C7FCEB1E1E6D5AEB07F86D5A6D5A497E497EEB0F3CEB1E1E497E
496C7E496C7E48486C7E48486C7E4848137848C77E001E80488048EC078048EC03C04814
0100601400222376A137>I<B812FCA27ECBFCADB812FCA3CBFCAD007FB712FCB8FCA22E
237CA137>17 D<12E012F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00
FC143FEC0FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007FEE1FC01607161FEE7F
00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC0FC0023FC8FC14FCEB03F8EB0FE0EB
3F8001FEC9FCEA03F8EA0FE0EA3F80007ECAFC12F812E0CBFCAD007FB71280B812C0A22A
3B7AAB37>21 D<EB01C0A313035C130791CBFC5B130E131E5B5B13F8485AEA03C0EA0F80
007FB912FCBAFC7ED80F80CBFCEA03C0EA01F06C7E13787F7F130E130F7F801303801301
A33E237CA147>32 D<170EA3170F8384170384170184717E1878187C84180FF007C0BA12
F819FC19F8CBEA07C0F00F00183E601878604D5A60170360170795C7FC5F170EA33E237C
A147>I<91B512C01307131FD97F80C7FC01FCC8FCEA01F0EA03C0485A48C9FC120E121E
5A123812781270A212F05AA3B712C0A300E0C9FCA37E1270A212781238123C7E120E120F
6C7E6C7EEA01F0EA00FCEB7F80011FB512C013071300222B7AA52F>50
D<ED01C0A215031680150716005D150E151E5D15381578157015F05D14015D14035D1407
92C7FC5C140E141E5C14381478147014F05C13015C13035C130791C8FC5B131E131C133C
13381378137013F05B12015B12035B120790C9FC5A121E121C123C12381278127012F05A
1260223D76AE00>54 D<0060150600E0150E6C151E0070151CA20078153C00381538003C
1578001C1570A2001E15F0000E15E0000F14016C15C06D13036CB61280A33A01C0000700
6D5B0000140EA26D131E0170131C0178133C01381338A2013C1378011C1370011E13F001
0E5BA2EB0F0101075B148301035B14C7010190C7FCA214EFEB00EE14FE147CA31438A227
2F80AD28>56 D<B612FCA3C8121CB2003FB512FC5AA2C8121CB3B612FCA31E2E7CAD27>
I<1406140EA2141EEB1F9CEBFFFC3801E07C3803803C3807003E48133F001EEB7F80001C
1373003C14C014F314E3007C14E0007813E1130114C100F814F013031481A313071401A2
130F130EA3131E131CA3133C1338007814E013781370007C1303003C14C013F013E0001E
EB0780121F390FC00F000007131E143E3803E078EBFFF0EB9F80D80780C7FC90C8FCA31C
387DB223>59 D<007FB712FEB8FC7EC7D80380C7FCB3B3A614012F2E7CAD38>62
D<0060150C00E0151CB3AA6C153C00701538A2007815786C15F06CEC01E06C6CEB07C0D8
07E0EB1F803A03FE01FF00C6B512FC013F13F0010390C7FC26297CA72F>91
D<14301478A214FCA2497E14CEA2EB03CF148701077F1403010F7FEB0E01011E7FEB1C00
013C7F013813700178137801701338A201F0133C49131C0001141E49130E0003140F497F
0007158090C712034815C0000E1401001E15E0001C1400A2003C15F00038157000781578
0070153800F0153C48151C160C26297CA72F>94 D<00E0150C161C6C153C007015380078
157800381570003C15F0001C15E0A2001E1401000E15C0000F14036C15806D1307000315
006D5B0001140E6D131E0000141C6D133C01701338A20178137801381370013C13F0011C
5BEB1E01010E5BEB0F0301075B1487010390C7FC14CFEB01CEA214FE6D5AA21478A21430
26297CA72F>I<141F14FFEB03F0EB0FC0EB1F8014005B133EB3A2137E137C13FC485A48
5AEA7FC048C7FCEA7FC0EA03F06C7E6C7E137C137E133EB3A2133F7F1480EB0FC0EB03F0
EB00FF141F18437BB123>102 D<12FCB47EEA0FE0EA01F0EA00FC137C137E133EB3A37F
1480130FEB07E0EB01FEEB007FEB01FEEB07E0EB0F80131F1400133EB3A3137E137C13FC
EA01F0EA0FE0EAFF8000FCC7FC18437BB123>I<13031307130F130EA2131E131C133C13
38A21378137013F013E0A2120113C01203138012071300A25A120E121E121CA2123C1238
12781270A212F05A7E1270A212781238123C121CA2121E120E120F7EA21380120313C012
0113E01200A213F0137013781338A2133C131C131E130EA2130F1307130310437AB11B>
I<12E0A27E1270A212781238123C121CA2121E120E120F7EA21380120313C0120113E012
00A213F0137013781338A2133C131C131E130EA2130F1307130F130EA2131E131C133C13
38A21378137013F013E0A2120113C01203138012071300A25A120E121E121CA2123C1238
12781270A212F05AA210437CB11B>I<12E0B3B3B3AD034378B114>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmss8 8 28
/Fg 28 123 df<90380F807EEB3FE0137F13FF5A3803F86049C7FC5B1207A9B5EAE07EA4
3807E000B3A81F2F7FAE26>12 D<12FEB3B3A5B612F0A51C2E7AAD26>76
D<B512FCECFF8015E015F839FE000FFCEC01FE6E7E81ED3F80151F16C0A2150FA3151FA2
1680153FED7F005D4A5AEC0FFCB65A5D15C092C7FC48C9FCB3222E7AAD2D>80
D<EB0FFC90387FFF8048B512E04814F85A380FF807391FC000F04848133090C712101500
127EA5127F6C7E7F13F06CB4FC6C13F06C13FE6C7F6C14C06C6C13E0010F13F0010013F8
140FEC03FC1401140015FE157EA51240006014FC127000FCEB01F8B413079038E01FF06C
B512E0001F14C00007140000015B38001FF01F307DAE27>83 D<13FF000713E0001F7F48
7F80EB00FE0038137F00207FC7FCEC1F80A6EB0FFF90B5FC1207121F383FFC1FEA7FC0EA
FE005AA2143FA26C137F387F83FF90B5FC7E149F381FFE1FD807F0C7FC19217D9F22>97
D<12FCAFEB07F0EB3FF8EBFFFEB6FC158013C09038003FC048131F48EB0FE01407A215F0
1403A8EC07E0A2140F6C14C0141F6CEB3F80EBC0FF90B512005C00FC5BEB7FF038000FC0
1C2F7BAD24>I<EB1FF0EB7FFE48B512804814C05A380FF00F391FC00380EB800048C8FC
A2127EA35AA8127EA2127F7E6D1340391FC001C0380FF00F6CB5FC7E6C148039007FFE00
EB1FF01A217E9F1F>I<EC03F0AF137F3801FFE34813FB4813FF5A381FF03F383FC00FEB
8007387F0003127EA212FE5AA87E127EA2007F1307383F800FEBC01F381FF03F6CB5FC6C
13FB6C13F36C13C36C6CC7FC1C2F7EAD24>I<EB1F80EBFFF0487F00077F487FEBE07F48
487E48487E9038000F80007E1307A2007C14C0B6FCA500F8C8FCA27EA2127C127EA27E6D
1340391FC001C0380FF01F6CB5FC7E6C148039007FFE00EB1FE01A217E9F1F>I<EB03F8
EB0FFE133F137F13FFEBFE063801F8005B1203A9B512E0A43803F000B3A8172F7FAE16>
I<013F137C9038FFC7FC0003EBFFFE5A5A9038C0FC00381F807EEB003E003E7FA76C133E
EB807E6C6C5A13FF485B5C003E13C0013FC7FC90C8FCA2123FEBFFF86C13FF15C06C14E0
003F14F015F8387F000F007EEB01FC481300A46C1301007FEB03F8393FE01FF06CB512E0
6C14C06C14800001EBFE0038003FF01F2E7E9E23>I<12FCAFEB0FE0EB3FF8EBFFFC00FD
7FB6FC13C0EB803F0100138048131FA35AB3A2192E7BAD24>I<12FEA71200AA127EB3AC
072F7CAE11>I<EB3F80A790C7FCAAEB1F80B3B3EA403F3870FF00B5FC5B5BEA3FF8EA0F
E0113D84AE13>I<12FCB0EC3F80EC7F0014FE495A495A495A495A495A495A49C7FC13FE
EAFDFCB47EA27FEBDF8080138FEB07E0486C7E12FC6D7E6D7EA2147E801580141FEC0FC0
EC07E01B2E7BAD22>I<12FCB3B3AA062E7BAD11>I<D90FF013FF27FC3FFC0313C09026FF
FE0F13E000FD6D4813F0B600BF13F89039E07FFE079039801FF801010001F013FC489038
0FE000A3485CB3A22E1F7B9E39>I<EB0FE038FC3FF8EBFFFC00FD7FB6FC13C0EB803F01
00138048131FA35AB3A2191F7B9E24>I<EB1FE0EB7FF83801FFFE487F481480390FF03F
C0391FC00FE0EB8007393F0003F0A2007EEB01F8A2007C130000FC14FCA8007EEB01F8A2
007F13036C14F0EB8007391FC00FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE0
1E217E9F23>I<EB07F038FC3FF8EBFFFEB6FC158013C09038003FC048131F48EB0FE0A2
140715F01403A8EC07E0A2140F6C14C0141F6CEB7F80EBC1FF90B512005C00FC5BEB7FF0
EB0FC090C8FCAC1C2C7B9E24>I<EB0780EAF81F137F13FF12F938FBF800EAFFE05B5B90
C7FCA25AA25AB2111F7B9E18>114 D<48B4FC000713E0001F13F84813FC5A130000FE13
384813081400A37EEA7F8013FC383FFF806C13E06C13F0000313F8C613FC1307EB01FE13
00147EA31240007013FCEAFE01B512F8A26C13F0000F13C00001130017217E9F1B>I<EA
07E0A8B512F0A43807E000B3A2EBF01000031370EBFFF8A27E6C13E0EB7F0015277FA519
>I<00FCEB1F80B3A5143F147F38FE01FFB6FC7E14DF383FFE1FD80FF0C7FC191F7B9D24>
I<00FC14FC007E14F81401A26CEB03F0A21380001FEB07E0A2390FC00FC0A33907E01F80
A2D803F013005CA23801F83E147E0000137C13FC14FCEB7CF8A36D5A133F6D5AA31E1E7F
9D21>I<00FC90391FC001F8143F007E16F0EDE003143D6C017D14E0913879F007A26C01
F914C0D980F8130F15F814F0D80FC11580ED781F157C000701E0140013E36F5A0003153E
14C0A201F7EB1E7E00019038801F7CA2150F00001578D9FF0013F815076D5C137E2D1E7F
9D30>I<007E14FC6C1301391F8003F89038C007F0D80FE013E03907F00FC00003EB1F80
3901F83F006C6C5AEB7E7E6D5A6D5A5C6D5A6D5A497E80497EEB3EFCEB7C7EEBFC3F3901
F81F803803F00F01E013C00007EB07E0390FC003F0391F8001F8D83F0013FC48EB00FE00
FE147F201E809D21>I<007FB512C0A41580C7EA7F0014FE13015C495A495A495A131F5C
495A49C7FC13FE12015B485A485A485A121F5B485A48B512C0B6FCA41A1E7E9D1F>122
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmss12 12 23
/Fh 23 121 df<027FEB3FC0903801FFC013075B5B5B14C190387F804091C9FC5B5BA212
01AEB638C03FC0A6D801FEC7FCB3B3A22A467EC534>12 D<EB07FE90387FFFC00003B57E
000F14F84880819038F803FFEB8001001EC713800018147F0010EC3FC0C8FC16E0151FA8
EC7FFF010FB5FC133F48B6FC5A000FEBF01F381FFE00EA3FF8EA7FE05B485A90C7FCA415
3F7F6C6C137F9038E001FFEBF80F6CB6FC7E15DF6C141F000313F8C60180C7FC232F7CAD
2F>97 D<B4FCB3A6EC3FC0903803FFF0010F13FC013F7F497F90B61280D9FE0313C0D9F0
0013E049137F49EB1FF05B90C7EA0FF8150716FC1503A316FE1501AAED03FCA3150716F8
150F16F06D131F6DEB3FE06D137F9039F001FFC0D9FC07138090B612006D5B6D5B6D5B01
0713E0C790C7FC274679C432>I<EC7FE0903803FFFE010FEBFF80013F14E04914F090B6
FC48EB801F3A03FE0003E04848130048481460491400485AA2485AA2485AA390C9FC5AAA
6C7EA37F123FA26C6C14106D14306C6C14F06C6C13016C6C13079038FF803F6C90B5FC6C
6C14E06D14806D1400010713F8010013C0242F7DAD2B>I<ED01FEB3A6EB03FC90380FFF
C1013F13F14913F948B6FC5AECC07F48EB001FD80FFC1307484813035B48481301A25B12
7F5BA348C7FCAA7F127FA36C7EA26D13036C7E1507D80FFC130F6C6C133F9038FF80FF6C
90B5FC6C14FD6C14F1013F13E16D1381D903FCC7FC27467DC432>I<EB01FE903807FFC0
011F13F0017F7F90B57E488048EB03FF3807FC004848EB7F8049133F4848EB1FC0150F48
4814E0491307127FA290C7FCED03F0B7FCA648C9FCA37EA27EA27F123F7FA26C7E6D1410
6C6C14706C6CEB01F06C6C13079038FF803F6C90B5FC6C15E0013F14806DEBFE00010713
F8010013C0242F7DAD2B>I<EC1FF0ECFFFE5B13075B5B90383FF01EECC00290387F8000
91C7FC13FEA21201AEB61280A6D801FEC7FCB3B3A21F467EC51E>I<D901FCEB07E09039
0FFF80FF013F13E74990B512F090B7FC5A2603FE03EBC0002607F80090C7FC497F000F81
49133FA248486D7EA86C6C495AA26D137F000792C7FC6D5B3903FE03FE90B55A485C485C
5D018F1380261F81FCC8FC0180C9FCA47F7F6CB512F8EDFF806C15E016F86C8148814881
5A273FE0000F1380D87F80130090C8127F48ED3FC048151FA5007FED3F806D147F6C6CEC
FF0001F813076CB4EB3FFE6C90B55A6C5D000115E06C6C1480011F49C7FC010113E02C42
7DAC31>I<B4FCB3A6EC7FC0903801FFF801077F011F7F497F491480EBFE03D9F80013C0
49137F49133F4914E0151F5BA390C7FCB3AC234579C432>I<EAFF80A9C7FCB0EA7F80B3
B3A809457AC417>I<EB01FFA990C7FCB014FFB3B3B2EB01FE1240EA7007387F3FFCB5FC
14F814F06C13E0000F13803801FE00185986C41A>I<B4FCB3A7ED7FE0EDFFC04A13804A
13004A5A4A5A4A5A5D4A5A4A5A4A5A4990C7FC495A1307495A495A495A137F13FF8080A2
EBFDFEEBF9FF13F0496C7E01C07F143F01807F496C7E140F8114076E7E8114016E7E1680
157FED3FC016E0151FED0FF016F8254579C42F>I<12FFB3B3B3AF084579C417>I<DA7FC0
EB0FF827FF01FFF8EB3FFF01076D90B51280011FD9FE0314C0496D4814E049028F14F0D9
FE0390389FC07FD9F8009039FF001FF8496D48130F496D481307494A14FC031F1403495C
A390C75BB3AC3E2D79AC4D>I<EC7FC039FF01FFF801077F011F7F497F491480EBFE03D9
F80013C049137F49133F4914E0151F5BA390C7FCB3AC232D79AC32>I<EC7F80903803FF
F0010F13FC013F13FF498090B67E4801C07F3A03FE001FF048486D7E48486D7E49130348
486D7E491300003F814980007F1680A390C8123F4816C0AA6C6CEC7F80A36D14FF003F16
006D5B001F5D6D13036C6C495A6C6C495A6D131F3A03FFC0FFF06C90B55A6C5D013F91C7
FC6D5B010313F09038007F802A2F7DAD31>I<EC3FC039FF03FFF0010F13FC013F7F497F
90B61280D9FE0713C0D9F00013E049137F49EB3FF049131F90C7EA0FF8A2ED07FCA21503
A216FE1501AAED03FCA3150716F8150FED1FF07F6DEB3FE06D13FF6D4813C0D9FC0F1380
90B612006D5B6D5B6D5B010713E0010090C7FC91C8FCB2274079AC32>I<141F00FE13FF
13035B131F5B5BEBFFF0148038FFFE005B5B5B5B5BA25BA390C7FCB3A8182D79AC21>
114 D<EB3FF848B5FC4814C0000F14F04814F85AEBE00F397F8001F090C7127000FE1430
1500A57E7FEA7FE013FC383FFFE06C13FC14FF000714806C14E06C14F06C7E010713F890
38003FFC14071403EC01FEA21400A412400070EB01FC1278007E130339FFE01FF890B512
F0A26C14E0001F14800003EBFE0038003FF01F2F7DAD25>I<EA01FEADB612F0A6D801FE
C7FCB3AB7F150815386CEB81F8ECFFFC7FA26D13F06D138090380FF8001E3A7EB823>I<
B4EC1FE0B3AE153FA2157FA26D13FF1403387FE00F90B6FC6C14DF151F6C13FC000713F0
000190C8FC232D79AB32>I<B415FFA27F007FEC01FEA27F003FEC03FCA27F001FEC07F8
A26C6C14F0150FA26C6CEB1FE0A36C6CEB3FC0A27F0001EC7F80A26C6C14005DA26D5B14
81A2013F5B14C114C3011F5B14E314E7010F5BA201075B14F7A26DB45AA36D5BA2282C7E
AB2D>I<D87FC0EC7FC06C6CECFF80001F16006D5B6C6C495A6C6C495A6C6C5C00014A5A
6C6C131F6E485AD97FC05B6D6C485A011F49C7FCEB0FF1903807FBFEECFFFC6D5B6D5B7F
6E5A5D6E5A4A7E4A7E81497F903803FBFCEB07F990380FF0FE4A7E011F6D7E49486C7E49
486C7EEBFF006F7E48486D7E48488000076E7E48481301496D7E48481580003FED7FC048
48EC3FE04848EC1FF02C2C80AB2D>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt12 12 21
/Fi 21 122 df<EB03FF011F13E0017F13FC48B57E48ECFF804815C0260FFE0313E03A1F
F0007FF049EB1FF84848130F49EB03FC127F90C7EA01FE4814005A6C15FF167FA3127E12
3CC9FCA216FF16FEA2150116FC150316F81507ED0FF0ED1FE0153F16C0ED7F80EDFF004A
5AEC07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495AEB07F8EB1FF0495A495A495A4890C8FC
4848143E4848147FEA0FF0485A48B7FCB8FCA37E6C15FE283E7BBD33>50
D<0007B612F04815F85AA316F001C0C8FCB0ECFFC001C713F801DF7F90B6FC168016C002
8013E09039FC001FF001F0EB0FF849130749EB03FC6C4813016CC713FEC9FCA216FF167F
A41218127EA2B415FF16FEA24814016C15FC6C14036DEB07F86D130F6C6CEB1FF06C6CEB
7FE09039FE03FFC06CB612806C150000015C6C14F8013F13E0010390C7FC283E7BBC33>
53 D<EB1FFC90B57E000314E048804814FC48809038F007FFEBE0016E7F153F6C48806C
48131FC87F150FA5EC0FFF49B5FC131F137F48B6FC0007140F4813C0381FFC00EA3FF0EA
7FC05B48C7FC5AA56C141F7E6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14F36C14
C1C69138003FF0D91FF090C7FC2D2E7BAC33>97 D<ECFFF0010713FE011FEBFF804914C0
4914E048B612F048EBC01F9038FE000F485A485A4848EB07E049EB03C0484890C7FC5BA2
127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03F86C7E6D13076C6C14F06C6C130F01
FFEB1FE06CEBE07F6C90B512C06C1580013F14006D13FC01075B010013C0252E79AC33>
99 D<ED7FF84B7E5CA280157F1501ABEB01FF010713C1011F13F1017F13F990B6FC5A48
13813907FE003FD80FF8131F49130F48481307491303123F491301127F90C7FCA25A5AA9
7E7E15037F123F6D1307A26C6C130F6D131F6C6C133F6C6C137F2603FF81B512F091B612
F8C602FD13FC6D13F96D01E113F8010F018013F0D901FEC8FC2E3E7DBC33>I<ECFF8001
0713F0011F13FC497F90B6FC48158048018013C03A07FE003FE001F8EB0FF04848130748
4814F8491303003F15FC491301127F90C7FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C
7E167C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C9038C03FF86C90B512F06D14E0
6D14C0010F1400010313FC9038007FE0272E7BAC33>I<ED3FE0913801FFFC020713FE14
1F4A13FF5CECFFC015004948137E4A133C010314005CA8003FB612F84815FCB7FCA36C15
F8260003F8C7FCB3AD003FB612804815C0A46C1580283E7DBD33>I<D901FEEB1FE0903A
0FFFC0FFF0013F01F313F84990B512FC90B7FC5A48010313E12607FC00EB80F849017F13
60484890383FC00049131FA2001F8149130FA66D131F000F5DA26D133F6C6C495A6D13FF
2603FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FEC8FC0180C9FCA27FA26C7E7F90B5
12FC6CECFFC06C15F0000715FC4815FF4816809038E0000748489038007FC090C8EA1FE0
48150F007E150700FE16F0481503A56C1507007E16E0007F150F6C6CEC1FC001E0147FD8
1FF8903801FF80270FFF801F13006C90B55A6C5DC615F0013F14C0010F91C7FC010013F0
2E447DAB33>I<EA3FFC487E12FFA2127F123F1200AB4AB4FC020713C0021F13F0027F7F
91B5FC90B67EED07FEECF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC48
6D4813FEB56C4813FFA26C496C13FE6C496C13FC303D7FBC33>I<14E0EB03F8A2497EA3
6D5AA2EB00E091C8FCAA383FFFF8487FA47EEA0001B3AD007FB612C0B712E016F0A216E0
6C15C0243E78BD33>I<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F84815FCB712
FEA26C15FC6C15F8273D7ABC33>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B5
00CF7F15DF92B57E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013F8A4
01E013F0B3A53C7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>I<EB
01FE90380FFFC0013F13F0497F90B57E488048EB03FF2607FC0013804848EB7FC049133F
4848EB1FE049130F4848EB07F0A2007F15F890C71203A300FEEC01FCAA6C14036C15F8A2
6D1307003F15F06D130FA26C6CEB1FE06D133F6C6CEB7FC06C6CEBFF802603FF0313006C
EBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7AAC33>111 D<EC01FE3A3FFC0FFFC0
486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002E0EB7FC04AEB3FE0
4A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717F06E130F17
E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5B6E13E0020F1380DA
03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>I<ED03FE3B7FFF801F
FF80B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF09139FFC007E092
388003C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>114
D<90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE147F5A153F
A37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F13FF0100
1480020713C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E06D130F6D
EB3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC
33>I<EB03C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE3F80
A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC2938
7EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A75EA25DA2
6D5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC010001C0
C7FC302C7FAA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F86C496C13
F0D801F8C7EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007011F5CA2
ECC00F010F5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01005BA214
FF6E5AA36E5AA26E5A6E5A2E2B7EAA33>I<3B7FFF8007FFF8B56C4813FC6E5AA24A7E6C
496C13F8D80FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1FE0A23A01
F83FF07EA3EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D137EECF03E
A2017F133FA26D486C5AA3ECC00F90390F8007C02E2B7EAA33>I<3B7FFF801FFFE0B56C
4813F06E4813F8A24A6C13F06C496C13E0D803F8C7EAFC00000114015E7F000014036D5C
137EA2017F495A7FA26E485A131FA26D6C485AA214E0010749C7FCA214F01303157EEB01
F8A2157C010013FC14FC5D147C147DEC3FF0A36E5AA36E5AA2141F5DA2143F92C8FCA314
7EA214FE003F5B1301387F81F81383EB87F0139FEBFFE06C5B5C6C90C9FCEA0FFCEA03F0
2D427DAA33>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmex10 10 5
/Fj 5 89 df<177C17FCEE01F8A2EE03F0EE07E0EE0FC0A2EE1F80EE3F005E167E5E1501
5E15034B5A5E150F5E151F4B5AA24BC7FCA215FEA24A5AA24A5AA24A5AA2140F5D141F5D
143F5DA2147F92C8FC5CA25C13015C1303A25C1307A3495AA3495AA3133F5CA3137F5CA3
13FF91C9FCA35A5BA31203A25BA31207A35BA3120FA45BA2121FA65BA2123FA85BA2127F
AE5B12FFB3A62E95688149>48 D<12F87E127EA27E6C7E6C7EA26C7E6C7E7F12016C7E7F
137E137F6D7E131F80130F806D7EA26D7EA26D7EA26D7EA2147FA26E7EA281141F81140F
811407A281140381A2140181140081A28182A36F7EA36F7EA382150FA3821507A3821503
A3821501A382A281A31780A3167FA317C0A4163FA217E0A6161FA217F0A8160FA217F8AE
160717FCB3A62E957E8149>I<B47EB3A6127F7FAE123FA27FA8121FA27FA6120FA27FA4
1207A37FA31203A37FA21201A37F7EA380137FA380133FA380131FA36D7EA36D7EA31303
80A2130180130080A28081143FA281141F81140F811407A26E7EA26E7EA26E7EA2157FA2
6F7EA26F7E150F821507826F7E1501821500167E167F82EE1F80EE0FC0A2EE07E0EE03F0
EE01F8A2EE00FC177C2E95688349>64 D<EE07FCB3A617F8160FAE17F0A2161FA817E0A2
163FA617C0A2167FA41780A316FFA31700A35DA25EA315035EA315075EA3150F5EA3151F
5EA34B5AA34B5AA393C7FC5DA25D14015D1403A25D14075DA2140F5D141F5D143F5DA24A
C8FCA214FEA2495AA2495AA2495AA2495A5C131F5C133F49C9FC137E13FE5B485A12035B
485A485AA2485A48CAFC127EA25A5A2E957E8349>I<BF12E08AA38A6C90CCFC0900806C
6D19076C6D07007F6C6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6C
F303C06D6D1A01F600E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E
7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F7F6F7FA26F7F6F7F81836F7F6F7F167F83707F70
7F8284707F707FA2707F82715A60173F715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C
5A5F163F4CCEFC16FE4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B18
4A481B304A5A4B1B70023F1C604ACF12E002FE1B014948F303C049481B074948F30F801E
1F49481B7F4948F3FF0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A
48BEFC48655AA248655ABFFC666D747B7F78>88 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi6 6 9
/Fk 9 119 df<EB1F80EBFFE03803E07038078030EA1F00123E123C007C1360387807C0
B51280EBF80000F8C7FC5AA41408141800781370003813E0381E07C0380FFF00EA03F815
177D951D>101 D<1338137CA2137813701300A7EA0780EA1FC0EA38E01230EA60F0EAC1
E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121CEA1E70EA0FE0EA07800F23
7DA116>105 D<1418143C147CA214381400A7EB0780EB1FE01338EB60F013C0A2EA0180
A2380001E0A4EB03C0A4EB0780A4EB0F00A4131EA21238EA783CEAF8381378EA70F0EA7F
C0001FC7FC162D81A119>I<000F017E13FC3A1F81FF83FF3B31C383C707803A61EE03CC
039026EC01F813C0D8C1F813F013F001E013E00003903903C0078013C0A2EE0F00390780
0780A2EE1E041706270F000F00130C163C1718A2001E011EEB1C70EE1FE0000C010CEB07
802F177D9536>109 D<000F13FC381FC3FF3931C707803861EC0301F813C0EAC1F0A213
E03903C00780A3EC0F00EA0780A2EC1E041506D80F00130C143C15181538001EEB1C70EC
1FE0000CEB07801F177D9526>I<3801E01F3903F07FC0390639C1E0390C3F80F0EB3E00
001814F8013C137815F8C65AA49038F001F0A3EC03E0D801E013C0EBF00715809038F80F
003803DC3CEBCFF8EBC7E001C0C7FC485AA448C8FCA2EA7FF012FF1D20809520>112
D<380F01F0381FC7F83831CE1CEA61F8EBF03C00C1137C13E014383803C000A4485AA448
C7FCA4121EA2120C16177D951D>114 D<EB3F80EBFFE03801E0F038038030EB00704813
F0A2EB8040EBC00013FE3803FF806C13C038003FE0EB03F0EA3000127800F813E0A24813
C0EA600138780F80383FFE00EA07F814177D951D>I<3807800E380FE01FEA38F0123000
60130F12C01407EAC1E000011306EA03C0A33807800CA214081418A21430146014C0EA03
C13801FF00EA007E18177D951F>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr6 6 2
/Fl 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi8 8 21
/Fm 21 119 df<123C127E12FFA4127E123C08087A8714>58 D<123C127EB4FCA21380A2
127F123D1201A312031300A25A1206120E5A5A5A126009157A8714>I<EE01C01607161F
EE7F00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC0FC0023FC8FC14FCEB03F8EB0F
E0EB3F8001FEC9FCEA03F8EA0FE0EA3F8000FECAFC12F812FEEA3F80EA0FE0EA03F8EA00
FEEB3F80EB0FE0EB03F8EB00FC143FEC0FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FC
ED007FEE1FC0160716012A2B7AA537>I<15C0140114031580A214071500A25C140EA214
1E141CA2143C143814781470A214F05CA213015CA213035C130791C7FCA25B130EA2131E
131CA2133C1338A21378137013F05BA212015BA212035BA2120790C8FC5A120EA2121E12
1CA2123C1238A212781270A212F05AA21A437CB123>I<12E012F812FEEA3F80EA0FE0EA
03F8EA00FEEB3F80EB0FE0EB03F8EB00FC143FEC0FC0EC07F0EC01FCEC007FED1FC0ED07
F0ED01FCED007FEE1FC01607161FEE7F00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0
EC0FC0023FC8FC14FCEB03F8EB0FE0EB3F8001FEC9FCEA03F8EA0FE0EA3F8000FECAFC12
F812E02A2B7AA537>I<013FB6FC17C0903A00FE0007F0EE01F84AEB00FC177E1301177F
5CA21303177E4A14FEA20107EC01FC17F84AEB03F0EE07E0010FEC1FC0EE7F009138C003
FC91B55A4914FE9139C0003F804AEB0FC017E0013F140717F091C7FC16035BA2017E1407
A201FE15E0160F4915C0161F0001ED3F80EE7F004914FEED03F80003EC0FF0B712C003FC
C7FC302D7CAC35>66 D<013FB6FC17E0903A00FE0007F0EE01FC4AEB007EA2010181A25C
1880010316005F5CA2010715FEA24A5C4C5A010F4A5A4C5A4AEB1F8004FFC7FC91B512F8
4914C00280C9FCA3133F91CAFCA35B137EA313FE5BA312015BA21203B512E0A2312D7DAC
2D>80 D<EB07E0EB1FF890387C1CE0EBF80D3801F00F3803E007EA07C0120FD81F8013C0
A2EA3F00140F481480127EA2141F00FE14005AA2EC3F02EC3E06A25AEC7E0E007CEBFE0C
14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C01F1F7D9D25>97
D<EB03F8EB0FFE90383E0780EBF803D801F013C03803E001EA07C0000F1303D81F801380
1407393F000F00141E387F01FCEBFFF091C7FC007EC8FC12FE5AA4127C156015E0EC01C0
6CEB0380EC0F006C131C380F81F83803FFE0C648C7FC1B1F7D9D21>101
D<14FCEB03FF90380F839C90381F01BC013E13FCEB7C005B1201485A15F8485A1401120F
01C013F0A21403121F018013E0A21407A215C0A2000F130F141F0007EB3F80EBC07F3803
E1FF3800FF9F90383E1F0013005CA2143EA2147E0038137C00FC13FC5C495A38F807E038
F00F80D87FFEC7FCEA1FF81E2C7E9D22>103 D<1307EB0F80EB1FC0A2EB0F80EB070090
C7FCA9EA01E0EA07F8EA0E3CEA1C3E123812301270EA607EEAE07C12C013FC485A120012
015B12035BA21207EBC04014C0120F13801381381F01801303EB0700EA0F06131EEA07F8
EA01F0122E7EAC18>105 D<15E0EC01F01403A3EC01C091C7FCA9147CEB03FE9038078F
80EB0E07131C013813C01330EB700F0160138013E013C0EB801F13001500A25CA2143EA2
147EA2147CA214FCA25CA21301A25CA21303A25CA2130700385BEAFC0F5C49C7FCEAF83E
EAF0F8EA7FF0EA1F801C3B81AC1D>I<131FEA03FFA2EA003FA2133EA2137EA2137CA213
FCA25BA2120115F89038F003FCEC0F0E0003EB1C1EEC387EEBE07014E03807E1C09038E3
803849C7FC13CEEA0FDC13F8A2EBFF80381F9FE0EB83F0EB01F81300481404150C123EA2
007E141C1518007CEBF038ECF83000FC1470EC78E048EB3FC00070EB0F801F2F7DAD25>
I<137CEA0FFCA21200A213F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380
A2121FA21300A25AA2123EA2127EA2127CA2EAFC08131812F8A21338133012F01370EAF8
60EA78E0EA3FC0EA0F000E2F7DAD15>I<27078007F0137E3C1FE01FFC03FF803C18F078
1F0783E03B3878E00F1E01263079C001B87F26707F8013B00060010013F001FE14E000E0
15C0485A4914800081021F130300015F491400A200034A13076049133E170F0007027EEC
8080188149017C131F1801000F02FCEB3F03053E130049495C180E001F0101EC1E0C183C
010049EB0FF0000E6D48EB03E0391F7E9D3E>I<3907C007E0391FE03FF83918F8783E39
3879E01E39307B801F38707F00126013FEEAE0FC12C05B00815C0001143E5BA20003147E
157C5B15FC0007ECF8081618EBC00115F0000F1538913803E0300180147016E0001F0101
13C015E390C7EAFF00000E143E251F7E9D2B>I<90387C01F89038FE07FE3901CF8E0F3A
03879C0780D907B813C0000713F000069038E003E0EB0FC0000E1380120CA2D8081F1307
12001400A249130F16C0133EA2017EEB1F80A2017C14005D01FC133E5D15FC6D485A3901
FF03E09038FB87C0D9F1FFC7FCEBF0FC000390C8FCA25BA21207A25BA2120FA2EAFFFCA2
232B829D24>112 D<EB07E0EB3FF8EB781EEBF0063801E0073803C00F141FA20007131E
140CEBE00013F8EBFF806C13E06C13F06C13F8EB3FFC13011300147C0078133C12FCA214
7C48137800E013F814F0386001E0387807C0381FFF00EA07F8181F7C9D21>115
D<130E131FA25BA2133EA2137EA2137CA213FCA2B512F8A23801F800A25BA21203A25BA2
1207A25BA2120FA25BA2001F1310143013001470146014E0381E01C0EB0380381F0700EA
0F0EEA07FCEA01F0152B7EA919>I<EA01E0D807F8130ED80E3C131FD81C3E5B0038143E
12301270D8607E137ED8E07C137C12C013FC484813FC00005C12015B140100035C13E0A2
020313200007ECE06013C0A216E0020713C00003EB0FC09038E01FC191383BE1803901F0
71E33A007FE0FF0090381F803C231F7E9D29>I<D801E01370D807F813F8380E3C01D81C
3E13FC1238003013000070147CEA607ED8E07C133812C013FC485A0000143012015B1570
000314605B15E015C01207EBC00115801403EC070000031306EBE00E00015BEBF0783800
7FE0EB1F801E1F7E9D22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy10 12 12
/Fn 12 106 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B0B789E1C>I<49B4FC010F13E0013F13F8497F48B6FC48
15804815C04815E04815F0A24815F84815FCA3B712FEAA6C15FCA36C15F86C15F0A26C15
E06C15C06C15806C15006C6C13FC6D5B010F13E0010190C7FC27267BAB32>15
D<19E0F003F0180FF03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8
EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CA
FCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FC
EA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007F
E0ED1FF8ED07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE94
3800FF80F03FE0F00FF01803F000E01900B0007FB912E0BA12F0A26C18E03C4E78BE4D>
20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038
007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF80EE3FE0EE0FF8
EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF0A2F03FE0F0FF8094
3803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED
7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA
07FCEA1FF0EA7FC048CCFC12FC1270CDFCB0007FB912E0BA12F0A26C18E03C4E78BE4D>
I<92B6FC02071580143F91B7120001030180C8FCD907FCC9FCEB1FE0EB3F80017ECAFC5B
485A485A485A5B485A121F90CBFC123EA2123C127CA2127812F8A25AA2B9FC1880A21800
00F0CBFCA27EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E6D7EEB1F
E0EB07FC6DB47E010090B6FC023F1580140702001500313A78B542>50
D<1706170F171FA2173EA2177CA217F8A2EE01F0A2EE03E0A2EE07C0A2EE0F80A2EE1F00
A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2153EA25DA25DA24A5AA24A5A
A24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133E
A25BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A1260305C72C600
>54 D<0060171800F0173C6C177CA200781778007C17F8A2003C17F0003E1601A26CEE03
E0A26C17C06D1507A2000717806D150FA26C6CED1F00A20001161E6D153EA20000163C90
B712FCA26D5DA2013CC85A013E1401A2011E5D011F1403A26D5D6E1307A26D6C495AA201
0392C7FC6E5BA20101141E6E133EA26D6C5BA202781378027C13F8A2023C5BEC3E01A26E
485AA2020F5B1587A202075B15CFA26EB4C8FCA26E5AA36E5AA315781530364780C437>
56 D<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495AA249
5A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F6D7EA2
6D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F236479CA32>102
D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E
6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495A
B3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC236479CA32>I<140C14
1E143EA2143C147CA214F8A214F01301A2EB03E0A214C01307A2EB0F80A214005BA2133E
A2133C137CA2137813F8A2485AA25B1203A2485AA25B120FA248C7FCA2121E123EA25AA2
127812F8A41278127CA27EA2121E121FA26C7EA212077FA26C7EA212017FA26C7EA21378
137CA2133C133EA27FA27F1480A2EB07C0A2130314E0A2EB01F0A2130014F8A2147CA214
3C143EA2141E140C176476CA27>I<126012F07EA21278127CA27EA2121E121FA26C7EA2
12077FA26C7EA212017FA26C7EA21378137CA2133C133EA27FA27F1480A2EB07C0A21303
14E0A2EB01F0A2130014F8A2147CA2143C143EA4143C147CA214F8A214F01301A2EB03E0
A214C01307A2EB0F80A214005BA2133EA2133C137CA2137813F8A2485AA25B1203A2485A
A25B120FA248C7FCA2121E123EA25AA2127812F8A25A126017647BCA27>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmmi12 12 20
/Fo 20 123 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>58
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
1206120E5A5A5A12600B1D78891B>I<1618163C167CA2167816F8A216F01501A216E015
03A216C01507A21680150FA2ED1F00A2151E153EA2153C157CA2157815F8A25D1401A24A
5AA25D1407A25D140FA292C7FC5CA2141E143EA2143C147CA25CA25C1301A25C1303A25C
1307A25C130FA291C8FC5BA2133EA2133C137CA2137813F8A25B1201A25B1203A2485AA2
5B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A126026647BCA31>61
D<91B912FCA3020001C0C7123F6F48EC03F803FF1501190093C91278A21A385C5DA30203
17305DA314074B1460A218E0020F4B13005DA21701021F5D4B13031707170F023F027FC8
FC92B6FCA391397FC0007E4B131EA2170E02FF140C92C7FCA2171C49031813035C611906
010392C7FC4A160E190C191C010717184A163819301970130F4A5E180161011F16034A15
074E5A013F163F4EC7FC4AEC03FF01FFED3FFEB9FCA26046447CC348>69
D<4CB46C1318043F01F013384BB512FC0307D9007E1378DB1FF090380F80F0DB7F80EB03
C1DA01FEC7EA01C34A48EC00E7DA0FF0ED7FE04A48153F4A5A02FFC9121F494817C04948
160F495A130F4A178049481607495A137F4948170091CAFC5A485A1906485AA2485A96C7
FC121F5BA2123F5BA3127F5BA4485A4CB612805EA293C7EBE000725AA3007F60A218FF96
C7FCA26C7E5F606C7EA2000F16036D5E6C6C15070003160F6C6C151F6C6CED3DF8D97F80
14786D6CEB01E0D91FF0903807C078D907FE90387F00700101B500FC1330D9003F01F090
C8FC020790CAFC45487CC54D>71 D<027FB512F8A217F09139007FF000ED3FC0157FA25E
A315FF93C7FCA35C5DA314035DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF
92C8FCA35B5CA313035CA313075CA3130F5CA2131FA25CEB7FF0007FB512F0B6FCA22D44
7DC32B>73 D<007FB56C91381FFFF8B65DA2000101E0C8000313006C0180ED01FCF000F0
614E5AA2017F4C5A96C7FC1806A2606E5DA2013F5E1870186060A24D5A6E4AC8FCA2011F
1506170E170C5FA26E5C5FA2010F5D16015F4CC9FCA26E13065EA201075C5EA25E16E06E
5B4B5A13034BCAFC1506A25D151CECFE185D13015D5DA26E5AA292CBFC5C13005C5CA25C
A25C45467BC339>86 D<EC0FC0EC7FF0903901F8381C903907E01C7E90380FC00E90393F
0007FE496D5A13FE485A49130100035D485A120F491303001F5DA2485A1507007F5D5BA2
150F00FF5D90C7FCA2151F5E5AA2033F1330EE00701760A24B13E017C015FE007E130102
031301003ED9073E1380003F010E13036C011C14006C6C486C5A3A07C0F00F0E3A01FFC0
07FC3A007F0001F02C2D7CAB33>97 D<EC07F8EC3FFE903901FC0780903903F003C09039
0FC001E090381F8000017FC7FC01FE1470485A484814F0000715E05B000F1401484814C0
15034848EB0780ED1F0015FC007FEB1FF090B5128002F0C7FC0180C8FC12FF90C9FCA55A
A41618007E15381670007F15E06CEC01C0ED03806CEC07006C6C131E6D13383907E001F0
3901F00FC026007FFEC7FCEB1FF0252D7CAB2D>101 D<141E143F5C5CA3147E143891C7
FCAE133EEBFF803801C3C0380781E0380601F0120E121CEA180312381230A2EA70070060
5BA2EAE00F00C05BEA001F5CA2133F91C7FCA25B137E13FE5BA212015BEC038000031400
13F01207495A1406140E140CEBC01C141814385C00035BEBE1C0C6B45A013EC7FC19437D
C121>105 D<163C16FEA21501A316FCED00701600AE15FCEC03FF91380F0780021C13C0
91383803E0147014E014C01301EC8007130314005B0106130F130E010C14C090C7FC151F
A21680A2153FA21600A25DA2157EA215FEA25DA21401A25DA21403A25DA21407A25DA214
0FA25DA2141F5DA2143F001C91C7FC127F48137E5CA248485AEB03E038F807C038781F80
D83FFEC8FCEA07F0275681C128>I<14FE137FA3EB01FC13001301A25CA21303A25CA213
07A25CA2130FA25CA2131FA25C163F013FECFFC0923803C0E09138000703ED1E0F491338
ED701F017E13E0EC01C001FE018013C00203EB07004948C8FC140E00015B5C495A5C3803
FBC001FFC9FC8014F83807F1FE9038F03F809038E00FE06E7E000F130381EBC001A2001F
ED01C017801380A2003F15031700010013F05E481506160E007E150C161C00FE01005BED
787048EC3FE00038EC0F802B467BC433>I<01F8D903FCEC7F80D803FED91FFF903803FF
E0D8071F903B7C0FC00F81F83E0E0F80E007E01C00FC001C9026C3C0030178137C271807
C700D9F0E0137E02CE902601F1C0133E003801DCDAFB80133F003001D892C7FCD90FF814
FF0070495C0060495CA200E04949485CD8C01F187E4A5C1200040715FE013F6091C75BA2
040F14014960017E5D1903041F5D13FE494B130762043F160E0001060F130C4992C713C0
191F4CED801C00031A1849027E1638F2003004FE167000071A60494A16E0F201C0030192
380F0380000FF18700494AEC03FED80380D90070EC00F84F2D7DAB55>109
D<01F8EB03FCD803FEEB1FFFD8071F90387C0FC03B0E0F80E007E03A0C07C3C003001CD9
C7007F001801CE1301003801DC80003013D8EB0FF800705B00605BA200E0491303D8C01F
5D5C12001607013F5D91C7FCA2160F495D137E161F5F13FE49143F94C7FC187000014B13
6049147E16FE4C13E0000317C049150104F81380170300071700495D170EEE781C000FED
7C3849EC1FF0D80380EC07C0342D7DAB3A>I<EC0FF0EC7FFE903901F00F809039078001
C049C712E0011E14605BED01F0491307A201F8EB0FE05B7FED03806D90C7FC7F7F14F86D
B47E15E06D13F86D7F01077F1300EC07FF140081ED3F80151F120E003FEC0F00487EA25D
48C7121EA200FC5C12605D00705C6C495A6CEB07C0260F803FC7FC3803FFFC38007FE024
2D7BAB2E>115 D<141C147EA314FE5CA313015CA313035CA313075CA2007FB512FCB6FC
15F839000FC000A2131F5CA3133F91C7FCA35B137EA313FE5BA312015BA312035BA21570
000714605B15E015C0000F130101C013801403EC070000071306140E5C6C6C5A000113F0
3800FFC0013FC7FC1E3F7EBD23>I<013E140ED9FF80EB3F802603C3C0137F380703E038
0601F0120E121CD81803143F0038151F0030150FA2D87007140700605BA2D8E00F150000
C0497FEA001F4A5B1606133F91C7FC160E49140C137EA2161C01FE14185B163816301670
4848146016E05E150100005D15036D49C7FC1506017C130E017E5B6D137890380F81E06D
B45AD900FEC8FC292D7DAB2F>118 D<02FCEB07E0903A03FF801FFC903A0F07C0781E90
3A1C03E0E01F903A3801F1C07FD9700013804901FB13FF4848EBFF00495B000316FE90C7
1438484A130012061401000E5C120CC7FC14035DA314075DA3140F5DA3021F143817305D
1770023F1460121E003F16E0267F807FEB01C0026F148000FF01EF1303D901CFEB070000
FE903887C00E267C03835B3A3C0F01E0783A1FFC00FFE0D803F0EB3F80302D7EAB37>
120 D<133ED9FF8014E02603C3C0EB03F0380703E0380601F0000E1507001C16E0EA1803
12380030150F007016C0EA60075C161FD8E00F158000C05BEA001F4A133F1700133F91C7
FC5E49147E137EA216FE01FE5C5BA215015E485AA215035EA200001407150F6D5C017C13
1F153F6D13FF90391F03CFC0903807FF8F903801FC0F90C7121F5EA2153F93C7FCD807C0
5BD81FE0137E5DA24848485A4A5A01805B39380007C00018495A001C49C8FC6C137C3807
81F83803FFE0C66CC9FC2C407DAB30>I<027CEB018049B413034901801300010F6D5A49
EBE00E6F5A90393F03F838903978007EF80170EB1FF00160EB01E001E05C49495A90C748
C7FC150E5D5D5D5D4A5A4A5A4AC8FC140E5C5C5C5CEB03C049C9FC130E49141C4914185B
49143848481430491470D8039014F048B4495A3A0FEFC007C0391E03F01FD81C01B55A48
6C91C7FC485C00606D5A00E0EB3FF048EB0FC0292D7CAB2D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr10 10 30
/Fp 30 121 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E>12 D<146014E0EB01C0EB0380EB0700130E131E5B5B
A25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2
121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E0146013
5278BD20>40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E
131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E13
3C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<121C127F
EAFF80A5EA7F00121C0909798817>46 D<1538A3157CA315FEA34A7EA34A6C7EA202077F
EC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F15
01A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E
7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049
C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E04915
0F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1F
E0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D
6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA
41>79 D<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC
17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16
F091C9FCB3A5487FB6FCA330397DB839>I<D90FF813C090383FFE0190B512813903F807
E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A3
6C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F14
80010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA2
16F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFF
F8010F13E0D8C00190C7FC253D7CBA2E>83 D<EB1FE0EBFFFC3803E03F3907000F80390F
8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA
0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC0
1E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F12
03B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB
01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E0
01C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90
381FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F903800
01F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C
13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FF
A3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131F
A24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C13
7F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07
F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C712
7E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C1306
0007140E6D131CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525
>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FC
ADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890
393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C
7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120F
A213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E14034814
0116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901
FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3F
FCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500
C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312
071203B3AA487EB512C0A312387EB717>I<EA03F012FFA3120F1203B1913801FFFCA391
38007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE
7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5
FCA3283A7EB92C>107 D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<
2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800F
C7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0
B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A
0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E
>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F4848EB0F8000
1F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C
6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903
FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A07F7000F
C0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB
03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8
FCAB487EB512C0A328357EA42E>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380F
E707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>
114 D<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FC
EA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C
1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<13
18A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC01
1580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3
000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03
C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07
E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F13
30A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227
257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023E
EB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15
830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2
D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<
B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC07001
0F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F0
90380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90
B51280A329247FA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmtt10 10 36
/Fq 36 126 df<121C127FEAFF80B1EA7F00AF123EC7FCA8121C127FA2EAFF80A3EA7F00
A2121C09346FB32C>33 D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE
485A485A5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA2
7F121FA26C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC1301
13001438164272B92C>40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F
1480131F14C0130FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0
A2130714E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC
5A5A1270164279B92C>I<147814FCAF007FB612F0B712F8A46C15F0C700FCC7FCAF1478
25267DAB2C>43 D<007FB6FCB71280A46C150021067B9B2C>45 D<EB03F8EB0FFE90383F
FF80497F90B57E3901FE0FF03903F803F848486C7EEBE0004848137EA248487FA248C7EA
1F80A2003E140F007E15C0A3007C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C6C
EB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFE
C7FCEB03F823357CB32C>48 D<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF
139FEA7C1F1200B3AE007FB512E0B612F0A36C14E01C3477B32C>I<EB0FF890387FFF80
48B512E00007804814FC391FF80FFE393FE001FF903880007F48C7EA3F80007E141F00FE
15C0150F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F16005D15FE4A5A1403
4A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03
C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C>I<EB0FFC90387FFF8048
B512E0000714F84880391FF807FEEBC0004848137F6D7F1680151FA26C5A6CC7FCC8FC15
3F16005D15FE14014A5AEC1FF890381FFFF0495BA215F86D7F90380007FEEC00FF81ED3F
80ED1FC0150FA216E01507A2123C127EB4FC150F16C0A248141F007FEC3F806DEB7F006C
6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC23357CB32C>I<EC07F04A7E
141F143FA2147EA214FCEB01F8A2EB03F0EB07E0A2EB0FC0EB1F80A2EB3F00137EA25B48
5AA2485A5B1207485AA2485A48C7FCA2127E5AB712FC16FEA36C15FCC8EAF800AA91387F
FFF091B512F8A36E13F027347EB32C>I<EC3FC0903801FFF801077F011F7F497F90387F
E07F9039FF003F804848137FEA03F8485A5B000FEC3F004848131E4990C7FC123F90C9FC
A25A127EEB03FE90381FFF80D8FC7F13E000FDB57EB67E9038FE07FC9038F001FE9038C0
007F49EB3F8090C7121F16C048140F16E01507A3127EA47E150F6D14C0001F141F6D1480
000F143F6DEB7F003907F801FE3903FE07FC6CB55A6C5C6D5B011F1380D907FCC7FC2335
7CB32C>54 D<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA0F80C7FCAEEA0F80EA1F
C0EA3FE0127F13F0A4123F121F120F1201120313E01207EA0FC0A2EA3F80EA7F005A5A12
F812700C3071A32C>59 D<1507ED1F80153F15FF14034A1300EC1FFC4A5AECFFE0491380
010790C7FCEB0FFCEB3FF8EB7FE048485A4890C8FCEA0FFEEA1FF8EA7FF0EAFFC05BA27F
EA7FF0EA1FF8EA0FFEEA03FF6C13C06C6C7EEB3FF8EB0FFC6DB4FC01017F6D13E0EC3FF8
6E7EEC07FF6E13801400153F151FED0700212A7BAD2C>I<007FB612F0B712F8A4003F15
F0CAFCA8003FB612F0B712F8A46C15F025147DA22C>I<127012FC7E6C7E13E06C7EEA1F
FC6C7E3803FF80C67FEB7FF0EB1FF8EB0FFEEB03FF6D13C06D6C7EEC3FF8EC0FFC6EB4FC
0201138080A25C02071300EC0FFCEC3FF8EC7FE049485A4990C7FCEB0FFEEB1FF8EB7FF0
EBFFC000035BD80FFEC8FC485AEA7FF0485A138048C9FC5A1270212A7BAD2C>I<007FB6
12FCB712FEA43AFC007E007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337E
B22C>84 D<387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C
>91 D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C>93
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138
801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13
036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027
337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E
4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F0039
07FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC
003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC
007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CEC
BFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E
48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075A
B7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001
FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3F
FE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C
5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<EA7FF0487EA3127F1201
AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02807FEC000F5B5BA25B
B3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>104 D<1307EB1FC0A2497EA3
6D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14
FC1F3479B32C>I<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C15802233
7BB22C>108 D<397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80EC
C01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>
110 D<EB07FCEB1FFF017F13C048B512F048803907FC07FC390FF001FE48486C7E018013
3F003F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D
133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23
247CA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF0191
38FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>
114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F
140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE007814
7F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F814803970
1FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED
07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C
>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF
90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<D87FFFEB7FFF6EB5FCB51580
6C16004A7ED807C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F1
13C700005D9038F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F
007C29247FA32C>119 D<15FF02071380141F147F91B512004913C04AC7FCEB03F85CB3
1307EB1FE013FF007F5BB55A49C8FC6D7E6C7FC67F131FEB07F01303B380EB01FEECFFC0
6D13FF6E1380141F14070200130021417BB92C>123 D<EA7FC0EAFFF813FE6D7E6C7FC6
7F131FEB07F01303B380EB01FEECFFC06D13FF6E1380141F147F91B512004913C04AC7FC
EB03F85CB31307EB1FE013FF007F5BB55A49C8FC13F8EA7FC021417BB92C>125
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 12 46
/Fr 46 123 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010F
EB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280
B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>12 D<EA07C0EA1FF0EA3FF8
EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>46 D<EC3FF849B5FC010F14
E0013F14F890397FF01FFC9039FFC007FE4890380001FF48486D1380000716C049147F00
0F16E049143F001F16F0A2003F16F8A249141F007F16FCA600FF16FEB3A3007F16FCA56C
6CEC3FF8A3001F16F0A2000F16E06D147F000716C06D14FF6C6C4913806C6D4813006C6D
485A90397FF01FFC6DB55A010F14E0010314809026003FF8C7FC2F427CC038>48
D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>
I<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD81F806D
138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17
F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF0
4A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC017C1401491403
48B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713FF011F14C0017F
14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C07FA66C5A6C48
15806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF16C090
C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF0487EA248
7EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFEEBFFFE6CB612
F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E5D5DA25D5D5D5D
A25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB01F0EB03E013
0714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12FCB91280A5C8
000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FFEB07FF91B6FC5E
5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF14F090
39FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0A317F8
A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E003F4A1380D8
1FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC010113C0
2D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090390FFC001FD93F
F014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE7F80EE1E00003F
92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9F01FFC9039FBC0
07FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127FA5123FA217F07F
121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038E01FFC6DB55A01
1F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC90B712FEA45A17
FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D15014B5A00F84A5A48
4A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2147F5D14FFA25B
A35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5FC010F14C0013F
14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F484815C0A2001F151F
A27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C9038FF83FCEDE7F8
6CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F14802607FC0F14
C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F8150000FF157F90C812
3F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6CEC7F80D80FFE90
3801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013F02D427BC038>
I<EC7FF0903807FFFE011F6D7E017F14E09039FFE03FF0489038800FF848496C7E484880
48486D7E001F80003F1680A2484815C08117E0A212FF17F0A617F8A45D127FA3003F5CA2
6C7E5D6C6C5B12076C6C131E6CEBC07C6CEBFFF8013F5B010F01C013F00101130090C8FC
A217E05DA2EA03C0D80FF015C0487E486C491380A217004B5A150F5E49495A6C48495A01
C0EBFFE0260FF0035B6CB65A6C4AC7FC6C14F86C6C13E0D907FEC8FC2D427BC038>I<EE
1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E
07037E80157C8203FC804B7E02018115F0820203814B137F0207815D173F020F814B7F02
1F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F
0107834A153FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455
>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F
4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F48
49161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1A
F0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E
6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90
B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193E
A3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F1
01E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4D
B5FCBBFC61A443447DC34A>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>
73 D<B76C0103B512F8A526003FFEC93807E0004F5A4F5A077EC7FC614E5A4E5A4E5AF0
1F804EC8FC187E604D5AEF07F0EF0FC04D5A4DC9FC177E4C5AEE03F04C5A4C5A4C7EEE7F
F04C7E5D4B7F4B7F4B7FED3F3FDB7E1F7F03FC806E486C7F4B7E4B6C7F0380804B6C7F4A
7F717E84717F83717F85717F83717F85717F187F727E86727F84727F86727F84B76C90B6
12FCA54E447CC358>75 D<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360A2
187EA218FE170117031707171F177FEE03FFB95AA539447CC343>I<B500FE067FB51280
6E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C
161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A2
6F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D48
5AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B6
057FB6128071C7FCA2173E171C61447CC36A>I<923807FFC092B512FE0207ECFFC0021F
15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E
49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A24819
F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E
6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B
5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715
C002004AC8FC030713C047467AC454>79 D<B9FC18F018FE727E19E0D8001F90C7000F7F
05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D
485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<B812F8EF
FFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA28684A286A762
A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E018F892C77F
EF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700E06DEB
803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<B792B6FCA526003FFECAEAFC
00806D606F15016D608119036D606F15076D606F150F6D6081191F6D6D93C7FC61027F16
3E6F157E023F167C8119FC6E6D5C18016E5E7013036E5E8218076E6D5C180F6E5E70131F
6E93C8FC705B037F143E82187E033F147C7013FC6F5C17816F5C17C117C36F5C17E76F5C
17FF6F5CA36F91C9FCA2705AA2705AA3705AA2705AA2705AA250457EC355>86
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A48494813
805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0
A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F
14C0010391C7FC9038003FF82A2F7CAD32>99 D<EE03FEED07FFA5ED001F160FB1EC3FE0
903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C7123F48
48141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007
157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007F
C0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007
FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12
FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07
C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7
FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381F
FC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0
007FEBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048
D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FC
A2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680
D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC
7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF007F17
006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC01
0F14F8D9007F90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B5
12E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3
A7B60083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C
13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7F
C0B5FCA512037EB3B3B3A3B61280A519457CC420>108 D<90277F8007FEEC0FFCB59026
3FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00F
FE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D
4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF80
92B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02F86D7E
5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14FC
90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2
003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C
4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001F
FCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC9139
FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCAC
EF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02CF
B512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807FB538
81FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138
E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B51287
000314FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E090
C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F02
0313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038
F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307
A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A915
0302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023
407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E4913
80017FD901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7C
AC3E>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301
011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C
027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578
362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA7C007114786E17F8
6C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E017914
0F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C6D9139
C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E486D5BA2
6E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51>I<B500FE90383FFFF0A5
C601F0903803E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEB
C1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC
3E1F027C7F4A6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E017E
141FB500E090B512FCA5362C7EAB3B>I<001FB71280A49026FC001F130001E0495A5B49
495A90C7485A48495B123E4A5B4A5B003C495BA24A90C7FC4A5A4A5AC7FC4A5A495B495B
A2495B499038800780491300A2495A4948130F49481400A2485B48495B485BA248495B48
90C75A48485C15034848EB1FFEB7FCA4292C7DAB32>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmbx12 24.88 47
/Fs 47 123 df[<EF01F8EF07FC170F171F177FEE01FF1607161F93B5FC1503153F0203
B6FC49B7FCB9FCA615C3ECFC03EBFE00C8FCB3B3B3B3B3AE003FBC12C0A9>82
135 111 262 116 49 D[<93381FFFF00303B612E0033F15FC4AB812C0020717F0021F17
FC027F17FF49BA12C0010719F049DA800F814901F8C715FE4901C0021F804948C8000781
49486F814801F00300814849708048018070804890CA6C806E70804813F002FC7080486D
70158080486E6F15C0817315E081B6836F19F0A3861DF8A56C5CA26C5CA26C5C6C91CAFC
6C5B000113F826007FE01AF090CCFC62A21DE0A297B6FC1DC0A24F1580A24F150064A24F
5C64614F5C644F5C644F91C7FC96B55A4E5C634E5C4E5C4E5C634E49C8FC4E5B4E5B95B5
5A4D14C0624D91C9FC4D13FC4D5B4D5B4D13C04D5B94B5CAFC4C13FC4C5B4C5B4C49ED0F
F84C13804C90C9FC4C5A4C48EE1FF04B5B4B13E04B5B4B5B4B90CAFCDB3FFC173F4B4818
E04B5A4A5B4A49177F4A90CBFC4A4818FF5D4A485F4A48053F13C04ABBFC91BCFC5B5B5B
5B491B805B5B90BDFC5A5A5A5A481C005A5ABEFCA464A4>93 135
117 262 116 I[<933807FFFE93B612F80307EDFF80033F16F092B812FE0203717E020F
18E0023F844A9026FE003F14FC91B500C0010780010301FCC70001804901F06E6C14C049
01C06F8092C97E4948708049488590267FFFC06F808190B500F8846F816F845A81A2486F
1880A285A282A24C5CA37E1D0093C8FC7E6D5B6D494B5C6D5B6D5B010301C060D9007EC9
5A91CA5DA24F5C6461644F5C96B6C7FC634E5C4E5C4E14E04E5C063F5C95B548C8FC0503
14F80407B612E00307B712804B4BC9FC19F885F1FFC01AF86F16FF92C86C14C0060714F0
060114FC7280073F6D7E738073807314F888738085881D807315C0A21DE0861DF0A21DF8
A27414FCA4D93FF01AFEEBFFFC000313FF4880488048804880A24880A2B67EA21DFCA450
14F8A34B19F07E97B612E05D6C4A19C0A24B4B15806C5C6C49C948150002F84C5C6C01C0
616C6D4C5C6C01F84C5C6C01FE4C5C6D6C6C4B5C6D01F04AB65A6D01FF020792C7FC6D02
F8017F14FC010391B85A010019E0023F1880020F4DC8FC020117F0DA003F1680030303F8
C9FCDB000F49CAFC>95 137 118 262 116 I[<F37FC0517E6262A2626262A2626297B5
FC61A2616161A261616196B6FCA2606060A2606060F07FEF19CF18FF4D138F4D130F18FE
1707EF0FFCEF1FF8EF3FF018E0177FEFFFC04C138018005E4C5A4C5A4C5A5F163F4C5A4C
5A5F5D4B90C7FC4B5A4B5A5E151F4B5A4B5A5E15FF4A5B4A90C8FC4A5A5D140F4A5A4A5A
5D147F4A5A495B4990C9FC5C1307495A495A5C133F495A495A485B91CAFC5A485A485A5B
121F485A485A485A90BE12FEA9CC003F02E0C7FCB3A6040FBA12FEA9>103
136 122 263 116 I[<010E1AE0D91FC0F007F002F0183F02FFEF01FF03E0160F03FF4B
B5FC04FE91B65A93B95AA26499C7FC6363636363636398C8FC1AFC621AE06297C9FC19FC
19F019C04ECAFC18F0DAF87F49CBFC92CEFCB3A394B5FC041F14F84BB77E030716E0031F
16FC037F16FF02F9B912C002FBDA001F8091B500E0010314F893C88003FC6F7F03F0031F
7F03C06F804B844AC96C804A70804A854A7080A24A856D5A90CC80A21D80A21DC0A27414
E0A41DF0A41DF8A3EBFFC0000313F04813FC487F487F4880A24880A2B6FC81A21DF0A44B
19E0A297B6FC6C4A19C0A292CAFC4A1A806C495E02F01A006C13C001F8CA5D6C6C4D5C7F
00074E5C6D626C6D4C5C6C01E04C5C6C6D4C5C6E4C91C7FCD97FFE93B55A6D6C6C02035C
6D01E0020F5C010701FC023F5C6D9026FFE003B612C06D91B8C8FC6D6C17FC021F17F002
0717C0020194C9FC6E6C15F0030F92CAFCDB007F13C0>93 137 117
262 116 I[<95380FFFE00503B6FC053F15C04CB712F8040782043F16FF93B97E4B8403
079126FE003F7F031F02E001037F4B91C87F92B500FCED3FFC4A02F06F7E4A02C0150F4A
4A92B5FC4A91C812034A01FC5D4A494B14804A495D91B5FC494A4B14C0495C494A5DA249
91C9FC5B5D5B5D5B90B57114805D48731400A2745B484A705B745B48070013E098C8FCA2
485CA35AA35AA34B903807FFE0053FEBFF80484BB612F04C15FC040F15FF4C16C04C16F0
93267FF803809327FF80003F13FEB600C190C7000F7FDBC3FC6E80DBC7F86E804C6E80DB
CFE06E80DBDFC06F7F4C6F7F03FF8493C96C7F5D1D804B7014C0A21DE05D1DF0A25D7414
F8A34B19FCA47E1DFEA25DA67EA56C80A46C1CFCA37EA21DF87E81626C1CF0A26C1CE0A2
6D6D19C0626D1B806D6D1900626D6D606D6D4C5B705F6D95B55A6D6E4A5C6D6E4A5C6E01
F84A5C6E6D021F91C7FC6E01FF027F5B0207DAF007B55A6E91B712F00200606F1780031F
4CC8FC030316F8030016C0041F4AC9FC04001480>95 137 118 262
116 I[<48B4FCA3487F14E014FE91B512F893BB12E0A45AA41EC01E801E0048646565A2
656565654899C7FCA26464646402E0CB5BD83FFCCB5A494E5B505B4997C8FC505A505A49
183F505A007F4F5A63494D5B4F5B614F90C9FC4F5A4848604F5A4F5A19FFCB485B4E5B62
4E90CAFC604E5A61183F4E5AA24E5A5F615F4D5BA25F4D5BA25F96CBFC5FA24D5AA25EA2
4C5BA25EA25EA24C5BA25EA35E60A293B5FCA35DA35DA35D60A35DA65DA75DAE6F5CA36F
5C6F91CCFC6F5B6F5B9238007FF0EE1FC0>99 142 115 267 116
I[<4CB57E043F14FE0303B712E0030F16FC033F16FF92B912C0020318F0020F844ADA00
0314FE4A01E0D9003F7F4A48C8000780DAFFF80301804901E06F6C7F4949707F49498249
90CA00077F494885864948717FA2017F844A8501FF85A21D804886A3805A8080A2818103
F05F6F190015FE6F7E7093B5FC04F05F04FC5D6C03FF5F715C05E05E05F84A5B6C04FE5C
714A5B6D04C0495B06F0495B6D04FC90B5C7FC72485B6DDCFF875B07EF13F06D94B55A6D
6198C8FC6D18FC6D18F06D846E17FE6E717E6E84020718F06E84020018FE6F83884ABA7E
4A85020F85023F854A01CF8349B500878349D9FE018349496C7E011F49011F178049496D
17C04949130390B548010017E04B143F4891C86C16F0484915074849030116F884484916
3F070F15FC48491603854849707E081F14FE48854A17038686B5854A8487A287A287A21D
FC87A3806C1CF8A36E1AF06C621DE0806C5013C0806C6D4E1380A26C6D4E13006C6D4E5A
6F4D5A6C6E5E6C02F04C5B6D6D040F5B6D01FE043F5B6D6D6C92B512806D02F0020F91C7
FC01039126FF8001B55A6D92B712F86D6C18E0021F188002074DC8FC020017F8031F16C0
030103FCC9FCDB000391CAFC>95 137 118 262 116 I[<4CB5FC047F14F80307B7FC03
1F16C0037F16F04AB812FC020717FF021F18C04ADAE0078091B548C7804902F0023F7F49
4A6E7F494A6E7F4991C86C7F49718049496F8049496F8090B55A48737F4B84488548874B
824887A24887A27414805A4B19C0A25A1DE0A31DF0B6FCA37414F8A61DFCA662A26C1CFE
A56C61A36C8062A27E627EA26C6E93B6FC7E616C6E5D6D18F76D6D15076D6DED0FE76D6D
ED1FC76D6E143F6D6EEC7F876D6E903801FF076D02F8D903FE15FC023F9039FF803FFC6E
91B512F8020716F0020116E06E6C1580031F1500030314F8DB000F01C016F893C9FC62A2
1DF0A41DE0A35014C0EB0FFE90383FFF80496D198090B57E486E190062486E60A2486E4C
5BA26497B5FC64A24F5C4F5C5D4F5C6C4A4B91C7FC634B4B5B6C4A4B5B4B4B5B6C49C9B5
5A02E003035CD97FF84B5C6E031F91C8FC6DB4037F5B6D01E049B512F86D01FF011F5C6D
91B712C06D95C9FC010017FC023F16F0020F16C002034BCAFCDA007F14E0030301FCCBFC
>95 137 118 262 116 I[<F31FF0517E517EA2517EA3507FA25080A25080A35080A250
80A35080A25080A397B67EA24F81A34F82A24F82A34F82A24F821AFD1AF9DF3FF881A24F
4881871AE007FF6D80A24E01C081871A804E6E81A24E0100828761060F6E81A24E488387
61063F6E81A24E4883886106FF6F80A24D498388614D7081A24D90C8828860050F7081A2
4D48858860053F7081A24D4885896005FF7180A24C498589604C7281A24C90CA82895F04
0F728194BDFC4C88A34C88A24C88A3DCFFE0CB003F80A24B49878A5F4B7481A24B90CC82
8A5E030F7481A24B48898A5E033F7481A24B48898B5E03FF7580A24A497480A25E4A7681
A24A90CE6C81A25D91261FFF8074810103B512FEB900C0041FBA12FEA9>159
145 120 272 176 65 D[<BFFC1EFEF6FFE01FFCF7FF8020F020FC20FF8DC7000392CA00
1F15E00B0181776C800C1F807814FF0C03818A78818E79808B8E8B8E8B8EA27980A47915
80AB551500A4555CA26A676A676A555C9CB65AA2545D5492C7FC545C5414F80C3F5C545C
53B612800B0F4AC8FC0B7F14F80A1FB612E095BBC9FC1FF81F801FF8F7FF8020F820FE95
CBECFFC00C1F14F00C07807814FE0C006E7E7980798079807980798079808E79158023C0
8B23E08C23F0A223F88CA223FCA38C23FEAB5614FCA55614F8A39DB612F0A25515E06723
C055158067551500555C555C9CB6FC545D0C075D0C1F15C09BB75A0B0F93C7FCC212FC69
21E021800EFCC8FC20F020800DF0C9FC0CFCCAFC>143 142 120
269 165 I[<0803B500C0EE01F00703B600FEEE03F8077FDBFFE015070607B800FC150F
063F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04039326F8000FECC0
03040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339007FFF3F0307
03C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F4A92CD7E4A4A
864A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E498B494A88A2
495C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485CFA0FF09FC7FCA2
5AA45DA3B6FCB27EA381A47EA46C80FA07F0FA0FF87EA2817EA36C6F1D1F23F07E827E22
3F6D6E1EE0A26D6E1D7F23C06D6E1DFF7F705213806D806D55130070646D6F646D6F515A
6E6E1B1F6E6E515A6E6E515A6E6E1BFF6E6E505B6E6E505B6E6F4F5B6E03E04F90C7FC6F
6EF13FFE6F02FC4F5A030F02FF4E485A6F03C005075B030103F0051F5B6F03FE057F1380
043FDAFFE00303B5C8FC040F03FE033F13FC0403DBFFF80107B55A040093B812E0053F1A
80050F4FC9FC050119F8DD003F18C0060795CAFCDE007F16F0070393CBFCDF000314C0>
141 146 115 271 168 I[<C212F8A48DA5C7000303C0C9123FF5007F1E0F0C0180787E
1F1F8B8B1F018BA27A7E8C8CA28CA28CA28C8EA28CA38CA38EA2E21FF0157FA67B7EA40A
3F93C8FCA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCA99538C00007F2007F1B1F
1B07878787A21C7FA21C3FA3FA7FC01C1FA2FAFF80A6571300A299CAFCA369A26AA22107
A3210F6AA2211FA2213FA2575AA221FFA26868565BA26868207F9DB5FC555C1F071F1F1F
7F0C03B6FC1E3F0B1FB7FCC35AA66AA3>138 141 120 268 153
69 D[<C21280A421C0A5C7000303C0C81201F40007F5007F0C1F14E01E071E01787E8B8B
8B8B7913F0A28B8BA2207FA3203F21F8201FA4200FA321FC2007A4F47FC0A3F803FEA49D
C7FCA31CFFA463A263A26363631B7F50B5FC1A1F95B8FCA99538C0001F1A01747E1B1F87
8787A287A287A41C7FAA99CBFCB3AFBC12F8A9>127 141 120 268
146 I[<BC12C0A9C7000103E0C8FCB3B3B3B3B3B3B0BC12C0A9>74
142 122 269 87 73 D[<BC0403B9FCA9C7000303C0CC000103E0C7FCE6000F01F8C8FC
7B13E05713805790C9FC575A575A56485A565B565B5613805690CAFC565A565A55485A55
5B5513C0555B5590CBFC555AF7FFFC545B545B5413C0545B5490CCFC545AF6FFFC535B53
13E0535B535B5390CDFCF57FFE535A525B5213E0525B525B5290CEFCF47FFE525A5113F0
515B515B515B093F7F6398B57E50805080625080083F80508097B7FC4F824F82614F8207
3F824F82F1FFF906C101F18106C301E08106C7496C8006DF138095B5486C8107FC6D814F
7F4F834F6D814F6D814F7F96C78206FC6E814E6F80604E6F814E6F817681A27681768188
8C76817780A2778177817781A277817781898D77817880A2788178817881A2788178818A
8E788179808B8F79817981A2798179818B8F79817A808C5615C00D03B712F0BC033FBA12
E0A9>163 142 120 269 182 75 D[<BC12F8A9C7000303C0CEFCB3B3B3B3A5F8FF80A4
672100A667A368A21F07A41F0FA3555AA21F3FA21F7FA21FFFA2666668666666666653B5
FC65650B1F5C1D7F0A03B6FC1C1F0903B7FCC1FCA468A5>121 142
120 269 140 I[<B900C00C7FB812E0729BB9FC72657265A37265A27265C70003A101F8
C8FC72F51FEFA2706EF43FCFA3706EF47F8FA2706EF4FF0FA2706EF301FEA3706EF303FC
A2706EF307F8A2706EF30FF0A2706EF31FE0A3716EF23FC0A2716EF27F80A2716EF2FF00
A2716E4F5AA3716E4F5AA2716E4F5AA2716E4F5AA3716E4F5AA2726E4E5AA2726E4E5AA2
726E4EC7FCA3726E4D5AA2726E4D5AA2726E4D5AA2726E4D5AA3726E4D5AA2736E4C5AA2
736E4C5AA3736E4CC8FCA2736E4B5AA2736E4B5AA2736E4B5AA3736E4B5AA2736E4B5AA2
746E4A5AA2746E4A5AA3746E4AC9FCA2746E495AA2746E495AA3746E495AA2746E495AA2
746E495AA2756E485AA3756E485AA2756E48CAFCA275ECF1FEA275ECFBFCA375ECFFF8A2
755DA2755DA3765CA2765CA27691CBFCA2765BA34A6D715B49B512FEB900FC6F490303BB
12E0A2765BA2765BA3775A0B1FC9FC>203 142 120 269 220 I[<97B512F0077FECFFE0
0607B712FE067FEEFFE00503B912FC051FF0FF80057F19E00403BB12FC040F9226E0007F
14FF043F02FCC7000315C04C02E0DA007F804BB60080031F14F8030702FCC9000314FE4B
4A70804B02E0706C80037F0280051F14E092B6CB6C804A4A72804A4A72804A02F0060080
4A4A737F4A4A73804A8B4A4A738091B6CD6C80494A7480A2494A7480494A7480498C4C86
498D4C87498D494A7580A290B68B4C87488EA24892CF6C80A3488E4B88A2488EA3484A76
1580A34823C0A5484A7615E0A7B621F0B36C23E0A26F64A56C23C0A46F646C2380A36C23
006F64A26C6AA270636C6AA26C6A70636C6A70636D69A26D6E98B65AA26D6E505DA26D6E
5092C7FC6D6870626D6E505C6D686D6F4F5C6E6E4F5C6E6E4F5CA26E6E96B65A6E6E4E92
C8FC6E6E4E5C020102FF060F14F86E6F4D5C6F6E4D5C6F02F094B65A030F6E4C92C9FC6F
02FE04075C03016E6C031F14F86F03F092B65A043F02FE020715C0040FDAFFF090B7CAFC
040392B812FC04001AF0051F198005074ECBFCDD007F17E0060F94CCFCDE007F15E00700
02F0CDFC>148 146 115 271 175 79 D[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E020
F820FEC700030380C8000781E2003F15C00B03810B00810C3F8078800C07807880788178
818E8B8E8B8E8B8EA28EA28B8EA42380AC2300A46A67A26AA26A676A676A9CB65A6A6654
92C7FC545C0C1F5C545C9BB612E00B075D0B3F5D0A07B648C8FC95BB12F820E0208055C9
FC1FF09CCAFC1EF00BF8CBFC06C0D0FCB3B3B2BCFCA9>137 142
120 269 159 I[<BD12FCF4FFFCF5FFE01EFCF6FFC01FF01FFE797E20E0C700030380C8
6C15F80A0181E2003F14FF0B07810B0115E0776C8078807880788078808A78818E7881A2
8E8B8EA37980A48EAA6AA3676AA26AA29CB65AA26A545D9FCAFC66545C545C545C545C9B
B612C0535D0B074ACBFC0B3F5C52B612F00A7F15C095BBCCFC1FF81FC054CDFC66F6FF80
1FE00680C7000315F8E1003F14FE0A0F800A0315C07681766C807780778077808C778189
8D898D898DA38A8DAD8DACA1EB1FC0A1EB3FE08D8AA37880A1137FA114C078817818FF7C
1580785F786F1500BB00FE6F6F5B796E495A7902FEEB1FFC799139FFC07FF80D0792B55A
0D015F796C5E0E1F5E0E034BC7FCD4001F14F8E7003F13C0>163
144 120 269 173 82 D[<93260FFFF8163E4BB600E0153F031F03FE5D037FDBFFC05C02
03B800F05B020F05FC5B4A05FF5B027FF0C00F91B526FE000FECF01F010302C0D9007F6D
5A4991C800076D5A4901FC030090B6FC4901F0163F4949160F4901808290B5170192CBFC
4849844849181F87484984A2484984874886A248498588A24887A388A2B58680A36E85A2
80A26E8580A2818103F0725A6C6E96C7FC15FE8116E06C15FEEEFFE017FF6C17F0F0FF80
6C18F8F1FFC06C19FCF2FF806C1AE01BF86C1AFE6C747E6D1AE0886D866D866D1AFF6D87
6D87010087806E86020F86020386020086153F030F851501DB001F19801601DC000F18C0
EF007F060717E0F0003F070316F0F1003F1A0F080315F81A00871B1F877514FCA287007F
86486C85A288A388A36D86A31EF87FA37F1EF0A26D626D1CE0A27F6D5013C0A26E1B806E
96B5FC6E1B0002F8606E4E5B6E626E6C5F03E04D5B03F84D5B03FE057F5BDBFFC093B55A
04F803035C496CD9FF80021F91C7FCD9FC1F02FF49B55AD9F80792B75A496C19F049C661
49011F18804901074DC8FC90C817F848031F16C048030003FCC9FC007C04011480>102
146 115 271 129 I[<000FC312F8A6488EA304C0C7001F4AC7120103F8C8F0000F03C0
1C0192C9737E02FC1E1F4A1E0702E08A4A8A4A8A4890CA757EA249203F49201FA349200F
A2492007A4492003007F8EA4498CA848487A1380A6CC99C7FCB3B3B3B3AA030FBD12FCA9
>145 140 120 267 162 I[<BB00E00507B812F8A9C7001F92CE000192C7FC72E0000713
E06E79138084A26E5590C8FC846E555A846E555A846E68223F846F545A846F545A846F67
69856F535B856F5390C9FC856F66210F856F535A856F535A8570525A85A270525A857051
5B8670515B86709ACAFC688670515A8670515A867064203F8671505A8671505A86716367
87714F5B87714F90CBFC87714F5A87A2714F5A87714F5A87724E5A8772611FFF87724D5B
88724D5B887296CCFC6688724D5A88724D5A88726076133FA2734C5A88734C5A88734B5B
1D81A27303835B1DC37303C790CDFC1DE773EDEFFE1DFF735EA3735EA2745DA2745DA374
5DA2745DA27492CEFCA3745CA2745CA2745CA3755BA2755BA2755BA2755BA27590CFFC75
5A>165 144 123 269 176 86 D<93B512FC037FECFFF00207B8FC023F17E091B912F849
18FE0107727E499126C0007F14E04901E0C7000F80496D020380496D020014FE6F6F7F90
B570806F6F8085486E6F807380A27380A28885886C5CA26D4982886D5B6D5B010713C001
0190CAFC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FED
E000023F02FCC7FC91B612E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C
485C485C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F
16CF6C183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C
6E6CD93FF817806C923AF803FFF003013F91B6487E010FEF8000010394C77E010004FC14
1F021F03F0140702010380DA007F1400DA000701F8CDFC695F79DD71>97
D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B296383FFFC00607B512FE063FECFFE0
4DB712F8050716FF051F17C0057F17F094B5D8C00F8004F301FCC714FE04F701E0023F7F
93B50080020F804DC86C14E005F80301804D6F804D707F05808294CA804C717F4C7180A2
4C71808BA27680A28B88A28BA28BA3888BA52080B02000A56764A267A3676467A2525CA2
67647062704D91C7FC704D5BA2714C5B7193B55A05F04B5CDCBFF84B5CDC1FFC030F5C4B
6CB44B91C8FC7001C0027F5B4B6C01F00103B55A4BC601FF013F14F04B6D90B712C04B01
1F94C9FC4B6D16FC4B010316F092C86C15804A030F02F8CAFC90CB49CBFC>113
144 121 270 129 I<94387FFFF0041FB612E093B712FE0307707E031F17F092B97E4A18
FE020784021F9126F8000F14804A0280010014C04A49C74814E049B500F85C494A17F049
4A5C495C494A4A14F84991C8FC5D495B90B5FC5D5A485C7314F05A4B6F14E05A7314C048
7214804B93383FFE00F20FF84896C8FCA4485CA5B6FCB07EA281A37EA36C80A37E6F18FE
6CF201FFA26C6E5F1CFE6C801B076C6EEF0FFC6D7F70EE1FF86DF13FF06D6E167F6D6EEE
FFE06D02F84B13C06D6E5D6D02FF030F13806D03C0023F1300023F02F0903801FFFC6E91
26FF801F5B020792B65A6E18C0020060033F4CC7FC030716F8030016C0041F4AC8FCDC00
7F13C0585F78DD67>I[<F53FE098B6FC4FB7FCA996C77E1B0FA287B3B294383FFF80040F
B512FC93B71280030716E0031F16F8037F16FE4AB9128702074AC66C13C7021F02E00107
13F74A91C890B6FC4A01FC153F49B548150F4902E081494A81494A814991CA7E495B8749
498390B548835A5D5AA2485CA25A5D5AA35AA25D5AA5B6FCB07EA57E81A37EA27EA2817E
A26C80A26C626C6E5F636D7F6D6D94B6FC6D606D6D1607705D6D6E4B81010102F0157F6D
6E92B712FE6E01FE020301EF91B512806E6D6C011F13CF020FDAF801B5120F020391B612
FE6E17F86E6C16E0030F16800301EDFC00DB003F14E0040049C74AC8FC>113
144 120 270 129 I<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB9
12F00207DAF80380021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902
C06E6C7F494A6F7F4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D48
1CC086481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4
817EA37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FF
C06D6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E00203
5B6E02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780
DB003F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>I[<95383FFF80050FB512F094
B612FE040781041F16C0047F824BB87E0307DAF8077F031FDAC00F7F4B49C6487F4B495B
92B500F0814A4A5B4A5C4A93B612805F4A91C7FC5C5E5C5E5C731400A24C6E5B91B56F5B
A2735B070313E00700138097C8FCB3A4BA12F8A9C702FCCBFCB3B3B3B3A2003FB9FCA9>
81 144 121 271 71 I<F5FFC093260FFFFC030F13F04BB600E0027F7F031F03FE49B512
FE037F9226FF8007800203B8EAF01F020FDDFC3F15804A7148133F027FDA003F90B500F0
14C091B500F80107ED807F4902E00101ECFC00010702806D6C5B93C87E49496F7F49496F
7F49496F6D6D1380491A8077130090B5486F6E6C5AF503F84875C8FCA2484A6F80A44887
AB6C63A46C6E4B5CA26C63A26D6D4B5CA26D97C9FC6D6D4B5B6D6D4B5B6D6D4B5B705C01
0102E049B512E06D02F801075C4902FF013F5C4992B648CAFC496002F317F090260FE07F
1680031F4BCBFC90261FC00115E0DB000F01FCCCFC013F91CFFCA3137FA280A380A28080
806E7E15F092B812F06DF0FFE01BFEF3FFC06D1AF81CFE767E6D1BE06D87896D1BFE6D87
7F6E878A0103BD7E130F013F8890BEFC4802E0C9003F814891CBFC4801FC180F48490601
804849727E484985884849737F88A2B55A88A66E616C65A26E616C6D4F5B6C656E616C6D
4F5B6C6D96B55A6C6D6C05035C6F5FC602F0051F49C7FC6D01FC057F5B6DD9FF800303B5
5A010F02F8033F14E06DDAFFE0010FB65A010192B9C8FCD9003F19F8020F19E0020196C9
FCDA001F17F0030194CAFCDB000192CBFC6A887ADD74>I[<ED1FF0017FB5FCB7FCA9EA00
3F1307A27FB3B2963803FFFC073FEBFFE096B612F8060715FE061F6F7E4E16E095B87E4D
D9FC03804DD9C000804D48C76C7FDD0FF880DD1FE0824D486E804D5A05FEC881DCF1FC81
5F04F385EEF7F04D81EEFFC0A24D84A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9
>114 143 119 270 129 I[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67E
A24881A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1F
F0017FB5FCB7FCA9EA003F1307A27FB3B3B3B0B91280A9>49 144
119 271 65 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3ACB912C0A9>
50 143 119 270 65 108 D<DB3FE0912601FFFC943801FFFC017FB5031FD9FFE0041FEB
FFE0B792B600FC93B612FC060303FF030315FF060F04C0020F16C0063F04F0023F16F095
B86C91B87E4DD9FC036E49D9FC03804DD9C0006E49D9C000804D48C7003F6D4948C7003F
7FDD0FF86EDB0FF880D8003F4B48714848830107DB3FC06E9126C03FC06E804D484E5A6D
4BC86F48C881DCE1FE6FDAE1FE814D61DCE3F8DEF3F884DCE7F0F0F7F04D6F4B81DCEFC0
F0FFC0A2DCFF804F84A294C993C9FCA24C61A34C61A44C61B3B3AFB900E090B900E090B9
12E0A9B35D77DCC2>I<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F8060715FE06
1F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1FE08201
074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084A294C9
FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>I<94381FFFF00407B612C004
7F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F80020F02C0010714E04A49C8
80027F01F8033F13FC91B5486F7F4902C003077F494A6F804991C96C8049497080494971
7F49874949717FA290B548717F48884B83481D80A2481DC04B83481DE0A2481DF0A3484A
7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1DF0A36C1DE06F5F6C1DC0A26C
6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D4C5C6D6E4B5C6D6E4B5C6D02
F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC001075C6E02FC017F5C020791B812
C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9FC040715C0DC001F01F0CAFC
675F7ADD74>I<DB1FF091381FFFC0017FB50203B6FCB7021F15E095B712FC050316FF05
0F17C0053F17F094B912FC04F1DAC01F8004F79026FC00018093B500E06D6C14C0D8003F
93C86C8001074B030F8005F86F806D03E06F804D6F804D8194CA6C7F4C864C71805E7680
A27680A27680A28B88A28BA288A28BA4882080B0200064A467A26467A3525CA267646764
67647062704D91C7FC7094B55AA2714B5C714B5C714B5C05F84B5C71033F5C05FF4B91C8
FC06C049B55A04FB01F001075C04F801FF017F14F07190B712C0051F94C9FC7116FC0503
16F0DD007F1580060F02F8CAFC060049CBFC96CDFCB3ACB912E0A9718579DC81>I<DB7F
C049B47E90B6021F13F8B7027F13FE4DB67E4D15E04D814D814D01077F94263FF00F7F94
387FC01F4D48487FD8003F16000107DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F16DF4D
6D1400A204FFC76C5BA2735B4C6E5B735B070013C04C92C8FCA45EA65EB3B3AAB912FCA9
515D79DC5F>114 D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F010317FF
130F013F9038F8001F4990C8FCD9FFF8153F4801E0150F484915034849814890CAFC197F
4848173F191F485AA2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14FF15F0
6CECFF8016FCEEFFF06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C856D84
011F846D841303010084023F83140F020183EC001FDB007F16801603DC000F15C0170018
3F060F14E0007F1703486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B006E5E
6E5F6E163F6E4C5A02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F991B7C7
FCD9F07F16FCD9E01F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349C9FC4B
5F78DD5C>I[<ED03FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA25C5C5C
5C91B5FC13035B131F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1616E17
FE82A219076E17FC836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF0313C06E
92B512806E1700033F5D6F5D03075D030015E0041F1480040001FCC7FC>72
132 124 258 90 I<DB0FF8F01FF0017FB594B6FCB74BB7FCA9D8003F94C77E0107190F
A26D85B3B3B063A463A263A27F6398B6FCA26DF001FB7015036EEF07F3E00FE3806E6D15
1FE07FC314FF6E6D6CDAFF83EDFFC06E6E010313036E02FCEB3FFE6E91B612FC020017F8
6F16E0031F16800303EDFE00DB007F14F8040102C093C8FC725E77DC81>I<B90303B7FC
A9D8000702F8CA000FEBFE006D6E050013E0666D6E6164826D5090C7FC836E4F5AA26E6E
4C5AA26E6E4C5AA26E6E5F1C3F836E4F5A836E4F5AA26E6E4B5BA26E6E4B90C8FCA26F6E
5D1B07846F4D5A846F4D5AA26F6E4A5AA26F6E4A5AA26F6E5D1BFF846F4C5B846F4C90C9
FCA2706E485AA27002C05B1A0F7002E05B1A1F19F0704B5A19F8704B5AA2706E485AA270
6E5B96B5FC7093CAFCA3715CA2715CA2715CA2715CA3715CA2715CA2715CA27191CBFCA2
725AA3725A725A725A705D7BDB7B>I<B800FE017FB700F8023FB612F8A9D8000F02F0C8
000702C0C9003FEBF800100313806D6E6F7390C7FC775E6D69706F6E1607A26D6E6F6277
160F6D6970706D161FA26E6E6F61516D163F6E687192B6167FA26E68714A6F15FF6E6871
4A608A6E9DC8FC714A6F5C6E6771DA0FFD17078A6E06F86071021F6F140F6E67714A486C
161F8A6F4D6C5F72017F6F143F6F667249486C167F8A6F4D6C5F72487113FFA26F02F04A
6C4B5B4F17C06F4C6D94C9FCDEF807715AA26F02FC496D4B5A070F17F06F4C6D5EDEFE1F
EFF80FA26F02FF496E4A5A073F17FC704B6E5D07FFEFFE3FA2704B6E4A5A1FFF704B6E5D
20FFA27092C86C5DA2704A6F92CAFCA3704A6F5CA2704A6F5CA3704A705BA27149705BA3
7149705BA27149705BA37190CA6C5BA271487190CBFC7148715A9D5D7BDBA8>I<007FB8
6C49B712FEA9C792C9000F02C0C7FC6E6E030101F0C8FC715F6E6E4B5B6E6E4B5B6E4E90
C9FC6E6E5E71151F6E6E4B5A6E6E4B5A6E4E5A6F6E495B72495B6F6E495B6F806F6E4990
CAFC6F4C5A72495A6F6E495A6F6E495A6F03815B705E7014C307E75B7091B5CBFC705D70
5D705D6282705D715C8386718071807180837180864D814D815F4D81874D814D81DDFFF3
804C13E14C01C1804C0180814E6C804C6E804C487F4C48824C486D804C486D804B496D80
4B497F73804B49834B90C86C804B486F804B48814B486F804B48844C6F804A71804A496F
804A49814A90CA814A487180023F7280010FB500E07080B8031FB812E0A9735C7CDB7B>
I<007FB800C04AB71280A9D800034ACA000791C7FC6D080013F0775A6D6E4E5AA26E6E60
64836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E5F1C3F6E6E5F1C7F836E4F5A84
6F4D5B846F4D90C9FCA26F6E4A5AA26F6E5D1B0F846F4D5A846F4D5A846F4D5AA26F6E4A
5AA2706E5C627002C091CAFC6219E0704B5A19F0704B5AA2706E485AA2706E485AA27002
FE5B1A7F19FF704B5AA2715DA27192CBFCA2715CA2715CA3715CA2715CA2715CA2715CA2
725BA27290CCFCA3725AA2725AA24E5AA24E5AA261187FA24E5AA24D5B13FE2603FF804A
90CDFC000F13E0486D4A5A487F486D4A5AA260B56C141F4D5AA24D5A17FF604C5B4A4990
CEFC6C5D4C5A6C49EB3FFC4A495A6C4948485A9026FE80075B270FFFC03F5B6C90B6CFFC
6C5D6C15F86C6C5C011F14C0010749D0FC9038007FE071857CDB7B>I<0003BC12F81CFC
A51CF80480C7123F03F0C84814F048028018E04AC9B612C04A5D02F04B15804A19004E5C
4A5D4A4B5C6391C9485C604993B65A634D5D495D98C7FC4D5C4D5C000F5E62494B5C4D5C
94B6FC624C5D4C92C8FC5EC95D4C5C5E4C5C614C5C93B6FC4B5D614B92C9FC5D4B5C604B
5C5D4B4AEC07FC6092B65A5C604A92C8EA0FF84A5C5C5F4A5C4A5C4A181F5F91B65A495D
491AF094C9123F495C5B494A167F5E494A16FF496090B65A4C5D484B5D484F13E04892C9
5A4B5E484A93B5FC481803484A151F4B0203B6FC4891BAFCBDFCA21CC0A47E565C7ADB67
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmr8 8 66
/Ft 66 122 df<14FF010713E090381F80F090383E003849137C4913FC485A1203491378
153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFFE0A2232F7FAE27
>12 D<ECFFC0010713FC90381F807C90383E00FC5B5B485A0003147C5BAAB612FCA23903
E0007CB3A6486C13FE3A7FFF0FFFE0A2232F7FAE27>I<D801F01530D807FC1570D80F0E
15F0261E0780495A486C6CEB07C0D901F0130F007801FCEB3F80902700CFFFF7C7FC02C3
13CF489038E0001E02605B163816785E5E15014B5A02E05B0078EBC0074BC8FC0101130E
003CEB801E01035B391E070038D80F0E1378D807FC5B3901F001E0C79038C003E00203EB
0FF8913907801E1C4B487E4A497E021E80021C01F01380023C14015C91267001E013C002
F01400EB01E014C01303EB078014005B011E150149D900F0138013380178150349027813
00495D0001ED3C0E48486E5A49EC0FF80001ED03E032367CB13B>37
D<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2121EA35AA45A
A512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F01370133813
1C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA0780120313C0EA01E0A2
EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378A313F0A2EA01
E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<EC0380B3A4B812FCA3C7
D80380C7FCB3A42E2F7CA737>43 D<123C127EB4FCA21380A2127F123D1201A312031300
A25A1206120E5A5A5A126009157A8714>I<B512C0A412047F9018>I<123C127E12FFA412
7E123C08087A8714>I<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E
14C0A248EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A
3807C03E3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC
7C1200B3B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB
1F8048EB0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C014
1F1580EC3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048
C7FC000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC38
0E007E487FEC1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB
03F0EBFFC014F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE0
12F8006014C00070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>
I<140EA2141E143EA2147E14FEA2EB01BE1303143E1306130E130C131813381330136013
E013C0EA0180120313001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90
381FFFFCA21E2D7EAC23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC
90C8FCA8EB1FC0EB7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A214
0315F0A4127812FCA448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780
F83801FFE038007F801C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C038
03E00FEA07C0EA0F80A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C
38FDC01EB4487E01001380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407
121E001F14C06CEB0F803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<
1230123C003FB512F8A215F05A15E039700001C000601480140348EB0700140E140CC712
1C5C143014705C495AA2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA91378
1D2E7CAC23>I<EB1FC0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A412
3E1407003F1480381FC00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC
3803C7FFD807831380D81F0013C0001E133F48EB1FE0007C13070078EB03F012F8481301
1400A46C14E000781301007C14C0003C13036CEB0780390F800F003807E03C3801FFF038
003FC01C2D7DAB23>I<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407
007E14C0127C00FC14E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B38
03E0F33800FFC390383F03E013001407A215C0A2140F001E1480003F14005C143E143C00
3E5B001C5B380E03E03807FF80D801FEC7FC1C2D7DAB23>I<123C127E12FFA4127E123C
1200AD123C127E12FFA4127E123C081D7A9C14>I<B812FCA3CBFCADB812FCA32E137C99
37>61 D<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70FEEC607EA24A7EA349
486C7EA2010380EC000FA201066D7EA3496D7EA2011FB57EA29038180001496D7EA34914
7EA201E0147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8FFFC0103B5FCA2302F
7EAE35>65 D<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E82167E167FA6167E16
FE5E4B5A4B5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC6F7E167F821780161F
17C0A61780163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A2D7DAC32>I<DA1FF0
13C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F4848140F
48481407A248481403121F491401123F90C8FC481500A300FE1600AB127F17C0A27E7F00
1F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F147890390F8001
E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<B612F815FF3A03F8001FE000
01EC03F0ED00F8167E82EE1F80160F17C0EE07E0A2EE03F0A217F81601A317FCAA17F8A3
EE03F0A217E0160717C0160FEE1F80EE3F00167E5EED03F00003EC1FE0B7128003F8C7FC
2E2D7DAC36>I<B712FEA23903F800010001EC003E828282A282A3178016011518A293C7
FCA31538157815F890B5FCA2EBF800157815381518A21760A392C712C0A4160117801603
A21607160F163F0003913801FF00B8FCA22B2D7EAC30>I<B712FCA23903F800030001EC
007C163E161E160EA21606A3160716031518A21600A31538157815F890B5FCA2EBF80015
7815381518A592C7FCAB487EB512F8A2282D7EAC2E>I<DA1FF013C09138FFFE01903903
F00F8390390F8001E3013FC71277017C143F4848141F4848140F48481407A24848140312
1F491401123F90C8FC481500A300FE1600A992381FFFFEA2007F9138001FE0EE0FC0A27E
7F121F7F120F6C7EA26C7E6C6C141FEA007C013F143FD90F8013F3903903F007C10100B5
1200DA1FF813002F2F7CAD37>I<B539F03FFFFCA2D803FCC713006C48147EB290B612FE
A201F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC35>I<B512F0A23803FC006C5AB3
B3A3487EB512F0A2142D7EAC19>I<B512F8A2D803FCC8FC6C5AB3A7160CA41618A41638
A2167816F81501ED07F00003141FB7FCA2262D7EAC2C>76 D<D8FFF8923807FFC06D5D00
03EFF00000015F01BE151BA2019F1533A3D98F801463A2D987C014C3A2D983E0EB0183A3
D981F0EB0303A2D980F81306A3027C130CA26E1318A36E1330A291380F8060A2913807C0
C0A3913803E180A2913801F300A3EC00FEA2157C487ED80FF04B7EB5D93801B512C0A23A
2D7DAC41>I<D8FFF8903803FFFC7F00019138003FC06DEC0F006D1406EBBF80A2EB9FC0
EB8FE0138780EB83F8138180EB80FE147E147FEC3F80EC1FC0140F15E0EC07F0140315F8
EC01FC140015FE157FED3F86151F16C6ED0FE6150716F6ED03FE1501A21500167E163EA2
486C141ED80FF0140EB5FC16062E2D7DAC35>I<B612FCEDFF803A03F8000FE00001EC03
F0ED00F882167E167F821780A617005E167E5E5EED03F0ED0FE090B6128003FCC7FC01F8
C9FCB2487EB512F0A2292D7EAC30>80 D<B612C015FC3903F8007F0001EC0FC06F7E6F7E
6F7E82150082A55E15015E4B5A4B5A4B5A037FC7FC90B512FC15F09038F800FC153E6F7E
150F826F7EA582A5170316F815031707486C903801FC0EB539F000FE1CEE3FF8C9EA07E0
302E7DAC34>82 D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813
011400127000F01470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF
00011480D8003F13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA21578
7E6C14706C14F06CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<
007FB712F8A29039000FC003007C150000701638A200601618A200E0161CA248160CA5C7
1500B3A94A7E011FB512E0A22E2D7EAC33>I<B539F003FFFCA2D803FCC7EA3FC06C48EC
0F001606B3AB160E0000150C7F161C017C1418017E14386D5C6D146090390F8001E09039
07E00380902601F80FC7FC9038007FFCEC0FF02E2E7DAC35>I<B500C090380FFFC0A2D8
07FCC73803FE006C48EC00F800015E5F6C7E5F6D1401017E5DA26D4AC7FCA26E5B011F14
0680010F5CA26D6C5BA26E133801031430A26D6C5BA26E13E001005C8091387E0180A26E
48C8FCA21583EC1F86A2EC0FCCA215FC6E5AA26E5AA36E5AA26E5A322E7FAC35>I<B500
C090380FFFC0A2D807FEC73801FE006C48EC00F8000116E06C6C5D1601017F4A5A6D6C91
C7FC5E6D6C130E6D6C130C5E6D6C13386D6C13305E6D6C13E06D6C5B4B5AEC7F03DA3F83
C8FC1586EC1FCEEC0FEC15F814076E5AB04A7E49B512C0A2322D7FAC35>89
D<EAFFE0A3EAE000B3B3B3A7EAFFE0A30B4379B114>91 D<EAFFE0A31200B3B3B3A712FF
A30B437FB114>93 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FC
A4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E13
7F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F207D9E23>97
D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038F8007C4913
7E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038BC01F09038
0E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E3803E00739
07C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215C07E6C1301
01801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<15F8141FA2
14011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F00481300123E12
7EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFFC038007FF0
90391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E381F001FEC
0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0123F6C130139
0F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFC
EB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A6487E387FFF80A2
182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F003E00A200
3E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E121F38
0FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C007C14F86C
EB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07C012FFA2120F
1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2486C487E3AFF
FE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FF
A2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<130FEB1F80EB3FC0A4EB1F80EB0F00
90C7FCA8EB07C013FFA2130F1307B3AD1230127838FC0F80A21400485AEA783EEA3FF8EA
07E0123C83AD16>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C
5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14076E7E816E
7E486C487E3AFFFE07FF80A2212E7EAD25>I<EA07C012FFA2120F1207B3B3A3EA0FE0EA
FFFEA20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8
E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB
0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390FDE01
F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF8
3801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FC
A9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB
1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49137E
49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01F090
38CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<380781F8
38FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>
114 D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7EB41300EA7FF0
6CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA27EA26C133CA2
6C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A312011203A2120712
1FB512F0A23803E000AF1418A714383801F03014703800F860EB3FE0EB0F80152A7FA81B
>I<D807C013F800FF131FA2000F130100071300B21401A314033803E007EC0EFC3A01F8
1CFFC038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E00000714
7C15380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2
EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B0F
E003F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701F00678
1380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C90391F
600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80A23A
0FF003FC000003EB01F0000114C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB
07E013036D7E497E1307EB067C497EEB1C1F01387FEB700F496C7E6E7ED803C07F00076D
7E391FE003FC3AFFF007FFC0A2221D7F9C25>I<3AFFFC01FFC0A23A0FE0007E00000714
7C1538000314306D137000011460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F
06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A2
5B131CEA7838EA7070EA3FE0EA0F80222B7F9C25>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmti12 12 57
/Fu 57 125 df<EF7FF80407B5FC93391FC00FC093393E0001E004FCEB00F04B4813014B
4813075E0307140FA24B5A19E0031FEC03804C90C7FCA3153F93C9FCA45D157EA415FE91
B8FCA260DA00FCC7127E020115FE4B5CA317016014035D170360A214074B130760A3020F
140F4B5CA3171F021F5D5DA2053F13E01801023F16C092C7FCA2EF7F03057E13805C027E
15071900173E180E02FEEC1E1E4AEC1F1CEF07F8EF01E094C8FC495AA35C1303A2001C5B
127FEAFF075CA2495A00FE90CBFCEAF81FEA701EEA783CEA1FF0EA07C03C5A83C537>12
D<13F0EA03F8EA07FC120FA6EA03CCEA001C1318A213381330A2137013E013C012011380
1203EA0700120E5A5A5A5A5A0E1D6BC41E>39 D<167016E0ED01C0ED0380ED0700150E15
3C5D15F85D4A5A4A5A4A5A140F4AC7FC141E143E5C147814F8495A5C1303495AA2495AA2
49C8FCA25B133E137E137CA25BA212015BA212035BA212075BA2120FA25BA2121FA290C9
FCA25AA2123EA3127EA2127CA65AAB1278A6127C123CA47EA2120E120FA27E6C7EA26C7E
A26C7E1360246472CA28>I<1560A2157081A281151E150E150FA2811680A3ED03C0A516
E0A21501A71503A91507A216C0A4150FA21680A2151FA21600A25DA2153EA2157EA2157C
15FCA25D1401A25D14035DA214075D140F5DA24AC7FCA2143EA25C147814F8495AA2495A
5C1307495A91C8FC131E133E5B13785B485A485A485A48C9FC121E5A5A12E05A23647FCA
28>I<13F0EA03FC1207A2EA0FFEA4EA07FCEA03CCEA000C131C1318A213381330137013
6013E0EA01C013801203EA0700120E5A5A5A5A5A0F1D7A891E>44
D<007FB5FCB6FCA214FEA21805789723>I<120FEA3FC0127FA212FFA31380EA7F00123C
0A0A76891E>I<ED3F80913801FFE0913807C0F891381F007C023C7F4A131E4A131F4948
7F01031580495A5C130F49C713C0A25B137EA213FE5B161F12014915801203A249143F12
07A2170048485CA4484814FEA44848495AA448C7485AA35E1507127E5E00FE140F5EA248
141F5EA24BC7FC153E157E007C147C15FC5D4A5A003C495A003E5C4A5A6C011FC8FC380F
803E3807C0F83801FFE06C6CC9FC2A4475C132>48 D<16C01501A215031507ED0F80151F
153F157F913801FF005C140F147F903807FCFEEB0FF0EB0700EB00015DA314035DA31407
5DA3140F5DA3141F5DA3143F5DA3147F92C7FCA35C5CA313015CA313035CA313075CA213
0FA2131F133FB612FCA25D224276C132>I<ED3FC0913801FFF0913807C07C4AC67E021C
EB1F800278130F4AEB07C0494814E04A1303494814F0130749C7FCEB0E06D91E0714F8EB
1C03133C1338137813704A1307D9F00614F013E0140E020C130F0001011C14E0EBC01802
38131F4A14C06C6C48EB3F80D9E1C0137FD97F801400013EC712FE90C7485A4B5A4B5A4B
5AED1F804BC7FC15FC4A5AEC03E0EC0FC0023FC8FC147CEB01F0495AEB0780011FC9FC13
3E49EC03805B49140748481500485A48485C90C8121E5A001E5D001C157CD83FFC5C9038
FFC0013A7C0FFC07F0D87803B55AEA700126F0007F5B486D90C7FCEC0FFEEC03F82D4478
C132>I<ED1FE0EDFFFC913803E03F91390F000F80023EEB07C00278EB03E05C4948EB01
F0495A495A91C713F85BEB0E0CEB1E0EEB1C061603013C15F01338A2020E1307020C14E0
141CD91C78EB0FC0D90FE0131F6D48148090C8EA3F00167E5E4B5A4B5AED0FE091383FFF
804A48C7FC15F8EC007E151F6F7E6F7E82150382A482A34B5A121FEA7F80A2150F48C75B
A2484A5A12F800E04A5AA24BC7FC007014FE5D0078495A0038495A003CEB0FC06C495A26
0780FEC8FC3803FFF038007F802D4477C132>I<ED1FE0EDFFFC020313FF913907E03F80
91391F800FC091393E0007E04A13034A14F049481301495AA2495AA2495AA21603011F15
E0A216076E14C0EE0F806E131F6EEB3F006E133E6D6C5B02FF13F0ED83E06DEBC7C06D01
FFC7FC6D13FC6D5B6E7E6E7E91B57ED901EF7FD907837FEB1F01D93E007F496D7E49133F
4848131F4848130F48486D7E48481303001F140190C7FC5A003E1400007E5D127CA21501
00FC5D5A4B5AA24B5A127C4B5A4BC7FC6C143E003F5C6C495A390FC003F03907F01FC06C
B5C8FCC613FCEB1FE02C4477C132>56 D<ED3FC0EDFFF0020313FC91380FE07E91383F80
3F4A487E02FC14800101140F494814C0495A495AA2495A133F4A14E0137FA249C7FC161F
A24816C05BA2163F12035BA2167F17804914FFA34B130012015D5D00005D6D130F017C13
1D153B6DEB73FC90381F03E3903907FF83F8903801FC0790C7FC5E150F5E151F5E4B5AA2
4BC7FCA2001C14FE007F5C48495A4A5A14074A5A485C00F8013FC8FC48137E5C387C07F0
383FFFE06C1380D803FCC9FC2B4476C132>I<130FEB1FC0133FEB7FE013FFA214C0EB7F
801400131E90C7FCB3A5120FEA3FC0127FA212FFA35B6CC7FC123C132B76AA1E>I<EF03
801707A24D7EA2171FA2173F177FA217FFA25EA2EE03BF1607173F160F160E161C841638
171F167016F016E0ED01C0A2ED0380A2ED0700A2150E151E151C5D845D170F5D14015D14
035D4AC7FC92B6FC5CA2021CC7120F143C14385CA24A81A249481407A2495A130791C8FC
130E131EA25B137C13FC00014C7ED807FE151FB500E00107B512F8A219F03D477BC648>
65 D<DC0FF8130393B513070307ECC00F923A1FF803E01F923A7FC000F81E4BC7EA7C3E
DA03FCEC3C7EDA0FF0EC1EFE4A48EC0FFC4A4814074AC8FC02FE1503494816F813034948
1501495A494816F0495A137F5C01FF17E04890C9FCA2485A19C0485AA2485A95C7FC121F
5BA2123F5BA3127F5BA4485AA41838A218781870A218F0007F5F1701601703003F5F1707
6D4BC7FC001F160E171E6C6C5D6D5D00075E6C6C4A5A6DEC07C06C6C4A5AD8007F023EC8
FCD93FC013FC90391FF807F00107B512C0010191C9FC9038001FF0404872C546>67
D<91B712F818FF19C00201903980003FF06E90C7EA0FF84AED03FCF000FE4B157FA2F13F
800203EE1FC05DF10FE0A214074B16F01907A2140F5D1AF8A2141F5DA2190F143F5D1AF0
A2147F4B151FA302FF17E092C9123FA34918C04A167F1A80A2010317FF4A1700A24E5A13
074A4B5A611807010F5F4A4B5A181F61011F4C5A4A4BC7FC18FE4D5A013F4B5A4A4A5A4D
5A017FED3FC005FFC8FC4AEB03FE01FFEC1FF8B812E094C9FC16F845447AC34A>I<91B9
12C0A30201902680000313806E90C8127F4A163F191F4B150FA30203EE07005DA314074B
5D190EA2140F4B1307A25F021F020E90C7FC5DA2171E023F141C4B133C177C17FC027FEB
03F892B5FCA39139FF8003F0ED00011600A2495D5CA2160101034B13705C19F061010791
C8FC4A1501611803010F5F4A150796C7FC60131F4A151E183E183C013F167C4A15FC4D5A
017F1503EF0FF04A143F01FF913803FFE0B9FCA26042447AC342>I<DC0FF81306DCFFFE
130E03079038FF801E923A1FF807E03E923A7F8001F03CDA01FEC7EA787CDA03F8EC3CFC
DA0FF0141D4A48EC1FF8DA3F80140F4AC8FCD901FE1507494816F05C01071603495A4948
16E0495A137F5C01FF17C04890C9FC5B12031980485AA2485A95C7FC121F5BA2123F5BA3
127F5BA4485A043FB512E0A39339001FF80060A360A2007F163F60A3177F003F5F7F121F
17FF6D93C7FC000F5D6C6C5C7F6C6C4A5A6C6CEC1F3E6C6C143ED93FC0EBF81E903A1FF0
07F01C0107B5EAC00C010149C9FC9038003FF03F4872C54B>71 D<91B6D8803FB512E0A3
02010180C7387FE0006E90C86C5A4A167FA24B5EA219FF14034B93C7FCA26014074B5DA2
1803140F4B5DA21807141F4B5DA2180F143F4B5DA2181F147F92B75AA3DAFF80C7123F92
C85BA2187F5B4A5EA218FF13034A93C8FCA25F13074A5DA21703130F4A5DA21707131F4A
5DA2170F133F4A5DA2017F151FA24A5D496C4A7EB6D8803FB512E0A34B447AC348>I<02
7FB512E091B6FCA20200EBE000ED7F8015FFA293C7FCA35C5DA314035DA314075DA3140F
5DA3141F5DA3143F5DA3147F5DA314FF92C8FCA35B5CA313035CA313075CA3130F5CA313
1F5CA2133FA25CEBFFE0B612E0A25D2B447BC326>I<91B612F0A25F020101C0C7FC6E5B
4A90C8FCA25DA314035DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92C9FC
A35B5CA3010316104A1538A21878010716705C18F018E0010F15015C18C01703011F1507
4A1580170FA2013FED1F004A5C5F017F15FE16034A130F01FFEC7FFCB8FCA25F35447AC3
3D>76 D<91B56C93387FFFC08298B5FC02014DEBC0006E614A5FA203DF4C6CC7FC1A0E63
912603CFE05D038F5F1A381A711407030FEEE1FCA2F101C3020FEE0383020E60F107036F
6C1507021E160E021C60191CF1380F143C023804705BA2F1E01F0278ED01C091267003F8
5EF003801A3F02F0ED070002E0030E5CA24E137F130102C04B91C8FC606201036D6C5B02
805F4D5A943803800113070200DA07005BA2050E1303495D010E606F6C5A1907011E5D01
1C4B5CA27048130F133C01384B5C017892C7FC191F01F85C486C027E5DD807FE027C4A7E
B500F00178013FB512C0A216705A447AC357>I<91B56C49B512E0A28202009239000FFC
00F107F0706E5A4A5F15DF705D1907EC03CFDB8FF892C7FCA203875D02077F0303150EA2
70141EEC0F01020E161C826F153C141E021C6E1338167F1978023C800238013F1470A271
13F00278131F02705E83040F130102F014F84A5E1607EFFC0313014A01035C17FE180701
0314014A02FF90C8FCA2705B0107168F91C8138E177F18DE5B010EED3FDC18FCA2011E15
1F011C5EA2170F133C01386F5A1378A201F81503486C5EEA07FEB500F01401A2604B447A
C348>I<EE1FF84BB5FC923907F01FC092391F8003F092397E0001F8DA01F86D7EDA03E0
147EDA0FC0804A48EC1F804AC813C0027E150F4A16E049481507494816F01307495A4948
16F8013F16035C137F49C9FC4917FC120112035B1207491607120FA25B121F19F849160F
123FA34848EE1FF0A3183F19E0485A19C0187FA2F0FF80A219005F604D5AA2007F4C5A4D
5AA24D5A003F5F4D5A6D4BC7FC001F5E4C5A6C6C5DEE03F06C6C4A5A0003ED1FC06C6C4A
5A6C6C027EC8FC017EEB01F890393F8007F090390FE03F80902603FFFEC9FC9038007FE0
3E4872C54B>I<91B712F018FEF0FF800201903980007FE06E90C7EA1FF04AED07F81803
4B15FCF001FE1403A24B15FFA21407A25DA2140FF003FE5DA2021F16FC18074B15F8180F
023F16F0F01FE04B15C0F03F80027FED7F0018FE4BEB03FCEF0FF002FFEC7FC092B6C7FC
17F892CAFC5BA25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137F
A25C497EB67EA340447AC342>I<91B77E18F818FE020190398001FF806E90C7EA3FC04A
ED1FE0F00FF04BEC07F8180319FC14034B15FEA314075DA3020FED07FC5DA2F00FF8141F
4B15F0F01FE0F03FC0023F16804BEC7F0018FEEF03F8027F4A5A4BEB1FC04CB4C7FC92B5
12F891B612E092380003F8EE00FE177F496F7E4A6E7EA28413034A140FA2171F13075CA2
173F130F5CA24D5A131F5CA3013F170E5CA2017FEE801E191C4A163C496C1638B66C9038
3FC070051F13F094380FE1E0CA3803FF80943800FE003F467AC347>82
D<DB03FE130C92390FFF801C037FEBE03C9238FE03F8913A03F0007C7C4A48EB3EF84A48
131F4A48130F4AC7FC027EEC07F05C1703495A18E0495AA213074A15C0A3130F1880A280
94C7FCA280806D7EECFFE015FC6DEBFF806D14F016FC6D14FF023F80020F801403DA003F
7F150703007F163F161F160FA21607A3120716031607A2485EA2120E160F001E5EA2001F
4B5AA2484BC7FC6D143E167E6D5C007F4A5A6D495AD87CF0495AD8787CEB1F8027F03F80
7FC8FC90381FFFFCD8E00713F039C0007F80364879C537>I<48B912F85AA2913B0007FC
001FF0D807F84A130701E0010F140349160148485C90C71500A2001E021F15E05E121C12
3C0038143F4C1301007818C0127000F0147F485DA3C800FF91C7FC93C9FCA35C5DA31403
5DA314075DA3140F5DA3141F5DA3143F5DA3147F5DA314FF92CAFCA35B5CA21303A21307
497E007FB612C0A25E3D446FC346>I<001FB500F090383FFFFCA326003FF0C700011380
6D48913800FE00013F167C18785C187018F0017F5E5CA2170101FF5E91C8FCA21703485F
5BA21707000394C7FC5BA25F0007160E5BA2171E120F49151CA2173C121F491538A21778
123F491570A217F0127F495DA2160100FF5E90C8FCA216035F16074893C8FC5E160E161E
5E007E1538007F15785E6C4A5A6D495A001F4A5A6D49C9FC6C6C133E6C6C13F83903FC07
F0C6B512C0013F90CAFCEB07F83E466DC348>I<B6913807FFFEA25C000301C0020013E0
6C90C9EA7F00183E183C60A26C1770601701604D5AA24DC7FC5F170E6E5CA2017F5D1778
17705FA24C5AA24C5A16076E91C8FC160E133F5E163C16385EA25E15015E6E485AA24BC9
FC131F150E151E151C5DA25D15F05DECF1C0A290380FF38014F792CAFC14FEA25CA25C5C
A25C13075CA25C91CBFC3F466CC348>I<EC1F80EC7FE0903901F07070903907C039F890
380F801D90381F001F013E6D5A137E5B484813075E485A120749130F000F5DA2485A151F
003F5D5BA2153F007F92C7FC90C7FCA25D157E12FEA29238FE0380EDFC071700A2007E13
015E913803F80E1407003E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A
01FF801FE03A007E000780292D76AB32>97 D<EB0FE0EA07FFA338001FC0130F131FA25C
A3133F91C8FCA35B137EA313FE5BA312015BEC1F80EC7FE03903F9E0F89038F3C07C9038
F7003E13FE48487F5BA2491480485AA25BA2121F5BA2153F123F90C7FCA2157F48150012
7EA25D5D5AA24A5AA24A5AA2007C5C4A5A140F5D4A5A003C49C7FC003E137E001E5B6C48
5A380783E03803FF80C648C8FC214676C42D>I<EC0FE0EC7FF8903801F81E903807E00F
90390F80078090381F0003017E14C049131F0001143F5B4848EB7F801207485AED3E0048
4890C7FCA2485AA2127F90C9FCA35A5AA45AA5ED0180ED03C0ED0780A2007CEC0F00007E
141E003E147C15F06CEB03E0390F800F802607C07EC7FC3801FFF838007FC0222D75AB2D
>I<EE07F0ED03FFA39238000FE01607160FA217C0A2161FA21780A2163FA21700A25EA2
167EA216FEA25EEC1F80EC7FE1903801F071903907C039F890380F801D90381F001F013E
130F017E5C5B48481307A248485C120749130F120F5E485A151F123F495CA2153F127F90
C790C7FCA25DA200FE147EA29238FE0380160703FC1300A2007E13015E913803F80E1407
003E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E00
07802C4676C432>I<EC0FE0EC7FF8903801F83E903807C00F90391F800780EB3F00017E
14C0491303485A48481307000715805B000F140F484814005D4848133E15FCEC07F0007F
EBFFC0D9FFFEC7FC14C090C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2007EEC0F0000
3E141E157C6C14F06CEB03E03907800F802603C07EC7FC3801FFF838003FC0222D75AB2D
>I<EE0F80EE3FE0EEF870923801F038923803E0F8923807E1FC16C3ED0FC7A2EE87F892
381F83F0EE81E0EE8000153F93C7FCA45D157EA415FE5DA349B512FEA390260001F8C7FC
A314035DA414075DA4140F5DA4141F5DA4143F92C8FCA55C147EA314FE5CA413015CA449
5AA35C1307121C007F5B12FF495AA291C9FC485AEAF81E485AEA7878EA1FF0EA07C02E5A
83C51E>I<15FCEC03FF91390F83838091393E01CFC091387C00EF4A13FF4948137F0103
15804948133F495A131F4A1400133F91C75A5B167E13FE16FE1201495CA215011203495C
A21503A2495CA21507A25EA2150F151F5E0001143F157F6C6C13FF913801DF8090387C03
9F90383E0F3FEB0FFCD903F090C7FC90C7FC5DA2157EA215FEA25DA2001C495A127F4849
5A14074A5A485C023FC8FC00F8137E387C01F8381FFFE0000390C9FC2A407BAB2D>I<14
FE137FA3EB01FC13001301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C157F90
393F83FFC091388F81F091381E00F802387F4948137C5C4A137EA2495A91C7FCA25B4848
14FE5E5BA2000314015E5BA2000714035E5B1507000F5DA249130F5E001F1678031F1370
491480A2003F023F13F0EE00E090C7FC160148023E13C01603007E1680EE070000FEEC1E
0FED1F1E48EC0FF80038EC03E02D467AC432>I<143C147E14FE1301A3EB00FC14701400
AE137C48B4FC3803C780380703C0000F13E0120E121C13071238A21278EA700F14C0131F
00F0138012E0EA003F1400A25B137EA213FE5B12015BA212035B141E0007131C13E0A200
0F133CEBC038A21478EB807014F014E0EB81C0EA0783EBC7803803FE00EA00F8174378C1
1E>I<16F0ED03F8A21507A316F0ED01C092C7FCAEEC01F0EC07FCEC1E1EEC380F027013
8014E0130114C0EB03800107131F1400A2130E153F131E011C140090C7FC5DA2157EA215
FEA25DA21401A25DA21403A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA2
5C147EA214FE001C5B127F48485A495AA248485A495AD8F81FC8FCEA707EEA3FF8EA0FC0
255683C11E>I<14FE137FA3EB01FC13001301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25C167E013F49B4FC92380783C09138000E07ED3C1F491370ED603F017E13E0EC
01C09026FE03801380913907000E00D9FC0E90C7FC5C00015B5C495AEBF9C03803FB8001
FFC9FCA214F03807F3FCEBF07F9038E01FC06E7E000F130781EBC003A2001F150FA20180
140EA2003F151E161C010013E0A2485DA2007E1578167000FE01015B15F1489038007F80
0038021FC7FC2A467AC42D>I<EB03F8EA01FFA3380007F013031307A214E0A2130FA214
C0A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207
A25BA2120FA25BA2121FA25BA2123FA290C7FCA2387F01C01303007E1380A2130700FE13
0012FCA25B130EEA7C1E131CEA3C3CEA3E786C5AEA07C0154678C419>I<D801F0D90FE0
EB07F0D803FCD97FF8EB3FFC28071E01F03EEBF81F3E0E1F03C01F01E00F80271E0F8700
D983807F001C018E90390F870007003C019C148E003801B802DC8002F814FC26781FF05C
0070495CA24A5C00F0494948130FD8E03F6091C75B1200043F141F4960017E92C7FCA24C
143F01FE95C7FC49147E6104FE147E1201494A14FE610301EE0780000305011400494A14
F8A2030302035B0007F0F00E495C1A1E0307EDE01C000F193C494A153862030F020113F0
001FF0F1E0494A903800FF800007C7D80380023EC7FC492D78AB50>I<D801F0EB0FE0D8
03FCEB7FF83A071E01F03E3A0E0F03C01F001ED987001380001C018E130F003C139C0038
01B814C014F838781FF000705BA25C00F049131FD8E03F158091C7FC1200163F49150013
7EA25E01FE147E5B16FE5E12014913015E170F00030203130E4914F0A20307131E0007ED
E01C5B173CEEC038000F167849157017E0ED03C1001FEDE3C049903801FF000007C8127C
302D78AB37>I<EC0FE0EC7FFC903801F83E903907E00F8090390F8007C0EB1F00017EEB
03E04914F0A248481301484814F81207485AA2485AA2485A1503127F90C7FCA215074815
F05AA2150F16E05AED1FC0A21680153F16005D157E5D007C495A007E495A003E5C4A5A6C
EB1F80260F803EC7FC3807C0FC3801FFF038003F80252D75AB32>I<D903E0137E903A07
F801FF80903A0E3C0783E0903A1C1E0F01F0903A3C1F1C00F801385B017849137C01705B
A24A48137E01E05BA292C7FC00015B13C0147EC7FC02FE14FEA25CA20101140117FC5CA2
0103140317F85CA20107EC07F0A24AEB0FE0A2010F15C0EE1F80163F1700496C137E5E4B
5A9138B803F090393F9C07E091389E0F80DA07FEC7FCEC01F849C9FCA2137EA213FEA25B
A21201A25BA21203A21207B512F0A25C2F3F7FAB32>I<D801F0EB3F803A03FC01FFF03A
071E03C0F83A0E0F0F007C001E90389E01FC001C139CECB803003813F0A2D91FE013F800
78EC00E00070491300A200F05BEAE03F91C8FC1200A25B137EA313FE5BA312015BA31203
5BA312075BA3120F5BA3121F5B0007C9FC262D78AB29>114 D<EC0FE0EC7FF8903801F0
1E903803C00F90390780078090380F0003011E14C0150749131FA2017CEB3F801378137C
ED0E0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F1300EC0FFE14011400157F81
120E003F141E487EA2153E48C7123CA200FC5C12705D0078495A6C495A6CEB0F80260F80
3EC7FC3803FFF838007FC0222D7AAB28>I<1470EB01F8A313035CA313075CA3130F5CA3
131F5CA2007FB512E0B6FC15C0D8003FC7FCA25B137EA313FE5BA312015BA312035BA312
075BA3120F5BA2EC0780001F140013805C140E003F131EEB001C143C14385C6C13F0495A
6C485AEB8780D807FEC7FCEA01F81B3F78BD20>I<137C48B414072603C780EB1F803807
03C0000F7F000E153F121C0107150012385E1278D8700F147E5C011F14FE00F05B00E05D
EA003FEC0001A2495C137E150313FE495CA215071201495CA2030F13380003167849ECC0
70A3031F13F0EE80E0153F00011581037F13C06DEBEF8300000101148090397C03C78790
3A3E0F07C70090391FFE01FE903903F000782D2D78AB34>I<017C143848B414FC3A03C7
8001FE380703C0000F13E0120E001C14000107147E1238163E1278D8700F141E5C131F00
F049131C12E0EA003F91C7123C16385B137E167801FE14705BA216F0000115E05B150116
C0A24848EB0380A2ED0700A2150E12015D6D5B000014786D5B90387C01E090383F0780D9
0FFFC7FCEB03F8272D78AB2D>I<017CEE038048B4020EEB0FC02603C780013FEB1FE038
0703C0000E7F5E001C037E130F01071607123804FE130300785DEA700F4A1501011F1301
00F001804914C012E0EA003FDA000314034C14805B137E0307140701FE1700495CA2030F
5C0001170E495CA260A24848495A60A2601201033F5C7F4B6C485A000002F713036D9039
E7E0078090267E01C349C7FC903A1F0781F81E903A0FFF007FF8D901FCEB0FE03B2D78AB
41>I<02F8133FD907FEEBFFE0903A0F0F83C0F0903A1C07C780F890393803CF03017013
EE01E0EBFC07120101C013F8000316F00180EC01C000074AC7FC13001407485C120EC7FC
140F5DA3141F5DA3143F92C8FCA34AEB03C01780147EA202FEEB0700121E003F5D267F81
FC130E6E5BD8FF83143CD903BE5B26FE079E5B3A7C0F1F01E03A3C1E0F83C0271FF803FF
C7FC3907E000FC2D2D7CAB2D>I<137C48B414072603C780EB1F80380703C0000F7F000E
153F001C1600130712385E0078157EEA700F5C011F14FE00F0495B12E0EA003FEC00015E
5B137E150301FE5C5BA2150700015D5BA2150F00035D5BA2151F5EA2153F12014BC7FC6D
5B00005BEB7C0390383E0F7EEB1FFEEB03F090C712FE5DA214015D121F397F8003F0A24A
5A4848485A5D48131F00F049C8FC0070137E007813F8383801F0381E07C06CB4C9FCEA01
FC294078AB2F>I<027C130749B4130F49EB800E010F141E49EBC03CEDE03890393F03F0
7890397C00FDF00178EB3FE00170EB03C001F0148049130790C7EA0F00151E5D5D5D4A5A
4A5A4A5A4AC7FC141E5C5C5C495A495A495A49C8FC011E14F04914E05B491301485A4848
EB03C0D807B0130701FEEB0F80390FCF801F3A1F07E07F00393E03FFFED83C015B486C5B
00705C00F0EB7FC048011FC7FC282D7BAB28>I<BE12C0A25A02759B64>124
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmr12 12 84
/Fv 84 128 df<9239FFC001FC020F9038F80FFF913B3F803E3F03C0913BFC00077E07E0
D903F890390FFC0FF0494890383FF81F4948EB7FF0495A494814E049C7FCF00FE0499139
3FC0038049021F90C7FCAFB912F0A3C648C7D81FC0C7FCB3B2486CEC3FF0007FD9FC0FB5
12E0A33C467EC539>11 D<4AB4FC020F13E091387F80F8903901FC001C49487FD907E013
0F4948137F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80B8FCA3C648C7
FC167F163FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>I<913801FFC0020FEBFB
8091387F803F903801FC00494813FFEB07E0EB1FC0A2495A49C7FC167F49143F5BAFB8FC
A3C648C7123FB3B2486CEC7FC0007FD9FC1FB5FCA330467EC536>I<DBFF80EB3FE0020F
9039F001FFFC913B3F807C0FF01F913CFC000E3F800380D903F86D48486C7E4948D90FFC
804948D93FF8130F4948017F4A7E49485C49C75BA25B494B6D5A041F6E5A96C8FCACF107
F0BBFCA3C648C7391FC0001F190F1907B3B0486C4A6C497E007FD9FC0FB50083B512E0A3
4B467EC551>I<DBFFC0EB3FF8020FD9F001B51270913C3F803C0FF007F0913AFC000F3F
80D903F890391FFF001F4948EB3FFC4948495A495A49485C49C75B190F49023F1407496E
5AAFBBFCA3C648C7391FC00007B3B2486C4A6C497E007FD9FC0FB50083B512E0A34B467E
C551>I<131F1480133F137FA2EBFF00485A485A5B485A485A138048C7FC123E123C5A12
E0124011126CC431>19 D<121EEA7F80EAFFC0A9EA7F80ACEA3F00AB121EAC120CA5C7FC
AA121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A4778C61B>33 D<001EEB03C0397F800FF0
00FF131F01C013F8A201E013FCA3007F130F391E6003CC0000EB000CA401E0131C491318
A3000114384913300003147090C712604814E0000614C0000E130148EB038048EB070048
130E0060130C1E1D7DC431>I<D91F801618D97FE0163CD9F078167C2603E01C16FC4848
6C4B5A260F800F4B5A6E6C1407271F0003E04A5A6FEC3FC0003ED901BE14FF923ACFC00F
CF80007ED900C1B5001FC7FC9238C03FF0007C92C7123E6F147E00FC0260147C60170160
4D5A1707604D5A171F95C8FC173E007C02E0137E4B137C007E5E1601003E01015C4B485A
6C13034B485A6C6C48130F020E5C2607C00C49C9FC2603E01C5B2600F078133ED97FE05B
D91F8001FCEB03F090C848EB0FFC4B48EB1E0F030391387C03804CEBF801922707C001F0
13C0030FED00E04C48481360DB1F0015704D481330033E1638037E010F1418157C4B5C02
01171C4B011F140C4A5A14075D4A5A141F92C7FC143E147E147C5C0101030F141C4A1718
494881A2494802071438010F18304A6E6C137049C81560496F6C13E0013EEF01C049DB00
F8138001FCEE7C034993381E0F0049EE0FFC0160EE03F046517BCA51>37
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
1206120E5A5A5A12600B1D78C41B>39 D<140C141C1438147014E0EB01C01303EB0780EB
0F00A2131E5BA25B13F85B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA412
7CA312FCB3A2127CA3127EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13
787FA27F7FA2EB0780EB03C01301EB00E014701438141C140C166476CA26>I<12C07E12
707E7E7E120F6C7E6C7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0
A3EB03E0A314F0A21301A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3
EB07C0A3EB0F80A3EB1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E
5A5A5A5A5A16647BCA26>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3
AB6F5A41407BB84C>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0
A312011380120313005A1206120E5A5A5A12600B1D78891B>I<B612C0A61A067F9721>I<
121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<14FF010713E090381F81F890
383E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F0491301001F
15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8
A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F
81F8903807FFE0010090C7FC28447CC131>48 D<143014F013011303131F13FFB5FC13E7
13071200B3B3B0497E497E007FB6FCA3204278C131>I<EB03FE90381FFFC0017F13F039
01F80FFC3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015
F800601407126CB415FC7F7F1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2
ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7
120C131E5B013814185B5B485A4848143848C81230000E1570001FB612F0A25A5AB712E0
A326427BC131>I<49B4FC010F13E0013F13FC9038FE01FE3A01F0007F80D803C0EB3FC0
48C7EA1FE0120EED0FF0EA0FE0486C14F8A215077F5BA26C48130FEA03C0C813F0A3ED1F
E0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007FED
3F80ED1FC0ED0FE016F0ED07F816FC150316FEA2150116FFA3121EEA7F80487EA416FE49
1303A2007EC713FC00701407003015F80038140F6C15F06CEC1FE06C6CEB3FC0D803E0EB
7F803A01FE01FE0039007FFFF8010F13E0010190C7FC28447CC131>I<ED0380A2150715
0FA2151F153FA2157F15FFA25CEC03BF153F14071406140C141C141814301470146014C0
13011480EB03005B13065B131C13185B1370136013E0485A5B120390C7FC1206120E120C
5A123812305A12E0B812C0A3C8383F8000ADEDFFE0027FEBFFC0A32A437DC231>I<0006
15C0D807C0130701FCEB7F8090B612005D5D5D15E0158026063FFCC7FC90C9FCAE14FF01
0713C090381F01F090383800FC01F0137ED807C07F49EB1F8016C090C7120F000615E0C8
EA07F0A316F81503A216FCA5123E127F487EA416F890C712075A006015F0A20070140F00
3015E00038EC1FC07E001EEC3F806CEC7F006C6C13FE6C6C485A3901F807F039007FFFE0
011F90C7FCEB07F826447BC131>I<EC07FCEC3FFF91B512C0903903FC03E0903907E000
F0D91FC0133849C71258017EEB01FC01FE1303491307485A485AA24848EB03F8000FEC01
F092C7FC485AA3485AA3127FA29038007F80903801FFF090380780FC39FF0E003E49EB1F
8049EB0FC049EB07E0136001E0EB03F04914F8150116FC5BED00FEA390C812FFA47EA57F
123FA216FE121F15016D14FC120FED03F86C7EED07F06C6C14E06C6CEB0FC06C6CEB1F80
017EEB3F0090383F80FE90380FFFF8010313E00100138028447CC131>I<121CA2EA1F80
90B712C0A3481680A217005E0038C8120C0030151C00705D0060153016705E5E4814014B
5A4BC7FCC81206150E5D151815385D156015E04A5AA24A5A140792C8FC5CA25C141E143E
A2147E147CA214FCA21301A3495AA41307A6130FAA6D5AEB01C02A457BC231>I<14FF01
0713E0011F13F890387F00FE01FC133FD801F0EB1F804848EB0FC049EB07E00007EC03F0
48481301A290C713F8481400A47FA26D130116F07F6C6CEB03E013FC6C6CEB07C09039FF
800F806C9038C01F006CEBF03EECF87839007FFEF090383FFFC07F01077F6D13F8497F90
381E7FFFD97C1F1380496C13C02601E00313E048486C13F000079038007FF84848EB3FFC
48C7120F003EEC07FE150148140016FF167F48153FA2161FA56C151E007C153EA2007E15
3C003E157C6C15F86DEB01F06C6CEB03E06C6CEB07C0D803F8EB1F80C6B4EBFF0090383F
FFFC010F13F00101138028447CC131>I<14FF010713E0011F13F890387F80FC9038FC00
7E48487F4848EB1F804848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FC
A25AA216FE1500A516FFA46C5CA36C7E5D121F7F000F5C6C6C1306150E6C6C5B6C6C5BD8
007C5B90383F01E090390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F80
1307486C14E0486C130F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A39
07E01FE06CB51280C649C7FCEB1FF028447CC131>I<121EEA7F80A2EAFFC0A4EA7F80A2
EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2B78AA1B>I<007FBAFCBB
1280A26C1900CEFCB0007FBAFCBB1280A26C190041187BA44C>61
D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03F
A2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA2027081
0260147FA202E08191B7FCA249820280C7121FA249C87F170FA20106821707A2496F7EA3
496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649
>65 D<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0717E717E717E84170384
170184A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17FC0280C7
B47EEF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F07FC0A2198018FF
4D1300A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17FC17C03B447CC345>I<
DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903
FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A49160712
0348481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2
123F7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C
150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13
FC0203B512F0020014C0DB0FFEC8FC3B487BC546>I<B8FC17F017FC00019039C00007FF
6C499038007FC0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385
A2180185A38584A31A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18
FEEF03FC4D5AEF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<
B912F8A3000101C0C7127F6C6C48EC07FC17011700187C183C181CA284A31806A4180704
067FA395C7FCA4160EA2161E163E16FE91B5FCA3EC8000163E161E160EA21606A319C0A3
F0018093C7FCA41803A21900A260A260A2181EA2183E187EEF01FE170748486C147FB95A
A33A447CC342>I<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2
181CA3180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C
163C161CA2160CA793C8FCB08048487EB612F8A337447CC340>I<DB0FFE146092B500C0
13E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E7
4948EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A2484816
01A248481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF00072
5A003F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D
6C15E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F813600200
02E090C7FCDB0FFEC9FC42487BC54D>I<B6D8C003B6FCA3000101E0C70007138026007F
80913801FE00B3A991B7FCA30280C71201B3AC2601FFE0913807FF80B6D8C003B6FCA340
447CC349>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0A31C447DC323>I<
010FB512FEA3D9000313806E130080B3B3AB123F487E487EA44A5A13801300006C495A00
705C6C13076C5C6C495A6CEB1F802603E07FC7FC3800FFFCEB1FE027467BC332>I<B600
C049B512C0A3000101E0C8387FFC006C49ED3FE06D481680063EC7FC183C183860604D5A
4D5A4DC8FC171E17385F5F4C5A4C5A4CC9FC160E5E5E5E5E4B5A4B7E4B7E150F4B7E4B7E
1577EDE3FE913881C1FFEC8381DA87007F028E6D7E149C02B86D7E02F06D7E14C04A6D7E
707EA2707E707EA2707F717EA2717E717EA2717E717EA2717E717EA2717F8585496C8248
6D4A13FCB600C0011FEBFFE0A343447CC34C>I<B612F8A3000101E0C9FC6C6C5A5CB3B3
1830A418701860A518E0A3EF01C0A217031707A2170F173F177FEE01FF48486C011F1380
B9FCA334447CC33D>I<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F0
1633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C14
0CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A29238
3F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C
143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>I<B56C020FB5FC8080C604
0013F06D6CED1F80D96FF8ED0F00A2D967FC1506EB63FEA2EB61FF01607FA26E7E6E7EA2
6E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380A2
EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF701386A2EF7FC6EF3FE6A2EF
1FF6EF0FFEA217071703A217011700A201F0167E183E487ED80FFF161EB500F0150EA218
0640447CC349>I<ED1FFC4AB512C0913907F007F091391F8000FC027EC7123FD901F8EC
0FC049486E7E49486E7E49486E7E49486E7E49C9127E017E8201FE834848707E4848707E
A24848707EA2000F84491603001F84A24848707EA3007F84A24982A300FF1980AD6C6C4C
1300A4003F606D1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C6C4C5A0000
60017F4CC7FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0D9007E4AC8
FCDA1F8013FC913907F007F00201B512C09126001FFCC9FC41487BC54C>I<B712FCEEFF
C017F800019039C0000FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA2
18FE1701A218FFA718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE
0FFC91B612F017800280C9FCB3AA3801FFE0B612C0A338447CC342>I<B712E016FF17C0
00019039C0003FF86C6C48EB03FCEE00FF717E717E717E717E717EA284170384A760A217
07604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0
707EEE03FC707E160083717EA2717EA784A71A6084171FA21AE0716C13C02601FFE00207
1301B600C01680943801FC03943900FE0700CBEA3FFEF007F843467CC348>82
D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0EB079F49EB03DF48
486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA26C6C91C7FC7F7FEA
3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F0010F80010180D900
1F7F14019138001FFF03031380816F13C0167F163F161F17E000C0150FA31607A37EA36C
16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8F07C495A90393FC0
0FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<003FB912F8A3903BF0001F
F8001F01806D481303003EC7150048187C0078183CA20070181CA30060180CA5481806A5
C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<B600C0010FB5FCA3000101E0C813
F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C131F6E1518010F163818
306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C913907FC
03F00201B55A6E6C1380DB07FCC8FC40467CC349>I<B692383FFFF0A3000301E0030713
00C649ED01FC4A5E017F705A6E5E133F616E1501011F5FA26D6C4BC7FCA28001071606A2
6E150E0103160CA26D6C5DA2806D5EA26F1470027F156081023F5DA281021F4A5AA26F13
03020F92C8FC8102071406A26F130E0203140CA26E6C5BA2816E5CA2EE8070037F1360A2
6F6C5AA216E092381FE180A216F3030F90C9FC16FBED07FEA36F5AA36F5AA26F5AA31660
44467EC349>I<B60107B500F890380FFFFEA3000301E0D9001F90C813F06C0180DA0FFC
ED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06FF1538011F1A30
A26E020E6D1470010FDB0C7F1560A26E021C7F0107DB183F5DA2856D6CDA301F4A5AA36D
6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E130E027FDA8003140CA2DBC00380023F
DA00015CA203E081021F01066D5CA36E6C486E6C5AA36E6C486E6C5AA36F48EC1FE10203
60A2DBFE7015F302010160020F90C8FCA2DBFFE015FB6E49EC07FEA36F486E5AA36FC86C
5AA3031E6F5AA4030C16605F467EC364>I<003FB500E0011FB5FCA3C691C7000713E0D9
3FFC020190C7FC6D4815FC010F6F5A6D6C15E0A26D6C4A5A6D6C5D4DC8FC6D6D5B6E6C13
065F6E6C131C6E6C13185F6E6C13706E6C13605F913803FE01DA01FF5B4CC9FC6E1387ED
7FC616CCED3FFC6F5A5E6F7E6F7EA26F7E82A203067F150E92380C7FC04B6C7E15389238
301FF04B6C7E15E04B6C7E4A486C7E14034B6C7E02066D7F140E020C6E7E4A6E7E143802
306E7E4A6E7E14E04A6E7E49486E7E130349C86C7E496F7F5B496C8201FF83000701E002
0313F8B500F8021FEBFFF0A344447EC349>I<B66C91380FFFFCA3000101F8C8000313C0
26007FE0923800FE0061013F17F06D6C5E80010F5F6D6C4B5A18036D6C93C7FC6E15066D
160E6D6D140C181C6E6C14186E6C5C18706E6C146018E06E6C5C6E6C495A17036E6C91C8
FC5F6E6C13066E6D5A171C92387FC0185FED3FE06F6C5A17E06F6C5AEEF980ED07FF6F90
C9FCA26F5AB3A6923807FF800203B6FCA346447FC349>I<001FB81280A3912680000113
0001FCC7FC01F04A5A01C04A5A5B90C8485A121E4C5A484B5AA200384B5A4C5AA24B90C7
FC00304A5AA24B5AA24B5AC8485AA24B5A4B5AA24B5A5C93C8FC4A5AA24A5A4A5AA24A5A
4A5AA24A5A14FF5D4990C9FCEF0180495A495AA2495A494814031800495AA2495A495A5F
4890C8FC485A5F485A48485D5F48485D17FE484814034848140F16FFB8FCA331447BC33C
>I<EAFFFCA4EAF000B3B3B3B3B3A2EAFFFCA40E6476CA1B>I<01C0131800011438484813
7048C712E0000EEB01C0000C1480001C13030018140000385B003013060070130E006013
0CA300E0131C481318A400CFEB19E039FFC01FF801E013FCA3007F130FA2003F130701C0
13F8390F0001E01E1D71C431>I<EAFFFCA4EA003CB3B3B3B3B3A2EAFFFCA40E647ECA1B>
I<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EC7F809038
03FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB1FE049133F12
0F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C
6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381FC078903807FF
F001001380242E7DAC2B>I<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C
90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5A
AB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F01
1C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090
381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F484814E015
07A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670000F1560
6D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F8903803FFE001
0090C7FC242E7DAC2B>I<EC0FE0EC7FF8903801F81E903803F03F90390FE07F8090381F
C0FF5C133F495AA2ED7F0001FE131C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA3
21467EC51E>I<EE0F80D901FCEB7FE0903A0FFF81F0F090393F07E3819039FC01FF033A
01F800FE014848017E13E00007027FC7FC497F000F8149131F001F81A9000F5D6D133F00
0792C7FC6D5B0003147E6C6C5B6D485A3903BF07E090380FFF80260701FCC8FC90CAFCA2
5AA37F6C7E7F90B512F86C14FF16E06C15F86C6C8048B67E3A07C0000FFF48481300003F
C8EA3F80003E151F48ED0FC0A2481507A56C150F007C1680007E151F003E16006C153E6C
6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C427DAC31>
I<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FEC
E000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC4
36>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0
487EB512F8A315437DC21C>I<143C14FFA2491380A46D1300A2143C91C7FCADEC7F80EB
3FFFA31300147F143FB3B3AA123E127F39FF807F00A2147EA25C6C485A383C01F06C485A
3807FF80D801FEC7FC195785C21E>I<EA01FC12FFA3120712031201B3A292381FFFE0A3
6F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FD
CFE09038FF8FF01407496C7E01FC7F14016E7E81816F7E82151F6F7E821507826F7E8282
486C491380B5D8F81F13F8A32D457DC433>I<EA01FC12FFA3120712031201B3B3B3A548
7EB512F8A315457DC41C>I<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E0
7F913C3C01FC07803F800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38
804A143001FFDA3FF06D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B5
12E0A34B2C7DAB52>I<3901FC01FE00FF903807FFC091381E07F091383801F800070170
7F0003EBE0002601FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FE
A32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E
48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A2
6D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A
013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF9038
0FFF8091383C07E091387001F83A07FDE000FE00010180137F01FFEC3F8091C7EA1FC049
15E049140F17F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE
1FC06D143F17806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC
91C9FCAE487EB512F8A32F3F7DAB36>I<91387F8003903903FFE00790380FE07890393F
801C0F90387E000E496D5AD803F8EB039F0007EC01BF4914FF48487F121F5B003F81A248
5AA348C8FCAB6C7EA3123F7F121F6D5C120F6D5B12076C6C5B6C6C497E6C6C130E013F13
1C90380FC0F8903803FFE09038007F0091C7FCAEEEFF80033F13FEA32F3F7DAB33>I<39
03F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF
13005BA45BB3A748B4FCB512FEA3202C7DAB26>I<90383FE0183901FFFC383907E01F78
390F0003F8001E1301481300007C1478127800F81438A21518A27EA27E6C6C13006C7E13
FC383FFFE06C13FC6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0EB01FE
1400157E7E153EA27EA36C143C6C147C15786C14F86CEB01F039F38003E039F1F00F8039
E07FFE0038C00FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE1201120700
1FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070
903807E0E0903801FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA3000714
01000380000181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90
380FC078903803FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7F
E06C48EC1F8000011600160E1200160C017F5CA280013F5CA26E1370011F146080010F5C
A2ECF00101075CA26D6C48C7FCA26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015
F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>I<B500E0B539E03FFF80A30007903C000F
FE000FFC00D803FCD903F8EB03F8F001E0120103015D6D80000060A26D6E13036DD9037E
91C7FCA20280017F5B013FD9063F1306A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D9
07F06E5AED3007A2D903F86E5AED6003A2902601FCE06D5AEDC00117FCD900FFECFD80ED
800017FF027F92C8FC92C77EA26E147E023E143EA2021E143C021C141CA2412C7EAA46>
I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F5C6E13E06D7E010F495A
6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E5AEC3FF05D141F140F6E
7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101131F49486C7E02007F0106
6D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0B5D8800F13FFA3302B7F
AA33>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C6D141C
6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF803010391C7FC
A2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36E
C8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA
0FFCEA03F02E3F7EAA33>I<003FB612E0A29038C0003F90C713C0003CEC7F800038ECFF
00A20030495A0070495AA24A5A0060495AA24A5A4A5AA2C7485A4AC7FC5B5C495A13075C
495A131F4A1360495A495AA249C712C0485AA2485A485A1501485A48481303A24848EB07
804848131F00FF14FF90B6FCA2232B7DAA2B>I<B9FCA23002809B31>I<001EEB0780007F
EB0FE039FF801FF0EBC03FA4EB801F397F000FE0001EEB07801C0A76C231>127
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmbx12 14.4 34
/Fw 34 121 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A111176
9025>46 D<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7FCB3
B3B3A6007FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC013F14FF90B712
C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F0168048
6C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C05E18
80A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC
4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F80140749C8
FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>I<91380FFF
C091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848C76C7ED803F86E
7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C75AD801FC1680C9
FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016FCEEFF80DA0007
13E0030113F89238007FFE707E7013807013C018E07013F0A218F8A27013FCA218FEA2EA
03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C4816E001F04A13
C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D011F1580010302FC
C7FCD9001F1380374F7ACD43>I<121F7F7FEBFF8091B81280A45A1900606060A2606060
485F0180C86CC7FC007EC95A4C5A007C4B5A5F4C5A160F4C5A484B5A4C5A94C8FC16FEC8
12014B5A5E4B5A150F4B5AA24B5AA24B5A15FFA24A90C9FCA25C5D1407A2140FA25D141F
A2143FA4147F5DA314FFA55BAC6D5BA2EC3FC06E5A395279D043>55
D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F80167E8304
FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293
C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87EA24A83A3DA3F
80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A82010F
855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65 D<BC1280A5D8000701F8C7
000114C0F0001F19071901851A7F1A3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A4
97C7FC1701A317031707170F177F92B6FCA59238F8007F170F170717031701A317001B3E
A31B7CA395C8FCA21BFCA21BF8A21A01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF
1907191F0603B5FCBCFCA21BC0A34F517CD058>69 D<B8D8C003B8FCA5D8000701F8C900
1FEBE000B3AE92BAFCA503F8C9121FB3B1B8D8C003B8FCA560527CD169>72
D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>I<B812F8A5D8000701F8
CAFCB3B3A91A7CA41AFC1AF8A51901A31903A219071AF0190FA2191F193F197F19FF1803
60183F4DB5FCBB12E0A546527CD151>76 D<B600FC073FB512FE6F61A26F96B6FCA2D800
07F5C00070EF01EFA202EF6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA3
02E06D173CA26F6C1778A26F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6D
ED0F00A26F6D151EA26F6D5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3
706D49C7FCA2706D131EA2706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE7
80A27101FFC8FCA3715BA2715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A
77527CD180>I<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313
C0070F13E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0
614F13C04F13004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A55052
7CD15C>80 D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC
006D5A4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F498100
7F82A28412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CED
FFC017F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F1680140003
0F15C0ED007F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07E
A26CEFFFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1F
FFC003FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479
D24B>83 D<B700FE031FB512FEA5D8001F01F0CA383FFE00F307F06D626F170F6D62811B
1F6D6D601B3F6D97C7FC6F5F6D197E821BFE6E6D5E1A016E6D5E1A036E60701507A26E6D
5E1A0F6E6D5E1A1F6E6070153FA26E6D93C8FC626E6E147E1AFE6F5E711301A26F6D5C19
036F6D5C19076F5E71130FA26F6D5C191F6F6D5C193F6F93C9FC715BA26FEC807E19FE70
6D5A18C1705C18E3705C18F318F770EBFFE0A2705CA2705CA37091CAFCA2705BA2715AA3
715AA2715AA2715A715A5F537DD166>86 D<EC7FFF0107B512F0013F14FE90B77E48D9E0
0F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C
5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F048
5B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F8
6C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E00101
01E090C8FC3C387CB641>97 D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033F
EBFFC092B612F002F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F
4A824A6E7FA2727EA285A28584A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A
5B6F495BDACFC04990C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F
01FCC8FC90C7000313C041547BD24B>I<913801FFF8021FEBFF8091B612F0010315FC01
0F9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F
138091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15
C07E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF00103
90B55A01001580023F49C7FC020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707
B3A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101
B5FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37E
A26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07F
CF6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC002
3F13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D
7E48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFC
A6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F
806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113
F034387CB63D>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90267F
FC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813E048
9338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D
495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFCA212
0FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848C700
031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18006C
6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F03FC
C7FC010115E0D9000F01FCC8FC3C4F7CB543>103 D<EB3FF0B5FCA51203C6FCB3A4EE1F
FC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3
C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>I<137F497E
000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3
A6B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108
D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E017F8092271F
E07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06DD90780137F
DAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3
ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F003
0F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502
FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B6
12C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F4849
6D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3
003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE
011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<
903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9
FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A
0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FB
FE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<
90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013
FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612
FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307
D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15
F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0EC003F0307
13F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC
7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB6
35>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FC
A426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEB
FFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F0
0107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F
13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F
147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F
5AA26F5AA26F5AA26F5A6F5A40367DB447>I<B6D8E07FB5D8C003B512C0A5000101F0C7
01F0C7381FF8006E027FED07E06C715DA26E023F150F017F705DA26E181F013F4B6C92C7
FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F315FC6D715B160303E001E114016D
020702E05B03F013C06D71485A160F03F8D9807F13076D05F85B93381F003F03FC160F02
7F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E4C6D13
7E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E5F93C8123F6F5EA2033E6FC9FC5A
367DB461>I<007FB500F090387FFFFEA5C66C48C7000F90C7FC6D6CEC07F86D6D5C6D6D
495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE014C5A6E6C485A6EEB8FE06E
EBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B7F4B7F92B5FCDA01FD7F03
F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F02FE6D7F4A6D7F495A4948
6D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612C0A542357EB447>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmsy10 14.4 1
/Fx 1 14 df<943807FFF094B67E040715F0043F15FE93B87E03039026FC001F13E0030F
0180010013F8DB3FFCC8EA1FFEDBFFE0923803FF804A018003007F4A48CAEA3FE0DA0FF8
EF0FF8DA1FE0EF03FC4A48717E4A48717E02FECCEA3F804948737E4948737E4948737E49
48737E4A19014948737E49CE127EA2017E8749757EA24848757E491B07000389491B0300
0789491B01000F89491B00A2001F8990D0127CA2481D7E003E1D3EA2007E1D3F007C89A5
00FC1E80481D0FAE6C1D1F007C1E00A5007E65003E1D3EA2003F1D7E6C1D7CA26D1CFC00
0F65A26D1B010007656D1B030003656D1B070001656D1B0F6C6C515AA2017E51C7FC6D1B
7EA26D6C626D6C4F5A6E19036D6C4F5A6D6C4F5A6D6C4F5A6D6C4F5ADA7F8006FFC8FC6E
6C4D5A6E6C4D5ADA0FF8EF0FF8DA03FEEF3FE06E6C6CEEFFC06E01E003035BDB3FFCDB1F
FEC9FC92260FFF80ECFFF8030301FC011F13E0030090B71280043F4BCAFC040715F00400
1580050701F0CBFC697079D578>13 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmr17 17.28 10
/Fy 10 118 df<B712E0A4C60280CAFCD93FFCCBFC131F5CB3B3B21A1CA61A3C1A38A61A
78A41AF8A21AF01901A219031907A2190F191F193F197FF001FF1807013F043F13E0D9FF
FC0203B5FCBBFCA4466279E153>76 D<DA07FF1403023F01F05B49B512FC010702FF5B90
260FFC0013C0D93FE090380FF01FD97F80EB03F801FEC86C5A4848157E4848ED1F7F4848
6F5A4848815B001F824981003F8290CAFC4883A2007E83A212FE84A384A27EA36D82A26C
7EA26D93C7FC6C7E7F7F6C7E6D7E6C13E06C13FCECFFC06C14F86CECFF806C15F86DECFF
80011F15E06D15F8010315FE01006F7E021F81020181DA003F80030380DB003F7F04037F
EE007FEF1FFF71138017037113C083A2F07FE0183FA2181F00E018F0180FA41807A27EA4
7E19E0180F7E19C07E6C171F19806D163F6D17006D5E6D16FE486C5E6D4B5AD8FC7F1503
D91F80EC0FF026F80FE04A5AD907FCEC7F8029F001FFE003FFC7FC6D6CB512FC48011F14
F0020314C0489026001FFEC8FC3C667AE349>83 D<EC3FF0903803FFFE010F6D7E90393F
C03FE090397E0007F801F86D7ED801E06D7E48486D7E48486E7E48C86C7E7F01F06E7E48
7E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF807903801FF8090
3807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2484817E0A312FF5BA2
160FA3161F6D141B007F153B16736D913971FC01C06C6C14E1001FEC01C1D80FFC903A07
80FE03806C6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D5A011F01E0EB1FF801
0190C7EA07E03B417ABF42>97 D<EC03FE91381FFFE091B512F8903901FE03FE903A07F0
007F8049486D7ED93FC06D7E49C76C7E496E7E4914034848814848140100078249140000
0F8283485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA312
3FA27F121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C
6D6C5C6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F13F00201
138032417CBF3A>101 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3B3B3B3AD497E49
7EB612F0A41C647DE323>108 D<D903C0D9FFC0EC07FED807FF010301F891381FFFC0B5
010F01FE027F13F0923D3F00FF8001F807FC0378903B3FC003C001FEDAC1E090261FE00F
C77E0001D9C3C090260FF01E6E7ED8007F49902607F81C6E7E02C7C75CD93FCE6E6C486E
7E02CC166002DC16E002D85E02F8DA01FF6F7E4A5EA24A93C8FCA44A5DB3B3496C4A6C4B
7E496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>I<D903C0EB7FE0D807FF90
3803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27007FC3808002
C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F0
03B612C0A4423F7DBE49>I<9039078003F8D807FFEB0FFFB5013F13C092387C0FE09138
81F01F9238E03FF00001EB838039007F8700148FEB3F8E029CEB1FE0EE0FC00298EB0300
02B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FCA42C3F7CBE33>114
D<9139FFE00180010FEBFC03017FEBFF073A01FF001FCFD803F8EB03EFD807E0EB01FF48
487F4848147F48C8123F003E151F007E150F127CA200FC1507A316037EA27E7F6C7E6D91
C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14F0011F80010714FED9
007F7F02031480DA003F13C01503030013E0167F00E0ED1FF0160F17F86C15071603A36C
1501A37EA26C16F016037E17E06D14076DEC0FC06D1580D8FDF0141FD8F8F8EC7F00013E
14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D417DBF34>I<D903C015
0FD807FFED1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B25FA35FA35F011F
15066E140E5F130F6E4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00FFC01F8091
393FFFFE00020F13F8020001C0EC800042407DBE49>117 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fz cmr12 14.4 43
/Fz 43 122 df<ED03FF033F13E04AB512F8913907FE01FC91391FE0003E4A48130F02FF
C76C7E4948143F49484A7E494814FF130F5C495AA2715A49486EC7FC170C94C8FCAFEF3F
C0B9FCA43A003FC00001EE007F173FB3B3A4D9FFF0ECFFF0007F9026FFE07FEBFFE0A43B
547ED341>12 D<120FEA3FC0EA7FE012FF13F0A213F8A3127F123FEA0F381200A5137813
70A313F013E0A2120113C0120313801207EA0F00121EA25A5A12300D23768B21>44
D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C768B21>46
D<EC1FF891B5FC010314C090390FF81FF090391FC003F849486C7E017EC7127E49800001
168049141F4848EC0FC0000716E0491407000F16F0A34848EC03F8A2003F16FCA44848EC
01FEA700FF16FFB3A5007F16FEA56D1403A2003F16FCA4001F16F8A26D1407000F16F0A2
6C6CEC0FE0A26C6CEC1FC0A26C6CEC3F806C6CEC7F00017F14FE6D6C485A6D6C485A9039
0FF81FF00103B512C0010091C7FCEC1FF830517BCE3B>48 D<EC7FE0903803FFFE010F6D
7E013F14E0D9FF0013F8D801F8EB1FFCD803E06D7E4848EB03FF48486D138090C813C000
1E16E0001C157F003CED3FF012380078ED1FF81270A2B4ED0FFC13C07FA66C5A6C5A000E
C8FCC9EA1FF8A317F0163FA2EE7FE017C016FF17804B1300A24B5A4B5A5E4B5A4B5A4B5A
5E4BC7FC15FE4A5A4A5A4A5A4A5A5D4A5A4AC8FC147E5C4948141CEB03E0495A49481438
91C8FC131E5B5B491578485A48481570484815F048B7FCA25A5A5AB812E0A42E4F7ACE3B
>50 D<EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C7E16E7A203017F16C3A203038016
81A2DB07017F82A2030E80177FA24B80173FA24B6D7EA20378800370130FA203F0804B13
07A20201814B7FA24A488183A24AC78083A2020E82187FA24A6F7E021FB7FC4A82A30278
C8EA1FFC0270150FA202F0824A1507A249488284A249488384A249CA7FA24984010E177F
A2011E84193F133E017F8448486C4C7E000F01E04B487EB500FE037FEBFFFEA44F557CD4
58>65 D<DC1FFC14034BB500C01307030F02F0130F037F14FC912801FFF800FF131F0207
0180EB1FC04A48C73807E03FDA3FF8913801F07FDA7FE0EC00F8902601FF80ED3CFF4990
C97E494882494882495A4948824948825C01FF834849177F91CBFC48193F485AA2484818
1FA2121F49180FA2123FA2491807127FA31A005B12FFAE127F7FA31A07123F7FA2121FA2
6D180F000F190EA26C7E1A1E6C6C181C6C193C806C6D1778137F6E17F06D6CEE01E06D7E
6D6CEE03C06D6CEE07806D6CEE0F006D6D151E9026007FE0157CDA3FF85DDA0FFEEC03F0
6E6C6CEB0FE0020101F8EBFF806E6CB548C7FC030F14F8030114E09226001FFEC8FC4856
7AD355>67 D<B812FEEFFFE018FC18FF26007FFCC7000F13C06D4802017F011F9238003F
F8F00FFC727EF001FF727F737E737E737E190F86737EA2737E737EA21B8085A21BC01A7F
1BE0A4F23FF0A51BF8AE1BF0A4F27FE0A41BC01AFF1B80A24F1300A24F5AA24F5AA24F5A
4F5A4F5A4F5A4F5A4E90C7FC4E5AF00FFCF03FF8013FEEFFE0496C020F5BBAC8FC18FC18
E04DC9FC4D527BD159>I<BB1280A426007FFCC8123F6D48030313C0011F1600193F191F
190F1907A21903A2F101E0A31900A6050E1470A41A00A3171EA3173E177E17FE160791B6
FCA49138F800071600177E173E171EA3170EA31A0EA31A1C94C8FCA41A3C1A38A31A78A3
1AF0A21901A21903A21907F10FE0193F19FF013F1603496C153FBBFC1AC0A347527BD150
>I<BA12FCA426007FFCC712016D489138001FFE011F160318011800197E193EA2191EA2
85A385A6F10380A2171CA296C7FCA5173CA3177C17FC1601160F91B6FCA49138F8000F16
011600177C173CA3171CA794C9FCB3497E49B4FCB712E0A441527BD14C>I<DC1FFC1406
0303B56C130E031F02F0131E037F14FC912801FFF801FE133E0207903980001F80DA1FFC
C73807C07EDA3FF0913803E0FEDAFFE0EC00F049018015794990C9123D4948161F494816
0F49481607495A494816034A160113FF484916004890CBFC1A7E485AA24848183EA2121F
49181EA2123F5B1A0E127FA397C7FC5B12FFAE127F6D4BB612FEA4003F93C7003F13806D
94380FFE001907121FA27F120FA26C7EA26C7EA26C7F6C7F137F806D7E6D6C160F6D7E6D
7E6D6C161F6D01C0153D6D6D157DDA3FF815F8DA1FFE913803F07E912607FFC090380FE0
3E020101FC90387F801E6E6CB538FE000E031F02F81306030302E090C7FC9226001FFEC9
FC4F567AD35C>I<B70107B612F8A4C66C48C80003EBF0006D486F5B6D486F5BB3AD91B9
FCA402F8C9FCB3B1496C4B7F496C4B7FB70107B612F8A44D527BD158>I<B7FCA439007F
FE006D5A6D5AB3B3B3B0497E497EB7FCA420527BD12A>I<B712E0A4C66C90CAFCEB3FFC
6D5AB3B3A9191CA51938A61978A319F819F0A218011803A21807180F181F183F18FF013F
1503496C023F13E0BAFCA43E527BD149>76 D<B500FC95B512FCA36E5FD8007FF2F800D9
3DFF943803BFF0011D62A2011C6DEE073FA36E6C160EA36E6C161CA26E6C1638A36E6C16
70A36E6C16E0A36E6CED01C0A26E6CED0380A36E6DEC0700A36F6C140EA36F6C5CA26F6C
5CA36F6C5CA36F6C5CA26F6C495AA36F6C495AA36F6D48C7FCA393387FC00EA2706C5AA3
706C5AA3706C5AA3706C5AA270B45AA3705BA3013E6E90C8FC137F496C4E7E000701F002
7E4B7EB66C4BB612FC173CA35E527AD16B>I<B500FC030FB512F8A28080D8003FDC007F
13006D6DED0FF8735A011D6D6F5A011C6D6F5AA26E7E81143F6E7E81140F6E7E82806E7F
82806F7E82153F6F7EA26F7E6F7EA26F7F83816F7F83167F707E83161F707E8382701380
18C0827013E0A2EF7FF0EF3FF8A2EF1FFC18FE170FEF07FF1981837113C119E183F07FF1
19F9183FF01FFD19FF8484A28484A284A2197F193F133E017F171F496C160F000713F0B6
6C15071903A219014D527BD158>I<EE7FF80307B57E033F14F09239FFC00FFC913A03FE
0001FFDA0FF89038007FC0DA3FE0EC1FF0DA7F80EC07F84AC86C7E49486F7E49486F7E49
48707E4948707E4948707E4948707E017F844948707E91CA120348854848717EA2484871
1380A2000F1AC049187F001F1AE0A34848F03FF0A3007F1AF8A249181FA300FF1AFCAE6C
6CF03FF8A5003F1AF06D187FA2001F1AE0A26D18FF000F1AC0A26C6C4D1380A200031A00
6D5F6C616C6D4C5A6E160F017F606D6C4C5A6D6C4C5AA26D6C4C5A6D6C4C5A6D6C4B90C7
FCD900FFED03FCDA7FC0EC0FF86E6C4A5ADA0FF8EC7FC0DA03FE4948C8FC913A00FFC00F
FC033FB512F0030714809226007FF8C9FC4E567AD35B>I<B812FCEFFFC018F818FE2600
7FFCC7381FFF806D4802017F011F9238007FF0F01FF8727E727E727E841A807213C0A21A
E0197FA21AF0A91AE0A219FF1AC0A24E13801A00604E5A4E5A4E5AF07FE04D485A051F90
C7FC91B712FC18F0188002F8CBFCB3AE497E497EB7FCA444527BD150>I<DA3FF0130349
B55B010714C0011FECF00F903A7FE00FF81F49C712FED801FCEC3F3F4848EC1FBF48486E
B4FC48481403485A4980003F8190C97E5A83127E8312FEA283A37E837FA27F007F93C7FC
7F7FEA3FFC7F6C6C7E14F86CEBFF806C14F8EDFF806C15F06C15FE6C6C806D15C0010F81
010315F8D9007F80140F020080030F7F03001480161F040713C0160182EF7FE0A2173FEF
1FF0A200E0160FA31707A37EA318E07E170F7E18C06C161F6C17806D153F6D16006D157E
6D15FED8FCFC4A5A017F4A5A26F83FC0EB0FF0D90FFEEB7FC0D8F003B65A48C64AC7FC02
3F13F848010113C034567AD341>83 D<003FBB12C0A449C79038F0000701F06E48130001
C0183F48C8EE0FE0007E1907007C1903A200781901A400701900A500F01AF0481A70A6C9
1700B3B3AC4C7E030313FC027FB712E0A44C517CD055>I<B7020FB512F8A4C66C48C96C
13006D48EE0FF86D48705A735A735AB3B3B0010F17036280A20107170797C7FC6E5E1303
191E6D7E616D6D5D6E7E023F5E6E6C4A5A6E6C4A5A6E6C140FDA03FE4AC8FC6E6C6C13FE
913A007FF007FC031FB512F0030714C0030191C9FC9238001FF84D547BD158>I<B600FE
0303B512F8A4C60280DB007F1300013F90CAEA1FF86DF00FE06D616D616D6D94C7FC6F16
1E6D181C6F163C6D18386E6C16786F5E023F5F6F1501021F5F6E6C15036F4B5A6E94C8FC
6E6D5C70140E6E161E705C6E16386F6C1478701470033F15F070495A6F6C5C030F140370
5C6F14076F6D48C9FCEFC00E6F141EEFE01C6F143C706C5AEFF870043F13F0715AEE1FFF
705B60827090CAFCB3AA5E4C13C0031FB612E0A455527FD158>89
D<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F8
6D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F010713
00EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF90C8FCA216FFA3
5D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01
F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B>97
D<EB7F80B5FCA41203C6FC137FB3A6ED07FC92387FFF800281B512E0913987F00FF89139
8F8001FC029EC7B4FC02BC6E7E02F86E7E4A6E7E4A6E7E4A1407844A6E7EA2841701A284
A283A21980AB19005FA360A24D5AA24D5A804D5A6E5D6E4A5AD97E784A5A6E4AC7FCD97C
1EEB01FE6E495A903A7807E01FF00201B512C0902670007F90C8FC90C7EA0FF839547DD2
41>I<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB078049C7EA
0FC001FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991C7FCA2127F
A35B12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC03C06D1580
6C6C14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F1380DA0FF8C7
FC2C367CB434>I<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907FC
03F090391FE0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485AA2
127FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E
7F6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC39
547CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C7
7E4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A2
5B160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F0
6D15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F8
0101B512E06D6C1380DA07FCC7FC2D367DB434>I<157F913803FFE0020F13F091383FC0
F891387F01FC903901FE03FE903803FC0714F81307EB0FF0A290391FE003FCED01F892C7
FC495AB3B612FEA426003FC0C7FCB3B3A580EBFFF0007FEBFFF8A427547DD324>I<EF1F
C0DA3FE0EBFFE0902701FFFC0313F001079039FF07E1F8903A1FE03FCF01903A3F800FFC
03903A7F0007F80101FE010314F04848903901FC004000036F1300491300000781A24980
000F82A8000793C7FC6D5CA200035D6D130100015D6C6C495A017F495A6E485A9039FFE0
3FC0D801C7B5C8FC01C113FC3903803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C017
F0013F15FC8390B8FCD803F8C7001F1380D80FE0020113C04848EC007F4848ED1FE090C9
120F127EEF07F012FE481603A56C1607007E17E0007F160F6C6CED1FC06C6CED3F806C6C
ED7F006C6C15FED803FCEC03FCC6B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D9001F
1380354E7DB43B>I<EB7F80B5FCA41203C6FC137FB3A6ED07FC92383FFF8092B512E091
3981F00FF8913983C007FC9139870003FE028E1301029C6D7E14B814B002F06E7E5CA25C
A35CB3AD2601FFE0903801FFE0B600C0B612C0A43A537CD241>I<1378EA01FE487E487F
A66C90C7FC6C5AEA007890C8FCB0EB7F80B5FCA41203C6FC137FB3B3A43801FFE0B61280
A419507CCF21>I<EB7F80B5FCA41203C6FC137FB3B3B3B13801FFE0B612C0A41A537CD2
21>108 D<01FFD907FEEC03FFB590261FFFC0010F13E0037F01F0013F13F8912701F80F
FC9038FC07FE913D03C003FE01E001FF000390260700019038038000C6010E6D6C48C76C
7E6D48DA7F8E6E7E4A159CA24ADA3FF86E7E02605D14E04A5DA34A5DB3AD2601FFE0DAFF
F0EC7FF8B6D8C07F9026FFE03FB512F0A45C347CB363>I<01FFEB07FCB590383FFF8092
B512E0913901F00FF8913903C007FC000349C66C7EC6010E13016D486D7E5C143002706E
7E146014E05CA35CB3AD2601FFE0903801FFE0B600C0B612C0A43A347CB341>I<EC0FFC
91387FFF8049B512E0903907F807F890391FE001FE90393F80007F017EC7EA1F80496E7E
48486E7E00038248486E7EA248486E7EA248486E7EA2003F82A24848ED7F80A400FF17C0
AB007F1780A26D15FFA2003F1700A2001F5E6D1401000F5E6D140300075E6C6C4A5A6C6C
4A5AA2D8007FEC3F806D6C49C7FC90391FE001FE903907F807F86DB55AD9007F1380DA0F
FCC8FC32367CB43B>I<90397F8007FCB590387FFF800281B512E0913987F00FF891398F
8003FC000190399E0001FF6C01BC6D7FD97FF86E7E4A6E7E4A6E7E4A140F844A6E7EA271
7EA3717EA4711380AB4D1300A44D5AA24D5AA2606E140F4D5A6E5D6E4A5A6E4A5A02BC4A
C7FC029E495A028FEB07FC913987E01FF00281B512C0DA807F90C8FCED0FF892CAFCB138
01FFE0B612C0A4394B7DB341>I<DA07F81307DA7FFF5B49B512C0903907FC03E0903A1F
F000F81FD93FC0133C49486D5A49C7120E4848140F48486EB4FC000781485A4980121F82
485AA2485AA4485AAB6C7EA46C7EA36C6C5CA26C6C5C12076D5C6C6C5C6C6C141E6C6D5B
6D6C5B90391FE001F090390FF807E00103B512800100495AEC1FF091C8FCB1040313C04B
B61280A4394B7CB33E>I<01FFEB1F80B5EB7FF0913801FFF8913803E1FC91380783FE00
03EB0F07C6131EEB7F1C1438143091387003FC91386000F0160014E05CA45CB3AA804848
7EB612F0A427347DB32E>I<D907FE13C090387FFF8148B512E33907F803FF390FC0007F
4848133F48C7121F003E140F007E1407127C00FC1403A315017EA27E7F6C6C90C7FC13F0
13FF6C13F86CEBFF806C14E06C14F86C14FEC680013F1480010714C0D9003F13E0140391
38007FF0151F00E0140FED07F8A26C1403A215017EA36C15F0A26C14036C15E015076DEB
0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390C7FC25367C
B42E>I<EB01C0A71303A41307A3130FA2131FA2133F137F13FF5A5A001F90B512E0B7FC
A326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13F016E0903807F801903903FC03
C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>I<D97F80EC7F80B591B5FCA400
031503C61500017F157FB3AC17FFA35EA3013F5C6EEB077FA2011F020E7F6D6C011C13F0
6E0178EBFFC0903903FC01F06DB512E06D6C1380912607FC00EB80003A357CB341>I<B6
0103B51280A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC133F171E6D7E
171C6E143C010F1538A26E1478010715708001035DA26E130101015D806D4A5AA2ED8007
027F91C8FC15C0023F130EA2EDE01E021F131CA26E6C5AA2EDF87802071370A26E6C5AA2
15FF6E5BA26E5BA36FC9FCA2153EA3151C39347EB23E>I<B60103B51280A4000301F090
39007FF800C601C0EC3FE0017FED1F8095C7FC133F6E141E131F171C6E143C010F153880
01075DA26E14F001035D8001014A5AA26E13036D5D1580027F49C8FCA26F5A023F130E15
E0021F5BA2EDF03C020F133815F802075BA2EDFCF002035B15FE6E6C5AA36E5BA26FC9FC
A3153EA2151CA2153C153815781570A215F05D14015DA2003E495A127F486C48CAFCA214
0E141E495A6C5B007C5B383F03E06CB45A00075BD801FCCBFC394B7EB23E>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FA cmbx12 17.28 53
/FA 53 123 df<94387FFF80043FB5EAF8FE4BB7FC150F157F4AB5EAE0014AEBFC00020F
01F05B4A01C05B4A90C7FC4A5A4A5A495B495BA2495B8449824B80B3BBFCA6D8000F01E0
C8FCB3B3B0003FB6D8F803B71280A651657DE45A>13 D<B812C0AD2A0D7EA636>45
D<EA01FCEA07FF4813804813C04813E04813F0A2B512F8A76C13F0A26C13E06C13C06C13
806C1300EA01FC151574942D>I<ED0FFF4AB512F8020F14FF023F15C091B712F049D9FC
037F0107D9F00013FE4901C0EB3FFF4990C7000F7F49486E7F017F8349486E7F4A804884
48496E7FA248844A157F4884A3481980A34819C04A81A34819E0A7B518F0B3A86C19E0A7
6C19C0A26E5DA26C1980A36C1900A36C6D4B5AA26C60A26C6D4A5B6C606E5C6D6C4A5B6D
6C4A5B6D6D495B6D6D4990C7FC6D01F0EBFFFE6DD9FC035B010090B612F0023F15C0020F
92C8FC020114F8DA001F138044607ADD51>48 D<16F04B7E1507151F153FEC01FF140714
7F010FB5FCB7FCA41487EBF007C7FCB3B3B3B3007FB91280A6395E74DD51>I<913801FF
F8021FEBFFC091B612F8010315FF010F16C0013F8290267FFC0114F89027FFE0003F7F48
90C7000F7F48486E7FD807F86E148048486E14C048486E14E048486F13F001FC17F8486C
816D17FC6E80B56C16FE8380A219FFA283A36C5BA26C5B6C90C8FCD807FC5DEA01F0CA14
FEA34D13FCA219F85F19F04D13E0A294B512C019804C14004C5B604C5B4C5B604C13804C
90C7FC4C5A4C5A4B13F05F4B13804B90C8FC4B5AED1FF84B5A4B5A4B48143F4A5B4A48C8
FC4A5A4A48157E4A5A4A5AEC7F8092C9FC02FE16FE495A495A4948ED01FCD90FC0150749
B8FC5B5B90B9FC5A4818F85A5A5A5A5ABAFCA219F0A4405E78DD51>I<92B5FC020F14F8
023F14FF49B712C04916F0010FD9C01F13FC90271FFC00077FD93FE001017F49486D8049
C86C7F484883486C6F7F14C0486D826E806E82487FA4805CA36C5E4A5E6C5B6C5B6C495E
011FC85A90C95CA294B55A614C91C7FC604C5B4C5B4C5B4C5B047F138092260FFFFEC8FC
020FB512F817E094C9FC17F817FF91C7003F13E0040713F8040113FE707F717F7113E085
717FA2717F85A285831A80A31AC0EA03FCEA0FFF487F487F487FA2B57EA31A80A34D1400
5C7E4A5E5F6C495E49C8485BD81FF85F000F5ED807FE92B55A6C6C6C4914806C01F00107
91C7FC6C9026FF803F5B6D90B65A011F16F0010716C001014BC8FCD9001F14F0020149C9
FC426079DD51>I<F01F804E7E187F18FFA25F5F5F5FA25F5F5FA294B5FC5E5E5EA25E5E
EE3FBFEE7F3FA216FEED01FCED03F8ED07F0A2ED0FE0ED1FC0ED3F8016005D15FE4A5A4A
5AA24A5A4A5A4A5A4A5AA24AC7FC14FE495A5C1303495A495A495A5C133F49C8FC13FE48
5AA2485A485A485A5B121F485A48C9FC12FEBCFCA6CA6CEBC000B1037FB8FCA6485E7CDD
51>I<01C0EE01C0D801F8160F01FF167F02F0EC07FFDAFF8090B5FC92B7128019006060
606060606095C7FC17FC5F17E0178004FCC8FC16E09026FC3FFCC9FC91CBFCADED3FFE02
03B512F0020F14FE023F6E7E91B712E001FDD9E00F7F9027FFFE00037F02F801007F02E0
6EB4FC02806E138091C8FC496F13C04917E07113F0EA00F090C914F8A219FC83A219FEA4
19FFA3EA03F0EA0FFC487E487E487FA2B57EA319FEA35C4D13FC6C90C8FC5B4917F8EA3F
F001804B13F06D17E0001F5E6C6C17C06D4B1380D807FC92B512006C6C4A5B6C6C6C0107
5B6C01E0011F5BD97FFE90B55A6DB712C0010F93C7FC6D15FC010115F0D9003F14800203
01F0C8FC406078DD51>I<EE1FFF0303B512E0031F14F892B612FE0203814AD9FC037F02
1F9039C0007FC04A90C7EA1FE0DAFFFC6E7E494914074949EC7FF8494914FF49495B4949
497F4990C7FC495D5C13FF485BA25A4A6E5B5A715B48496E5B725A4894C8FCA35AA35C48
913801FFE0030F13FE033F6D7E4B14E092B612F89126E1FE037FB53AE3F0007FFEDAE7E0
6D7EDAEFC06D7F4B6D7F02FFC76C7F4A82717F4A82A24A828385A24A1780A54A17C0A37E
A77EA47E6E1780A27EA21A007E4D5B7E6E5E7E6E5E6C4C5B6D7E013F4B5B6D6C4A5B6D01
C0495B6D6D90B5C7FC6DD9FC0713FC6D90B65A6D5E023F15C0020F92C8FC020114F8DA00
1F1380426079DD51>I<EA07E0120F7F13FCEBFFFC91B912F8A45AA21AF01AE01AC01A80
1A00A248606161616101E0C9123F01804C5A48CA485A4D90C7FC60007E4C5A17074D5A4D
5A4D5A485F4D5A17FF4C90C8FCC9485A5F4C5A160F4C5A5F163F4C5A16FF5F5D94C9FC5D
5D5E150FA24B5AA2153FA24B5AA215FFA34A5BA25CA35CA44A5BA45CA65CAD6E5BA26E5B
DA03FECAFC6E5A456377E051>I<F00FE04E7EA24E7EA34E7EA24E7EA34D7FA24D80A24D
80A34D80A24D80A34D80A2DD7FBF7FA2181F05FF8017FE04016D7FA24D7E04038217F804
076D80A24D7E040F8217E0041F6D80A24D7F043F825F047F6E7FA294C77E4C825E03016F
7FA24C800303845E03076F80A24C80030F845E031F6F80A24C81033F845E037F707F93B9
FCA292BA7EA24A85A203FCC912070203865D020771805D86020F864B82021F865D87023F
864B83027F8692CBFC874A864A840101875C496C728090381FFFC0B700E092B812FEA66F
647BE37A>65 D<BB12F0F2FF801BF81BFEF3FFC088D800010280C7000114F8DF003F7F08
0F13FF74807480867480757FA2757FA28987A289A965A26365A2515BA298B55A505C505C
5091C7FC505B505B087F13F00703B512C096B6C8FC93B812F81BC01BF8F3FF801CE00480
C8001F13F8080713FE08016D7E7480757F757F757F89757F89871E80871EC0A41EE087A6
63A21EC0A3631E80A2511400A2515B515B6398B55A505C08075C081F5C97B6C7FCBD5A1C
F81CE099C8FC1BF898C9FC63627AE173>I<4DB5ED03C0057F02F014070407B600FE140F
047FDBFFC0131F4BB800F0133F030F05FC137F033F9127F8007FFE13FF92B6C73807FF81
4A02F0020113C3020702C09138007FE74A91C9001FB5FC023F01FC16074A01F08291B548
82490280824991CB7E49498449498449498449865D49498490B5FC484A84A2484A84A248
91CD127FA25A4A1A3F5AA348491A1FA44899C7FCA25CA3B5FCB07EA380A27EA2F50FC0A2
6C7FA37E6E1A1F6C1D80A26C801D3F6C6E1A00A26C6E616D1BFE6D7F6F4E5A7F6D6D4E5A
6D6D4E5A6D6D4E5A6D6E171F6D02E04D5A6E6DEFFF806E01FC4C90C7FC020F01FFEE07FE
6E02C0ED1FF8020102F8ED7FF06E02FF913803FFE0033F02F8013F1380030F91B648C8FC
030117F86F6C16E004071680DC007F02F8C9FC050191CAFC626677E375>I<BB12E0F2FF
801BF01BFE757E1CF0D800010280C7000780DF007F13FE080F6D7E0801807480093F7F09
0F13FC757F757F877580767F8A88767F8A888AA2767FA28A881F80A37614C0A41FE0A588
1FF0B05214E0A51FC0A4521480A31F006466A2525BA2525BA2525B666499B55A515C5191
C7FC515B515B515B097F5B50B512C008075C083F91C8FC0707B512FCBD12F01CC051C9FC
1BF81B8008E0CAFC6C627AE17C>I<BD12FCA488A2D8000102C0C71201F1000F1A01F200
7F1B3F1B0F1B07757EA28787A288A3F43F80A31C1FA3197EA3F40FC0A499C7FC19FEA318
01A218031807181F18FF93B6FCA6EEC000181F180718031801A21800A21D7E197EA21DFC
A696C812011DF8A31C03A3F407F0A31C0FA21C1F1C3F1DE01C7F1CFF63631B0F093F13C0
98B5FC1A0797B6FCBEFCA31D80A35F617AE06A>I<BD12E0A41CF0A2D8000102C0C71207
F1003F1A0F1A031A001B7F1B3FF31FF81B0FA21B07A21B03A21B011CFCA31B00A419FCA2
1C7EA41C00A21801A31803A21807180F183FEF01FF93B6FCA6EEC001EF003F180F180718
03A21801A31800A896C9FCB3A5B912F8A657617AE065>I<4DB5ED03C0057F02F0140704
07B600FE140F047FDBFFC0131F4BB800F0133F030F05FC137F033F9127F8007FFE13FF92
B6C73807FF814A02F0020113C3020702C09138007FE74A91C9001FB5FC023F01FC16074A
01F08291B54882490280824991CB7E49498449498449498449865D49498490B5FC484A84
A2484A84A24891CD127FA25A4A1A3F5AA348491A1FA44899C8FCA25CA3B5FCB07E071FB8
12F880A37EA296C70001ECC000A26C7FA37E807EA26C80A26C80A26C807F6D7F816D7F7F
6D7F6D6D5F6D14C06D6E5E6E7F6E01FC5E020F01FF5E6E02C0ED7FEF020102F8EDFFC76E
02FF02071383033F02FC013F1301030F91B638FC007F03014D131F6F6C04E01307040704
801301DC007F02F8CAFC050191CBFC6D6677E37F>I<B912E0A6C702E0C7FCB3B3B3B3AE
B912E0A633627CE13C>73 D<B912F8A6D8000102C0CBFCB3B3B1F307E0A5F30FC0A61B1F
A31B3F1C80A21B7FA21BFFA262A262625013006262624FB5FC1907191F4EB6FCBDFC63A5
53627AE161>76 D<B700C0083FB612F070627097B7FCA37061D800010DF8C7FC70F103EF
A202FD6DF107CFA202FC6DF10F8FA36F6DF01F0FA26F6D183EA26F6D187CA26F6D18F8A3
6F6DEF01F0A26F6DEF03E0A26F6DEF07C0A26F6DEF0F80A3706DEE1F00A2706D163EA270
6D5EA2706D5EA3706D4B5AA2706D4B5AA2706D4B5AA2706D4B5AA3716D4AC7FCA2716D14
3EA2716D5CA2716D5CA3716D495AA2716D495AA2716D495AA2716D495AA3726D48C8FCA2
72EBC03EA2726D5AA2726D5AA372EBF9F0A272EBFFE0A2725CA2725CA37390C9FCA2735A
A2735A90381FFFC0B700F86E480207B812F0A3735AA2735A8C627AE199>I<94381FFFE0
0407B67E043F15F04BB712FE030FEEFFC0033FD9FC0014F092B500C0010F13FC020349C7
000113FF4A01F86E6C7F021F496F13E04A01C0030F7F4A496F7F91B5C96C7F0103497013
FF494970804B834949717F49874949717F49874B8390B586484A717FA24891CB6C7FA248
1D804A84481DC0A348497214E0A3481DF0A34A85481DF8A5B51CFCB06C1DF8A36E96B5FC
A36C1DF0A46C6D4E14E0A36C1DC06E606C1D80A26C6E4D1400A26C6E4D5BA26C6E4D5BA2
6D6D4D5B6D636D6D4D5B6F94B5FC6D636D6D4C5C6D6D4C91C7FC6D6E4B5B6D02E0031F5B
023F6D4B13F06E01FC92B55A6E01FF02035C020302C0010F91C8FC020002FC90B512FC03
3F90B712F0030F17C0030394C9FCDB007F15F804071580DC001F01E0CAFC666677E379>
79 D<BB7E1AFCF2FFC01BF81BFE757ED800010280C7001F80070114F0736C7F081F7F74
7F747F7414807414C0A27414E0A21DF0A27513F8A41DFCA91DF8A498B512F0A21DE0A250
14C01D8062501400505B505B087F5B4FB512E0071F5C93B9C7FC1BFC1BF01B8008F0C8FC
04C0CCFCB3B3A2B97EA65E627AE16E>I<BA12F8F1FFE01AFEF2FFC01BF01BFED8000102
80C76C7F070714C0070014F0747F081F7F747F747F7480A2748089A37480A389A865A350
5CA265A2505C9AC9FC505B505B505B087F5B4FB55A0707148096B548CAFC93B812F81BC0
50CBFC621AFF932680000314C0DE007F7F071F13F8737F737F737F73808885888688A274
7FA688A688A676140FF71F80A374801F3F86771400745E746E5BB96E6E5B746E485A75EB
FE07091F90B55A090715E009015DCF003F91C7FC0A0013FC71647AE178>82
D<DBFFFCEC01E0020FD9FFE01303027F02FC130749B7130F0107EEC01F011F16F049D9C0
07EBF83F4948C7383FFE7FD9FFF8020FB5FC4801E014014849804849153F91C97E484882
001F834982003F83845B007F187FA2193FA200FF181FA27F190FA27FA26D17078080806C
01F893C7FC80ECFF8015F86CECFFC016FC6CEDFFE017FE6CEEFFE018F86C17FE6C717E6C
846C846D17F86D836D836D8313036D18806D6C17C0020F17E01401DA000F16F015000407
15F8EE007F1703050014FC183F84060713FE84A2007C8300FC83A2197FA3193F7EA31AFC
7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01FF18C06E4B138002E04B130002F84B5A
02FFED3FFC01CF01E0ECFFF8018301FF010F5B010191B65A6D6C5E48011F93C7FC480103
15FC48D9003F14E048020149C8FC476677E35A>I<001FBEFCA64849C79126E0000F1480
02E0180091C8171F498601F81A0349864986A2491B7FA2491B3F007F1DC090C9181FA400
7E1C0FA600FE1DE0481C07A5CA95C7FCB3B3B3A3021FBAFCA663617AE070>I<B96C023F
B612FEA6D8000102C0CA0007EBF000E2007FC7FCB3B3B3AA656D63A2821C018065701703
80525A6E7F6E4F5A70171F6E626E6D4D5A6E6D177F525A6E6E030390C8FC033F01E04B5A
6F6DED1FFC6F01FCED7FF80303D9FF80903803FFE06F02F8017F5B6F6C90B7C9FC041F5E
040716F8040016C0050F4ACAFCDD003F13C06F647AE17C>I<B800FC047FB612E0A6D800
070280CB6CEB80006D6EDE07FCC7FC666D6E611D0F6D6E611D1FA26E6D611D3F6E6D611D
7F6E6D96C8FC65A26E6D4D5AA26E6E5F1C036E6E5F1C076E6E5F1C0FA26E6E5F1C1F6F6D
5F1C3F6F6D5F1C7FA26F6D4CC9FCA26F6D5E1B016F6E5D1B03A26F6E4A5AA26F6E5D1B0F
6F6E5D1B1F706D5D1B3FA2706D5D1B7F706D92CAFC63706D5C1A01A2706E485AA27002C0
5B1A077002E05B1A0F7002F05B1A1FA27101F85B1A3F7101FC5B1A7F7101FE90CBFC62A2
716D5AA2715CA2715CA3715CA2715CA2725BA2725BA37290CCFCA2725AA2725AA2725A73
637DE17A>I<913803FFFE027FEBFFF00103B612FE010F6F7E4916E090273FFE001F7FD9
7FE001077FD9FFF801017F486D6D7F717E486D6E7F85717FA2717FA36C496E7FA26C5B6D
5AEB1FC090C9FCA74BB6FC157F0207B7FC147F49B61207010F14C0013FEBFE004913F048
B512C04891C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F806C5E806C047D7F6EEB01
F96C6DD903F1EBFF806C01FED90FE114FF6C9027FFC07FC01580000191B5487E6C6C4B7E
011F02FC130F010302F001011400D9001F90CBFC49437CC14E>97
D<903807FF80B6FCA6C6FC7F7FB3A8EFFFF8040FEBFF80047F14F00381B612FC038715FF
038F010014C0DBBFF0011F7FDBFFC001077F93C76C7F4B02007F03F8824B6F7E4B6F1380
4B17C0851BE0A27313F0A21BF8A37313FCA41BFEAE1BFCA44F13F8A31BF0A24F13E0A24F
13C06F17804F1300816F4B5A6F4A5B4AB402075B4A6C6C495B9126F83FE0013F13C09127
F00FFC03B55A4A6CB648C7FCDAC00115F84A6C15E091C7001F91C8FC90C8000313E04F65
7BE35A>I<92380FFFF04AB67E020F15F0023F15FC91B77E01039039FE001FFF4901F801
0113804901E0010713C04901804913E0017F90C7FC49484A13F0A2485B485B5A5C5A7113
E0485B7113C048701380943800FE0095C7FC485BA4B5FCAE7EA280A27EA2806C18FCA26C
6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6DEC1FC06D01E0EC7F806D6DECFF
00010701FCEB03FE6D9039FFC03FFC010091B512F0023F5D020F1580020102FCC7FCDA00
0F13C03E437BC148>I<F17FF8050FB5FCA6EF000F8484B3A892380FFF804AB512F8020F
14FE023FECFF8391B712E301039138807FF3499039F8000FFB011F01E00103B5FC494913
004990C87E49488148498148834A815A485BA2485BA25AA3485BA4B5FCAE7EA46C7FA37E
A26C7FA26C5F806C5F6C6D5D6C6D5D017F93B5FC6D6C6C0103806D6D49806D01F0D91FF7
EBFFFE6D9039FE01FFE7010190B612876D6CECFE07021F14F8020314E09127003FFE00EC
C0004F657BE35A>I<92380FFFC04AB512FC020FECFF80023F15E091B712F80103D9FE03
7F499039F0007FFF011F01C0011F7F49496D7F4990C76C7F49486E7F48498048844A8048
84485B727E5A5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA380A27E
A27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A6D01E0
4A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F8020715E0
020092C8FC030713F041437CC14A>I<EE3FFC0307B51280033F14C04AB612F0020715F8
4A9038F03FFC4AEB807F913A7FFE00FFFE4A5A4B4813FF4913F05B4913E0A24913C0A270
13FE4949EB7FFCEF3FF8EF1FF0EF07C094C7FCB0B812C0A6D8001F01C0C8FCB3B3B0007F
B612FCA638657CE431>I<F107F8DB7FFEEC3FFE020FB5D8F001B5FC027FDAFE03148049
B7128F49DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7EBFC0349486E6C7E4948
EC3FFF48496E018113800780130048F0C03E97C7FC48496E7FA34884A96C60A36C6D4A5B
A26C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B4990B612C060D97C7F4A
C9FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F8014F091B77E18FE6CEFFFC019
F06D17FC19FF6D846D846D846D84013F8490BAFC0003854801E0C712014890C9000F7F48
4816014848EE007F4848717E8512FF5B85A56D5F007F616D173F003F616D177F6C6C4D5A
6C01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8011F5B011F90B712F801
0717E0010094C8FC020F15F0DA003F01FCC9FC4A607CC151>I<903807FF80B6FCA6C6FC
7F7FB3A8EF1FFF94B512F0040714FC041F14FF4C8193267FE07F7F922781FE001F7FDB83
F86D7FDB87F07FDB8FC0814C7F039FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7D8
F007B71280A651647BE35A>I<EB0FE0EB3FF8497E48B5FCA24880A24880A76C5CA26C91
C7FCA238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3B3AEB712C0
A622657BE42C>I<ED01FCED07FF4B1380033F13E0A24B13F0A292B512F8A76F13F0A26F
13E0A2030F13806F1300ED01FC92C8FCAFEEFFF8021FB5FCA6EC000F8181B3B3B3AAEA07
F0EA1FFC487E487EB56C4813F0A317E05D17C05D17806C4948130049495A6C48495A261F
FE0313F06CB65A6C158000014AC7FC6C6C13F8010713802D8288E431>I<903807FF80B6
FCA6C6FC7F7FB3A90503B61280A6DD003FEB8000DE0FFCC7FCF01FF04E5AF0FFC04D5B4D
90C8FCEF07FC4D5AEF3FF04D5A4D5A4C90C9FC4C5AEE0FFC4C5A4C5AEE7FC04C7E03837F
03877F158F039F7F03BF7F92B5FC838403FC804B7E03F0804B6C7F4B6C7F1580707F707F
707FA270807080717FA2717F717F717FA2717F717F83867180727F95B57EB7D8E00FECFF
F0A64C647BE355>I<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE32C>I<
902607FF80D91FFFEEFFF8B691B500F00207EBFF80040702FC023F14E0041F02FF91B612
F84C6F488193267FE07F6D4801037F922781FE001F9027E00FF0007FC6DA83F86D9026F0
1FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC7804C6D027C80039FC76E488203BEEEFD
F003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FCA44B5EB3B2B7D8F007B7D8803FB612
FCA67E417BC087>I<902607FF80EB1FFFB691B512F0040714FC041F14FF4C8193267FE0
7F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC78015BE03BC80
03FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>I<923807FFE092B6FC02
0715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E04901C001037F49496D7F
4990C87F49486F7E49486F7E48496F13804819C04A814819E048496F13F0A24819F8A348
496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A26C19E0
6C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D495B010701F0010F13E0
6D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC030713E048437CC151>I<
902607FF80EBFFF8B6010FEBFF80047F14F00381B612FC038715FF038F010114C09227BF
F0003F7FC6DAFFC0010F7F6D91C76C7F6D496E7F03F86E7F4B6E7F4B17804B6F13C0A273
13E0A27313F0A21BF885A21BFCA3851BFEAE4F13FCA41BF861A21BF0611BE0611BC06F92
B512801B006F5C6F4A5B6F4A5B03FF4A5B70495B04E0017F13C09226CFFC03B55A03C7B6
48C7FC03C115F803C015E0041F91C8FC040313E093CBFCB3A3B712F0A64F5D7BC05A>I<
D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC7FFC92390FE0FFFEC6EC
1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB7FFCEF3FF8EF0FE04B90
C7FCA55DB3B0B712F8A638417BC042>114 D<913A3FFF8007800107B5EAF81F011FECFE
7F017F91B5FC48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F167F49
153FA212FF171FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C16C06C
16F06C826C826C826C82013F1680010F16C01303D9007F15E0020315F0EC001F1500041F
13F81607007C150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D157F6D16
C001FEEDFF806D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C026F800
7F49C7FC48010F13E035437BC140>I<EC07E0A6140FA5141FA3143FA2147FA214FF5BA2
5B5B5B5B137F48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC171F6D6D14
80A2173F6D16006F5B6D6D137E6D6D5B6DEBFF836EEBFFF86E5C020F14C002035C912600
3FFCC7FC325C7DDA3F>I<902607FFC0ED3FFEB60207B5FCA6C6EE00076D826D82B3B3A2
60A360A2607F60183E6D6D147E4E7F6D6D4948806D6DD907F0ECFF806D01FFEB3FE06D91
B55A6E1500021F5C020314F8DA003F018002F0C7FC51427BC05A>I<B700C00103B512FC
A6C66C01C0C8381FFE006D6DED07F0A26D6D5E190F6D6D5E191F6D606F153F6D95C7FC6F
5DA26D6D157E19FE6D6E5C18016E5E7013036E5E701307A26E6D5C180F6E6D5C181F6E6D
5C183F6E93C8FC705BA26E6D13FEA26E6E5A17816FEBC1F817C36F5C17E76F5C17FFA26F
5CA26F5CA26F91C9FCA26F5BA36F5BA2705AA2705AA2705AA2705A4E417DBF55>I<B700
81B600FC0103B512FCA6C66C0180C701FCC8381FFE006F6FED03F86D047F5F856F6E1607
6D646F70140F6D705F866F6E161F6D646F4A6D143F6D99C7FC4E7F6F616D1B7E6F4A6D14
FE6D6395B57E7001FC15016E62DCC0016E13036EDBF87F5D05038004E0496C14076E62DC
F007ED800F6E4B6C5D050F15C004F8496C141F6E62DCFC1FEDE03F6E4B6C92C8FC053F15
F004FE496C5C6E197E7048EDF8FE6E027E6D5C05FE15FC4D6D13FD6F601BFF6F496E5BA2
4D806F60A26F496E5BA24D806F60A26F496E90C9FCA294C87E6F5FA26F486F5A047C6F5A
6E417DBF75>I<007FB600C0017FB512F8A6D8001F01F8C70007EBF0006D040190C7FC6D
6D5D6D6D4A5A6D6D4A5A70495A6D4C5A6E7F6E6D495A6E6D495A7049C8FC6E4A5A6E6D48
5A6E6D485A6E13FFEF8FF06EEC9FE06FEBFFC06F5C6F91C9FC5F6F5B816F7F6F7F848170
7F8493B57E4B805D4B80DB0FF37FDB1FE17F04C080153F4B486C7F4B486C7F4A486D7F4A
486D7F4A5A4B6D7F020F6E7F4A486D7F4A486D804A5A4AC86C7F49486F7F4A6F7F010770
7FEB3FFFB600F049B7FCA650407EBF55>I<B700C00103B512FCA6D8003F01C0C8381FFE
006FED07F0A26D6D5E190F6D6D5E191F6D6D5E193F6D95C7FC6F5D6D177E6F15FEA26D6E
495AA26E6D5C18036E6D5C18076E5E70130F6E5E70131FA26E6D495AA26E6D91C8FC606E
6D137E18FE6E5D17816F5C17C3A26FEBE7F0A26FEBF7E017FF6F5CA26F5CA26F91C9FCA3
6F5BA26F5BA2705AA2705AA2705AA35FA25F163F94CAFC5E167E16FED807E05CD81FF813
01487E486C495AA2B5495AA24B5A5E151F4B5A6C4849CBFC15FEEBFC01393FF807FC391F
F03FF06CB55A6C5C6C91CCFCC613FCEB1FE04E5D7DBF55>I<0007B912E019F0A402FCC7
14E04801C04914C091C7FC494A1480494A1400494A5B5B4C5B494A5B4C5B5B93B55A4B5C
5D001F5F494991C7FC4B5BA24B5B4B5BC8485BA292B55A4A5C4A5CA24A91C8FC4A5B4A5B
A24A5B4A49EB03F091B55AA2495C495C4991C7FC1807494915E0495B5B5D4949140F90B5
5AA2484A141F485C4891C8123F187F484915FF48495C48491407051F13C0484949B5FCBA
FCA47E3C407CBF48>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 365 100 a FA(Exploiting)55 b(Sup)t(erw)l(ord)d(Lev)l(el)h(P)l
(arallelism)k(with)952 319 y(Multimedia)f(Instruction)c(Sets)1888
551 y Fz(b)m(y)1530 784 y Fy(Sam)l(uel)45 b(Larsen)150
1016 y Fz(Submitted)35 b(to)i(the)g(Departmen)m(t)d(of)j(Electrical)e
(Engineering)g(and)i(Computer)1765 1166 y(Science)478
1315 y(in)i(partial)d(ful\014llmen)m(t)f(of)k(the)f(requiremen)m(ts)e
(for)i(the)g(degree)g(of)1501 1548 y(Master)g(of)g(Science)1797
1780 y(at)g(the)525 2012 y(MASSA)m(CHUSETTS)e(INSTITUTE)i(OF)h
(TECHNOLOGY)1701 2245 y(Ma)m(y)g(2000)263 2473 y(c)230
2477 y Fx(\015)f Fz(Massac)m(h)m(usetts)g(Institute)g(of)g(T)-10
b(ec)m(hnology)36 b(2000.)50 b(All)38 b(righ)m(ts)f(reserv)m(ed.)150
3158 y(Author)29 b(.)17 b(.)h(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)646
3308 y(Departmen)m(t)36 b(of)j(Electrical)c(Engineering)i(and)i
(Computer)c(Science)3122 3457 y(Ma)m(y)k(2,)f(2000)150
3897 y(Certi\014ed)f(b)m(y)13 b(.)18 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)2699
4046 y(Saman)37 b(Amarasinghe)2773 4195 y(Assistan)m(t)g(Professor)2844
4345 y(Thesis)i(Sup)s(ervisor)150 4828 y(Accepted)f(b)m(y)24
b(.)19 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)2898 4977 y(Arth)m(ur)37 b(C.)h(Smith)785
5126 y(Chairman,)c(Departmen)m(t)i(Committee)e(on)39
b(Graduate)e(Studen)m(ts)p eop
%%Page: 2 2
2 1 bop 267 100 a Fw(Exploiting)46 b(Sup)t(erw)l(ord)f(Lev)l(el)h(P)l
(arallelism)h(with)f(Multimedia)1481 324 y(Instruction)f(Sets)1888
548 y Fz(b)m(y)1577 772 y(Sam)m(uel)36 b(Larsen)275 1117
y Fv(Submitted)c(to)g(the)h(Departmen)m(t)f(of)g(Electrical)f
(Engineering)h(and)h(Computer)f(Science)1021 1237 y(on)g(Ma)m(y)i(2,)e
(2000,)g(in)f(partial)g(ful\014llmen)m(t)f(of)i(the)1310
1357 y(requiremen)m(ts)i(for)e(the)h(degree)g(of)1576
1478 y(Master)g(of)f(Science)150 1841 y Fw(Abstract)150
2026 y Fv(Increasing)26 b(fo)s(cus)h(on)e(m)m(ultimedia)e(applications)
h(has)i(prompted)g(the)h(addition)d(of)h(m)m(ultimedia)150
2146 y(extensions)41 b(to)f(most)g(existing)f(general-purp)s(ose)h
(micropro)s(cessors.)66 b(This)40 b(added)h(function-)150
2267 y(alit)m(y)36 b(comes)h(primarily)d(with)j(the)h(addition)d(of)i
(short)g(SIMD)g(instructions.)57 b(Unfortunately)-8 b(,)150
2387 y(access)42 b(to)d(these)i(instructions)f(is)f(limited)e(to)i
(in-line)f(assem)m(bly)i(and)g(library)e(calls.)64 b(Gener-)150
2508 y(ally)-8 b(,)40 b(it)f(has)i(b)s(een)g(assumed)g(that)f(v)m
(ector)h(compilers)d(pro)m(vide)j(the)f(most)g(promising)e(means)150
2628 y(of)c(exploiting)e(m)m(ultimedia)f(instructions.)48
b(Although)34 b(v)m(ectorization)f(tec)m(hnology)i(is)f(w)m(ell)f(un-)
150 2748 y(dersto)s(o)s(d,)f(it)g(is)g(inheren)m(tly)g(complex)g(and)g
(fragile.)42 b(In)32 b(addition,)f(it)g(is)h(incapable)f(of)h(lo)s
(cating)150 2869 y(SIMD-st)m(yle)h(parallelism)c(within)i(a)h(basic)h
(blo)s(c)m(k.)296 2989 y(In)38 b(this)e(thesis)i(w)m(e)g(in)m(tro)s
(duce)e(the)i(concept)g(of)e Fu(Sup)-5 b(erwor)g(d)38
b(L)-5 b(evel)39 b(Par)-5 b(al)5 b(lelism)38 b(\(SLP\))p
Fv(,)e(a)150 3110 y(no)m(v)m(el)27 b(w)m(a)m(y)h(of)e(viewing)g
(parallelism)c(in)k(m)m(ultimedia)d(and)k(scien)m(ti\014c)g
(applications.)39 b(W)-8 b(e)27 b(b)s(eliev)m(e)150 3230
y(SLP)f(is)g(fundamen)m(tally)e(di\013eren)m(t)j(from)d(the)j(lo)s(op)d
(lev)m(el)i(parallelism)c(exploited)j(b)m(y)i(traditional)150
3350 y(v)m(ector)40 b(pro)s(cessing,)i(and)e(therefore)g(demands)f(a)g
(new)i(metho)s(d)e(of)g(extracting)g(it.)63 b(W)-8 b(e)40
b(ha)m(v)m(e)150 3471 y(dev)m(elop)s(ed)d(a)f(simple)e(and)j(robust)f
(compiler)e(for)i(detecting)g(SLP)h(that)e(targets)i(basic)f(blo)s(c)m
(ks)150 3591 y(rather)h(than)g(lo)s(op)f(nests.)59 b(As)38
b(with)e(tec)m(hniques)j(designed)f(to)f(extract)h(ILP)-8
b(,)38 b(ours)f(is)g(able)f(to)150 3711 y(exploit)c(parallelism)d(b)s
(oth)k(across)h(lo)s(op)e(iterations)f(and)j(within)e(basic)h(blo)s(c)m
(ks.)45 b(The)34 b(result)f(is)150 3832 y(an)h(algorithm)c(that)k(pro)m
(vides)g(excellen)m(t)g(p)s(erformance)g(in)e(sev)m(eral)j(application)
c(domains.)46 b(In)150 3952 y(our)29 b(exp)s(erimen)m(ts,)i(dynamic)d
(instruction)h(coun)m(ts)h(w)m(ere)h(reduced)f(b)m(y)h(46\045.)42
b(Sp)s(eedups)31 b(ranged)150 4073 y(from)g(1.24)h(to)g(6.70.)150
4322 y(Thesis)i(Sup)s(ervisor:)43 b(Saman)32 b(Amarasinghe)150
4443 y(Title:)42 b(Assistan)m(t)34 b(Professor)1926 5649
y(2)p eop
%%Page: 3 3
3 2 bop 150 100 a FA(Ac)l(kno)l(wledgmen)l(ts)150 379
y Fv(I)43 b(w)m(an)m(t)i(to)e(thank)h(m)m(y)f(advisor,)j(Saman)c
(Amarasinghe,)k(for)c(initiating)e(this)j(researc)m(h)i(and)150
559 y(for)g(getting)g(his)h(hands)h(dirt)m(y)f(with)f(SUIF)h(passes,)51
b(L)2241 537 y Ft(A)2279 559 y Fv(T)2333 581 y(E)2388
559 y(X,)e(and)d(tak)m(eout.)84 b(Radu)46 b(Rugina)150
740 y(pro)m(vided)30 b(his)f(p)s(oin)m(ter)g(analysis)g(pac)m(k)-5
b(age)30 b(and)g(added)g(alignmen)m(t)d(analysis)i(at)g(the)h(same)f
(time)150 921 y(he)38 b(w)m(as)h(\014nishing)d(a)h(pap)s(er)h(of)f(his)
g(o)m(wn.)59 b(Manas)39 b(Mandal,)f(Kalp)s(esh)f(Gala,)g(Brian)g(Gra)m
(yson)150 1101 y(and)f(James)f(Y)-8 b(ang)35 b(at)g(Motorola)f(pro)m
(vided)i(m)m(uc)m(h)g(needed)h(AltiV)-8 b(ec)34 b(dev)m(elopmen)m(t)j
(to)s(ols)d(and)150 1282 y(exp)s(ertise.)76 b(Man)m(y)44
b(thanks)g(to)e(Matt)h(Deeds)h(for)e(jumping)g(in)m(to)g(the)h(SLP)h
(pro)5 b(ject)43 b(and)g(for)150 1462 y(writing)37 b(the)i(m)m
(ultimedia)c(k)m(ernels)k(used)h(in)d(this)i(thesis.)61
b(Finally)-8 b(,)37 b(I)i(w)m(an)m(t)g(to)f(thank)h(all)e(the)150
1643 y(p)s(eople)d(who)g(read,)h(critiqued)e(and)h(\014xed)i(v)-5
b(arious)33 b(v)m(ersions)i(of)e(this)h(thesis:)47 b(Krste)34
b(Asano)m(vi)m(\023)-46 b(c,)150 1823 y(Mic)m(hael)43
b(T)-8 b(a)m(ylor,)45 b(Derek)f(Bruening,)h(Mik)m(e)f(Zhang,)h(Dark)m
(o)e(Marino)m(v,)j(Matt)d(F)-8 b(rank,)45 b(Mark)150
2004 y(Stephenson,)34 b(Sara)f(Larsen)g(and)g(esp)s(ecially)e
(Stephanie)i(Larsen.)296 2185 y(This)38 b(researc)m(h)h(w)m(as)f
(funded)h(in)d(part)i(b)m(y)g(NSF)f(gran)m(t)h(EIA9810173)e(and)i(D)m
(ARP)-8 b(A)37 b(gran)m(t)150 2365 y(DBT63-96-C-0036.)1926
5649 y(3)p eop
%%Page: 4 4
4 3 bop 150 888 a Fs(Con)-6 b(ten)g(ts)150 1499 y Fr(1)90
b(In)m(tro)s(duction)2780 b(8)150 1777 y(2)90 b(Sup)s(erw)m(ord)38
b(Lev)m(el)g(P)m(arallelism)1936 b(10)296 1957 y Fv(2.1)100
b(Description)31 b(of)h(Sup)s(erw)m(ord)i(Lev)m(el)f(P)m(arallelism)j
(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(10)296 2138 y(2.2)100 b(V)-8 b(ector)33 b(P)m(arallelism)25
b(.)49 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(11)296
2318 y(2.3)100 b(Lo)s(op)32 b(Lev)m(el)h(P)m(arallelism)60
b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(14)296 2499
y(2.4)100 b(SIMD)32 b(P)m(arallelism)49 b(.)g(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)143 b(14)296 2680 y(2.5)100 b(Instruction)32
b(Lev)m(el)i(P)m(arallelism)j(.)50 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(15)150 2958 y Fr(3)90 b(Optimal)36 b(SLP)h(Extraction)2140
b(16)296 3138 y Fv(3.1)100 b(The)33 b(Graph)f(Problem)97
b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(16)296
3319 y(3.2)100 b(0-1)31 b(In)m(teger)j(Linear)e(Programming)d(Solution)
42 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
143 b(18)296 3499 y(3.3)100 b(Analysis)64 b(.)50 b(.)g(.)g(.)g(.)g(.)f
(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)
g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(19)150
3777 y Fr(4)90 b(SLP)38 b(Compiler)d(Algorithm)2102 b(21)296
3958 y Fv(4.1)100 b(Iden)m(tifying)32 b(Adjacen)m(t)h(Memory)g
(References)68 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)143 b(22)296 4139 y(4.2)100 b(Extending)33
b(the)g(P)m(ac)m(kSet)62 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h
(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(26)296 4319 y(4.3)100 b(Com)m(bination)25 b(.)50 b(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(27)296 4500
y(4.4)100 b(Sc)m(heduling)42 b(.)50 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)143 b(28)150 4778 y Fr(5)90 b(A)37
b(Simple)f(V)-9 b(ectorizing)34 b(Compiler)1808 b(30)150
5056 y(6)90 b(SLP)38 b(Compiler)d(Implemen)m(tation)1832
b(33)296 5237 y Fv(6.1)100 b(Lo)s(op)32 b(Unrolling)82
b(.)50 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(33)1926 5649 y(4)p eop
%%Page: 5 5
5 4 bop 296 100 a Fv(6.2)100 b(Redundan)m(t)33 b(load)f(elimination)74
b(.)50 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)143 b(35)296 280 y(6.3)100 b(Arra)m(y)33
b(P)m(adding)101 b(.)50 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
143 b(35)296 461 y(6.4)100 b(Alignmen)m(t)31 b(Analysis)48
b(.)i(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g
(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(36)296
641 y(6.5)100 b(Flattening)55 b(.)50 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)
f(.)h(.)g(.)g(.)g(.)g(.)143 b(36)296 822 y(6.6)100 b(Data\015o)m(w)32
b(Optimizations)97 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(37)296 1002 y(6.7)100 b(Sup)s(erw)m(ord)33 b(Lev)m(el)g(P)m
(arallelization)65 b(.)50 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(37)150 1281
y Fr(7)90 b(Results)2981 b(38)296 1461 y Fv(7.1)100 b(Benc)m(hmarks)59
b(.)50 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)
g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(38)296 1642 y(7.2)100 b(SLP)33 b(Av)-5 b(ailabilit)m(y)97
b(.)49 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(39)521
1822 y(7.2.1)111 b(SLP)33 b(Heuristic)52 b(.)e(.)g(.)g(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)143 b(39)521 2003 y(7.2.2)111 b(Heuristic)32
b(vs.)44 b(Linear)32 b(Programming)e(Metho)s(ds)95 b(.)50
b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(40)521 2183
y(7.2.3)111 b(SLP)33 b(vs.)44 b(V)-8 b(ector)33 b(Extraction)51
b(.)f(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)143 b(41)296 2364 y(7.3)100 b(SLP)33 b(P)m(erformance)62
b(.)49 b(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)
g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(43)150
2642 y Fr(8)90 b(Arc)m(hitectural)35 b(Supp)s(ort)j(for)f(SLP)1838
b(45)150 2920 y(9)90 b(Conclusion)2805 b(47)150 3198
y(A)61 b(Multimedia)36 b(Kernels)2363 b(52)1926 5649
y Fv(5)p eop
%%Page: 6 6
6 5 bop 150 888 a Fs(List)77 b(of)g(Figures)296 1401
y Fv(2-1)94 b(Isomorphic)31 b(statemen)m(ts.)52 b(.)e(.)g(.)g(.)g(.)g
(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)143 b(11)296 1582 y(2-2)94 b(Comparison)31
b(of)h(SLP)h(and)g(v)m(ector)h(parallelization)28 b(tec)m(hniques.)46
b(.)j(.)h(.)g(.)g(.)g(.)g(.)143 b(12)296 1762 y(2-3)94
b(Example)32 b(of)g(an)g(un)m(v)m(ectorizable)i(co)s(de)e(sequence.)47
b(.)j(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(14)296 2026 y(3-1)94 b(Example)32 b(graph)g(represen)m(ting)i(pac)m
(king)e(p)s(ossibilities.)81 b(.)50 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)143 b(17)296 2289 y(4-1)94 b(Example)32 b(of)g(SLP)h(analysis.)
100 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)
g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(23)296 2470 y(4-2)94
b(Pseudo)34 b(co)s(de)e(for)h(the)g(SLP)g(extraction)f(algorithm.)39
b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(24)296 2650 y(4-3)94 b(Pseudo)34 b(co)s(de)e(for)h(the)g(SLP)g
(extraction)f(help)s(er)g(functions.)79 b(.)50 b(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)143 b(25)296 2831 y(4-4)94 b(Example)32 b(of)g(m)m(ultiple)e
(pac)m(king)j(p)s(ossibilities.)c(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)
g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(27)296 3012 y(4-5)94
b(Example)32 b(of)g(a)g(dep)s(endence)j(b)s(et)m(w)m(een)g(groups)e(of)
f(pac)m(k)m(ed)i(statemen)m(ts.)77 b(.)50 b(.)g(.)143
b(28)296 3275 y(5-1)94 b(Pseudo)34 b(co)s(de)e(for)h(the)g(v)m(ector)g
(extraction)g(algorithm.)k(.)50 b(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g
(.)g(.)143 b(31)296 3539 y(6-1)94 b(Compiler)30 b(\015o)m(w.)35
b(.)50 b(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(34)296 3802 y(7-1)94 b(Dynamic)31 b(instructions)h(eliminated)e
(using)i(the)h(SLP)g(heuristic.)50 b(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(40)296 3983 y(7-2)94 b(Comparison)31 b(of)h(SLP)h(and)g(v)m(ector)h
(metho)s(ds.)69 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)143 b(42)296 4164 y(7-3)94 b(Con)m(tribution)31
b(of)h(v)m(ectorizable)h(and)g(non-v)m(ectorizable)f(co)s(de)h
(sequences.)79 b(.)50 b(.)143 b(42)296 4344 y(7-4)94
b(P)m(ercen)m(tage)34 b(impro)m(v)m(emen)m(t)e(of)h(execution)g(time)e
(on)i(an)f(MPC7400.)85 b(.)50 b(.)g(.)g(.)g(.)143 b(44)296
4608 y(A-1)70 b(VMM:)33 b(V)-8 b(ector-matrix)31 b(m)m(ultiply)-8
b(.)30 b(.)50 b(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g
(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(52)296 4788 y(A-2)70
b(MMM:)33 b(Matrix-matrix)e(m)m(ultiply)-8 b(.)74 b(.)50
b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g
(.)g(.)g(.)143 b(53)296 4969 y(A-3)70 b(FIR:)32 b(Finite)f(impulse)g
(resp)s(onse)j(\014lter.)81 b(.)50 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)
g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(54)296 5149
y(A-4)70 b(I)s(IR:)32 b(In\014nite)h(impulse)e(resp)s(onse)j(\014lter.)
54 b(.)c(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)143 b(55)296 5330 y(A-5)70 b(YUV:)33 b(R)m(GB)f(to)g(YUV)h(con)
m(v)m(ersion.)58 b(.)50 b(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g
(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(56)1926 5649
y(6)p eop
%%Page: 7 7
7 6 bop 150 888 a Fs(List)77 b(of)g(T)-19 b(ables)296
1401 y Fv(3.1)100 b(Linear)32 b(programming)d(problem)i(sizes.)75
b(.)50 b(.)f(.)h(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)
g(.)g(.)143 b(19)296 1582 y(3.2)100 b(Dynamic)31 b(instructions)h
(eliminated)e(using)i(linear)f(programming)f(metho)s(ds.)193
b(20)296 1845 y(7.1)100 b(Multimedia)30 b(k)m(ernels.)42
b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)
g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)g(.)143 b(38)296
2026 y(7.2)100 b(Dynamic)31 b(instructions)h(eliminated)e(using)i(the)h
(SLP)g(heuristic.)50 b(.)f(.)h(.)g(.)g(.)g(.)g(.)143
b(39)296 2206 y(7.3)100 b(Comparison)31 b(of)h(SLP)h(heuristic)f(and)h
(linear)e(programming)f(metho)s(ds.)93 b(.)50 b(.)g(.)143
b(41)296 2387 y(7.4)100 b(Comparison)31 b(of)h(SLP)h(and)g(v)m(ector)h
(metho)s(ds.)69 b(.)50 b(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)g(.)f(.)h(.)g(.)
g(.)g(.)g(.)143 b(41)296 2567 y(7.5)100 b(Sp)s(eedup)34
b(on)e(an)h(MPC7400)f(pro)s(cessor)i(using)e(SLP)h(compilation.)111
b(.)50 b(.)g(.)g(.)g(.)143 b(43)1926 5649 y(7)p eop
%%Page: 8 8
8 7 bop 150 888 a Fs(Chapter)78 b(1)150 1428 y(In)-6
b(tro)6 b(duction)150 1941 y Fv(The)33 b(recen)m(t)h(shift)e(to)m(w)m
(ard)h(computation-in)m(tensiv)m(e)e(m)m(ultimedia)e(w)m(orkloads)k
(has)g(resulted)g(in)150 2121 y(a)c(v)-5 b(ariet)m(y)29
b(of)f(new)i(m)m(ultimedia)c(extensions)k(to)f(curren)m(t)h(micropro)s
(cessors)58 b([8)o(,)29 b(12,)g(18,)g(20)o(,)g(22].)150
2302 y(Man)m(y)i(new)h(designs)f(are)f(targeted)g(sp)s(eci\014cally)g
(at)g(the)h(m)m(ultimedia)26 b(domain)j([3,)h(9,)g(13].)43
b(This)150 2482 y(trend)c(is)f(lik)m(ely)g(to)g(con)m(tin)m(ue)h(as)g
(it)e(has)i(b)s(een)g(pro)5 b(jected)40 b(that)e(m)m(ultimedia)d(pro)s
(cessing)k(will)150 2663 y(so)s(on)32 b(b)s(ecome)h(the)g(main)e(fo)s
(cus)i(of)f(micropro)s(cessor)g(design)g([10].)296 2844
y(While)26 b(di\013eren)m(t)h(pro)s(cessors)h(v)-5 b(ary)26
b(in)g(the)h(t)m(yp)s(e)h(and)e(n)m(um)m(b)s(er)h(of)f(m)m(ultimedia)d
(instructions)150 3024 y(o\013ered,)32 b(at)g(the)g(core)g(of)f(eac)m
(h)h(is)g(a)f(set)h(of)f(short)h(SIMD)g(\(Single)e(Instruction)i
(Multiple)e(Data\))150 3205 y(or)38 b(sup)s(erw)m(ord)i(op)s(erations.)
60 b(These)40 b(instructions)e(op)s(erate)g(concurren)m(tly)i(on)e
(data)g(that)g(are)150 3385 y(pac)m(k)m(ed)49 b(in)d(a)h(single)f
(register)h(or)f(memory)g(lo)s(cation.)85 b(In)47 b(the)g(past,)k(suc)m
(h)e(systems)f(could)150 3566 y(accommo)s(date)24 b(only)g(small)f
(data)i(t)m(yp)s(es)i(of)d(8)h(or)g(16)g(bits,)h(making)e(them)h
(suitable)f(for)h(a)g(limited)150 3746 y(set)31 b(of)f(applications.)41
b(With)29 b(the)i(emergence)g(of)f(128-bit)e(sup)s(erw)m(ords,)33
b(new)e(arc)m(hitectures)h(are)150 3927 y(capable)42
b(of)h(p)s(erforming)d(four)j(32-bit)d(op)s(erations)i(with)h(a)f
(single)g(instruction.)73 b(By)43 b(adding)150 4108 y(\015oating)e(p)s
(oin)m(t)h(supp)s(ort)h(as)f(w)m(ell,)j(these)e(extensions)h(can)f(no)m
(w)g(b)s(e)f(used)i(to)e(p)s(erform)g(more)150 4288 y(general-purp)s
(ose)32 b(computation.)296 4469 y(It)38 b(is)f(not)g(surprising)f(that)
i(SIMD)f(execution)h(units)f(ha)m(v)m(e)i(app)s(eared)f(in)e(desktop)j
(micro-)150 4649 y(pro)s(cessors.)45 b(Their)33 b(simple)e(con)m(trol,)
h(replicated)g(functional)f(units,)h(and)h(absence)i(of)d(hea)m(vily-)
150 4830 y(p)s(orted)e(register)f(\014les)h(mak)m(e)g(them)g(inheren)m
(tly)g(simple)e(and)i(extremely)g(amenable)f(to)g(scaling.)150
5010 y(As)e(the)g(n)m(um)m(b)s(er)g(of)g(a)m(v)-5 b(ailable)24
b(transistors)i(increases)i(with)e(adv)-5 b(ances)28
b(in)e(semiconductor)g(tec)m(h-)150 5191 y(nology)-8
b(,)32 b(datapaths)g(are)h(lik)m(ely)e(to)i(gro)m(w)f(ev)m(en)j
(larger.)296 5372 y(T)-8 b(o)s(da)m(y)g(,)26 b(use)f(of)e(m)m
(ultimedia)d(extensions)25 b(is)e(di\016cult)g(since)h(application)d
(writers)j(are)f(largely)1926 5649 y(8)p eop
%%Page: 9 9
9 8 bop 150 100 a Fv(restricted)31 b(to)g(using)f(in-line)e(assem)m
(bly)k(routines)e(or)h(sp)s(ecialized)f(library)f(calls.)41
b(The)32 b(problem)150 280 y(is)23 b(exacerbated)h(b)m(y)g
(inconsistencies)g(among)e(di\013eren)m(t)h(instruction)f(sets.)42
b(One)23 b(solution)f(to)g(this)150 461 y(incon)m(v)m(enience)28
b(is)f(to)f(emplo)m(y)h(v)m(ectorization)f(tec)m(hniques)j(that)d(ha)m
(v)m(e)j(b)s(een)e(used)h(to)f(parallelize)150 641 y(scien)m(ti\014c)i
(co)s(de)f(for)g(v)m(ector)i(mac)m(hines)56 b([7,)28
b(16,)g(17].)42 b(Since)28 b(a)g(n)m(um)m(b)s(er)h(of)f(m)m(ultimedia)d
(applica-)150 822 y(tions)e(are)h(v)m(ectorizable,)i(this)d(approac)m
(h)i(promises)e(go)s(o)s(d)g(results.)41 b(Ho)m(w)m(ev)m(er,)28
b(man)m(y)c(imp)s(ortan)m(t)150 1002 y(m)m(ultimedia)34
b(applications)h(are)i(di\016cult)f(to)h(v)m(ectorize.)59
b(Complicated)35 b(lo)s(op)h(transformation)150 1183
y(tec)m(hniques)f(suc)m(h)g(as)f(lo)s(op)e(\014ssion)i(and)f(scalar)g
(expansion)h(are)f(required)h(to)f(parallelize)e(lo)s(ops)150
1364 y(that)i(are)g(only)f(partially)f(v)m(ectorizable)i([2,)g(5,)g(19)
o(].)45 b(Consequen)m(tly)-8 b(,)36 b(no)d(commercial)d(compiler)150
1544 y(curren)m(tly)i(implemen)m(ts)d(this)i(functionalit)m(y)-8
b(.)41 b(This)31 b(thesis)g(presen)m(ts)i(a)e(metho)s(d)f(for)g
(extracting)150 1725 y(SIMD)j(parallelism)28 b(b)s(ey)m(ond)34
b(v)m(ectorizable)f(lo)s(ops.)296 1905 y(W)-8 b(e)30
b(b)s(eliev)m(e)f(that)g(short)h(SIMD)f(op)s(erations)g(are)g(w)m(ell)g
(suited)g(to)g(exploit)f(a)h(fundamen)m(tally)150 2086
y(di\013eren)m(t)40 b(t)m(yp)s(e)h(of)e(parallelism)d(than)k(the)g(v)m
(ector)h(parallelism)36 b(asso)s(ciated)k(with)f(traditional)150
2267 y(v)m(ector)27 b(and)f(SIMD)g(sup)s(ercomputers.)43
b(W)-8 b(e)26 b(denote)h(this)f(parallelism)c Fu(Sup)-5
b(erwor)g(d)28 b(L)-5 b(evel)28 b(Par)-5 b(al-)150 2447
y(lelism)29 b(\(SLP\))e Fv(since)h(it)e(comes)i(in)e(the)i(form)e(of)h
(sup)s(erw)m(ords)i(con)m(taining)d(pac)m(k)m(ed)j(data.)42
b(V)-8 b(ector)150 2628 y(sup)s(ercomputers)43 b(require)g(large)e
(amoun)m(ts)h(of)g(parallelism)c(in)j(order)i(to)e(ac)m(hiev)m(e)j(sp)s
(eedups,)150 2808 y(whereas)34 b(SLP)f(can)g(b)s(e)g(pro\014table)f
(when)h(parallelism)c(is)j(scarce.)45 b(F)-8 b(rom)31
b(this)h(p)s(ersp)s(ectiv)m(e,)i(w)m(e)150 2989 y(ha)m(v)m(e)29
b(dev)m(elop)s(ed)f(a)f(general)g(algorithm)d(for)j(detecting)g(SLP)h
(that)f(targets)h(basic)f(blo)s(c)m(ks)h(rather)150 3169
y(than)33 b(lo)s(op)e(nests.)296 3350 y(In)47 b(some)f(resp)s(ects,)52
b(sup)s(erw)m(ord)c(lev)m(el)e(parallelism)c(is)k(a)g(restricted)h
(form)e(of)h(ILP)-8 b(.)46 b(ILP)150 3531 y(tec)m(hniques)34
b(ha)m(v)m(e)f(b)s(een)g(v)m(ery)g(successful)h(in)d(the)h
(general-purp)s(ose)g(computing)e(arena,)j(partly)150
3711 y(b)s(ecause)g(of)f(their)f(abilit)m(y)f(to)h(\014nd)i
(parallelism)28 b(within)i(basic)i(blo)s(c)m(ks.)44 b(In)32
b(the)g(same)g(w)m(a)m(y)h(that)150 3892 y(lo)s(op)42
b(unrolling)f(translates)j(lo)s(op)e(lev)m(el)h(parallelism)d(in)m(to)i
(ILP)-8 b(,)44 b(v)m(ector)h(parallelism)40 b(can)k(b)s(e)150
4072 y(transformed)39 b(in)m(to)g(SLP)-8 b(.)39 b(This)h(realization)c
(allo)m(ws)j(for)g(the)g(parallelization)c(of)k(v)m(ectorizable)150
4253 y(lo)s(ops)27 b(using)h(the)h(same)f(basic)g(blo)s(c)m(k)g
(analysis.)41 b(As)29 b(a)f(result,)h(our)f(algorithm)d(do)s(es)k(not)f
(require)150 4433 y(an)m(y)35 b(of)f(the)h(complicated)e(lo)s(op)h
(transformations)e(t)m(ypically)i(asso)s(ciated)g(with)h(v)m
(ectorization.)150 4614 y(In)h(fact,)h(Chapter)f(5)g(will)d(sho)m(w)k
(that)f(v)m(ector)h(parallelism)32 b(alone)j(can)h(b)s(e)g(unco)m(v)m
(ered)i(using)d(a)150 4795 y(simpli\014ed)c(v)m(ersion)i(of)f(the)h
(SLP)g(compiler)d(algorithm)g(presen)m(ted)35 b(in)c(Chapter)j(4.)1926
5649 y(9)p eop
%%Page: 10 10
10 9 bop 150 888 a Fs(Chapter)78 b(2)150 1428 y(Sup)6
b(erw)-6 b(ord)78 b(Lev)-6 b(el)76 b(P)-6 b(arallelism)150
1941 y Fv(This)27 b(c)m(hapter)h(b)s(egins)f(b)m(y)h(elab)s(orating)d
(on)i(the)h(notion)e(of)g(SLP)i(and)f(the)h(means)f(b)m(y)h(whic)m(h)f
(it)f(is)150 2121 y(detected.)47 b(T)-8 b(erminology)32
b(is)h(in)m(tro)s(duced)g(that)g(facilitates)e(the)j(discussion)g(of)e
(our)i(algorithms)150 2302 y(in)29 b(Chapters)j(4)e(and)g(5.)42
b(W)-8 b(e)31 b(then)g(con)m(trast)f(SLP)h(to)f(other)g(forms)g(of)f
(parallelism)d(and)31 b(discuss)150 2482 y(their)h(in)m(teractions.)43
b(This)33 b(helps)f(motiv)-5 b(ate)31 b(the)i(need)h(for)e(a)g(new)i
(compilation)29 b(tec)m(hnique.)150 2906 y FA(2.1)161
b(Description)53 b(of)g(Sup)t(erw)l(ord)f(Lev)l(el)h(P)l(arallelism)150
3186 y Fv(Sup)s(erw)m(ord)33 b(lev)m(el)e(parallelism)c(is)k(de\014ned)
i(as)f(short)f(SIMD)h(parallelism)27 b(in)k(whic)m(h)h(the)g(source)150
3366 y(and)e(result)h(op)s(erands)g(of)f(a)g(SIMD)g(op)s(eration)f(are)
i(pac)m(k)m(ed)h(in)e(a)g(storage)g(lo)s(cation.)40 b(Detection)150
3547 y(is)30 b(done)g(through)g(a)g(short,)h(simple)d(analysis)i(in)f
(whic)m(h)i(indep)s(enden)m(t)g(isomorphic)d(statemen)m(ts)150
3727 y(are)j(iden)m(ti\014ed)g(within)g(a)g(basic)g(blo)s(c)m(k.)43
b(Isomorphic)30 b(statemen)m(ts)i(are)g(those)g(that)f(con)m(tain)g
(the)150 3908 y(same)36 b(op)s(erations)g(in)f(the)i(same)f(order.)55
b(Suc)m(h)37 b(statemen)m(ts)g(can)g(b)s(e)f(executed)j(in)c(parallel)f
(b)m(y)150 4089 y(a)42 b(tec)m(hnique)h(w)m(e)g(call)d
Fu(statement)k(p)-5 b(acking)p Fv(,)43 b(an)f(example)g(of)f(whic)m(h)i
(is)e(sho)m(wn)j(in)d(Figure)g(2-)150 4269 y(1.)50 b(Here,)36
b(source)g(op)s(erands)g(in)e(corresp)s(onding)g(p)s(ositions)g(ha)m(v)
m(e)i(b)s(een)g(pac)m(k)m(ed)h(in)m(to)d(registers)150
4450 y(and)46 b(the)h(addition)d(and)i(m)m(ultiplication)c(op)s
(erators)k(ha)m(v)m(e)h(b)s(een)g(replaced)f(b)m(y)h(their)f(SIMD)150
4630 y(coun)m(terparts.)52 b(Since)34 b(the)i(result)e(of)h(the)g
(computation)e(is)i(also)e(pac)m(k)m(ed,)38 b(unpac)m(king)d(ma)m(y)g
(b)s(e)150 4811 y(required)26 b(dep)s(ending)g(on)g(ho)m(w)g(the)g
(data)f(are)h(used)h(in)e(later)g(computations.)40 b(The)26
b(p)s(erformance)150 4991 y(b)s(ene\014t)h(of)e(statemen)m(t)i(pac)m
(king)f(is)f(determined)h(b)m(y)h(the)f(sp)s(eedup)i(gained)d(from)f
(parallelization)150 5172 y(min)m(us)32 b(the)h(cost)g(of)f(pac)m(king)
h(and)g(unpac)m(king.)296 5353 y(Dep)s(ending)c(on)g(what)g(op)s
(erations)f(an)h(arc)m(hitecture)h(pro)m(vides)f(to)g(facilitate)d
(general)i(pac)m(k-)1901 5649 y(10)p eop
%%Page: 11 11
11 10 bop 884 0 a
 16577003 9448890 0 0 20589690 11774935 startTexFig

 doclip
 884 0 a
%%BeginDocument: figures/isomorph.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: isomorph.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Apr 25 02:23:26 2000
%%For: slarsen@chocura (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 313 179
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-143.0 249.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 5137 m -1000 -1000 l 8587 -1000 l 8587 5137 l cp clip
 0.06000 0.06000 sc
/Courier ff 210.00 scf sf
2550 3300 m
gs 1 -1 sc (a) col0 sh gr
/Courier ff 210.00 scf sf
2550 3540 m
gs 1 -1 sc (d) col0 sh gr
/Courier ff 210.00 scf sf
2550 3780 m
gs 1 -1 sc (r) col0 sh gr
/Courier ff 210.00 scf sf
2550 4020 m
gs 1 -1 sc (w) col0 sh gr
% Polyline
7.500 slw
n 2400 3000 m 2775 3000 l 2775 4125 l 2400 4125 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
3825 3300 m
gs 1 -1 sc (b) col0 sh gr
/Courier ff 210.00 scf sf
3825 3540 m
gs 1 -1 sc (e) col0 sh gr
/Courier ff 210.00 scf sf
3825 3780 m
gs 1 -1 sc (s) col0 sh gr
/Courier ff 210.00 scf sf
3825 4020 m
gs 1 -1 sc (x) col0 sh gr
% Polyline
n 3675 3000 m 4050 3000 l 4050 4125 l 3675 4125 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
5250 3225 m
gs 1 -1 sc (c) col0 sh gr
/Courier ff 210.00 scf sf
5250 3465 m
gs 1 -1 sc (f) col0 sh gr
/Courier ff 210.00 scf sf
5250 3705 m
gs 1 -1 sc (t) col0 sh gr
/Courier ff 210.00 scf sf
5250 3945 m
gs 1 -1 sc (y) col0 sh gr
% Polyline
n 5100 3000 m 5475 3000 l 5475 4125 l 5100 4125 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
4275 3675 m
gs 1 -1 sc (+) col0 sh gr
/Courier ff 165.00 scf sf
4425 3750 m
gs 1 -1 sc (SIMD) col0 sh gr
/Courier ff 165.00 scf sf
5700 3675 m
gs 1 -1 sc (*) col0 sh gr
/Courier ff 165.00 scf sf
5850 3750 m
gs 1 -1 sc (SIMD) col0 sh gr
/Courier ff 210.00 scf sf
6675 3300 m
gs 1 -1 sc (z[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
6675 3540 m
gs 1 -1 sc (z[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6675 3780 m
gs 1 -1 sc (z[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
6675 4020 m
gs 1 -1 sc (z[i+3]) col0 sh gr
% Polyline
n 6525 3000 m 7575 3000 l 7575 4125 l 6525 4125 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
3825 1350 m
gs 1 -1 sc (a = b + c * z[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
3825 1590 m
gs 1 -1 sc (d = e + f * z[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
3825 1830 m
gs 1 -1 sc (r = s + t * z[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
3825 2070 m
gs 1 -1 sc (w = x + y * z[i+3]) col0 sh gr
% Polyline
gs  clippath
5055 2703 m 5025 2823 l 4995 2703 l 4995 2865 l 5055 2865 l cp
clip
n 5025 2175 m 5025 2850 l gs col0 s gr gr

% arrowhead
n 5055 2703 m 5025 2823 l 4995 2703 l 5025 2703 l 5055 2703 l  cp gs 0.00 setgray ef gr  col0 s
/Courier ff 210.00 scf sf
3150 3675 m
gs 1 -1 sc (=) col0 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 252 1400 a Fv(Figure)32 b(2-1:)42 b(Isomorphic)32 b(statemen)m(ts)i
(that)e(can)h(b)s(e)g(pac)m(k)m(ed)h(and)f(executed)i(in)c(parallel.)
150 1685 y(ing)36 b(and)h(unpac)m(king,)h(this)e(tec)m(hnique)i(can)f
(actually)f(result)g(in)g(a)h(p)s(erformance)f(degradation)150
1866 y(if)29 b(pac)m(king)h(and)g(unpac)m(king)g(costs)h(are)e(high)h
(relativ)m(e)f(to)g(ALU)h(op)s(erations.)42 b(One)30
b(of)f(the)i(main)150 2047 y(ob)5 b(jectiv)m(es)37 b(of)e(our)h(SLP)g
(detection)f(tec)m(hnique)i(is)e(to)g(minimize)e(pac)m(king)i(and)h
(unpac)m(king)g(b)m(y)150 2227 y(lo)s(cating)31 b(cases)k(in)d(whic)m
(h)i(pac)m(k)m(ed)h(data)e(pro)s(duced)h(as)g(a)f(result)g(of)g(one)g
(computation)f(can)i(b)s(e)150 2408 y(used)g(directly)e(as)g(a)h
(source)g(in)f(another)h(computation.)296 2588 y(P)m(ac)m(k)m(ed)c
(statemen)m(ts)f(that)e(con)m(tain)g(adjacen)m(t)h(memory)f(references)
j(among)c(corresp)s(onding)150 2769 y(op)s(erands)j(are)g(particularly)
d(w)m(ell)i(suited)h(for)f(SLP)h(execution.)43 b(This)28
b(is)f(b)s(ecause)i(op)s(erands)f(are)150 2949 y(e\013ectiv)m(ely)47
b(pre-pac)m(k)m(ed)i(in)c(memory)h(and)h(require)g(no)f(resh)m
(u\017ing)i(within)d(a)h(register.)86 b(In)150 3130 y(addition,)41
b(an)f(address)i(calculation)37 b(follo)m(w)m(ed)j(b)m(y)h(a)f(load)f
(or)h(store)h(need)g(only)f(b)s(e)h(executed)150 3311
y(once)k(instead)g(of)f(individually)d(for)j(eac)m(h)i(elemen)m(t.)79
b(The)46 b(com)m(bined)e(e\013ect)h(can)g(lead)f(to)g(a)150
3491 y(signi\014can)m(t)39 b(p)s(erformance)g(increase.)64
b(This)39 b(is)g(not)g(surprising)g(since)h(v)m(ector)g(mac)m(hines)g
(ha)m(v)m(e)150 3672 y(b)s(een)30 b(successful)h(at)d(exploiting)f(the)
j(same)f(phenomenon.)43 b(In)29 b(our)g(exp)s(erimen)m(ts,)h
(instructions)150 3852 y(eliminated)f(from)h(op)s(erating)h(on)g
(adjacen)m(t)h(memory)f(lo)s(cations)f(had)i(the)g(greatest)g(impact)e
(on)150 4033 y(sp)s(eedup.)44 b(F)-8 b(or)30 b(this)g(reason,)h(lo)s
(cating)d(adjacen)m(t)j(memory)e(references)k(forms)c(the)i(basis)f(of)
g(our)150 4213 y(algorithm,)f(discussed)35 b(in)d(Chapter)h(4.)150
4638 y FA(2.2)161 b(V)-13 b(ector)52 b(P)l(arallelism)150
4917 y Fv(T)-8 b(o)29 b(b)s(etter)h(explain)f(the)g(di\013erences)i(b)s
(et)m(w)m(een)g(sup)s(erw)m(ord)g(lev)m(el)e(parallelism)d(and)j(v)m
(ector)i(par-)150 5097 y(allelism,)d(w)m(e)k(presen)m(t)g(t)m(w)m(o)g
(short)f(examples,)g(sho)m(wn)i(in)d(Figures)g(2-2)g(and)h(2-3.)42
b(Although)31 b(the)150 5278 y(\014rst)f(example)e(can)h(b)s(e)h
(molded)e(in)m(to)g(a)h(v)m(ectorizable)g(form,)f(w)m(e)i(kno)m(w)h(of)
d(no)h(v)m(ector)h(compilers)1901 5649 y(11)p eop
%%Page: 12 12
12 11 bop 1196 211 a Fq(for)42 b(\(i=0;)g(i<16;)f(i++\))h({)1283
310 y(localdiff)e(=)j(ref[i])e(-)j(curr[i];)1283 410
y(diff)e(+=)h(abs\(localdiff\);)1196 509 y(})1614 609
y Fp(\(a\))28 b(Original)e(lo)r(op.)1196 937 y Fq(for)42
b(\(i=0;)g(i<16;)f(i++\))h({)1283 1036 y(T[i])g(=)h(ref[i])e(-)j
(curr[i];)1196 1136 y(})1196 1335 y(for)e(\(i=0;)g(i<16;)f(i++\))h({)
1283 1435 y(diff)g(+=)h(abs\(T[i]\);)1196 1534 y(})1149
1692 y Fp(\(b\))28 b(After)g(scalar)e(expansion)g(and)i(lo)r(op)f
(\014ssion.)1152 2020 y Fq(for)43 b(\(i=0;)e(i<16;)h(i+=4\))f({)1283
2119 y(localdiff)f(=)j(ref[i+0])e(-)i(curr[i+0];)1283
2219 y(diff)f(+=)h(abs\(localdiff\);)1283 2418 y(localdiff)d(=)j
(ref[i+1])e(-)i(curr[i+1];)1283 2518 y(diff)f(+=)h(abs\(localdiff\);)
1283 2717 y(localdiff)d(=)j(ref[i+2])e(-)i(curr[i+2];)1283
2817 y(diff)f(+=)h(abs\(localdiff\);)1283 3016 y(localdiff)d(=)j
(ref[i+3])e(-)i(curr[i+3];)1283 3116 y(diff)f(+=)h(abs\(localdiff\);)
1196 3215 y(})926 3423 y Fp(\(c\))28 b(Sup)r(erw)n(ord)f(lev)n(el)g
(parallelism)f(exp)r(osed)i(after)f(unrolling.)1196 3750
y Fq(for)42 b(\(i=0;)g(i<16;)f(i+=4\))h({)1283 3850 y(localdiff0)e(=)j
(ref[i+0])d(-)j(curr[i+0];)1283 3950 y(localdiff1)d(=)j(ref[i+1])d(-)j
(curr[i+1];)1283 4049 y(localdiff2)d(=)j(ref[i+2])d(-)j(curr[i+2];)1283
4149 y(localdiff3)d(=)j(ref[i+3])d(-)j(curr[i+3];)1283
4348 y(diff)f(+=)h(abs\(localdiff0\);)1283 4448 y(diff)f(+=)h
(abs\(localdiff1\);)1283 4547 y(diff)f(+=)h(abs\(localdiff2\);)1283
4647 y(diff)f(+=)h(abs\(localdiff3\);)1196 4747 y(})878
4904 y Fp(\(d\))29 b(P)n(ac)n(k)-5 b(able)26 b(statemen)n(ts)h(group)r
(ed)g(together)f(after)i(renaming.)468 5228 y Fv(Figure)j(2-2:)43
b(Comparison)31 b(of)i(SLP)g(and)f(v)m(ector)i(parallelization)28
b(tec)m(hniques.)1901 5649 y(12)p eop
%%Page: 13 13
13 12 bop 150 100 a Fv(that)32 b(can)g(b)s(e)h(used)g(to)f(v)m
(ectorize)h(the)f(second.)45 b(F)-8 b(urthermore,)31
b(the)i(transformations)d(required)150 280 y(in)40 b(the)i(\014rst)f
(example)g(are)g(unnecessarily)h(complex)f(and)g(ma)m(y)g(not)g(w)m
(ork)h(in)e(more)h(compli-)150 461 y(cated)33 b(circumstances.)45
b(In)33 b(general,)f(a)h(v)m(ector)h(compiler)c(m)m(ust)j(emplo)m(y)f
(a)h(rep)s(ertoire)f(of)g(to)s(ols)150 641 y(in)k(order)g(to)g
(parallelize)e(lo)s(ops)h(on)i(a)f(case)h(b)m(y)h(case)f(basis.)55
b(By)37 b(comparison,)f(our)h(metho)s(d)e(is)150 822
y(simple)c(and)i(robust,)g(y)m(et)g(still)e(capable)h(of)g(detecting)h
(the)g(a)m(v)-5 b(ailable)30 b(parallelism.)296 1002
y(Figure)44 b(2-2\(a\))e(presen)m(ts)47 b(the)d(inner)g(lo)s(op)f(of)h
(the)g(motion)f(estimation)f(algorithm)f(used)150 1183
y(for)k(MPEG)i(enco)s(ding.)83 b(V)-8 b(ectorization)44
b(is)i(inhibited)e(b)m(y)j(the)f(presence)i(of)e(a)f(lo)s(op-carried)
150 1364 y(dep)s(endence)g(and)e(a)g(function)f(call)f(within)g(the)j
(lo)s(op)d(b)s(o)s(dy)-8 b(.)74 b(T)-8 b(o)43 b(o)m(v)m(ercome)g(this,)
i(a)e(v)m(ector)150 1544 y(compiler)28 b(can)j(p)s(erform)f(a)g(series)
h(of)f(transformations)f(to)h(mold)e(the)j(lo)s(op)e(in)m(to)h(a)g(v)m
(ectorizable)150 1725 y(form.)39 b(The)23 b(\014rst)f(is)g(scalar)f
(expansion,)k(whic)m(h)d(allo)s(cates)e(a)i(new)h(elemen)m(t)f(in)f(a)h
(temp)s(orary)f(arra)m(y)150 1905 y(for)35 b(eac)m(h)h(iteration)e(of)h
(the)g(lo)s(op)f([5].)52 b(Lo)s(op)35 b(\014ssion)h(is)f(then)h(used)g
(to)f(divide)g(the)h(statemen)m(ts)150 2086 y(in)m(to)24
b(separate)i(lo)s(ops)d([15].)41 b(The)26 b(result)e(of)h(these)h
(transformations)d(is)h(sho)m(wn)i(in)e(Figure)g(2-2\(b\).)150
2267 y(The)34 b(\014rst)f(lo)s(op)e(is)h(v)m(ectorizable,)g(but)h(the)g
(second)h(m)m(ust)f(b)s(e)g(executed)h(sequen)m(tially)-8
b(.)296 2447 y(Figure)25 b(2-2\(c\))h(sho)m(ws)h(the)g(lo)s(op)e(from)f
(the)j(p)s(ersp)s(ectiv)m(e)h(of)d(SLP)-8 b(.)27 b(After)f(unrolling,)f
(the)h(four)150 2628 y(statemen)m(ts)41 b(corresp)s(onding)f(to)g(the)h
(\014rst)f(statemen)m(t)h(in)e(the)i(original)c(lo)s(op)h(can)j(b)s(e)f
(pac)m(k)m(ed)150 2808 y(together.)64 b(The)40 b(pac)m(king)g(pro)s
(cess)g(e\013ectiv)m(ely)g(mo)m(v)m(es)g(pac)m(k)-5 b(able)40
b(statemen)m(ts)g(to)f(con)m(tiguous)150 2989 y(p)s(ositions,)32
b(as)h(sho)m(wn)h(in)e(part)g(\(d\).)44 b(The)34 b(co)s(de)f(motion)e
(is)h(legal)f(b)s(ecause)j(it)e(do)s(es)h(not)f(violate)150
3169 y(an)m(y)39 b(dep)s(endences)i(\(once)d(scalar)g(renaming)e(is)i
(p)s(erformed\).)59 b(The)39 b(\014rst)g(four)f(statemen)m(ts)h(in)150
3350 y(the)27 b(resulting)e(lo)s(op)g(b)s(o)s(dy)h(can)h(b)s(e)f(pac)m
(k)m(ed)i(and)f(executed)h(in)d(parallel.)39 b(Their)26
b(results)h(are)f(then)150 3531 y(unpac)m(k)m(ed)35 b(so)f(they)g(can)f
(b)s(e)g(used)i(in)d(the)i(sequen)m(tial)f(computation)e(of)i(the)h
(\014nal)e(statemen)m(ts.)150 3711 y(In)39 b(the)g(end,)i(this)d(metho)
s(d)h(has)g(the)g(same)f(e\013ect)i(as)f(the)g(transformations)e(used)j
(for)e(v)m(ector)150 3892 y(compilation,)29 b(while)j(only)g(requiring)
g(lo)s(op)f(unrolling)f(and)i(scalar)g(renaming.)296
4072 y(Figure)24 b(2-3)f(sho)m(ws)j(a)e(co)s(de)h(segmen)m(t)g(that)f
(a)m(v)m(erages)i(the)f(elemen)m(ts)g(of)f(t)m(w)m(o)h(16x16)f
(matrices.)150 4253 y(As)34 b(is)f(the)h(case)g(with)f(man)m(y)g(m)m
(ultimedia)d(k)m(ernels,)35 b(our)e(example)g(has)h(b)s(een)g
(hand-optimized)150 4433 y(for)25 b(a)h(sequen)m(tial)g(mac)m(hine.)41
b(In)26 b(order)g(to)f(v)m(ectorize)i(this)e(lo)s(op,)h(a)f(v)m(ector)i
(compiler)d(w)m(ould)i(need)150 4614 y(to)i(rev)m(erse)j(the)f
(programmer-applied)25 b(optimizations.)39 b(W)-8 b(ere)30
b(suc)m(h)g(metho)s(ds)f(a)m(v)-5 b(ailable,)27 b(they)150
4795 y(w)m(ould)i(in)m(v)m(olv)m(e)h(constructing)g(a)f
Fu(for)40 b Fv(lo)s(op,)28 b(restoring)h(the)h(induction)e(v)-5
b(ariable,)29 b(and)g(re-rolling)150 4975 y(the)37 b(lo)s(op.)54
b(In)37 b(con)m(trast,)h(lo)s(cating)c(SLP)k(within)d(the)i(lo)s(op)e
(b)s(o)s(dy)i(is)f(simple.)54 b(Since)36 b(the)h(opti-)150
5156 y(mized)e(co)s(de)g(is)g(amenable)g(to)g(SLP)h(analysis,)f
(hand-optimization)d(has)k(had)f(no)h(detrimen)m(tal)150
5336 y(e\013ects)e(on)e(our)h(abilit)m(y)d(to)j(detect)g(the)g(a)m(v)-5
b(ailable)30 b(parallelism.)1901 5649 y(13)p eop
%%Page: 14 14
14 13 bop 1170 166 a Fq(do)43 b({)1257 265 y(dst[0])e(=)i(\(src1[0])e
(+)i(src2[0]\))d(>>)j(1;)1257 365 y(dst[1])e(=)i(\(src1[1])e(+)i
(src2[1]\))d(>>)j(1;)1257 464 y(dst[2])e(=)i(\(src1[2])e(+)i(src2[2]\))
d(>>)j(1;)1257 564 y(dst[3])e(=)i(\(src1[3])e(+)i(src2[3]\))d(>>)j(1;)
1257 763 y(dst)86 b(+=)43 b(4;)1257 863 y(src1)f(+=)h(4;)1257
963 y(src2)f(+=)h(4;)1170 1062 y(})1170 1162 y(while)f(\(dst)f(!=)i
(end\);)737 1442 y Fv(Figure)32 b(2-3:)42 b(Example)32
b(of)g(an)h(un)m(v)m(ectorizable)g(co)s(de)g(sequence.)150
1727 y FA(2.3)161 b(Lo)t(op)53 b(Lev)l(el)h(P)l(arallelism)150
2006 y Fv(V)-8 b(ector)25 b(parallelism,)e(exploited)h(b)m(y)h(v)m
(ector)h(computers,)h(is)d(a)h(subset)h(of)e(lo)s(op)f(lev)m(el)i
(parallelism.)150 2187 y(General)42 b(lo)s(op)g(lev)m(el)g(parallelism)
d(is)k(t)m(ypically)e(exploited)i(b)m(y)h(a)e(m)m(ultipro)s(cessor)g
(or)h(MIMD)150 2367 y(mac)m(hine.)54 b(In)37 b(man)m(y)f(cases,)j
(parallel)33 b(lo)s(ops)j(ma)m(y)g(not)g(yield)f(p)s(erformance)h
(gains)g(b)s(ecause)h(of)150 2548 y(\014ne-grain)i(sync)m(hronization)i
(or)f(lo)s(op-carried)e(comm)m(unication.)64 b(It)41
b(is)f(therefore)h(necessary)150 2728 y(to)e(\014nd)i(coarse-grain)d
(parallel)f(lo)s(ops)i(when)i(compiling)36 b(for)j(MIMD)h(mac)m(hines.)
65 b(T)-8 b(radition-)150 2909 y(ally)g(,)45 b(a)e(MIMD)h(mac)m(hine)f
(is)g(comp)s(osed)h(of)f(m)m(ultiple)e(micropro)s(cessors.)77
b(It)43 b(is)g(conceiv)-5 b(able)150 3090 y(that)34 b(lo)s(op)e(lev)m
(el)i(parallelism)c(could)k(b)s(e)g(exploited)g(orthogonally)e(to)h
(sup)s(erw)m(ord)j(lev)m(el)e(paral-)150 3270 y(lelism)i(within)h(eac)m
(h)j(pro)s(cessor.)62 b(Since)38 b(coarse-grain)g(parallelism)c(is)k
(required)h(to)g(get)f(go)s(o)s(d)150 3451 y(MIMD)30
b(p)s(erformance,)g(extracting)f(SLP)h(should)g(not)f(detract)h(from)f
(existing)g(MIMD)h(parallel)150 3631 y(p)s(erformance.)150
4055 y FA(2.4)161 b(SIMD)53 b(P)l(arallelism)150 4335
y Fv(SIMD)32 b(parallelism)27 b(came)k(in)m(to)g(prominence)g(with)g
(the)h(adv)m(en)m(t)h(of)e(massiv)m(ely)g(parallel)e(sup)s(er-)150
4515 y(computers)43 b(suc)m(h)h(as)e(the)h(Illiac)d(IV)i([11],)j(and)e
(later)e(with)h(the)h(Thinking)e(Mac)m(hines)j(CM-1)150
4696 y(and)31 b(CM-2)g([25,)f(26])h(and)g(the)g(Maspar)h(MP-1)e([4,)h
(6].)43 b(The)32 b(asso)s(ciation)d(of)i(the)g(term)f(\\SIMD")150
4876 y(with)e(this)h(t)m(yp)s(e)g(of)f(computer)h(is)f(what)h(led)f(us)
h(to)g(use)g(\\Sup)s(erw)m(ord)h(Lev)m(el)f(P)m(arallelism")c(when)150
5057 y(discussing)33 b(short)g(SIMD)f(op)s(erations.)296
5237 y(SIMD)26 b(sup)s(ercomputers)h(w)m(ere)f(implemen)m(ted)f(using)g
(thousands)h(of)f(small)e(pro)s(cessors)k(that)1901 5649
y(14)p eop
%%Page: 15 15
15 14 bop 150 100 a Fv(w)m(ork)m(ed)27 b(sync)m(hronously)g(on)e(a)g
(single)g(instruction)f(stream.)41 b(While)24 b(the)i(cost)f(of)g
(massiv)m(e)h(SIMD)150 280 y(parallel)j(execution)i(and)h(near-neigh)m
(b)s(or)e(comm)m(unication)f(w)m(as)j(lo)m(w,)f(distribution)f(of)g
(data)h(to)150 461 y(these)49 b(pro)s(cessors)h(w)m(as)f(exp)s(ensiv)m
(e.)93 b(F)-8 b(or)47 b(this)h(reason,)53 b(automatic)46
b(SIMD)i(parallelization)150 641 y(cen)m(tered)36 b(on)e(solving)e(the)
j(data)e(distribution)f(problem)h([1].)47 b(In)34 b(the)g(end,)h(the)g
(class)f(of)f(appli-)150 822 y(cations)27 b(for)g(whic)m(h)g(SIMD)h
(compilers)e(w)m(ere)i(successful)i(w)m(as)e(ev)m(en)h(more)d
(restrictiv)m(e)i(than)f(that)150 1002 y(of)32 b(v)m(ector)i(and)e
(MIMD)h(mac)m(hines.)150 1427 y FA(2.5)161 b(Instruction)52
b(Lev)l(el)h(P)l(arallelism)150 1706 y Fv(Sup)s(erw)m(ord)32
b(lev)m(el)e(parallelism)d(is)j(closely)h(related)f(to)g(ILP)-8
b(.)31 b(In)g(fact,)g(SLP)h(can)f(b)s(e)f(view)m(ed)i(as)f(a)150
1886 y(subset)26 b(of)f(instruction)f(lev)m(el)g(parallelism.)37
b(Most)25 b(pro)s(cessors)i(that)d(supp)s(ort)h(SLP)h(also)e(supp)s
(ort)150 2067 y(ILP)37 b(in)e(the)i(form)e(of)g(sup)s(erscalar)i
(execution.)55 b(Because)37 b(of)f(their)g(similarities,)c(metho)s(ds)k
(for)150 2248 y(lo)s(cating)24 b(SLP)j(and)g(ILP)g(ma)m(y)f(extract)h
(the)g(same)g(information.)38 b(Under)27 b(circumstances)h(where)150
2428 y(these)38 b(t)m(yp)s(es)f(of)f(parallelism)d(completely)i(o)m(v)m
(erlap,)i(SLP)g(execution)g(is)f(preferred)h(b)s(ecause)h(it)150
2609 y(pro)m(vides)33 b(a)g(less)g(exp)s(ensiv)m(e)h(and)f(more)f
(energy)h(e\016cien)m(t)h(solution.)296 2789 y(In)45
b(practice,)j(the)d(ma)5 b(jorit)m(y)43 b(of)h(ILP)h(is)f(found)g(in)g
(the)h(presence)i(of)d(lo)s(ops.)78 b(Therefore,)150
2970 y(unrolling)44 b(the)j(lo)s(op)e(m)m(ultiple)f(times)i(ma)m(y)g
(pro)m(vide)h(enough)g(parallelism)42 b(to)47 b(satisfy)f(b)s(oth)150
3150 y(ILP)e(and)g(SLP)g(pro)s(cessor)g(utilization.)73
b(In)44 b(this)f(situation,)i(ILP)f(p)s(erformance)g(w)m(ould)f(not)150
3331 y(noticeably)32 b(degrade)h(after)f(SLP)h(is)f(extracted)i(from)e
(a)g(program.)1901 5649 y(15)p eop
%%Page: 16 16
16 15 bop 150 888 a Fs(Chapter)78 b(3)150 1428 y(Optimal)e(SLP)h
(Extraction)150 1941 y Fv(W)-8 b(e)34 b(initially)c(form)m(ulated)j
(SLP)i(extraction)e(as)i(a)e(graph)h(problem.)47 b(F)-8
b(rom)33 b(there,)i(w)m(e)g(deriv)m(ed)150 2121 y(a)c(set)g(of)g(0-1)f
(in)m(teger)g(linear)g(programming)e(equations)j(that)f(could)h(b)s(e)g
(used)h(to)f(\014nd)g(the)g(b)s(est)150 2302 y(set)j(of)e(pac)m(k)m(ed)
j(statemen)m(ts)f(for)f(a)f(giv)m(en)i(basic)f(blo)s(c)m(k.)44
b(Although)33 b(this)f(tec)m(hnique)j(pro)m(v)m(ed)f(in-)150
2482 y(tractable)23 b(for)g(real)g(b)s(enc)m(hmarks,)k(w)m(e)e(gained)e
(v)-5 b(aluable)22 b(insigh)m(ts)i(that)f(help)s(ed)h(in)f(the)h(disco)
m(v)m(ery)150 2663 y(of)32 b(the)h(heuristic)f(algorithm)e(describ)s
(ed)j(in)f(the)h(next)g(c)m(hapter.)150 3087 y FA(3.1)161
b(The)53 b(Graph)g(Problem)150 3366 y Fv(F)-8 b(or)25
b(an)m(y)h(statemen)m(t)g(in)f(a)h(basic)f(blo)s(c)m(k,)i(there)g(is)e
(the)h(p)s(ossibilit)m(y)d(for)j(sev)m(eral)g(di\013eren)m(t)g(pac)m
(king)150 3547 y(options.)61 b(These)40 b(options)e(can)h(b)s(e)g
(represen)m(ted)i(as)d(no)s(des)i(in)d(a)i(graph.)61
b(Eac)m(h)39 b(no)s(de)g(has)g(an)150 3727 y(asso)s(ciated)29
b(v)-5 b(alue)28 b(that)g(indicates)g(the)i(sa)m(vings)f(ac)m(hiev)m
(ed)h(when)g(compared)e(to)h(the)g(sequen)m(tial)150
3908 y(alternativ)m(e.)63 b(Sa)m(vings)40 b(are)g(computed)f(from)g
(the)g(t)m(yp)s(e)i(and)e(n)m(um)m(b)s(er)h(of)f(op)s(erations)g
(within)150 4089 y(eac)m(h)i(statemen)m(t,)i(the)d(n)m(um)m(b)s(er)g
(of)g(statemen)m(ts)h(in)e(the)i(pac)m(k)m(ed)h(group,)g(and)e(an)m(y)h
(necessary)150 4269 y(pac)m(king)30 b(or)f(unpac)m(king)i(costs.)43
b(P)m(ac)m(king)31 b(costs)g(will)c(often)j(pro)s(duce)h(no)s(des)f
(that)g(are)g(assigned)150 4450 y(negativ)m(e)38 b(sa)m(vings.)60
b(Suc)m(h)39 b(no)s(des)g(are)f(only)f(pro\014table)h(when)h
(considered)g(in)e(the)h(con)m(text)h(of)150 4630 y(other)46
b(pac)m(k)m(ed)j(groups.)85 b(This)46 b(notion)f(is)h(captured)h(b)m(y)
h(graph)e(edges.)85 b(Edges)48 b(are)e(dra)m(wn)150 4811
y(b)s(et)m(w)m(een)33 b(t)m(w)m(o)f(no)s(des)g(whenev)m(er)h(data)e
(pro)s(duced)h(in)e(one)i(no)s(de)f(can)g(b)s(e)h(used)g(in)e(the)i
(other.)43 b(A)150 4991 y(v)-5 b(alue)27 b(is)h(asso)s(ciated)g(with)g
(eac)m(h)h(edge)f(as)g(w)m(ell,)h(indicating)c(the)k(pac)m(king)f(cost)
g(reco)m(v)m(ered)j(when)150 5172 y(comm)m(unicated)h(data)g(are)g(in)g
(a)h(useful)f(pac)m(k)m(ed)j(con\014guration.)296 5353
y(An)g(example)e(graph)h(is)g(sho)m(wn)h(in)e(Figure)g(3-1.)47
b(Sa)m(vings)35 b(ha)m(v)m(e)g(b)s(een)g(omitted)e(since)h(they)1901
5649 y(16)p eop
%%Page: 17 17
17 16 bop 284 0 a
 26049576 13285280 0 0 35061678 18221547 startTexFig

 doclip
 284 0 a
%%BeginDocument: figures/graph.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: graph.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Mon May  1 10:41:02 2000
%%For: slarsen@chocura (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 533 277
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-157.0 366.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7087 m -1000 -1000 l 12487 -1000 l 12487 7087 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 5625 3000 m 7275 3000 l 7275 3675 l 5625 3675 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
5850 3300 m
gs 1 -1 sc (a = b + c) col0 sh gr
/Courier ff 210.00 scf sf
5850 3525 m
gs 1 -1 sc (d = e + f) col0 sh gr
% Polyline
n 5625 4200 m 7275 4200 l 7275 4875 l 5625 4875 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
5850 4500 m
gs 1 -1 sc (a = b + c) col0 sh gr
/Courier ff 210.00 scf sf
5850 4725 m
gs 1 -1 sc (g = h + j) col0 sh gr
% Polyline
n 5625 5400 m 7275 5400 l 7275 6075 l 5625 6075 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
5850 5700 m
gs 1 -1 sc (d = e + f) col0 sh gr
/Courier ff 210.00 scf sf
5850 5925 m
gs 1 -1 sc (g = h + j) col0 sh gr
% Polyline
n 5625 1500 m 7275 1500 l 7275 2475 l 5625 2475 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
5850 1800 m
gs 1 -1 sc (a = b + c) col0 sh gr
/Courier ff 210.00 scf sf
5850 2040 m
gs 1 -1 sc (d = e + f) col0 sh gr
/Courier ff 210.00 scf sf
5850 2280 m
gs 1 -1 sc (g = h + j) col0 sh gr
% Polyline
n 9825 3000 m 11475 3000 l 11475 3675 l 9825 3675 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
10050 3300 m
gs 1 -1 sc (k = a * m) col0 sh gr
/Courier ff 210.00 scf sf
10050 3525 m
gs 1 -1 sc (n = d * p) col0 sh gr
% Polyline
n 9825 4200 m 11475 4200 l 11475 4875 l 9825 4875 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
10050 4500 m
gs 1 -1 sc (k = a * m) col0 sh gr
/Courier ff 210.00 scf sf
10050 4725 m
gs 1 -1 sc (q = g * r) col0 sh gr
% Polyline
n 9825 5400 m 11475 5400 l 11475 6075 l 9825 6075 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
10050 5700 m
gs 1 -1 sc (n = d * p) col0 sh gr
/Courier ff 210.00 scf sf
10050 5925 m
gs 1 -1 sc (q = g * r) col0 sh gr
% Polyline
n 9825 1500 m 11475 1500 l 11475 2475 l 9825 2475 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
10050 1800 m
gs 1 -1 sc (k = a * m) col0 sh gr
/Courier ff 210.00 scf sf
10050 2025 m
gs 1 -1 sc (n = d * p) col0 sh gr
/Courier ff 210.00 scf sf
10050 2250 m
gs 1 -1 sc (q = g * r) col0 sh gr
% Polyline
gs  clippath
9678 1770 m 9798 1800 l 9678 1830 l 9840 1830 l 9840 1770 l cp
clip
n 7275 1800 m 9825 1800 l gs col0 s gr gr

% arrowhead
n 9678 1770 m 9798 1800 l 9678 1830 l 9678 1800 l 9678 1770 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9711 3127 m 9801 3211 l 9682 3179 l 9823 3259 l 9853 3206 l cp
clip
n 7275 1800 m 9825 3225 l gs col0 s gr gr

% arrowhead
n 9711 3127 m 9801 3211 l 9682 3179 l 9697 3153 l 9711 3127 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9744 4299 m 9806 4405 l 9701 4340 l 9814 4457 l 9857 4415 l cp
clip
n 7275 1800 m 9825 4425 l gs col0 s gr gr

% arrowhead
n 9744 4299 m 9806 4405 l 9701 4340 l 9723 4320 l 9744 4299 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9767 5412 m 9809 5527 l 9718 5445 l 9809 5579 l 9858 5546 l cp
clip
n 7275 1800 m 9825 5550 l gs col0 s gr gr

% arrowhead
n 9767 5412 m 9809 5527 l 9718 5445 l 9742 5428 l 9767 5412 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9678 3270 m 9798 3300 l 9678 3330 l 9840 3330 l 9840 3270 l cp
clip
n 7275 3300 m 9825 3300 l gs col0 s gr gr

% arrowhead
n 9678 3270 m 9798 3300 l 9678 3330 l 9678 3300 l 9678 3270 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9682 1921 m 9801 1888 l 9711 1973 l 9853 1894 l 9823 1841 l cp
clip
n 7275 3300 m 9825 1875 l gs col0 s gr gr

% arrowhead
n 9682 1921 m 9801 1888 l 9711 1973 l 9697 1947 l 9682 1921 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9705 4410 m 9800 4488 l 9679 4465 l 9826 4534 l 9851 4479 l cp
clip
n 7275 3300 m 9825 4500 l gs col0 s gr gr

% arrowhead
n 9705 4410 m 9800 4488 l 9679 4465 l 9692 4437 l 9705 4410 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9739 5577 m 9805 5681 l 9697 5621 l 9815 5732 l 9856 5688 l cp
clip
n 7275 3300 m 9825 5700 l gs col0 s gr gr

% arrowhead
n 9739 5577 m 9805 5681 l 9697 5621 l 9718 5599 l 9739 5577 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9700 2108 m 9805 2044 l 9742 2150 l 9857 2036 l 9814 1993 l cp
clip
n 7275 4575 m 9825 2025 l gs col0 s gr gr

% arrowhead
n 9700 2108 m 9805 2044 l 9742 2150 l 9721 2129 l 9700 2108 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9679 3410 m 9800 3386 l 9705 3465 l 9851 3396 l 9826 3341 l cp
clip
n 7275 4575 m 9825 3375 l gs col0 s gr gr

% arrowhead
n 9679 3410 m 9800 3386 l 9705 3465 l 9692 3438 l 9679 3410 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9705 5685 m 9800 5763 l 9679 5740 l 9826 5809 l 9851 5754 l cp
clip
n 7275 4575 m 9825 5775 l gs col0 s gr gr

% arrowhead
n 9705 5685 m 9800 5763 l 9679 5740 l 9692 5712 l 9705 5685 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9717 2279 m 9809 2197 l 9766 2313 l 9858 2180 l 9809 2146 l cp
clip
n 7275 5850 m 9825 2175 l gs col0 s gr gr

% arrowhead
n 9717 2279 m 9809 2197 l 9766 2313 l 9741 2296 l 9717 2279 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9697 3529 m 9805 3468 l 9739 3573 l 9856 3462 l 9815 3418 l cp
clip
n 7275 5850 m 9825 3450 l gs col0 s gr gr

% arrowhead
n 9697 3529 m 9805 3468 l 9739 3573 l 9718 3551 l 9697 3529 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9678 5820 m 9798 5850 l 9678 5880 l 9840 5880 l 9840 5820 l cp
clip
n 7275 5850 m 9825 5850 l gs col0 s gr gr

% arrowhead
n 9678 5820 m 9798 5850 l 9678 5880 l 9678 5850 l 9678 5820 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9679 4685 m 9800 4661 l 9705 4740 l 9851 4671 l 9826 4616 l cp
clip
n 7275 5850 m 9825 4650 l gs col0 s gr gr

% arrowhead
n 9679 4685 m 9800 4661 l 9705 4740 l 9692 4713 l 9679 4685 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9678 4545 m 9798 4575 l 9678 4605 l 9840 4605 l 9840 4545 l cp
clip
n 7275 4575 m 9825 4575 l gs col0 s gr gr

% arrowhead
n 9678 4545 m 9798 4575 l 9678 4605 l 9678 4575 l 9678 4545 l  cp gs 0.00 setgray ef gr  col0 s
/Courier ff 210.00 scf sf
2625 3225 m
gs 1 -1 sc (a = b + c) col0 sh gr
/Courier ff 210.00 scf sf
2625 3450 m
gs 1 -1 sc (d = e + f) col0 sh gr
/Courier ff 210.00 scf sf
2625 3675 m
gs 1 -1 sc (g = h + j) col0 sh gr
/Courier ff 210.00 scf sf
2625 4200 m
gs 1 -1 sc (k = a * m) col0 sh gr
/Courier ff 210.00 scf sf
2625 4425 m
gs 1 -1 sc (n = d * p) col0 sh gr
/Courier ff 210.00 scf sf
2625 4650 m
gs 1 -1 sc (q = g * r) col0 sh gr
% Polyline
gs  clippath
5253 3870 m 5373 3900 l 5253 3930 l 5415 3930 l 5415 3870 l cp
clip
n 4200 3900 m 5400 3900 l gs col0 s gr gr

% arrowhead
n 5253 3870 m 5373 3900 l 5253 3930 l 5253 3900 l 5253 3870 l  cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs

%%EndDocument

 endTexFig
 641 1886 a Fv(Figure)32 b(3-1:)43 b(Example)32 b(graph)g(represen)m
(ting)i(pac)m(king)e(p)s(ossibilities.)150 2171 y(are)i(arc)m
(hitecture-dep)s(enden)m(t)j(and)e(not)f(p)s(ertinen)m(t)h(to)f(this)g
(discussion.)49 b(Also,)35 b(only)f(di\013eren)m(t)150
2352 y(statemen)m(t)42 b(com)m(binations)d(are)i(sho)m(wn.)71
b(In)41 b(realit)m(y)-8 b(,)43 b(all)c(p)s(erm)m(utations)h(are)h(p)s
(ossible.)69 b(This)150 2533 y(means)39 b(that)g(a)g(basic)g(blo)s(c)m
(k)g(with)g Fo(n)g Fv(isomorphic)e(statemen)m(ts)j(will)d(result)i(in)g
(a)f(graph)h(with)150 2713 y Fo(n)p Fv(!)p Fo(=)p Fv(\()p
Fo(n)20 b Fn(\000)h Fo(k)s Fv(\)!)32 b(no)s(des,)g(where)h
Fo(k)i Fv(is)c(the)h(n)m(um)m(b)s(er)g(of)f(op)s(erands)i(that)e(can)h
(b)s(e)g(accommo)s(dated)e(on)150 2894 y(a)i(giv)m(en)h(sup)s(erw)m
(ord)h(datapath.)296 3074 y(Cho)s(osing)g(the)h(set)g(of)f(no)s(des)h
(and)g(edges)h(with)e(the)h(greatest)g(sum)f(v)-5 b(alue)34
b(determines)h(the)150 3255 y(b)s(est)25 b(pac)m(king)g
(con\014guration.)41 b(If)24 b(the)i(sum)e(is)h(negativ)m(e,)h(the)g
(en)m(tire)f(basic)f(blo)s(c)m(k)h(should)g(b)s(e)g(left)150
3435 y(unparallelized.)52 b(Since)37 b(man)m(y)f(no)s(des)h(con)m(tain)
f(duplicate)f(statemen)m(ts,)j(care)f(m)m(ust)f(b)s(e)h(tak)m(en)150
3616 y(to)k(ensure)j(that)d(sa)m(vings)h(are)g(not)g(coun)m(ted)h(more)
e(than)h(once.)71 b(W)-8 b(e)42 b(mak)m(e)g(the)g(simplifying)150
3797 y(assumption)30 b(that)g(it)g(is)g(nev)m(er)i(pro\014table)e(to)g
(execute)j(an)m(y)e(statemen)m(t)g(t)m(wice.)43 b(Therefore,)33
b(the)150 3977 y(maximization)g(pro)s(cess)38 b(is)e(restricted)h(suc)m
(h)h(that)e(only)g(one)h(no)s(de)g(can)g(b)s(e)g(c)m(hosen)h(from)d(an)
m(y)150 4158 y(o)m(v)m(erlapping)d(group.)296 4338 y(The)j(example)d
(in)h(Figure)f(3-1)g(attempts)i(to)e(relate)h(the)h(size)f(and)h
(complexit)m(y)e(of)h(a)g(graph)150 4519 y(constructed)h(from)e(ev)m
(en)i(a)e(small)e(basic)j(blo)s(c)m(k.)43 b(The)34 b(problem)d(is)h(in)
m(tensi\014ed)h(when:)295 4807 y Fn(\017)49 b Fv(Statemen)m(ts)28
b(are)g(\015attened)g(in)m(to)f(three-address)i(form,)f(creating)f(an)g
(enormous)h(n)m(um)m(b)s(er)394 4988 y(of)k(statemen)m(ts)i(with)e
(common)f(op)s(erations.)295 5252 y Fn(\017)49 b Fv(Inner)24
b(lo)s(ops)f(are)h(unrolled)e(to)h(exp)s(ose)i(parallelism,)d
(increasing)h(the)h(size)g(of)f(basic)h(blo)s(c)m(ks.)1901
5649 y(17)p eop
%%Page: 18 18
18 17 bop 295 100 a Fn(\017)49 b Fv(Small)37 b(data)j(t)m(yp)s(es)h
(allo)m(w)d(a)i(large)f(n)m(um)m(b)s(er)h(of)g(statemen)m(ts)h(in)e(a)g
(pac)m(k)m(ed)j(group,)g(and)394 280 y(therefore)33 b(more)f(p)s
(ossible)g(statemen)m(t)h(p)s(erm)m(utations.)150 569
y(Under)g(these)h(circumstances,)g(the)f(resulting)e(graphs)i(b)s
(ecome)g(unmanageable.)150 993 y FA(3.2)161 b(0-1)53
b(In)l(teger)e(Linear)k(Programming)e(Solution)150 1272
y Fv(Giv)m(en)42 b(a)f(graph)h Fo(G)h Fv(=)g Fn(h)p Fo(V)5
b(;)17 b(E)6 b Fn(i)p Fv(,)43 b(as)f(describ)s(ed)h(in)e(the)h
(previous)g(section,)i(the)e(b)s(est)h(p)s(ossible)150
1453 y(sa)m(vings)33 b(can)g(b)s(e)g(calculated)e(using)i(0-1)e(in)m
(teger)i(linear)e(programming)e(as)k(follo)m(ws:)296
1633 y(F)-8 b(or)32 b(a)g(set)i(of)e(no)s(des:)780 1922
y Fo(v)827 1937 y Ft(1)866 1922 y Fo(;)17 b(:::;)g(v)1082
1937 y Fm(n)1157 1922 y Fn(2)28 b Fo(V)21 b Fv(,)33 b(with)f(asso)s
(ciated)h(sa)m(vings)g Fo(s)2459 1937 y Fm(v)2493 1946
y Fl(1)2532 1922 y Fo(;)17 b(:::;)g(s)2747 1937 y Fm(v)2781
1945 y Fk(n)2855 1922 y Fn(2)28 b Fo(I)8 b(nt)p Fv(,)296
2210 y(w)m(e)34 b(assign)e(a)h(corresp)s(onding)f(set)h(of)f(binary)h
(v)-5 b(ariables:)1586 2499 y Fo(x)1641 2514 y Ft(1)1681
2499 y Fo(;)17 b(:::;)g(x)1905 2514 y Fm(n)1979 2499
y Fn(2)28 b(f)p Fv(0)p Fo(;)17 b Fv(1)p Fn(g)296 2787
y Fv(F)-8 b(or)32 b(a)g(set)i(of)e(edges:)765 3076 y
Fo(e)810 3091 y Ft(1)850 3076 y Fo(;)17 b(:::;)g(e)1064
3091 y Fm(m)1158 3076 y Fn(2)28 b Fo(E)6 b Fv(,)33 b(with)f(asso)s
(ciated)h(sa)m(vings)g Fo(s)2460 3091 y Fm(e)2493 3100
y Fl(1)2531 3076 y Fo(;)17 b(:::;)g(s)2746 3091 y Fm(e)2779
3099 y Fk(m)2869 3076 y Fn(2)28 b Fo(I)8 b(nt)p Fv(,)296
3364 y(w)m(e)34 b(assign)e(a)h(corresp)s(onding)f(set)h(of)f(binary)h
(v)-5 b(ariables:)1584 3653 y Fo(y)1632 3668 y Ft(1)1671
3653 y Fo(;)17 b(:::;)g(y)1888 3668 y Fm(m)1981 3653
y Fn(2)28 b(f)p Fv(0)p Fo(;)17 b Fv(1)p Fn(g)296 3941
y Fv(The)34 b(ob)5 b(jectiv)m(e)33 b(function)g(is)f(then)h(giv)m(en)g
(b)m(y:)1183 4399 y Fo(maximiz)t(e)1636 4227 y Fj(0)1638
4377 y(@)1749 4291 y Fm(n)1711 4315 y Fj(X)1714 4498
y Fm(i)p Ft(=1)1847 4399 y Fo(s)1893 4414 y Fm(v)1927
4424 y Fk(i)1980 4399 y Fn(\001)22 b Fo(x)2085 4414 y
Fm(i)2136 4399 y Fv(+)2264 4291 y Fm(m)2235 4315 y Fj(X)2234
4498 y Fm(j)t Ft(=1)2373 4399 y Fo(s)2419 4414 y Fm(e)2452
4424 y Fk(j)2511 4399 y Fn(\001)f Fo(y)2608 4414 y Fm(j)2645
4227 y Fj(1)2645 4377 y(A)296 4750 y Fv(sub)5 b(ject)35
b(to)d(the)h(follo)m(wing)d(constrain)m(ts:)350 5038
y Fn(8)p Fo(v)452 5053 y Fm(i)480 5038 y Fo(;)17 b(v)571
5053 y Fm(j)635 5038 y Fn(2)28 b Fo(V)55 b Fv(where)33
b Fo(i)28 b Fn(6)p Fv(=)g Fo(j)38 b Fv(and)33 b Fo(v)1602
5053 y Fm(i)1630 5038 y Fo(;)17 b(v)1721 5053 y Fm(j)1790
5038 y Fv(share)34 b(a)e(common)f(statemen)m(t,)i(\()p
Fo(x)3090 5053 y Fm(i)3141 5038 y Fv(+)22 b Fo(x)3294
5053 y Fm(j)3358 5038 y Fn(\024)29 b Fv(1\))296 5327
y(and)1901 5649 y(18)p eop
%%Page: 19 19
19 18 bop 1163 111 1574 4 v 1161 190 4 79 v 1609 190
V 1626 190 V 1757 166 a Ft(T)-6 b(erms)22 b(in)h(the)p
2278 190 V 194 w(Num)n(b)r(er)f(of)p 2735 190 V 1161
269 V 1213 245 a(Benc)n(hmark)p 1609 269 V 1626 269 V
117 w(ob)t(jectiv)n(e)i(function)p 2278 269 V 102 w(Constrain)n(ts)p
2735 269 V 1163 272 1574 4 v 1163 289 V 1161 368 4 79
v 1213 344 a(swim)p 1609 368 V 1626 368 V 662 w(17,949)p
2278 368 V 226 w(752,574)p 2735 368 V 1163 371 1574 4
v 1161 450 4 79 v 1213 426 a(tomcatv)p 1609 450 V 1626
450 V 534 w(308,450)p 2278 450 V 226 w(820,102)p 2735
450 V 1163 453 1574 4 v 1161 532 4 79 v 1213 509 a(mgrid)p
1609 532 V 1626 532 V 765 w(20)p 2278 532 V 386 w(60)p
2735 532 V 1163 535 1574 4 v 1161 614 4 79 v 1213 591
a(su2cor)p 1609 614 V 1626 614 V 590 w(375,348)p 2278
614 V 101 w(347,234,016)p 2735 614 V 1163 618 1574 4
v 1161 697 4 79 v 1213 673 a(apsi)p 1609 697 V 1626 697
V 699 w(18,095)p 2278 697 V 226 w(754,996)p 2735 697
V 1163 700 1574 4 v 1161 779 4 79 v 1213 755 a(h)n(ydro2d)p
1609 779 V 1626 779 V 697 w(83)p 2278 779 V 296 w(1,136)p
2735 779 V 1163 782 1574 4 v 1161 861 4 79 v 1213 837
a(turb3d)p 1609 861 V 1626 861 V 579 w(191,420)p 2278
861 V 136 w(10,996,628)p 2735 861 V 1163 864 1574 4 v
1161 943 4 79 v 1213 919 a(applu)p 1609 943 V 1626 943
V 775 w(11)p 2278 943 V 386 w(52)p 2735 943 V 1163 946
1574 4 v 1163 963 V 150 1124 a Fv(T)-8 b(able)30 b(3.1:)42
b(Linear)29 b(programming)e(problem)i(size)h(for)f(the)i(most)e
(time-instensiv)m(e)g(basic)h(blo)s(c)m(k)150 1244 y(in)45
b(eac)m(h)i(SPEC95fp)g(b)s(enc)m(hmark.)84 b(Input)46
b(\014les)g(could)g(not)g(b)s(e)g(generated)g(for)g Fi(fpppp)h
Fv(and)150 1364 y Fi(wave5)p Fv(.)736 1726 y Fn(8)p Fo(e)836
1741 y Fm(k)907 1726 y Fn(2)28 b Fo(E)38 b Fv(where)c
Fo(e)1438 1741 y Fm(k)1513 1726 y Fv(connects)h Fo(v)1957
1741 y Fm(i)2017 1726 y Fv(and)e Fo(v)2254 1741 y Fm(j)2291
1726 y Fv(,)f(\()p Fo(x)2443 1741 y Fm(i)2494 1726 y
Fv(+)22 b Fo(x)2647 1741 y Fm(j)2706 1726 y Fn(\000)h
Fv(2)p Fo(y)2903 1741 y Fm(k)2972 1726 y Fn(\025)29 b
Fv(0\))296 1991 y(This)h(maximizes)d(the)j(sa)m(vings)g(obtained)f(b)m
(y)h(summing)e(the)i(v)-5 b(alues)29 b(asso)s(ciated)g(with)g(eac)m(h)
150 2172 y(c)m(hosen)48 b(no)s(de)e(and)h(edge.)85 b(A)47
b(no)s(de)f(or)g(edge)h(is)f Fu(chosen)53 b Fv(when)47
b(its)f(corresp)s(onding)g(binary)150 2352 y(v)-5 b(ariable)35
b(has)i(a)f(v)-5 b(alue)36 b(of)g(1)h(in)e(the)i(optimal)d(solution.)54
b(The)38 b(\014rst)f(set)g(of)f(constrain)m(ts)h(allo)m(ws)150
2533 y(only)j(one)g(no)s(de)g(to)g(b)s(e)g(c)m(hosen)i(from)c(a)i
(group)g(of)f(o)m(v)m(erlapping)h(no)s(des.)66 b(The)41
b(second)h(set)e(of)150 2713 y(constrain)m(ts)k(are)f(needed)h(to)f
(force)h(the)f(selection)g(of)g(t)m(w)m(o)g(no)s(des)h(when)h(the)e
(edge)h(b)s(et)m(w)m(een)150 2894 y(them)32 b(is)g(c)m(hosen.)150
3315 y FA(3.3)161 b(Analysis)150 3594 y Fv(W)-8 b(e)35
b(ev)-5 b(aluated)35 b(the)g(system)g(describ)s(ed)h(ab)s(o)m(v)m(e)g
(on)e(the)h(SPEC95fp)h(b)s(enc)m(hmark)f(suite.)50 b(T)-8
b(ests)150 3775 y(w)m(ere)26 b(run)g(using)e(the)i(CPLEX)g(linear)d
(programming)f(solv)m(er)j(running)g(on)g(a)f(4-pro)s(cessor)i(Alpha)
150 3955 y(4100)44 b(Cluster)i(with)e(2Gb)h(of)g(memory)-8
b(.)80 b(When)46 b(basic)f(blo)s(c)m(ks)g(w)m(ere)h(\015attened)g(in)m
(to)f(three-)150 4136 y(address)26 b(form,)g(our)e(system)i(w)m(as)g
(unable)f(to)f(generate)i(CPLEX)g(input)f(\014les)g(b)s(efore)g
(exhausting)150 4317 y(a)m(v)-5 b(ailable)30 b(memory)-8
b(.)44 b(Without)32 b(\015attening,)g(input)g(\014les)h(could)g(b)s(e)g
(generated)g(for)g(eigh)m(t)f(of)h(the)150 4497 y(ten)41
b(b)s(enc)m(hmarks.)69 b(T)-8 b(able)41 b(3.1)f(sho)m(ws)i(input)e
(\014le)h(sizes)g(for)f(the)h(most)f(time-in)m(tensiv)m(e)g(basic)150
4678 y(blo)s(c)m(ks.)296 4858 y(Of)32 b(these)h(eigh)m(t)f(b)s(enc)m
(hmarks,)i(only)d Fi(mgrid)p Fv(,)j Fi(hydro2d)g Fv(and)e
Fi(applu)i Fv(w)m(ere)f(solv)-5 b(able)31 b(within)150
5039 y(24)d(hours.)43 b(In)29 b(an)g(attempt)f(to)g(pro)s(duce)i
(results)f(for)f(the)h(remaining)d(b)s(enc)m(hmarks,)31
b(w)m(e)f(limited)150 5219 y(pac)m(king)j(c)m(hoices)h(to)f(sets)i(of)d
(eigh)m(t)h(statemen)m(ts.)47 b(Eac)m(h)34 b(statemen)m(t's)g(set)g(w)m
(as)g(determined)f(b)m(y)150 5400 y(its)e(p)s(osition)f(in)g(the)i
(original)c(basic)j(blo)s(c)m(k.)43 b(Adding)31 b(this)g(constrain)m(t)
h(forced)g(the)f(size)h(of)f(eac)m(h)1901 5649 y(19)p
eop
%%Page: 20 20
20 19 bop 1458 111 985 4 v 1456 190 4 79 v 1508 166 a
Ft(Benc)n(hmark)p 1904 190 V 1920 190 V 116 w(\045)23
b(Eliminated)p 2440 190 V 1458 193 985 4 v 1458 210 V
1456 289 4 79 v 1508 265 a(swim)p 1904 289 V 1920 289
V 506 w(64.23\045)p 2440 289 V 1458 292 985 4 v 1456
371 4 79 v 1508 347 a(tomcatv)p 1904 371 V 1920 371 V
413 w(61.06\045)p 2440 371 V 1458 374 985 4 v 1456 453
4 79 v 1508 430 a(mgrid)p 1904 453 V 1920 453 V 483 w(22.49\045)p
2440 453 V 1458 457 985 4 v 1456 535 4 79 v 1508 512
a(su2cor)p 1904 535 V 1920 535 V 469 w(35.91\045)p 2440
535 V 1458 539 985 4 v 1456 618 4 79 v 1508 594 a(w)n(a)n(v)n(e5)p
1904 618 V 1920 618 V 482 w(15.34\045)p 2440 618 V 1458
621 985 4 v 1456 700 4 79 v 1508 676 a(apsi)p 1904 700
V 1920 700 V 543 w(19.75\045)p 2440 700 V 1458 703 985
4 v 1456 782 4 79 v 1508 758 a(h)n(ydro2d)p 1904 782
V 1920 782 V 415 w(18.00\045)p 2440 782 V 1458 785 985
4 v 1456 864 4 79 v 1508 841 a(turb3d)p 1904 864 V 1920
864 V 458 w(14.82\045)p 2440 864 V 1458 868 985 4 v 1456
946 4 79 v 1508 923 a(applu)p 1904 946 V 1920 946 V 493
w(19.67\045)p 2440 946 V 1458 950 985 4 v 1458 966 V
150 1127 a Fv(T)-8 b(able)24 b(3.2:)39 b(P)m(ercen)m(tage)27
b(of)d(dynamic)f(instructions)i(eliminated)c(with)k(in)m(teger)f
(linear)f(program-)150 1247 y(ming)j(metho)s(ds)j(on)f(a)f(h)m(yp)s
(othetical)h(256-bit)e(sup)s(erw)m(ord)k(datapath.)42
b(It)28 b(is)f(assumed)i(that)f(four)150 1368 y(64-bit)j(\015oating)g
(p)s(oin)m(t)h(op)s(erations)g(can)g(b)s(e)h(executed)i(in)d(parallel.)
150 1761 y(problem)21 b(to)h(b)s(e)h(linearly)d(prop)s(ortional)g(to)i
(the)h(size)f(of)g(the)h(basic)f(blo)s(c)m(k.)40 b(With)22
b(this)g(restriction,)150 1941 y(w)m(e)k(w)m(ere)h(able)e(to)g
(generate)g(results)h(for)f(ev)m(ery)i(b)s(enc)m(hmark)f(except)h
Fi(fpppp)p Fv(.)42 b(T)-8 b(able)25 b(3.2)g(lists)g(the)150
2122 y(n)m(um)m(b)s(er)31 b(of)f(dynamic)f(instructions)h(eliminated)e
(from)h(eac)m(h)i(b)s(enc)m(hmark)g(assuming)f(a)g(256-bit)150
2302 y(datapath.)41 b(Results)28 b(w)m(ere)g(gathered)g(b)m(y)g
(instrumen)m(ting)e(source)i(co)s(de)f(with)g(coun)m(ters)h(in)f(order)
150 2483 y(to)e(determine)g(the)h(n)m(um)m(b)s(er)g(of)f(times)f(eac)m
(h)j(basic)e(blo)s(c)m(k)g(w)m(as)i(executed.)43 b(These)27
b(n)m(um)m(b)s(ers)g(w)m(ere)150 2663 y(then)33 b(m)m(ultiplied)d(b)m
(y)j(the)g(n)m(um)m(b)s(er)g(of)f(static)g(instructions)g(in)g(eac)m(h)
i(basic)e(blo)s(c)m(k.)296 2844 y(While)42 b(the)h(SLP)h(extraction)e
(metho)s(ds)h(presen)m(ted)i(in)d(this)g(c)m(hapter)i(pro)m(v)m(ed)g
(infeasible,)150 3025 y(our)33 b(results)h(allo)m(w)m(ed)e(us)i(to)f
(glean)g(three)g(high-lev)m(el)f(concepts.)47 b(First,)33
b(it)f(w)m(as)i(apparen)m(t)g(that)150 3205 y(sup)s(erw)m(ord)40
b(lev)m(el)f(parallelism)c(w)m(as)40 b(abundan)m(t)g(in)e(our)h(b)s
(enc)m(hmark)g(set,)j(w)m(e)e(simply)d(needed)150 3386
y(a)k(viable)e(metho)s(d)i(of)f(extracting)g(it.)68 b(Second,)44
b(statemen)m(t)d(pac)m(king)g(app)s(eared)g(to)g(b)s(e)g(more)150
3566 y(successful)49 b(when)g(p)s(erformed)e(on)g(three-address)i(form)
d(since)i(pac)m(king)g(could)f(b)s(e)g(done)h(at)150
3747 y(the)35 b(lev)m(el)g(of)f(sub)s(expressions.)52
b(Finally)-8 b(,)33 b(w)m(e)j(found)f(that)f(pac)m(k)m(ed)j(statemen)m
(ts)f(with)e(adjacen)m(t)150 3927 y(memory)28 b(references)j(had)e(the)
g(biggest)g(p)s(oten)m(tial)e(impact)g(on)i(p)s(erformance.)42
b(As)29 b(a)g(result,)h(the)150 4108 y(heuristic)j(solution)f(describ)s
(ed)i(in)f(the)h(next)g(c)m(hapter)h(b)s(egins)e(b)m(y)i(lo)s(cating)c
(adjacen)m(t)j(memory)150 4289 y(references.)1901 5649
y(20)p eop
%%Page: 21 21
21 20 bop 150 888 a Fs(Chapter)78 b(4)150 1428 y(SLP)f(Compiler)f
(Algorithm)150 1941 y Fv(This)39 b(c)m(hapter)i(describ)s(es)f(the)g
(core)f(algorithm)e(dev)m(elop)s(ed)j(for)f(extracting)g(sup)s(erw)m
(ord)h(lev)m(el)150 2121 y(parallelism)25 b(from)i(a)i(basic)g(blo)s(c)
m(k.)42 b(The)29 b(algorithm)d(can)j(b)s(e)g(neatly)g(divided)f(in)m
(to)g(four)g(phases:)150 2302 y Fu(adjac)-5 b(ent)33
b(memory)g(identi\014c)-5 b(ation)p Fv(,)30 b Fu(PackSet)40
b(extension)p Fv(,)31 b Fu(c)-5 b(ombination)37 b Fv(and)31
b Fu(sche)-5 b(duling)p Fv(.)42 b Fu(A)-5 b(d-)150 2482
y(jac)g(ent)42 b(memory)f(identi\014c)-5 b(ation)47 b
Fv(unco)m(v)m(ers)42 b(an)f(initial)36 b(set)41 b(of)f(pac)m(k)m(ed)i
(statemen)m(ts)f(with)f(ref-)150 2663 y(erences)i(to)d(adjacen)m(t)i
(memory)-8 b(.)65 b Fu(PackSet)48 b(extension)f Fv(then)40
b(constructs)i(new)f(groups)f(based)150 2844 y(on)j(this)g(initial)c
(seed.)77 b Fu(Combination)49 b Fv(merges)44 b(all)d(groups)i(in)m(to)g
(sizes)g(consisten)m(t)i(with)e(the)150 3024 y(sup)s(erw)m(ord)34
b(datapath)e(width.)43 b(Finally)-8 b(,)29 b Fu(sche)-5
b(duling)40 b Fv(replaces)33 b(groups)f(of)g(pac)m(k)m(ed)i(statemen)m
(ts)150 3205 y(with)e(new)i(SIMD)f(op)s(erations.)296
3385 y(In)i(the)f(discussion)h(of)f(our)g(algorithm,)d(w)m(e)36
b(assume)e(a)g(target)g(arc)m(hitecture)h(without)f(sup-)150
3566 y(p)s(ort)f(for)f(unaligned)g(memory)g(accesses.)48
b(In)33 b(general,)g(this)f(means)i(that)e(merging)g(op)s(erations)150
3746 y(m)m(ust)g(b)s(e)h(emitted)e(for)h(ev)m(ery)i(wide)f(load)e(and)h
(store.)44 b(These)34 b(op)s(erations)d(com)m(bine)h(data)g(from)150
3927 y(t)m(w)m(o)e(consecutiv)m(e)i(aligned)c(segmen)m(ts)j(of)f
(memory)e(in)i(order)f(to)h(sim)m(ulate)e(an)i(unaligned)f(mem-)150
4108 y(ory)47 b(access.)87 b(Alignmen)m(t)44 b(analysis)i(attempts)h
(to)f(sub)m(v)m(ert)i(this)e(added)i(cost)f(b)m(y)g(statically)150
4288 y(determining)28 b(the)i(address)h(alignmen)m(t)d(of)h(eac)m(h)i
(load)d(and)i(store)g(instruction.)42 b(When)31 b(success-)150
4469 y(ful,)e(w)m(e)i(can)e(tailor)e(pac)m(king)j(decisions)f(so)h
(that)f(memory)g(accesses)j(nev)m(er)f(span)f(an)f(alignmen)m(t)150
4649 y(b)s(oundary)-8 b(.)59 b(Alignmen)m(t)36 b(analysis)g(is)i
(describ)s(ed)g(in)f(Chapter)h(6.)58 b(F)-8 b(or)37 b(no)m(w,)i(w)m(e)g
(assume)f(that)150 4830 y(eac)m(h)30 b(load)d(and)i(store)g
(instruction)e(has)i(b)s(een)h(annotated)f(with)f(alignmen)m(t)e
(information)g(when)150 5010 y(p)s(ossible.)1901 5649
y(21)p eop
%%Page: 22 22
22 21 bop 150 100 a FA(4.1)161 b(Iden)l(tifying)53 b(Adjacen)l(t)g
(Memory)g(References)150 379 y Fv(Because)37 b(of)f(their)f(ob)m(vious)
h(impact,)f(statemen)m(ts)i(con)m(taining)e(adjacen)m(t)h(memory)f
(references)150 559 y(are)27 b(the)h(\014rst)g(candidates)g(for)f(pac)m
(king.)42 b(W)-8 b(e)28 b(therefore)g(b)s(egin)e(our)i(analysis)e(b)m
(y)j(scanning)e(eac)m(h)150 740 y(basic)39 b(blo)s(c)m(k)f(to)h(\014nd)
g(indep)s(enden)m(t)i(pairs)d(of)g(suc)m(h)j(statemen)m(ts.)63
b(Adjacency)41 b(is)d(determined)150 921 y(using)32 b(b)s(oth)h
(alignmen)m(t)d(information)f(and)k(arra)m(y)g(analysis.)296
1101 y(In)39 b(general,)g(duplicate)e(memory)h(op)s(erations)f(can)h
(in)m(tro)s(duce)h(sev)m(eral)f(di\013eren)m(t)h(pac)m(king)150
1282 y(p)s(ossibilities.)60 b(Dep)s(endences)41 b(will)c(eliminate)f
(man)m(y)j(of)g(these)h(p)s(ossibilities)d(and)i(redundan)m(t)150
1462 y(load)34 b(elimination)e(will)h(usually)h(remo)m(v)m(e)j(the)e
(rest.)53 b(In)36 b(practice,)g(nearly)g(ev)m(ery)h(memory)d(ref-)150
1643 y(erence)i(is)d(directly)h(adjacen)m(t)h(to)e(at)h(most)g(t)m(w)m
(o)g(other)h(references.)50 b(These)36 b(corresp)s(ond)f(to)f(the)150
1823 y(references)48 b(that)e(access)i(memory)d(on)h(either)g(side)g
(of)f(the)i(reference)g(in)f(question.)84 b(When)150
2004 y(lo)s(cated,)32 b(the)h(\014rst)g(o)s(ccurrence)h(of)e(eac)m(h)i
(pair)d(is)h(added)h(to)g(the)g Fu(PackSet)p Fv(.)150
2293 y Fr(De\014nition)j(4.1.1)49 b Fu(A)39 b(Pack)e(is)h(an)g
(n-tuple,)g Fn(h)p Fo(s)2004 2308 y Ft(1)2043 2293 y
Fo(;)17 b(:::;)g(s)2258 2308 y Fm(n)2305 2293 y Fn(i)p
Fu(,)38 b(wher)-5 b(e)38 b Fo(s)2737 2308 y Ft(1)2776
2293 y Fo(;)17 b(:::;)g(s)2991 2308 y Fm(n)3076 2293
y Fu(ar)-5 b(e)37 b(indep)-5 b(endent)150 2473 y(isomorphic)33
b(statements)i(in)g(a)f(b)-5 b(asic)34 b(blo)-5 b(ck.)150
2762 y Fr(De\014nition)36 b(4.1.2)49 b Fu(A)36 b(PackSet)e(is)h(a)f
(set)h(of)g(Packs.)296 3050 y Fv(In)28 b(this)g(phase)g(of)g(the)g
(algorithm,)e(only)h(groups)h(of)f(t)m(w)m(o)i(statemen)m(ts)f(are)g
(constructed.)44 b(W)-8 b(e)150 3231 y(refer)33 b(to)f(these)i(as)f
Fu(p)-5 b(airs)40 b Fv(with)32 b(a)g Fu(left)42 b Fv(and)33
b Fu(right)42 b Fv(elemen)m(t.)150 3519 y Fr(De\014nition)36
b(4.1.3)49 b Fu(A)28 b(Pair)e(is)h(a)g(Pack)f(of)h(size)f(two,)j(wher)
-5 b(e)26 b(the)h(\014rst)g(statement)g(is)f(c)-5 b(onsider)g(e)g(d)150
3700 y(the)35 b(left)g(element,)f(and)g(the)h(se)-5 b(c)g(ond)34
b(statement)h(is)f(c)-5 b(onsider)g(e)g(d)34 b(the)h(right)g(element.)
296 3988 y Fv(As)g(an)g(in)m(termediate)e(step,)j(statemen)m(ts)f(are)g
(allo)m(w)m(ed)f(to)g(b)s(elong)f(to)i(t)m(w)m(o)g(groups)f(as)h(long)
150 4169 y(as)e(they)h(o)s(ccup)m(y)g(a)f Fu(left)42
b Fv(p)s(osition)31 b(in)h(one)h(of)g(the)g(groups)g(and)g(a)g
Fu(right)42 b Fv(p)s(osition)31 b(in)h(the)i(other.)150
4349 y(Enforcing)40 b(this)f(discipline)g(here)i(allo)m(ws)e(the)h
Fu(c)-5 b(ombination)46 b Fv(phase)c(to)d(easily)h(merge)g(groups)150
4530 y(in)m(to)32 b(larger)f(clusters.)44 b(These)35
b(details)c(are)i(discussed)h(in)e(Section)g(4.3.)296
4711 y(Figure)38 b(4-1\(a\))f(presen)m(ts)k(an)d(example)g(sequence)j
(of)d(statemen)m(ts.)62 b(Figure)38 b(4-1\(b\))f(sho)m(ws)150
4891 y(the)d(results)f(of)g Fu(adjac)-5 b(ent)35 b(memory)g
(identi\014c)-5 b(ation)40 b Fv(in)32 b(whic)m(h)i(t)m(w)m(o)g(pairs)f
(ha)m(v)m(e)h(b)s(een)g(added)g(to)150 5072 y(the)f Fu(PackSet)p
Fv(.)43 b(The)34 b(pseudo)f(co)s(de)g(for)f(this)g(phase)i(is)e(sho)m
(wn)i(in)e(Figure)f(4-2)h(as)h Fh(\014nd)p 3344 5072
30 4 v 35 w(adj)p 3502 5072 V 34 w(refs)q Fv(.)1901 5649
y(22)p eop
%%Page: 23 23
23 22 bop 524 28 a
 22260533 34726428 0 0 37758730 59006238 startTexFig
 524 28 a
%%BeginDocument: figures/algorithm.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: algorithm.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Wed Apr 19 23:30:54 2000
%%For: slarsen@regulus (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 574 897
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-35.0 918.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 16300 m -1000 -1000 l 11137 -1000 l 11137 16300 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
 [60] 0 sd
n 600 5625 m 2250 5625 l 2250 6825 l 600 6825 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
750 6000 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
750 6285 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
750 6570 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
2700 8625 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
2700 8925 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
2700 7725 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
2700 8025 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
2700 6825 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
2700 7125 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
2700 6000 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
2700 6285 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
% Polyline
 [60] 0 sd
n 2550 5625 m 4800 5625 l 4800 9150 l 2550 9150 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
1725 14325 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
1725 14025 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
1725 13725 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
1725 13200 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
1725 12900 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
1725 12600 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
1725 12075 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
1725 11775 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
1725 11475 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
% Polyline
 [60] 0 sd
n 1575 11100 m 3825 11100 l 3825 14550 l 1575 14550 l cp gs col0 s gr  [] 0 sd
/Courier-Oblique ff 270.00 scf sf
2400 14925 m
gs 1 -1 sc (\(e\)) col0 sh gr
/Courier ff 210.00 scf sf
5550 2985 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
5550 2700 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
5550 2130 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
5550 1845 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
5550 1275 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
5550 990 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
% Polyline
 [60] 0 sd
n 5400 600 m 7575 600 l 7575 3225 l 5400 3225 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
8025 2025 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
8025 1725 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
8025 1260 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
8025 975 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
% Polyline
 [60] 0 sd
n 7875 600 m 10125 600 l 10125 2250 l 7875 2250 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
6750 5385 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6750 5100 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
6750 5925 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6750 6225 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
6750 7050 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
6750 6765 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
6750 7650 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
6750 7950 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
6750 8865 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
6750 8580 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
6750 9450 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
6750 9750 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
% Polyline
 [60] 0 sd
n 6600 4725 m 8850 4725 l 8850 9975 l 6600 9975 l cp gs col0 s gr  [] 0 sd
/Courier-Oblique ff 270.00 scf sf
7650 4650 m
gs 1 -1 sc (P) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
7425 10350 m
gs 1 -1 sc (\(d\)) col0 sh gr
/Courier ff 210.00 scf sf
1800 3255 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
1800 3540 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
1800 3825 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
1800 2115 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
1800 2400 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
1800 2685 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
1800 975 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
1800 1260 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
1800 1545 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
% Polyline
 [60] 0 sd
n 1650 600 m 3900 600 l 3900 4050 l 1650 4050 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6525 11100 m 9000 11100 l 9000 14925 l 6525 14925 l cp gs col0 s gr  [] 0 sd
% Polyline
n 6750 11325 m 7125 11325 l 7125 12300 l 6750 12300 l cp gs col0 s gr 
% Polyline
n 7575 13725 m 7950 13725 l 7950 14700 l 7575 14700 l cp gs col0 s gr 
% Polyline
n 6750 13725 m 7125 13725 l 7125 14700 l 6750 14700 l cp gs col0 s gr 
% Polyline
n 7575 12525 m 7950 12525 l 7950 13500 l 7575 13500 l cp gs col0 s gr 
% Polyline
n 6750 12525 m 7125 12525 l 7125 13500 l 6750 13500 l cp gs col0 s gr 
% Polyline
n 7575 11325 m 8475 11325 l 8475 12300 l 7575 12300 l cp gs col0 s gr 
% Polyline
n 8325 13725 m 8700 13725 l 8700 14700 l 8325 14700 l cp gs col0 s gr 
/Courier-Oblique ff 270.00 scf sf
3600 5550 m
gs 1 -1 sc (P) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
2475 9525 m
gs 1 -1 sc (\(c\)) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
9000 525 m
gs 1 -1 sc (P) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
7575 3675 m
gs 1 -1 sc (\(b\)) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
7500 15300 m
gs 1 -1 sc (\(f\)) col0 sh gr
/Courier ff 210.00 scf sf
6900 11625 m
gs 1 -1 sc (b     a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
6900 11865 m
gs 1 -1 sc (e  =  a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6900 12105 m
gs 1 -1 sc (h     a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
6900 14550 m
gs 1 -1 sc (k     h     j) col0 sh gr
/Courier ff 210.00 scf sf
6900 14085 m
gs 1 -1 sc (d     b     c) col0 sh gr
/Courier ff 210.00 scf sf
6900 14325 m
gs 1 -1 sc (g  =  e  +  f) col0 sh gr
/Courier ff 210.00 scf sf
6900 12810 m
gs 1 -1 sc (c     5) col0 sh gr
/Courier ff 210.00 scf sf
6900 13290 m
gs 1 -1 sc (j     7) col0 sh gr
/Courier ff 210.00 scf sf
6900 13050 m
gs 1 -1 sc (f  =  6) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
2475 4425 m
gs 1 -1 sc (\(a\)) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
2700 525 m
gs 1 -1 sc (U) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
6450 525 m
gs 1 -1 sc (U) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
1350 5550 m
gs 1 -1 sc (U) col0 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 150 4630 a Fv(Figure)44 b(4-1:)66 b(Example)45 b(of)f(SLP)h(analysis.)
79 b Fu(U)61 b Fv(and)45 b Fu(P)55 b Fv(represen)m(t)46
b(the)g(curren)m(t)f(set)h(of)e(un-)150 4751 y(pac)m(k)m(ed)36
b(and)e(pac)m(k)m(ed)i(statemen)m(ts,)g(resp)s(ectiv)m(ely)-8
b(.)49 b(\(a\))34 b(Initial)d(sequence)37 b(of)d(instructions.)48
b(\(b\))150 4871 y(Statemen)m(ts)39 b(with)g(adjacen)m(t)g(memory)f
(references)i(are)f(paired)f(and)h(added)g(to)f(the)h
Fu(PackSet)p Fv(.)150 4992 y(\(c\))c(The)g Fu(PackSet)44
b Fv(is)34 b(extended)j(b)m(y)e(follo)m(wing)d(def-use)k(c)m(hains)f
(of)f(existing)g(en)m(tries.)50 b(\(d\))35 b(The)150
5112 y Fu(PackSet)53 b Fv(is)44 b(further)h(extended)h(b)m(y)f(follo)m
(wing)c(use-def)46 b(c)m(hains.)78 b(\(e\))45 b Fu(Combination)50
b Fv(merges)150 5232 y(groups)35 b(con)m(taining)e(the)i(same)g
(expression.)51 b(\(f)7 b(\))34 b(Eac)m(h)i(group)e(is)h(sc)m(heduled)h
(as)f(a)f(new)i(SIMD)150 5353 y(op)s(eration.)1901 5649
y(23)p eop
%%Page: 24 24
24 23 bop 918 318 a Fg(SLP)p 1044 318 22 4 v 26 w(extract)q
Ft(:)31 b(BasicBlo)r(c)n(k)12 b Fm(B)23 b Ff(!)d Ft(BasicBlo)r(c)n(k)
1035 397 y(P)n(ac)n(kSet)26 b Fm(P)j Ff( )19 b(;)1035
476 y Fm(P)29 b Ff( )23 b Fg(\014nd)p 1317 476 V 27 w(adj)p
1433 476 V 25 w(refs)p Ft(\()p Fm(B)s(;)12 b(P)e Ft(\))1035
554 y Fm(P)29 b Ff( )23 b Fg(extend)p 1399 554 V 27 w(packlist)p
Ft(\()p Fm(B)s(;)14 b(P)c Ft(\))1035 633 y Fm(P)29 b
Ff( )23 b Fg(combine)p 1450 633 V 27 w(packs)p Ft(\()p
Fm(P)10 b Ft(\))1035 712 y Fe(return)23 b Fg(schedule)p
Ft(\()p Fm(B)s(;)15 b Ft([)k(])p Fm(;)11 b(P)f Ft(\))918
1028 y Fg(\014nd)p 1032 1028 V 26 w(adj)p 1147 1028 V
25 w(refs)p Ft(:)31 b(BasicBlo)r(c)n(k)13 b Fm(B)19 b
Ff(\002)c Ft(P)n(ac)n(kSet)f Fm(P)30 b Ff(!)19 b Ft(P)n(ac)n(kSet)1035
1107 y Fe(foreac)n(h)k Ft(Stm)n(t)g Fm(s)c Ff(2)h Fm(B)27
b Fe(do)1114 1185 y(foreac)n(h)22 b Ft(Stm)n(t)i Fm(s)1600
1162 y Fd(0)1641 1185 y Ff(2)c Fm(B)27 b Fe(where)d Fm(s)19
b Ff(6)p Ft(=)g Fm(s)2183 1162 y Fd(0)2229 1185 y Fe(do)1192
1264 y(if)k Fg(has)p 1364 1264 V 26 w(mem)p 1535 1264
V 24 w(ref)p Ft(\()p Fm(s)p Ft(\))h Ff(^)f Fg(has)p 1914
1264 V 26 w(mem)p 2085 1264 V 24 w(ref)p Ft(\()p Fm(s)2242
1241 y Fd(0)2264 1264 y Ft(\))h Fe(then)1270 1343 y(if)f
Fg(adjacent)p Ft(\()p Fm(s;)14 b(s)1714 1320 y Fd(0)1736
1343 y Ft(\))23 b Fe(then)1349 1422 y Ft(In)n(t)h Fm(al)q(ig)r(n)c
Ff( )j Fg(get)p 1833 1422 V 27 w(alignment)p Ft(\()p
Fm(s)p Ft(\))1349 1501 y Fe(if)g Fg(stmts)p 1585 1501
V 25 w(can)p 1711 1501 V 26 w(pack)p Ft(\()p Fm(B)s(;)14
b(P)r(;)d(s;)g(s)2160 1477 y Fd(0)2182 1501 y Fm(;)g(al)q(ig)r(n)p
Ft(\))24 b Fe(then)1427 1580 y Fm(P)29 b Ff( )20 b Fm(P)25
b Ff([)15 b(fh)p Fm(s;)d(s)1884 1556 y Fd(0)1906 1580
y Ff(i)q(g)1035 1659 y Fe(return)23 b Fm(P)918 1974 y
Fg(extend)p 1114 1974 V 27 w(packlist)q Ft(:)31 b(BasicBlo)r(c)n(k)12
b Fm(B)20 b Ff(\002)15 b Ft(P)n(ac)n(kSet)f Fm(P)29 b
Ff(!)19 b Ft(P)n(ac)n(kSet)1035 2053 y Fe(rep)r(eat)1114
2132 y Ft(P)n(ac)n(kSet)14 b Fm(P)1417 2140 y Fk(pr)r(ev)1565
2132 y Ff( )19 b Fm(P)1114 2211 y Fe(foreac)n(h)j Ft(P)n(ac)n(k)j
Fm(p)19 b Ff(2)g Fm(P)34 b Fe(do)1192 2290 y Fm(P)29
b Ff( )23 b Fg(follo)n(w)p 1536 2290 V 26 w(use)p 1656
2290 V 26 w(defs)p Ft(\()p Fm(B)s(;)13 b(P)r(;)e(p)p
Ft(\))1192 2368 y Fm(P)29 b Ff( )23 b Fg(follo)n(w)p
1536 2368 V 26 w(def)p 1651 2368 V 25 w(uses)p Ft(\()p
Fm(B)s(;)14 b(P)r(;)d(p)p Ft(\))1035 2447 y Fe(un)n(til)23
b Fm(P)29 b Ff(\021)19 b Fm(P)1417 2455 y Fk(pr)r(ev)1035
2526 y Fe(return)k Fm(P)918 2842 y Fg(combine)p 1165
2842 V 26 w(packs)q Ft(:)31 b(P)n(ac)n(kSet)14 b Fm(P)29
b Ff(!)19 b Ft(P)n(ac)n(kSet)1035 2921 y Fe(rep)r(eat)1114
2999 y Ft(P)n(ac)n(kSet)14 b Fm(P)1417 3007 y Fk(pr)r(ev)1565
2999 y Ff( )19 b Fm(P)1114 3078 y Fe(foreac)n(h)j Ft(P)n(ac)n(k)j
Fm(p)19 b Ft(=)g Ff(h)p Fm(s)1753 3087 y Fl(1)1788 3078
y Fm(;)11 b(:::;)f(s)1942 3086 y Fk(n)1985 3078 y Ff(i)20
b(2)f Fm(P)33 b Fe(do)1192 3157 y(foreac)n(h)23 b Ft(P)n(ac)n(k)h
Fm(p)1678 3134 y Fd(0)1720 3157 y Ft(=)19 b Ff(h)p Fm(s)1854
3134 y Fd(0)1854 3179 y Fl(1)1889 3157 y Fm(;)11 b(:::;)f(s)2043
3134 y Fd(0)2043 3174 y Fk(m)2102 3157 y Ff(i)20 b(2)f
Fm(P)33 b Fe(do)1270 3236 y(if)23 b Fm(s)1374 3244 y
Fk(n)1436 3236 y Ff(\021)d Fm(s)1544 3213 y Fd(0)1544
3258 y Fl(1)1601 3236 y Fe(then)1349 3315 y Fm(P)29 b
Ff( )19 b Fm(P)25 b Ff(\000)16 b(f)p Fm(p;)11 b(p)1792
3291 y Fd(0)1814 3315 y Ff(g)16 b([)g(fh)p Fm(s)2023
3324 y Fl(1)2058 3315 y Fm(;)11 b(:::;)f(s)2212 3323
y Fk(n)2254 3315 y Fm(;)i(s)2319 3291 y Fd(0)2319 3337
y Fl(2)2353 3315 y Fm(;)f(:::;)f(s)2507 3291 y Fd(0)2507
3332 y Fk(m)2566 3315 y Ff(ig)1035 3394 y Fe(un)n(til)23
b Fm(P)29 b Ff(\021)19 b Fm(P)1417 3402 y Fk(pr)r(ev)1035
3473 y Fe(return)k Fm(P)918 3788 y Fg(schedule)r Ft(:)31
b(BasicBlo)r(c)n(k)12 b Fm(B)19 b Ff(\002)d Ft(BasicBlo)r(c)n(k)d
Fm(B)2114 3765 y Fd(0)2152 3788 y Ff(\002)j Ft(P)n(ac)n(kSet)e
Fm(P)29 b Ff(!)19 b Ft(BasicBlo)r(c)n(k)1035 3867 y Fe(for)k
Fm(i)c Ff( )h Ft(0)j Fe(to)g Ff(j)p Fm(B)s Ff(j)h Fe(do)1114
3946 y(if)f Ff(9)p Fm(p)c Ft(=)g Ff(h)p Fm(:::;)11 b(s)1504
3956 y Fk(i)1530 3946 y Fm(;)g(:::)p Ff(i)19 b(2)h Fm(P)33
b Fe(then)1192 4025 y(if)23 b Ff(8)p Fm(s)18 b Ff(2)i
Fm(p:)j Fg(deps)p 1634 4025 V 26 w(scheduled)p Ft(\()p
Fm(s;)15 b(B)2088 4001 y Fd(0)2110 4025 y Ft(\))24 b
Fe(then)1270 4104 y(foreac)n(h)f Ft(Stm)n(t)g Fm(s)d
Ff(2)f Fm(p)k Fe(do)1349 4182 y Fm(B)g Ff( )c Fm(B)g
Ff(\000)d Fm(s)1349 4261 y(B)1405 4238 y Fd(0)1447 4261
y Ff( )j Fm(B)1593 4238 y Fd(0)1632 4261 y Ff(\001)c
Fm(s)1270 4340 y Fe(return)23 b Fg(schedule)p Ft(\()p
Fm(B)s(;)15 b(B)1939 4317 y Fd(0)1962 4340 y Fm(;)c(P)f
Ft(\))1114 4419 y Fe(else)23 b(if)g Fg(deps)p 1471 4419
V 27 w(scheduled)p Ft(\()p Fm(s)1835 4429 y Fk(i)1864
4419 y Fm(;)12 b(B)1952 4396 y Fd(0)1974 4419 y Ft(\))24
b Fe(then)1192 4498 y(return)f Fg(schedule)p Ft(\()p
Fm(B)f Ff(\000)16 b Fm(s)1893 4508 y Fk(i)1919 4498 y
Fm(;)11 b(B)2006 4475 y Fd(0)2044 4498 y Ff(\001)16 b
Fm(s)2113 4508 y Fk(i)2139 4498 y Fm(;)11 b(P)f Ft(\))1035
4577 y Fe(if)23 b Ff(j)p Fm(B)s Ff(j)c(6)p Ft(=)h(0)k
Fe(then)1114 4656 y Fm(P)29 b Ff( )19 b Fm(P)25 b Ff(\000)16
b(f)p Fm(p)p Ff(g)23 b Fe(where)h Fm(p)19 b Ft(=)k Fg(\014rst)p
Ft(\()p Fm(B)s(;)13 b(P)d Ft(\))1114 4735 y Fe(return)23
b Fg(schedule)p Ft(\()p Fm(B)s(;)14 b(B)1782 4711 y Fd(0)1805
4735 y Fm(;)d(P)f Ft(\))1035 4813 y Fe(return)23 b Fm(B)1341
4790 y Fd(0)150 5106 y Fv(Figure)i(4-2:)39 b(Pseudo)27
b(co)s(de)f(for)f(the)i(SLP)f(extraction)g(algorithm.)38
b(Help)s(er)25 b(functions)h(are)g(listed)150 5226 y(in)32
b(Figure)f(4-3)1901 5649 y(24)p eop
%%Page: 25 25
25 24 bop 650 345 a Fg(stmts)p 815 345 22 4 v 26 w(can)p
942 345 V 26 w(pack)q Ft(:)31 b(BasicBlo)r(c)n(k)12 b
Fm(B)20 b Ff(\002)15 b Ft(P)n(ac)n(kSet)f Fm(P)25 b Ff(\002)16
b Ft(Stm)n(t)c Fm(s)j Ff(\002)h Ft(Stm)n(t)c Fm(s)2520
322 y Fd(0)2557 345 y Ff(\002)k Ft(In)n(t)d Fm(al)q(ig)r(n)20
b Ff(!)f Ft(Bo)r(olean)768 424 y Fe(if)k Fg(isomo)n(rphic)p
Ft(\()p Fm(s;)12 b(s)1277 401 y Fd(0)1299 424 y Ft(\))24
b Fe(then)846 503 y(if)f Fg(indep)r(endent)p Ft(\()p
Fm(s;)16 b(s)1399 479 y Fd(0)1421 503 y Ft(\))24 b Fe(then)925
582 y(if)f Ff(8h)p Fm(t;)11 b(t)1144 558 y Fd(0)1167
582 y Ff(i)20 b(2)g Fm(P)r(:t)f Ff(6)p Ft(=)g Fm(s)24
b Fe(then)1003 661 y(if)f Ff(8h)p Fm(t;)11 b(t)1222 637
y Fd(0)1245 661 y Ff(i)20 b(2)g Fm(P)r(:t)1451 637 y
Fd(0)1493 661 y Ff(6)p Ft(=)f Fm(s)1600 637 y Fd(0)1646
661 y Fe(then)1081 739 y Ft(In)n(t)25 b Fm(al)q(ig)r(n)1357
747 y Fk(s)1410 739 y Ff( )e Fg(get)p 1599 739 V 27 w(alignment)p
Ft(\()p Fm(s)p Ft(\))1081 818 y(In)n(t)i Fm(al)q(ig)r(n)1357
832 y Fk(s)1386 818 y Fc(0)j Ff( )c Fg(get)p 1622 818
V 26 w(alignment)p Ft(\()p Fm(s)1992 795 y Fd(0)2015
818 y Ft(\))1081 897 y Fe(if)f Fm(al)q(ig)r(n)1314 905
y Fk(s)1367 897 y Ff(\021)d(>)14 b(_)i Fm(al)q(ig)r(n)1737
905 y Fk(s)1790 897 y Ff(\021)k Fm(al)q(ig)r(n)j Fe(then)1160
976 y(if)g Fm(al)q(ig)r(n)1393 990 y Fk(s)1422 976 y
Fc(0)28 b Ff(\021)20 b(>)14 b(_)i Fm(al)q(ig)r(n)1838
990 y Fk(s)1867 976 y Fc(0)28 b Ff(\021)20 b Fm(al)q(ig)r(n)p
Ft(+)p Fg(data)p 2338 976 V 26 w(size)p Ft(\()p Fm(s)2526
953 y Fd(0)2549 976 y Ft(\))j Fe(then)1238 1055 y(return)g
Ft(true)768 1134 y Fe(return)g Ft(false)650 1528 y Fg(follo)n(w)p
827 1528 V 27 w(use)p 947 1528 V 26 w(defs)p Ft(:)31
b(BasicBlo)r(c)n(k)13 b Fm(B)19 b Ff(\002)c Ft(P)n(ac)n(kSet)f
Fm(P)26 b Ff(\002)15 b Ft(P)n(ac)n(k)e Fm(p)19 b Ff(!)g
Ft(P)n(ac)n(kSet)925 1607 y Fe(where)k Fm(p)c Ft(=)h
Ff(h)p Fm(s;)11 b(s)1414 1584 y Fd(0)1436 1607 y Ff(i)q
Fm(;)23 b(s)c Ft(=)h([)11 b Fb(x)1700 1615 y Fa(0)1751
1607 y Ft(:=)19 b Fb(f)p Ft(\()p Fb(x)1942 1615 y Fa(1)1973
1607 y Fm(;)12 b(:::;)e Fb(x)2130 1615 y Fa(m)2161 1607
y Ft(\))i(])p Fm(;)23 b(s)2296 1584 y Fd(0)2338 1607
y Ft(=)c([)12 b Fb(x)2479 1584 y Fd(0)2479 1627 y Fa(0)2529
1607 y Ft(:=)19 b Fb(f)p Ft(\()p Fb(x)2720 1584 y Fd(0)2720
1627 y Fa(1)2752 1607 y Fm(;)11 b(:::;)f Fb(x)2908 1584
y Fd(0)2908 1624 y Fa(m)2939 1607 y Ft(\))j(])768 1686
y(In)n(t)24 b Fm(al)q(ig)r(n)c Ff( )j Fg(get)p 1252 1686
V 27 w(alignment)p Ft(\()p Fm(s)p Ft(\))768 1765 y Fe(for)f
Fm(j)27 b Ff( )c Ft(1)h Fe(to)f Fm(m)h Fe(do)846 1844
y(if)f Ff(9)p Fm(t)d Ff(2)g Fm(B)s(:t)g Ft(=)g([)11 b
Fb(x)1330 1852 y Fa(j)1381 1844 y Ft(:=)19 b Fm(:::)11
b Ft(])k Ff(^)h(9)p Fm(t)1708 1820 y Fd(0)1750 1844 y
Ff(2)k Fm(B)s(:t)1918 1820 y Fd(0)1961 1844 y Ft(=)f([)12
b Fb(x)2102 1820 y Fd(0)2102 1864 y Fa(j)2152 1844 y
Ft(:=)19 b Fm(:::)11 b Ft(])23 b Fe(then)925 1930 y(if)g
Fg(stmts)p 1161 1930 V 25 w(can)p 1287 1930 V 26 w(pack)p
Ft(\()p Fm(B)s(;)14 b(P)r(;)d(t;)h(t)1721 1907 y Fd(0)1743
1930 y Fm(;)g(al)q(ig)r(n)p Ft(\))1003 2009 y Fe(if)23
b Fg(est)p 1161 2009 V 26 w(savings)h Ft(\()p Ff(h)p
Fm(t;)13 b(t)1553 1986 y Fd(0)1575 2009 y Ff(i)q Fm(;)e(P)f
Ft(\))20 b Ff(\025)f Ft(0)24 b Fe(then)1081 2088 y Fm(P)30
b Ff( )19 b Fm(P)25 b Ff([)16 b(fh)p Fm(t;)c(t)1523 2065
y Fd(0)1546 2088 y Ff(i)q(g)1081 2167 y Fg(set)p 1168
2167 V 27 w(alignment)p Ft(\()p Fm(s;)g(s)1604 2143 y
Fd(0)1626 2167 y Fm(;)f(al)q(ig)r(n)p Ft(\))768 2246
y Fe(return)23 b Fm(P)650 2640 y Fg(follo)n(w)p 827 2640
V 27 w(def)p 947 2640 V 30 w(uses)q Ft(:)31 b(BasicBlo)r(c)n(k)13
b Fm(B)19 b Ff(\002)c Ft(P)n(ac)n(kSet)f Fm(P)26 b Ff(\002)15
b Ft(P)n(ac)n(k)e Fm(p)19 b Ff(!)g Ft(P)n(ac)n(kSet)925
2719 y Fe(where)k Fm(p)c Ft(=)h Ff(h)p Fm(s;)11 b(s)1414
2695 y Fd(0)1436 2719 y Ff(i)q Fm(;)23 b(s)c Ft(=)h([)11
b Fb(x)1700 2727 y Fa(0)1751 2719 y Ft(:=)19 b Fb(f)p
Ft(\()p Fb(x)1942 2727 y Fa(1)1973 2719 y Fm(;)12 b(:::;)e
Fb(x)2130 2727 y Fa(m)2161 2719 y Ft(\))i(])p Fm(;)23
b(s)2296 2695 y Fd(0)2338 2719 y Ft(=)c([)12 b Fb(x)2479
2695 y Fd(0)2479 2739 y Fa(0)2529 2719 y Ft(:=)19 b Fb(f)p
Ft(\()p Fb(x)2720 2695 y Fd(0)2720 2739 y Fa(1)2752 2719
y Fm(;)11 b(:::;)f Fb(x)2908 2695 y Fd(0)2908 2736 y
Fa(m)2939 2719 y Ft(\))j(])768 2798 y(In)n(t)24 b Fm(al)q(ig)r(n)c
Ff( )j Fg(get)p 1252 2798 V 27 w(alignment)p Ft(\()p
Fm(s)p Ft(\))768 2877 y(In)n(t)h Fm(sav)r(ing)r(s)c Ff( )f(\000)p
Ft(1)768 2956 y Fe(foreac)n(h)j Ft(Stm)n(t)i Fm(t)c Ff(2)g
Fm(B)27 b Fe(where)c Fm(t)d Ft(=)g([)11 b Fm(:::)19 b
Ft(:=)g Fb(g)p Ft(\()p Fm(:::;)11 b Fb(x)2160 2964 y
Fa(0)2191 2956 y Fm(;)g(:::)p Ft(\))g(])23 b Fe(do)846
3034 y(foreac)n(h)g Ft(Stm)n(t)g Fm(t)1324 3011 y Fd(0)1367
3034 y Ff(2)c Fm(B)27 b Fe(where)d Fm(t)c Ff(6)p Ft(=)g
Fm(t)1894 3011 y Fd(0)1936 3034 y Ft(=)g([)11 b Fm(:::)19
b Ft(:=)g Fb(h)p Ft(\()p Fm(:::;)11 b Fb(x)2403 3011
y Fd(0)2403 3055 y Fa(0)2433 3034 y Fm(;)h(:::)p Ft(\))f(])23
b Fe(do)925 3113 y(if)g Fg(stmts)p 1161 3113 V 25 w(can)p
1287 3113 V 26 w(pack)p Ft(\()p Fm(B)s(;)14 b(P)r(;)d(t;)h(t)1721
3090 y Fd(0)1743 3113 y Fm(;)g(al)q(ig)r(n)p Ft(\))24
b Fe(then)1003 3192 y(if)f Fg(est)p 1161 3192 V 26 w(savings)p
Ft(\()p Ff(h)p Fm(t;)13 b(t)1529 3169 y Fd(0)1552 3192
y Ff(i)p Fm(;)f(P)e Ft(\))19 b Fm(>)h(sav)r(ing)r(s)k
Fe(then)1081 3271 y Fm(sav)r(ing)r(s)c Ff( )j Fg(est)p
1524 3271 V 27 w(savings)p Ft(\()p Ff(h)p Fm(t;)12 b(t)1892
3248 y Fd(0)1915 3271 y Ff(i)q Fm(;)f(P)f Ft(\))1081
3350 y(Stm)n(t)24 b Fm(u)19 b Ff( )g Fm(t)1081 3429 y
Ft(Stm)n(t)24 b Fm(u)1297 3405 y Fd(0)1339 3429 y Ff( )19
b Fm(t)1454 3405 y Fd(0)768 3508 y Fe(if)k Fm(sav)r(ing)r(s)d
Ff(\025)f Ft(0)24 b Fe(then)846 3587 y Fm(P)29 b Ff( )19
b Fm(P)26 b Ff([)15 b(fh)p Fm(u;)d(u)1319 3563 y Fd(0)1342
3587 y Ff(ig)846 3665 y Fg(set)p 933 3665 V 26 w(alignment)p
Ft(\()p Fm(u;)h(u)1385 3642 y Fd(0)1407 3665 y Ft(\))768
3744 y Fe(return)23 b Fm(P)150 4115 y Fv(Figure)38 b(4-3:)56
b(Pseudo)41 b(co)s(de)e(for)g(the)h(SLP)g(extraction)f(help)s(er)g
(functions.)63 b(Only)39 b(k)m(ey)i(pro)s(ce-)150 4236
y(dures)34 b(are)g(sho)m(wn.)47 b(Omitted)32 b(functions)h(include:)44
b(1\))33 b Fh(has)p 2358 4236 30 4 v 36 w(mem)p 2591
4236 V 35 w(ref)p Fv(,)h(whic)m(h)g(returns)g(true)g(if)e(a)150
4356 y(statemen)m(t)25 b(accesses)j(memory)-8 b(,)25
b(2\))g Fh(adjacent)p Fv(,)h(whic)m(h)g(c)m(hec)m(ks)h(adjacency)f(b)s
(et)m(w)m(een)h(t)m(w)m(o)f(memory)150 4476 y(references,)37
b(3\))d Fh(get)p 881 4476 V 35 w(alignment)p Fv(,)h(whic)m(h)g(retriev)
m(es)g(alignmen)m(t)d(information,)g(4\))i Fh(set)p 3296
4476 V 36 w(alignment)p Fv(,)150 4597 y(whic)m(h)d(sets)g(alignmen)m(t)
d(information)e(when)32 b(it)d(is)g(not)h(already)f(set,)j(5\))d
Fh(deps)p 3025 4597 V 36 w(scheduled)p Fv(,)j(whic)m(h)150
4717 y(returns)j(true)g(when,)h(for)e(a)g(giv)m(en)g(statemen)m(t,)h
(all)e(statemen)m(ts)i(up)s(on)f(whic)m(h)h(it)e(is)h(dep)s(enden)m(t)
150 4838 y(ha)m(v)m(e)g(b)s(een)f(sc)m(heduled,)h(6\))e
Fh(\014rst)p Fv(,)h(whic)m(h)g(returns)g(the)g Fu(PackSet)41
b Fv(mem)m(b)s(er)32 b(con)m(taining)f(the)h(ear-)150
4958 y(liest)c(unsc)m(heduled)j(statemen)m(t,)f(7\))e
Fh(est)p 1613 4958 V 36 w(savings)p Fv(,)i(whic)m(h)f(estimates)f(the)i
(sa)m(vings)f(of)f(a)h(p)s(oten)m(tial)150 5078 y(group,)42
b(8\))d Fh(isomo)m(rphic)p Fv(,)k(whic)m(h)d(c)m(hec)m(ks)j(for)c
(statemen)m(t)i(isomorphism,)e(and)h(9\))g Fh(indep)s(endent)p
Fv(,)150 5199 y(whic)m(h)33 b(returns)h(true)f(when)g(t)m(w)m(o)h
(statemen)m(ts)f(are)g(indep)s(enden)m(t.)1901 5649 y(25)p
eop
%%Page: 26 26
26 25 bop 150 100 a FA(4.2)161 b(Extending)52 b(the)h(P)l(ac)l(kSet)150
379 y Fv(Once)43 b(the)h Fu(PackSet)51 b Fv(has)43 b(b)s(een)h(seeded)g
(with)f(an)f(initial)d(set)44 b(of)e(pac)m(k)m(ed)i(statemen)m(ts,)j
(more)150 559 y(groups)33 b(can)g(b)s(e)f(added)i(b)m(y)f(\014nding)f
(new)i(candidates)f(that)f(can)h(either:)295 848 y Fn(\017)49
b Fv(Pro)s(duce)33 b(needed)h(source)g(op)s(erands)f(in)f(pac)m(k)m(ed)
i(form,)e(or)295 1112 y Fn(\017)49 b Fv(Use)33 b(existing)f(pac)m(k)m
(ed)j(data)d(as)h(source)g(op)s(erands.)296 1400 y(This)j(is)g
(accomplished)f(b)m(y)i(follo)m(wing)c(def-use)k(and)f(use-def)g(c)m
(hains)h(of)e(existing)g Fu(PackSet)150 1581 y Fv(en)m(tries.)77
b(If)43 b(these)i(c)m(hains)f(lead)e(to)h(fresh)i(pac)m(k)-5
b(able)43 b(statemen)m(ts,)k(a)c(new)i(group)e(is)g(created)150
1761 y(and)37 b(added)g(to)g(the)g Fu(PackSet)p Fv(.)55
b(F)-8 b(or)36 b(t)m(w)m(o)i(statemen)m(ts)f(to)g(b)s(e)g(pac)m(k)-5
b(able,)37 b(they)h(m)m(ust)f(meet)g(the)150 1942 y(follo)m(wing)30
b(criteria:)295 2230 y Fn(\017)49 b Fv(The)33 b(statemen)m(ts)h(are)f
(isomorphic.)295 2494 y Fn(\017)49 b Fv(The)33 b(statemen)m(ts)h(are)f
(indep)s(enden)m(t.)295 2757 y Fn(\017)49 b Fv(The)33
b(left)f(statemen)m(t)h(is)f(not)h(already)f(pac)m(k)m(ed)i(in)e(a)g
Fu(left)42 b Fv(p)s(osition.)295 3021 y Fn(\017)49 b
Fv(The)33 b(righ)m(t)f(statemen)m(t)h(is)f(not)h(already)f(pac)m(k)m
(ed)i(in)e(a)g Fu(right)42 b Fv(p)s(osition.)295 3285
y Fn(\017)49 b Fv(Alignmen)m(t)31 b(information)e(is)j(consisten)m(t.)
295 3548 y Fn(\017)49 b Fv(Execution)39 b(time)e(of)g(the)i(new)g
(parallel)d(op)s(eration)h(is)h(estimated)f(to)h(b)s(e)h(less)f(than)h
(the)394 3729 y(sequen)m(tial)33 b(v)m(ersion.)296 4017
y(The)h(analysis)f(computes)g(an)g(estimated)g(sp)s(eedup)i(of)d(eac)m
(h)i(p)s(oten)m(tial)e(SIMD)h(instruction)150 4198 y(based)41
b(on)e(a)h(cost)g(mo)s(del)e(for)h(eac)m(h)i(instruction)e(added)h(and)
g(remo)m(v)m(ed.)66 b(This)40 b(includes)f(an)m(y)150
4378 y(pac)m(king)23 b(or)g(unpac)m(king)g(that)g(m)m(ust)g(b)s(e)g(p)s
(erformed)f(in)g(conjunction)h(with)g(the)g(new)h(instruction.)150
4559 y(If)33 b(the)g(prop)s(er)f(pac)m(k)m(ed)j(op)s(erand)e(data)f
(already)g(exist)h(in)f(the)h Fu(PackSet)p Fv(,)f(then)i(pac)m(king)e
(cost)h(is)150 4740 y(set)g(to)g(zero.)296 4920 y(As)43
b(new)f(groups)h(are)e(added)i(to)e(the)i Fu(PackSet)p
Fv(,)g(alignmen)m(t)d(information)f(is)i(propagated)150
5101 y(from)29 b(existing)h(groups)h(via)e(use-def)i(or)f(def-use)i(c)m
(hains.)43 b(Once)31 b(set,)g(a)g(statemen)m(t's)g(alignmen)m(t)150
5281 y(determines)e(whic)m(h)f(p)s(osition)f(it)g(will)f(o)s(ccup)m(y)k
(in)e(the)h(datapath)f(during)f(its)h(computation.)41
b(F)-8 b(or)1901 5649 y(26)p eop
%%Page: 27 27
27 26 bop 1274 0 a
 10419816 8127451 0 0 12366970 9735700 startTexFig

 doclip
 1274 0 a
%%BeginDocument: figures/def-use.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: def-use.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Apr 25 03:32:23 2000
%%For: slarsen@chocura (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 188 148
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-142.0 218.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Courier /Courier-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 4630 m -1000 -1000 l 6493 -1000 l 6493 4630 l cp clip
 0.06000 0.06000 sc
% Arc
7.500 slw
gs  clippath
2890 2148 m 2976 2235 l 2859 2199 l 2997 2283 l 3028 2232 l cp
clip
n 3187.5 1800.0 487.5 -112.6 112.6 arcn
gs col0 s gr
 gr

% arrowhead
n 2890 2148 m 2976 2235 l 2859 2199 l 2874 2174 l 2890 2148 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
5013 2492 m 4897 2534 l 4979 2442 l 4846 2534 l 4880 2583 l cp
clip
n 4631.2 2062.5 545.0 -63.4 63.4 arc
gs col0 s gr
 gr

% arrowhead
n 5013 2492 m 4897 2534 l 4979 2442 l 4996 2467 l 5013 2492 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
5014 3469 m 4897 3510 l 4981 3419 l 4846 3508 l 4879 3558 l cp
clip
n 4275.0 2475.0 1209.3 -60.3 60.3 arc
gs col0 s gr
 gr

% arrowhead
n 5014 3469 m 4897 3510 l 4981 3419 l 4998 3444 l 5014 3469 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
2894 3194 m 2977 3285 l 2861 3244 l 2996 3333 l 3029 3283 l cp
clip
n 3600.0 2250.0 1209.3 -119.7 119.7 arcn
gs col0 s gr
 gr

% arrowhead
n 2894 3194 m 2977 3285 l 2861 3244 l 2877 3219 l 2894 3194 l  cp gs 0.00 setgray ef gr  col0 s
/Courier-iso ff 210.00 scf sf
3000 1350 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier-iso ff 210.00 scf sf
3000 1590 m
gs 1 -1 sc (\(2\)  c = a[i+1]) col0 sh gr
/Courier-iso ff 210.00 scf sf
3000 2370 m
gs 1 -1 sc (\(3\)  d = b - e) col0 sh gr
/Courier-iso ff 210.00 scf sf
3000 2610 m
gs 1 -1 sc (\(4\)  f = c - g) col0 sh gr
/Courier-iso ff 210.00 scf sf
3000 3390 m
gs 1 -1 sc (\(5\)  h = b - j) col0 sh gr
/Courier-iso ff 210.00 scf sf
3000 3630 m
gs 1 -1 sc (\(6\)  k = c - m) col0 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 150 1233 a Fv(Figure)32 b(4-4:)44 b(Multiple)32 b(pac)m(king)h(p)s
(ossibilites)f(resulting)g(from)g(man)m(y)h(uses)i(of)e(a)g(single)f
(de\014ni-)150 1353 y(tion.)150 1619 y(this)j(reason,)h(a)f(statemen)m
(t)g(can)g(ha)m(v)m(e)i(only)d(one)i(alignmen)m(t.)48
b(New)36 b(groups)g(are)f(created)g(only)150 1800 y(if)c(their)h
(alignmen)m(t)f(requiremen)m(ts)i(are)g(consisten)m(t)h(with)e(those)h
(already)f(in)g(place.)296 1980 y(When)25 b(de\014nitions)f(ha)m(v)m(e)
i(m)m(ultiple)c(uses,)27 b(there)e(is)f(the)g(p)s(oten)m(tial)f(for)h
(man)m(y)g(di\013eren)m(t)g(pac)m(k-)150 2161 y(ing)h(p)s
(ossibilities.)38 b(An)27 b(example)e(of)h(this)f(scenario)h(is)g(sho)m
(wn)h(in)f(Figure)e(4-4.)41 b(Here,)28 b(statemen)m(ts)150
2341 y(\(1\))g(and)g(\(2\))f(w)m(ould)h(b)s(e)g(added)h(to)e(the)i
Fu(PackSet)37 b Fv(after)27 b Fu(adjac)-5 b(ent)30 b(memory)g
(identi\014c)-5 b(ation)p Fv(.)41 b(F)-8 b(ol-)150 2522
y(lo)m(wing)42 b(def-use)i(c)m(hains)g(from)e(these)j(t)m(w)m(o)f
(statemen)m(ts)h(leads)e(to)g(sev)m(eral)h(di\013eren)m(t)g(pac)m(king)
150 2702 y(p)s(ossibilities:)39 b Fn(h)p Fv(\(3\))p Fo(;)17
b Fv(\(4\))p Fn(i)p Fv(,)28 b Fn(h)p Fv(\(5\))p Fo(;)17
b Fv(\(6\))p Fn(i)p Fv(,)28 b Fn(h)p Fv(\(3\))p Fo(;)17
b Fv(\(6\))p Fn(i)p Fv(,)28 b(and)h Fn(h)p Fv(\(5\))p
Fo(;)17 b Fv(\(4\))p Fn(i)p Fv(.)41 b(When)30 b(this)e(situation)g
(arises,)150 2883 y(the)35 b(cost)f(mo)s(del)f(is)h(used)h(to)f
(estimate)f(the)i(most)f(pro\014table)f(p)s(ossibilities)f(based)j(on)f
(what)g(is)150 3064 y(curren)m(tly)e(pac)m(k)m(ed.)45
b(These)33 b(groups)e(are)h(added)g(to)e(the)i Fu(PackSet)40
b Fv(in)31 b(order)g(of)g(their)g(estimated)150 3244
y(pro\014tabilit)m(y)g(as)h(long)g(as)g(there)i(are)e(no)h(con\015icts)
g(with)f(existing)g Fu(PackSet)41 b Fv(en)m(tries.)296
3425 y(In)j(the)g(example)f(of)g(Figure)g(4-1,)i(part)e(\(c\))h(sho)m
(ws)h(new)f(groups)g(that)g(are)f(added)h(after)150 3605
y(follo)m(wing)29 b(def-use)j(c)m(hains)g(of)e(the)i(t)m(w)m(o)g
(existing)f Fu(PackSet)40 b Fv(en)m(tries.)k(P)m(art)32
b(\(d\))f(in)m(tro)s(duces)h(new)150 3786 y(groups)26
b(disco)m(v)m(ered)i(b)m(y)f(follo)m(wing)c(use-def)k(c)m(hains.)41
b(The)27 b(pseudo)g(co)s(de)g(for)e(this)h(phase)g(is)g(listed)150
3967 y(as)33 b Fh(extend)p 542 3967 30 4 v 36 w(packset)g
Fv(in)f(Figure)g(4-2.)150 4391 y FA(4.3)161 b(Com)l(bination)150
4670 y Fv(Once)33 b(all)c(pro\014table)j(pairs)f(ha)m(v)m(e)i(b)s(een)g
(c)m(hosen,)h(they)f(can)f(b)s(e)g(com)m(bined)g(in)m(to)f(larger)g
(groups.)150 4850 y(Tw)m(o)h(groups)g(can)g(b)s(e)f(com)m(bined)h(when)
g(the)g Fu(left)41 b Fv(statemen)m(t)32 b(of)f(one)g(is)g(the)h(same)g
(as)f(the)h Fu(right)150 5031 y Fv(statemen)m(t)41 b(of)g(the)g(other.)
68 b(In)42 b(fact,)g(groups)g(m)m(ust)e(b)s(e)i(com)m(bined)e(in)g
(this)h(fashion)f(in)g(order)150 5212 y(to)33 b(prev)m(en)m(t)i(a)e
(statemen)m(t)h(from)e(app)s(earing)g(in)h(more)g(than)g(one)g(group)h
(in)e(the)i(\014nal)e Fu(PackSet)p Fv(.)150 5392 y(This)40
b(pro)s(cess,)i(pro)m(vided)e(b)m(y)h(the)f Fh(combine)p
1822 5392 V 35 w(packs)h Fv(routine,)g(c)m(hec)m(ks)h(all)37
b(groups)j(against)f(one)1901 5649 y(27)p eop
%%Page: 28 28
28 27 bop 734 0 a
 18945146 8714762 0 0 22563143 10525081 startTexFig

 doclip
 734 0 a
%%BeginDocument: figures/cycle.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cycle.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Tue Apr 25 02:06:23 2000
%%For: slarsen@chocura (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 343 160
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-36.0 222.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 4687 m -1000 -1000 l 7312 -1000 l 7312 4687 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 4050 1050 m 6300 1050 l 6300 1950 l 4050 1950 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
4200 1350 m
gs 1 -1 sc (x = a[i+0] + k1) col0 sh gr
/Courier ff 210.00 scf sf
4200 1575 m
gs 1 -1 sc (y = a[i+1] + k2) col0 sh gr
/Courier ff 210.00 scf sf
4200 1800 m
gs 1 -1 sc (z = a[i+2] + s) col0 sh gr
% Polyline
n 4050 2775 m 6300 2775 l 6300 3675 l 4050 3675 l cp gs col0 s gr 
/Courier ff 210.00 scf sf
4200 3075 m
gs 1 -1 sc (q = b[i+0] + y) col0 sh gr
/Courier ff 210.00 scf sf
4200 3300 m
gs 1 -1 sc (q = b[i+0] + y) col0 sh gr
/Courier ff 210.00 scf sf
4200 3525 m
gs 1 -1 sc (s = b[i+2] + k4) col0 sh gr
% Arc
gs  clippath
4534 2680 m 4626 2762 l 4506 2733 l 4649 2809 l 4677 2755 l cp
clip
n 4781.2 2362.5 432.9 107.7 -107.7 arc
gs col0 s gr
 gr

% arrowhead
n 4534 2680 m 4626 2762 l 4506 2733 l 4520 2707 l 4534 2680 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
5892 2044 m 5798 1962 l 5919 1991 l 5776 1916 l 5748 1970 l cp
clip
n 5644.0 2363.0 433.3 -72.4 72.4 arc
gs col0 s gr
 gr

% arrowhead
n 5892 2044 m 5798 1962 l 5919 1991 l 5905 2018 l 5892 2044 l  cp gs 0.00 setgray ef gr  col0 s
/Courier ff 210.00 scf sf
600 1575 m
gs 1 -1 sc (x = a[i+0] + k1) col0 sh gr
/Courier ff 210.00 scf sf
600 1815 m
gs 1 -1 sc (y = a[i+1] + k2) col0 sh gr
/Courier ff 210.00 scf sf
600 2295 m
gs 1 -1 sc (q = b[i+0] + y) col0 sh gr
/Courier ff 210.00 scf sf
600 2535 m
gs 1 -1 sc (r = b[i+1] + k3) col0 sh gr
/Courier ff 210.00 scf sf
600 2775 m
gs 1 -1 sc (s = b[i+2] + k4) col0 sh gr
/Courier ff 210.00 scf sf
600 3255 m
gs 1 -1 sc (z = a[i+2] + s) col0 sh gr
% Polyline
gs  clippath
3528 2370 m 3648 2400 l 3528 2430 l 3690 2430 l 3690 2370 l cp
clip
n 2925 2400 m 3675 2400 l gs col0 s gr gr

% arrowhead
n 3528 2370 m 3648 2400 l 3528 2430 l 3528 2400 l 3528 2370 l  cp gs 0.00 setgray ef gr  col0 s
$F2psEnd
rs

%%EndDocument

 endTexFig
 330 1307 a Fv(Figure)32 b(4-5:)42 b(Example)32 b(of)g(a)h(dep)s
(endence)i(b)s(et)m(w)m(een)f(groups)f(of)f(pac)m(k)m(ed)j(statemen)m
(ts.)150 1592 y(another)k(and)f(rep)s(eats)h(un)m(til)f(all)e(p)s
(ossible)i(com)m(binations)f(ha)m(v)m(e)i(b)s(een)h(made.)60
b(Figure)38 b(4-1\(e\))150 1773 y(sho)m(ws)c(the)f(result)g(of)f(our)g
(example)g(after)h(com)m(bination.)296 1954 y(Since)46
b Fu(adjac)-5 b(ent)46 b(memory)g(identi\014c)-5 b(ation)52
b Fv(uses)47 b(alignmen)m(t)d(information,)i(it)e(will)f(nev)m(er)150
2134 y(create)32 b(pairs)f(of)g(memory)f(accesses)k(that)e(cross)g(an)f
(alignmen)m(t)f(b)s(oundary)-8 b(.)43 b(All)30 b(pac)m(k)m(ed)j(state-)
150 2315 y(men)m(ts)46 b(are)f(aligned)f(based)j(on)e(this)g(initial)d
(seed.)83 b(As)46 b(a)f(result,)k Fu(c)-5 b(ombination)51
b Fv(will)43 b(nev)m(er)150 2495 y(pro)s(duce)35 b(a)e(group)h(that)g
(spans)h(an)f(alignmen)m(t)e(b)s(oundary)-8 b(.)48 b(Com)m(bined)34
b(groups)g(are)g(therefore)150 2676 y(guaran)m(teed)f(to)g(b)s(e)f
(less)h(than)g(or)f(equal)g(to)h(the)g(sup)s(erw)m(ord)h(datapath)e
(size.)150 3100 y FA(4.4)161 b(Sc)l(heduling)150 3379
y Fv(Dep)s(endence)39 b(analysis)e(b)s(efore)h(pac)m(king)f(ensures)i
(that)f(statemen)m(ts)g(within)f(a)g(group)g(can)h(b)s(e)150
3560 y(executed)i(safely)d(in)g(parallel.)56 b(Ho)m(w)m(ev)m(er,)41
b(it)36 b(ma)m(y)i(b)s(e)f(the)h(case)h(that)e(executing)h(t)m(w)m(o)h
(groups)150 3740 y(pro)s(duces)e(a)f(dep)s(endence)j(violation.)51
b(An)36 b(example)g(of)g(this)f(is)h(sho)m(wn)i(in)d(Figure)g(4-5.)53
b(Here,)150 3921 y(dep)s(endence)30 b(edges)f(are)f(dra)m(wn)g(b)s(et)m
(w)m(een)i(groups)e(if)f(a)g(statemen)m(t)h(in)f(one)h(group)g(is)f
(dep)s(enden)m(t)150 4102 y(on)48 b(a)f(statemen)m(t)i(in)e(the)h
(other.)89 b(As)49 b(long)d(as)i(there)h(are)e(no)h(cycles)h(in)e(this)
h(dep)s(endence)150 4282 y(graph,)38 b(all)e(groups)h(can)h(b)s(e)f(sc)
m(heduled)i(suc)m(h)g(that)e(no)g(violations)e(o)s(ccur.)58
b(Ho)m(w)m(ev)m(er,)40 b(a)d(cycle)150 4463 y(indicates)c(that)h(the)g
(set)h(of)e(c)m(hosen)i(groups)f(is)g(in)m(v)-5 b(alid)31
b(and)j(at)g(least)f(one)h(group)g(will)d(need)k(to)150
4643 y(b)s(e)29 b(eliminated.)39 b(Although)28 b(exp)s(erimen)m(tal)f
(data)h(has)h(sho)m(wn)h(this)e(case)h(to)g(b)s(e)f(extremely)h(rare,)
150 4824 y(care)k(m)m(ust)g(b)s(e)f(tak)m(en)i(to)e(ensure)i
(correctness.)296 5004 y(The)c(sc)m(heduling)g(phase)g(b)s(egins)f(b)m
(y)h(sc)m(heduling)g(statemen)m(ts)g(based)g(on)f(their)g(order)g(in)g
(the)150 5185 y(original)g(basic)j(blo)s(c)m(k.)44 b(Eac)m(h)33
b(statemen)m(t)g(is)f(sc)m(heduled)i(as)e(so)s(on)h(as)f(all)f
(statemen)m(ts)i(on)f(whic)m(h)150 5366 y(it)g(is)g(dep)s(enden)m(t)i
(ha)m(v)m(e)g(b)s(een)f(sc)m(heduled.)45 b(F)-8 b(or)32
b(groups)h(of)f(pac)m(k)m(ed)i(statemen)m(ts,)g(this)e(prop)s(ert)m(y)
1901 5649 y(28)p eop
%%Page: 29 29
29 28 bop 150 100 a Fv(m)m(ust)35 b(b)s(e)h(satis\014ed)f(for)g(eac)m
(h)h(statemen)m(t)g(in)e(the)i(group.)51 b(If)35 b(sc)m(heduling)g(is)g
(ev)m(er)i(inhibited)c(b)m(y)150 280 y(the)40 b(presence)i(of)d(a)h
(cycle,)i(the)e(group)g(con)m(taining)e(the)j(earliest)d(unsc)m
(heduled)k(statemen)m(t)e(is)150 461 y(split)31 b(apart.)43
b(Sc)m(heduling)33 b(con)m(tin)m(ues)h(un)m(til)d(all)f(statemen)m(ts)k
(ha)m(v)m(e)g(b)s(een)f(sc)m(heduled.)296 641 y(Whenev)m(er)51
b(a)d(group)f(of)h(pac)m(k)m(ed)i(statemen)m(ts)f(is)f(sc)m(heduled,)53
b(a)48 b(new)h(SIMD)f(op)s(eration)150 822 y(is)d(emitted)f(instead.)80
b(If)45 b(this)g(new)h(op)s(eration)e(requires)h(op)s(erand)g(pac)m
(king)g(or)g(resh)m(u\017ing,)150 1002 y(the)j(necessary)j(op)s
(erations)c(are)g(sc)m(heduled)j(\014rst.)90 b(Similarly)-8
b(,)48 b(if)e(an)m(y)j(statemen)m(ts)g(require)150 1183
y(unpac)m(king)f(of)g(their)f(source)i(data,)j(the)c(required)g(steps)i
(are)d(tak)m(en.)91 b(Since)48 b(our)g(analysis)150 1364
y(op)s(erates)37 b(at)f(the)h(lev)m(el)f(of)g(basic)h(blo)s(c)m(ks,)h
(it)d(is)h(assumed)i(that)e(all)e(data)j(are)f(unpac)m(k)m(ed)j(up)s
(on)150 1544 y(en)m(try)31 b(to)f(the)h(blo)s(c)m(k.)43
b(F)-8 b(or)29 b(this)h(reason,)i(all)c(v)-5 b(ariables)29
b(that)h(are)g(liv)m(e)g(on)g(exit)g(are)h(unpac)m(k)m(ed)h(at)150
1725 y(the)h(end)g(of)f(eac)m(h)i(basic)e(blo)s(c)m(k.)296
1905 y(Sc)m(heduling)38 b(is)f(pro)m(vided)i(b)m(y)f(the)h
Fh(schedule)g Fv(routine)e(in)g(Figure)g(4-2.)59 b(In)38
b(the)g(example)f(of)150 2086 y(Figure)g(4-1,)i(the)g(result)f(of)g(sc)
m(heduling)g(is)g(sho)m(wn)i(in)d(part)i(\(f)7 b(\).)60
b(A)m(t)38 b(the)h(completion)d(of)i(this)150 2267 y(phase,)27
b(a)e(new)h(basic)e(blo)s(c)m(k)h(has)g(b)s(een)h(constructed)g(wherev)
m(er)h(parallelization)20 b(w)m(as)26 b(successful.)150
2447 y(These)43 b(blo)s(c)m(ks)e(con)m(tain)f(SIMD)h(instructions)g(in)
f(place)h(of)f(pac)m(k)m(ed)j(isomorphic)c(statemen)m(ts.)150
2628 y(As)f(w)m(e)h(will)c(sho)m(w)j(in)f(Chapter)h(7,)h(the)f
(algorithm)c(can)k(b)s(e)g(used)g(to)g(ac)m(hiev)m(e)g(sp)s(eedups)i
(on)d(a)150 2808 y(micropro)s(cessor)32 b(with)g(m)m(ultimedia)d
(extensions.)1901 5649 y(29)p eop
%%Page: 30 30
30 29 bop 150 888 a Fs(Chapter)78 b(5)150 1428 y(A)f(Simple)f(V)-19
b(ectorizing)77 b(Compiler)150 1941 y Fv(The)43 b(SLP)g(concepts)h
(presen)m(ted)h(in)c(Chapter)j(4)e(lead)g(to)g(an)g(elegan)m(t)g
(implemen)m(tation)d(of)j(a)150 2121 y(v)m(ectorizing)30
b(compiler.)41 b(V)-8 b(ector)30 b(parallelism)d(is)j(c)m(haracterized)
h(b)m(y)g(the)g(execution)g(of)e(m)m(ultiple)150 2302
y(iterations)35 b(of)g(an)i(instruction)e(using)h(a)g(single)f(v)m
(ector)i(op)s(eration.)53 b(This)36 b(same)g(computation)150
2482 y(can)42 b(b)s(e)f(unco)m(v)m(ered)j(with)d(unrolling)e(b)m(y)j
(limiting)37 b(pac)m(king)k(decisions)h(to)f(unrolled)f(v)m(ersions)150
2663 y(of)f(the)i(same)e(statemen)m(t.)66 b(With)39 b(this)h(tec)m
(hnique,)j(eac)m(h)e(statemen)m(t)f(has)g(only)g(one)g(p)s(ossible)150
2844 y(grouping,)e(whic)m(h)g(means)g(that)f(no)h(searc)m(hing)g(is)f
(required.)60 b(Instead,)40 b(ev)m(ery)f(statemen)m(t)g(can)150
3024 y(b)s(e)e(pac)m(k)m(ed)i(automatically)34 b(with)j(its)f(siblings)
g(if)f(they)j(are)g(found)f(to)f(b)s(e)i(indep)s(enden)m(t.)58
b(The)150 3205 y(pro\014tabilit)m(y)35 b(of)j(eac)m(h)g(group)f(can)h
(then)g(b)s(e)g(ev)-5 b(aluated)37 b(in)g(the)h(con)m(text)h(of)e(the)h
(en)m(tire)f(set)h(of)150 3385 y(pac)m(k)m(ed)i(data.)62
b(An)m(y)39 b(groups)g(that)g(are)f(deemed)i(unpro\014table)e(can)h(b)s
(e)g(dropp)s(ed)g(in)f(fa)m(v)m(or)g(of)150 3566 y(their)29
b(sequen)m(tial)h(coun)m(terparts.)44 b(The)31 b(pseudo)g(co)s(de)f
(for)g(the)g(v)m(ector)h(extraction)f(algorithm)c(is)150
3746 y(sho)m(wn)37 b(in)e(Figure)f(5-1.)52 b(The)36 b
Fh(schedule)h Fv(routine)e(is)g(omitted)f(since)i(it)f(is)g(iden)m
(tical)f(to)h(the)h(one)150 3927 y(sho)m(wn)e(in)e(Figure)f(4-2.)296
4108 y(While)i(not)g(as)h(aggressiv)m(e)g(as)f(the)h(SLP)g(algorithm,)d
(this)i(tec)m(hnique)i(shares)f(man)m(y)g(of)f(the)150
4288 y(same)38 b(desirable)g(prop)s(erties.)61 b(First,)38
b(the)h(analysis)f(itself)f(is)h(extremely)g(simple)f(and)h(robust.)150
4469 y(Second,)54 b(partially)45 b(v)m(ectorizable)k(lo)s(ops)e(can)i
(b)s(e)g(parallelized)d(without)i(complicated)e(lo)s(op)150
4649 y(transformations.)61 b(Most)39 b(imp)s(ortan)m(tly)-8
b(,)38 b(this)h(analysis)f(is)g(able)g(to)h(ac)m(hiev)m(e)h(go)s(o)s(d)
e(results)h(on)150 4830 y(scien)m(ti\014c)33 b(and)g(m)m(ultimedia)c(b)
s(enc)m(hmarks.)296 5010 y(The)46 b(dra)m(wbac)m(k)h(to)e(this)g(metho)
s(d)g(is)f(that)h(it)f(ma)m(y)h(not)g(b)s(e)h(applicable)d(to)i(long)f
(v)m(ector)150 5191 y(arc)m(hitectures.)e(Since)23 b(the)h(unroll)e
(factor)h(m)m(ust)g(b)s(e)h(consisten)m(t)h(with)e(the)g(v)m(ector)i
(size,)h(unrolling)150 5372 y(ma)m(y)38 b(pro)s(duce)h(basic)f(blo)s(c)
m(ks)h(that)f(o)m(v)m(erwhelm)h(the)f(analysis)g(and)g(the)h(co)s(de)g
(generator.)60 b(As)1901 5649 y(30)p eop
%%Page: 31 31
31 30 bop 1148 1046 a Fg(vecto)n(r)p 1330 1046 22 4 v
28 w(pa)n(rallelize)p Ft(:)31 b(BasicBlo)r(c)n(k)12 b
Fm(B)23 b Ff(!)c Ft(BasicBlo)r(c)n(k)1266 1125 y(P)n(ac)n(kSet)14
b Fm(P)29 b Ff( )19 b(;)1266 1204 y Fm(P)29 b Ff( )23
b Fg(\014nd)p 1548 1204 V 26 w(all)p 1642 1204 V 25 w(packs)p
Ft(\()p Fm(B)s(;)14 b(P)c Ft(\))1266 1283 y Fm(P)29 b
Ff( )23 b Fg(eliminate)p 1703 1283 V 25 w(unp)n(ro\014table)p
2074 1283 V 28 w(packs)p Ft(\()p Fm(P)10 b Ft(\))1266
1362 y Fe(return)23 b Fg(schedule)p Ft(\()p Fm(B)s(;)14
b Ft([)20 b(])p Fm(;)11 b(P)f Ft(\))1148 1677 y Fg(\014nd)p
1262 1677 V 26 w(all)p 1356 1677 V 25 w(packs)q Ft(:)31
b(BasicBlo)r(c)n(k)13 b Fm(B)19 b Ff(\002)d Ft(P)n(ac)n(kSet)e
Fm(P)29 b Ff(!)19 b Ft(P)n(ac)n(kSet)1266 1756 y Fe(foreac)n(h)j
Ft(Stm)n(t)i Fm(s)19 b Ff(2)h Fm(B)27 b Fe(do)1344 1835
y(if)c Ff(8)p Fm(p)18 b Ff(2)i Fm(P)r(:s)26 b(=)-42 b
Ff(2)19 b Fm(p)k Fe(then)1423 1914 y Ft(P)n(ac)n(k)h
Fm(p)19 b Ff( )g Ft([)p Fm(s)p Ft(])1423 1993 y Fe(foreac)n(h)j
Ft(Stm)n(t)i Fm(s)1909 1969 y Fd(0)1950 1993 y Ff(2)c
Fm(B)27 b Fe(where)d Fm(s)2366 1969 y Fd(0)2407 1993
y Ff(6)p Ft(=)c Fm(s)j Fe(do)1501 2072 y(if)g Fg(stmts)p
1737 2072 V 25 w(a)n(re)p 1849 2072 V 26 w(pack)n(able)p
Ft(\()p Fm(s;)13 b(s)2248 2048 y Fd(0)2270 2072 y Ft(\))24
b Fe(then)1579 2151 y Fm(p)19 b Ff( )h Fm(p)15 b Ff(\001)g
Fm(s)1844 2127 y Fd(0)1423 2229 y Fe(if)23 b Ff(j)p Fm(p)p
Ff(j)18 b Fm(>)h Ft(1)24 b Fe(then)1501 2308 y Fm(P)29
b Ff( )19 b Fm(P)25 b Ff([)16 b(f)p Fm(p)p Ff(g)1266
2387 y Fe(return)23 b Fm(P)1148 2703 y Fg(stmts)p 1313
2703 V 26 w(a)n(re)p 1426 2703 V 25 w(pack)n(able)r Ft(:)31
b(Stm)n(t)12 b Fm(s)j Ff(\002)h Ft(Stm)n(t)c Fm(s)2229
2679 y Fd(0)2271 2703 y Ff(!)19 b Ft(Bo)r(olean)1266
2781 y Fe(if)k Fg(same)p 1490 2781 V 24 w(o)n(rig)p 1623
2781 V 26 w(stmt)p Ft(\()p Fm(s;)12 b(s)1904 2758 y Fd(0)1926
2781 y Ft(\))24 b Fe(then)1344 2860 y(if)f Fg(indep)r(endent)p
Ft(\()p Fm(s;)16 b(s)1897 2837 y Fd(0)1919 2860 y Ft(\))24
b Fe(then)1423 2939 y(return)f Ft(true)1266 3018 y Fe(return)g
Ft(false)1148 3334 y Fg(eliminate)p 1417 3334 V 26 w(unp)n(ro\014table)
p 1789 3334 V 28 w(packs)q Ft(:)31 b(P)n(ac)n(kSet)14
b Fm(P)29 b Ff(!)19 b Ft(P)n(ac)n(kSet)1266 3412 y Fe(rep)r(eat)1344
3491 y Ft(P)n(ac)n(kSet)14 b Fm(P)1657 3468 y Fd(0)1699
3491 y Ff( )19 b Fm(P)1344 3570 y Fe(foreac)n(h)k Ft(P)n(ac)n(k)h
Fm(p)19 b Ff(2)h Fm(P)33 b Fe(do)1423 3649 y(if)23 b
Fg(est)p 1581 3649 V 26 w(savings)p Ft(\()p Fm(p;)11
b(P)f Ft(\))20 b Fm(<)f Ft(0)24 b Fe(then)1501 3728 y
Fm(P)29 b Ff( )19 b Fm(P)25 b Ff(\000)16 b(f)p Fm(p)p
Ff(g)1266 3807 y Fe(un)n(til)22 b Fm(P)29 b Ff(\021)20
b Fm(P)1658 3783 y Fd(0)1266 3886 y Fe(return)j Fm(P)150
4257 y Fv(Figure)41 b(5-1:)61 b(Pseudo)43 b(co)s(de)f(for)f(the)h(v)m
(ector)h(extraction)f(algorithm.)68 b(Pro)s(cedures)43
b(that)f(are)150 4377 y(iden)m(tical)34 b(to)i(those)h(in)e(Figures)g
(4-2)g(and)i(4-3)e(are)h(omitted.)52 b Fh(same)p 2707
4377 30 4 v 36 w(o)m(rig)p 2894 4377 V 35 w(stmt)37 b
Fv(returns)g(true)f(if)150 4497 y(t)m(w)m(o)d(statemen)m(ts)h(are)e
(unrolled)g(v)m(ersions)h(of)f(the)h(same)g(original)c(statemen)m(t.)
1901 5649 y(31)p eop
%%Page: 32 32
32 31 bop 150 100 a Fv(suc)m(h,)34 b(this)e(metho)s(d)g(is)g(mainly)f
(applicable)g(to)h(arc)m(hitectures)h(with)g(short)f(v)m(ectors.)296
280 y(In)k(Chapter)g(7,)g(w)m(e)g(will)d(pro)m(vide)j(data)f(that)g
(compare)g(this)g(approac)m(h)g(to)g(the)h(algorithm)150
461 y(describ)s(ed)28 b(in)e(Chapter)h(4.)42 b(These)28
b(results)f(demonstrate)g(that)g(sup)s(erw)m(ord)h(lev)m(el)e
(parallelism)d(is)150 641 y(a)h(sup)s(erset)i(of)d(v)m(ector)i
(parallelism.)37 b(Exp)s(erimen)m(ts)25 b(on)f(the)h(SPEC95fp)g(b)s
(enc)m(hmark)g(suite)f(sho)m(w)150 822 y(that)32 b(20\045)h(of)f
(dynamic)g(instruction)f(sa)m(vings)j(are)e(from)f(non-v)m(ectorizable)
i(co)s(de)g(sequences.)1901 5649 y(32)p eop
%%Page: 33 33
33 32 bop 150 888 a Fs(Chapter)78 b(6)150 1428 y(SLP)f(Compiler)f
(Implemen)-6 b(tation)150 1941 y Fv(Our)30 b(compiler)e(w)m(as)j(built)
d(and)i(tested)h(within)e(the)i(SUIF)f(compiler)e(infrastructure)i([27)
o(].)43 b(Fig-)150 2121 y(ure)i(6-1)e(sho)m(ws)j(the)e(basic)g(steps)i
(and)e(their)g(ordering.)77 b(First,)46 b(lo)s(op)d(unrolling)e(is)j
(used)h(to)150 2302 y(transform)39 b(v)m(ector)i(parallelism)35
b(in)m(to)k(SLP)-8 b(.)40 b(Next,)j(redundan)m(t)e(load)d(elimination)e
(is)j(applied)150 2482 y(in)31 b(order)i(to)e(reduce)j(the)e(n)m(um)m
(b)s(er)h(of)e(statemen)m(ts)i(con)m(taining)e(adjacen)m(t)i(memory)e
(references.)150 2663 y(After)i(this,)g(all)f(m)m(ultidimensional)c
(arra)m(ys)34 b(are)f(padded)h(in)f(the)g(lo)m(w)m(est)h(dimension.)44
b(P)m(adding)150 2844 y(impro)m(v)m(es)30 b(the)g(e\013ectiv)m(eness)j
(of)c(alignmen)m(t)f(analysis)i(whic)m(h)g(attempts)g(to)g(determine)f
(the)i(ad-)150 3024 y(dress)k(alignmen)m(t)d(of)h(eac)m(h)i(load)d(and)
i(store)g(instruction.)47 b(Alignmen)m(t)32 b(analysis)h(is)g(needed)i
(for)150 3205 y(compiling)41 b(to)k(arc)m(hitectures)g(that)g(do)f(not)
g(supp)s(ort)h(unaligned)f(memory)f(accesses.)82 b(As)45
b(a)150 3385 y(\014nal)32 b(step)h(b)s(efore)g(SLP)g(extraction,)f(the)
h(in)m(termediate)e(represen)m(tation)j(is)e(transformed)g(in)m(to)150
3566 y(a)j(lo)m(w)g(lev)m(el)g(form)g(and)g(a)g(series)h(of)f(standard)
h(data\015o)m(w)g(optimizations)d(is)i(applied.)51 b(Finally)-8
b(,)150 3746 y(sup)s(erw)m(ord)39 b(lev)m(el)e(parallelization)d(is)j
(p)s(erformed)g(and)h(a)f(C)h(represen)m(tation)h(is)e(pro)s(duced)h
(for)150 3927 y(use)g(on)g(a)f(macro-extended)h(C)g(compiler.)57
b(The)38 b(follo)m(wing)d(sections)j(describ)s(e)g(eac)m(h)h(of)e
(these)150 4108 y(steps.)150 4532 y FA(6.1)161 b(Lo)t(op)53
b(Unrolling)150 4811 y Fv(Lo)s(op)42 b(unrolling)e(is)i(p)s(erformed)g
(early)g(since)h(it)f(is)g(most)g(easily)g(done)h(at)f(a)g(high)g(lev)m
(el.)73 b(As)150 4991 y(discussed,)33 b(it)c(is)i(used)g(to)g
(transform)e(v)m(ector)j(parallelism)27 b(in)m(to)j(basic)g(blo)s(c)m
(ks)h(with)f(sup)s(erw)m(ord)150 5172 y(lev)m(el)44 b(parallelism.)73
b(In)45 b(order)f(to)g(ensure)h(full)d(utilization)f(of)i(the)i(sup)s
(erw)m(ord)g(datapath)f(in)150 5353 y(the)32 b(presence)i(of)d(a)g(v)m
(ectorizable)h(lo)s(op,)e(the)i(unroll)e(factor)h(m)m(ust)h(b)s(e)g
(customized)f(to)g(the)h(data)1901 5649 y(33)p eop
%%Page: 34 34
34 33 bop 584 186 a
 21313290 37937649 0 0 26970521 48086466 startTexFig

 doclip
 584 186 a
%%BeginDocument: figures/flow.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: flow.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Thu Apr 27 13:27:32 2000
%%For: slarsen@chocura (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 410 731
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-224.0 748.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Courier /Courier-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 13462 m -1000 -1000 l 11557 -1000 l 11557 13462 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 6105 300 m 6000 300 6000 795 105 arcto 4 {pop} repeat
  6000 900 7995 900 105 arcto 4 {pop} repeat
  8100 900 8100 405 105 arcto 4 {pop} repeat
  8100 300 6105 300 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5955 1350 m 5850 1350 5850 1845 105 arcto 4 {pop} repeat
  5850 1950 8145 1950 105 arcto 4 {pop} repeat
  8250 1950 8250 1455 105 arcto 4 {pop} repeat
  8250 1350 5955 1350 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
6150 1725 m
gs 1 -1 sc (Loop unrolling) col0 sh gr
% Polyline
n 6105 4500 m 6000 4500 6000 4995 105 arcto 4 {pop} repeat
  6000 5100 7995 5100 105 arcto 4 {pop} repeat
  8100 5100 8100 4605 105 arcto 4 {pop} repeat
  8100 4500 6105 4500 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
6225 4875 m
gs 1 -1 sc (Array padding) col0 sh gr
% Polyline
n 5805 5550 m 5700 5550 5700 6045 105 arcto 4 {pop} repeat
  5700 6150 8295 6150 105 arcto 4 {pop} repeat
  8400 6150 8400 5655 105 arcto 4 {pop} repeat
  8400 5550 5805 5550 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
5925 5925 m
gs 1 -1 sc (Alignment analysis) col0 sh gr
% Polyline
n 3855 6600 m 3750 6600 3750 7095 105 arcto 4 {pop} repeat
  3750 7200 10245 7200 105 arcto 4 {pop} repeat
  10350 7200 10350 6705 105 arcto 4 {pop} repeat
  10350 6600 3855 6600 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
4050 6975 m
gs 1 -1 sc (Annotate loads/stores with address calculations) col0 sh gr
% Polyline
n 4980 9750 m 4875 9750 4875 10245 105 arcto 4 {pop} repeat
  4875 10350 9270 10350 105 arcto 4 {pop} repeat
  9375 10350 9375 9855 105 arcto 4 {pop} repeat
  9375 9750 4980 9750 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
5175 10125 m
gs 1 -1 sc (Superword level parallelization) col0 sh gr
% Polyline
n 5280 10800 m 5175 10800 5175 11295 105 arcto 4 {pop} repeat
  5175 11400 8970 11400 105 arcto 4 {pop} repeat
  9075 11400 9075 10905 105 arcto 4 {pop} repeat
  9075 10800 5280 10800 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
5550 11175 m
gs 1 -1 sc (Convert SUIF to AltiVec C) col0 sh gr
% Polyline
n 5580 11850 m 5475 11850 5475 12345 105 arcto 4 {pop} repeat
  5475 12450 8670 12450 105 arcto 4 {pop} repeat
  8775 12450 8775 11955 105 arcto 4 {pop} repeat
  8775 11850 5580 11850 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
5850 12225 m
gs 1 -1 sc (AltiVec-extended gcc) col0 sh gr
% Polyline
gs  clippath
7155 10653 m 7125 10773 l 7095 10653 l 7095 10815 l 7155 10815 l cp
clip
n 7125 10350 m 7125 10800 l gs col0 s gr gr

% arrowhead
n 7155 10653 m 7125 10773 l 7095 10653 l 7125 10653 l 7155 10653 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7155 11703 m 7125 11823 l 7095 11703 l 7095 11865 l 7155 11865 l cp
clip
n 7125 11400 m 7125 11850 l gs col0 s gr gr

% arrowhead
n 7155 11703 m 7125 11823 l 7095 11703 l 7125 11703 l 7155 11703 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7155 8553 m 7125 8673 l 7095 8553 l 7095 8715 l 7155 8715 l cp
clip
n 7125 8250 m 7125 8700 l gs col0 s gr gr

% arrowhead
n 7155 8553 m 7125 8673 l 7095 8553 l 7125 8553 l 7155 8553 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7155 9603 m 7125 9723 l 7095 9603 l 7095 9765 l 7155 9765 l cp
clip
n 7125 9300 m 7125 9750 l gs col0 s gr gr

% arrowhead
n 7155 9603 m 7125 9723 l 7095 9603 l 7125 9603 l 7155 9603 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 5130 7650 m 5025 7650 5025 8145 105 arcto 4 {pop} repeat
  5025 8250 9120 8250 105 arcto 4 {pop} repeat
  9225 8250 9225 7755 105 arcto 4 {pop} repeat
  9225 7650 5130 7650 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5580 8700 m 5475 8700 5475 9195 105 arcto 4 {pop} repeat
  5475 9300 8670 9300 105 arcto 4 {pop} repeat
  8775 9300 8775 8805 105 arcto 4 {pop} repeat
  8775 8700 5580 8700 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
5251 8025 m
gs 1 -1 sc (Convert to three-address form) col0 sh gr
/Courier-iso ff 210.00 scf sf
5775 9075 m
gs 1 -1 sc (Dataflow optimizations) col0 sh gr
% Polyline
gs  clippath
7080 1203 m 7050 1323 l 7020 1203 l 7020 1365 l 7080 1365 l cp
clip
n 7050 900 m 7050 1350 l gs col0 s gr gr

% arrowhead
n 7080 1203 m 7050 1323 l 7020 1203 l 7050 1203 l 7080 1203 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7080 2253 m 7050 2373 l 7020 2253 l 7020 2415 l 7080 2415 l cp
clip
n 7050 1950 m 7050 2400 l gs col0 s gr gr

% arrowhead
n 7080 2253 m 7050 2373 l 7020 2253 l 7050 2253 l 7080 2253 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7080 3303 m 7050 3423 l 7020 3303 l 7020 3465 l 7080 3465 l cp
clip
n 7050 3000 m 7050 3450 l gs col0 s gr gr

% arrowhead
n 7080 3303 m 7050 3423 l 7020 3303 l 7050 3303 l 7080 3303 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7080 4353 m 7050 4473 l 7020 4353 l 7020 4515 l 7080 4515 l cp
clip
n 7050 4050 m 7050 4500 l gs col0 s gr gr

% arrowhead
n 7080 4353 m 7050 4473 l 7020 4353 l 7050 4353 l 7080 4353 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7080 5403 m 7050 5523 l 7020 5403 l 7020 5565 l 7080 5565 l cp
clip
n 7050 5100 m 7050 5550 l gs col0 s gr gr

% arrowhead
n 7080 5403 m 7050 5523 l 7020 5403 l 7050 5403 l 7080 5403 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7080 6453 m 7050 6573 l 7020 6453 l 7020 6615 l 7080 6615 l cp
clip
n 7050 6150 m 7050 6600 l gs col0 s gr gr

% arrowhead
n 7080 6453 m 7050 6573 l 7020 6453 l 7050 6453 l 7080 6453 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7080 7503 m 7050 7623 l 7020 7503 l 7020 7665 l 7080 7665 l cp
clip
n 7050 7200 m 7050 7650 l gs col0 s gr gr

% arrowhead
n 7080 7503 m 7050 7623 l 7020 7503 l 7050 7503 l 7080 7503 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4905 3450 m 4800 3450 4800 3945 105 arcto 4 {pop} repeat
  4800 4050 9195 4050 105 arcto 4 {pop} repeat
  9300 4050 9300 3555 105 arcto 4 {pop} repeat
  9300 3450 4905 3450 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 4605 2400 m 4500 2400 4500 2895 105 arcto 4 {pop} repeat
  4500 3000 9495 3000 105 arcto 4 {pop} repeat
  9600 3000 9600 2505 105 arcto 4 {pop} repeat
  9600 2400 4605 2400 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Courier-iso ff 210.00 scf sf
6375 675 m
gs 1 -1 sc (SUIF parser) col0 sh gr
/Courier-iso ff 210.00 scf sf
5025 3825 m
gs 1 -1 sc (Redundant load/store elimination) col0 sh gr
/Courier-iso ff 210.00 scf sf
4800 2775 m
gs 1 -1 sc (Convert to unstructured control flow) col0 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 1386 5195 a Fv(Figure)31 b(6-1:)43 b(Compiler)30 b(\015o)m(w.)1901
5649 y(34)p eop
%%Page: 35 35
35 34 bop 150 100 a Fv(sizes)33 b(used)h(within)e(the)h(lo)s(op.)42
b(F)-8 b(or)32 b(example,)g(a)g(v)m(ectorizable)h(lo)s(op)e(con)m
(taining)g(16-bit)g(v)-5 b(alues)150 280 y(should)27
b(b)s(e)h(unrolled)f(8)g(times)g(for)g(a)g(128-bit)f(datapath.)41
b(Our)28 b(system)g(curren)m(tly)h(unrolls)d(lo)s(ops)150
461 y(based)31 b(on)e(the)i(smallest)d(data)h(t)m(yp)s(e)i(presen)m(t.)
44 b(After)30 b(unrolling,)e(all)g(high-lev)m(el)g(con)m(trol)h(\015o)m
(w)h(is)150 641 y(disman)m(tled)h(since)i(the)g(remaining)e(passes)j
(op)s(erate)e(on)h(a)f(standard)h(con)m(trol)f(\015o)m(w)h(graph.)150
1065 y FA(6.2)161 b(Redundan)l(t)51 b(load)k(elimination)150
1345 y Fv(Redundan)m(t)42 b(load)e(elimination)d(remo)m(v)m(es)43
b(unnecessary)h(memory)c(fetc)m(hes)j(b)m(y)f(assigning)f(the)150
1525 y(\014rst)c(in)f(a)h(series)g(of)f(redundan)m(t)i(loads)e(to)h(a)f
(temp)s(orary)g(v)-5 b(ariable.)54 b(The)38 b(temp)s(orary)e(is)g(then)
150 1706 y(used)25 b(in)e(place)g(of)h(eac)m(h)g(subsequen)m(t)j
(redundan)m(t)e(load.)40 b(F)-8 b(or)23 b(F)m(OR)-8 b(TRAN)23
b(sources,)k(w)m(e)e(limit)c(the)150 1886 y(analysis)32
b(to)g(arra)m(y)h(references)i(since)e(they)g(constitute)g(the)g(ma)5
b(jorit)m(y)32 b(of)g(memory)g(references.)150 2067 y(Remo)m(ving)23
b(redundan)m(t)j(loads)d(is)h(therefore)h(a)f(matter)f(of)h(iden)m
(tifying)e(iden)m(tical)h(arra)m(y)h(accesses.)150 2248
y(This)30 b(is)e(accomplished)h(using)g(SUIF's)h(built-in)d(dep)s
(endence)32 b(library)-8 b(.)40 b(F)-8 b(or)29 b(C)h(sources,)i(w)m(e)e
(use)150 2428 y(a)36 b(form)f(of)h(partial)e(redundancy)k(elimination)
32 b([14])k(augmen)m(ted)h(with)f(p)s(oin)m(ter)g(analysis)f([23],)150
2609 y(whic)m(h)k(allo)m(ws)f(for)g(the)i(elimination)34
b(of)k(partially)f(redundan)m(t)j(loads.)61 b(In)39 b(addition)e(to)i
(b)s(eing)150 2789 y(a)46 b(generally)e(useful)i(optimization,)g
(redundan)m(t)h(load)d(elimination)e(is)j(particularly)f(helpful)150
2970 y(in)38 b(SLP)i(analysis.)62 b(As)40 b(w)m(as)g(discussed)h(in)d
(Chapter)i(4,)g(it)e(reduces)j(the)f(n)m(um)m(b)s(er)f(of)g(pac)m(king)
150 3150 y(p)s(ossibilities)30 b(in)h Fu(adjac)-5 b(ent)34
b(memory)h(identi\014c)-5 b(ation)p Fv(.)150 3575 y FA(6.3)161
b(Arra)l(y)53 b(P)l(adding)150 3854 y Fv(Arra)m(y)38
b(padding)e(is)h(used)h(to)e(impro)m(v)m(e)h(the)h(e\013ectiv)m(eness)h
(of)e(alignmen)m(t)e(analysis.)56 b(Giv)m(en)37 b(an)150
4034 y(index)d(in)m(to)f(the)h(lo)m(w)m(er)f(order)h(dimension)e(of)h
(a)g(m)m(ultidimensional)c(arra)m(y)-8 b(,)34 b(the)g(corresp)s(onding)
150 4215 y(access)49 b(will)c(b)s(e)i(consisten)m(tly)h(aligned)e(on)h
(the)h(same)f(b)s(oundary)h(only)f(if)f(the)h(lo)m(w)m(er)h(order)150
4395 y(dimension)34 b(is)h(a)h(m)m(ultiple)d(of)i(the)h(sup)s(erw)m
(ord)h(size.)52 b(F)-8 b(or)35 b(this)g(reason,)i(all)d(m)m
(ultidimensional)150 4576 y(arra)m(ys)f(are)g(padded)g(in)f(their)g(lo)
m(w)m(est)h(dimension.)1901 5649 y(35)p eop
%%Page: 36 36
36 35 bop 150 100 a FA(6.4)161 b(Alignmen)l(t)52 b(Analysis)150
379 y Fv(Alignmen)m(t)36 b(analysis)i(determines)g(the)g(alignmen)m(t)e
(of)i(memory)f(accesses)k(with)c(resp)s(ect)j(to)d(a)150
559 y(certain)d(sup)s(erw)m(ord)i(datapath)f(width.)50
b(F)-8 b(or)34 b(arc)m(hitectures)h(that)g(do)f(not)h(supp)s(ort)g
(unaligned)150 740 y(memory)46 b(accesses,)54 b(alignmen)m(t)45
b(analysis)i(can)g(greatly)g(impro)m(v)m(e)g(the)g(p)s(erformance)g(of)
g(our)150 921 y(system.)63 b(Without)38 b(it,)h(memory)f(accesses)j
(are)e(assumed)g(to)g(b)s(e)f(unaligned)g(and)h(the)g(prop)s(er)150
1101 y(merging)31 b(co)s(de)i(m)m(ust)g(b)s(e)f(emitted)g(for)g(ev)m
(ery)i(wide)f(load)e(and)i(store.)296 1282 y(One)h(situation)e(in)h
(whic)m(h)h(merging)e(o)m(v)m(erhead)j(can)e(b)s(e)h(amortized)e(is)h
(when)i(a)e(con)m(tiguous)150 1462 y(blo)s(c)m(k)28 b(of)f(memory)g(is)
g(accessed)j(within)d(a)g(lo)s(op.)40 b(In)29 b(this)e(situation,)g(o)m
(v)m(erhead)i(can)f(b)s(e)g(reduced)150 1643 y(to)46
b(one)h(additional)c(merge)j(op)s(eration)f(p)s(er)h(load)g(or)f(store)
i(b)m(y)g(using)f(data)g(from)f(previous)150 1823 y(iterations.)296
2004 y(Alignmen)m(t)d(analysis,)k(ho)m(w)m(ev)m(er,)j(can)43
b(completely)g(remo)m(v)m(e)h(this)f(o)m(v)m(erhead.)78
b(F)-8 b(or)43 b(F)m(OR-)150 2185 y(TRAN)37 b(sources,)h(a)e(simple)f
(in)m(terpro)s(cedural)g(analysis)g(can)i(determine)f(alignmen)m(t)e
(informa-)150 2365 y(tion)g(in)h(a)f(single)h(pass.)52
b(This)35 b(analysis)g(is)f(\015o)m(w-insensitiv)m(e,)i(con)m
(text-insensitiv)m(e,)h(and)e(visits)150 2546 y(the)45
b(call)e(graph)i(in)f(breadth-\014rst)h(order.)80 b(F)-8
b(or)44 b(C)h(sources,)k(w)m(e)d(use)g(an)e(enhanced)j(p)s(oin)m(ter)
150 2726 y(analysis)32 b(pac)m(k)-5 b(age)33 b(dev)m(elop)s(ed)h(b)m(y)
f(Rugina)f(and)g(Rinard)g([23)o(].)44 b(Since)33 b(this)f(pass)i(also)d
(pro)m(vides)150 2907 y(lo)s(cation)23 b(set)j(information,)d(w)m(e)j
(can)g(consider)f(dep)s(endences)j(more)c(carefully)h(when)h(com)m
(bining)150 3087 y(pac)m(king)33 b(candidates.)150 3512
y FA(6.5)161 b(Flattening)150 3791 y Fv(SLP)33 b(analysis)f(is)g(most)h
(useful)f(when)i(p)s(erformed)f(on)f(a)h(three-address)h(represen)m
(tation.)45 b(This)150 3971 y(w)m(a)m(y)-8 b(,)29 b(the)f(algorithm)c
(has)k(full)d(\015exibilit)m(y)g(in)i(c)m(ho)s(osing)f(whic)m(h)i(op)s
(erations)e(to)h(pac)m(k.)43 b(If)27 b(isomor-)150 4152
y(phic)33 b(statemen)m(ts)i(are)f(instead)f(matc)m(hed)h(b)m(y)h(the)f
(tree)g(structure)h(inherited)e(from)f(the)i(source)150
4333 y(co)s(de,)j(long)e(expressions)j(m)m(ust)e(b)s(e)g(iden)m(tical)e
(in)h(order)h(to)g(parallelize.)50 b(On)36 b(the)h(other)f(hand,)150
4513 y(iden)m(tifying)24 b(adjacen)m(t)h(memory)f(references)k(is)c(m)m
(uc)m(h)i(easier)f(if)f(address)i(calculations)d(main)m(tain)150
4694 y(their)34 b(original)e(form.)48 b(W)-8 b(e)35 b(therefore)h
(annotate)e(eac)m(h)i(load)d(and)i(store)g(instruction)f(with)g(this)
150 4874 y(information)29 b(b)s(efore)k(\015attening.)1901
5649 y(36)p eop
%%Page: 37 37
37 36 bop 150 100 a FA(6.6)161 b(Data\015o)l(w)52 b(Optimizations)150
379 y Fv(After)24 b(\015attening,)g(sev)m(eral)g(standard)g
(optimizations)d(are)i(applied)f(to)h(an)h(input)f(program.)39
b(This)150 559 y(ensures)d(that)f(parallelism)30 b(is)k(not)g
(extracted)i(from)d(computation)g(that)h(w)m(ould)h(otherwise)g(b)s(e)
150 740 y(eliminated.)i(Optimizations)20 b(include)i(constan)m(t)h
(propagation,)g(cop)m(y)h(propagation,)f(dead)g(co)s(de)150
921 y(elimination,)i(common)i(sub-expression)j(elimination,)25
b(and)j(lo)s(op-in)m(v)-5 b(arian)m(t)25 b(co)s(de)j(motion.)40
b(As)150 1101 y(a)i(\014nal)g(step,)k(scalar)41 b(renaming)g(is)h(p)s
(erformed)g(to)g(remo)m(v)m(e)h(output)g(and)f(an)m(ti-dep)s(endences)
150 1282 y(since)33 b(they)g(can)g(inhibit)e(parallelization.)150
1706 y FA(6.7)161 b(Sup)t(erw)l(ord)51 b(Lev)l(el)i(P)l(arallelization)
150 1985 y Fv(After)41 b(optimization,)e(the)h(SLP)h(algorithm)d(is)i
(applied.)66 b(When)41 b(parallelization)36 b(is)k(success-)150
2166 y(ful,)45 b(pac)m(k)m(ed)g(statemen)m(ts)f(are)f(replaced)g(b)m(y)
h(new)g(SIMD)f(instructions.)75 b(Ideally)-8 b(,)45 b(w)m(e)f(w)m(ould)
150 2346 y(then)33 b(in)m(terface)f(to)f(an)h(arc)m(hitecture-sp)s
(eci\014c)h(bac)m(k)m(end)h(in)d(order)h(to)g(generate)g(mac)m(hine)g
(co)s(de.)150 2527 y(Ho)m(w)m(ev)m(er,)44 b(w)m(e)c(ha)m(v)m(e)h(opted)
f(for)f(the)h(simpler)e(metho)s(d)h(of)h(emitting)d(C)j(co)s(de)g(with)
f(m)m(ultime-)150 2707 y(dia)j(macros)h(inserted)g(for)g(use)h(on)f(a)g
(macro-extended)h(C)f(compiler.)74 b(While)42 b(this)g(solution)150
2888 y(pro)m(vides)33 b(less)g(optimal)c(results,)k(lev)m(eraging)e
(existing)h(compilation)d(tec)m(hnology)j(allo)m(ws)f(us)i(to)150
3068 y(concen)m(trate)h(on)e(the)h(SLP)g(algorithm)d(itself)h(rather)i
(than)f(on)h(arc)m(hitectural)f(sp)s(eci\014cs.)1901
5649 y(37)p eop
%%Page: 38 38
38 37 bop 150 888 a Fs(Chapter)78 b(7)150 1428 y(Results)150
1941 y Fv(This)36 b(c)m(hapter)i(presen)m(ts)g(p)s(oten)m(tial)d(p)s
(erformance)g(gains)h(for)g(SLP)g(compiler)f(tec)m(hniques)j(and)150
2121 y(substan)m(tiates)f(them)e(using)h(a)f(Motorola)g(MPC7400)h
(micropro)s(cessor)f(with)g(the)h(AltiV)-8 b(ec)35 b(in-)150
2302 y(struction)k(set.)64 b(All)38 b(results)i(w)m(ere)g(gathered)g
(using)f(the)h(compiler)d(algorithms)g(describ)s(ed)j(in)150
2482 y(Chapters)34 b(3,)65 b(4)32 b(and)h(5.)150 2906
y FA(7.1)161 b(Benc)l(hmarks)150 3186 y Fv(W)-8 b(e)25
b(measure)g(the)g(success)j(of)c(our)h(SLP)g(algorithm)d(on)i(b)s(oth)h
(scien)m(ti\014c)g(and)g(m)m(ultimedia)c(appli-)150 3366
y(cations.)42 b(F)-8 b(or)28 b(scien)m(ti\014c)g(co)s(des,)j(w)m(e)e
(use)h(the)f(SPEC95fp)g(b)s(enc)m(hmark)h(suite.)42 b(Our)28
b(m)m(ultimedia)150 3547 y(b)s(enc)m(hmarks)h(are)f(pro)m(vided)h(b)m
(y)g(the)f(k)m(ernels)h(listed)e(in)h(T)-8 b(able)27
b(7.1.)42 b(The)29 b(source)g(co)s(de)f(for)g(these)150
3727 y(k)m(ernels)34 b(is)e(listed)f(in)h(App)s(endix)h(A.)p
1030 4024 1841 4 v 1028 4103 4 79 v 1079 4079 a Ft(Name)p
1321 4103 V 115 w(Description)p 2355 4103 V 682 w(Datat)n(yp)r(e)p
2869 4103 V 1030 4106 1841 4 v 1030 4123 V 1028 4202
4 79 v 1079 4178 a(FIR)p 1321 4202 V 171 w(Finite)24
b(impulse)e(resp)r(onse)i(\014lter)p 2355 4202 V 138
w(32-bit)g(\015oat)p 2869 4202 V 1030 4205 1841 4 v 1028
4284 4 79 v 1079 4260 a(I)r(IR)p 1321 4284 V 190 w(In\014nite)h
(impulse)d(resp)r(onse)i(\014lter)p 2355 4284 V 100 w(32-bit)g(\015oat)
p 2869 4284 V 1030 4287 1841 4 v 1028 4366 4 79 v 1079
4342 a(VMM)p 1321 4366 V 111 w(V)-6 b(ector-matrix)23
b(m)n(ultiply)p 2355 4366 V 321 w(32-bit)h(\015oat)p
2869 4366 V 1030 4369 1841 4 v 1028 4448 4 79 v 1079
4425 a(MMM)p 1321 4448 V 99 w(Matrix-matrix)e(m)n(ultiply)p
2355 4448 V 309 w(32-bit)i(\015oat)p 2869 4448 V 1030
4452 1841 4 v 1028 4531 4 79 v 1079 4507 a(YUV)p 1321
4531 V 135 w(R)n(GB)g(to)g(YUV)f(con)n(v)n(ersion)p 2355
4531 V 268 w(16-bit)h(in)n(teger)p 2869 4531 V 1030 4534
1841 4 v 229 4694 a Fv(T)-8 b(able)32 b(7.1:)43 b(Multimedia)30
b(k)m(ernels)k(used)g(to)e(ev)-5 b(aluate)32 b(the)h(e\013ectiv)m
(eness)i(of)d(SLP)h(analysis.)1901 5649 y(38)p eop
%%Page: 39 39
39 38 bop 1014 111 1872 4 v 1012 190 4 79 v 1064 166
a Ft(Benc)n(hmark)p 1460 190 V 1477 190 V 116 w(128)24
b(bits)p 1820 190 V 100 w(256)h(bits)p 2163 190 V 99
w(512)g(bits)p 2506 190 V 99 w(1024)g(bits)p 2884 190
V 1014 193 1872 4 v 1014 210 V 1012 289 4 79 v 1064 265
a(swim)p 1460 289 V 1477 289 V 329 w(61.59\045)p 1820
289 V 124 w(64.45\045)p 2163 289 V 124 w(73.44\045)p
2506 289 V 160 w(77.17\045)p 2884 289 V 1014 292 1872
4 v 1012 371 4 79 v 1064 347 a(tomcatv)p 1460 371 V 1477
371 V 236 w(40.91\045)p 1820 371 V 124 w(61.28\045)p
2163 371 V 124 w(69.50\045)p 2506 371 V 160 w(73.85\045)p
2884 371 V 1014 374 1872 4 v 1012 453 4 79 v 1064 430
a(mgrid)p 1460 453 V 1477 453 V 306 w(43.49\045)p 1820
453 V 124 w(55.13\045)p 2163 453 V 124 w(60.51\045)p
2506 453 V 160 w(61.52\045)p 2884 453 V 1014 457 1872
4 v 1012 535 4 79 v 1064 512 a(su2cor)p 1460 535 V 1477
535 V 292 w(33.99\045)p 1820 535 V 124 w(48.73\045)p
2163 535 V 124 w(56.06\045)p 2506 535 V 160 w(59.63\045)p
2884 535 V 1014 539 1872 4 v 1012 618 4 79 v 1064 594
a(w)n(a)n(v)n(e5)p 1460 618 V 1477 618 V 305 w(26.69\045)p
1820 618 V 124 w(37.25\045)p 2163 618 V 124 w(41.97\045)p
2506 618 V 160 w(43.87\045)p 2884 618 V 1014 621 1872
4 v 1012 700 4 79 v 1064 676 a(apsi)p 1460 700 V 1477
700 V 366 w(24.19\045)p 1820 700 V 124 w(29.93\045)p
2163 700 V 124 w(31.32\045)p 2506 700 V 160 w(29.85\045)p
2884 700 V 1014 703 1872 4 v 1012 782 4 79 v 1064 758
a(h)n(ydro2d)p 1460 782 V 1477 782 V 238 w(18.53\045)p
1820 782 V 124 w(26.17\045)p 2163 782 V 124 w(28.88\045)p
2506 782 V 160 w(30.80\045)p 2884 782 V 1014 785 1872
4 v 1012 864 4 79 v 1064 841 a(turb3d)p 1460 864 V 1477
864 V 281 w(21.16\045)p 1820 864 V 124 w(24.76\045)p
2163 864 V 124 w(21.55\045)p 2506 864 V 160 w(15.13\045)p
2884 864 V 1014 868 1872 4 v 1012 946 4 79 v 1064 923
a(applu)p 1460 946 V 1477 946 V 316 w(15.54\045)p 1820
946 V 124 w(22.56\045)p 2163 946 V 124 w(10.29\045)p
2506 946 V 195 w(0.01\045)p 2884 946 V 1014 950 1872
4 v 1012 1029 4 79 v 1064 1005 a(fpppp)p 1460 1029 V
1477 1029 V 345 w(4.22\045)p 1820 1029 V 159 w(8.14\045)p
2163 1029 V 159 w(8.27\045)p 2506 1029 V 195 w(8.27\045)p
2884 1029 V 1014 1032 1872 4 v 1014 1049 V 1012 1127
4 79 v 1064 1104 a(FIR)p 1460 1127 V 1477 1127 V 365
w(38.72\045)p 1820 1127 V 124 w(45.37\045)p 2163 1127
V 124 w(48.56\045)p 2506 1127 V 160 w(49.84\045)p 2884
1127 V 1014 1131 1872 4 v 1012 1210 4 79 v 1064 1186
a(I)r(IR)p 1460 1210 V 1477 1210 V 384 w(51.83\045)p
1820 1210 V 124 w(60.59\045)p 2163 1210 V 124 w(64.77\045)p
2506 1210 V 160 w(66.45\045)p 2884 1210 V 1014 1213 1872
4 v 1012 1292 4 79 v 1064 1268 a(VMM)p 1460 1292 V 1477
1292 V 305 w(36.92\045)p 1820 1292 V 124 w(43.37\045)p
2163 1292 V 124 w(46.63\045)p 2506 1292 V 160 w(51.90\045)p
2884 1292 V 1014 1295 1872 4 v 1012 1374 4 79 v 1064
1350 a(MMM)p 1460 1374 V 1477 1374 V 293 w(61.75\045)p
1820 1374 V 124 w(73.63\045)p 2163 1374 V 124 w(79.76\045)p
2506 1374 V 160 w(82.86\045)p 2884 1374 V 1014 1377 1872
4 v 1012 1456 4 79 v 1064 1433 a(YUV)p 1460 1456 V 1477
1456 V 329 w(87.21\045)p 1820 1456 V 124 w(93.59\045)p
2163 1456 V 124 w(96.79\045)p 2506 1456 V 160 w(98.36\045)p
2884 1456 V 1014 1460 1872 4 v 150 1620 a Fv(T)-8 b(able)30
b(7.2:)42 b(P)m(ercen)m(tage)33 b(of)d(dynamic)g(instructions)g
(eliminated)e(using)i(the)h(SLP)g(heuristic)f(for)150
1740 y(a)i(v)-5 b(ariet)m(y)33 b(of)f(h)m(yp)s(othetical)g(datapath)g
(widths.)150 2133 y FA(7.2)161 b(SLP)53 b(Av)-9 b(ailabilit)l(y)150
2413 y Fv(T)h(o)29 b(ev)-5 b(aluate)29 b(the)g(a)m(v)-5
b(ailabilit)m(y)25 b(of)k(sup)s(erw)m(ord)i(lev)m(el)d(parallelism)e
(in)i(our)h(b)s(enc)m(hmarks,)i(w)m(e)f(cal-)150 2593
y(culated)f(the)g(p)s(ercen)m(tage)i(of)d(dynamic)h(instructions)f
(eliminated)f(from)g(a)i(sequen)m(tial)g(program)150
2774 y(after)40 b(parallelization.)61 b(All)38 b(instructions)i(w)m
(ere)h(coun)m(ted)g(equally)-8 b(,)41 b(including)e(SIMD)h(op)s(era-)
150 2954 y(tions.)i(When)32 b(pac)m(king)g(w)m(as)g(required,)g(w)m(e)g
(assumed)g(that)e Fu(n-1)44 b Fv(instructions)31 b(w)m(ere)i(needed)f
(to)150 3135 y(pac)m(k)f Fu(n)37 b Fv(v)-5 b(alues)30
b(in)m(to)g(a)f(single)g(SIMD)i(register.)42 b(These)32
b(v)-5 b(alues)30 b(w)m(ere)i(also)d(used)i(for)e(unpac)m(king)150
3315 y(costs.)64 b(Measuremen)m(ts)41 b(w)m(ere)g(obtained)d(b)m(y)j
(instrumen)m(ting)d(source)i(co)s(de)f(with)g(coun)m(ters)i(in)150
3496 y(order)33 b(to)f(determine)h(the)g(n)m(um)m(b)s(er)g(of)f(times)g
(eac)m(h)h(basic)g(blo)s(c)m(k)g(w)m(as)g(executed.)46
b(These)35 b(quan-)150 3677 y(tities)i(w)m(ere)j(then)e(m)m(ultiplied)d
(b)m(y)40 b(the)e(n)m(um)m(b)s(er)h(of)f(static)f(SUIF)i(instructions)f
(in)f(eac)m(h)i(basic)150 3857 y(blo)s(c)m(k.)k(The)34
b(follo)m(wing)c(subsections)k(presen)m(t)g(results)f(for)f(the)h
(three)g(extraction)g(tec)m(hniques.)150 4221 y Fw(7.2.1)136
b(SLP)44 b(Heuristic)150 4466 y Fv(P)m(erformance)c(tests)h(using)f
(the)g(SLP)h(extraction)e(algorithm)e(of)i(Chapter)i(4)f(w)m(ere)h
(made)e(for)150 4646 y(b)s(oth)24 b(sets)h(of)e(b)s(enc)m(hmarks.)42
b(The)25 b(results)f(for)f(a)h(v)-5 b(ariet)m(y)24 b(of)f(h)m(yp)s
(othetical)g(datapath)h(widths)g(are)150 4827 y(sho)m(wn)g(in)d(T)-8
b(able)22 b(7.2)g(and)g(Figure)f(7-1.)40 b(It)22 b(is)g(assumed)h(that)
f(eac)m(h)h(datapath)f(can)g(accommo)s(date)150 5007
y(SIMD)36 b(v)m(ersions)h(of)e(an)m(y)i(standard)f(data)g(t)m(yp)s(e.)
54 b(F)-8 b(or)35 b(example,)h(a)g(datapath)g(of)f(512)g(bits)h(can)150
5188 y(p)s(erform)e(eigh)m(t)h(64-bit)e(\015oating)h(p)s(oin)m(t)g(op)s
(erations)h(in)f(parallel.)49 b(T)-8 b(o)35 b(unco)m(v)m(er)i(the)e
(maxim)m(um)150 5369 y(amoun)m(t)23 b(of)g(sup)s(erw)m(ord)i(lev)m(el)e
(parallelism)d(a)m(v)-5 b(ailable,)22 b(w)m(e)j(compiled)d(eac)m(h)i(b)
s(enc)m(hmark)g(without)1901 5649 y(39)p eop
%%Page: 40 40
40 39 bop 734 0 a
 18945146 12882692 5130977 4012687 48810065 34009169 startTexFig

 doclip
 734 0 a
%%BeginDocument: figures/gr1.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000418222549)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 78 61 742 517

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



78 61 moveto

742 61 lineto

742 517 lineto

78 517 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font HGBNKM+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /HGBNKM+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/a 273 RD 

b8f8880df7a097159a7f9f85a58b08a18b9f909c96089d979b9c9ba3087e

960581808385828b08878b878c888e08878d898f8990088a928a978ba008

f745078bbc89ab869908849e7aa0729d08729e6994608b08668b69856a80

086980727b787608787482768b74088b78927e997f08987e9c85a08b089f

8b9a91979608979691998b9b088a9785997f9908829586938b92088c948f

9193910899949c90a08b08998b9688958408978491838f82088f838d758b

69085d07265c4a666d6f086d717c6b8b68088b7194769c7a089c79a183a5

8b08b78bbda4c3bc088e7294789a7f080937cb157d8b808f8394087f9787

988b9a08899c929d989d089ea5a8a4b2a2088dfb2c05747879827b8b088a

06090e ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/d 200 RD 

b2f8c00df77ff92b157607a18b9a89938608918792848f82088d838d778b

6808fb1f0778a0799a7a93087a94788f758b086a8b6b816e77086d78746d

7a64087b65825f8b5a088b4d9958a66108ac55b972c58b08a38b9f909d95

089c95a09ea2a7084307f755b0059c07798c7e8e84900883928692889608

8b9089a08bae08f8a207fb5f8c0509cdfcba15725e70756f8b087d8b818e

8491087c98809f83a70882a587b68bc4088bc18fb193a40891a5959d9795

089490948f978b08ae8ba874a35d08fb8407090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/f 182 RD 

abf7e10df7a1f82d15bb0747068ac505e1078b9b8e989193089293928f94

8b08958b90899086088f878d868b84088b888a858a860889808a868b8808

8b819081958208958299879c8b089d8b9c90979608979691988b9a088b9b

819d789a0878996d93638b08518b5c7b696c08696c7a648b5c0874076a07

4b065b07cb068cfbd1058b70897c8883088882858582870882877c88768b

088d7a05f79f068d9c056d8a79918197088492889f8baa088af7d105cf06

090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/l 70 RD 

a0f7aa0d8af92b157a07a18a9a8693820892818f778b6b08fc6d078b6888

7884830881817c84768a087a07f78d069c07758e7c8f8394088495879f8b

ac08f8cc07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/s 223 RD 

b3f8190df79df86915837f85848789088988858a858b08878b838e829008

75967392728b085d8b687d736f08736d7f6c8b68088b6b966da070089a7b

ab70bd6908ab72a17b958008967f8f7e8b7b088b7e867f81810882827e86

7b8b08748b739672a00872a077ab7cb6087a0693fb38059c06929c949396

8b088e8b9289958708ae7ea884a18b08a88ba492a29808a1979d9e98a308

98a491a38ba4088ba983a37ca2087da16ba75bab085dab6ea28198088294

89938b94088b96909694940894939690988b08a28b9f83a07a08a079a06c

9f5d089a0686f730057906090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/y 201 RD 

93f8880df7725215795a7c6c7e7d0882828386838b08868b878d888f0889

8d89948b97088ba2859b81960883947d917b8b08798b7d857f7f08817d84

7c8b78088c7693789c7b089b7ca183a68b08ad8ba799a1a6089c9ea3bfac

e008f715f7e705a3c59aad949508959697909a8d088a9c05fb2a06897a05

a18a988793840894848f818b7f088a77826878590855fb1f053df748057b

b383a28b98088a928f929291089090978f9b8c089c07fb87067a079a8498

84967f0894809c6ba15708f728fbe7057d6505090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HGBNKM+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 121 /y put

pop

%%EndResource

[/N21/HGBNKM+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font HGBNFM+TimesNewRomanPSMT

11 dict begin

/FontName /HGBNFM+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/F 175 RD 

9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08

9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f

8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d

0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06

a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685

6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 

/I 108 RD 

a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8

41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b

87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b

7783708b0873067907f7b0069d077306090e ND 

/M 168 RD 

9cfa0d0df82c16f793f8c205fc4f078b668773848108807977836e8b0873

067907f7b0069d077406708b78927f9908819487a58bb408f845078bb08f

a3929508979d9f93a88b08a2069d07fb5006fb81fc9a05fb83f89a05fb52

067907a68b9f8897850899849384908208907b8f778b6e08fc45078b6687

738481087f7977836f8b0873067907f77d069d077306718b77927f990883

9486a58bb408f84f07f794fcc2059b06090e ND 

/R 220 RD 

9cf92f0df9279d15678f6e94759908739a71a86cb708fb1df75205c296b4

a1a6a908a6a998ae8bb4088bb27fac74a70874a46f9f6a95086896589045

8b08fb87068d7905a206a68b9d84987d08938090728b6108fc41078b6588

738481087f7977826f8b0872067907f7b0069d077106738b78927f990881

9687a48bb508f75507908b908b908b088f89908c8f8b08958b988b9b8c08

f776fbca05f745069d0709fc6af8eb15ab91a48e9e8b08b58bad7ea57108

a47198698b62088b617b686b70086c6f5b7e4d8b08888a878c878b08868b

868b858b08f7a807090e ND 

/U 194 RD 

90f9660df886f91915a48b9e84987d08938090728b6208fba0078b42855a

7e6e087f6d737369780869796481608b08698b6f9174970872977a9a7f9e

087e9e83a586ac0886ac89a98ba508f7b5078bae8fa4939708979d9e93a6

8b08a606899d05fbb006897905a606a28b9e85967e08977e90708b6208fb

97078b3d9054956e089c60a56ab07208b171c27fd38b08cc8bc098b2a508

b1a6a5aa98b00899af91bf8bcd08f7a1078bb08ea292950899a19f96a58b

08a4069d07fb7d067907a406090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/Y 188 RD 

94f9660df869f919159c8b9889948708948792869084088e828e848b8208

8c7b8175776c08fb16fb6005fb1ef76a0577a881a18b97088b9991969892

089993998e9a8b0899068c9d05fbaf067907978b9489928808a4809b8193

830891839b77a06b08f749fbac05fb2f078b6487748481087f7977836f8b

0873067907f7b0069d077506708b77927e9908839486a58bb408f73d07f7

33f78d059faa9ba2989908999a99959b93089d92968f938b089a06889d05

fb78068a7905090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/b 170 RD 

89f8880df730f94b157506fb1b54059279059890978e948b08938b918990

870892868e848d7f088e7e8c6c8b5808fc6207a77aa67ca68208a680a587

a58b08c48bbda0b8b508c0baa5cb8bda088bd27abf69b20869b3639e5d8b

08598b5c6d604e08f7d90709bdfbd1159c949c8f9c8b08ad8ba87ca56c08

a26c995f8b52088b4e7e5b716b08736a6f7b6d8b08788b798f7993087a94

79977a9b088df79f059d9e9d989892088b06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/d 205 RD 

acf8880df7ce7e15a206f719c205869d057c858088828b08828c858d8690

08868f879489970888948aac8bbf08f899077506fb1a54059179059a9096

8e948b08918b928990870892868e848d7f088e7f8c6c8b5808380771a56a

97648b084c8b5770635608625677508b4b088b4c9d56af6208b163b576bc

8b08a28ba290a09508a095a09ca1a2084a070935c115688b6b9c6eae086e

af7dbd8bcd088bcb9abda9ad08a1a4a598a88b08998b9b869b82089c8297

7d957908967990778d7508fb79076f6b6e7d6d8b088c06090e ND 

/e 146 RD 

b0f8500df80ef7ab158bc27bb76bac086aad629b598b08508b5a76646008

636078508b3f088b439e54b16108b261b976c18b08bb8bb59dacb008abaf

9fb492b8087c95057c64796f757b08767b71836e8b085f8b659e6ab1086b

af7bbf8bcd08f7c98c0509fba4f70815a1a0a395a68b089c8b9c869b8108

9c7f977d93790890808f768d6e08fb650691b296a7a0a108090e ND 

/f 179 RD 

b2f7e10df7aef83115ae07fb0706ab078bd18db6909c088f9a9398959308

9693978f9a8b08988b96889585089685967f977908967a967f9386089486

9388938b08938b958f93940894938f948b95088b9d829b789a086da16c96

698b08668b6a826d78086e7775737d6c087c6c84658b5f086e0734066807

e206fbbb078b6b89768780088780848280850880847f887e8b0877067907

f7a0069d076206778b7b927f9908819787a58bb408f7bb07f70706090e ND 

/g 385 RD 

a9f8880dc4ee15827b867e8b80088b808e82928308938396829c81086d6b

7a798988087976807a857f08888389838b83088b7a977aa37b08b76ebf7d

ca8b08de8bcda3bebb08acaa9dae8bb0088ba582a2799d08799e73966d8f

08768e608d488d08668d748c828c087d8d808f869008849189908b91088b

908e939094088f979595999708a384a188a18b08c18bb59aaba908aba79b

af8bb5088bb082a979a208c4069b8b928b8d8c088e8d8c8c8c8d088e8d8b

928b93088b928a90898e088a8e898c898c08898b838c7d8b082c066da066

95608b08578b617b6a6b08686c7b658b5f088b6c92719a73089975a077a6

7e086b6f7575827c0809f768f7c615a26e96638b57088b63836e7b79087b

787782728b08728b75967aa00875a780b38bbe088bb393a89b9e089c9f9f

94a38b08a48ba1809c76088a06099bfc3415bd8aac879c84089c8293808b

7a088b747d756f760870766081518b084c8b5d956b9f08779782988b9b08

8b978f98939908929b979a9a9c08b384c388d489088b06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/l 103 RD 

a9f7aa0df71af94b15fb1954059379059990958e938b08948b9189908708

8f868f848d80088e7e8c6d8b5908fc2b078b708978878108868286848487

0882857e8a768b087907f76f069d07748b7b8d8390088290859287940887

93899e8ba708f8e6077506090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/p 235 RD 

88f8880d93f818159790958d938b08948b938991870890878f858e83088e

848c788b6e08fc3d078b6d8976888308878286868587087f847b87798b08

7f067907f77f069d07728d7a8c829008829184918793088994889e8baa08

f71c079b7d9a819886089d85a087a38b08c28bb9a0b0b408b6bda2cb8bd8

088bd179c366b6086dad669d5e8b08708b7383747b08737c746f746408f3

077806fb1d5405917b0509f76482159b939a8f9b8b08a78ba47ea07208a9

669a568b46088b507e5b716a087672717e6a8b08708b74927999087b9a7f

9b869e08899789a28baf08f73b07a6ab9e9b9791088b06090e ND 

/r 168 RD 

91f7e10df71cf86115fb1b54059079059790968d958b08958c9188918608

91878f838d81088d838c6b8b5708fb41078b718a7b898508898185828386

087f837b88748b087907f779069d07778b7c8e8091088090849387940883

97899e8ba408f76a079baa9aa19a98089092928e918b08928b9585998008

9a809785968b08988b958f939408929490968b98088b9985987f96088095

7c91798b08658b6469664808f0077606090e ND 

/s 212 RD 

bcf8190df793f86115878388868889088888878a868b08858b808e7a9008

7392758f798b08648b6a7f72720871727f6c8b66088b6f92739a7808997a

aa75ba7408bb73aa789b7c089b7b93788b75088b79847b7d7e087c7d7985

758b086b8b6e9771a20872a279ae82b9087b06fb34079b068f919190938b

08918b9489968808ae82aa86a68b08b28bad97aaa408aaa59bab8bb40889

bf6bb649ab0844ae056b997799819808829a85998b9d088b9c9297999708

99979d91a28b08a98ba4829e7a089d7a9b6a975b089d0689f72c057c8c05

090e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/u 171 RD 

8cf8880df7a2f854157907a88a9e8694820896838f798b7108fb91077372

767b79820879817b877d8b08778b79927d98087c9784a78bb508f7c007fb

31067907a38b9b89948708948692859083088e838e7c8b7608fb5c078b62

8f6a927408927598789d7d089d7ca184a48b08a28ba0909f96089f96a8a5

b1b4088d2d059f06f71cc205829d0581857e88818b08848c858d86900884

8f889389960888978aaa8bbe08f7a407fb2d06090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

/y 212 RD 

91f8880d8af842159c8797869386088e889383938008967a937f908108f7

34fbe5056d3d057e6e80787f810880818086818b08898b828d7e90087892

7c8e808b087d8b7e87828308828287808b7d088a7e927e978008977f9b86

9e8b08a68ba696a8a108a7a2a2ac9db608f74af85405939d91998e900892

949393928f08908f958d978c089d07fb25068a79059a8d94899189089189

8f888e87088c898d868b85088a7e897e857e0828fb8c05fb02f77705819f

859e8b98088b948e939291089592958e9a8b0894068c9d05fb67068c7905

090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HGBNFM+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 70 /F put

dup 73 /I put

dup 77 /M put

dup 82 /R put

dup 85 /U put

dup 86 /V put

dup 89 /Y put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N19/HGBNFM+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

78 61 664 456 re W n

[ 0 1 -1 0 803 -17 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

181.08 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

181.2 646.2 m

181.2 66.84 l

S 

0 0 0 RG

181.2 646.2 m

181.2 66.84 l

S 

Q

q

1 i

215.03999 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

215.16 646.2 m

215.16 66.84 l

S 

0 0 0 RG

215.16 646.2 m

215.16 66.84 l

S 

Q

q

1 i

249 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

249.12 646.2 m

249.12 66.84 l

S 

0 0 0 RG

249.12 646.2 m

249.12 66.84 l

S 

Q

q

1 i

282.96001 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

283.08 646.2 m

283.08 66.84 l

S 

0 0 0 RG

283.08 646.2 m

283.08 66.84 l

S 

Q

q

1 i

316.92 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

317.03999 646.2 m

317.03999 66.84 l

S 

0 0 0 RG

317.03999 646.2 m

317.03999 66.84 l

S 

Q

q

1 i

350.75999 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

350.88 646.2 m

350.88 66.84 l

S 

0 0 0 RG

350.88 646.2 m

350.88 66.84 l

S 

Q

q

1 i

384.72 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

384.84 646.2 m

384.84 66.84 l

S 

0 0 0 RG

384.84 646.2 m

384.84 66.84 l

S 

Q

q

1 i

418.67999 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

418.8 646.2 m

418.8 66.84 l

S 

0 0 0 RG

418.8 646.2 m

418.8 66.84 l

S 

Q

q

1 i

452.64 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

452.75999 646.2 m

452.75999 66.84 l

S 

0 0 0 RG

452.75999 646.2 m

452.75999 66.84 l

S 

Q

q

1 i

486.60001 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

486.72 646.2 m

486.72 66.84 l

S 

0 0 0 RG

486.72 646.2 m

486.72 66.84 l

S 

Q

0 0 0 RG

1 J

1 j

0.12 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

147.24001 66.84 339.48 579.36 re

S 

1 1 1 rg

0 j

0.96001 w

147.24001 635.39999 209.03999 7.2 re

B* 

147.24001 599.16 138.84 7.2 re

B* 

147.24001 563.03999 147.60001 7.08 re

B* 

147.24001 526.8 115.44 7.2 re

B* 

147.24001 490.56 90.60001 7.2 re

B* 

147.24001 454.32001 82.08 7.2 re

B* 

147.24001 418.2 62.88 7.08 re

B* 

147.24001 381.96001 71.88 7.2 re

B* 

147.24001 345.72 52.8 7.2 re

B* 

147.24001 309.48 14.28 7.2 re

B* 

147.24001 237.12 131.39999 7.2 re

B* 

147.24001 200.88 175.92 7.2 re

B* 

147.24001 164.64 125.28 7.2 re

B* 

147.24001 128.52 209.64 7.08 re

B* 

q

147.24001 86.16 302.03999 19.32001 re

W n 

147.24001 92.28 296.03999 7.2 re

B* 

Q

0.754 0.754 0.754 rg

147.24001 628.2 218.75999 7.08 re

B* 

147.24001 591.96001 208.08 7.08 re

B* 

147.24001 555.72 187.2 7.2 re

B* 

147.24001 519.60001 165.48 7.08 re

B* 

147.24001 483.36 126.48 7.08 re

B* 

147.24001 447.12 101.64 7.08 re

B* 

147.24001 410.88 88.8 7.2 re

B* 

147.24001 374.75999 84 7.08 re

B* 

147.24001 338.52 76.56 7.08 re

B* 

147.24001 302.28 27.60001 7.08 re

B* 

147.24001 229.92 154.08 7.08 re

B* 

147.24001 193.67999 205.67999 7.08 re

B* 

147.24001 157.44 147.24001 7.08 re

B* 

q

147.24001 115.08 255.96001 19.32001 re

W n 

147.24001 121.2 249.96001 7.2 re

B* 

Q

q

147.24001 78.96001 323.75999 19.2 re

W n 

147.24001 85.08 317.75999 7.08 re

B* 

Q

q

147.24001 614.75999 255.36 19.32001 re

W n 

0.5 0.5 0.5 rg

147.24001 620.88 249.36 7.2 re

B* 

Q

0.5 0.5 0.5 rg

147.24001 584.64 235.92 7.2 re

B* 

147.24001 548.52 205.44 7.08 re

B* 

147.24001 512.28 190.32001 7.2 re

B* 

147.24001 476.03999 142.44 7.2 re

B* 

147.24001 439.8 106.32001 7.2 re

B* 

147.24001 403.67999 98.03999 7.08 re

B* 

147.24001 367.44 73.2 7.2 re

B* 

147.24001 331.2 34.92 7.2 re

B* 

147.24001 294.96001 28.08 7.2 re

B* 

147.24001 222.60001 164.88 7.2 re

B* 

147.24001 186.36 219.84 7.2 re

B* 

147.24001 150.12 158.28 7.2 re

B* 

q

147.24001 107.88 276.72 19.2 re

W n 

147.24001 114 270.72 7.08 re

B* 

Q

q

147.24001 71.64 334.56 19.32001 re

W n 

147.24001 77.75999 328.56 7.2 re

B* 

Q

q

147.24001 607.56 267.96001 19.2 re

W n 

0 0 0 rg

147.24001 613.67999 261.96001 7.08 re

B* 

Q

q

147.24001 571.32001 256.67999 19.2 re

W n 

0 0 0 rg

147.24001 577.44 250.67999 7.08 re

B* 

Q

0 0 0 rg

147.24001 541.32001 208.8 7.08 re

B* 

147.24001 505.08 202.44 7.08 re

B* 

147.24001 468.84 148.92 7.08 re

B* 

147.24001 432.60001 101.28 7.08 re

B* 

147.24001 396.48 104.52 7.08 re

B* 

147.24001 360.24001 51.36 7.08 re

B* 

147.24001 287.75999 28.08 7.08 re

B* 

147.24001 215.39999 169.2 7.08 re

B* 

147.24001 179.16 225.60001 7.08 re

B* 

147.24001 142.92 176.16 7.08 re

B* 

q

147.24001 100.67999 287.28 19.2 re

W n 

147.24001 106.8 281.28 7.08 re

B* 

Q

q

147.24001 64.92 339.96001 18.72 re

W n 

147.24001 70.56 333.96001 7.08 re

B* 

Q

0.12 w

486.72 646.2 m

147.24001 646.2 l

147.24001 651 m

147.24001 646.2 l

181.2 651 m

181.2 646.2 l

215.16 651 m

215.16 646.2 l

249.12 651 m

249.12 646.2 l

283.08 651 m

283.08 646.2 l

317.03999 651 m

317.03999 646.2 l

350.88 651 m

350.88 646.2 l

384.84 651 m

384.84 646.2 l

418.8 651 m

418.8 646.2 l

452.75999 651 m

452.75999 646.2 l

486.72 651 m

486.72 646.2 l

147.24001 646.2 m

147.24001 66.84 l

142.44 646.2 m

147.24001 646.2 l

142.44 609.96001 m

147.24001 609.96001 l

142.44 573.72 m

147.24001 573.72 l

142.44 537.60001 m

147.24001 537.60001 l

142.44 501.36 m

147.24001 501.36 l

142.44 465.12 m

147.24001 465.12 l

142.44 428.88 m

147.24001 428.88 l

142.44 392.75999 m

147.24001 392.75999 l

142.44 356.52 m

147.24001 356.52 l

142.44 320.28 m

147.24001 320.28 l

142.44 284.03999 m

147.24001 284.03999 l

142.44 247.92 m

147.24001 247.92 l

142.44 211.67999 m

147.24001 211.67999 l

142.44 175.44 m

147.24001 175.44 l

142.44 139.2 m

147.24001 139.2 l

142.44 103.08 m

147.24001 103.08 l

142.44 66.84 m

147.24001 66.84 l

S 

BT

/N19 1 Tf

0 -15.48 15.48 0 142.32001 678.48 Tm

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.50391 2.1938 TD

/N19 1 Tf (10%)Tj

T*

/N19 1 Tf (20%)Tj

T*

/N19 1 Tf (30%)Tj

T*

/N19 1 Tf (40%)Tj

T*

/N19 1 Tf (50%)Tj

0 2.186 TD

/N19 1 Tf (60%)Tj

0 2.1938 TD

/N19 1 Tf (70%)Tj

T*

/N19 1 Tf (80%)Tj

T*

/N19 1 Tf (90%)Tj

-0.50391 2.1938 TD

/N19 1 Tf (100%)Tj

10.9463 -10.9458 10.9458 10.9458 102.96001 655.92 Tm

/N19 1 Tf (s)Tj

0.38921 -0.00549 TD

0.0014 Tc

/N19 1 Tf [(wi)5.2 ]TJ /N19 1 Tf [(m)]TJ

0.2028 -1.64999 TD

0 Tc

/N19 1 Tf (t)Tj

0.2796 -0.00549 TD

/N19 1 Tf (o)Tj

0.49879 0.00549 TD

0.0005 Tc

/N19 1 Tf (mc)Tj

1.2224 -0.00549 TD

0 Tc

/N19 1 Tf (a)Tj

0.444 0.00549 TD

/N19 1 Tf (t)Tj

0.2796 -0.00549 TD

/N19 1 Tf (v)Tj

-0.25211 -1.6445 TD

0.0005 Tc

/N19 1 Tf (mg)Tj

1.27721 -0.00549 TD

0 Tc

/N19 1 Tf (r)Tj

0.3344 0.00549 TD

/N19 1 Tf (i)Tj

0.2796 -0.00549 TD

/N19 1 Tf (d)Tj

-0.52071 -1.6499 TD

/N19 1 Tf (s)Tj

0.38921 -0.00549 TD

/N19 1 Tf (u)Tj

0.49879 0.00549 TD

/N19 1 Tf (2)Tj

0.49879 -0.00549 TD

0.0056 Tc

/N19 1 Tf [(co)12.3 ]TJ /N19 1 Tf [(r)]TJ

0.32339 -1.64999 TD

0.0014 Tc

/N19 1 Tf (wa)Tj

1.1675 -0.00549 TD

0 Tc

/N19 1 Tf (v)Tj

0.49879 0.00549 TD

/N19 1 Tf (e)Tj

0.444 -0.00549 TD

/N19 1 Tf (5)Tj

0.54269 -1.64999 TD

/N19 1 Tf (a)Tj

0.444 -0.00549 TD

/N19 1 Tf (p)Tj

0.49879 0.00549 TD

/N19 1 Tf (s)Tj

0.38921 -0.00549 TD

/N19 1 Tf (i)Tj

-1.4142 -1.64439 TD

/N19 1 Tf (h)Tj

0.49879 -0.00549 TD

0.0051 Tc

/N19 1 Tf [(yd)11.8 ]TJ /N19 1 Tf [(ro)11.8 ]TJ /N19 1 Tf [(2d)]TJ

1.8801 -1.64999 TD

0 Tc

/N19 1 Tf (t)Tj

0.2796 -0.00549 TD

/N19 1 Tf (u)Tj

0.49879 0.00549 TD

/N19 1 Tf (r)Tj

0.3344 -0.00549 TD

/N19 1 Tf (b)Tj

0.49879 0.00549 TD

/N19 1 Tf (3)Tj

0.49879 -0.00549 TD

/N19 1 Tf (d)Tj

-0.0603 -1.6499 TD

/N19 1 Tf (a)Tj

0.444 -0.00549 TD

/N19 1 Tf (p)Tj

0.49879 0.00549 TD

/N19 1 Tf (p)Tj

0.49879 -0.00549 TD

/N19 1 Tf (l)Tj

0.2796 0.00549 TD

/N19 1 Tf (u)Tj

-0.1754 -1.6554 TD

/N19 1 Tf (f)Tj

0.3344 -0.00549 TD

/N19 1 Tf (p)Tj

0.49879 0.00549 TD

/N19 1 Tf (p)Tj

0.49879 -0.00549 TD

0.0043 Tc

/N19 1 Tf (pp)Tj

2.75169 -3.3 TD

0 Tc

/N19 1 Tf (F)Tj

0.5536 -0.00549 TD

/N19 1 Tf (I)Tj

0.3344 0.00549 TD

/N19 1 Tf (R)Tj

0.9976 -1.6555 TD

/N19 1 Tf (I)Tj

0.3344 -0.00549 TD

-0.0041 Tc

/N19 1 Tf (IR)Tj

0.14799 -1.64999 TD

0.00011 Tc

/N19 1 Tf (VMM)Tj

1.4855 -1.64999 TD

-0.00121 Tc

/N19 1 Tf (MM)Tj

1.78149 -0.00549 TD

0 Tc

/N19 1 Tf (M)Tj

0.3782 -1.64999 TD

0.0014 Tc

/N19 1 Tf (YU)Tj

1.4416 -0.00549 TD

0 Tc

/N19 1 Tf (V)Tj

/N21 1 Tf

18 0 0 18 172.32001 705.84 Tm

0.0005 Tc

0.00279 Tw

/N21 1 Tf (% of dynamic instructions eliminated)Tj

ET

1 1 1 rg

508.08 523.32001 24.96001 -333.60001 rf

508.08 189.72 25.08 333.72 re

S 

0.96001 w

514.32001 507.12 11.03999 11.03999 re

B* 

BT

/N19 1 Tf

0 -18 18 0 513.84 502.8 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (128 bits)Tj

ET

0.754 0.754 0.754 rg

514.32001 426.48 11.03999 11.03999 re

B* 

BT

0 -18 18 0 513.84 422.16 Tm

0 0 0 rg

/N19 1 Tf (256 bits)Tj

ET

0.5 0.5 0.5 rg

514.32001 345.84 11.03999 11.03999 re

B* 

BT

0 -18 18 0 513.84 341.52 Tm

0 0 0 rg

/N19 1 Tf (512 bits)Tj

ET

514.32001 265.2 11.03999 11.03999 re

B* 

BT

0 -18 18 0 513.84 260.8801 Tm

/N19 1 Tf (1024 bits)Tj

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font HGBNFM+TimesNewRomanPSMT

%%+ font HGBNKM+TimesNewRomanPS-BoldMT

%%EOF


%%EndDocument

 endTexFig
 150 1835 a Fv(Figure)39 b(7-1:)58 b(P)m(ercen)m(tage)42
b(of)e(dynamic)f(instructions)h(eliminated)d(using)j(the)h(SLP)f
(heuristic)150 1956 y(for)32 b(a)g(v)-5 b(ariet)m(y)33
b(of)f(h)m(yp)s(othetical)g(datapath)g(widths.)150 2241
y(alignmen)m(t)f(constrain)m(ts.)45 b(This)33 b(allo)m(w)m(ed)f(for)h
(a)g(maxim)m(um)d(degree)k(of)f(freedom)f(when)i(making)150
2421 y(pac)m(king)f(decisions.)296 2602 y(F)-8 b(or)24
b(the)h(m)m(ultimedia)c(b)s(enc)m(hmarks,)28 b(YUV)d(greatly)f(outp)s
(erforms)g(the)h(other)g(k)m(ernels.)42 b(This)150 2783
y(is)e(b)s(ecause)i(it)d(op)s(erates)i(on)f(16-bit)f(v)-5
b(alues)40 b(and)h(is)f(en)m(tirely)g(v)m(ectorizable.)67
b(The)41 b(remaining)150 2963 y(k)m(ernels)34 b(are)e(partially)e(v)m
(ectorizable)j(and)f(still)f(exhibit)h(large)f(p)s(erformance)h(gains.)
296 3144 y(F)-8 b(or)42 b(the)i(SPEC95fp)f(b)s(enc)m(hmark)h(suite,)h
(some)e(of)f(the)h(applications)e(exhibit)h(a)h(p)s(erfor-)150
3324 y(mance)28 b(degradation)f(as)h(the)h(datapath)e(width)h(is)g
(increased.)42 b(This)28 b(is)g(due)h(to)e(the)i(large)e(unroll)150
3505 y(factor)g(required)h(to)g(\014ll)e(a)h(wide)h(datapath.)42
b(If)27 b(the)h(dynamic)f(iteration)f(coun)m(ts)j(for)e(these)i(lo)s
(ops)150 3685 y(are)39 b(smaller)d(than)j(the)g(unroll)e(factor,)j(the)
f(unrolled)f(lo)s(op)f(is)h(nev)m(er)j(executed.)64 b(F)-8
b(or)38 b(turb3d)150 3866 y(and)28 b(applu,)h(the)g(optimal)c(unroll)i
(factor)h(is)g(four.)41 b(A)29 b(256-bit)d(datapath)i(is)g(therefore)h
(su\016cien)m(t)150 4047 y(since)36 b(it)f(can)h(accommo)s(date)e(four)
i(64-bit)e(op)s(erations.)52 b(In)36 b(fpppp,)i(the)e(most)f(time-in)m
(tensiv)m(e)150 4227 y(lo)s(op)40 b(is)h(already)g(unrolled)f(b)m(y)i
(a)f(factor)g(of)g(three.)71 b(A)42 b(192-bit)d(datapath)i(can)h(supp)s
(ort)g(the)150 4408 y(a)m(v)-5 b(ailable)30 b(parallelism)f(in)j(this)g
(situation.)150 4771 y Fw(7.2.2)136 b(Heuristic)46 b(vs.)60
b(Linear)45 b(Programming)h(Metho)t(ds)150 5016 y Fv(T)-8
b(able)26 b(7.3)f(compares)h(the)h(linear)d(programming)f(metho)s(d)i
(of)h(Chapter)g(3)g(to)g(the)g(SLP)g(heuristic)150 5197
y(algorithm)19 b(presen)m(ted)24 b(in)d(Chapter)h(4.)40
b(In)m(terestingly)-8 b(,)24 b(the)e(heuristic)g(approac)m(h)g(p)s
(erforms)f(m)m(uc)m(h)150 5377 y(b)s(etter)j(than)g(the)h(in)m(teger)e
(linear)g(programming)e(metho)s(ds.)40 b(This)24 b(is)g(due)g(to)g(the)
g(shortcuts)h(that)1901 5649 y(40)p eop
%%Page: 41 41
41 40 bop 1159 111 1582 4 v 1157 190 4 79 v 1209 166
a Ft(Benc)n(hmark)p 1605 190 V 1622 190 V 116 w(Heuristic)p
1998 190 V 100 w(Linear)23 b(Programming)p 2739 190 V
1159 193 1582 4 v 1159 210 V 1157 289 4 79 v 1209 265
a(swim)p 1605 289 V 1622 289 V 363 w(64.45\045)p 1998
289 V 521 w(64.23\045)p 2739 289 V 1159 292 1582 4 v
1157 371 4 79 v 1209 347 a(tomcatv)p 1605 371 V 1622
371 V 270 w(61.28\045)p 1998 371 V 521 w(61.06\045)p
2739 371 V 1159 374 1582 4 v 1157 453 4 79 v 1209 430
a(mgrid)p 1605 453 V 1622 453 V 340 w(55.13\045)p 1998
453 V 521 w(22.49\045)p 2739 453 V 1159 457 1582 4 v
1157 535 4 79 v 1209 512 a(su2cor)p 1605 535 V 1622 535
V 326 w(48.73\045)p 1998 535 V 521 w(35.91\045)p 2739
535 V 1159 539 1582 4 v 1157 618 4 79 v 1209 594 a(w)n(a)n(v)n(e5)p
1605 618 V 1622 618 V 339 w(37.25\045)p 1998 618 V 521
w(15.34\045)p 2739 618 V 1159 621 1582 4 v 1157 700 4
79 v 1209 676 a(apsi)p 1605 700 V 1622 700 V 400 w(29.93\045)p
1998 700 V 521 w(19.75\045)p 2739 700 V 1159 703 1582
4 v 1157 782 4 79 v 1209 758 a(h)n(ydro2d)p 1605 782
V 1622 782 V 272 w(26.17\045)p 1998 782 V 521 w(18.00\045)p
2739 782 V 1159 785 1582 4 v 1157 864 4 79 v 1209 841
a(turb3d)p 1605 864 V 1622 864 V 315 w(24.76\045)p 1998
864 V 521 w(14.82\045)p 2739 864 V 1159 868 1582 4 v
1157 946 4 79 v 1209 923 a(applu)p 1605 946 V 1622 946
V 350 w(22.56\045)p 1998 946 V 521 w(19.67\045)p 2739
946 V 1159 950 1582 4 v 1157 1029 4 79 v 1209 1005 a(fpppp)p
1605 1029 V 1622 1029 V 379 w(8.14\045)p 1998 1029 V
717 w(-)p 2739 1029 V 1159 1032 1582 4 v 1159 1049 V
150 1209 a Fv(T)-8 b(able)26 b(7.3:)41 b(P)m(ercen)m(tage)28
b(of)e(dynamic)g(instructions)h(eliminated)d(using)i(the)h(SLP)h
(heuristic)e(and)150 1329 y(in)m(teger)32 b(linear)f(programming)f
(metho)s(ds)i(on)h(a)f(256-bit)f(datapath.)p 1399 1668
1103 4 v 1397 1747 4 79 v 1449 1723 a Ft(Benc)n(hmark)p
1845 1747 V 1861 1747 V 204 w(SLP)p 2180 1747 V 120 w(V)-6
b(ector)p 2500 1747 V 1399 1750 1103 4 v 1399 1766 V
1397 1845 4 79 v 1449 1822 a(swim)p 1845 1845 V 1861
1845 V 305 w(64.45\045)p 2180 1845 V 100 w(62.29\045)p
2500 1845 V 1399 1849 1103 4 v 1397 1927 4 79 v 1449
1904 a(tomcatv)p 1845 1927 V 1861 1927 V 212 w(61.28\045)p
2180 1927 V 100 w(56.87\045)p 2500 1927 V 1399 1931 1103
4 v 1397 2010 4 79 v 1449 1986 a(mgrid)p 1845 2010 V
1861 2010 V 282 w(55.13\045)p 2180 2010 V 100 w(34.29\045)p
2500 2010 V 1399 2013 1103 4 v 1397 2092 4 79 v 1449
2068 a(su2cor)p 1845 2092 V 1861 2092 V 268 w(48.73\045)p
2180 2092 V 100 w(44.20\045)p 2500 2092 V 1399 2095 1103
4 v 1397 2174 4 79 v 1449 2150 a(w)n(a)n(v)n(e5)p 1845
2174 V 1861 2174 V 281 w(37.25\045)p 2180 2174 V 100
w(28.73\045)p 2500 2174 V 1399 2177 1103 4 v 1397 2256
4 79 v 1449 2233 a(apsi)p 1845 2256 V 1861 2256 V 342
w(29.93\045)p 2180 2256 V 100 w(15.89\045)p 2500 2256
V 1399 2260 1103 4 v 1397 2338 4 79 v 1449 2315 a(h)n(ydro2d)p
1845 2338 V 1861 2338 V 214 w(26.17\045)p 2180 2338 V
100 w(22.91\045)p 2500 2338 V 1399 2342 1103 4 v 1397
2421 4 79 v 1449 2397 a(turb3d)p 1845 2421 V 1861 2421
V 257 w(24.76\045)p 2180 2421 V 100 w(20.35\045)p 2500
2421 V 1399 2424 1103 4 v 1397 2503 4 79 v 1449 2479
a(applu)p 1845 2503 V 1861 2503 V 292 w(22.56\045)p 2180
2503 V 100 w(14.67\045)p 2500 2503 V 1399 2506 1103 4
v 1397 2585 4 79 v 1449 2561 a(fpppp)p 1845 2585 V 1861
2585 V 321 w(8.14\045)p 2180 2585 V 135 w(0.00\045)p
2500 2585 V 1399 2588 1103 4 v 1399 2605 V 1397 2684
4 79 v 1449 2660 a(FIR)p 1845 2684 V 1861 2684 V 341
w(45.37\045)p 2180 2684 V 100 w(73.63\045)p 2500 2684
V 1399 2687 1103 4 v 1397 2766 4 79 v 1449 2742 a(I)r(IR)p
1845 2766 V 1861 2766 V 360 w(60.59\045)p 2180 2766 V
100 w(43.63\045)p 2500 2766 V 1399 2769 1103 4 v 1397
2848 4 79 v 1449 2825 a(VMM)p 1845 2848 V 1861 2848 V
281 w(43.37\045)p 2180 2848 V 100 w(60.59\045)p 2500
2848 V 1399 2852 1103 4 v 1397 2930 4 79 v 1449 2907
a(MMM)p 1845 2930 V 1861 2930 V 269 w(73.63\045)p 2180
2930 V 100 w(45.37\045)p 2500 2930 V 1399 2934 1103 4
v 1397 3013 4 79 v 1449 2989 a(YUV)p 1845 3013 V 1861
3013 V 305 w(93.59\045)p 2180 3013 V 100 w(93.59\045)p
2500 3013 V 1399 3016 1103 4 v 150 3176 a Fv(T)e(able)33
b(7.4:)43 b(P)m(ercen)m(tage)35 b(of)e(dynamic)f(instructions)g
(eliminated)f(using)h(SLP)i(and)f(v)m(ector)h(par-)150
3297 y(allelization)28 b(on)33 b(a)f(256-bit)f(datapath.)150
3690 y(w)m(ere)c(required)e(to)g(pro)s(duce)h(a)f(solv)-5
b(able)24 b(linear)f(programming)f(problem.)40 b(Sp)s(eci\014cally)-8
b(,)26 b(none)f(of)150 3870 y(the)32 b(b)s(enc)m(hmarks)h(could)e(b)s
(e)g(analyzed)h(in)e(three-address)k(form.)41 b(More)32
b(imp)s(ortan)m(tly)-8 b(,)30 b(most)g(of)150 4051 y(the)e(b)s(enc)m
(hmarks)g(w)m(ere)g(tested)h(with)e(a)f(limitation)d(on)k(the)g(n)m(um)
m(b)s(er)h(of)f(pac)m(king)g(p)s(erm)m(utations)150 4231
y(attempted.)43 b(This)33 b(did)f(not)h(allo)m(w)e(for)h(a)g(complete)g
(searc)m(h)i(of)e(all)e(pac)m(king)j(p)s(ossibilities.)150
4595 y Fw(7.2.3)136 b(SLP)44 b(vs.)60 b(V)-11 b(ector)45
b(Extraction)150 4840 y Fv(In)j(T)-8 b(able)48 b(7.4)f(and)h(Figure)f
(7-2)g(w)m(e)h(compare)g(the)g(SLP)g(algorithm)d(to)i(the)i(v)m
(ectorization)150 5021 y(tec)m(hnique)42 b(describ)s(ed)g(in)f(Chapter)
h(5.)68 b(F)-8 b(or)41 b(the)g(m)m(ultimedia)d(b)s(enc)m(hmarks,)44
b(b)s(oth)d(metho)s(ds)150 5201 y(p)s(erform)35 b(iden)m(tically)-8
b(.)52 b(Ho)m(w)m(ev)m(er,)40 b(there)d(are)f(man)m(y)g(cases)i(in)d
(the)i(scien)m(ti\014c)f(applications)e(for)150 5382
y(whic)m(h)41 b(the)g(SLP)g(algorithm)c(is)j(able)g(to)h(\014nd)g
(additional)c(pac)m(king)k(opp)s(ortunities.)66 b(In)41
b(fact,)1901 5649 y(41)p eop
%%Page: 42 42
42 41 bop 734 330 a
 18945146 12882692 5065195 3815342 48941629 33877606 startTexFig

 doclip
 734 330 a
%%BeginDocument: figures/gr2.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000418223434)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 77 58 744 515

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



77 58 moveto

744 58 lineto

744 515 lineto

77 515 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font HOCCAL+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /HOCCAL+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/a 273 RD 

b8f8880df7a097159a7f9f85a58b08a18b9f909c96089d979b9c9ba3087e

960581808385828b08878b878c888e08878d898f8990088a928a978ba008

f745078bbc89ab869908849e7aa0729d08729e6994608b08668b69856a80

086980727b787608787482768b74088b78927e997f08987e9c85a08b089f

8b9a91979608979691998b9b088a9785997f9908829586938b92088c948f

9193910899949c90a08b08998b9688958408978491838f82088f838d758b

69085d07265c4a666d6f086d717c6b8b68088b7194769c7a089c79a183a5

8b08b78bbda4c3bc088e7294789a7f080937cb157d8b808f8394087f9787

988b9a08899c929d989d089ea5a8a4b2a2088dfb2c05747879827b8b088a

06090e ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/d 200 RD 

b2f8c00df77ff92b157607a18b9a89938608918792848f82088d838d778b

6808fb1f0778a0799a7a93087a94788f758b086a8b6b816e77086d78746d

7a64087b65825f8b5a088b4d9958a66108ac55b972c58b08a38b9f909d95

089c95a09ea2a7084307f755b0059c07798c7e8e84900883928692889608

8b9089a08bae08f8a207fb5f8c0509cdfcba15725e70756f8b087d8b818e

8491087c98809f83a70882a587b68bc4088bc18fb193a40891a5959d9795

089490948f978b08ae8ba874a35d08fb8407090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/f 182 RD 

abf7e10df7a1f82d15bb0747068ac505e1078b9b8e989193089293928f94

8b08958b90899086088f878d868b84088b888a858a860889808a868b8808

8b819081958208958299879c8b089d8b9c90979608979691988b9a088b9b

819d789a0878996d93638b08518b5c7b696c08696c7a648b5c0874076a07

4b065b07cb068cfbd1058b70897c8883088882858582870882877c88768b

088d7a05f79f068d9c056d8a79918197088492889f8baa088af7d105cf06

090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/l 70 RD 

a0f7aa0d8af92b157a07a18a9a8693820892818f778b6b08fc6d078b6888

7884830881817c84768a087a07f78d069c07758e7c8f8394088495879f8b

ac08f8cc07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/s 223 RD 

b3f8190df79df86915837f85848789088988858a858b08878b838e829008

75967392728b085d8b687d736f08736d7f6c8b68088b6b966da070089a7b

ab70bd6908ab72a17b958008967f8f7e8b7b088b7e867f81810882827e86

7b8b08748b739672a00872a077ab7cb6087a0693fb38059c06929c949396

8b088e8b9289958708ae7ea884a18b08a88ba492a29808a1979d9e98a308

98a491a38ba4088ba983a37ca2087da16ba75bab085dab6ea28198088294

89938b94088b96909694940894939690988b08a28b9f83a07a08a079a06c

9f5d089a0686f730057906090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/y 201 RD 

93f8880df7725215795a7c6c7e7d0882828386838b08868b878d888f0889

8d89948b97088ba2859b81960883947d917b8b08798b7d857f7f08817d84

7c8b78088c7693789c7b089b7ca183a68b08ad8ba799a1a6089c9ea3bfac

e008f715f7e705a3c59aad949508959697909a8d088a9c05fb2a06897a05

a18a988793840894848f818b7f088a77826878590855fb1f053df748057b

b383a28b98088a928f929291089090978f9b8c089c07fb87067a079a8498

84967f0894809c6ba15708f728fbe7057d6505090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HOCCAL+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 121 /y put

pop

%%EndResource

[/N21/HOCCAL+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font HOCBMK+TimesNewRomanPSMT

11 dict begin

/FontName /HOCBMK+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/F 175 RD 

9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08

9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f

8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d

0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06

a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685

6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 

/I 108 RD 

a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8

41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b

87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b

7783708b0873067907f7b0069d077306090e ND 

/L 132 RD 

9ff8f70df88be8157a78787e76840878826688588b085c065f8b728d838e

08838e85908792088595899e8ba608f836078bb28ea49095089095959499

92089990a48fae8b089d07fbc0067907a406a48b9e84987d08938090728b

6208fc41078b6388748481087f7977826f8b0872067907f89506c4f74805

7b8e057a627a6d7a7808090e ND 

/M 168 RD 

9cfa0d0df82c16f793f8c205fc4f078b668773848108807977836e8b0873

067907f7b0069d077406708b78927f9908819487a58bb408f845078bb08f

a3929508979d9f93a88b08a2069d07fb5006fb81fc9a05fb83f89a05fb52

067907a68b9f8897850899849384908208907b8f778b6e08fc45078b6687

738481087f7977836f8b0873067907f77d069d077306718b77927f990883

9486a58bb408f84f07f794fcc2059b06090e ND 

/P 190 RD 

9cf8c00df78cf7c0159d899c8a9b8b08cd8bbd9cafad08aead9db78bc108

8bb27fae74a80873a86ea069970869975c91508b08fb87067907a406a48b

9e84987d08938090728b6108fc41078b6588738481087f7977826f8b0872

067907f7b0069d077206718b79927f9908819687a48bb508f75607a0869f

889e8808094ff7ce15a591a08e9c8b08a68ba485a07f08a07e9c79977208

967491708b6e088b617f6973710871716f7e698b08818b808c7e8d087d8c

7c8e7a8e08f7a707090e ND 

/R 220 RD 

9cf92f0df9279d15678f6e94759908739a71a86cb708fb1df75205c296b4

a1a6a908a6a998ae8bb4088bb27fac74a70874a46f9f6a95086896589045

8b08fb87068d7905a206a68b9d84987d08938090728b6108fc41078b6588

738481087f7977826f8b0872067907f7b0069d077106738b78927f990881

9687a48bb508f75507908b908b908b088f89908c8f8b08958b988b9b8c08

f776fbca05f745069d0709fc6af8eb15ab91a48e9e8b08b58bad7ea57108

a47198698b62088b617b686b70086c6f5b7e4d8b08888a878c878b08868b

868b858b08f7a807090e ND 

/S 263 RD 

caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308

639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975

9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b

8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3

087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893

8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f

b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77

a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08

a67ca1769a71089b719568915f089d06f779077906090e ND 

/U 194 RD 

90f9660df886f91915a48b9e84987d08938090728b6208fba0078b42855a

7e6e087f6d737369780869796481608b08698b6f9174970872977a9a7f9e

087e9e83a586ac0886ac89a98ba508f7b5078bae8fa4939708979d9e93a6

8b08a606899d05fbb006897905a606a28b9e85967e08977e90708b6208fb

97078b3d9054956e089c60a56ab07208b171c27fd38b08cc8bc098b2a508

b1a6a5aa98b00899af91bf8bcd08f7a1078bb08ea292950899a19f96a58b

08a4069d07fb7d067907a406090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/Y 188 RD 

94f9660df869f919159c8b9889948708948792869084088e828e848b8208

8c7b8175776c08fb16fb6005fb1ef76a0577a881a18b97088b9991969892

089993998e9a8b0899068c9d05fbaf067907978b9489928808a4809b8193

830891839b77a06b08f749fbac05fb2f078b6487748481087f7977836f8b

0873067907f7b0069d077506708b77927e9908839486a58bb408f73d07f7

33f78d059faa9ba2989908999a99959b93089d92968f938b089a06889d05

fb78068a7905090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/b 170 RD 

89f8880df730f94b157506fb1b54059279059890978e948b08938b918990

870892868e848d7f088e7e8c6c8b5808fc6207a77aa67ca68208a680a587

a58b08c48bbda0b8b508c0baa5cb8bda088bd27abf69b20869b3639e5d8b

08598b5c6d604e08f7d90709bdfbd1159c949c8f9c8b08ad8ba87ca56c08

a26c995f8b52088b4e7e5b716b08736a6f7b6d8b08788b798f7993087a94

79977a9b088df79f059d9e9d989892088b06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/d 205 RD 

acf8880df7ce7e15a206f719c205869d057c858088828b08828c858d8690

08868f879489970888948aac8bbf08f899077506fb1a54059179059a9096

8e948b08918b928990870892868e848d7f088e7f8c6c8b5808380771a56a

97648b084c8b5770635608625677508b4b088b4c9d56af6208b163b576bc

8b08a28ba290a09508a095a09ca1a2084a070935c115688b6b9c6eae086e

af7dbd8bcd088bcb9abda9ad08a1a4a598a88b08998b9b869b82089c8297

7d957908967990778d7508fb79076f6b6e7d6d8b088c06090e ND 

/e 146 RD 

b0f8500df80ef7ab158bc27bb76bac086aad629b598b08508b5a76646008

636078508b3f088b439e54b16108b261b976c18b08bb8bb59dacb008abaf

9fb492b8087c95057c64796f757b08767b71836e8b085f8b659e6ab1086b

af7bbf8bcd08f7c98c0509fba4f70815a1a0a395a68b089c8b9c869b8108

9c7f977d93790890808f768d6e08fb650691b296a7a0a108090e ND 

/f 179 RD 

b2f7e10df7aef83115ae07fb0706ab078bd18db6909c088f9a9398959308

9693978f9a8b08988b96889585089685967f977908967a967f9386089486

9388938b08938b958f93940894938f948b95088b9d829b789a086da16c96

698b08668b6a826d78086e7775737d6c087c6c84658b5f086e0734066807

e206fbbb078b6b89768780088780848280850880847f887e8b0877067907

f7a0069d076206778b7b927f9908819787a58bb408f7bb07f70706090e ND 

/g 385 RD 

a9f8880dc4ee15827b867e8b80088b808e82928308938396829c81086d6b

7a798988087976807a857f08888389838b83088b7a977aa37b08b76ebf7d

ca8b08de8bcda3bebb08acaa9dae8bb0088ba582a2799d08799e73966d8f

08768e608d488d08668d748c828c087d8d808f869008849189908b91088b

908e939094088f979595999708a384a188a18b08c18bb59aaba908aba79b

af8bb5088bb082a979a208c4069b8b928b8d8c088e8d8c8c8c8d088e8d8b

928b93088b928a90898e088a8e898c898c08898b838c7d8b082c066da066

95608b08578b617b6a6b08686c7b658b5f088b6c92719a73089975a077a6

7e086b6f7575827c0809f768f7c615a26e96638b57088b63836e7b79087b

787782728b08728b75967aa00875a780b38bbe088bb393a89b9e089c9f9f

94a38b08a48ba1809c76088a06099bfc3415bd8aac879c84089c8293808b

7a088b747d756f760870766081518b084c8b5d956b9f08779782988b9b08

8b978f98939908929b979a9a9c08b384c388d489088b06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/l 103 RD 

a9f7aa0df71af94b15fb1954059379059990958e938b08948b9189908708

8f868f848d80088e7e8c6d8b5908fc2b078b708978878108868286848487

0882857e8a768b087907f76f069d07748b7b8d8390088290859287940887

93899e8ba708f8e6077506090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/p 235 RD 

88f8880d93f818159790958d938b08948b938991870890878f858e83088e

848c788b6e08fc3d078b6d8976888308878286868587087f847b87798b08

7f067907f77f069d07728d7a8c829008829184918793088994889e8baa08

f71c079b7d9a819886089d85a087a38b08c28bb9a0b0b408b6bda2cb8bd8

088bd179c366b6086dad669d5e8b08708b7383747b08737c746f746408f3

077806fb1d5405917b0509f76482159b939a8f9b8b08a78ba47ea07208a9

669a568b46088b507e5b716a087672717e6a8b08708b74927999087b9a7f

9b869e08899789a28baf08f73b07a6ab9e9b9791088b06090e ND 

/r 168 RD 

91f7e10df71cf86115fb1b54059079059790968d958b08958c9188918608

91878f838d81088d838c6b8b5708fb41078b718a7b898508898185828386

087f837b88748b087907f779069d07778b7c8e8091088090849387940883

97899e8ba408f76a079baa9aa19a98089092928e918b08928b9585998008

9a809785968b08988b958f939408929490968b98088b9985987f96088095

7c91798b08658b6469664808f0077606090e ND 

/s 212 RD 

bcf8190df793f86115878388868889088888878a868b08858b808e7a9008

7392758f798b08648b6a7f72720871727f6c8b66088b6f92739a7808997a

aa75ba7408bb73aa789b7c089b7b93788b75088b79847b7d7e087c7d7985

758b086b8b6e9771a20872a279ae82b9087b06fb34079b068f919190938b

08918b9489968808ae82aa86a68b08b28bad97aaa408aaa59bab8bb40889

bf6bb649ab0844ae056b997799819808829a85998b9d088b9c9297999708

99979d91a28b08a98ba4829e7a089d7a9b6a975b089d0689f72c057c8c05

090e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/u 171 RD 

8cf8880df7a2f854157907a88a9e8694820896838f798b7108fb91077372

767b79820879817b877d8b08778b79927d98087c9784a78bb508f7c007fb

31067907a38b9b89948708948692859083088e838e7c8b7608fb5c078b62

8f6a927408927598789d7d089d7ca184a48b08a28ba0909f96089f96a8a5

b1b4088d2d059f06f71cc205829d0581857e88818b08848c858d86900884

8f889389960888978aaa8bbe08f7a407fb2d06090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

/y 212 RD 

91f8880d8af842159c8797869386088e889383938008967a937f908108f7

34fbe5056d3d057e6e80787f810880818086818b08898b828d7e90087892

7c8e808b087d8b7e87828308828287808b7d088a7e927e978008977f9b86

9e8b08a68ba696a8a108a7a2a2ac9db608f74af85405939d91998e900892

949393928f08908f958d978c089d07fb25068a79059a8d94899189089189

8f888e87088c898d868b85088a7e897e857e0828fb8c05fb02f77705819f

859e8b98088b948e939291089592958e9a8b0894068c9d05fb67068c7905

090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HOCBMK+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 70 /F put

dup 73 /I put

dup 76 /L put

dup 77 /M put

dup 80 /P put

dup 82 /R put

dup 83 /S put

dup 85 /U put

dup 86 /V put

dup 89 /Y put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N19/HOCBMK+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

77 58 667 457 re W n

[ 0 1 -1 0 802 -19 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

187.2 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

187.32001 637.44 m

187.32001 66.84 l

S 

0 0 0 RG

187.32001 637.44 m

187.32001 66.84 l

S 

Q

q

1 i

219.96001 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

220.08 637.44 m

220.08 66.84 l

S 

0 0 0 RG

220.08 637.44 m

220.08 66.84 l

S 

Q

q

1 i

252.84 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

252.96001 637.44 m

252.96001 66.84 l

S 

0 0 0 RG

252.96001 637.44 m

252.96001 66.84 l

S 

Q

q

1 i

285.72 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

285.84 637.44 m

285.84 66.84 l

S 

0 0 0 RG

285.84 637.44 m

285.84 66.84 l

S 

Q

q

1 i

318.48 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

318.60001 637.44 m

318.60001 66.84 l

S 

0 0 0 RG

318.60001 637.44 m

318.60001 66.84 l

S 

Q

q

1 i

351.36 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

351.48 637.44 m

351.48 66.84 l

S 

0 0 0 RG

351.48 637.44 m

351.48 66.84 l

S 

Q

q

1 i

384.24001 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

384.36 637.44 m

384.36 66.84 l

S 

0 0 0 RG

384.36 637.44 m

384.36 66.84 l

S 

Q

q

1 i

417.12 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

417.24001 637.44 m

417.24001 66.84 l

S 

0 0 0 RG

417.24001 637.44 m

417.24001 66.84 l

S 

Q

q

1 i

449.88 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

450 637.44 m

450 66.84 l

S 

0 0 0 RG

450 637.44 m

450 66.84 l

S 

Q

q

1 i

482.75999 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

482.88 637.44 m

482.88 66.84 l

S 

0 0 0 RG

482.88 637.44 m

482.88 66.84 l

S 

Q

0 0 0 RG

1 J

1 j

0.12 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

154.44 66.84 328.44 570.60001 re

S 

1 1 1 rg

0 j

0.96001 w

154.44 619.8 204.60001 11.75999 re

B* 

154.44 584.16 186.84 11.75999 re

B* 

154.44 548.39999 112.67999 11.88 re

B* 

154.44 512.75999 145.2 11.75999 re

B* 

154.44 477.12 94.32001 11.75999 re

B* 

154.44 441.48 52.2 11.75999 re

B* 

154.44 405.84 75.24001 11.75999 re

B* 

154.44 370.08 66.84 11.88 re

B* 

154.44 334.44 48.24001 11.75999 re

B* 

154.44 227.52 149.03999 11.75999 re

B* 

154.44 191.88 198.96001 11.75999 re

B* 

154.44 156.12 142.44 11.88 re

B* 

q

154.44 114.36 247.8 23.88 re

W n 

154.44 120.48 241.8 11.75999 re

B* 

Q

q

154.44 78.72 313.44 23.88 re

W n 

154.44 84.84 307.44 11.75999 re

B* 

Q

0.19901 0.19901 0.19901 rg

154.44 607.92 211.67999 11.75999 re

B* 

154.44 572.28 201.24001 11.75999 re

B* 

154.44 536.52 181.08 11.75999 re

B* 

154.44 500.88 160.08 11.75999 re

B* 

154.44 465.24001 122.39999 11.75999 re

B* 

154.44 429.60001 98.28 11.75999 re

B* 

154.44 393.96001 85.92 11.75999 re

B* 

154.44 358.2 81.36 11.75999 re

B* 

154.44 322.56 74.03999 11.75999 re

B* 

154.44 286.92 26.75999 11.75999 re

B* 

154.44 215.64 149.03999 11.75999 re

B* 

154.44 180 198.96001 11.75999 re

B* 

154.44 144.24001 142.44 11.75999 re

B* 

q

154.44 102.48 247.8 23.88 re

W n 

154.44 108.60001 241.8 11.75999 re

B* 

Q

q

154.44 66.84 313.44 23.88 re

W n 

154.44 72.96001 307.44 11.75999 re

B* 

Q

0.12 w

482.88 637.44 m

154.44 637.44 l

154.44 642.84 m

154.44 637.44 l

187.32001 642.84 m

187.32001 637.44 l

220.08 642.84 m

220.08 637.44 l

252.96001 642.84 m

252.96001 637.44 l

285.84 642.84 m

285.84 637.44 l

318.60001 642.84 m

318.60001 637.44 l

351.48 642.84 m

351.48 637.44 l

384.36 642.84 m

384.36 637.44 l

417.24001 642.84 m

417.24001 637.44 l

450 642.84 m

450 637.44 l

482.88 642.84 m

482.88 637.44 l

154.44 637.44 m

154.44 66.84 l

149.03999 637.44 m

154.44 637.44 l

149.03999 601.8 m

154.44 601.8 l

149.03999 566.16 m

154.44 566.16 l

149.03999 530.39999 m

154.44 530.39999 l

149.03999 494.75999 m

154.44 494.75999 l

149.03999 459.12 m

154.44 459.12 l

149.03999 423.48 m

154.44 423.48 l

149.03999 387.84 m

154.44 387.84 l

149.03999 352.08 m

154.44 352.08 l

149.03999 316.44 m

154.44 316.44 l

149.03999 280.8 m

154.44 280.8 l

149.03999 245.16 m

154.44 245.16 l

149.03999 209.52 m

154.44 209.52 l

149.03999 173.88 m

154.44 173.88 l

149.03999 138.12 m

154.44 138.12 l

149.03999 102.48 m

154.44 102.48 l

149.03999 66.84 m

154.44 66.84 l

S 

BT

/N19 1 Tf

0 -17.28 17.28 0 148.92 673.44 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.5 1.9028 TD

/N19 1 Tf (10%)Tj

0 1.8958 TD

/N19 1 Tf (20%)Tj

0 1.9028 TD

/N19 1 Tf (30%)Tj

T*

/N19 1 Tf (40%)Tj

0 1.8958 TD

/N19 1 Tf (50%)Tj

0 1.9028 TD

/N19 1 Tf (60%)Tj

T*

/N19 1 Tf (70%)Tj

T*

/N19 1 Tf (80%)Tj

0 1.8958 TD

/N19 1 Tf (90%)Tj

-0.5 1.9028 TD

/N19 1 Tf (100%)Tj

12.2189 -12.2184 12.2184 12.2184 104.75999 650.52 Tm

/N19 1 Tf (s)Tj

0.38789 0.0049 TD

0.00459 Tc

/N19 1 Tf [(wi)7.39999 ]TJ /N19 1 Tf [(m)]TJ

0.0098 -1.46339 TD

0 Tc

/N19 1 Tf (t)Tj

0.27991 0.0049 TD

-0.0014 Tc

/N19 1 Tf (omcat)Tj

2.44051 -0.005 TD

0 Tc

/N19 1 Tf (v)Tj

-0.4272 -1.4585 TD

/N19 1 Tf (m)Tj

0.78081 0.0049 TD

/N19 1 Tf (g)Tj

0.496 -0.0049 TD

0.0009 Tc

/N19 1 Tf (ri)Tj

0.6138 0.0049 TD

0 Tc

/N19 1 Tf (d)Tj

-0.7169 -1.46339 TD

/N19 1 Tf (s)Tj

0.38789 0.0049 TD

0.00031 Tc

/N19 1 Tf (u2cor)Tj

1.1196 -1.46339 TD

0 Tc

/N19 1 Tf (w)Tj

0.7218 0.0049 TD

-0.00121 Tc

/N19 1 Tf (ave5)Tj

1.74319 -1.46831 TD

0 Tc

/N19 1 Tf (a)Tj

0.4469 0.0049 TD

/N19 1 Tf (p)Tj

0.496 -0.0049 TD

/N19 1 Tf (s)Tj

0.38789 0.0049 TD

/N19 1 Tf (i)Tj

-1.591 -1.4633 TD

0.0009 Tc

/N19 1 Tf (hy)Tj

0.9968 0.0049 TD

/N19 1 Tf (dro2d)Tj

1.1785 -1.46339 TD

0 Tc

/N19 1 Tf (t)Tj

0.27991 0.0049 TD

0.0009 Tc

/N19 1 Tf (ur)Tj

0.8299 -0.0049 TD

/N19 1 Tf (b3d)Tj

0.7415 -1.4585 TD

0 Tc

/N19 1 Tf (a)Tj

0.4469 0.0049 TD

/N19 1 Tf (p)Tj

0.496 -0.0049 TD

0.0009 Tc

/N19 1 Tf (pl)Tj

0.78081 0.0049 TD

0 Tc

/N19 1 Tf (u)Tj

-0.3732 -1.46339 TD

0.0009 Tc

/N19 1 Tf (fp)Tj

0.8299 0.0049 TD

/N19 1 Tf (ppp)Tj

2.86771 -2.9268 TD

0 Tc

/N19 1 Tf (F)Tj

0.5549 0.0049 TD

0.0009 Tc

/N19 1 Tf (IR)Tj

1.1196 -1.46339 TD

/N19 1 Tf (II)Tj

0.6629 0.0049 TD

0 Tc

/N19 1 Tf (R)Tj

-0.3634 -1.46339 TD

/N19 1 Tf (V)Tj

0.7218 0.0049 TD

/N19 1 Tf (M)Tj

0.88879 -0.0049 TD

/N19 1 Tf (M)Tj

-0.3192 -1.4584 TD

/N19 1 Tf (M)Tj

0.88879 0.0049 TD

/N19 1 Tf (M)Tj

0.88879 -0.0049 TD

/N19 1 Tf (M)Tj

0.1817 -1.4585 TD

/N19 1 Tf (Y)Tj

0.7218 0.0049 TD

/N19 1 Tf (U)Tj

0.7218 -0.0049 TD

/N19 1 Tf (V)Tj

/N21 1 Tf

20.03999 0 0 20.03999 157.8 703.44 Tm

0.00031 Tc

0.00121 Tw

/N21 1 Tf (% of dynamic instructions eliminated)Tj

ET

1 1 1 rg

505.92 570.36 27.12 -436.32001 rf

505.92 134.03999 27.24001 436.44 re

S 

0.96001 w

512.28 552.36 12.36 12.36 re

B* 

BT

/N19 1 Tf

0 -20.03999 20.03999 0 511.8 547.56 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (Vector Parallelism)Tj

ET

0.19901 0.19901 0.19901 rg

512.28 377.39999 12.36 12.36 re

B* 

BT

0 -20.03999 20.03999 0 511.8 372.60001 Tm

0 0 0 rg

/N19 1 Tf (Superword Level Parallelism)Tj

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font HOCCAL+TimesNewRomanPS-BoldMT

%%+ font HOCBMK+TimesNewRomanPSMT

%%EOF


%%EndDocument

 endTexFig
 150 2165 a Fv(Figure)47 b(7-2:)72 b(P)m(ercen)m(tage)50
b(of)d(dynamic)g(instructions)g(eliminated)e(using)i(SLP)h(and)g(v)m
(ector)150 2285 y(parallelization)28 b(on)33 b(a)f(256-bit)e(datapath.)
734 3047 y
 18945146 13261598 5065195 4341596 48415375 34864332 startTexFig

 doclip
 734 3047 a
%%BeginDocument: figures/gr3.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000418223541)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 77 66 736 530

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



77 66 moveto

736 66 lineto

736 530 lineto

77 530 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font HPCHOG+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /HPCHOG+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/a 273 RD 

b8f8880df7a097159a7f9f85a58b08a18b9f909c96089d979b9c9ba3087e

960581808385828b08878b878c888e08878d898f8990088a928a978ba008

f745078bbc89ab869908849e7aa0729d08729e6994608b08668b69856a80

086980727b787608787482768b74088b78927e997f08987e9c85a08b089f

8b9a91979608979691998b9b088a9785997f9908829586938b92088c948f

9193910899949c90a08b08998b9688958408978491838f82088f838d758b

69085d07265c4a666d6f086d717c6b8b68088b7194769c7a089c79a183a5

8b08b78bbda4c3bc088e7294789a7f080937cb157d8b808f8394087f9787

988b9a08899c929d989d089ea5a8a4b2a2088dfb2c05747879827b8b088a

06090e ND 

/b 184 RD 

a0f8c00df92b047a079c8a9788928708918791848e82088c848d7b8b7008

fcd9079c06d6bc059e7a9e7f9e83089e82a188a48b08b58bb196aca008ad

a0a5aa9fb4089fb395b88bbd088bb883b27bad087cab75a66f9d08709e6d

946c8b085e8b617765630889f79105fb500609f7a1fb8d15a18b9c829878

089c71945b8b45088b428759836f08836f81787f820880827c867a8b0879

8b7b917f97087d96849b889e0889978aa58bb408f75f07a5aaa69ba78b08

8a06090e ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/d 200 RD 

b2f8c00df77ff92b157607a18b9a89938608918792848f82088d838d778b

6808fb1f0778a0799a7a93087a94788f758b086a8b6b816e77086d78746d

7a64087b65825f8b5a088b4d9958a66108ac55b972c58b08a38b9f909d95

089c95a09ea2a7084307f755b0059c07798c7e8e84900883928692889608

8b9089a08bae08f8a207fb5f8c0509cdfcba15725e70756f8b087d8b818e

8491087c98809f83a70882a587b68bc4088bc18fb193a40891a5959d9795

089490948f978b08ae8ba874a35d08fb8407090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/l 70 RD 

a0f7aa0d8af92b157a07a18a9a8693820892818f778b6b08fc6d078b6888

7884830881817c84768a087a07f78d069c07758e7c8f8394088495879f8b

ac08f8cc07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/s 223 RD 

b3f8190df79df86915837f85848789088988858a858b08878b838e829008

75967392728b085d8b687d736f08736d7f6c8b68088b6b966da070089a7b

ab70bd6908ab72a17b958008967f8f7e8b7b088b7e867f81810882827e86

7b8b08748b739672a00872a077ab7cb6087a0693fb38059c06929c949396

8b088e8b9289958708ae7ea884a18b08a88ba492a29808a1979d9e98a308

98a491a38ba4088ba983a37ca2087da16ba75bab085dab6ea28198088294

89938b94088b96909694940894939690988b08a28b9f83a07a08a079a06c

9f5d089a0686f730057906090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/y 201 RD 

93f8880df7725215795a7c6c7e7d0882828386838b08868b878d888f0889

8d89948b97088ba2859b81960883947d917b8b08798b7d857f7f08817d84

7c8b78088c7693789c7b089b7ca183a68b08ad8ba799a1a6089c9ea3bfac

e008f715f7e705a3c59aad949508959697909a8d088a9c05fb2a06897a05

a18a988793840894848f818b7f088a77826878590855fb1f053df748057b

b383a28b98088a928f929291089090978f9b8c089c07fb87067a079a8498

84967f0894809c6ba15708f728fbe7057d6505090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HPCHOG+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 121 /y put

pop

%%EndResource

[/N21/HPCHOG+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font HPCHIG+TimesNewRomanPSMT

11 dict begin

/FontName /HPCHIG+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/hyphen 19 RD 

b4f7e10df75004f79106d507fb91064107090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/C 170 RD 

aff92f0df8b8f93a15877b857f83820884858388828b08878b808f7d9208

5ea25b975b8b084f8b527c576d08586b62616d54086e537c4f8b49088b37

a144b84e08c83ce061f7018b08c78bc099b7a608b7a6b2b6acc6087c9505

635467676a79086c786482608b085b8b5f9765a20863a36fad78b70877b6

82c08bc7088bd295c89fbc08a0bda6aeaea108b0a2b296b78b08be8bb87c

b06d08b26ea75a9f48089a067cf775057906090e ND 

/N 146 RD 

7ef9660df919049e8b998a948808a084998595840894839a7d9e75088cfc

61058a6488748481087e7977836e8b0875068a7905f77e068a9d05740670

8b78927e9908849486a58bb4088af82c05f849fcaa059c068cf8c3058ab0

8fa3929508979d9f93a78b08a4068a9d05fb7c068a7905a306a58b9f8497

7d08938290718b62088cfc1305fc2cf88605fb44068a7905090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/b 170 RD 

89f8880df730f94b157506fb1b54059279059890978e948b08938b918990

870892868e848d7f088e7e8c6c8b5808fc6207a77aa67ca68208a680a587

a58b08c48bbda0b8b508c0baa5cb8bda088bd27abf69b20869b3639e5d8b

08598b5c6d604e08f7d90709bdfbd1159c949c8f9c8b08ad8ba87ca56c08

a26c995f8b52088b4e7e5b716b08736a6f7b6d8b08788b798f7993087a94

79977a9b088df79f059d9e9d989892088b06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/d 205 RD 

acf8880df7ce7e15a206f719c205869d057c858088828b08828c858d8690

08868f879489970888948aac8bbf08f899077506fb1a54059179059a9096

8e948b08918b928990870892868e848d7f088e7f8c6c8b5808380771a56a

97648b084c8b5770635608625677508b4b088b4c9d56af6208b163b576bc

8b08a28ba290a09508a095a09ca1a2084a070935c115688b6b9c6eae086e

af7dbd8bcd088bcb9abda9ad08a1a4a598a88b08998b9b869b82089c8297

7d957908967990778d7508fb79076f6b6e7d6d8b088c06090e ND 

/e 146 RD 

b0f8500df80ef7ab158bc27bb76bac086aad629b598b08508b5a76646008

636078508b3f088b439e54b16108b261b976c18b08bb8bb59dacb008abaf

9fb492b8087c95057c64796f757b08767b71836e8b085f8b659e6ab1086b

af7bbf8bcd08f7c98c0509fba4f70815a1a0a395a68b089c8b9c869b8108

9c7f977d93790890808f768d6e08fb650691b296a7a0a108090e ND 

/f 179 RD 

b2f7e10df7aef83115ae07fb0706ab078bd18db6909c088f9a9398959308

9693978f9a8b08988b96889585089685967f977908967a967f9386089486

9388938b08938b958f93940894938f948b95088b9d829b789a086da16c96

698b08668b6a826d78086e7775737d6c087c6c84658b5f086e0734066807

e206fbbb078b6b89768780088780848280850880847f887e8b0877067907

f7a0069d076206778b7b927f9908819787a58bb408f7bb07f70706090e ND 

/g 385 RD 

a9f8880dc4ee15827b867e8b80088b808e82928308938396829c81086d6b

7a798988087976807a857f08888389838b83088b7a977aa37b08b76ebf7d

ca8b08de8bcda3bebb08acaa9dae8bb0088ba582a2799d08799e73966d8f

08768e608d488d08668d748c828c087d8d808f869008849189908b91088b

908e939094088f979595999708a384a188a18b08c18bb59aaba908aba79b

af8bb5088bb082a979a208c4069b8b928b8d8c088e8d8c8c8c8d088e8d8b

928b93088b928a90898e088a8e898c898c08898b838c7d8b082c066da066

95608b08578b617b6a6b08686c7b658b5f088b6c92719a73089975a077a6

7e086b6f7575827c0809f768f7c615a26e96638b57088b63836e7b79087b

787782728b08728b75967aa00875a780b38bbe088bb393a89b9e089c9f9f

94a38b08a48ba1809c76088a06099bfc3415bd8aac879c84089c8293808b

7a088b747d756f760870766081518b084c8b5d956b9f08779782988b9b08

8b978f98939908929b979a9a9c08b384c388d489088b06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/l 103 RD 

a9f7aa0df71af94b15fb1954059379059990958e938b08948b9189908708

8f868f848d80088e7e8c6d8b5908fc2b078b708978878108868286848487

0882857e8a768b087907f76f069d07748b7b8d8390088290859287940887

93899e8ba708f8e6077506090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/n 207 RD 

91f8880df730f861157606fb1b54059279059890968d948b08938c928990

870890858f848d7f088e7f8c6a8b5508fb3a078b6d8774838008837e7c86

748b0881067907f772069d07738b7b8d838f08829085918694088894899c

8ba908f78107b1b8b19fb28b08a48b9d829679089477916e8b6208fb4c07

8b718a7c8a8608887f858183850882867d87768b0882067907f771069d07

768b7c8d839008838f85928793088894889e8ba708f753078bb687a8849f

0881a67da07997087a977691738b085b8b5a6c574c088ae905090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/p 235 RD 

88f8880d93f818159790958d938b08948b938991870890878f858e83088e

848c788b6e08fc3d078b6d8976888308878286868587087f847b87798b08

7f067907f77f069d07728d7a8c829008829184918793088994889e8baa08

f71c079b7d9a819886089d85a087a38b08c28bb9a0b0b408b6bda2cb8bd8

088bd179c366b6086dad669d5e8b08708b7383747b08737c746f746408f3

077806fb1d5405917b0509f76482159b939a8f9b8b08a78ba47ea07208a9

669a568b46088b507e5b716a087672717e6a8b08708b74927999087b9a7f

9b869e08899789a28baf08f73b07a6ab9e9b9791088b06090e ND 

/r 168 RD 

91f7e10df71cf86115fb1b54059079059790968d958b08958c9188918608

91878f838d81088d838c6b8b5708fb41078b718a7b898508898185828386

087f837b88748b087907f779069d07778b7c8e8091088090849387940883

97899e8ba408f76a079baa9aa19a98089092928e918b08928b9585998008

9a809785968b08988b958f939408929490968b98088b9985987f96088095

7c91798b08658b6469664808f0077606090e ND 

/s 212 RD 

bcf8190df793f86115878388868889088888878a868b08858b808e7a9008

7392758f798b08648b6a7f72720871727f6c8b66088b6f92739a7808997a

aa75ba7408bb73aa789b7c089b7b93788b75088b79847b7d7e087c7d7985

758b086b8b6e9771a20872a279ae82b9087b06fb34079b068f919190938b

08918b9489968808ae82aa86a68b08b28bad97aaa408aaa59bab8bb40889

bf6bb649ab0844ae056b997799819808829a85998b9d088b9c9297999708

99979d91a28b08a98ba4829e7a089d7a9b6a975b089d0689f72c057c8c05

090e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/u 171 RD 

8cf8880df7a2f854157907a88a9e8694820896838f798b7108fb91077372

767b79820879817b877d8b08778b79927d98087c9784a78bb508f7c007fb

31067907a38b9b89948708948692859083088e838e7c8b7608fb5c078b62

8f6a927408927598789d7d089d7ca184a48b08a28ba0909f96089f96a8a5

b1b4088d2d059f06f71cc205829d0581857e88818b08848c858d86900884

8f889389960888978aaa8bbe08f7a407fb2d06090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

/y 212 RD 

91f8880d8af842159c8797869386088e889383938008967a937f908108f7

34fbe5056d3d057e6e80787f810880818086818b08898b828d7e90087892

7c8e808b087d8b7e87828308828287808b7d088a7e927e978008977f9b86

9e8b08a68ba696a8a108a7a2a2ac9db608f74af85405939d91998e900892

949393928f08908f958d978c089d07fb25068a79059a8d94899189089189

8f888e87088c898d868b85088a7e897e857e0828fb8c05fb02f77705819f

859e8b98088b948e939291089592958e9a8b0894068c9d05fb67068c7905

090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HPCHIG+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 45 /hyphen put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 67 /C put

dup 78 /N put

dup 86 /V put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N19/HPCHIG+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

77 66 659 464 re W n

[ 0 1 -1 0 802 -11 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

190.92 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

191.03999 643.2 m

191.03999 66.84 l

S 

0 0 0 RG

191.03999 643.2 m

191.03999 66.84 l

S 

Q

q

1 i

223.44 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

223.56 643.2 m

223.56 66.84 l

S 

0 0 0 RG

223.56 643.2 m

223.56 66.84 l

S 

Q

q

1 i

255.96001 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

256.08 643.2 m

256.08 66.84 l

S 

0 0 0 RG

256.08 643.2 m

256.08 66.84 l

S 

Q

q

1 i

288.48 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

288.60001 643.2 m

288.60001 66.84 l

S 

0 0 0 RG

288.60001 643.2 m

288.60001 66.84 l

S 

Q

q

1 i

321 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

321.12 643.2 m

321.12 66.84 l

S 

0 0 0 RG

321.12 643.2 m

321.12 66.84 l

S 

Q

q

1 i

353.39999 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

353.52 643.2 m

353.52 66.84 l

S 

0 0 0 RG

353.52 643.2 m

353.52 66.84 l

S 

Q

q

1 i

385.92 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

386.03999 643.2 m

386.03999 66.84 l

S 

0 0 0 RG

386.03999 643.2 m

386.03999 66.84 l

S 

Q

q

1 i

418.44 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

418.56 643.2 m

418.56 66.84 l

S 

0 0 0 RG

418.56 643.2 m

418.56 66.84 l

S 

Q

q

1 i

450.96001 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

451.08 643.2 m

451.08 66.84 l

S 

0 0 0 RG

451.08 643.2 m

451.08 66.84 l

S 

Q

q

1 i

483.48 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

483.60001 643.2 m

483.60001 66.84 l

S 

0 0 0 RG

483.60001 643.2 m

483.60001 66.84 l

S 

Q

0 0 0 RG

1 J

1 j

0.12 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

158.52 66.84 325.08 576.36 re

S 

q

158.52 596.88 320.16 35.03999 re

W n 

1 1 1 rg

0 j

0.96001 w

158.52 603 314.16 22.92 re

B* 

Q

q

158.52 539.16 307.67999 35.16 re

W n 

1 1 1 rg

0 j

0.96001 w

158.52 545.28 301.67999 23.03999 re

B* 

Q

1 1 1 rg

0 j

0.96001 w

158.52 487.67999 202.2 22.92 re

B* 

q

158.52 423.96001 300.84 35.03999 re

W n 

158.52 430.08 294.84 22.92 re

B* 

Q

q

158.52 366.24001 256.67999 35.16 re

W n 

158.52 372.36 250.67999 23.03999 re

B* 

Q

158.52 314.75999 172.56 22.92 re

B* 

q

158.52 251.03999 290.64 35.03999 re

W n 

158.52 257.16 284.64 22.92 re

B* 

Q

q

158.52 193.44 273.24001 35.03999 re

W n 

158.52 199.56 267.24001 22.92 re

B* 

Q

158.52 141.84 211.44 23.03999 re

B* 

0.19901 0.19901 0.19901 rg

472.8 603 10.8 22.92 re

B* 

460.32001 545.28 23.28 23.03999 re

B* 

360.84 487.67999 122.75999 22.92 re

B* 

453.48 430.08 30.12 22.92 re

B* 

409.32001 372.36 74.28 23.03999 re

B* 

331.2 314.75999 152.39999 22.92 re

B* 

443.28 257.16 40.32001 22.92 re

B* 

425.88 199.56 57.72 22.92 re

B* 

370.08 141.84 113.52 23.03999 re

B* 

158.64 84.24001 324.96001 22.92 re

B* 

0.12 w

483.60001 643.2 m

158.52 643.2 l

158.52 648.48 m

158.52 643.2 l

191.03999 648.48 m

191.03999 643.2 l

223.56 648.48 m

223.56 643.2 l

256.08 648.48 m

256.08 643.2 l

288.60001 648.48 m

288.60001 643.2 l

321.12 648.48 m

321.12 643.2 l

353.52 648.48 m

353.52 643.2 l

386.03999 648.48 m

386.03999 643.2 l

418.56 648.48 m

418.56 643.2 l

451.08 648.48 m

451.08 643.2 l

483.60001 648.48 m

483.60001 643.2 l

158.52 643.2 m

158.52 66.84 l

153.24001 643.2 m

158.52 643.2 l

153.24001 585.60001 m

158.52 585.60001 l

153.24001 527.88 m

158.52 527.88 l

153.24001 470.28 m

158.52 470.28 l

153.24001 412.67999 m

158.52 412.67999 l

153.24001 354.96001 m

158.52 354.96001 l

153.24001 297.36 m

158.52 297.36 l

153.24001 239.75999 m

158.52 239.75999 l

153.24001 182.16 m

158.52 182.16 l

153.24001 124.44 m

158.52 124.44 l

153.24001 66.84 m

158.52 66.84 l

S 

BT

/N19 1 Tf

0 -17.03999 17.03999 0 153.12 678.60001 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.5 1.90849 TD

/N19 1 Tf (10%)Tj

T*

/N19 1 Tf (20%)Tj

T*

/N19 1 Tf (30%)Tj

T*

/N19 1 Tf (40%)Tj

T*

/N19 1 Tf (50%)Tj

0 1.9014 TD

/N19 1 Tf (60%)Tj

0 1.9084 TD

/N19 1 Tf (70%)Tj

T*

/N19 1 Tf (80%)Tj

T*

/N19 1 Tf (90%)Tj

-0.5 1.90849 TD

/N19 1 Tf (100%)Tj

12.04919 -12.04871 12.04871 12.04871 104.28 645 Tm

-0.0007 Tc

/N19 1 Tf (sw)Tj

1.1105 -0.005 TD

0.00101 Tc

/N19 1 Tf (im)Tj

0.23399 -2.3853 TD

-0.00079 Tc

/N19 1 Tf (tomc)Tj

1.9969 -0.005 TD

0.0027 Tc

/N19 1 Tf (atv)Tj

1.22501 -2.3903 TD

-0.00101 Tc

/N19 1 Tf (mg)Tj

1.2798 -0.005 TD

-0.0043 Tc

/N19 1 Tf [(ri)-5.3 ]TJ /N19 1 Tf [(d)]TJ

0.8316 -2.3853 TD

-0.0007 Tc

/N19 1 Tf (su)Tj

0.8914 -0.005 TD

-0.002 Tc

/N19 1 Tf (2c)Tj

0.94119 0.005 TD

0 Tc

/N19 1 Tf (o)Tj

0.5029 -0.005 TD

/N19 1 Tf (r)Tj

0.1046 -2.3853 TD

/N19 1 Tf (w)Tj

0.72211 -0.005 TD

/N19 1 Tf (a)Tj

0.44321 0.005 TD

/N19 1 Tf (v)Tj

0.5029 -0.005 TD

/N19 1 Tf (e)Tj

0.44321 0.005 TD

/N19 1 Tf (5)Tj

1.2897 -2.39529 TD

/N19 1 Tf (a)Tj

0.44321 -0.005 TD

-0.002 Tc

/N19 1 Tf (ps)Tj

0.8914 0.005 TD

0 Tc

/N19 1 Tf (i)Tj

-0.6772 -2.3903 TD

-0.002 Tc

/N19 1 Tf (hy)Tj

1.0009 -0.005 TD

/N19 1 Tf (dr)Tj

0.8316 0.005 TD

0 Tc

/N19 1 Tf (o)Tj

0.5029 -0.005 TD

-0.002 Tc

/N19 1 Tf (2d)Tj

0.7818 -2.3853 TD

-0.0005 Tc

/N19 1 Tf (tur)Tj

1.1105 -0.005 TD

-0.002 Tc

/N19 1 Tf (b3)Tj

1.0009 0.005 TD

0 Tc

/N19 1 Tf (d)Tj

0.6723 -2.39529 TD

/N19 1 Tf (a)Tj

0.44321 -0.005 TD

-0.002 Tc

/N19 1 Tf (pp)Tj

1.0009 0.005 TD

0.00101 Tc

/N19 1 Tf (lu)Tj

0.83659 -2.3903 TD

0 Tc

/N19 1 Tf (f)Tj

0.3336 -0.005 TD

-0.002 Tc

/N19 1 Tf (pp)Tj

1.0009 0.005 TD

/N19 1 Tf (pp)Tj

/N21 1 Tf

17.03999 0 0 17.03999 136.92 706.92 Tm

-0.00079 Tc

0.0043 Tw

/N21 1 Tf (% contribution to dynamic instructions eliminated)Tj

ET

1 1 1 rg

506.28 550.67999 26.75999 -391.32001 rf

506.28 159.36 26.88 391.44 re

S 

0.96001 w

512.64 533.03999 12.12 12.12 re

B* 

BT

/N19 1 Tf

0 -19.8 19.8 0 512.16 528.2401 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (Vector Component)Tj

ET

0.19901 0.19901 0.19901 rg

512.64 356.64 12.12 12.12 re

B* 

BT

0 -19.8 19.8 0 512.16 351.84 Tm

0 0 0 rg

/N19 1 Tf (Non-vector Component)Tj

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font HPCHIG+TimesNewRomanPSMT

%%+ font HPCHOG+TimesNewRomanPS-BoldMT

%%EOF


%%EndDocument

 endTexFig
 150 4931 a Fv(Figure)e(7-3:)40 b(Con)m(tribution)28
b(of)g(v)m(ectorizable)h(and)g(non-v)m(ectorizable)f(co)s(de)i
(sequences)h(in)d(total)150 5051 y(SLP)33 b(sa)m(vings)g(for)f(the)h
(SPEC95fp)h(b)s(enc)m(hmark)f(suite.)1901 5649 y(42)p
eop
%%Page: 43 43
43 42 bop 1546 111 808 4 v 1544 190 4 79 v 1596 166 a
Ft(Benc)n(hmark)p 1992 190 V 99 w(Sp)r(eedup)p 2352 190
V 1546 193 808 4 v 1546 210 V 1544 289 4 79 v 1596 265
a(swim)p 1992 289 V 288 w(1.24)p 2352 289 V 1546 292
808 4 v 1544 371 4 79 v 1596 347 a(tomcatv)p 1992 371
V 195 w(1.57)p 2352 371 V 1546 374 808 4 v 1544 453 4
79 v 1596 430 a(FIR)p 1992 453 V 324 w(1.26)p 2352 453
V 1546 457 808 4 v 1544 535 4 79 v 1596 512 a(I)r(IR)p
1992 535 V 343 w(1.41)p 2352 535 V 1546 539 808 4 v 1544
618 4 79 v 1596 594 a(VMM)p 1992 618 V 264 w(1.70)p 2352
618 V 1546 621 808 4 v 1544 700 4 79 v 1596 676 a(MMM)p
1992 700 V 252 w(1.79)p 2352 700 V 1546 703 808 4 v 1544
782 4 79 v 1596 758 a(YUV)p 1992 782 V 288 w(6.70)p 2352
782 V 1546 785 808 4 v 427 946 a Fv(T)-8 b(able)32 b(7.5:)43
b(Sp)s(eedup)34 b(on)f(an)f(MPC7400)h(pro)s(cessor)h(using)e(SLP)h
(compilation.)150 1339 y(20\045)43 b(of)f(the)i(dynamic)e(instruction)g
(sa)m(vings)i(are)f(from)f(non-v)m(ectorizable)g(co)s(de)i(sequences.)
150 1519 y(In)39 b(Figure)f(7-3,)i(w)m(e)g(sho)m(w)g(the)g(a)m(v)-5
b(ailable)36 b(v)m(ector)41 b(parallelism)35 b(as)k(a)g(subset)h(of)f
(the)g(a)m(v)-5 b(ailable)150 1700 y(sup)s(erw)m(ord)34
b(lev)m(el)e(parallelism.)150 2124 y FA(7.3)161 b(SLP)53
b(P)l(erformance)150 2403 y Fv(T)-8 b(o)29 b(test)h(the)g(p)s
(erformance)f(of)g(our)g(SLP)h(algorithm)c(in)i(a)h(real)g(en)m
(vironmen)m(t,)h(w)m(e)h(targeted)e(our)150 2584 y(compilation)36
b(system)41 b(to)f(the)g(AltiV)-8 b(ec)39 b([21)o(])h(instruction)f
(set.)66 b(Of)39 b(the)i(p)s(opular)d(m)m(ultimedia)150
2764 y(extensions)c(a)m(v)-5 b(ailable)30 b(in)i(commercial)e(micropro)
s(cessors,)i(w)m(e)i(b)s(eliev)m(e)f(AltiV)-8 b(ec)31
b(b)s(est)i(matc)m(hes)150 2945 y(the)41 b(compilation)c(tec)m(hnique)
42 b(describ)s(ed)g(in)d(this)i(thesis.)68 b(AltiV)-8
b(ec)39 b(de\014nes)k(128-bit)38 b(\015oating)150 3126
y(p)s(oin)m(t)32 b(and)h(in)m(teger)g(SIMD)g(op)s(erations)f(and)h(pro)
m(vides)h(a)e(complemen)m(tary)h(set)g(of)g(32)f(general-)150
3306 y(purp)s(ose)h(registers.)43 b(It)32 b(also)f(de\014nes)j(load)d
(and)h(store)g(instructions)f(capable)h(of)f(mo)m(ving)g(a)h(full)150
3487 y(128)g(bits)g(of)g(data.)296 3667 y(Our)d(compiler)e
(automatically)f(generates)k(C)g(co)s(de)f(with)g(AltiV)-8
b(ec)28 b(macros)g(inserted)i(where)150 3848 y(parallelization)h(is)k
(successful.)54 b(W)-8 b(e)36 b(then)h(use)f(an)g(extended)h(gcc)f
(compiler)e(to)h(generate)h(ma-)150 4029 y(c)m(hine)g(co)s(de.)52
b(This)35 b(compiler)f(w)m(as)i(pro)m(vided)g(b)m(y)g(Motorola)e(and)h
(supp)s(orts)i(the)e(AltiV)-8 b(ec)35 b(ABI)150 4209
y(\(application)g(binary)i(in)m(terface\).)58 b(Due)37
b(to)g(the)h(exp)s(erimen)m(tal)e(nature)i(of)f(the)h(AltiV)-8
b(ec)36 b(com-)150 4390 y(piler)j(extensions,)45 b(it)40
b(w)m(as)h(necessary)j(to)c(compile)f(all)g(b)s(enc)m(hmarks)j(without)
e(optimization.)150 4570 y(Base)33 b(measuremen)m(ts)g(w)m(ere)g(made)f
(b)m(y)h(compiling)c(the)j(unparallelized)e(v)m(ersion)j(for)e
(execution)150 4751 y(on)41 b(the)h(MPC7400)f(sup)s(erscalar)h(unit.)68
b(In)42 b(b)s(oth)f(cases,)j(the)e(same)f(set)h(of)f(SUIF)g(optimiza-)
150 4931 y(tions)29 b(and)g(the)h(same)f(gcc)g(bac)m(k)m(end)i(w)m(ere)
g(used.)43 b(Since)30 b(AltiV)-8 b(ec)28 b(do)s(es)i(not)f(supp)s(ort)g
(unaligned)150 5112 y(memory)h(accesses,)k(all)29 b(b)s(enc)m(hmarks)j
(w)m(ere)h(compiled)c(with)i(alignmen)m(t)d(constrain)m(ts)k(in)e
(place.)296 5293 y(T)-8 b(able)28 b(7.5)g(and)g(Figure)f(7-4)g(presen)m
(t)i(p)s(erformance)f(comparisons)f(on)h(a)g(450MHz)g(G4)f(P)m(o)m(w-)
1901 5649 y(43)p eop
%%Page: 44 44
44 43 bop 734 0 a
 18945146 11745986 6249267 2368143 52099153 31246336 startTexFig

 doclip
 734 0 a
%%BeginDocument: figures/gr4.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000420005528)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 95 36 792 475

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



95 36 moveto

792 36 lineto

792 475 lineto

95 475 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font CFHFNJ+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /CFHFNJ+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/f 182 RD 

abf7e10df7a1f82d15bb0747068ac505e1078b9b8e989193089293928f94

8b08958b90899086088f878d868b84088b888a858a860889808a868b8808

8b819081958208958299879c8b089d8b9c90979608979691988b9a088b9b

819d789a0878996d93638b08518b5c7b696c08696c7a648b5c0874076a07

4b065b07cb068cfbd1058b70897c8883088882858582870882877c88768b

088d7a05f79f068d9c056d8a79918197088492889f8baa088af7d105cf06

090e ND 

/h 186 RD 

adf8c00d8cf92b157a079f88988591820892858e748b6808fc65078b6888

7686840882807e857889087a07f77b069c07788e7e92859608879288a08b

ac08f7890799a0989b9794089995978f988b08938b938892860892869084

8e81088d808d748b6508fb5f078b6a8876858308847f7f857b8908897a05

f77d06899c05798d7d90859408849588a08bae08f746078bbf88b084a108

84a17e9e779b08769c73936e8b08758b7586768008777f7479727108f79d

07fb4e06090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/p 202 RD 

9ef8c00df7878f15a180a285a48b08ae8baa95a79f08a89fa0a89ab10899

b293b58bb9088bb584b37db0087cb277a770a0086da16e956a8b086e8b72

84737c087a807b7a7b7408c707fb55067a07a18a9a8693820892818f778b

6a08fc77078b6b887784830881837c84768a087a07f79a069c07748b7c8d

838f08838f85918794088993899b8ba30889f73f059f779b7c9b83088b06

0958f7e315a0baa6a3ac8b08a08b9b81977808a06f93558b3d088b3d8358

7a70087f787d82798b086b8b6d9f6fb308f78607090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/v 117 RD 

94f8880df7937e15f72bf7fa059eb798a594940895939691998d088c9c05

fb2a068c7a059d8a988792850893858e828b81088c7a826c7a60084efb28

0541f73f057baf85a08b97088a978f939392089190958e9a8b088c9c05fb

87067a079a88968593820894819a6f9e6008f72efbf605a206090e ND 

/x 230 RD 

a2f8880df7ddf7f515a0ad9ea29c97089e969d929f8c088a9c05fb36067a

079a87958991860891878e858b84088a7c7e727167087a700566ce05849a

86948a8d0889928a8f8b90088c918c8f8e8d08af94058d8c05899c05fb8e

06897a059d88988698800897809f6ea55b08d8fb26056754056655716c79

7f08787e7785758b087a07f747069c077d8b818c868d08848f888e889008

87908a918b93088b908c918e91088c8f94999aa208aebc05b1410597758f

7d8b82088c86888586870887897f87788908897a05f79406889c057f8e7d

8e8293087c9875ad70c00839f72b05bed305090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/CFHFNJ+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 99 /c put

dup 101 /e put

dup 102 /f put

dup 104 /h put

dup 105 /i put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 120 /x put

pop

%%EndResource

[/N21/CFHFNJ+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font CFHFJJ+TimesNewRomanPSMT

11 dict begin

/FontName /CFHFJJ+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/F 175 RD 

9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08

9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f

8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d

0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06

a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685

6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 

/I 108 RD 

a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8

41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b

87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b

7783708b0873067907f7b0069d077306090e ND 

/M 168 RD 

9cfa0d0df82c16f793f8c205fc4f078b668773848108807977836e8b0873

067907f7b0069d077406708b78927f9908819487a58bb408f845078bb08f

a3929508979d9f93a88b08a2069d07fb5006fb81fc9a05fb83f89a05fb52

067907a68b9f8897850899849384908208907b8f778b6e08fc45078b6687

738481087f7977836f8b0873067907f77d069d077306718b77927f990883

9486a58bb408f84f07f794fcc2059b06090e ND 

/R 220 RD 

9cf92f0df9279d15678f6e94759908739a71a86cb708fb1df75205c296b4

a1a6a908a6a998ae8bb4088bb27fac74a70874a46f9f6a95086896589045

8b08fb87068d7905a206a68b9d84987d08938090728b6108fc41078b6588

738481087f7977826f8b0872067907f7b0069d077106738b78927f990881

9687a48bb508f75507908b908b908b088f89908c8f8b08958b988b9b8c08

f776fbca05f745069d0709fc6af8eb15ab91a48e9e8b08b58bad7ea57108

a47198698b62088b617b686b70086c6f5b7e4d8b08888a878c878b08868b

868b858b08f7a807090e ND 

/S 263 RD 

caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308

639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975

9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b

8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3

087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893

8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f

b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77

a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08

a67ca1769a71089b719568915f089d06f779077906090e ND 

/T 117 RD 

a9f8f70d92f92b1584fb30059e068ca993a3979d08979c99979c91089990

a08daa8b08db06fc8e078b6687738481087f7977836f8b0873067907f7ae

069d077406728b78927f9908819487a58bb408f88e07e806a78ba1879c82

089b81997e957808917f90788f70089c0686f73005fcb38a05090e ND 

/U 194 RD 

90f9660df886f91915a48b9e84987d08938090728b6208fba0078b42855a

7e6e087f6d737369780869796481608b08698b6f9174970872977a9a7f9e

087e9e83a586ac0886ac89a98ba508f7b5078bae8fa4939708979d9e93a6

8b08a606899d05fbb006897905a606a28b9e85967e08977e90708b6208fb

97078b3d9054956e089c60a56ab07208b171c27fd38b08cc8bc098b2a508

b1a6a5aa98b00899af91bf8bcd08f7a1078bb08ea292950899a19f96a58b

08a4069d07fb7d067907a406090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/Y 188 RD 

94f9660df869f919159c8b9889948708948792869084088e828e848b8208

8c7b8175776c08fb16fb6005fb1ef76a0577a881a18b97088b9991969892

089993998e9a8b0899068c9d05fbaf067907978b9489928808a4809b8193

830891839b77a06b08f749fbac05fb2f078b6487748481087f7977836f8b

0873067907f7b0069d077506708b77927e9908839486a58bb408f73d07f7

33f78d059faa9ba2989908999a99959b93089d92968f938b089a06889d05

fb78068a7905090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/CFHFJJ+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 37 /percent put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 53 /five put

dup 55 /seven put

dup 70 /F put

dup 73 /I put

dup 77 /M put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 85 /U put

dup 86 /V put

dup 89 /Y put

dup 97 /a put

dup 99 /c put

dup 105 /i put

dup 109 /m put

dup 111 /o put

dup 116 /t put

dup 118 /v put

dup 119 /w put

pop

%%EndResource

[/N19/CFHFJJ+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

95 36 697 439 re W n

[ 0 1 -1 0 828 -58.968 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

215.88 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

216 656.16 m

216 59.64 l

S 

0 0 0 RG

216 656.16 m

216 59.64 l

S 

Q

q

1 i

297.24001 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

297.36 656.16 m

297.36 59.64 l

S 

0 0 0 RG

297.36 656.16 m

297.36 59.64 l

S 

Q

q

1 i

378.48 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

378.60001 656.16 m

378.60001 59.64 l

S 

0 0 0 RG

378.60001 656.16 m

378.60001 59.64 l

S 

Q

q

1 i

459.84 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

459.96001 656.16 m

459.96001 59.64 l

S 

0 0 0 RG

459.96001 656.16 m

459.96001 59.64 l

S 

Q

0.5 0.5 0.5 rg

0 0 0 RG

1 J

0 j

0.96001 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

134.64 592.44 76.67999 42.48 re

B* 

134.64 507.24001 183.96001 42.48 re

B* 

134.64 422.03999 85.8 42.48 re

B* 

134.64 336.72 132.96001 42.60001 re

B* 

134.64 251.52 227.52 42.48 re

B* 

q

134.64 160.2 262.56 54.60001 re

W n 

134.64 166.32001 256.56 42.48 re

B* 

Q

q

134.64 75 376.08 54.60001 re

W n 

134.64 81.12 2430.60001 42.48 re

B* 

Q

0.12 w

508.8 656.16 m

134.64 656.16 l

134.64 660.12 m

134.64 656.16 l

216 660.12 m

216 656.16 l

297.36 660.12 m

297.36 656.16 l

378.60001 660.12 m

378.60001 656.16 l

459.96001 660.12 m

459.96001 656.16 l

134.64 661.44 m

134.64 656.16 l

216 661.44 m

216 656.16 l

297.36 661.44 m

297.36 656.16 l

378.60001 661.44 m

378.60001 656.16 l

459.96001 661.44 m

459.96001 656.16 l

134.64 656.16 m

134.64 59.64 l

129.36 656.16 m

134.64 656.16 l

129.36 570.96001 m

134.64 570.96001 l

129.36 485.75999 m

134.64 485.75999 l

129.36 400.56 m

134.64 400.56 l

129.36 315.24001 m

134.64 315.24001 l

129.36 230.03999 m

134.64 230.03999 l

129.36 144.84 m

134.64 144.84 l

129.36 59.64 m

134.64 59.64 l

S 

BT

/N19 1 Tf

0 -17.03999 17.03999 0 129.24001 691.56 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.5 4.7746 TD

/N19 1 Tf (25%)Tj

T*

/N19 1 Tf (50%)Tj

0 4.76759 TD

/N19 1 Tf (75%)Tj

-0.5 4.7747 TD

/N19 1 Tf (100%)Tj

3.8028 -20.5634 TD

/N19 1 Tf [(Tomcatv)-2058.5 ]TJ /N19 1 Tf [(Swim)-3053.3 ]TJ /N19 1 Tf [(FIR)-3563.60001 ]TJ /N19 1 Tf [(IIR)-3082.5 ]TJ /N19 1 Tf [(VMM)-2415 ]TJ /N19 1 Tf [(MMM)-2579 ]TJ /N19 1 Tf [(YUV)]TJ

/N21 1 Tf

20.03999 0 0 20.03999 161.64 711.48 Tm

0.0006 Tc

0.0009 Tw

/N21 1 Tf (% improvement of the execution time)Tj

/N19 1 Tf

0 -20.03999 20.03999 0 516.24001 123.60001 Tm

0 Tc

0 Tw

/N19 1 Tf (570%)Tj

ET

1 1 1 rg

494.88 128.28 m

484.44 125.03999 l

500.03999 73.67999 l

510.48 76.92 l

f* 

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font CFHFNJ+TimesNewRomanPS-BoldMT

%%+ font CFHFJJ+TimesNewRomanPSMT

%%EOF


%%EndDocument

 endTexFig
 150 1691 a Fv(Figure)43 b(7-4:)65 b(P)m(ercen)m(tage)46
b(impro)m(v)m(emen)m(t)d(of)g(execution)i(time)d(on)i(an)g(MPC7400)g
(pro)s(cessor)150 1812 y(using)32 b(SLP)h(compilation.)150
2097 y(erMac)25 b(w)m(orkstation.)41 b(Most)26 b(of)e(the)h(SPEC95fp)g
(b)s(enc)m(hmarks)h(require)f(double)g(precision)f(\015oat-)150
2277 y(ing)g(p)s(oin)m(t)g(supp)s(ort)h(to)f(op)s(erate)h(correctly)-8
b(.)41 b(Since)24 b(this)h(is)f(not)g(supp)s(orted)i(b)m(y)g(AltiV)-8
b(ec,)25 b(w)m(e)h(w)m(ere)150 2458 y(unable)38 b(to)g(compile)e(v)m
(ectorized)j(v)m(ersions)h(for)d(all)g(but)h(t)m(w)m(o)h(of)f(the)g(b)s
(enc)m(hmarks.)62 b Fi(swim)39 b Fv(uti-)150 2639 y(lizes)29
b(single)g(precision)g(\015oating)g(p)s(oin)m(t)g(op)s(erations,)g(and)
h(the)h(SPEC92fp)f(v)m(ersion)h(of)e Fi(tomcatv)150 2819
y Fv(pro)m(vides)k(a)g(result)f(similar)d(to)k(the)g(64-bit)d(v)m
(ersion.)296 3000 y(Our)40 b(compiler)f(curren)m(tly)h(assumes)i(that)e
(all)e(pac)m(k)m(ed)k(op)s(erations)d(are)h(executed)i(on)f(the)150
3180 y(AltiV)-8 b(ec)45 b(unit)g(and)i(all)d(sequen)m(tial)i(op)s
(erations)f(are)h(p)s(erformed)g(on)g(the)g(sup)s(erscalar)g(unit.)150
3361 y(Op)s(erations)39 b(to)h(pac)m(k)h(and)f(unpac)m(k)h(data)e(are)h
(therefore)h(required)f(to)g(go)f(through)h(memory)150
3541 y(since)g(AltiV)-8 b(ec)38 b(pro)m(vides)i(no)g(instructions)f(to)
g(mo)m(v)m(e)g(data)g(b)s(et)m(w)m(een)j(register)d(\014les.)64
b(Despite)150 3722 y(this)41 b(high)f(cost,)k(our)d(compiler)f(is)g
(still)f(able)i(to)g(exploit)f(sup)s(erw)m(ord)j(lev)m(el)d
(parallelism)e(and)150 3903 y(pro)m(vide)33 b(sp)s(eedups.)1901
5649 y(44)p eop
%%Page: 45 45
45 44 bop 150 888 a Fs(Chapter)78 b(8)150 1428 y(Arc)-6
b(hitectural)77 b(Supp)6 b(ort)79 b(for)e(SLP)150 1941
y Fv(The)38 b(compiler)c(algorithm)g(presen)m(ted)39
b(in)c(Chapter)j(4)e(w)m(as)i(inspired)e(b)m(y)h(the)g(m)m(ultimedia)d
(ex-)150 2121 y(tensions)f(in)g(mo)s(dern)f(pro)s(cessors.)46
b(Ho)m(w)m(ev)m(er,)36 b(sev)m(eral)e(limitations)28
b(mak)m(e)34 b(it)e(di\016cult)g(to)g(fully)150 2302
y(realize)44 b(the)h(p)s(oten)m(tial)e(pro)m(vided)i(b)m(y)g(SLP)g
(analysis.)79 b(W)-8 b(e)45 b(list)f(some)g(of)g(these)i(limitations)
150 2482 y(b)s(elo)m(w:)295 2728 y Fn(\017)j Fv(Man)m(y)38
b(m)m(ultimedia)c(instructions)i(are)h(designed)h(for)e(a)h(sp)s
(eci\014c)h(high-lev)m(el)d(op)s(eration.)394 2908 y(F)-8
b(or)37 b(example,)h(HP's)h(MAX-2)f(extensions)g(o\013er)g(matrix)e
(transform)h(instructions)g([18])394 3089 y(and)31 b(SUN's)h(VIS)g
(extensions)h(include)d(instructions)h(to)g(compute)h(pixel)e
(distances)i([20].)394 3269 y(The)43 b(complex)f(CISC-lik)m(e)h(seman)m
(tics)f(of)g(these)i(instructions)e(mak)m(e)g(automatic)f(co)s(de)394
3450 y(generation)32 b(di\016cult.)295 3703 y Fn(\017)49
b Fv(SLP)36 b(hardw)m(are)g(is)f(t)m(ypically)f(view)m(ed)j(as)f(a)f(m)
m(ultimedia)d(engine)j(alone)g(and)h(is)f(not)g(de-)394
3883 y(signed)f(for)f(general-purp)s(ose)g(computation.)46
b(Floating)31 b(p)s(oin)m(t)i(capabilities,)e(for)j(exam-)394
4064 y(ple,)41 b(ha)m(v)m(e)f(only)f(recen)m(tly)i(b)s(een)f(added)g
(to)f(some)g(arc)m(hitectures.)66 b(F)-8 b(urthermore,)40
b(ev)m(en)394 4244 y(the)34 b(most)f(adv)-5 b(anced)35
b(m)m(ultimedia)c(extensions)k(lac)m(k)e(certain)h(fundamen)m(tal)f(op)
s(erations)394 4425 y(suc)m(h)h(as)f(32-bit)d(in)m(teger)j(m)m
(ultiplication)28 b(and)33 b(division)d([21].)295 4678
y Fn(\017)49 b Fv(In)23 b(curren)m(t)i(arc)m(hitectures,)h(data)d(sets)
h(are)f(usually)f(considered)i(to)f(b)s(elong)f(exclusiv)m(ely)i(to)394
4858 y(either)j(m)m(ultimedia)d(or)j(sup)s(erscalar)h(hardw)m(are.)43
b(This)27 b(design)h(philosoph)m(y)f(is)g(p)s(ortra)m(y)m(ed)394
5039 y(in)34 b(the)h(lac)m(k)g(of)f(in)m(ter)h(register)f(\014le)h(mo)m
(v)m(e)g(op)s(erations)f(in)g(the)h(AltiV)-8 b(ec)34
b(instruction)g(set.)394 5219 y(If)j(SLP)g(compilation)d(tec)m(hniques)
k(can)f(sho)m(w)i(a)d(need)i(for)e(a)h(b)s(etter)g(coupling)f(b)s(et)m
(w)m(een)394 5400 y(these)e(t)m(w)m(o)f(units,)f(future)h(arc)m
(hitectures)h(ma)m(y)e(pro)m(vide)h(the)g(necessary)i(supp)s(ort.)1901
5649 y(45)p eop
%%Page: 46 46
46 45 bop 295 100 a Fn(\017)49 b Fv(Most)g(curren)m(t)g(m)m(ultimedia)c
(instruction)i(sets)j(are)e(designed)h(with)f(the)h(assumption)394
280 y(that)41 b(data)f(are)h(alw)m(a)m(ys)h(stored)g(in)e(the)h(prop)s
(er)h(pac)m(k)m(ed)g(con\014guration.)69 b(As)41 b(a)g(result,)394
461 y(data)27 b(pac)m(king)h(and)f(unpac)m(king)h(instructions)g(are)f
(generally)g(not)g(w)m(ell)g(supp)s(orted.)43 b(This)394
641 y(imp)s(ortan)m(t)30 b(op)s(eration)h(is)h(useful)g(to)g(our)g
(system.)44 b(With)32 b(b)s(etter)g(supp)s(ort,)h(SLP)g(p)s(erfor-)394
822 y(mance)f(can)h(b)s(e)g(further)g(increased.)295
1086 y Fn(\017)49 b Fv(Although)32 b(our)h(system)h(is)e(capable)h(of)f
(compiling)e(for)i(mac)m(hines)h(that)g(do)g(not)g(supp)s(ort)394
1266 y(unaligned)41 b(memory)h(accesses,)48 b(the)43
b(algorithm)d(is)i(p)s(oten)m(tially)f(more)h(e\013ectiv)m(e)i(with-)
394 1447 y(out)36 b(this)g(constrain)m(t.)54 b(Arc)m(hitectures)38
b(supplying)d(e\016cien)m(t)i(unaligned)e(load)g(and)i(store)394
1627 y(instructions)32 b(migh)m(t)f(impro)m(v)m(e)h(the)h(p)s
(erformance)g(of)f(SLP)h(analysis.)296 1916 y(The)f(\014rst)f(three)h
(p)s(oin)m(ts)e(discuss)i(simple)d(pro)s(cessor)j(mo)s(di\014cations)c
(that)j(w)m(e)g(hop)s(e)g(will)e(b)s(e)150 2096 y(incorp)s(orated)39
b(in)m(to)g(future)h(m)m(ultimedia)c(instruction)j(sets)i(as)f(they)h
(mature.)65 b(The)40 b(last)f(t)m(w)m(o)150 2277 y(p)s(oin)m(ts)j
(address)i(di\016cult)e(issues.)75 b(Solving)41 b(them)h(in)g(either)h
(hardw)m(are)g(or)f(soft)m(w)m(are)i(is)e(not)150 2457
y(trivial.)f(More)33 b(researc)m(h)h(is)e(required)h(to)f(determine)h
(the)g(b)s(est)g(approac)m(h.)1901 5649 y(46)p eop
%%Page: 47 47
47 46 bop 150 888 a Fs(Chapter)78 b(9)150 1428 y(Conclusion)150
1941 y Fv(In)38 b(this)f(thesis)g(w)m(e)i(in)m(tro)s(duced)e(sup)s(erw)
m(ord)i(lev)m(el)e(parallelism,)e(the)j(notion)e(of)h(viewing)g(par-)
150 2121 y(allelism)h(from)i(the)i(p)s(ersp)s(ectiv)m(e)h(of)e
(partitioned)f(op)s(erations)g(on)i(pac)m(k)m(ed)h(sup)s(erw)m(ords.)73
b(W)-8 b(e)150 2302 y(sho)m(w)m(ed)30 b(that)e(SLP)g(can)h(b)s(e)f
(exploited)f(with)h(a)g(simple)e(and)j(robust)f(compiler)e(implemen)m
(tation)150 2482 y(that)i(exhibits)h(sp)s(eedups)i(ranging)c(from)g
(1.24)h(to)g(6.70)g(on)h(a)f(set)i(of)e(scien)m(ti\014c)h(and)f(m)m
(ultimedia)150 2663 y(b)s(enc)m(hmarks.)296 2844 y(W)-8
b(e)30 b(also)e(sho)m(w)m(ed)j(that)e(SLP)h(concepts)h(lead)e(to)f(an)i
(elegan)m(t)f(implemen)m(tation)d(of)i(a)h(v)m(ector-)150
3024 y(izing)34 b(compiler.)52 b(By)36 b(comparing)e(the)i(p)s
(erformance)g(of)f(this)h(compiler)e(to)h(the)h(more)g(general)150
3205 y(SLP)25 b(algorithm,)f(w)m(e)i(demonstrated)f(that)f(v)m(ector)i
(parallelism)21 b(is)k(a)f(subset)j(of)d(sup)s(erw)m(ord)i(lev)m(el)150
3385 y(parallelism.)296 3566 y(Our)36 b(curren)m(t)i(compiler)c
(implemen)m(tation)f(is)i(still)f(in)i(its)f(infancy)-8
b(.)54 b(While)35 b(successful,)k(w)m(e)150 3746 y(b)s(eliev)m(e)g(its)
f(e\013ectiv)m(eness)k(can)d(b)s(e)g(impro)m(v)m(ed.)63
b(By)40 b(extending)f(SLP)h(analysis)e(b)s(ey)m(ond)i(basic)150
3927 y(blo)s(c)m(ks,)c(more)f(pac)m(king)g(opp)s(ortunities)g(could)f
(b)s(e)i(found.)52 b(F)-8 b(urthermore,)35 b(SLP)h(could)f(o\013er)g(a)
150 4108 y(form)i(of)h(predication,)h(in)e(whic)m(h)i(un\014lled)f
(slots)g(of)f(a)h(wide)h(op)s(eration)e(could)h(b)s(e)g(\014lled)f
(with)150 4288 y(sp)s(eculativ)m(e)23 b(computation.)39
b(If)22 b(data)g(are)h(in)m(v)-5 b(alidated)21 b(due)i(to)f(con)m(trol)
g(\015o)m(w,)k(they)d(could)f(simply)150 4469 y(b)s(e)33
b(discarded.)296 4649 y(Recen)m(t)d(researc)m(h)h(has)e(sho)m(wn)h
(that)f(compiler)d(analysis)j(can)g(signi\014can)m(tly)e(reduce)j(the)g
(size)150 4830 y(of)g(data)g(t)m(yp)s(es)h(needed)h(to)e(store)h
(program)e(v)-5 b(ariables)29 b([24)o(].)43 b(Incorp)s(orating)29
b(this)h(analysis)g(in)m(to)150 5010 y(our)45 b(o)m(wn)h(has)f(the)h(p)
s(oten)m(tial)d(of)i(drastically)e(impro)m(ving)g(p)s(erformance)i(b)m
(y)h(increasing)f(the)150 5191 y(n)m(um)m(b)s(er)33 b(of)f(op)s(erands)
h(that)g(can)f(b)s(e)h(pac)m(k)m(ed)i(and)d(executed)j(in)d(parallel.)
296 5372 y(T)-8 b(o)s(da)m(y)g(,)25 b(most)c(desktop)i(pro)s(cessors)g
(are)f(equipp)s(ed)g(with)g(m)m(ultimedia)c(extensions.)41
b(Non)m(uni-)1901 5649 y(47)p eop
%%Page: 48 48
48 47 bop 150 100 a Fv(formities)30 b(in)i(the)h(di\013eren)m(t)f
(instruction)g(sets,)i(exacerbated)g(b)m(y)f(a)g(lac)m(k)f(of)g
(compiler)e(supp)s(ort,)150 280 y(has)35 b(left)e(these)i(extensions)h
(underutilized.)47 b(W)-8 b(e)35 b(ha)m(v)m(e)g(sho)m(wn)h(that)e(SLP)h
(compilation)30 b(is)k(not)150 461 y(only)i(p)s(ossible,)i(but)f(also)f
(applicable)f(to)h(a)h(wider)f(class)h(of)g(application)d(domains.)55
b(As)37 b(suc)m(h,)150 641 y(w)m(e)31 b(b)s(eliev)m(e)f(SLP)g
(compilation)d(tec)m(hniques)32 b(ha)m(v)m(e)f(the)f(p)s(oten)m(tial)e
(to)i(b)s(ecome)g(an)g(in)m(tegral)e(part)150 822 y(of)k(general-purp)s
(ose)g(computing)g(in)g(the)h(near)f(future.)1901 5649
y(48)p eop
%%Page: 49 49
49 48 bop 150 888 a Fs(Bibliograph)-6 b(y)199 1401 y
Fv([1])49 b(E.)24 b(Alb)s(ert,)i(K.)e(Knob)s(e,)i(J.)e(Luk)-5
b(as,)27 b(and)d(G.)g(Steele,)i(Jr.)k(Compiling)21 b(F)-8
b(ortran)24 b(8x)g(arra)m(y)h(fea-)351 1582 y(tures)32
b(for)g(the)g(Connection)g(Mac)m(hine)g(computer)g(system.)44
b(In)32 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)33 b(of)h(the)g(A)n(CM)351
1762 y(SIGPLAN)j(Symp)-5 b(osium)36 b(on)g(Par)-5 b(al)5
b(lel)36 b(Pr)-5 b(o)g(gr)g(amming:)47 b(Exp)-5 b(erienc)g(e)35
b(with)i(Applic)-5 b(ations,)351 1943 y(L)g(anguages,)33
b(and)i(Systems)f(\(PPEALS\))p Fv(,)f(New)h(Ha)m(v)m(en,)g(CT,)f(July)g
(1988.)199 2206 y([2])49 b(J.)38 b(R.)g(Allen)f(and)h(K.)g(Kennedy)-8
b(.)62 b(PF)m(C:)39 b(A)f(Program)f(to)h(Con)m(v)m(ert)i(F)-8
b(ortran)37 b(to)h(P)m(arallel)351 2387 y(F)-8 b(orm.)71
b(In)42 b(K.)h(Hw)m(ang,)i(editor,)f Fu(Sup)-5 b(er)g(c)g(omputers:)62
b(Design)43 b(and)g(Applic)-5 b(ations)p Fv(,)44 b(pages)351
2567 y(186{203.)31 b(IEEE)i(Computer)g(So)s(ciet)m(y)g(Press,)h(Silv)m
(er)e(Spring,)g(MD,)g(1984.)199 2831 y([3])49 b(Krste)39
b(Asano)m(vi)m(\023)-46 b(c,)41 b(James)e(Bec)m(k,)i(Bertrand)f
(Irissou,)g(Brian)e(E.)h(D.)g(Kingsbury)-8 b(,)40 b(Nelson)351
3012 y(Morgan,)c(and)g(John)g(W)-8 b(a)m(wrzynek.)55
b(The)37 b(T0)f(V)-8 b(ector)36 b(Micropro)s(cessor.)53
b(In)36 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)351 3192 y(of)34
b(Hot)i(Chips)e(VII)p Fv(,)e(August)h(1995.)199 3456
y([4])49 b(T.)39 b(Blank.)61 b(The)39 b(MasP)m(ar)h(MP-1)f(Arc)m
(hitecture.)62 b(In)39 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)39
b(of)i(the)f(1990)g(Spring)351 3636 y(COMPCON)p Fv(,)32
b(San)h(F)-8 b(rancisco,)32 b(CA,)h(F)-8 b(ebruary)33
b(1990.)199 3900 y([5])49 b(D.)35 b(Callahan)g(and)h(P)-8
b(.)36 b(Ha)m(vlak.)54 b(Scalar)35 b(expansion)i(in)e(PF)m(C:)i(Mo)s
(di\014cations)e(for)g(P)m(aral-)351 4081 y(lelization.)67
b(Sup)s(ercomputer)43 b(Soft)m(w)m(are)f(Newsletter)h(5,)h(Dept.)e(of)f
(Computer)h(Science,)351 4261 y(Rice)32 b(Univ)m(ersit)m(y)-8
b(,)33 b(Octob)s(er)g(1986.)199 4525 y([6])49 b(P)-8
b(.)38 b(Christ)m(y)-8 b(.)61 b(Soft)m(w)m(are)39 b(to)f(Supp)s(ort)h
(Massiv)m(ely)g(P)m(arallel)d(Computing)h(on)h(the)h(MasP)m(ar)351
4705 y(MP-1.)32 b(In)26 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)28
b(of)g(the)h(1990)f(Spring)g(COMPCON)p Fv(,)e(San)g(F)-8
b(rancisco,)27 b(CA,)f(F)-8 b(ebru-)351 4886 y(ary)32
b(1990.)199 5149 y([7])49 b(Derek)40 b(J.)f(DeV)-8 b(ries.)64
b(A)40 b(V)-8 b(ectorizing)38 b(SUIF)i(Compiler:)56 b(Implemen)m
(tation)37 b(and)j(P)m(erfor-)351 5330 y(mance.)j(Master's)34
b(thesis,)f(Univ)m(ersit)m(y)g(of)f(T)-8 b(oron)m(to,)33
b(June)g(1997.)1901 5649 y(49)p eop
%%Page: 50 50
50 49 bop 199 100 a Fv([8])49 b(Keith)40 b(Diefendor\013.)68
b(P)m(en)m(tium)41 b(I)s(I)s(I)g(=)g(P)m(en)m(tium)g(I)s(I)g(+)g(SSE.)
70 b Fu(Micr)-5 b(opr)g(o)g(c)g(essor)42 b(R)-5 b(ep)g(ort)p
Fv(,)351 280 y(13\(3\):1,6{11,)30 b(Marc)m(h)k(1999.)199
528 y([9])49 b(Keith)40 b(Diefendor\013.)67 b(Son)m(y's)43
b(Emotionally)37 b(Charged)42 b(Chip.)68 b Fu(Micr)-5
b(opr)g(o)g(c)g(essor)42 b(R)-5 b(ep)g(ort)p Fv(,)351
709 y(13\(5\):1,6{11,)30 b(April)h(1999.)150 956 y([10])49
b(Keith)e(Diefendor\013)g(and)h(Pradeep)i(K.)e(Dub)s(ey)-8
b(.)90 b(Ho)m(w)48 b(Multimedia)e(W)-8 b(orkloads)47
b(Will)351 1137 y(Change)33 b(Pro)s(cessor)g(Design.)43
b Fu(IEEE)35 b(Computer)p Fv(,)d(30\(9\):43{45,)f(Septem)m(b)s(er)i
(1997.)150 1385 y([11])49 b(G.)29 b(H.)h(Barnes,)h(R.)e(Bro)m(wn,)i(M.)
f(Kato,)g(D.)f(J.)h(Kuc)m(k,)i(D.)d(L.)g(Slotnic)m(k,)h(and)g(R.)g(A.)f
(Stok)m(es.)351 1565 y(The)i(Illiac)c(IV)k(Computer.)39
b Fu(IEEE)33 b(T)-7 b(r)i(ansactions)31 b(on)h(Computers)p
Fv(,)e(C\(17\):746{757,)f(Au-)351 1746 y(gust)j(1968.)150
1994 y([12])49 b(Linley)22 b(Gw)m(ennap.)29 b(AltiV)-8
b(ec)23 b(V)-8 b(ectorizes)24 b(P)m(o)m(w)m(erPC.)31
b Fu(Micr)-5 b(opr)g(o)g(c)g(essor)25 b(R)-5 b(ep)g(ort)p
Fv(,)25 b(12\(6\):1,6{)351 2174 y(9,)32 b(Ma)m(y)h(1998.)150
2422 y([13])49 b(Craig)63 b(Hansen.)140 b(MicroUnit)m(y's)65
b(MediaPro)s(cessor)h(Arc)m(hitecture.)140 b Fu(IEEE)64
b(Micr)-5 b(o)p Fv(,)351 2603 y(16\(4\):34{41,)30 b(Aug)j(1996.)150
2851 y([14])49 b(Jens)e(Kno)s(op,)i(Oliv)m(er)d(R)s(\177)-51
b(uthing,)48 b(and)e(Bernhard)h(Ste\013en.)85 b(Lazy)47
b(Co)s(de)g(Motion.)84 b(In)351 3031 y Fu(Pr)-5 b(o)g(c)g(e)g(e)g
(dings)45 b(of)h(the)h(A)n(CM)f(SIGPLAN'92)h(Confer)-5
b(enc)g(e)45 b(on)h(Pr)-5 b(o)g(gr)g(amming)46 b(L)-5
b(anguage)351 3212 y(Design)33 b(and)h(Implementation)p
Fv(,)d(pages)i(224{234,)e(San)i(F)-8 b(rancisco,)32 b(CA,)h(July)g
(1992.)150 3460 y([15])49 b(D.J.)23 b(Kuc)m(k,)k(R.H.)c(Kuhn,)j(D.)d(P)
m(adua,)j(B.)e(Leasure,)j(and)d(M.)g(W)-8 b(olfe.)28
b(Dep)s(endence)d(Graphs)351 3640 y(and)45 b(Compiler)f(Optimizations.)
79 b(In)46 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)45 b(of)i(the)g(8th)g(A)n
(CM)f(Symp)-5 b(osium)46 b(on)351 3821 y(Priciples)i(of)h(Pr)-5
b(o)g(gr)g(amming)48 b(L)-5 b(anguages)p Fv(,)51 b(pages)e(207{218,)i
(Williamsburg,)d(V)-11 b(A,)49 b(Jan)351 4001 y(1981.)150
4249 y([16])g(Corina)40 b(G.)h(Lee)h(and)f(Derek)h(J.)f(DeV)-8
b(ries.)69 b(Initial)39 b(Results)i(on)h(the)f(P)m(erformance)h(and)351
4430 y(Cost)30 b(of)f(V)-8 b(ector)29 b(Micropro)s(cessors.)40
b(In)29 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)31 b(of)h(the)g(30th)g(A)n
(nnual)f(International)351 4610 y(Symp)-5 b(osium)31
b(on)g(Micr)-5 b(oA)n(r)g(chite)g(cutr)g(e)p Fv(,)30
b(pages)g(171{182,)f(Researc)m(h)i(T)-8 b(riangle)28
b(P)m(ark,)i(USA,)351 4791 y(Decem)m(b)s(er)i(1997.)150
5039 y([17])49 b(Corina)30 b(G.)h(Lee)h(and)g(Mark)g(G.)f(Sto)s(o)s
(dley)-8 b(.)40 b(Simple)30 b(V)-8 b(ector)32 b(Micropro)s(cessors)g
(for)f(Multi-)351 5219 y(media)d(Applications.)36 b(In)30
b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)30 b(of)i(the)g(31st)g(A)n(nnual)f
(International)g(Symp)-5 b(osium)351 5400 y(on)34 b(Micr)-5
b(oA)n(r)g(chite)g(cutr)g(e)p Fv(,)33 b(pages)g(25{36,)e(Dallas,)g(TX,)
i(Decem)m(b)s(er)g(1998.)1901 5649 y(50)p eop
%%Page: 51 51
51 50 bop 150 100 a Fv([18])49 b(Rub)m(y)40 b(Lee.)66
b(Sub)m(w)m(ord)42 b(P)m(arallelism)37 b(with)i(MAX-2.)65
b Fu(IEEE)42 b(Micr)-5 b(o)p Fv(,)42 b(16\(4\):51{59,)e(Aug)351
280 y(1996.)150 544 y([19])49 b(Glenn)37 b(Luec)m(k)m(e)i(and)f(W)-8
b(aqar)38 b(Haque.)60 b(Ev)-5 b(aluation)36 b(of)h(F)-8
b(ortran)36 b(V)-8 b(ector)39 b(Compilers)d(and)351 724
y(Prepro)s(cessors.)45 b Fu(Softwar)-5 b(e|Pr)g(actic)g(e)34
b(and)g(Exp)-5 b(erienc)g(e)p Fv(,)31 b(21\(9\),)h(Septem)m(b)s(er)i
(1991.)150 988 y([20])49 b(Marc)28 b(T)-8 b(rem)m(bla)m(y)29
b(and)f(Mic)m(hael)g(O'Connor)h(and)g(V)-8 b(enk)j(atesh)30
b(Nara)m(y)m(anan)f(and)f(Liang)f(He.)351 1169 y(VIS)33
b(Sp)s(eeds)h(New)f(Media)f(Pro)s(cessing.)44 b Fu(IEEE)35
b(Micr)-5 b(o)p Fv(,)33 b(16\(4\):10{20,)d(Aug)j(1996.)150
1432 y([21])49 b(Motorola.)68 b Fu(A)n(ltiV)-7 b(e)i(c)43
b(T)-7 b(e)i(chnolo)g(gy)41 b(Pr)-5 b(o)g(gr)g(amming)42
b(Envir)-5 b(onments)42 b(Manual)p Fv(,)i(No)m(v)m(em)m(b)s(er)351
1613 y(1998.)150 1876 y([22])49 b(Alex)36 b(P)m(eleg)g(and)h(Uri)e(W)-8
b(eiser.)55 b(MMX)37 b(T)-8 b(ec)m(hnology)37 b(Extension)g(to)f(In)m
(tel)g(Arc)m(hitecture.)351 2057 y Fu(IEEE)e(Micr)-5
b(o)p Fv(,)33 b(16\(4\):42{50,)e(Aug)h(1996.)150 2320
y([23])49 b(Radu)28 b(Rugina)f(and)h(Martin)f(Rinard.)36
b(P)m(oin)m(ter)28 b(Analysis)g(for)g(Multithreaded)g(Programs.)351
2501 y(In)34 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)34 b(of)i(the)g
(SIGPLAN)g('99)g(Confer)-5 b(enc)g(e)34 b(on)i(Pr)-5
b(o)g(gr)g(amming)34 b(L)-5 b(anguage)36 b(De-)351 2682
y(sign)e(and)g(Implementation)p Fv(,)d(A)m(tlan)m(ta,)h(GA,)g(Ma)m(y)i
(1999.)150 2945 y([24])49 b(Mark)30 b(Stephenson,)j(Jonathon)d(Babb,)g
(and)h(Saman)e(Amarasinghe.)38 b(Bit)m(width)29 b(Analysis)351
3126 y(with)40 b(Application)f(to)h(Silicon)f(Compilation.)64
b(In)41 b Fu(Pr)-5 b(o)g(c)g(e)g(e)g(dings)42 b(of)g(the)g(SIGPLAN)h
('00)351 3306 y(Confer)-5 b(enc)g(e)35 b(on)h(Pr)-5 b(o)g(gr)g(amming)
36 b(L)-5 b(anguage)36 b(Design)f(and)h(Implementation)p
Fv(,)e(V)-8 b(ancouv)m(er,)351 3487 y(BC,)33 b(June)g(2000.)150
3751 y([25])49 b(Thinking)38 b(Mac)m(hines)j(Corp)s(oration,)f(Cam)m
(bridge,)g(MA.)65 b Fu(Conne)-5 b(ction)40 b(Machine)g(CM-2)351
3931 y(T)-7 b(e)i(chnic)g(al)32 b(Summary)p Fv(,)h(April)e(1987.)150
4195 y([26])49 b(Thinking)27 b(Mac)m(hines)h(Corp)s(oration,)f(Cam)m
(bridge,)h(MA.)36 b Fu(Conne)-5 b(ction)29 b(Machine)h(CM-200)351
4375 y(T)-7 b(e)i(chnic)g(al)32 b(Summary)p Fv(,)h(June)g(1991.)150
4639 y([27])49 b(R.)36 b(P)-8 b(.)38 b(Wilson,)f(R.)g(S.)g(F)-8
b(renc)m(h,)39 b(C.)f(S.)f(Wilson,)g(S.)g(P)-8 b(.)38
b(Amarasinghe,)f(J.)g(M.)h(Anderson,)351 4819 y(S.)f(W.)h(K.)f(Tjiang,)
h(S.-W.)f(Liao,)g(C.-W.)h(Tseng,)i(M.)e(W.)f(Hall,)g(M.)h(S.)f(Lam,)h
(and)f(J.)h(L.)351 5000 y(Hennessy)-8 b(.)37 b(SUIF:)28
b(An)g(Infrastructure)h(for)e(Researc)m(h)i(on)e(P)m(arallelizing)d
(and)k(Optimizing)351 5181 y(Compilers.)42 b Fu(A)n(CM)34
b(SIGPLAN)i(Notic)-5 b(es)p Fv(,)33 b(29\(12\):31{37,)d(Decem)m(b)s(er)
j(1994.)1901 5649 y(51)p eop
%%Page: 52 52
52 51 bop 150 888 a Fs(App)6 b(endix)77 b(A)150 1428
y(Multimedia)g(Kernels)150 2025 y Fb(#define)37 b(M_SIZE)g(256)150
2183 y(float)g(A[M_SIZE*M_SIZE];)150 2261 y(float)g(B[M_SIZE*M_SIZE];)
150 2340 y(float)g(C[M_SIZE*M_SIZE];)150 2577 y(void)f
(vectorMultiply\(float)41 b(A[M_SIZE*M_SIZE],)856 2656
y(float)36 b(B[M_SIZE],)856 2735 y(float)g(C[M_SIZE]\))j({)221
2814 y(int)d(i,j;)221 2971 y(for)g(\(i=0;)g(i<M_SIZE;)i(i++\))f({)291
3050 y(C[i])g(=)e(0.0;)291 3129 y(for)h(\(j=0;)h(j<M_SIZE;)h(j++\))e({)
362 3208 y(C[i])g(=)g(C[i])g(+)g(B[j])g(*)g(A[i*M_SIZE+j];)291
3287 y(})221 3366 y(})150 3444 y(})150 3681 y(int)g(main\(\))h({)221
3760 y(int)f(i,)g(j;)221 3918 y(for)g(\(j=0;)g(j<9;)h(j++\))f({)291
3997 y(for)g(\(i=0;)h(i<M_SIZE;)h(i++\))e({)362 4075
y(vectorMultiply\(A,)k(&B[i*M_SIZE],)f(&C[i*M_SIZE]\);)291
4154 y(})221 4233 y(})150 4312 y(})1027 4623 y Fv(Figure)31
b(A-1:)43 b(VMM:)34 b(V)-8 b(ector-matrix)31 b(m)m(ultiply)-8
b(.)1901 5649 y(52)p eop
%%Page: 53 53
53 52 bop 150 282 a Fb(#define)37 b(M_SIZE)g(256)150
440 y(float)g(A[M_SIZE*M_SIZE];)150 519 y(float)g(B[M_SIZE*M_SIZE];)150
598 y(float)g(C[M_SIZE*M_SIZE];)150 834 y(/*)f(Performs)h(C)f(=)g
(A\(B^T\))h(as)e(a)h(2D)g(matrix)h(multiply)g(*/)150
913 y(/*)f(This)g(is)g(done)h(using)f(the)g(straight)i(forward)f
(implementation)j(which)c(takes)185 992 y(*)g(O\(n^3\))h(time.)72
b(It)36 b(is)g(not)g(Strausen's)i(alg)e(which)h(runs)f(in)g(O\(n^lg7\))
i(time.)72 b(*/)150 1150 y(void)36 b(matrixMultiply\(float)41
b(A[M_SIZE*M_SIZE],)856 1229 y(float)36 b(B[M_SIZE*M_SIZE],)856
1308 y(float)g(C[M_SIZE*M_SIZE]\))41 b({)221 1386 y(float*)c(v1;)221
1465 y(float*)g(v2;)221 1544 y(float)f(prod[M_SIZE];)221
1623 y(float)g(sum;)221 1781 y(int)g(i,j,k;)221 1860
y(for)g(\(i=0;)g(i<M_SIZE;)i(i++\))f({)291 1939 y(for)f(\(j=0;)h
(j<M_SIZE;)h(j++\))e({)362 2017 y(sum)g(=)f(0.0;)362
2096 y(for)h(\(k=0;)h(k<M_SIZE;)g(k++\))g({)432 2175
y(prod[k])h(=)d(A[i*M_SIZE+k])k(*)d(B[j*M_SIZE+k];)362
2254 y(})362 2333 y(for)g(\(k=0;)h(k<M_SIZE;)g(k++\))g({)432
2412 y(sum)f(=)g(sum)g(+)g(prod[k];)362 2491 y(})362
2569 y(C[i*M_SIZE+j])j(=)c(sum;)291 2648 y(})221 2727
y(})150 2806 y(})150 3043 y(/*)185 3122 y(*)h(Transposes)i(A)e(in)f
(place.)185 3200 y(*/)150 3279 y(void)h(matrixTranspose\(float)42
b(A[M_SIZE*M_SIZE]\))e({)221 3358 y(int)c(i,j;)221 3437
y(float)g(t;)221 3595 y(for)g(\(i=0;)g(i<M_SIZE;)i(i++\))f({)291
3674 y(for)f(\(j=i;)h(j<M_SIZE;)h(j++\))e({)362 3753
y(t)f(=)h(A[i*M_SIZE+j];)362 3831 y(A[i*M_SIZE+j])j(=)c(A[j*M_SIZE+i];)
362 3910 y(A[j*M_SIZE+i])k(=)c(t;)291 3989 y(})221 4068
y(})150 4147 y(})150 4384 y(int)h(main\(\))h({)221 4462
y(int)f(i;)221 4620 y(for)g(\(i=0;)g(i<10;)h(i++\))g({)291
4699 y(matrixTranspose\(B\);)291 4778 y(matrixMultiply\(A,B,C\);)221
4857 y(})150 4936 y(})1011 5247 y Fv(Figure)31 b(A-2:)43
b(MMM:)34 b(Matrix-matrix)c(m)m(ultiply)-8 b(.)1901 5649
y(53)p eop
%%Page: 54 54
54 53 bop 150 719 a Fb(/*)185 798 y(*)36 b(Code)g(based)h(on)f(FIR/IIR)
h(documentation)i(found)e(at:)185 877 y(*)f(http://www-svr.eng.cam.a)q
(c.u)q(k/~a)q(jr/)q(Spee)q(chA)q(naly)q(sis)q(/nod)q(e13)q(.htm)q(l)185
955 y(*/)150 1113 y(#define)h(FILTER_LENGTH)i(256)150
1192 y(#define)e(SIGNAL_LENGTH)i(1024)150 1350 y(float)e
(input_data[SIGNAL_LENGTH)q(];)150 1429 y(float)g
(output_data[SIGNAL_LENGT)q(H];)150 1507 y(float)g
(filter1[FILTER_LENGTH];)150 1744 y(/*)185 1823 y(*)f(Applys)h(an)f
(FIR)g(filter)h(to)f(input)g(to)g(produce)i(output.)72
b(filter)37 b(is)185 1902 y(*)f(an)g(array)g(of)g(coefficients)j(to)d
(calculate)i(a)d(weighted)j(sum)e(of)g(input)185 1981
y(*)g(to)g(get)g(output.)72 b(Note)37 b(that)f(for)g(efficiency)j(of)c
(calculation)185 2060 y(*)h(the)g(order)h(of)f(the)g(terms)g(in)g
(filter)h(is)f(the)g(reverse)i(of)d(what)185 2138 y(*)h(one)g(might)h
(expect.)185 2217 y(*)185 2296 y(*/)150 2454 y(void)f(applyFIR\(float)k
(input[SIGNAL_LENGTH],)644 2533 y(float)d(filter[FILTER_LENGTH],)644
2612 y(float)g(output[SIGNAL_LENGTH]\))k({)221 2691 y(int)36
b(i,j;)221 2848 y(for)g(\(i=0;)g(i<FILTER_LENGTH;)k(i++\))d({)291
2927 y(output[i])h(=)e(0.0;)291 3006 y(for)g(\(j=FILTER_LENGTH-i-1;)42
b(j<=FILTER_LENGTH-1;)e(j++\))d({)362 3085 y(output[i])h(=)d(output[i])
j(+)e(input[1+i-FILTER_LENGTH+j)q(]*f)q(ilte)q(r[j)q(];)291
3164 y(})221 3243 y(})221 3322 y(for)g(\(i=FILTER_LENGTH;)k
(i<SIGNAL_LENGTH;)g(i++\))c({)291 3400 y(output[i])i(=)e(0.0;)291
3479 y(for)g(\(j=0;)h(j<FILTER_LENGTH;)j(j++\))c({)362
3558 y(output[i])i(=)d(output[i])j(+)e(input[1+i-FILTER_LENGTH+j)q(]*f)
q(ilte)q(r[j)q(];)291 3637 y(})221 3716 y(})150 3795
y(})150 4031 y(int)g(main\(\))h({)221 4110 y(int)f(i;)221
4268 y(for)g(\(i=0;)g(i<300;)h(i++\))g({)291 4347 y
(applyFIR\(input_data,)k(filter1,)d(output_data\);)221
4426 y(})150 4505 y(})936 4816 y Fv(Figure)31 b(A-3:)43
b(FIR:)32 b(Finite)f(impulse)h(resp)s(onse)i(\014lter.)1901
5649 y(54)p eop
%%Page: 55 55
55 54 bop 150 640 a Fb(/*)185 719 y(*)36 b(Code)g(based)h(on)f(FIR/IIR)
h(documentation)i(found)e(at:)185 798 y(*)f(http://www-svr.eng.cam.a)q
(c.u)q(k/~a)q(jr/)q(Spee)q(chA)q(naly)q(sis)q(/nod)q(e13)q(.htm)q(l)185
877 y(*/)150 1034 y(#define)h(FILTER_LENGTH)i(256)150
1113 y(#define)e(SIGNAL_LENGTH)i(1024)150 1271 y(float)e
(input_data[SIGNAL_LENGTH)q(];)150 1350 y(float)g
(output_data[SIGNAL_LENGT)q(H];)150 1429 y(float)g
(filter1[FILTER_LENGTH];)150 1507 y(float)g(filter2[FILTER_LENGTH];)150
1744 y(/*)185 1823 y(*)f(Note)g(that)h(the)f(filters)h(are)f
(backwards.)185 1902 y(*/)150 2060 y(void)g(applyIIR\(float)k
(input[SIGNAL_LENGTH],)644 2138 y(float)d(inFilter[FILTER_LENGTH],)644
2217 y(float)g(outFilter[FILTER_LENGTH])q(,)644 2296
y(float)g(output[FILTER_LENGTH]\))k({)221 2375 y(int)36
b(i,j;)221 2533 y(for)g(\(i=0;)g(i<FILTER_LENGTH;)k(i++\))d({)291
2612 y(output[i])h(=)e(0.0;)291 2691 y(for)g(\(j=0;)h(j<=i;)g(j++\))f
({)362 2769 y(output[i])i(=)d(output[i])j(+)432 2848
y(input[j-FILTER_LENGTH+)q(1+i])q(*in)q(Filt)q(er[)q(j])j(+)432
2927 y(output[j-FILTER_LENGTH)q(+1+i)q(]*o)q(utFi)q(lte)q(r[j])q(;)291
3006 y(})221 3085 y(})221 3164 y(for)36 b(\(i=FILTER_LENGTH;)k
(i<SIGNAL_LENGTH;)g(i++\))c({)291 3243 y(output[i]=0.0;)291
3322 y(for)g(\(j=0;)h(j<FILTER_LENGTH;)j(j++\))c({)362
3400 y(output[i])i(=)d(output[i])j(+)432 3479 y(input[j-FILTER_LENGTH+)
q(1+i])q(*in)q(Filt)q(er[)q(j])j(+)432 3558 y(output[j-FILTER_LENGTH)q
(+1+i)q(]*o)q(utFi)q(lte)q(r[j])q(;)291 3637 y(})221
3716 y(})150 3795 y(})150 4031 y(int)36 b(main\(\))h({)221
4110 y(int)f(i;)221 4189 y(filter2[0])i(=)d(0.0;)72 b(/*)36
b(Must)g(be)g(zero)h(*/)221 4347 y(for)f(\(i=0;)g(i<300;)h(i++\))g({)
291 4426 y(applyIIR\(input_data,)k(filter1,)d(filter2,)f
(output_data\);)221 4505 y(})150 4583 y(})922 4895 y
Fv(Figure)32 b(A-4:)43 b(I)s(IR:)32 b(In\014nite)h(impulse)e(resp)s
(onse)j(\014lter.)1901 5649 y(55)p eop
%%Page: 56 56
56 55 bop 150 443 a Fb(/*)185 522 y(*)36 b(YUV)g(equations)i(taken)f
(from)185 600 y(*)f(http://www.cse.msu.edu/~)q(cbo)q(wen/)q(doc)q(s/yu)
q(vto)q(rgb.)q(htm)q(l)185 679 y(*/)150 837 y(#define)h(VECTOR_SIZE)i
(4096)150 995 y(short)e(int)f(R[VECTOR_SIZE];)150 1074
y(short)h(int)f(G[VECTOR_SIZE];)150 1153 y(short)h(int)f
(B[VECTOR_SIZE];)150 1231 y(short)h(int)f(Y[VECTOR_SIZE];)150
1310 y(short)h(int)f(U[VECTOR_SIZE];)150 1389 y(short)h(int)f
(V[VECTOR_SIZE];)150 1626 y(void)g(convertRGBtoYUV\(\))41
b({)221 1705 y(int)36 b(i;)221 1784 y(for)g(\(i=0;)g(i<VECTOR_SIZE;)k
(i++\))c({)291 1862 y(Y[i])h(=)e(\(R[i]*77)j(+)d(G[i]*150)j(+)d
(B[i]*29\);)291 1941 y(U[i])i(=)e(\(R[i]*-43)j(+)e(G[i]*-85)h(+)f
(B[i]*128)h(+)f(32767\);)291 2020 y(V[i])h(=)e(\(R[i]*128)j(+)e
(G[i]*-107)h(+)f(B[i]*-21)i(+)d(32767\);)291 2099 y(Y[i])i(=)e(Y[i])i
(+)e(256;)291 2178 y(U[i])i(=)e(U[i])i(+)e(256;)291 2257
y(V[i])i(=)e(V[i])i(+)e(256;)291 2336 y(Y[i])i(=)e(Y[i])i(>>)e(8;)291
2414 y(U[i])i(=)e(U[i])i(>>)e(8;)291 2493 y(V[i])i(=)e(V[i])i(>>)e(8;)
221 2572 y(})150 2651 y(})150 2888 y(void)h(convertYUVtoRGB\(\))41
b({)221 2967 y(int)36 b(i;)221 3045 y(for)g(\(i=0;)g(i<VECTOR_SIZE;)k
(i++\))c({)291 3124 y(Y[i])h(=)e(Y[i])i(<<)e(8;)291 3203
y(R[i])i(=)e(\(Y[i]+\(360*\(V[i]-128\)\)\))q(;)291 3282
y(G[i])i(=)e(\(Y[i]-\(88*\(U[i]-128\))41 b(-)36 b
(\(184*\(V[i]-128\)\)\)\);)291 3361 y(B[i])h(=)e
(\(Y[i]+\(455*\(U[i]-128\)\)\))q(;)291 3440 y(R[i])i(=)e(R[i])i(+)e
(256;)291 3519 y(G[i])i(=)e(G[i])i(+)e(256;)291 3598
y(B[i])i(=)e(B[i])i(+)e(256;)291 3676 y(R[i])i(=)e(R[i])i(>>)e(8;)291
3755 y(G[i])i(=)e(G[i])i(>>)e(8;)291 3834 y(B[i])i(=)e(B[i])i(>>)e(8;)
221 3913 y(})150 3992 y(})150 4229 y(int)h(main\(\))h({)221
4307 y(int)f(i;)221 4465 y(for)g(\(i=0;)g(i<1000;)i(i++\))e({)291
4544 y(convertRGBtoYUV\(\);)291 4623 y(convertYUVtoRGB\(\);)221
4702 y(})150 4781 y(})1000 5092 y Fv(Figure)c(A-5:)43
b(YUV:)33 b(R)m(GB)f(to)g(YUV)h(con)m(v)m(ersion.)1901
5649 y(56)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
