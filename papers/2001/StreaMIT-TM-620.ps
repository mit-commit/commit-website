%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: paper.dvi
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica Times-Bold Times-Italic
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips paper.dvi -o paper.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.05.27:2348
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmbx12 12 25
/Fa 25 122 df<143E147F4A7EA56EC8FC00081508003E153E007F157FD8FFC0903801FF
8001E05B9038F03E0701F85BD87FFE013F130001FF5B001F9038BEFFFC000390B512E0C6
6C91C7FC010F13F8010113C0A2010F13F8017F13FF0003B612E0001F01BE13FC007F9038
3E7FFF01FE7FD8FFF8010F138001F07F9038E07F0301C07FD87F009038007F00003E153E
00081508C791C7FC4A7EA56EC8FC143E292C79CA38>42 D<EA07C0EA1FF0EA3FF8EA7FFC
EAFFFEA7EA7FFCEA3FF8EA1FF0EA07C0C7FCAEEA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA
7FFCEA3FF8EA1FF0EA07C00F2C78AB1F>58 D<EE1F80A24C7EA24C7EA34C7EA24B7FA34B
7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B7E02018115
F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E80027E82027F
B7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA249488284011F8491C9
7E4984133E017E82B6020FB612F0A54C457CC455>65 D<B9FC18F018FE727E19E026003F
FEC7001F13F805017F9438003FFF060F7F727F727F727F84737E737EA2737EA2737EA21B
80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B4E5B06
3F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356>68
D<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191EA21778A2
85A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2F103
C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443
447DC34A>I<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E01803
A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F160716
03A31601A693C9FCAFB712F0A53C447CC346>I<B712E0A5D8001F90C7FCB3B3B3A4B712
E0A523447DC32A>73 D<0107B7FCA590C7001F1300B3B3A9EA1FE0487E487EA2487EA44B
5AA26C48495A495C6C4813FF6C48485B260FFC0713C06CB65A6C4AC7FCC66C13F8010F13
8030457DC33A>I<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E
7F6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F70
7F707F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19FF8472
13F884848484A28484197F193F191FA2190F1907B61603190119001A78A24F447CC358>
78 D<B9FC18F018FE727E19E0D8001F90C7000F7F05017F716C7E727E727E721380A21A
C084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D485A050F5B92B712C096C7FC18FC18
C092CBFCB3A7B712E0A543447DC34D>80 D<B812F8EFFFC018F818FE727ED8001F90C700
3F13E005037F05007F727E727E727EA28684A286A762A24E90C7FCA24E5A61187F943801
FFF005075B053F138092B7C8FC18F818E018F892C77FEF3FFF050F7F717F717FA2717FA2
717FA785A61B0F85A2187F73131F72141EB700E06DEB803E72EBE0FC72EBFFF8060114F0
726C13E0CC0007138050457DC354>82 D<DAFFE0131C010701FE133C013F9038FF807C90
B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848140F491407007F
15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF
6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F80140003077FED007F
82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D140701F84A5A01
FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F0480107138031467A
C43E>I<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F90C71607A2007E
1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8FCA545437CC24E
>I<007FB6D8C003B61280A5D8000F01E0C7D801F8C7FC6D4C5A6F14076D6D5D6D6D4A5A
4E5A6D6D143F6E6C92C8FC6E157E705B6EEBC0016E01E05B4D5A6E6D485A6EEBF80F6E01
FC5B4D5A6E6D48C9FC6F6C5A6F137E5F6F5B815F816F7F81836F7F707E93B5FC844B805D
4B8004E77FDB0FC37FED1F83DB3F817F04007F037E137F4B8002016E7F4B6D7F4A5A4A48
6D7F020F6E7F4B7F4A48814AC76C7F717F147E4A6F7E0101707F4A8149488349486F7F01
0F707FB600E00103B612FCA54E447DC355>88 D<903801FFE0011F13FE017F6D7E48B612
E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA4
0203B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B
12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE0
1FC66CEB8007D90FFCC9FC322F7DAD36>97 D<EC3FF80103B57E010F14E0013F8090397F
F83FF89039FFC007FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2
127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E0
6C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F00101
14C09026001FFEC7FC2C2F7DAD33>101 D<137C48B4FC4813804813C0A24813E0A56C13
C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>
105 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>108
D<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00039039
9F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>110
D<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA
3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A4
6C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7
FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90391FFC038090B51287
000314FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E090
C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F02
0313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038
F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>115
D<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601
E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13
FC01015B9038003FE023407EBE2C>I<B6903803FFFCA5000101E09038003E006C163C80
017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E
6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E
90C8FCA26E5AA26E5AA21578362C7EAB3B>118 D<B500FE90383FFFF0A5C601F0903803
E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06D
EBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A
6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E017E141FB500E090
B512FCA5362C7EAB3B>120 D<B6903803FFFCA5000101E09038003E006C163C80017F5D
8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE0
1E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FC
A26E5AA26E5AA21578A215F85D14015D001F1303D83F805B387FC007D8FFE05B140F92C9
FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407EAB3B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr5 5 2
/Fb 2 62 df<EA01FCEA07FF380F0780381C01C0383800E0A2007813F000701370A200F0
1378AB00701370A2007813F0003813E0A2381C01C0380F07803807FF00EA01FC151D7D9B
1C>48 D<B712C0A3CAFCA7B712C0A3220D7C902B>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmex7 7 1
/Fc 1 81 df<B912FC84A2D87F80C8127F6C6CED03FF17006C6C163F6C6CEE0F806C6C16
076C6C1603F001C06C6C16006C7E6D6C16606D6C1600A26D7E6D7E6D7E6D7E1301806D7E
6E7E6E7E6E7EA26E7E6E7E14036E5A5D4A5A4A5A4ACAFC141E143E5C5C5C495A495A495A
49CA1260011E17C05B49160149EE0380000117074848160F4848EE1F0049167F48C9EA03
FF001EEE7FFE003FB8FC5AB95AA23B3A7B7F46>80 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy7 7 6
/Fd 6 106 df<B712FEA327037A8F34>0 D<160E163E16FEED03F8ED0FE0ED3F80EDFE00
EC03F8EC0FE0EC3F8002FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03F8EA0FE0EA3F8000
FEC9FC12F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00FEEC3F80EC0F
E0EC03F8EC00FEED3F80ED0FE0ED03F8ED00FE163E160E1600AB007FB612FCB712FEA227
357AA734>20 D<12E012F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00
FEEC3F80EC0FE0EC03F8EC00FEED3F80ED0FE0ED03F8ED00FE163E16FEED03F8ED0FE0ED
3F80EDFE00EC03F8EC0FE0EC3F8002FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03F8EA0F
E0EA3F80007EC9FC12F812E0CAFCAB007FB612FCB712FEA227357AA734>I<0103B512E0
013F14FC90B7FC2703F0780313C03B0F80F8007FE0D81E00EC1FF0481507007CED03F800
78150112F800E01500C75A130117F0160117E04A1303010315C0EE0780EE0F00161E4A5B
010714F0ED03E09138801F8090260F8FFEC7FCEC9FF0ECBF8091C9FC5BA2131E133EA213
3C137C137813F8A25B120113C090CAFC2D2B7EA72F>80 D<1306130E131E131CA2133C13
381378137013F013E0120113C0A212031380120713005A120EA2121E121C123C12381278
1270A212F05A7E1270A212781238123C121C121E120EA2120F7E1380120313C01201A213
E0120013F0137013781338133C131CA2131E130E13060F3B79AB1B>104
D<12E0A27E1270A212781238123C121C121E120EA27EA21380120313C0120113E01200A2
13F0137013781338133C131CA2131E130E131E131CA2133C13381378137013F013E0A212
0113C012031380120713005AA2120E121E121C123C123812781270A212F05AA20F3B7CAB
1B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr7 7 4
/Fe 4 60 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2121C
123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E013
6013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0
120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0120113
C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FC
B3A22B2B7DA333>43 D<1238127C12FEA3127C12381200AB1238127C12FC12FEA2127E12
3E1206A3120CA31218A212301270122007247B9813>59 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmmi7 7 19
/Ff 19 118 df<1238127C12FEA3127C123807077A8614>58 D<1238127C12FE12FFA212
7F123B1203A31206A3120C121812381270122008127A8614>I<4B7E1503150782150F15
1FA2153FA2156F15CF82EC0187140315071406140E140C02187FA2EC30031460A214C013
011480D903007F91B5FC5B90380C0001A25B13380130805B01E013005B12011203000F4A
7ED8FFF890381FFFE0A22B2A7DA932>65 D<013FB612FCA2903901FC00014AEB007C173C
0103153817185CA21307A24A13C0A2010F010113005E14C01503011F130F91B5C7FCA2EC
800F013F7F15061400A249010E13E0030C13C0017E90C7FC160101FEEC0380A249EC0700
A20001150E161E495C16FC0003EC07F8B7FC5E2E287DA731>69 D<90383FFFF0A2903801
FC005CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7FCA25BA2137EA2
13FEA25BA21201A25BA21203B512C0A21C287DA71D>73 D<D93FFCED3FFC187F0101EEFF
0002BE5DEF01BE0103ED037E187C023E1406170C496C15FC4D5A01061530A2010E1561EF
C1F090380C0F80EE0181011CEC03036001181406160C01381507912607C0185B01301430
A20170EC600F04C05B1360913803E18001E09038E3001F95C7FC01C013E615EC00015EDA
01F8133E01805BEA03C000074A137ED8FFFC9039C01FFFF014003E287CA73F>77
D<4AB4FC021F13E091387E01F8903901F0007ED907C0131F4948EB0F80011EC7EA07C013
7C49EC03E0485AEE01F0485A485A120F4915F8121F90C8FC5A17F0007E1503A4EE07E05A
EE0FC0A2EE1F80A2007CED3F00007E153E167E003E5D4B5A6C4A5A6DEB07C0000F4A5A6C
6C013FC7FCD803F013FC3900FC03F090383FFFC0D907FCC8FC2D2A7DA832>79
D<91381FE0089138FFFC18903903E01E3890390780077090390E0003F049130149130001
7814E0137013F0A2000115C0A216007F7F6CB47E14F86DB47E6D13F06D7F01077F01007F
1407EC00FF153F81A3001880A20038141E12300038141C153C00781438007C5C007E5C00
77EB03C026E3E00FC7FC38C0FFFE38801FF0252A7CA829>83 D<000FB712E05A9039800F
E007D81E009038C001C05A0038011F1300123000705C00601501023F148012E0481400A2
C74890C7FCA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131F
001FB57EA22B287DA727>I<903B3FFFE00FFFC0A2010190390001FC006D4814F017C002
7F495A4CC7FC6E130E6F5A021F5B6F5A5E91380FE1C0EDE380DA07F7C8FC15FE6E5A5D6E
7EA2811403EC077F140E4A7E02187FEC301F02607F14C049486C7EEB030001066D7E5B01
386D7E5B01F06D7E485AD80FF0497ED8FFFC90381FFFE0A232287DA736>88
D<EB0FC0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E1338481370EB07E0387FFF
8038FFFC0000F8C7FCA45AA214040078130C141800381330003C13E0381E07C0380FFF00
EA03F8161B7C991F>101 D<133EEA07FEA2EA007CA213FCA25BA21201A25BA2120314FC
EBE3FF9038EF0780D807FC13C0EBF00313E0A2EA0FC014071380A2121FEC0F801300A248
EB1F00A2003E1406143E127EEC7C0C127C151800FCEB3C30157048EB1FE00070EB0F801F
297CA727>104 D<133EEA07FEA2EA007CA213FCA25BA21201A25BA21203EC07809038E0
1FC0EC38600007EB61E014C3EBC187EBC307D80FC613C09038CC038001B8C7FC13E0487E
13FEEB3F80EB0FC0486C7E1303003E1460A2127EECC0C0127CECC18012FC903801E30038
F800FE0070137C1B297CA723>107 D<3907801FC0390FE07FF03918F0E0F83930F1807C
EBFB00D860FE133C5B5B00C1147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F80
07C0C0A2EDC180913803C300D81F0013C7EC01FE000EEB00F8231B7D9929>110
D<EB0FE0EB3FF8EBF83C3801E00E3803C00F3907800780EA0F00121E123E003C14C0127C
158048130FA31500485BA2143E143C5C12785C383C03C0381E0F80D80FFEC7FCEA03F81A
1B7C9921>I<9038F007C03901FC1FF039031E78780006EBE03C90381FC01C000CEB801E
14005B0018141F133E1200137E153E137CA213FC157C5B1578000114F0A2EC01E0EC03C0
3903FC07809038FE1F00EBE7FCEBE1F0D807E0C7FCA25BA2120FA25B121FEAFFF8A22025
809922>I<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C000F1318EBE000
6CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001E0EB03
C0383C0F80381FFE00EA07F8171B7C991F>115 D<131C133EA25BA45BA4485AB512E0A2
3801F000485AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA1F1CEA
0FF8EA03E013267EA419>I<EA03E0486C1338D80C78137CEA187C00305CA212605B00C0
495AA2EA01F0A24A5AEA03E0A34848485AEDC180A391380F8300A20003131F9038E03786
3901F0E7CE3900FFC3FC90383F00F0211B7D9927>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmex9 9 11
/Fg 11 110 df<B6FCA500F8C7FCB3B3B3B3B3B3B3B3B3AB18B26D822D>24
D<B6FCA5C7121FB3B3B3B3B3B3B3B3B3AB18B27F822D>I<EC0F80143F147FEB01FF5B49
1300EB0FFC495A495A495A495A485BA24890C7FC485AA2485AA2485AA2485AA3485AA412
FF5BB3B3A31943637E44>56 D<EAFFC0B3B3A37F127FA46C7EA36C7EA26C7EA26C7EA26C
7E6C7FA26C7F6D7E6D7E6D7E6D7E6DB4FC6D13807FEB007F143F140F1943638044>58
D<ECFFC0B3B3A35B1580A4491300A35C1307A2495AA2495A5C133F5C137F5C495A4890C7
FC485A485A485A485A485A485A48C8FC5AA27EEA7FC06C7E6C7E6C7E6C7E6C7E6C7E6C7F
6D7E80133F80131F806D7EA26D7EA2130380A36D1380A415C07FB3B3A31A88738044>60
D<EAFFC0B3A60A18638044>62 D<BB12801AC0A3D87FC0C914E06C6C1603F0007F6C6CEF
1FF06C6C17076C6C1701F100F86C6C18786C6C183C6C6D171C1A0C6D6C170E6D6C17066D
7E1A036D6C17006D7E6D7EA26D7E6D7F6E7EA26E7E6E7E6E7EA26E7E6E7E6E7EA26E7F6F
7E153FA26F5A93CAFC153E157E5D5D4A5A4A5A14074A5A5D4ACBFC143E5C14FC495A4A17
0349481706495A010F180E4948170C91CB121C013E183C49187801FC18F84848170149EF
07F04848171F4848177F4848933803FFE0001F94B5FC48BAFC1AC05ABBFC1A80484B7C7F
51>80 D<12F8B3B3B3B3B3B3B3A2B512FCA516856F8229>106 D<147CB3B3B3B3B3B3B3
A2B512FCA516857F8229>I<B512FCA500F8C7FCB3B3B3B3B3B3B3A216856F8229>I<B512
FCA5C7127CB3B3B3B3B3B3B3A216857F8229>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi5 5 7
/Fh 7 108 df<EC0380A21407140F81141F1437A21467ECC7E0A2EB0183EB0303A21306
010C7FA2EB1801EB3FFF5BEB600101C07F000113005B48C7FC5A5A3AFFC00FFFC0168022
1D7C9C2B>65 D<0003B512F815FE3A003E001F80ED0FC0150715035B1507A2ED0F8049EB
1F00157E90B512F85D3901F001F8EC007E153E81485AA3151E4848133E5D5DEC07F0B612
C04AC7FC221C7C9B2B>I<0003B612C0A239003E0007ED03801501A25BA2EC0181A24948
C7FCA25C90B5FC485BEBF00EA2140648485AA291C8FCA2485AA4EAFFFEA2221C7C9B24>
70 D<90380FFFC0A29038007C00A45CA4495AA4495AA4495AA21218127C38FC0F80A249
C7FCEAF81EEA707CEA3FF8EA0FC01A1D7B9B20>74 D<903807F02090381FFC609038780E
E09038E003C03801C001EA0380A2D807001380A26DC7FCA27FEA03FC3801FFC06C13F0EB
3FF8EB01FCEB003E141E140EA21230A200705BA25C00785B38FE01E038C7FF80D881FEC7
FC1B1E7B9C24>83 D<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C0
1203EA0780A3EA0F001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105
D<EA1FE0A212035BA4485AA4380F00F8EB01FCEB070CEB0C1C381E383CEB607CEA1FC0EB
E038383FF800EA3C7C131E14040078130CA21418130F00F013F0386003E0161D7C9C1F>
107 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi6 6 18
/Fi 18 123 df<127812FCA212FEA2127E1206A3120CA2121C121812301260124007107A
8513>59 D<151815381578157C15FC1401A2EC037C14071406EC0C7EEC1C3E14181430A2
1460ECC03FA249487EEB0300A213065B010FB512805B903838000F13305B13E05B484814
C00003140790C7FCD80F80130FD8FFE0EBFFFE16FC27247DA32E>65
D<90B6FC16E0903907C003F0ED00F8494813FC167C167EA249C7127C16FCA2ED01F8013E
EB03F0ED07E0ED1F8090393FFFFE005B90397C003F80ED07C0ED03E04914F01501A216F8
484814F01503A2ED07E04848EB0FC0ED1F80ED3F00000714FEB612F815C027227CA12E>
I<90B612FCA2903807C000163C4948131CA2160CA249C7FCA21530A2013EEB6000A215E0
140190387FFFC0A2EB7C03140101F85BA44848C8FCA4485AA31207B57EA226227CA127>
70 D<EBFFFEA2EB07C0A2EB0F80A4EB1F00A4133EA45BA45BA4485AA4485AA31207EAFF
FEA217227DA11B>73 D<903801FFFCA290380007C0A2EC0F80A4EC1F00A4143EA45CA45C
A4495A1218123C127E48485AA248485A38600F80D8783EC7FCEA3FFCEA0FE01E237CA122
>I<EC1FF0ECFFFE903907F01F8090390F8007C090393E0003E049EB01F001F0EB00F8EA
03E0167C485A485A001F157E90C8FC5A123E127EA24815FCA3ED01F8A3ED03F016E01507
ED0FC0007C1580007EEC1F00003E143E003F5C391F8001F0390FC007E03903F01F802601
FFFEC7FC38003FE027247CA22F>79 D<ECFE03903807FFC690380F01EE90383C007E0170
133E49131C5B1201A200031418A215007F7FEA01FE3800FFE0EB7FFE6D7E010F13800100
13C0EC0FE014031401EC00F0A2003014E0A3EC01C012700078EB0380EC0700007E130E38
E7807C38C3FFF038807F8020247CA226>83 D<131FEBFF8C3801E0DE3803807E3807007C
48133C121E123E003C5B127CA3485BA215401560903801E0C012781303393807E180391C
1CF300380FF87F3807E03C1B177E9522>97 D<EA03E0EA3FC0A21203A2485AA448C7FCA4
EA1E1FEB7FC0381FC1E0EB80F0EA3E0014F8003C137814F85AA438F001F0A3EB03E014C0
EA7007148038380F00EA3C3CEA1FF8EA07E015247DA21B>I<EB1F80EBFFE03803E07038
078030EA1F00123E123C007C1360387807C0B51280EBF80000F8C7FC5AA4140814180078
1370003813E0381E07C0380FFF00EA03F815177D951D>101 D<1338137CA21378137013
00A7EA0780EA1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA
1E0CA21318121CEA1E70EA0FE0EA07800F237DA116>105 D<13F8EA0FF0A21200A2485A
A4485AA43807801E147FEB81C3EB8387380F060F495A1318EB700E4848C7FCA213FCEA1E
7EEA3C0F80EB0781158039780F0300A21402EB070600F0138CEB03F8386000F019247CA2
21>107 D<EB0FE0EB7FF83801F03C3803C01E48487EEA0F00001E1480123EA25AA348EB
1F00A2141E143E0078133C5C00385B383C01E0381F07C06CB4C7FCEA01F819177E951F>
111 D<3801E01F3903F07FC0390639C1E0390C3F80F0EB3E00001814F8013C137815F8C6
5AA49038F001F0A3EC03E0D801E013C0EBF00715809038F80F003803DC3CEBCFF8EBC7E0
01C0C7FC485AA448C8FCA2EA7FF012FF1D20809520>I<3801F01E3907FC7F80390E1CE1
C038180F8100301383007013071260EC0380D8001EC7FCA45BA21580003014C039787801
8012F8EC030038F0FC0638E19C1C387F0FF8381E03E01A177D9523>120
D<EA07C0380FE0033918F0078012300060EB0F0012C0A2EAC1E00001131EEA03C0A34848
5AA45CA214F813813803C3F0EA01FFEA00FC1300495A121E383E03C05CD83C07C7FCEA30
0EEA383CEA1FF8EA07C019217D9520>I<EB780CEA01FC3803FE183807FF30EB07E0EA0C
0014C038000180EB0700130C5B5B5B5B380180083803000C00061318000F1338381FE0F0
3839FFE038607FC0EB3F8038C01E0016177D951E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi9 9 36
/Fj 36 123 df<137CEB7F80EB1FE0130F6D7EA26D7EA36D7EA36D7EA28080A26E7EA36E
7EA281140FA26E7EA381140F141FEC3DFC1479ECF8FEEB01F0EB03E0903807C07FEB0F80
EB1F00013EEB3F80137E4914C04848131F485A4848EB0FE0EA1FC0123F4848EB07F048C7
FC4815F848140348EC01FC48140026357CB32D>21 D<123C127E12FFA4127E123C08087A
8715>58 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C
5A5A126009177A8715>I<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED
1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA
07FCEA1FF0EA7FC048CAFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01
FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1F
F0EE07FCEE01FEEE007E171C2F2E7AA93C>I<1530157815F8A215F01401A215E01403A2
15C01407A21580140FA215005CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C
1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2485A
A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B7CB726>I<16
035E5EA24C7EA2163F167FA216FFA2ED01BFED033F831506161F150C1518A21530157015
6015C083EC01800203130F15001406A25C141C14184A80A2027FB5FC91B6FCA290390180
0007A249C7FC1306835B16035B5B1370136013E01201D807F04A7EB549B512F0A25B3436
7DB53A>65 D<010FB612F017FEEFFF80903B003FC0003FE0EF0FF017074B14F81703027F
15FCA292C7FCA25C18F84A140718F00101150F18E04AEC1FC0EF3F800103ED7F00EE01FE
4AEB07F891B612E04915809139F8001FF04AEB03FCEE00FE010F157FA24AEC3F80A2011F
16C0A25CA2133F18804A147FA2017FEDFF005F91C712014C5A494A5A4C5A49EC3FE00001
913801FF80B748C7FC16F816C036337DB23A>I<DB0FF81318DB7FFF13380203B5EAC078
913A0FFC03E0F091393FC000F102FFC7123BD901FC141FD907F815E04948140F49481407
EB3F80017F16C049C81203485A5B00031780485A485AA248481600A2485A94C7FC127F5B
A312FF90CBFCA45AA21738A21730A21770176017E0007F4B5A5F16036C6C4AC7FC160E6C
6C5C6C6C5C6C6C5C6C6C495A6C6CEB07C02700FF803FC8FC90383FFFFC010F13F0010113
8035377CB437>I<010FB712FCA218F8903A003FC00007170018785D1838147F183092C8
FCA25CA25C16060101020E1370040C13604A1500A20103141C5E5C16F849B5FCA25EECF0
01010F130016605CA2011F14E05E5CA2013F91C8FCA25CA2137FA291CAFCA25BA25B487E
B6FCA336337DB231>70 D<0107B512E05BA29039001FF0005DA25DA2143FA25DA2147FA2
92C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA2
5CA2137FA291C8FC5B007F13FEB5FCA223337EB222>73 D<020FB512C0A39139000FF000
A35EA2151F5EA3153F5EA3157F93C7FCA35D5DA314015DA314035DA314075DA3140F5DA2
123E007F131F485CA2143F485C4849C8FC12C06C13FE386001F8387003F0383C0FC0D80F
FFC9FCEA03F82A357BB22A>I<90260FFFE092380FFFC06161D9003FEFE0004F5A19DFDA
33F05EF0019F0273ED033F97C7FC02631506180C02E35EDAE1F8EC187E14C118300101EE
60FE61028115C0EF018001031681DA80FC90380301F81400170649ED0C03610106151817
30010E017E140705605B010C15C0A2011C913801800F610118EC030016060138013F141F
4C5C01305CA201704A133F96C8FC01605C6F5A01E05E4C137E000192C7FCD807F016FEB5
D8801E90387FFFFC151C150C4A337CB24A>77 D<90260FFFE049B5FCA281D9001F913800
0FE04A6CEC07801900DA33FC1406A2DA71FE140E180C146081DAE07F141C701318ECC03F
82010116386F6C133014806F7E010316706F6C136014001503496E13E003015C01068015
00010EECFF0160010CEC7F81A2011CEC3FC395C7FC0118EC1FE3A20138EC0FF717F60130
140717FE017014035F01601401A213E0705A1201D807F01578B57E1730A240337DB23D>
I<ED07FC92387FFFC0913901F807F091390FE001F891391F80007E027EC77E4AEC1F80EB
03F04948EC0FC04948EC07E0495A013F16F049C8FC01FE15034916F81201485AA2485AA2
120F5B001F16075B123FA34848ED0FF0A3EF1FE0A290C9FC48EE3FC0A21880177F6C1700
5F5F4C5A4C5A6C7E4C5A001F4B5A6D4A5A000F4B5A6D027EC7FC00075D6C6C495A6C6CEB
07E0D800FEEB1F8090263F80FEC8FC90380FFFF80101138035377DB43A>I<010FB612F0
17FE83903B003FC0007FC0EF1FE0EF07F05DEF03F8147FA292C713FCA25CEF07F85CA201
0116F0170F4A15E0EF1FC00103ED3F80EF7F004A14FEEE03FC0107EC1FF091B612C04CC7
FC02F0C9FC130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B512FCA3
36337DB231>I<010FB67E17F817FE903A003FC001FF9338003FC0EF1FE04B130FEF07F0
147FA292C713F8A25CEF0FF05CA20101ED1FE018C04AEC3F8018000103157E4C5A4AEB07
F0EE3FC049B500FEC7FC16F89138F0007E82010F6E7E707E5C83131FA25CA2013F141FA2
5CA2017F143F5F91C7FC180649160E180C49161C00011718B500FC011F133893380FE070
040713E0C93803FFC09338007F0037357DB23A>82 D<03FF13180207EBE038021FEBF878
91397F00FCF802FCEB1FF0D901F0130F4948130749481303494814E0A249C71201A2013E
15C0A3137E1780A2017F91C7FC8080EB3FF014FF15F06D13FE6D6D7E6D806D8001008002
0F7F1400150F6F7E150315011500A2120CA2001C5D1218A2150100385D003C14035E4B5A
007E4A5A007F141F6D49C7FCD87BE0137C39F9FC03F839F07FFFE0D8E01F138026C003FE
C8FC2D377CB42F>I<EB01F8EB07FE90381F071C90387C03FEEBF801EA01F00003130048
485B5B120F381F80015DEA3F00A21403485C127EA2140700FE5C5A1640020F1360EDC0E0
16C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F0787C73907FE03
FE3900F800F823227EA029>97 D<133FEA1FFFA25B1200A35BA21201A25BA21203A25BA2
1207A2EBE0F8EBE3FF390FEF07809038FC03C001F813E0EBF001D81FE013F013C0138015
F8123FA21300A248130315F0127EA2140700FE14E05AA2EC0FC0A2EC1F80007C14005C14
7E003C137C003E5B381E01F0380F07C06CB4C7FCEA00FC1D357EB321>I<ED01F815FFA2
16F01507A316E0A2150FA216C0A2151FA21680A2153FA2D901F81300EB07FE90381F077F
90387C03FF496C5AEA01F000031300485A495B120F381F8001A2D83F005BA214035A007E
5CA2140712FE485C1640020F136016E0EDC0C0127CEC1FC1023F1380003CEB7F81003EEB
EF833A1E01C7C300390F0787C73907FE03FE3900F800F825357EB328>100
D<14FE903807FF8090381F03C090387C01E03801F800485A485A485A485A1401D83F0013
C01403007EEB0F80ECFE00387FFFF8B5128000FCC8FCA45AA415186C1438007C147015E0
003CEB01C0003EEB07806CEB1E00380F80FC3803FFE0C690C7FC1D227DA024>I<ED0F80
ED3FE0ED7870913801F0F815E31403A2020713F0A291380FC1C0EDC000A4141F5DA4143F
92C7FC011FB512805B1600D9007FC7FC147EA414FE5CA513015CA413035CA413075CA413
0F5CA45C131FA291C8FC121CEA7F1E133EA2EAFE3C5B1278EA70F0EA3FC0EA0F8025457C
B425>I<EB07E0EA03FFA25CEA001FA35CA3133F91C8FCA35B137EA313FE9038FC0FE0EC
3FF8ECF07E3901FFC03FEC001F5B49148012035B5B153F000715005BA25D000F147E5B15
FE5D121FEB8001EDF808161C003F01031318010013F01638020713304814E0007E157002
0313E0EDE1C000FE903801E38048903800FF000038143C26357DB32C>104
D<EB01C0EB07E014F0130F14E01307EB038090C7FCAA13F0EA03FCEA071EEA0E1F121C12
3800301380EB3F00127012605BEAE07EEA40FE12005B12015BA212035B12071420EBE070
000F136013C014E014C0EA1F80EA0F81EB8380EB8700EA078EEA03FCEA00F014337EB11A
>I<EB07E0EA03FFA25CEA001FA35CA3133F91C8FCA35B137EA313FE49131FED7FC0EC01
E0000190380383E09038F8070F140E141C0003013813C0EBF0709138E00700D9F1C0C7FC
3807F78001EEC8FC13FC7F380FFFE0EBC7F8EBC1FEEBC07E001F7F1380ED8080ED81C000
3FEC01801300A21503481500007EEB3E071506EC1F0E00FE5C48EB07F80038EB03E02335
7DB328>107 D<EB1F80EA07FF5A1400C67EA3137EA213FEA25BA21201A25BA21203A25B
A21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2127E1304EAFE0E130C12FC
A2131C131812F81338EA7C701360EA3FE0EA0F8011357DB317>I<D801E001FEEB07F03C
07F803FF801FFC3C0E3E0F07E0783F001C903B3C03F1E01F803C181F7001F3800F003801
E0EBF70026303FC001FE14C01270006001805B02005B0303141FD8E07F4A1480EA407E12
000307143F01FE1700495C60030F147E1201494A13FEF0FC04031F150E00030401130C49
028013F8191C033F01031318000717F04902001438050113704B15E0000F933800F1C049
017EEC7F80D80380011CEC1E003F227EA044>I<D801E013FE3A07F803FF803A0E3E0F07
E0001C90383C03F039181F7001003813E026303FC07F12700060138014001503D8E07F5C
EA407E1200150701FE5C5B150F5E120149131FEE8080EE81C00003023F13804914011603
037F13000007147E495CED3E0E5E000FEC1E3849EB0FF0D80380EB03C02A227EA02E>I<
147F903803FFC090380FC1F090383F00F8017C137C497F485A48487F1207485A5B001F15
80123F90C7FCED3F005A127EA25D157E5A15FE5D007C5C14014A5A5D6C495A4A5A6C49C7
FC380F807E3807C1F83801FFE06C6CC8FC21227EA025>I<011F131F90397FC07FE09039
E3E1E0F09039C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB03F0163FEA07
07120600025B1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A291380003F016
E0491307ED0FC002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F80000190C8
FCA25BA21203A25BA21207A25BB57EA3283083A027>I<EB01FCEB0FFF90383E03C09038
7800E04913603901E001E014030003130713C013E0EC03806DC7FC13FF14F014FC6C7F6C
7F6D1380130F9038007FC0141F140F007E130700FE1480A3EC0F005A00C0131E6C5B0070
5B383C01F0380FFFC0D803FEC7FC1B227CA024>115 D<EB0380EB0FC0A3131FA21480A2
133FA21400A25BA2137E387FFFFEA2B5FC3800FC00A21201A25BA21203A25BA21207A25B
A2120FA25B1408001F131C14181380143814701460EB00E0EB01C0380F8380EB8700EA07
FEEA01F817307FAE1C>I<13F8D803FEEB01C0D8070FEB03E0000EEB8007121C001813C0
0038140FEA301F0070018013C01260013F131F00E0130000401580C65A017E133F13FE49
1400A25D120149137E1602EDFE0716064913FCA2160E0201130C9039F803F81C16180000
90380F7C38D97C1C137090393FF81FE0903907E0078028227EA02C>I<90391F801F8090
397FE07FE09039E0F0E0703A01C0F9C0F83903807D833807007F000E1403000C15F0001C
137E0018EC01C002FEC7FC00385B1210C7FC13015CA31303A25C1640010714E016C0001C
5B007E1401010F148000FE1403011FEB0700011B130E39F839F01C397070F878393FE07F
E0390F801F8025227EA02C>120 D<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C
003813800030140F013F14C000701300126049131FD8E07E14801240EA00FE49133F0001
15005BA25D0003147E5BA215FE5D5BA214015DEBF00314070001130F3900F83FF0EB3FFB
EB0FC3EB00075DA20007130FD81F805B003F495AA24AC7FCEB007E003E137C00385B3818
03F0381E07C0D807FFC8FCEA01F823317EA026>I<903807800390381FE00790383FF006
90387FF80E9038FFFC1C48EBFE789038E03FF03803800190C712E0EC01C0C7EA0380EC07
00140E143C14705C495A495A49C7FC130E133C0170130C49131C484813184848133848C7
1278D80EC013F0380FFE03391F3FFFE0D8381F13C0486C1380D86007130038E003FE38C0
00F020227DA024>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr6 6 6
/Fk 6 62 df<130C1338137013E0EA01C0EA038013005A120EA25AA25AA312781270A312
F0AB1270A312781238A37EA27EA27E7E1380EA01C0EA00E013701338130C0E317AA418>
40 D<12C012707E7E7E7E7E1380EA01C0A2EA00E0A21370A313781338A3133CAB1338A3
13781370A313E0A2EA01C0A2EA038013005A120E5A5A5A12C00E317CA418>I<13FF0003
13C0380781E0380F00F0001E137848133CA248131EA400F8131FAD0078131EA2007C133E
003C133CA26C13786C13F0380781E03803FFC0C6130018227DA01E>48
D<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>I<EA01FC3807FF8038
1C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0
EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600185A5A383FFFF85AB5
12F0A216217CA01E>I<B712FEA3CAFCA9B712FEA3270F7C932F>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmtt8 8 20
/Fl 20 122 df<90380FE0E090383FF9F0EBFFFD4813FF5A3807FC3F380FF00F381FC007
A2383F80031300481301127EA2007CEB00E000FC1400A25AA97EA2127C007E14E0EC01F0
127F7EEB8003EA1FC0EC07E0380FF00F3907FC1FC06CB512806C14006C5BEB3FF8EB0FE0
1C2B7DA923>67 D<B512FEA538007C00B3ADB512FEA517297AA823>73
D<90381FFFE04913F0A36D13E09038003E00B3A8127C12FEA2147E14FE38FF03FC6CB45A
A2001F13E06C5BD801FEC7FC1C2A7DA823>I<B512F014FE80158015C0390F801FE0EC07
F01403140115F81400A5140115F014031407EC1FE090B512C0158015005C14F00180C7FC
ABEAFFF87FA35B1D297EA823>80 D<9038FF83800003EBE3C04813FF121F5AEA7FC0EB00
3F00FE131F48130FA25A1407A26CEB038091C7FC127E127FEA3FF06CB4FC6C13F06C13FC
00017F39001FFF80010113C0EB001FEC0FE01407EC03F0A20070130112F8A36C1303A26C
EB07E06C130F9038E03FC090B5FC15005C00F15B38703FE01C2B7DA923>83
D<007FB512F8B612FCA439F807C07CA50070143800001400B3A7EBFFFE487FA36C5B1E29
7EA823>I<3803FF80000F13E04813F8487F80EB80FFEC3F80381F001FC7FC140F14FF13
7F0003B5FC120F5A387FF00F130012FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E
000713C73901FE01FC1F1D7D9C23>97 D<EB3FC0EBFFF800037F4813FF481480381FF07F
393F801FC0EB000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0
383F800713E0391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C23>101
D<B47E7FA41207A7EBC1FCEBC7FF01DF138090B512C0A29038FE0FE0EBF807EBF00313E0
A313C0AD39FFFE1FFF5CA38020297FA823>104 D<133813FEA5133890C7FCA6EA7FFC48
7EA3127FEA003EB3387FFFFEB6FCA36C13FE182A7AA923>I<EA7FFEB5FCA37EEA001FB3
AD007FB512C0B612E0A36C14C01B297CA823>108 D<397E1F01F039FF7FC7FC9038FFEF
FE14FF6C80390FE1FE1FEBC1FC01C07FEB80F8A2EB00F0AE3A7FE3FE3FE026FFF3FF13F0
A3267FE3FE13E0241D819C23>I<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EB
F807EBF00313E0A313C0AD39FFFE1FFF5CA380201D7F9C23>I<133F3801FFE0487F487F
487F381FC0FE383F807F383E001F007E1480007C130F00FC14C0481307A66C130FA2007C
1480007E131F6CEB3F006D5A381FE1FE6CB45A6C5B6C5B6C5BD8003FC7FC1A1D7C9C23>
I<38FF81FCEBC7FF01DF13C090B512E015F03907FE0FF8EBF8039038F001FCEBE000A249
137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15E001DF138001CF13
00EBC3F801C0C7FCAAEAFFFEA51F2C7F9C23>I<397FF00FE039FFF87FF8ECFFFC13FB6C
B5FCC613F8ECC078EC800091C7FC5BA25BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>
114 D<3801FF9C000F13FE5A127FA2EAFF0000FC137E48133EA26C131C6C1300EA7FF038
3FFF80000F13E06C13F838007FFCEB01FEEB007F0070133F00F8131F7E143F7E38FF80FF
EBFFFE14FC14F814F000701380181D7B9C23>I<137013F8A7007FB51280B612C0A36C14
80D800F8C7FCACEC01C0EC03E0A3EBFC07140F9038FE1FC0EB7FFF158090383FFE00EB0F
FCEB07F01B257EA423>I<39FFF03FFCA5390F8007C000071480A2EBC00F00031400A26D
5A0001131EA2EBF03E0000133CA2EBF87CEB7878A2EB7CF8EB3CF0A2133F6D5AA36D5A6D
5A1E1D7E9C23>118 D<39FFF03FFCA539078007C0158013C00003130F1500EA01E05CEB
F01E1200A26D5A1378A26D5AA3EB1E7014F0130EEB0FE0A213075CA35CA2130F91C7FCA2
EA3E1FEA7F1E133EEA7CFC127F5B6C5A6C5AEA0F801E2C7E9C23>121
D E
%EndDVIPSBitmapFont
/Fm 134[41 3[46 25 36 36 1[46 46 46 66 25 41 1[25 46
46 1[41 46 41 46 46 12[51 46 56 1[56 2[76 51 1[41 30
2[56 4[56 7[46 46 46 1[46 46 46 46 46 2[23 46[{
TeXBase1Encoding ReEncodeFont}38 91.3242 /Times-Italic
rf
%DVIPSBitmapFont: Fn cmbx8 8 49
/Fn 49 123 df<EC1FF80103B5FC010F148090393FF00FC0D9FF8013E048EB001F5B0003
EC3FF049EB1FE0A3ED078092C7FCA3EDFFF0B7FCA43903FC000FB3A4263FFFC0B5FCA428
2E7FAD2D>12 D<DA1FFCEB3FF049B53807FFFE010F02DF7F903C3FF00FFFE01F80D9FF80
020013C048494848133F495C0003EF7FE0494AEB3FC0A2150F0307EC0F0095C7FCA39438
01FFE0BAFCA43C03FC0007F8001FB3A43D3FFFC07FFF81FFFEA43F2E7FAD44>14
D<001FEB07C0393F800FE0397FC01FF039FFE03FF8A201F013FCA3007F131F003F130F39
1F7007DC0000EB001C01F0133C491338A200011478491370000314F039078001E0A2390F
0003C0003EEB0F80003C1400001813061E187DAD2A>34 D<14E01301EB07C0EB0F80EB1F
00133E137E5B5B1201485AA2485AA2485AA2121F5B123FA290C7FC5AA512FEAF127FA57E
7FA2121F7F120FA26C7EA26C7EA26C7E12007F137E133E7FEB0F80EB07C0EB01E0130013
4378B120>40 D<12E07E127C7E7E6C7E7F6C7E12037F6C7EA26C7EA2137EA2137F7F1480
A2131F14C0A5EB0FE0AFEB1FC0A51480133FA214005B137EA25BA2485AA2485A5B120748
5A5B48C7FC123E5A12F05A13437CB120>I<121FEA3F80EA7FC0EAFFE0A213F0A3127F12
3FEA1F70120013F013E0A2120113C01203EA0780A2EA0F00123E123C12180C187A8A17>
44 D<B512F8A715077F921B>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B
7A8A17>I<15FCA24A7EA24A7EA34A7FA24A7FA34A7F157F023F7FEC3E3F027E7FEC7C1F
A202FC7FECF80F010180ECF007A20103804A7E0107814A7EA2010F6D7F5C49B67EA24981
A2013EC7123F017E81017C141F01FC8149140FA2000182491407B5D8C001B512FCA4362F
7DAE3D>65 D<B712E016FE707E17E0000190C77FEE3FF8161F707EA2707EA5160F5FA24C
5A4C5AEEFFE00307138091B548C7FC707E17E091C7EA1FF8707E707E707E18808218C0A6
18805EA24C1300EE1FFEEE7FFCB85A17E0178004FCC7FC322E7DAD3A>I<913A03FF8001
C0023FEBF80349B5EAFE070107ECFF8F011F9038801FFF90397FF80007D9FFE013014849
7F4890C8127F4848153F120F4848151F49150F123F5B007F1607A34992C7FC12FFAA127F
7FEF03C0A2123F7F001F16076D16806C6C150F000717006C6C5D6C01C0143E6C6D14FCD9
7FF8EB03F8903A1FFF801FF0010790B512C0010192C7FCD9003F13FC020313C032307CAE
3B>I<B812E0A40001903980007FF0161F160716031601A21600A2150F17F81778A34B13
005D5D91B5FCA4EC807F81816F131EA3173CA292C7FCA2177CA217F8A216011603160F16
7FB8FC17F0A32F2E7DAD35>69 D<B812C0A40001D9800013E0161F160F16071603A21601
A3031E13F01600A31700153E157E15FE14FFA41480157E153E151EA592C8FCA9B612C0A4
2C2E7DAD33>I<B6FCA400011380B3B3A2B6FCA4182E7DAD1E>73
D<011FB512E0A49039000FFC00B3AB121FEA3F80EA7FC0EAFFE0A34A5AA2D87FC05B4948
5A6C6CB45A6CB55A000749C7FCC613F0232F7FAD2A>I<B6903803FFFEA4000101809038
003F0017FE4C5AEE03F04C5AEE1FC04C5A047EC7FC5EED03F84B5AED0FC04B5A037FC8FC
15FEEC81FF02837F028F7F029F7F14BF9138FE7FF04A6C7E9138F01FFC02E07FECC00F4A
6C7E6F7F6F7F836F7F167F707E707E707E83827013807013C0B6013F13FFA4382E7DAD40
>I<B612C0A400010180C8FCB3A5EE03C0A416071780A2160FA2161FA2163F167FED01FF
030F1300B8FCA42A2E7DAD31>I<B56C92380FFFFC6E5DA26E5D0001F0FE00D9EFF0157B
A2D9E7F815F3A3D9E3FCEC01E3A2D9E1FEEC03C3A2D9E0FFEC0783A26E6CEB0F03A26E6C
131EA26E6C133CA26E6C1378A36E6C13F0A2913903FC01E0A2913901FE03C0A2913900FF
0780A292387F8F00A2ED3FDEA2ED1FFCA36F5AA2B527C007F001B512FCA2ED03E0ED01C0
462E7DAD4D>I<EC0FFF91B512F0010714FE903A1FFC03FF80903A3FE0007FC0D9FFC0EB
3FF04890C7EA0FF848486E7E48486E7EA248486E7E001F17804980003F17C0A2007F17E0
49157FA300FF17F0AA007F17E0A26D15FFA2003F17C0A26C6C4A1380A26C6C4A1300A26C
6C4A5A6C6C4A5A6C6D495A6C6D495AD93FF0EBFFC090261FFC035B0107B548C7FC010014
F0020F90C8FC34307CAE3D>79 D<B7FC16F816FE707E0001D9800313E09238007FF0707E
161F707EA283A55F161F5F4C5A4C5A923803FFC091B6C8FC16F8A29138800FFEED03FF6F
7F6F7FA2707EA583A31803F0078017F8A2043F130FB6D91FFC1300706C5A933807FFFE04
015BCAEA3FF0392F7DAD3D>82 D<90391FF8038090B51207000314CF4814FF381FF00FEB
C001393F80007F48C7123F007E141FA200FE140FA215077E7F6D90C7FC13F06CB4FC14F0
ECFF806C14E06C14F86C14FE6C806C1580C615C0131F010114E0EB000F020013F0153F15
1F150F12F01507A37E16E06C140F6C15C06C141F01C0EB3F8001FCEBFF0090B55A00F95C
D8F03F13F0D8E003138024307CAE2D>I<003FB8FCA4287FE00FFC0113800180EC007FD8
7E00151F007C160FA200781607A448EE03C0A4C792C7FCB3A6013FB6FCA4322D7DAC39>
I<001FB71280A4DA000F130001F85C01E0131F49495A49495A48C75B15FF003E495B4A5B
003C5D5C4A90C7FC5DC7485A143F4A5A5D4A5A5B495B5D4990C8FC5B4948EB07805C495A
137F495A4A130F5A485B4849131F91C71300485D48485C48485C491303007F141FB8FCA4
292E7CAD32>90 D<486C1360486C13F000071301390F0003C0001EEB0780A248EB0F0000
38130E0078131E0070131CA200F0133C48133839EF803BE039FFC03FF001E013F801F013
FCA3007F131FA2393FE00FF8391FC007F0390F8003E01E1878AD2A>92
D<EB7FF80003B5FC000F14C0391FE01FF09038F007F86E7EA26E7EEA0FE0EA07C0C7FCA2
14FF133F48B5FC000713C1381FFC01EA3FE0EA7FC0EAFF801300A3140313806C6C487E26
3FF03F13F8381FFFFE0007EBF87FC6EBC01F251E7E9D28>97 D<EA03F012FFA4120FABEC
3FE09038F1FFFC01F713FFD9FFC013809039FE003FC049EB1FE049EB0FF05B16F8150716
FCA916F8A2150F16F06D131F6D14E06DEB3FC09039DF80FF809039C7FFFE00018113F890
38007FC0262E7DAD2D>I<EB0FFE90387FFFC048B512F03907FC07F8380FF00FEA1FE012
3F13C0007FEB07F090388003E091C7FC12FFA8127F7FA26C6C133CA26C6C137C6C6C13F8
3907FE03F00001B512E06C6C138090380FFC001E1E7D9D24>I<ED0FC0EC03FFA4EC003F
ABEB0FF8EB7FFF48B6FC3807FC07380FF001391FE0007F003F143F5B127F5BA212FFA912
7F7F123F157F6C6C13FF380FF0032607FC0F13FC0001B512BF6CEBFE3FEB1FF0262E7DAD
2D>I<EB0FFC90387FFF8048B512E03907FC0FF0390FF003F8391FE001FC1400484813FE
007F147E5B157F12FFA290B6FCA30180C7FCA3127F7FA2003F140F6C7E6C6C131F6C6C13
7E3903FE01FC6CB512F86C6C13E001071300201E7E9D25>I<ECFF80010713E0011F13F0
EB7FC79038FF0FF8EA01FEA2EA03FCA2EC07F0EC00801500A5B512FCA4D803FCC7FCB3A4
383FFFE0A41D2E7EAD19>I<ED07C090391FF81FF090B5EA7FF8000314FD3907F81FF338
0FE007001F14F99039C003F8F0003FECFC00A6001F5CEBE007000F5C3907F81FE090B55A
4891C7FCEB1FF8001EC9FC121FA27F90B512C06C14F815FF6C158016C04815E0123F48C7
EA3FF000FE140F4814071503A36C1407007FEC0FE06C6CEB1FC0D81FF0EBFF800007B5EA
FE00000114F8D8001F1380252D7E9E29>I<EA03F012FFA4120FABEC1FF0EC7FFC01F1B5
FCD9F7E013809038FF807FD9FE0013C049133FA25BA25BB0B53803FFFCA4262E7CAD2D>
I<EA07C0EA0FE0EA1FF0EA3FF8A5EA1FF0EA0FE0EA07C0C7FCA6EA03F012FFA4120FB3A3
B5FCA4102F7CAE17>I<EB01F0EB03F8EB07FCEB0FFEA5EB07FCEB03F8EB01F090C7FCA6
147EEB3FFEA41301B3A9121C123E127FEAFF81EB83FCA2EB87F8387F0FF0383FFFE06C13
803807FE00173C84AE19>I<EA03F012FFA4120FAB913803FFF0A4913800FC00EC03F84A
5AEC0FC0EC3F804AC7FC14FCEBF1F8EBF7FCEBFFFE80A2497F9038F87FC0496C7E496C7E
6E7EA26E7E6E7E6E7E6E138026FFFE0313FCA4262E7DAD2B>I<EA03F012FFA4120FB3B3
B5FCA4102E7CAD17>I<2707E00FF8EB1FF000FFD97FFEEBFFFC01E1B5008313FF9028E7
E07FCFC01380903BEF803FDF007F260FFE0013FC031FEC3FC0495C495CA2495CB0B53B01
FFFE03FFFCA43E1E7C9D45>I<3907E01FF000FFEB7FFC01E1B5FCD9E7E013809038EF80
7F260FFE0013C049133FA25BA25BB0B53803FFFCA4261E7C9D2D>I<EB07FE90387FFFE0
48B512F83903FC03FC3907F000FE4848137F4848EB3F80003F15C049131F007F15E0A200
FF15F0A8007F15E0A26D133F003F15C0001F15806D137F6C6CEBFF003903FC03FC6CB55A
6C6C13E0D907FEC7FC241E7E9D29>I<3903F03FE039FFF1FFFC01F713FFD9FFC0138090
39FE007FC0D80FFCEB3FE049EB1FF05BED0FF8A216FC1507A8ED0FF8A3ED1FF07F6DEB3F
E06DEB7FC09039FF81FF809039F7FFFE0001F113F89038F07FC091C8FCA9B5FCA4262B7D
9D2D>I<90390FF003C090387FFE0748B512873907FE07CF390FF803FF48487E48487E15
7F4848133FA3485AA87F127FA26C6C137F15FF6C7E380FF8033807FC0F0001B512BF3900
7FFE3FEB1FF090C7FCA9913803FFFCA4262B7D9D2B>I<3807E07E39FFE1FF8001E313E0
EBE78F9038EF1FF0EA0FFE13FCA29038F80FE0EC07C091C7FC5BAFB57EA41C1E7D9D22>
I<3801FF8E000713FE121FEA3F00007C137E0078133E00F8131EA27EB490C7FC13F0EBFF
806C13E06C13F86C13FE7E00037FD8003F13801300143F00F0131F140F7EA26CEB1F007E
38FF807EEBFFFC00FB13F000E01380191E7D9D20>I<133CA4137CA313FCA21201120312
07001FB5FCB6FCA3D803FCC7FCAEEC03C0A61407D801FE1380EBFF0F6CEBFF00EB3FFCEB
0FF01A2A7FA920>I<D803F0EB0FC000FFEB03FFA4000FEB003FB1157FA215FF00075BD9
F80713FC6CB512BFC6EBFE3FEB3FF0261E7C9D2D>I<B5EB3FFCA4D80FF8EB07C0000715
806D130F000315006D5B0001141E6D133E6C143CEC807C017F1378ECC0F8013F5B14E101
1F5B14F3010F5B14FF6D5BA26D90C7FCA26D5AA26D5AA21478261E7E9D2B>I<3CFFFE0F
FFC03FFCA43C0FF000FE0003C06D017F130700074A1480EE800F6C6C16005CD801FEECC0
1E5C01FF9038CFE03E6C163CDA0787137CD97F87EBF078148F9139CF03F8F8D93FDF5C91
38DE01FDD91FFE5CA26D486CB45AA24A137F01075D4A133F010392C7FCA26D48131E361E
7E9D3B>I<B5EB3FFCA4D80FF8EB07C0000715806D130F000315006D5B0001141E6D133E
6C143CEC807C017F1378ECC0F8013F5B14E1011F5B14F3010F5B14FF6D5BA26D90C7FCA2
6D5AA26D5AA21478A25CA2EA3C01007E5BEAFF03495A5C011FC8FCEA7A3EEA7FFC6C5AEA
0FC0262B7E9D2B>121 D<003FB512FCA39038C00FF89038001FF0003E133F48EB7FE0EC
FFC049138000781400495A1307C6485A495A5C495A017F133CEBFFC04813801400484813
7C1207485A484813F8485AEBE003387FC00FB6FCA31E1E7E9D24>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmtt8 7 78
/Fo 78 126 df<123812FEB3A4127C1200A6123812FEA51238072574A41F>33
D<EA01F0EA03FC487E120F139FEA1F1F7F121EA35BA290381E3F80391F3E7FC0137E390F
FC3F809038F87C0013F0EBE0783807C0F8120F381FE1F0123F387FF1E0EA7DF3EAFCFB48
B45A137F5C90383F83C0EB1F03EB3F8300FC13C3387CFFE7007F13FFD83FF11380D81FE0
1300380F803E1A267EA41F>38 D<130C133E137E13FCEA01F8EA03F0EA07E0EA0FC01380
121F13005A123E127E127CA212FCA25AA97EA2127CA2127E123E123F7E1380120F13C0EA
07E0EA03F0EA01F8EA00FC137E133E130C0F2D76A71F>40 D<126012F87E127E7EEA1F80
EA0FC0EA07E0120313F0120113F8120013FC137CA2137EA2133EA9137EA2137CA213FC13
F8120113F0120313E01207EA0FC0EA1F80EA3F00127E5A5A12600F2D7BA71F>I<1378A2
137C1378A20070133800F8137C38FE79FCEAFF7B387FFFF8001F13E0000713803801FE00
3807FF80001F13E0007F13F838FF7BFCEAFE7938F8787C0070133800001300A2137C1378
A216197C9D1F>I<130E131FAA007FB51280B612C0A36C1480D8001FC7FCAA130E1A1B7E
9E1F>I<121EEA3F80127F13C0A3123F121F1207A2EA0F80121FEA7F0012FE12F812700A
1076871F>I<387FFFFEB6FCA36C13FE18057D931F>I<123C127E12FFA4127E123C080875
871F>I<140E141FA2143F143E147E147C14FC14F8130114F0130314E0A2130714C0130F
1480131F14005B133E137E137C13FC5B12015B12035B12075BA2120F5B121F90C7FC5A12
3E127E127C12FC5AA21270182D7DA71F>I<133FEBFFC0487F000713F813E1380F807C48
487EA2003E7FA248EB0F80A30078130700F814C0AA007CEB0F80A3007E131F003E1400A2
6C133EEB807E6C6C5A3807E1F813FF000113E06C5B013FC7FC1A267EA41F>I<13301378
13F81201A212031207127F12FF12FE127C1200B3A4387FFFF0B512F8A26C13F015257BA4
1F>I<EA01FE3807FFC04813E0003F13F8EB83FCEA7E0048137E143E143FA2141FA21278
C7FC143FA2143E147E14FE14FCEB01F8EB03F0EB07E0EB0FC0EB1F80EB3F0013FE485A48
5A485A380FE00E381F801FEA3F0048B5FCB6FCA26C13FE18257DA41F>I<EB03E0497E13
0FA2131F133E133C137C13F8A2EA01F013E01203EA07C01380120FEA1F00A2123E123C12
7C5AB6128015C0A26C1480C7EAF000A790381FFF804913C0A26D13801A257EA41F>52
D<383FFFF814FCA214F8003EC7FCA913FF003F13C014F014F8EB81FCEA3E00003C137E00
38133EC7123FA2141F1230127812FC143FA2147EA2007E13FC387F83F8383FFFF0000F13
E06C13803801FE0018257DA31F>I<EB0FE0EB7FF0EBFFFC12033807F87EEA0FE013C0EA
1F80EA3F00143C007E1300A2127CEAFC7F38FDFFC0B512E014F8EBC1FC130048137EA248
133FA248131FA27EA2127C143F127E003E137E123F381F80FCEBC3F8380FFFF06C13E000
0113C038007F0018267DA41F>I<13FF000313804813E0001F13F0383FC3F81301387E00
FC007C137C00FC137E143E5A143FA2141F143F7E127C007E137F6C13FF13836CB5FC7E00
03139F3800FE3F1300143E147EA2003C137C007E13FCEB01F81303EB07F0EB0FE0383FFF
C01480380FFE00EA03F818267DA41F>57 D<121E123FEA7F80A4EA3F00121EC7FCA9121E
123FEA7F80A4123F121F120FA2EA1F005A127E5A5A1260092176981F>59
D<140E141F147F14FFEB03FEEB07FCEB1FF0EB3FE0EBFF80481300EA07FC485AEA3FE048
5A48C7FC5A7EEA7FC06C7EEA0FF86C7EEA01FF6C1380EB3FE0EB1FF0EB07FCEB03FEEB00
FF147F141F140E181F7DA01F>I<007FB51280B612C0A36C1480C9FCA5007FB51280B612
C0A36C14801A0F7E981F>I<127012F812FE7EEA7FC06C7EEA0FF86C7EEA01FF6C1380EB
3FE0EB1FF0EB07FCEB03FEEB00FF147F14FFEB03FEEB07FCEB1FF0EB3FE0EBFF80481300
EA07FC485AEA3FE0485A48C7FC5A12F81270181F7DA01F>I<133FA2497EA41373EBF3C0
A400017FA413E100037FA53807C0F8A313FFA2487FA2EB807CA2001F137EEB003EA239FF
C0FFC013E1A213C01A257EA41F>65 D<387FFFE0B512F8806C7F380F803F801580140FA5
EC1F00A2147EEBFFFC5C8080EB803FEC0F80EC07C0A2EC03E0A5140715C0140FEC3F8000
7FB5FCB6120014FC6C13F01B247FA31F>I<90381FC38090387FF7C048B5FC5AEA07F038
0FC03F381F801FA2383F000F123E007E1307127CA200FCEB038091C7FC5AA87EA2007CEB
0380EC07C0127E123E003F130FEA1F80EC1F80380FC03F3907F07F003803FFFE6C5B3800
7FF0EB1FC01A267EA41F>I<387FFFC0B512F014FC6C7F380F807F80EC1F80EC0FC01407
A2EC03E0A3EC01F0AAEC03E0A3140715C0140FEC1F80143FEC7F00387FFFFEB55A5C6C13
C01C2480A31F>I<007FB51280B612C0A27E380F8007A4EC038091C7FCA314E0EB81F0A2
13FFA41381A2EB80E091C7FCA415E0EC01F0A5007FB5FCB6FCA26C14E01C247FA31F>I<
007FB512C0B612E0A27E380F8003A4EC01C091C7FCA4147014F8A213FFA41380A2147091
C7FCA9EA7FF8487EA26C5A1B247FA31F>I<EB3F0EEBFFDF000313FF5AEA0FE113C04848
7EEA3F0080127E80127CA200FC130E91C7FC5AA5903801FFC04913E0A26C6C13C0903800
1F00127C5C127EA27E5CEA1F806C6C5A13E16CB5FC7EC613CE013FC7FC1B267EA41F>I<
397FF0FFE0D8FFF913F0A2D87FF013E0390F801F00AB90B5FCA4EB801FAD397FF0FFE0D8
FFF913F0A2D87FF013E01C247FA31F>I<B512F8A43800F800B3AAB512F8A415247BA31F>
I<EB7FFE90B5FCA2EB7FFEEB01F0B3A5127812FCA21303130738FE0FE0387FFFC06C1380
000F1300EA03FC18257DA31F>I<397FE03FC039FFF07FE0A2397FE03FC0D80F00130014
3E5C14FC495A495A5C495A130F495A91C7FC5B5B497EA2EBF7C013E7EBE3E013C3EB81F0
13016D7E80147C80A280A2397FE03FC039FFF07FE0A2397FE03FC01B247FA31F>I<EAFF
FCA4EA0F80B3A4EC07C0A6B6FCA315801A247EA31F>I<397F801FE000FF14F0EBC03F00
7F14E0001F1480381EE077A4EBF0F7EB70E7A31379A2EB39C7A4EB1F87A3EB0F07A21300
A8397F801FE039FFC03FF0A2397F801FE01C247FA31F>I<397FC07FE000FFEBFFF07F00
7FEB7FE0000FEB0F001370A31338A3133C131CA2131EA2130E130FA21307148FA21303A2
14CF1301A3EB00EFA3147FEA7FE0EAFFF080387FE03E1C247FA31F>I<3803FFC0001F13
F84813FCA2387F00FE007E137E007C133EA248131FB3A36C133F007C133EA2007E137E00
7F13FE383FFFFCA26C13F8000313C018267DA41F>I<387FFFE0B512F8806C7F380F807F
EC1F80140FA2EC07C0A6EC0F80A2141FEC7F00EBFFFE5C5C14E00180C7FCAAEA7FF0487E
A26C5A1A247FA31F>I<3803FFC0001F13F84813FCA2387F00FE007E137E007C133EA200
FC133F48131FB2133EA238FC1F3F007C13BEA2387E0FFE127F383FFFFCA26C13F8000313
F0380001F8A2EB00FCA2147EA2143E182D7DA41F>I<EA7FFFB512E0806C7F380F81FCEB
807E143E143F80A45C143E147EEB81FCEBFFF85C5C14F81381EB80FCA2147CA5157015F8
A3387FF07F38FFF83F15F0397FF01FE0C7EA07C01D257FA31F>I<3801FE1C3807FFBE48
13FE123F1303EA7E01EAFC00147E5A143EA26C131C14007E127F13E06CB4FC6C13C00007
13F0000113F838003FFCEB03FEEB007E147F143FA20070131F12F8A36C133F143E6C137E
38FFC0FCEBFFF814F014E00070138018267DA41F>I<007FB512E0B612F0A338F80F81A4
0070EB80E000001400B3A5EBFFF8487FA26C5B1C247FA31F>I<397FF03FF839FFF87FFC
A2397FF03FF8390F8007C0B3A5EBC00FA23907E01F80A23903F03F006D5A3801FFFE6C5B
EB3FF0EB0FC01E2580A31F>I<39FF801FF0EBC03FA2EB801F393C0003C0A66CEB0780A4
130FEB1F87A3390E3FC700380F39CFA6EB79EF000713EEA21370A3EBF0FEA2EBE07E0003
137CA2EBC03C1C257FA31F>87 D<387FE3FF00FF1480A2007F1400380FC1F800075B13E1
3803E3E013F3EA01F7EBFFC07E5C137F91C7FC7F133E133F5B8013FF80A2EA01F7EBF3E0
EA03E3EBE1F0EA07C1EBC0F8120FEB807C121F39FFC1FF8001E113C0A201C113801A247E
A31F>I<397FE07FE039FFF0FFF0A2397FE07FE0390F801F006D5A0007133EEBE07E1203
EBF07C000113FC5CEA00F8EBF9F01379137DEB3DE0133F6D5AA25C130FABEB7FF0497EA2
6D5A1C247FA31F>I<387FFFFEB6FCA338F8007EA25C130100705BC6485AA2495A130F5C
495A133F91C7FC137EA25B12015B485A12075B380FC007EC0F80EA1F80123F1300127EA2
B6FCA36C140019247DA31F>I<EA7FFFB51280A2140000F8C7FCB3B3B5FC1480A26C1300
112D75A71F>I<EA7FFFB51280A27EEA000FB3B3EA7FFFB5FCA26C1300112D7EA71F>93
D<387FFFFEB6FCA36C13FE18057D7E1F>95 D<EA0FFE383FFF804813E080387E03F86D7E
EA3C00C7127CEB07FC13FF1207121F383FFC7CEA7F80EAFE005A5AA26C13FCA2EA7F076C
B512C06C14E06C13BF3903FC0FC01B197D981F>97 D<EA7F80487EA2127F1207A7EBC7F0
EBDFFCEBFFFEECFF809038FC1FC0EBF00F9038E007E0A29038C003F0A21401A5140313E0
EC07E013F09038F80FC09038FC3F8090B512005CEBDFFC380387E01C2480A31F>I<EB7F
E03801FFF8000713FC5AEA1FC0EA3F00007E137814005AA25AA57EA2007E1338147C6C13
FCEA1FC1380FFFF86C13F0000113E038007F8016197C981F>I<EB03FC497EA21303EB00
3EA7137E3803FFBE4813FE5AEA1FC3EA3F00007E137EA248133EA25AA57E147E127E14FE
EA3F0113836CB512E0000714F06C13BF3900FE1FE01C247EA31F>I<137F3801FFC00007
13E04813F8EA1FC1383F00FC007E137C147E5A143EB512FEA314FC00F8C7FC7EA2007E13
1C007F133E383F807E381FE0FE380FFFFC6C13F8000113F038007F8017197D981F>I<EB
01FCEB07FF011F13805B141F137E90387C0F0091C7FCA4387FFFFCB57EA26C5BD8007CC7
FCB1383FFFF8487FA26C5B19247FA31F>I<EC1F809038FC3FC00003B512E0120F4813F7
383F87F3903803F1C0397E01F800EA7C00A4EA7E016C485A1387EBFFE05C91C7FCEA3CFC
90C8FCA2123E383FFFE06C13FC487F487F397C003F8048EB0FC01407481303A36C1307A2
007EEB1F80387F807F391FFFFE006C5B000313F0C613C01B287E991F>I<EA7F80487EA2
127F1207A7EBC3F8EBCFFC90B5FCA29038FE1F8013F8EBF00F13E0A213C0AC397FFC3FF8
39FFFE7FFCA2397FFC3FF81E2480A31F>I<1370EA01FCA5EA007090C7FCA5EA7FF8487E
A2127FEA007CB1387FFFFCB5FCA27E16257CA41F>I<EB0380EB0FE0A5EB038090C7FCA5
3807FFC04813E0A27EEA0003B3A8EA3007007813C0EAFC0FEB1F80B5FC1400EA3FFCEA1F
F013327DA41F>I<127F487EA2127F1207A7903883FFC0018713E0A2018313C0903880FC
00EB81F8EB83F0EB87E0EB8FC0EB9F8001BFC7FCEBFF80808013F3EBE1F0EBC1F8EB80FC
147C80143F397FF87FE039FFFCFFF0A2397FF87FE01C247FA31F>I<EA7FFC487EA2127F
EA003EB3AA007FB5FCB61280A26C140019247DA31F>I<387C7C1F39FFFE7F8090B512C0
6C14E0381FCFF3EB87E1EB07C1A2001E1381AD397F87E1F839FFCFF3FCA2397F87E1F81E
1980981F>I<387F83F838FFCFFC90B5FC7E3907FE1F8013F8EBF00F13E0A213C0AC397F
FC3FF839FFFE7FFCA2397FFC3FF81E1980981F>I<137E3803FFC04813E04813F0381FC3
F8383F00FC007E137E007C133EA248131FA66C133F007C133EA2007E137E6C13FC381FC3
F8380FFFF06C13E06C13C038007E0018197D981F>I<387F87F038FFDFFCEBFFFE6CEBFF
803907FC1FC0EBF00F9038E007E0A29038C003F0A21401A5140313E0EC07E013F09038F8
0FC09038FC3F8090B512005CEBDFFCEBC7E001C0C7FCA9EA7FFC487EA26C5A1C2680981F
>I<EB7F0E3801FFDF000713FF5AEA1FC1EA3F8048487E007E7F5A805AA57E5C127E5C6C
5BEA1FC16CB5FC7E000113DF38007F1F1300A9903801FFF04913F8A26D13F01D267E981F
>I<387FE03F39FFF0FFC001F313E0EA7FF73801FFE714879038FE03C091C7FC5B5BA35B
A9387FFFF0B5FCA27E1B197F981F>I<3803FFE0001F13F05A5AEAFE03EAF80112F038F8
00E06C1300EAFFC06CB4FC001F13C06C13E0C613F8EB07FCEA700000F8137C6C133CA26C
137C38FF01FCEBFFF814F014C00071130016197C981F>I<13E0487EA6387FFFFCB57EA2
6C5BD801F0C7FCAB1407EC0F80A2141F13F89038FC3F006CB5FC6D5AEB3FF8EB0FE01920
7F9F1F>I<387F80FFD8FFC11380A2EA7FC00007130FAE141F143FEBE07F90B512F86C14
FCC6FC90387FC7F81E1980981F>I<397FF0FFE0D8FFF913F0A2D87FF013E03907801E00
A2EBC03E0003133CA36C6C5AA36C6C5AA3EB79E0A3137F6D5AA36D5A6DC7FC1C197F981F
>I<397FE07FE039FFF0FFF0A2397FE07FE0391E000780A4001F130F6C1400130FEB1F8F
EB3FCFA3000713CE1339A2EBB9DEA2EBF0FE00035BA33801E0781C197F981F>I<397FE1
FF80EAFFF3A2EA7FE13907C0F000EA03E13801E3E0EBF3C06CB45A137F6DC7FC133E131E
133F497E13F7EBF3C03801E1E000037F13C038078078397FE1FF80D8FFF313C0A2D87FE1
13801A197E981F>I<39FFE1FFC001F313E0A201E113C0390F003C00138012075C13C012
035CEA01E0A2EBE1E0EA00F1A25C137BA2133BEB3F80A2131F91C7FCA3131EA2133E133C
1278EAFC7C5BEAF9F012FF6C5A5B001FC8FC1B267E981F>I<003FB5FC481480A3397C00
7F0014FE495A383803F8C6485A495A495A495A49C7FC13FE485A485A3807F007390FE00F
80EA1FC0EA3F80EA7F00B6FCA36C140019197E981F>I<14FEEB03FF130FEB1FFEEB3FC0
1400133EAC137E13FEEA7FFC12FF13F013FC127FC67E137E133EAC133F14C0EB1FFEEB0F
FF1303EB00FE182D7DA71F>I<127012F8B3B3A71270052D73A71F>I<EA7F80EAFFE013F8
6C7EEA01FEEA007E133EAC133F1480EB1FFE14FF1307131F14FEEB3F801400133EAC137E
EA01FEEA7FFC485A13E0EA7F80182D7DA71F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmti9 9 43
/Fp 43 122 df<DB07F8133EDB1FFFEBFF80923A7E0783E3C0923AF803C7C1E0912601F0
0F1387DA03E013CFA2DA07C090389F07C09339071F0380040090C7FC4A5A173EA3141F92
C7127E177CA35C143E011FB712F8A3D9007EC700F8C7FC147C16015FA214FC5C16035FA2
13015C16075FA313034A130F5FA313074A131F94C8FCA2130FA24A5B163EA2131F91C712
7E167CA2133E5E0038131C267E3C3F5B15013AFE787F03E000FC017E5B3AF8F03C0780D8
78E0011FC9FC393FC01FFC390F0003F03B4582B42F>11 D<923803FF80031F13F092383F
00F803F8133C4A48133E4A48137E17FE4A5A17FC17384A481300A3141F92C8FCA55C143E
011FB612E0A217C09039007E0007147C160F1780A214FC4A131F1700A301015C4A133EA3
167E0103147C5C1718EEFC1CEEF83C010715385C1778177016F0010F15F04AEBF8E01679
EE3FC0011FEC0F0093C7FC91C9FCA3133EA21238EA7E3C137CEAFE7812FC485AEA79E0EA
3FC0000FCAFC2F4582B42B>I<ED03FE92391FFFC7C092387E03EF9239F800FF80913801
F003EC03E0A2DA07C01400EE01DFEE001F4A485B173EA3021F147E92C7127CA317FC4A5C
143E011FB6FCA25F9039007E0001147C16035FA214FC4A13075FA30101140F4A5CA3161F
010392C7FC5C1706EE3F07EE3E0F0107150EA24A141E171C163C010F153C4AEB3E38EE1E
78705AEE03C0011F91C8FC91CAFCA3133EA21238EA7E3C137CEAFE7812FC485AEA78E0EA
3FC0000FCBFC324582B42D>I<EA0380EA0FE0121FA5EA0760120013E013C0A212011380
1203EA07001206120E5A5A5A5A5A0B176FB318>39 D<B51280A46C1300110579911B>45
D<121C127F12FFA412FE12380808778718>I<EC01F8EC0FFEEC3FFFECFE0F903901F807
80903803E00F903807C01F90380F803FD91F001300133E49130E01FC90C7FC5B1201485A
A2485AA2380FC1F8EBC7FF9038CE0780391FBC03C001F07FEBE001003F8013C01380A2D8
7F007FA2127E4A5AA25AA214075DA25A4A5AA25D141F4AC7FC0078133E007C5B5C6C485A
381F07E0EBFFC0000790C8FCEA01F8213477B127>54 D<161C163CA2167C16FCA2150182
1503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A2913803807F82EC0700A2
140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80A2130E131E131C133C13
385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F367BB539>65
D<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF9139FE0001EF49
48EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A4848153CA2485AA2
48481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E
160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413
FC90387FFFF0011F13C0D903FEC9FC323775B437>67 D<0107B612C04915F017FC903A00
3F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102FE15F8A25CA21301A2
5CA2130317035CA2130718F04A1407A2130F18E04A140F18C0011F151F18805CEF3F0013
3F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8007F
B612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0903A003F80001F1707170392C7
FC17015C18C0147EA214FEA24A130EA20101EC1E03041C13804A91C7FC163C13035E9138
F001F891B5FC5B5EECE0011500130F5E5C1707011F01015BEEC00E0280141E92C7121C13
3F173C91C812381778495DA2017E14014C5A01FE14074C5A49141F00014AB45A007FB7FC
B8FC94C7FC34337CB234>I<92391FE001809238FFF8030207EBFE07913A1FF01F0F0091
393F80079F9139FE0003DFD901F86DB4FCD907F05C49481300495A4948147E49C8127C13
7E13FE485A48481578A2485AA248481570A2485A94C7FC123F5BA3127F90CBFCA400FE91
383FFFFCA25F9238003F8094C7FCA2007E5DA2167EA2007F15FE7E5E6C6C1301A26C6C49
5A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FEC9FC31
3775B43B>71 D<0107B548B512C0495CA2903C003FC0000FF0004B5CA292C75BA24A141F
60147EA202FE143F95C7FC5CA201015D177E5CA2010315FE5F5C91B6FC5B5F9138E00001
A2010F14035F5CA2011F14075F5CA2013F140F5F91C7FCA249141F5F137EA201FE143F94
C8FC5B00015D3B7FFFF01FFFFCB55BA23A337BB239>I<010FB51280A216009038003FC0
5DA292C7FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2
131FA25CA2133FA291C8FCA25BA2137EA213FEA25B1201B512F8A25C21337BB21E>I<91
381FFFFE5C16FC9138003F80A31600A25D157EA315FE5DA314015DA314035DA314075DA3
140F5DA3141F5DA3143F92C7FCA2121C007E5B00FE137EA214FE485BEAF80100E05B495A
387007E038780FC06C48C8FCEA1FFCEA07F0273579B228>I<0107B512C05BA29026003F
C0C7FC5DA292C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130F
A25C17E0011F140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA201FE5CED
01FC4913030001EC1FF8007FB6FCB7FC5E2B337CB230>76 D<ED1FE0913801FFFC913807
E03F91391F800FC091393E0003E002F8EB01F0495A4948EB00F8494814FC4948147C49C8
127E133E017E153E49153F485AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE
01FC12FEEE03F8A217F0160717E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A
000F4A5A6D495A0007EC1F806C6C013EC7FCD801F813FC39007E07F090383FFF80D907FC
C8FC303775B43B>79 D<0107B612C04915F883903A003F8001FEEE003FEF1F8092C713C0
170F5C18E0147EA214FEEF1FC05CA201011680173F4A1500177E010315FE5F4AEB03F8EE
07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2
137EA213FEA25B1201387FFFF0B5FCA233337CB234>I<913901FC018091380FFF03023F
13C791387E07EF903A01F801FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3
137E1638A293C7FC137FA26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F
1400153F6F7E150FA4120EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C
6D485A9038C007E039F3F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>83
D<0003B812C05A1880903AF800FC003F260FC001141F0180150F01005B001EEE07001403
121C003C4A5BA200380107140E127800705CA2020F141E00F0161CC74990C7FCA2141FA2
5DA2143FA292C9FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25C497E00
1FB512F05AA2323374B237>I<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA
03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A
1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E
783907FC0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35BA21201A25B
A21203A25BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013
005AA2123EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C
485A495A6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03C0
EBFC013801F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312
FE5AA4007C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC
1B2278A023>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FC
A2903803F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F80
07A2D83F005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C14
1EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B3
27>I<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F
0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB
0780EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7F
C0EDF0E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E
90381FFFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA313
1F91C8FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418
>I<143FECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA248
48137EA24848137CA215FC12074913F8A21401A2D80FC013F0A21403120715E01407140F
141F3903E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A25C143E1238
007E137E5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0F
C0EA03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE0
3901FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2
001F13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380007C140716
0000FC140E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB
038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60
FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB03801307140013
0E131EEA07F8EA01F013337AB118>I<1538157C15FCA315701500AB143EECFF80903801
E3C090380383E0EB0701130FEB0E03131C133C133814071378013013C01300140FA21580
A2141FA21500A25CA2143EA2147EA2147CA214FCA25CA21301A25CA213035C1238387E07
C0A238FE0F804848C7FCEAF83EEA787CEA3FF0EA0F801E4283B118>I<133FEA07FF5A13
FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207A213C0A2120FA213
80A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013
F0EAF8E01279EA3FC0EA0F00103579B314>108 D<2703C003F8137F3C0FF00FFE01FFC0
3C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7FD97F805B0070
01005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F130360491400A200
034A13076049013E130FF081800007027EEC83C0051F138049017C1403A2000F02FC1407
053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E03A227AA03F>
I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000
781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA20003147E157C4913
FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F016E0001FECE1C015
E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E03E09038FC01
F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8127EA2140300FE14
F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83E03803FF80D8
00FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF03E03901E1FE
01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C01200010F130316F0
1480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038
FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FC
A325307FA027>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C3FC0FC003813
80EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA21203A25BA212
07A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB
780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7F
FC1307EB00FE147E143E123800FC133CA3147C00F013784813F0EAF001387803E0383C0F
80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA21400A25BA2133EA2137EA213
7C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207A25BA2120FA25B1460001F
13F014E01300130114C01303001E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<
EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E133E1270A2017E137ED8F0
7C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002031370EDE0F0D807C014E0
A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038F071E73A007FE0FF009038
1F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E121C123C0038147CEA783E00
70143CA2137ED8F07C1338EA60FCC65A1578000114705BA215F0000314E05BA2EC01C0A2
EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F0
1538D803FC010E13FCD80F1E131E000E143E121C123C0038027E137CD8783E137C007016
3CA2017E13FCD8F07C491338EA60FCC65A0201147800014A137013F0A2020314F0000316
E001E05BA2160117C001C013C00207EB0380A29039E00FE0071700021F130E3A01F03DF0
1E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>I<011F137C90387FC1FF3A
01E1E787803A03C0F703C0903880FE0FEA07004813FC000E1580001E9038F80700001C91
C7FC1301003C5B1218120013035CA31307A25C1506010F130F150E14800038141ED87C1F
131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF80260F807EC7FC22227CA0
23>I<13F0D803FC1307D80F1E130F000E141F121C123C0038143FD8783E133E1270A201
7E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314F013E0A2140315E0EA07
C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8FEB001F1500A25C
003E133E007E137E147C5C007C5BEA7001495A38380780D83C1FC7FCEA0FFCEA07F02031
7AA025>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmbx9 9 62
/Fq 62 123 df<DA07FFEB1FF0027F9038E1FFFC0103B500F77F903B0FFE01FFF8FF9026
1FF00301E1138090267FE00713C1D9FFC01481148048160102006E130081183C6F91C7FC
A7B9FCA40001D9000190C8FCB3A7003FD9F83F13FCA439347FB334>11
D<EC07FF91B512E001078090391FFC01FC90383FE0009039FFC001FE48EB80031400484A
7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA43903FE0001B3A7277FFFF03F13F8A42D
347FB331>I<913807FF9F91B6FC130790381FFC0390383FE007EBFFC048138014005A49
7FA281A8B8FCA43903FE0001B3A7277FFFF03F13F8A42D347FB331>I<DA07FF903807FF
9F027FD9E07F13FF0103B500F3B6FC903B0FFE01FFFE0390261FF003EBF00790267FE007
13E0D9FFC014C0028014805A02004A7E818481A7BBFCA40001D90001EB0001B3A7003FD9
F83FD9F83F13F8A445347FB34A>15 D<120FEA3FC0EA7FE0EAFFF0A213F8A4127F123FEA
0F3812001378A21370A213F013E01201EA03C0A2EA0780EA0F00121E5A12180D1B7AB319
>39 D<120FEA3FC0EA7FE0EAFFF0A213F8A4127F123FEA0F3812001378A21370A213F013
E01201EA03C0A2EA0780EA0F00121E5A12180D1B7A8B19>44 D<B512FCA816087F931D>
I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>I<1507ED0F80A215
1F1600A25D153E157E157CA215FC5D14015DA214035D14075DA2140F5D141F92C7FCA25C
143E147E147CA214FC5C13015CA213035C13075CA2130F5C131F91C8FCA25B133E137E13
7CA213FC5B12015BA212035B12075BA2120F5B121F90C9FCA25A123E127E127CA212FC5A
A21270214B7BB72C>I<EB03FE90383FFFE090B512F848EB07FC3903FC01FE48486C7E48
48EB7F8049133F001F15C0A2003F15E049131F007F15F0A500FF15F8B1007F15F0A4003F
15E06D133FA2001F15C0A26C6CEB7F806C6CEBFF006C6C485A3901FF07FC6CEBFFF8013F
13E0D903FEC7FC25327DB02C>I<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B200
7FB512FEA41F317AB02C>I<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF
48487E6D6C1380D8FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A
5A4A5A5D4A5AEC3FC04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E0003
4914C05B4848130748B6FC5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048
B512F03903F01FF83907C00FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C
485AD803805BC7FC4A5A4A5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E
7E6E7E16806E13C0A2000F15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC01480494813
00003F5B391FF01FFE6CB512F8000314E0C61480D91FFCC7FC23327CB02C>I<151F5D5D
A25D5C5C5C5CA25C143D147D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C1378
13F01201EA03E0EA07C01380EA0F00121E123E5A5AB712FEA4C700031300A80103B512FE
A427317EB02C>I<000C140ED80FE013FE90B5FC5D5D5D5D5D92C7FC14FC14F091C8FC13
80A6EB87FE9038BFFFC090B512F09038FC0FF89038E003FE01C07F497E01001480000E6D
13C0C8FCA216E0A3121FEA7F807F487EA316C05B5CD87F801480D87C0014006C5B393F80
07FE391FE01FFC0007B512F06C14C0C691C7FCEB1FF823327CB02C>I<EC7FC0903803FF
F0010F13FC90383FE07E90387F801F4848485A4848EBFF8048485A13F8120FEA1FF0A212
3F6E13004848133C92C7FCA2142039FFE1FF8001E713E001EF13F89038FE03FC496C7E01
F87F6E13805B16C0A24914E0A5127FA5123F16C0121F6D1480000F5B01F814006C6C485A
6C6C485A6CB55A6C6C5B011F13C0D907FEC7FC23327CB02C>I<123C123F90B612F8A448
15F016E016C0168016005D007CC7127E00785C4A5A00F8495A48495A4A5A4A5AC7FC4AC7
FC147E14FE5C13015C1303A2495AA2130FA2131FA25C133FA4137FA96D5AA2010FC8FC25
337BB12C>I<EB07FE90383FFFC090B512F03903F807FC3907C000FE4848137F8148C713
80151F5A7FA27F7F01F8133F01FE14006D6C5A6CEBE0FEECF1FC6CEBFFF815E06C5C6C14
F06C806C6C7F48B57E4880D80FF31480D81FE014C0383FC03FEB800F48486C13E0140148
EB007F48143F151FA2150FA216C07E6C141F6D14806C6C133F6DEB7F00391FF803FE0007
B512F86C5CC66C13C0D90FFCC7FC23327CB02C>I<EB07FC90383FFF8090B512E03903FE
0FF03907F807F848486C7E001F6D7E003F80497E007F1580A212FF16C0A416E0A55C127F
A2123F5CEA1FF0000F5B6C6C5A3803FFFEC65BD93FF013C0EB00805CA2EA0780261FE001
1380EA3FF01600A24A5AA24A5A49485A391F801FF09038C07FE06CB512806C91C7FC0001
13FC38003FC023327CB02C>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FC
A9120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>I<007FB91280BA12
C0A36C1880CDFCAD007FB91280BA12C0A36C18803A177B9D45>61
D<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F80150302
3F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA249B67EA2
4981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157FB500F001
3FB512F0A43C347DB343>65 D<B712FEEEFFC017F817FEC69039C0001FFF040713800401
13C0A27013E0A2EF7FF0A6EFFFE0A24C13C0A24C138093380FFE00EE3FFC91B612F017C0
17F89139C00007FE933803FF80040013C018E0EF7FF018F8173FA218FCA618F8A2177FEF
FFF04C13E05E040F13C0B912005F17F0178036337DB23F>I<DBFFE01338021F01FE1378
91B6EA80F8010315E1010F9038E00FF7903A1FFE0001FFD97FF8EB007FD9FFE0143F4849
141F4849140F4890C81207485A1703485A1701123F5B007F1600A349160012FFAB127F7F
1878A2123F7F001F17F818F06C7E6D15016CEE03E06C7F6C6DEC07C06C6DEC0F80D97FF8
EC3F00D91FFE14FE903A0FFFE007FC010390B512F0010015C0021F49C7FC020013F03535
7BB340>I<B712FCEEFFC017F817FEC69039E0003FFF040313C004007F717EEF1FF8717E
841707848319808319C0A419E0AB19C0A419805FA219004D5A170F604D5A4D5AEFFFE004
035B041F5BB848C7FC17F817C004FCC8FC3B337DB244>I<B812FCA4C69038E0001FEE03
FE16011600177E173EA2171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE0
3F150F1507A21503A592C8FCABB612F8A430337DB238>70 D<B612E0A4C6EBE000B3B3A7
B612E0A41B337DB221>73 D<B612F8A4C601E0C8FCB3A81778A417F817F0A31601A21603
A21607160F161F167F923803FFE0B8FCA42D337DB235>76 D<B500E093387FFFF86E93B5
FCA26E5DC6F1F800D9F7FCED03DFA3D9F3FEED079FA2D9F1FFED0F1FA201F06D141EA26E
6C143CA26E6C1478A26E6C14F0A36E6CEB01E0A26E6CEB03C0A26E6CEB0780A26E6CEB0F
00A26EEB801EA26F6C5AA36F6C5AA26F6C5AA292380FF9E0A26FB45AA26F5BA26F90C7FC
A3B526F000FE011FB512F8A2167C16384D337DB254>I<B500E091383FFFFC808080C66D
9138003C00808101F77F13F301F17F8101F07F6E7E6E7E6E7E6E7F806E7F826E7F6E7F6F
7E6F7E6F7E816F138017C06F13E06F13F06F13F8EE7FFCEE3FFE161FEE0FFF18BC7013FC
828282177F173F171FA2170F170717031701B500F01400187C183CA23E337DB245>I<91
3803FF80027F13FC49B6FC0107010113C0903A1FF8003FF0D93FE0EB0FF8D9FFC0EB07FE
48496D7E4890C76C13804980000717C04848ED7FE0A24848ED3FF0A2003F17F8A2007F17
FC49151FA300FF17FEAB007F17FCA26D153FA2003F17F8A36C6CED7FF0A26C6CEDFFE000
0717C06D5C6C17806C6D4913006C6D495AD97FF0EB1FFCD91FF8EB3FF0903A07FF01FFC0
010190B5C7FC6D6C13FC020713C037357BB342>I<B712F8EEFF8017E017F8C69039E000
7FFCEE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C13004C5AEE7FFC91B612
F017C04CC7FC02E0C9FCB3B612E0A433337DB23C>I<B712E016FEEEFFC017F0C6D9E000
13FCEE1FFEEE07FF707FA2707FA284A660A24C5B95C7FC4C5AEE1FFCEEFFF891B612C094
C8FC83DAE0037F03007FEE3FF083707EA2707EA583A4193CA2188082F0C07CB6D8E00314
7870EBE1F070EBFFE0053F13C0CA000313803E347DB242>82 D<D90FFC137090397FFF80
F048B512E1000714FB390FF803FF391FE0007F4848133F49130F007F140790C7FC150348
1401A36D1300A27F6D140013F8387FFFC014FCECFFE06C14F86C14FE816C1580000315C0
6C15E06C6C14F0131F010014F8140F9138007FFC153F151F150F00F01407A21503A27EA2
16F86C14076C15F07E6DEB0FE001E0131F01FEEB7FC000FDB61200D8F87F5BD8F01F13F8
D8E00113C026357BB331>I<003FB812F8A4D9F003EB801FD87F80ED03FC01001501007E
1600007C177CA20078173CA400F8173E48171EA4C71600B3A9011FB612F0A437327DB13E
>I<B66CB639800FFFFCA400019026C0000101C0C7EA1F001B1E6E6F143E6C6F163CA26E
6E6C147C017F19786E4A6C14F8013F61A26E496D1301011F616E497F010F03CF4A5AA26E
01076D13076D03875DA29226800F03EB800F6D96C7FCDBC01F6E5A6DDA1E01141EA2DBE0
3EECE03E6DDA3C00143CDBF07C14F0027F0178017F5BA2DBF8F8ECF8F8023F49013F5BA2
DBFDE0EB1FFD021F5F03FF15FF6E496D5BA36E496D5BA26E90C76C90C8FCA36E486E5AA2
4B140002005EA20378157856347EB25B>87 D<EB7FFE0003B512E04814F8390FF00FFC39
1FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F
000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F
0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF
8001FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217
E0A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F
13809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE4848
487EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC0780
7F6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217D
A027>I<ED01FC15FFA4150F1507ADEB07FE90383FFFC790B512F70003EB01FF3907FC00
3F4848131F4848130F48481307A2127F5BA212FFA9127FA27F123F150F6C6C131F6C6C13
3F6C6C497E2603FE03B512E0C6B512E7013F1387903807FC072B347DB331>I<903803FF
80013F13F090B512FC48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F
5B16F012FF150790B6FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803
FEEB0FC03A01FF807F806C6CB51200011F13FC010313E024217EA029>I<EC3FE0903803
FFF8010F13FC90383FF1FE90387FC3FFEBFF83481303A2EA03FEEC01FEA2EC00781500A7
B512FEA4D803FEC7FCB3A7387FFFF8A420347EB31B>I<16F890390FFC07FE90387FFF9F
48B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF003
000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF
8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6C
EB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA1
2C>I<EA01FC12FFA4120F1207ADEC03FF020F13C0023F13F09138FC0FF89039FDE007FC
EBFFC04A6C7E1400A25BA25BB2B539E07FFFF0A42C347DB331>I<EA03F0487E487E487E
A66C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>I<147E14
FF4913804913C0A66D13806D1300147E91C7FCA8EC1FC0EB0FFFA41300147FB3AC121E12
3FEA7F80EAFFC0ECFF80A201C113005C387F87FC6CB45A6C13E0000390C7FC1A4485B41B
>I<EA01FC12FFA4120F1207ADED7FFFA4ED1FC04B5A037EC7FC5DEC03F8EC07E04A5AEC
3F804AC8FC4A7E90B5FC8181ECBFF0EC3FF89038FC1FFCEBF80F6E7E6E7E6E7F82806F7E
6F7E6F7EB539C07FFFC0A42A347DB32F>I<EA01FC12FFA4120F1207B3B3A6B512E0A413
347DB318>I<2703F803FEEB03FE00FF903B1FFFC01FFFC0027FD9E07F7F913BF81FF0F8
1FF0903CF9E00FF9E00FF8260FFBC0EBFBC06CB4486CB4486C7E02001400495CA3495CB2
B500E0B500E0B512E0A443217CA04A>I<3901F803FF00FF010F13C0023F13F09138FC0F
F89039F9E007FC380FFBC06CB4486C7E1400A25BA25BB2B539E07FFFF0A42C217DA031>
I<903803FF80011F13F090B512FE48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F04913
0F003F15F8491307007F15FCA300FF15FEA8007F15FCA26D130F003F15F8001F15F06D13
1F6C6CEB3FE06C6CEB7FC03A01FF01FF006CEBFFFE013F13F80103138027217EA02C>I<
3901FC07FC00FF90387FFF8001FDB512E09039FFF01FF89138C007FC000F90380003FE6C
4880496D1380A26F13C0A3EE7FE0A9EEFFC0A34B1380A26D4913006D495A9138C00FFC91
38F03FF801FDB512E0D9FC7F1380DA0FF8C7FC91C9FCABB512E0A42B307EA031>I<D903
FC133C90393FFF807C90B5EAE0FC0003EB81F83907FE007D4848133F4848131F4848130F
A248481307A3485AA96C7EA36C7E150F6C6C131F000F143F6C6C13FF3903FF03F7C6EBFF
E7013F1387903807FC0790C7FCAB92B512E0A42B307DA02F>I<3901F81F8000FFEB7FF0
ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1
B512F0A41F217EA024>I<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA2
6C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00
F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C21
7DA023>I<133CA5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC
03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE
00FF147FA4000F140700071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF301
3F13C3903807FE032C217DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C
5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC
7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I<B5
3B83FFFC03FFE0A43D07FC001FE0003E00183C6D167C00036F1378033F14F86C6C6E5B15
7F9139807BFC016C5FDAC0FB1303017FD9F1FE5B14C19139E1E0FF07013F5E9139F3C07F
0F011F038FC7FC14F7903A0FFF803FDEA29238001FFE6D5DA26D486D5AA24A130701015D
A26D486D5A4A13013B217EA040>I<B539C03FFF80A400039039000FC0006C01805B6C4A
C7FC90387FC03E6D6C5A6E5A90381FF9F0EB0FFF6D5B6D5B6D5B7F816E7E4A7E497FEB03
EF903807C7FC90380FC3FE90381F83FFD93F017FD97E007F496D7E496D7E4848131FD8FF
FE90387FFFC0A42A217EA02F>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D
14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C
01071378ECFEF801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141EA25CA2147C003E1378
007F13F8486C5A1381EB83E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA07E02A307EA02F
>I<001FB6FCA39038E007FE9038800FFCEB001F001EEB3FF8003E14F0EC7FE0003C13FF
4913C01580491300C65A495A495A5C133F90387FF00FEBFFE014C04813805A48EB001F5B
4848131E001F143E4848137E4913FE387FE003B6FCA320217EA027>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmr9 9 82
/Fr 82 124 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<DA1FF0EBFFC09126FFFC0713FE903B03F00F1F807E903B0FC007FE00FE90391F801FFC
D93F005B017E5C495C187E48486D5AACB912FEA33C01F8000FC0007EB3A7486C496C13FF
267FFFE3B5001F13F8A33D357FB440>I<003C13F0387E01F838FF03FCA2EB83FEA2EA7F
81383D80F600011306A40003130EEB000CA248131C00061318000E1338000C1330001C13
704813E0387001C00060138017177EB326>34 D<123C127EB4FCA21380A2127F123D1201
A412031300A25A1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F
00130E5B133C5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0
127CA5123C123EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB03
80EB01C01300124A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F
1378137C133C133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA213
3C137C137813F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<15
6015F0B3A4007FB812C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>I<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<15
30157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C14
7CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137C
A2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2
127812F8A25A12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB80
03000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB
01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F34
7DB126>I<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A31932
7AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F
15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F
801500147E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7
FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F
80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15
F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015
F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001F
EB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A214
0F141FA2143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013
C0EA0180120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107
B51280A321337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC
90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F0
1403A215F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806C
EB7F00380F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13
E090383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8
FCA35A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01
F8130015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC00300
07EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C00
3FB6FCA34814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA070014
06140E5C141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20
347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F000
1E1300001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C039
0FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F
007FF8001E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278
007C14787E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>
I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048
EB01F8127EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C0
0E3803E01C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E038
3F800715C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F
347DB126>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>
I<123C127E12FFA4127E123C1200B0123C127E12FE12FFA3127F123F1203A412071206A3
120E120C121C1238123012701260082F7A9F15>I<007FB812C0B912E0A26C17C0CCFCAC
007FB812C0B912E0A26C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE14
0CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA3
01066D7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2000182
1607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003
FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED
03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA6
17F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<
DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD9
7F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F16
0CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D
15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0
023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE
0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0
A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F816803433
7EB23B>I<B812C0A3D803FCC7127F0001150FEE03E01601A21600A21760A403061330A4
1700150EA2151E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA417
38A21770A217F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803FCC7
FC0001151FEE07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3
EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393F
FF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712
0348481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7
FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C
7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA
03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA3
49C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3
B3A7487EB512FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC
3F805A0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<B5
00FE903807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E
4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F
4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF
80B500FE013F13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A4160317
00A45EA25E5E5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA200
03EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D9
81F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C
5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D
337CB246>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8
EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0
ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A2
16031601A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFF
C0903901FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E4848
6E7EA248486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817
E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00
015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFF
C0DA07FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F
80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001
FCC9FCB3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01
FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC
9039FE001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618
B500FEEB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D15
1C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA2
6D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E102
0F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B5
39800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D
020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95
C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C010117
18A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8
EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B
141C020115184C357FB24F>I<267FFFFC90B512C0A3000101E090381FF80026007F80EB
0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13E06D6C
485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E9138063FC0
140E4A6C7E9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E498101
0E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A335337EB23A
>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817386D
6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F801C91383FC0
18163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B512FC
A337337FB23A>I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C0038
EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7
FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A1638
485A4848147816F84848130148481307153FB7FCA326337CB22F>I<EAFFF0A4EAF000B3
B3B3ADEAFFF0A40C4B79B715>I<0003130C48131C000E133848137000181360003813E0
003013C0EA700100601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2
383F00FC001E1378171774B326>I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>I<EB7F
803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131F
EBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F
8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA3
13071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F01443
84B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020F
C7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114
016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA
0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0
903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C
487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3
807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB
07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E00
3E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C39
03F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038
F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716
F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC
91C8FCAA487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F38
07E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F
5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA32630
7DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049
C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E
140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300
EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019
237EA11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403
A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB
0FFFA30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFE
D907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D13
1C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2
EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801
FC003F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A2
90267E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC03
90C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B5
3801FFF8A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F83
80D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB
0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29
>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E
1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB
01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA
7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB
3F800070137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A
12035B48481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<
B712F8A22502809426>I E
%EndDVIPSBitmapFont
/Fs 82[33 50[44 50 50 72 50 1[33 39 44 1[55 50 55 83
28 55 33 28 55 50 33 44 55 44 55 50 8[72 100 72 72 66
55 72 1[61 78 72 94 66 78 50 39 78 78 61 66 72 72 66
72 7[50 50 50 50 50 50 50 50 50 2[25 43[55 2[{
TeXBase1Encoding ReEncodeFont}59 99.6264 /Times-Bold
rf
%DVIPSBitmapFont: Ft cmtt9 9 62
/Ft 62 123 df<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A5B485A
A2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C7EEB7F
80EB3FC0EB1FE0130F1303EB01C0133A73B327>40 D<127012F812FE7E6C7E6C7EEA0FE0
6C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80A3EB3F
00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327>I<12
0FEA3FC013E0EA7FF0A213F8A2123FA2120F120113F01203EA07E0121FEA7FC0EAFF8013
005A12700D14738927>44 D<007FB512F8B612FCA46C14F81E067C9927>I<121EEA7F80
A2EAFFC0A4EA7F80A2EA1E000A0A728927>I<EB07E0EB3FFC497E90B5FC4814803903FC
3FC03907F00FE0390FE007F0EBC003391F8001F8A248C712FCA2003E147C007E147EA300
7C143E00FC143FAC007E147EA46C14FCA2EB8001001F14F8EBC003000F14F0EBE0073907
F00FE03903FC3FC06CB512806C14006D5A6D5AEB07E020307DAE27>48
D<130E131FA25B5BA25B5A5A127FB5FCA213BFEA7E3F1200B3AA003FB512805A15C01580
A21A2F79AE27>I<EB3FE03801FFF84813FE000FEBFF804814C0393FE07FE0EB800F397F
0007F0007EEB03F800FE13015A6C14FC1400A3127CC8FCA2140115F8A2140315F01407EC
0FE0EC1FC0143FEC7F80ECFF00495A495A495A495A495A495A495A01FEC7FC485AD807F8
1378484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE27>I<153815FC14011407140F
EC3FF8EC7FE0ECFFC001031300495AEB1FF8495A495A3801FF804890C7FCEA0FFC485AEA
7FF0EAFFC05BA27FEA7FF0EA1FF86C7EEA03FF6C7F38007FE06D7E6D7EEB07FE6D7E0100
13C0EC7FE0EC3FF8EC0FFC14071401140015381E287CAA27>60 D<127012FC7E6C7E7FEA
7FF0EA1FF86C7EEA03FF6C7F38007FE06D7E6D7EEB07FE6D7E010013C0EC7FE0EC3FF8EC
0FFC1407A2140FEC3FF8EC7FE0ECFFC001031300495AEB1FF8495A495A3801FF804890C7
FCEA0FFC485AEA7FF0EAFFC05B48C8FC5A12701E287CAA27>62 D<EB01FE903807FF8001
1F13C0017F13E090B512F048EB03F83803FC013907F000FC390FE01F7C9038C07FFE381F
80FF1301485A393E07F1FF007E13E0397C0FC07FEC803FA2EAFC1F00F8EB001FA800FCEB
803FD87C0F133EA2ECC07E397E07E0FC003E13F1393F03FFF86C6C13F0018013E0390FC0
7FC09038E01F1E3907F0003FD803FC137F3901FF03FF6CEBFFFE6D13FC011F13F0010713
C001011300202E7DAD27>64 D<EB03F0497EA2497EA4143CEB1F3EA5EB3F3FA3EB3E1FA2
017E7FA4496C7EA548486C7EA390B5FCA24880A3EBF003A248486C7EA4000F803A7FFC0F
FF8000FF15C06D5A497E007F1580222F7EAE27>I<007FB5FCB612C08115F87E3907E003
FCEC00FE157E157F81A6157EA25D1403EC0FF890B55A15C015F081819038E000FE157FED
3F80151FA2ED0FC0A6151F1680153FED7F004A5A007FB55AB65A5D15E06C1480222E7FAD
27>I<903803F80E90381FFE1F90383FFFBF90B6FC5A3803FE0F3807F803497E48487E48
5A49137FA248C7123FA25A127E151E150012FE5AAA7E127EA2151E007F143F7EA26C7E15
7F6D137E6C6C13FE3907F001FCEBF8033903FE0FF86CB512F06C14E0013F13C06D1300EB
03F820307DAE27>I<387FFFFC14FFB612C06C80813907E00FF81407EC01FC6E7EA2157E
157F811680151FA316C0150FABED1F80A3153F1600A25D15FEA24A5A4A5A140F007FB55A
5DB65A6C91C7FC14FC222E7FAD27>I<007FB61280B712C0A37E3907E0000FA6ED078092
C7FCA4EC07804A7EA390B5FCA5EBE00FA36E5A91C8FCA4ED03C0ED07E0A7007FB6FCB7FC
A36C15C0232E7FAD27>I<007FB61280B712C0A37E3907E0000FA6ED078092C7FCA4EC07
804A7EA390B5FCA5EBE00FA36E5A91C8FCAC387FFF80B57EA36C5B222E7EAD27>I<9038
07F03890381FFC7C90387FFFFC90B5FC5A3803FC1F3807F00F380FE007EBC003001F1301
1380123F90C7FCA2127EA2157892C7FC5AA8EC1FFF4A1380A3007E6D1300EC00FCA36C13
01A21380121FEBC003120FEBE0073807F00F3803FC1F6CB5FC7EEB7FFE90381FFC78D907
F0C7FC21307DAE27>I<3A7FFE07FFE0B54813F0A36C486C13E03A07E0007E00AF90B512
FEA59038E0007EB03A7FFE07FFE0B54813F0A36C486C13E0242E7FAD27>I<007FB512E0
B612F0A36C14E039001F8000B3B2007FB512E0B612F0A36C14E01C2E7BAD27>I<90381F
FFF84913FCA36D13F89038001F80B3AC127CA212FEA2EC3F005C387F81FE13FF6C5B6C5B
000713E0C690C7FC1E2F7BAD27>I<387FFFC080B5FC7E5CD803F0C8FCB3AAED0780ED0F
C0A7007FB6FCA2B7FC7E1680222E7FAD27>76 D<D87FE0EB7FE0486CEBFFF0A26D5A007F
15E0000F150001B813DFEBBC03A3EBBE07019E139FA3EB9F0FA2018F131FA2149FA2EB87
9EA4EB839C14FCA3EB81F8A2EB80F01400AAD87FF0EBFFE0486C4813F0A36C486C13E024
2E7FAD27>I<3A7FF003FFE0486C4813F0A213FC007F6D13E000079038003E0013DEA313
CFA3148013C714C0A213C314E0A213C114F0A3EBC0F8A31478147CA2143C143EA2141E14
1F140FA3EC07BEA3EC03FEEA7FFCEAFFFE1401A26C486C5A242E7FAD27>I<EBFFFC0007
EBFF80001F14E0A24814F0EBC00F397F8007F8EB0003007E1301A348EB00FCB3A76C1301
007E14F8A3007F1303EB8007393FE01FF090B5FC6C14E0A200071480C6EBFC001E307CAE
27>I<007FB5FCB612E081816C803907E003FEEC00FF81ED3F80151F16C0150FA6151F16
80153FED7F005DEC03FE90B55A5D5D5D92C7FC01E0C8FCADEA7FFEB5FCA36C5A222E7FAD
27>I<EBFFFC0007EBFF80001F14E0A24814F0EBE01F397F8007F8EB0003007E1301A300
FE14FC481300B3A4EB07E0A200FE13F1007E14F8EB03F9A2387F01FF1381D83FE013F090
B5FC6C14E0A200071480C6FC9038001FC0A2EC0FE0A2EC07F0A2EC03F8A2EC01F01E397C
AE27>I<387FFFF0B512FE6E7E816C803907E01FF014076E7E1401811400A514015D1403
4A5A141F90B55A5D5DA281EBE01F6E7E14076E7EA816F0EDF1F8A4397FFE01FBB5EBFFF0
8016E06C48EB7FC0C8EA1F00252F7FAD27>I<90387FC0E03901FFF1F0000713FF5A5AEA
3FE0EB801F387F000F007E130712FE5A1403A3EC01E06C90C7FC127E127FEA3FC013F86C
B47E6C13F86C13FE6CEBFF80C614C0010F13E0010013F0140FEC07F81403140115FC1400
127812FCA46CEB01F8A26C130390388007F09038F01FE090B5FC15C0150000F85B38701F
F81E307CAE27>I<007FB61280B712C0A439FC03F00FA60078EC0780000091C7FCB3AB90
B512C04880A36C5C222E7EAD27>I<3A7FFE01FFF8B54813FCA36C486C13F83A07E0001F
80B3AB6D133F00031500A26D5B0001147E6D13FE6C6C485A90387F87F814FF6D5B010F13
C06D5BD901FEC7FC262F80AD27>I<D87FE0EB7FE0486CEBFFF0A36C48EB7FE0001FC7EA
0F80A76C6CEB1F00A614F0EB81F83907C3FC3EA4149CEBC79EA30003143CA301E7137CEB
EF9FA2140FA200011478A49038FE07F8A300005CA2EBFC0390387801E0242F7FAD27>87
D<393FFC1FFE387FFE3F815D383FFC1F3903F00FE001F85B1201EBFC1F00005CEBFE3F01
7E90C7FCEB7F7FEB3F7E14FE6D5AA26D5AA26D5AA21303130780130F80131F80EB3F7E14
7F497E017E7F141F01FC7F140FD801F87F14071203496C7E120701E07F3A7FFC0FFF8000
FF15C06D5A497E007F1580222E7EAD27>I<3A7FFC03FFE06D5A00FF15F0007F15E0497E
3A07F000FE0000035CEBF80100015CA2EBFC0300005CEBFE07017E5BA26D485AA290381F
9F80A3010F90C7FCA2EB07FEA26D5AA26D5AAF90381FFF80497FA36D5B242E7FAD27>I<
387FFFF0B512F8A314F000FCC7FCB3B3ACB512F014F8A36C13F0153A71B327>91
D<387FFFF0B512F8A37EEA0001B3B3ACEA7FFFB5FCA36C13F0153A7EB327>93
D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2EB0FFF13
7F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6CB612806C
15C07E000313F1C69038807F8022207C9F27>97 D<EA7FE0487EA3127F1203A914FF01F3
13C090B512F08181EC81FE49C67E49EB3F8049131F16C049130FA216E01507A6150F16C0
7F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D01F313C02601E0FEC7FC232E7F
AD27>I<EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E09038800080
48C8FC127EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5
FC6C14E06C14C06C6C1300EB0FF81D207B9F27>I<EC3FF04A7EA3143F1401A9EB0FE1EB
7FFD48B5FC5A5A380FF83F381FE00F383FC007EB8003EA7F00007E1301A212FE5AA67E00
7E1303A2127F6C1307EB800F381FE01F380FF03F6CB612C06C15E06C13FD38007FF9D91F
E013C0232E7EAD27>I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003
F8EBC001D83F8013FC48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C
6D137E6C7E01F013FE390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D
9F27>I<EC1FF0ECFFF84913FC4913FE5BEB0FF014C0011F137CEC8000A6007FB512F0B6
12F8A36C14F039001F8000B3A4003FB512C04814E0A36C14C01F2E7EAD27>I<153F9039
1FC0FF80D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F4848
6C7EA66C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5
FC15E015F84814FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C
1580007F143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337E
A027>I<EA7FE0487EA3127F1203A9147F9038F1FFC001F713F090B5FC8114C1EC01FCEB
FE005B5BA25BB03A7FFF83FFE0B500C713F0A36C018313E0242E7FAD27>I<130F497E49
7EA46D5A6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E
1D2F7BAE27>I<143C147E14FFA4147E143C1400A73801FFFE4813FFA37EC7123FB3B014
7E1238007C13FE38FE01FC1303B512F814F06C13E06C13803807FE0018407CAE27>I<EA
7FE07F12FF127FA21201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A
02FFC7FCEBF1FEEBF3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E
816E7E157E3A7FFFC1FFF002C313F8B512E36C13C316F0252E80AD27>I<387FFF80B57E
A37EEA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD27>I<397F07C01F3AFF9FF07F
C09039FFF9FFE091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A
7FF0FFC3FF486C01E3138001F913E701F813E36C4801C313002920819F27>I<387FE07F
39FFF1FFC001F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B5
00C713F0A36C018313E024207F9F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03F
C0391FC00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A200
7F1303393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E
207C9F27>I<387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F804913
1F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFF
FC5D5D01F313C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<90380FF0
3C90383FFE7E90B5FC000314FE5A380FFC1F381FE007EBC003383F800148C7FC127EA200
FE147E5AA67E007E14FEA2007F1301EA3F80EBC003381FE007380FF81F6CB5FC7E6C147E
38007FFCEB0FF090C7FCAC91381FFFF8A24A13FC6E13F8A226317E9F27>I<397FFC03FC
39FFFE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7
FC5CA291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>I<9038FFF3800007EBFFC0
121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC383FFFF06C13FC000713FF
00011480D8000F13C09038003FE014070078EB03F000FC1301A27E14036CEB07E0EBE01F
90B512C01580150000FB13FC38707FF01C207B9F27>I<133C137EA8007FB512F0B612F8
A36C14F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF86D13F06D13E0010313C001
0013001F297EA827>I<397FE01FF8486C487EA3007F131F00031300B21401A21403EBFC
0F6CB612E016F07EEB3FFE90390FF87FE024207F9F27>I<3A7FFC0FFF80486C4813C0A3
6C486C13803A07C000F800EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F
80A36D48C7FCA3EB3F3FEB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>I<3A7FFE07FF
E000FF15F06D5A497E007F15E03A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC
7CA4EBE79EA200011478A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>
I<393FFC1FFF486C5A168016006C487E3901F807E06C6C485A4A5A017E90C7FC6D5AEB1F
7E5C6D5A13076D5A5C80497E130F497E143EEB3E3FEB7E1F90387C0F8001F87F00016D7E
3803F0033A7FFE1FFF80A2B54813C06C486C1380A222207E9F27>I<3A7FFC0FFF80486C
4813C0A36C486C13803A07E000F800000313015D13F00001130301F85B1200A26D485A13
7CA290387E0F80133EA2011F90C7FC5CA2130F149E14BE130714FC1303A25C1301A25CA2
13035CA213075C1208EA3E0F007F5B131FD87E7FC8FCEA7FFE6C5A5B6C5AEA07C022317E
9F27>I<001FB512FE4814FFA490380001FEEC03FCEC07F8EC0FF0001EEB1FE0C7EA3FC0
EC7F80ECFF00495A495A495AEB1FE0495A495A49C7FC485A4848131E4848133F485A485A
485A485AB7FCA46C14FE20207E9F27>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmsy9 9 14
/Fu 14 106 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<130E131FA639700E01
C000F8EB03E000FE130F00FF131F397F8E3FC0391FEEFF003803FFF8C613E0EB3F80A2EB
FFE0000313F8381FEEFF397F8E3FC039FF0E1FE000FE130F00F813030070EB01C0D8001F
C7FCA6130E1B207BA226>3 D<EB1FC0EBFFF8487F000713FF390FF07F80391F800FC039
3F0007E0003E130348EB01F0A248EB00F8A2481478A56C14F8A2007CEB01F0A26CEB03E0
003F1307391F800FC0390FF07F806CB51200000113FC6C5BEB1FC01D1D7CA126>14
D<EB1FC0EBFFF8487F000713FF4814804814C04814E0A24814F0A2B612F8A96C14F0A26C
14E0A26C14C06C14806C1400000113FC6C5BEB1FC01D1D7CA126>I<007FB812C0B912E0
A26C17C0CCFCAC007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C03324
7CA43C>17 D<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC0
4A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0
EA7FC048CAFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FEEE007E171C1700AC007FB712FCB812FEA26C16FC2F3E7AB03C>20
D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FEA2EE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0
EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC12FC1270
CBFCAC007FB712FCB812FEA26C16FC2F3E7AB03C>I<021FB57E49B612F8010F15FE013F
EDFF809027FE1FC03F13C0D801E0020313E0D80780020013F0D80F00153F484AEB1FF800
3E160F007E1607007C133F48160312E0C790C7FC18F0A25CEF07E0147E18C0170F02FE15
80EF1F004A141E5F5F01015D4AEB01C0EE0780041FC7FC0103EB01FC9138F07FF09138F1
FF80DAF7FEC8FC903807EFE002E0C9FCA2495AA3495AA349CAFCA3137EA2137C13FCA248
5A13E0138035377EB236>80 D<126012F0B3B3B3AFB512E0A37E134A74B722>98
D<14C0EB01E0B3B3B3AFB5FCA314C0134A7EB722>I<EC07E0143FECFE00EB03F8495A49
5A5C131F5CB3A5133F91C7FC137E5BEA03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F80
131FB3A580130F806D7E6D7EEB00FEEC3FE014071B4B7BB726>102
D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3A580130F6D7E6D7EEB01FC9038007F
C0EC1FE0EC7FC0903801FC00EB03F0495A495A131F5CB3A5133F91C7FC5B13FE485AEA07
F0EAFFC000FCC8FC1B4B7BB726>I<EB0180EB03C01307A21480130FA2EB1F00A2131E13
3EA25BA2137813F8A2485AA25B1203A2485AA25B120FA248C7FCA2121E123EA25AA21278
12F8A41278127CA27EA2121E121FA26C7EA212077FA26C7EA212017FA26C7EA21378137C
A27FA2131E131FA2EB0F80A2130714C0A21303EB0180124A79B71E>I<126012F07EA212
78127CA27EA2121E121FA26C7EA212077FA26C7EA212017FA26C7EA21378137CA27FA213
1E131FA2EB0F80A2130714C0A41480130FA2EB1F00A2131E133EA25BA2137813F8A2485A
A25B1203A2485AA25B120FA248C7FCA2121E123EA25AA2127812F8A25A1260124A7CB71E
>I E
%EndDVIPSBitmapFont
/Fv 133[50 50 3[55 28 50 33 1[55 55 55 83 22 50 1[22
55 55 28 55 55 50 55 55 12[61 66 5[83 55 66 1[28 5[72
66 66 7[55 5[55 55 55 55 3[28 44[{TeXBase1Encoding ReEncodeFont}36
99.6264 /Helvetica rf
%DVIPSBitmapFont: Fw cmsy6 6 4
/Fw 4 34 df<B712C0A322037A8D30>0 D<136013701360A20040132000E0137038F861
F0387E67E0381FFF803807FE00EA00F0EA07FE381FFF80387E67E038F861F038E0607000
40132000001300A21370136014157B9620>3 D<130C130E5BA2133C1338137813705B48
5A1203000FCBFC003FB812C0B912E0003F17C0000FCBFCEA03C012016C7E137013781338
133C131CA27F130C331B7C993D>32 D<1606160E82A2831603831601707E17701778171E
007FB81280B912E06C1780CAEA1E00177817705F4C5A16035F160794C7FCA2160E160633
1B7C993D>I E
%EndDVIPSBitmapFont
/Fx 138[91 50 83 58 1[91 91 91 133 42 2[42 1[91 50 83
1[83 1[83 12[91 100 5[124 91 2[42 7[108 6[50 58[{
TeXBase1Encoding ReEncodeFont}22 149.44 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 180 111 a Fx(StreaMIT)-6 b(:)42 b(A)f(Langua)o(g)q(e)j(f)m(or)d
(Streaming)h(Applications)3701 79 y Fw(\003)699 376 y
Fv(Bill)28 b(Thies)o(,)g(Michal)g(Karczmarek,)h(and)g(Saman)g(Amar)o
(asinghe)1207 579 y(Labor)o(ator)s(y)h(f)m(or)e(Computer)h(Science)1099
682 y(Massachusetts)f(Institute)g(of)g(T)-12 b(echnology)1442
785 y(Cambr)q(idge)o(,)30 b(MA)e(02139)1255 971 y Fu(f)p
Ft(thies,)41 b(karczma,)g(saman)p Fu(g)p Ft(@lcs.mit.edu)1579
1169 y Fv(A)m(ugust)29 b(13,)f(2001)-152 1470 y Fs(ABSTRA)-5
b(CT)-152 1561 y Fr(W)f(e)20 b(c)n(haracterize)i(high-p)r(erformance)f
(streaming)f(applications)i(as)-152 1648 y(a)36 b(new)f(and)f(distinct)
h(domain)g(of)h(programs)f(that)f(is)i(b)r(ecoming)-152
1735 y(increasingly)h(imp)r(ortan)n(t.)63 b(The)36 b(StreaMIT)g
(language)h(pro)n(vides)-152 1823 y(no)n(v)n(el)19 b(high-lev)n(el)f
(represen)n(tations)h(to)g(impro)n(v)n(e)f(programmer)f(pro-)-152
1910 y(ductivit)n(y)25 b(and)g(program)g(robustness)h(within)g(the)f
(streaming)h(do-)-152 1997 y(main.)33 b(A)n(t)20 b(the)g(same)h(time,)g
(the)g(StreaMIT)g(compiler)g(aims)g(to)g(im-)-152 2084
y(pro)n(v)n(e)g(the)f(p)r(erformance)h(of)g(streaming)g(applications)i
(via)e(stream-)-152 2171 y(sp)r(eci\014c)k(analyses)h(and)e
(optimizations.)34 b(In)24 b(this)h(pap)r(er,)g(w)n(e)g(moti-)-152
2259 y(v)l(ate,)20 b(describ)r(e)f(and)g(justify)g(the)f(language)i
(features)f(of)h(StreaMIT,)-152 2346 y(whic)n(h)28 b(include:)39
b(a)28 b(structured)g(mo)r(del)f(of)i(streams,)g(a)f(messaging)-152
2433 y(system)21 b(for)i(con)n(trol,)h(a)e(re-initialization)j(mec)n
(hanism,)c(and)h(a)g(nat-)-152 2520 y(ural)30 b(textual)f(syn)n(tax.)45
b(W)-6 b(e)28 b(also)j(presen)n(t)e(a)h(means)e(of)j(reasoning)-152
2607 y(ab)r(out)f(time)f(in)g(terms)g(of)h(\\information)g(\015o)n(w":)
43 b(a)30 b(concept)f(that)-152 2694 y(w)n(e)g(b)r(eliev)n(e)g(is)h
(fundamen)n(tal)d(to)i(the)g(streaming)g(domain.)43 b(Using)-152
2782 y(this)19 b(concept,)h(w)n(e)f(giv)n(e)g(a)g(formal)g(seman)n
(tics)g(for)g(StreaMIT's)h(mes-)-152 2869 y(saging)34
b(system,)f(as)f(w)n(ell)i(as)e(a)h(simple)e(algorithm)i(for)g
(detecting)-152 2956 y(deadlo)r(c)n(k)26 b(and)g(bu\013er)e(o)n(v)n
(erlo)n(w.)-152 3169 y Fs(1.)100 b(INTR)m(ODUCTION)-152
3260 y Fr(Applications)34 b(that)f(are)h(structured)f(around)g(some)h
(notion)f(of)h(a)-152 3348 y(\\stream")18 b(are)g(b)r(ecoming)f
(increasingly)h(imp)r(ortan)n(t)e(and)h(widespread.)-152
3435 y(There)26 b(is)g(evidence)f(that)f(streaming)i(media)e
(applications)j(are)f(al-)-152 3522 y(ready)i(consuming)g(most)f(of)i
(the)f(cycles)g(on)g(consumer)f(mac)n(hines)-152 3609
y([8],)35 b(and)c(their)g(use)h(is)g(con)n(tin)n(uing)f(to)h(gro)n(w.)
53 b(In)31 b(the)g(em)n(b)r(edded)-152 3696 y(domain,)d(applications)h
(for)g(hand-held)d(computers,)i(cell)h(phones,)-152 3783
y(and)i(DSP's)g(are)g(cen)n(tered)g(around)f(a)h(stream)g(of)g(v)n
(oice)h(or)f(video)-152 3871 y(data.)46 b(The)30 b(stream)f
(abstraction)h(is)g(also)g(fundamen)n(tal)f(to)g(high-)-152
3958 y(p)r(erformance)18 b(applications)g(suc)n(h)f(as)h(in)n(telligen)
n(t)f(soft)n(w)n(are)i(routers,)-152 4045 y(cell)27 b(phone)e(base)h
(stations,)h(and)e(HDTV)g(editing)h(consoles.)-152 4219
y(Despite)35 b(the)g(prev)l(alence)f(of)i(these)f(applications,)j
(there)d(is)g(sur-)-152 4306 y(prisingly)27 b(little)f(language)h(and)f
(compiler)f(supp)r(ort)h(for)g(practical,)-152 4394 y(large-scale)i
(stream)e(programming.)34 b(Of)26 b(course,)h(the)f(notion)g(of)g(a)
-152 4481 y(stream)k(as)h(a)f(programming)g(abstraction)h(has)f(b)r
(een)g(around)g(for)-152 4568 y(decades)36 b([2],)k(and)35
b(a)h(n)n(um)n(b)r(er)e(of)j(sp)r(ecial-purp)r(ose)f(stream)g(lan-)-152
4655 y(guages)c(ha)n(v)n(e)d(b)r(een)h(designed)h(\(see)f([9])h(for)g
(a)g(review\).)48 b(Man)n(y)30 b(of)-152 4742 y(these)k(languages)h
(and)d(represen)n(tations)i(are)g(elegan)n(t)g(and)f(theo-)-152
4829 y(retically)39 b(sound,)i(but)c(they)g(often)h(lac)n(k)g(features)
g(and)g(are)g(to)r(o)-152 4917 y(in\015exible)33 b(to)f(supp)r(ort)g
(straigh)n(tforw)n(ard)j(dev)n(elopmen)n(t)c(of)i(mo)r(d-)-152
5004 y(ern)i(stream)f(applications,)39 b(or)c(their)g(implemen)n
(tations)f(are)h(to)r(o)-152 5091 y(ine\016cien)n(t)26
b(to)g(use)g(in)f(practice.)p -152 5151 797 4 v -150
5196 a Fw(\003)-113 5228 y Fr(This)37 b(do)r(cumen)n(t)e(is)i
Fq(MIT/LCS)43 b(T)-7 b(ec)n(hnical)42 b(Memo)f(LCS-)-152
5303 y(TM-620)p Fr(,)25 b(August)e(2001.)36 b(A)23 b(similar)i(v)n
(ersion)f(w)n(as)g(submitted)f(to)-152 5378 y(POPL)j(2002.)36
b(Please)27 b(do)f(not)g(distribute.)2040 1470 y(Consequen)n(tly)-6
b(,)38 b(most)e(programmers)f(turn)h(to)g(general-purp)r(ose)2040
1557 y(languages)21 b(suc)n(h)e(as)g(C)h(or)g(C++)f(to)g(implemen)n(t)e
(stream)i(programs,)2040 1644 y(resorting)f(to)g(lo)n(w-lev)n(el)g
(assem)n(bly)e(co)r(des)i(for)g(p)r(erformance-critical)2040
1731 y(lo)r(ops.)34 b(This)21 b(practice)g(is)f(lab)r(or-in)n(tensiv)n
(e,)i(error-prone,)g(and)e(v)n(ery)2040 1818 y(costly)-6
b(,)38 b(since)e(the)f(p)r(erformance-critical)h(sections)h(m)n(ust)d
(b)r(e)h(re-)2040 1906 y(implemen)n(ted)17 b(for)k(eac)n(h)f(target)g
(arc)n(hitecture.)33 b(Moreo)n(v)n(er,)21 b(general)2040
1993 y(purp)r(ose)35 b(languages)i(do)e(not)g(pro)n(vide)g(a)g(natural)
g(and)g(in)n(tuitiv)n(e)2040 2080 y(represen)n(tation)30
b(of)h(streams,)g(thereb)n(y)e(ha)n(ving)g(a)h(negativ)n(e)h(e\013ect)
2040 2167 y(on)26 b(readabilit)n(y)-6 b(,)26 b(robustness,)g(and)f
(programmer)g(pro)r(ductivit)n(y)-6 b(.)2040 2342 y(StreaMIT)32
b(is)g(a)g(language)h(and)e(compiler)h(sp)r(eci\014cally)g(designed)
2040 2429 y(for)39 b(mo)r(dern)e(stream)h(programming.)72
b(Its)38 b(goals)i(are)e(t)n(w)n(o-fold:)2040 2516 y(\014rst,)29
b(to)f(raise)h(the)e(abstraction)i(lev)n(el)g(in)e(stream)h
(programming,)2040 2603 y(thereb)n(y)34 b(impro)n(ving)g(programmer)g
(pro)r(ductivit)n(y)f(and)i(program)2040 2690 y(robustness,)23
b(and)f(second,)h(to)f(pro)n(vide)g(a)g(compiler)g(that)f(p)r(erforms)
2040 2777 y(stream-sp)r(eci\014c)26 b(optimizations)g(to)g(ac)n(hiev)n
(e)g(the)f(p)r(erformance)h(of)2040 2865 y(an)g(exp)r(ert)f(assem)n
(bly)g(programmer.)2040 3039 y(T)-6 b(o)38 b(address)f(the)g(\014rst)g
(of)i(these)e(goals,)42 b(this)37 b(pap)r(er)h(motiv)l(ates,)2040
3126 y(describ)r(es,)31 b(and)e(justi\014es)g(StreaMIT's)i(high-lev)n
(el)e(language)h(fea-)2040 3213 y(tures.)41 b(The)29
b(v)n(ersion)f(of)g(StreaMIT)h(describ)r(ed)f(in)g(this)g(pap)r(er)g
(re-)2040 3300 y(quires)f(static)h(\015o)n(w)g(rates)g(in)f(the)g
(streams;)h(applications)h(suc)n(h)e(as)2040 3388 y(compression)19
b(that)f(ha)n(v)n(e)g(dynamic)f(\015o)n(w)i(rates)h(will)f(b)r(e)g(the)
f(sub)t(ject)2040 3475 y(of)27 b(future)f(w)n(ork.)36
b(This)27 b(pap)r(er)f(also)i(presen)n(ts)e(a)g(notion)h(of)g(\\infor-)
2040 3562 y(mation)e(\015o)n(w")i(that)e(w)n(e)i(b)r(eliev)n(e)f(is)g
(fundamen)n(tal)f(to)h(the)f(stream-)2040 3649 y(ing)34
b(domain.)59 b(Using)35 b(this)f(notion,)j(w)n(e)d(giv)n(e)g(a)h(clear)
g(seman)n(tics)2040 3736 y(to)30 b(StreaMIT's)g(messaging)h(system)d
(and)h(describ)r(e)h(simple)g(algo-)2040 3823 y(rithms)25
b(for)h(static)h(deadlo)r(c)n(k)f(and)f(o)n(v)n(er\015o)n(w)h
(detection.)2040 3998 y(This)32 b(pap)r(er)g(is)g(organized)g(as)g
(follo)n(ws.)54 b(In)31 b(Section)h(2,)h(w)n(e)f(c)n(har-)2040
4085 y(acterize)g(the)f(domain)f(of)i(streaming)e(programs)h(that)g
(motiv)l(ates)2040 4172 y(the)25 b(design)h(of)g(StreaMIT.)g(In)f
(Section)h(3,)g(w)n(e)f(pro)n(vide)g(a)h(detailed)2040
4259 y(description)21 b(of)g(StreaMIT,)g(and)f(in)h(Section)f(4)h(w)n
(e)g(formally)f(de\014ne)2040 4347 y(the)32 b(seman)n(tics)f(of)i
(StreaMIT)g(using)f(a)g(notion)g(of)h(\\information)2040
4434 y(\015o)n(w".)59 b(W)-6 b(e)33 b(presen)n(t)g(a)h(detailed)g
(example)e(of)j(a)f(soft)n(w)n(are)h(radio)2040 4521
y(in)e(Section)h(5)f(and)g(describ)r(e)h(related)g(w)n(ork)f(in)g
(Section)h(6.)57 b(Sec-)2040 4608 y(tion)27 b(7)f(con)n(tains)h(our)g
(conclusions,)h(and)e(the)g(App)r(endix)f(giv)n(es)i(an)2040
4695 y(o)n(v)n(erview)f(of)h(StreaMIT)f(syn)n(tax.)2040
4938 y Fs(2.)99 b(STREAMING)26 b(APPLICA)-9 b(TION)24
b(DOMAIN)2040 5029 y Fr(The)i(applications)h(that)e(mak)n(e)g(use)h(of)
g(a)g(stream)f(abstraction)i(are)2040 5116 y(div)n(erse,)20
b(with)e(targets)h(ranging)g(from)f(em)n(b)r(edded)e(devices,)21
b(to)d(con-)2040 5203 y(sumer)31 b(desktops,)j(to)e(high-p)r
(erformance)g(sev)n(ers.)54 b(Ho)n(w)n(ev)n(er,)34 b(w)n(e)2040
5290 y(ha)n(v)n(e)29 b(observ)n(ed)g(a)h(n)n(um)n(b)r(er)e(of)i(prop)r
(erties)g(that)g(these)f(programs)2040 5378 y(ha)n(v)n(e)h(in)f
(common{enough)g(so)i(as)f(to)h(c)n(haracterize)g(them)d(as)j(b)r(e-)
1921 5627 y(1)p eop
%%Page: 2 2
2 1 bop 368 325 a @beginspecial 167 @llx 116 @lly 684
@urx 195 @ury 3744 @rwi @setspecial
%%BeginDocument: Radio.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010806092101)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 167 116 684 195
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

167 116 moveto
684 116 lineto
684 195 lineto
167 195 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font OAGNOA+Arial
11 dict begin
/FontName /OAGNOA+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/M 66 RD 
d5f9d50de716f8f607f763fcf605e006f765f8eb05fceb07e606f96007fb
1306fb40fc860579587e6583710885a37fae7bba08fb3df88f05fb2206fd
6007e606090e ND 
/O 157 RD 
bbf99e0db4f73e15a653b35fc06a08c26ac77bce8b08c88bc59ac1a808c2
a9b4b6a8c408a8c49acc8bd4088bd27dcb6fc30870c562b656ab0856aa50
9b498b08248b3a694b48084b486b2e8bfb0b088b4d994fa6530809f715f8
2b15bcb9c5a2ce8b08b98bb67fb17308b173a8699f60089e6095588b5108
8b2f74445d59085d595072448b08458b51a45dbd085cbb74d08be1088bf6
a3d8bbb908090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/j 83 RD 
5df7720df75bf8fa15f10734068a2505e30609fb16fdcc15bc8bae9ba0ac
089ca493b88bcb088cf8b70532068cfcb5058a59876e827f0882817e8479
8b08818b7d8d7990087b4005a185a288a38b088b06090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/OAGNOA+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N86/OAGNOA+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
167 116 517 79 re W n
[ 0 -1 1 0 51 362 ] concat
/N77 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N98 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N77 /ColorSpace findRes cs
0.75 0.75 0.75 scn
/N98 /ExtGState findRes gs
1 i
193.00101 344.92101 m
193.00101 344.681 l
193.481 344.561 l
193.481 344.80099 l
f 
193.00101 344.92101 m
193.481 347.561 l
194.80099 350.08099 l
194.92101 350.08099 l
195.881 351.28101 l
195.881 351.401 l
197.08099 352.481 l
199.841 354.521 l
203.201 356.08099 l
203.321 356.08099 l
207.161 357.401 l
207.28101 356.92101 l
203.44099 355.601 l
200.08099 354.041 l
200.08099 354.161 l
197.321 352.121 l
197.44099 352.121 l
196.241 351.041 l
195.28101 349.841 l
193.961 347.321 l
193.961 347.44099 l
193.481 344.80099 l
f 
207.161 357.401 m
211.481 358.121 l
211.481 357.64101 l
211.601 357.64101 l
207.28101 356.92101 l
f 
216.041 358.36099 0.24001 -0.48 rf
211.481 358.121 m
211.481 357.64101 l
216.041 357.881 l
216.041 358.36099 l
f 
214.961 358.481 0.24001 0.48 rf
215.201 358.961 m
219.761 358.601 l
219.881 358.601 l
224.08099 357.881 l
228.041 356.561 l
231.401 355.00101 l
234.161 352.961 l
234.28101 352.961 l
235.36099 351.881 l
235.36099 351.761 l
236.321 350.561 l
235.841 350.321 l
235.961 350.321 l
235.00101 351.521 l
233.92101 352.601 l
231.161 354.64101 l
231.161 354.521 l
227.80099 356.08099 l
227.92101 356.08099 l
223.961 357.401 l
219.761 358.121 l
215.201 358.481 l
f 
236.321 350.561 m
237.64101 348.161 l
237.161 348.041 l
237.161 347.92101 l
235.841 350.321 l
f 
238.121 345.401 m
238.121 345.161 l
237.64101 345.041 l
237.64101 345.28101 l
f 
237.64101 348.161 m
237.161 348.041 l
237.64101 345.28101 l
238.121 345.401 l
f 
0.92599 0.92599 0.92599 scn
230.321 257.321 m
230.08099 257.561 l
229.72099 257.80099 l
229.36099 257.80099 l
229.00101 257.681 l
228.64101 257.44099 l
228.521 257.201 l
228.401 256.72099 l
228.521 256.36099 l
228.761 256.121 l
229.121 255.881 l
229.841 255.881 l
230.201 256.121 l
230.44099 256.481 l
230.44099 256.841 l
230.321 257.321 l
f* 
228.041 256.36099 m
228.28101 259.36099 l
228.161 259.72099 l
228.64101 259.841 l
238.00101 261.64101 l
239.681 262.00101 l
238.481 260.80099 l
231.401 254.321 l
231.161 254.08099 l
230.80099 254.321 l
230.681 255.041 l
237.761 261.521 l
238.481 260.80099 l
238.241 260.681 l
228.881 258.881 l
228.64101 259.841 l
229.241 259.36099 l
229.00101 256.36099 l
f 
230.80099 254.321 m
228.28101 256.00101 l
228.041 256.121 l
228.041 256.36099 l
228.881 256.841 l
231.401 255.161 l
f 
228.521 256.36099 m
228.761 259.36099 l
238.121 261.161 l
231.041 254.681 l
f* 
218.08099 252.401 m
217.241 252.041 l
218.08099 250.241 l
218.92101 250.601 l
f 
229.121 257.80099 m
229.961 258.161 l
230.80099 256.36099 l
229.961 256.00101 l
f 
218.08099 252.401 m
218.92101 250.601 l
229.961 256.00101 l
229.121 257.80099 l
f 
228.64101 339.521 m
228.28101 339.881 l
228.041 340.00101 l
227.681 340.121 l
227.201 340.00101 l
226.961 339.761 l
226.72099 339.401 l
226.72099 339.041 l
226.841 338.681 l
227.08099 338.321 l
227.321 338.08099 l
227.80099 338.08099 l
228.161 338.201 l
228.401 338.44099 l
228.64101 338.80099 l
228.64101 339.521 l
f* 
226.241 338.681 m
226.481 341.681 l
226.481 342.161 l
226.841 342.161 l
236.321 343.841 l
238.00101 344.201 l
236.80099 343.00101 l
229.601 336.521 l
229.36099 336.28101 l
229.00101 336.521 l
228.881 337.241 l
236.08099 343.72099 l
236.80099 343.00101 l
236.561 342.881 l
227.08099 341.201 l
226.841 342.161 l
227.44099 341.681 l
227.201 338.681 l
f 
229.00101 336.521 m
226.481 338.321 l
226.241 338.44099 l
226.241 338.681 l
227.08099 339.161 l
229.601 337.36099 l
f 
226.72099 338.681 m
226.961 341.681 l
236.44099 343.36099 l
229.241 336.881 l
f* 
216.28101 334.601 m
215.44099 334.241 l
216.28101 332.44099 l
217.121 332.80099 l
f 
227.321 340.00101 m
228.161 340.36099 l
229.00101 338.561 l
228.161 338.201 l
f 
216.28101 334.601 m
217.121 332.80099 l
228.161 338.201 l
227.321 340.00101 l
f 
0.5 0.5 0.5 scn
208.72099 253.241 2.03999 0.96001 rf
208.72099 255.64101 2.03999 -0.96001 rf
208.72099 254.201 2.03999 0.48 rf
208.72099 258.64101 2.03999 0.96001 re
f* 
208.72099 261.64101 2.03999 -0.96001 re
f* 
208.72099 259.601 2.03999 1.08 re
f* 
208.72099 264.64101 2.03999 0.96001 re
f* 
208.72099 267.521 2.03999 -0.96001 re
f* 
208.72099 265.601 2.03999 0.96001 re
f* 
208.72099 270.521 2.03999 0.96001 re
f* 
208.72099 273.401 2.03999 -0.96001 re
f* 
208.72099 271.481 2.03999 0.96001 re
f* 
208.72099 276.401 2.03999 0.96001 re
f* 
208.72099 279.28101 2.03999 -0.96001 re
f* 
208.72099 277.36099 2.03999 0.96001 re
f* 
208.72099 282.28101 2.03999 0.96001 re
f* 
208.72099 285.161 2.03999 -0.96001 re
f* 
208.72099 283.241 2.03999 0.96001 re
f* 
208.72099 288.161 2.03999 0.96001 re
f* 
208.72099 291.041 2.03999 -0.96001 re
f* 
208.72099 289.121 2.03999 0.96001 re
f* 
208.72099 294.041 2.03999 0.96001 re
f* 
208.72099 296.92101 2.03999 -0.96001 re
f* 
208.72099 295.00101 2.03999 0.96001 re
f* 
208.72099 299.92101 2.03999 0.96001 re
f* 
208.72099 302.80099 2.03999 -0.96001 re
f* 
208.72099 300.881 2.03999 0.96001 re
f* 
208.72099 305.80099 2.03999 0.96001 re
f* 
208.72099 308.681 2.03999 -0.96001 re
f* 
208.72099 306.761 2.03999 0.96001 re
f* 
208.72099 311.681 2.03999 0.96001 re
f* 
208.72099 314.561 2.03999 -0.96001 re
f* 
208.72099 312.64101 2.03999 0.96001 re
f* 
208.72099 317.561 2.03999 0.96001 re
f* 
208.72099 320.561 2.03999 -0.96001 re
f* 
208.72099 318.521 2.03999 1.08 re
f* 
208.72099 323.44099 2.03999 0.96001 re
f* 
208.72099 326.44099 2.03999 -0.96001 re
f* 
208.72099 324.401 2.03999 1.08 re
f* 
208.72099 329.44099 2.03999 0.96001 re
f* 
208.72099 332.321 2.03999 -0.96001 re
f* 
208.72099 330.401 2.03999 0.96001 re
f* 
208.72099 335.321 2.03999 0.96001 rf
208.72099 337.72099 2.03999 -0.96001 rf
208.72099 336.28101 2.03999 0.48 rf
0 0 0 scn
215.08099 126.521 2.03999 0.96001 rf
215.08099 251.08099 2.03999 -0.96001 rf
215.08099 127.481 2.03999 122.64 rf
1 1 1 scn
202.481 129.761 m
202.841 127.00101 l
203.561 124.481 l
204.881 122.201 l
206.44099 120.28101 l
208.481 118.601 l
210.761 117.28101 l
213.28101 116.561 l
216.041 116.321 l
218.80099 116.561 l
221.321 117.28101 l
223.601 118.601 l
225.64101 120.28101 l
227.201 122.201 l
228.521 124.481 l
229.241 127.00101 l
229.481 129.761 l
229.481 153.401 l
229.241 156.161 l
228.521 158.681 l
227.201 160.961 l
225.64101 163.00101 l
223.601 164.681 l
221.321 165.881 l
218.80099 166.72099 l
216.041 166.961 l
213.28101 166.72099 l
210.761 165.881 l
208.481 164.681 l
206.44099 163.00101 l
204.881 160.961 l
203.561 158.681 l
202.841 156.161 l
202.481 153.401 l
202.481 129.761 l
f* 
0 0 0 scn
202.72099 129.881 m
203.08099 127.121 l
203.80099 124.601 l
205.121 122.321 l
205.121 122.44099 l
206.681 120.521 l
208.72099 118.841 l
208.601 118.841 l
210.881 117.521 l
213.401 116.80099 l
213.28101 116.80099 l
216.041 116.561 l
218.80099 116.80099 l
221.321 117.521 l
221.201 117.521 l
223.481 118.841 l
225.521 120.521 l
227.08099 122.44099 l
227.08099 122.321 l
228.401 124.601 l
228.28101 124.601 l
229.00101 127.121 l
229.00101 127.00101 l
229.241 129.761 l
229.241 153.401 l
229.00101 156.161 l
228.28101 158.681 l
228.401 158.561 l
227.08099 160.841 l
225.521 162.881 l
223.481 164.561 l
223.481 164.44099 l
221.201 165.64101 l
221.321 165.64101 l
218.80099 166.481 l
216.041 166.72099 l
213.28101 166.481 l
213.401 166.481 l
210.881 165.64101 l
208.601 164.44099 l
208.72099 164.561 l
206.681 162.881 l
205.121 160.841 l
203.80099 158.561 l
203.80099 158.681 l
203.08099 156.161 l
202.72099 153.401 l
202.72099 129.761 l
202.241 129.761 l
202.241 153.521 l
202.601 156.28101 l
203.321 158.80099 l
203.44099 158.80099 l
204.761 161.08099 l
206.321 163.121 l
206.321 163.241 l
208.36099 164.92101 l
210.64101 166.121 l
210.761 166.121 l
213.28101 166.961 l
216.041 167.201 l
218.80099 166.961 l
218.92101 166.961 l
221.44099 166.121 l
223.72099 164.92101 l
223.841 164.92101 l
225.881 163.241 l
225.881 163.121 l
227.44099 161.08099 l
228.761 158.80099 l
229.481 156.28101 l
229.481 156.161 l
229.72099 153.401 l
229.72099 129.761 l
229.481 127.00101 l
228.761 124.481 l
228.761 124.36099 l
227.44099 122.08099 l
225.881 120.161 l
223.841 118.481 l
223.72099 118.481 l
221.44099 117.161 l
221.44099 117.041 l
218.92101 116.321 l
218.80099 116.321 l
216.041 116.08099 l
213.28101 116.321 l
210.761 117.041 l
210.64101 117.161 l
208.36099 118.481 l
206.321 120.161 l
204.761 122.08099 l
203.44099 124.36099 l
203.321 124.481 l
202.601 127.00101 l
202.241 129.761 l
f 
202.72099 129.761 m
202.72099 129.881 l
202.241 129.761 l
f 
BT
/N86 1 Tf
0 6.36 -6.36 0 217.2406 121.2406 Tm
-0.0076 Tc
0 Tw
(Re)Tj [-17.5 ]TJ (ad)Tj [-17.5 ]TJ (Fr)Tj [-14.2 ]TJ (o)Tj [-17.5 ]TJ (m)Tj [-4.8 ]TJ (A)Tj [-19.89999 ]TJ (t)Tj [-12.8 ]TJ (oD)Tj 
ET
1 1 1 scn
203.08099 198.881 m
203.321 196.241 l
204.041 193.601 l
205.36099 191.321 l
207.041 189.401 l
208.961 187.72099 l
211.241 186.521 l
213.761 185.681 l
216.521 185.44099 l
219.28101 185.681 l
221.80099 186.521 l
224.08099 187.72099 l
226.121 189.401 l
227.681 191.321 l
229.00101 193.601 l
229.72099 196.241 l
230.08099 198.881 l
230.08099 219.161 l
229.72099 221.92101 l
229.00101 224.44099 l
227.681 226.72099 l
226.121 228.761 l
224.08099 230.44099 l
221.80099 231.64101 l
219.28101 232.481 l
216.521 232.72099 l
213.761 232.481 l
211.241 231.64101 l
208.961 230.44099 l
207.041 228.761 l
205.36099 226.72099 l
204.041 224.44099 l
203.321 221.92101 l
203.08099 219.161 l
203.08099 198.881 l
f* 
0 0 0 scn
203.321 198.881 m
203.561 196.241 l
203.561 196.36099 l
204.28101 193.72099 l
205.601 191.44099 l
205.601 191.561 l
207.28101 189.64101 l
209.201 187.961 l
209.08099 187.961 l
211.36099 186.761 l
213.881 185.92101 l
213.761 185.92101 l
216.521 185.681 l
219.28101 185.92101 l
221.80099 186.761 l
221.681 186.761 l
223.961 187.961 l
226.00101 189.64101 l
227.561 191.561 l
227.561 191.44099 l
228.881 193.72099 l
228.761 193.72099 l
229.481 196.36099 l
229.841 199.00101 l
229.841 198.881 l
229.841 219.161 l
229.481 221.92101 l
228.761 224.44099 l
228.881 224.321 l
227.561 226.601 l
226.00101 228.64101 l
223.961 230.321 l
223.961 230.201 l
221.681 231.401 l
221.80099 231.401 l
219.28101 232.241 l
216.521 232.481 l
213.761 232.241 l
213.881 232.241 l
211.36099 231.401 l
209.08099 230.201 l
209.201 230.321 l
207.28101 228.64101 l
205.601 226.601 l
204.28101 224.321 l
204.28101 224.44099 l
203.561 221.92101 l
203.321 219.161 l
203.321 198.881 l
202.841 198.881 l
202.841 219.161 l
203.08099 221.92101 l
203.08099 222.041 l
203.80099 224.561 l
203.92101 224.561 l
205.241 226.841 l
205.241 226.961 l
206.92101 229.00101 l
208.841 230.681 l
211.121 231.881 l
211.241 231.881 l
213.761 232.72099 l
216.521 232.961 l
219.28101 232.72099 l
219.401 232.72099 l
221.92101 231.881 l
224.201 230.681 l
224.321 230.681 l
226.36099 229.00101 l
226.36099 228.881 l
227.92101 226.841 l
229.241 224.561 l
229.961 222.041 l
230.321 219.28101 l
230.321 198.881 l
229.961 196.241 l
229.241 193.601 l
229.241 193.481 l
227.92101 191.201 l
226.36099 189.28101 l
224.321 187.601 l
224.201 187.481 l
221.92101 186.28101 l
219.401 185.44099 l
219.28101 185.44099 l
216.521 185.201 l
213.761 185.44099 l
211.241 186.28101 l
211.121 186.28101 l
208.841 187.481 l
208.841 187.601 l
206.92101 189.28101 l
205.241 191.201 l
203.92101 193.481 l
203.80099 193.601 l
203.08099 196.241 l
202.841 198.881 l
f 
203.321 198.881 m
202.841 198.881 l
f 
BT
0 6.36 -6.36 0 217.7206 199.84061 Tm
0.0052 Tc
(R)Tj [10.39999 ]TJ (F)Tj [-6.60001 ]TJ (to)Tj [14.2 ]TJ (IF)Tj 
ET
215.08099 332.08099 2.03999 0.96001 rf
215.08099 620.08099 2.03999 -0.96001 rf
215.08099 333.041 2.03999 286.08 rf
202.961 257.561 m
202.841 257.08099 l
203.08099 256.36099 l
203.44099 256.121 l
204.161 256.121 l
204.521 256.36099 l
204.761 256.601 l
204.881 256.961 l
204.881 257.44099 l
204.64101 257.681 l
204.28101 257.92101 l
203.92101 258.041 l
203.561 258.041 l
203.201 257.80099 l
202.961 257.561 l
f* 
205.00101 256.241 m
202.481 254.561 l
202.241 254.321 l
201.881 254.561 l
194.80099 261.041 l
193.601 262.241 l
195.28101 261.881 l
204.761 260.201 l
205.00101 260.201 l
205.121 259.72099 l
204.521 259.241 l
195.041 260.92101 l
195.28101 261.881 l
195.521 261.761 l
202.601 255.28101 l
201.881 254.561 l
201.881 255.401 l
204.401 257.08099 l
f 
205.121 259.72099 m
205.241 256.601 l
205.241 256.36099 l
205.00101 256.241 l
204.28101 256.601 l
204.161 259.72099 l
f 
204.761 256.601 m
202.241 254.92101 l
195.161 261.401 l
204.64101 259.72099 l
f* 
214.601 250.841 m
215.44099 250.481 l
216.28101 252.28101 l
215.44099 252.64101 l
f 
203.561 256.241 m
202.72099 256.601 l
203.561 258.401 l
204.401 258.041 l
f 
214.601 250.841 m
215.44099 252.64101 l
204.401 258.041 l
203.561 256.241 l
f 
215.681 252.401 m
215.08099 252.28101 l
214.601 251.92101 l
214.241 251.44099 l
214.121 250.961 l
214.241 250.36099 l
214.601 249.881 l
215.08099 249.521 l
215.681 249.401 l
216.28101 249.521 l
216.761 249.881 l
217.00101 250.36099 l
217.121 250.961 l
217.00101 251.44099 l
216.761 251.92101 l
216.28101 252.28101 l
215.681 252.401 l
f* 
215.80099 252.161 m
215.201 252.041 l
215.201 252.161 l
214.72099 251.80099 l
214.841 251.80099 l
214.481 251.321 l
214.481 251.44099 l
214.36099 250.961 l
214.36099 251.08099 l
214.481 250.481 l
214.841 250.00101 l
214.72099 250.121 l
215.201 249.761 l
215.80099 249.64101 l
215.681 249.64101 l
216.28101 249.761 l
216.161 249.761 l
216.64101 250.121 l
216.521 250.00101 l
216.761 250.481 l
216.881 251.08099 l
216.881 250.961 l
216.761 251.44099 l
216.761 251.321 l
216.521 251.80099 l
216.64101 251.80099 l
216.161 252.161 l
216.28101 252.041 l
215.681 252.161 l
215.80099 252.64101 l
216.401 252.521 l
216.881 252.161 l
217.00101 252.041 l
217.241 251.561 l
217.36099 251.08099 l
217.36099 250.961 l
217.241 250.36099 l
217.241 250.241 l
217.00101 249.761 l
216.881 249.761 l
216.401 249.401 l
216.401 249.28101 l
215.80099 249.161 l
215.681 249.161 l
215.08099 249.28101 l
214.961 249.401 l
214.481 249.761 l
214.121 250.241 l
214.00101 250.36099 l
213.881 250.961 l
213.881 251.08099 l
214.00101 251.561 l
214.121 251.561 l
214.481 252.041 l
214.481 252.161 l
214.961 252.521 l
215.08099 252.521 l
215.681 252.64101 l
f 
215.681 252.161 m
215.80099 252.161 l
215.681 252.64101 l
215.80099 252.64101 l
f 
190.841 260.92101 2.03999 0.96001 rf
190.841 347.92101 2.03999 -0.96001 rf
190.841 261.881 2.03999 85.08 rf
1 1 1 scn
177.28101 289.36099 m
177.521 286.72099 l
178.36099 284.201 l
179.561 281.92101 l
181.241 279.881 l
183.28101 278.201 l
185.561 277.00101 l
188.08099 276.161 l
190.841 275.92101 l
193.481 276.161 l
196.00101 277.00101 l
198.28101 278.201 l
200.321 279.881 l
202.00101 281.92101 l
203.201 284.201 l
204.041 286.72099 l
204.28101 289.36099 l
204.28101 313.481 l
204.041 316.241 l
203.201 318.761 l
202.00101 321.041 l
200.321 322.961 l
198.28101 324.64101 l
196.00101 325.961 l
193.481 326.681 l
190.841 326.92101 l
188.08099 326.681 l
185.561 325.961 l
183.28101 324.64101 l
181.241 322.961 l
179.561 321.041 l
178.36099 318.761 l
177.521 316.241 l
177.28101 313.481 l
177.28101 289.36099 l
f* 
0 0 0 scn
177.521 289.36099 m
177.761 286.72099 l
177.761 286.841 l
178.601 284.321 l
179.80099 282.041 l
179.80099 282.161 l
181.481 280.121 l
183.521 278.44099 l
183.401 278.44099 l
185.681 277.241 l
188.201 276.401 l
188.08099 276.401 l
190.841 276.161 l
193.481 276.401 l
196.00101 277.241 l
195.881 277.241 l
198.161 278.44099 l
200.201 280.121 l
201.881 282.161 l
201.761 282.041 l
202.961 284.321 l
203.80099 286.841 l
203.80099 286.72099 l
204.041 289.36099 l
204.041 313.481 l
203.80099 316.241 l
202.961 318.761 l
202.961 318.64101 l
201.761 320.92101 l
201.881 320.92101 l
200.201 322.841 l
198.161 324.521 l
195.881 325.841 l
196.00101 325.72099 l
193.481 326.44099 l
190.841 326.681 l
188.08099 326.44099 l
188.201 326.44099 l
185.681 325.72099 l
185.681 325.841 l
183.401 324.521 l
183.521 324.521 l
181.481 322.841 l
179.80099 320.92101 l
178.601 318.64101 l
178.601 318.761 l
177.761 316.241 l
177.521 313.481 l
177.521 289.36099 l
177.041 289.36099 l
177.041 313.481 l
177.28101 316.241 l
177.28101 316.36099 l
178.121 318.881 l
179.321 321.161 l
179.44099 321.28101 l
181.121 323.201 l
183.161 324.881 l
185.44099 326.201 l
185.561 326.201 l
188.08099 326.92101 l
190.841 327.161 l
193.481 326.92101 l
193.601 326.92101 l
196.121 326.201 l
198.401 324.881 l
198.521 324.881 l
200.561 323.201 l
202.241 321.28101 l
202.241 321.161 l
203.44099 318.881 l
204.28101 316.36099 l
204.28101 316.241 l
204.521 313.481 l
204.521 289.36099 l
204.28101 286.72099 l
203.44099 284.201 l
203.44099 284.08099 l
202.241 281.80099 l
200.561 279.761 l
198.521 278.08099 l
198.401 277.961 l
196.121 276.761 l
193.601 275.92101 l
193.481 275.92101 l
190.841 275.681 l
188.08099 275.92101 l
185.561 276.761 l
185.44099 276.761 l
183.161 277.961 l
183.161 278.08099 l
181.121 279.761 l
179.44099 281.80099 l
179.321 281.80099 l
178.121 284.08099 l
178.121 284.201 l
177.28101 286.72099 l
177.041 289.36099 l
f 
177.521 289.36099 m
177.041 289.36099 l
f 
BT
0 6.36 -6.36 0 192.4006 291.8806 Tm
0.01089 Tc
(Bo)Tj [19.89999 ]TJ (ost)Tj [24.60001 ]TJ (e)Tj [1 ]TJ (r)Tj 
ET
240.401 259.601 2.03999 0.96001 rf
240.401 346.36099 2.03999 -0.96001 rf
240.401 260.561 2.03999 84.84 rf
189.761 262.121 m
189.881 261.401 l
190.36099 260.80099 l
190.961 260.44099 l
191.681 260.321 l
192.401 260.44099 l
193.00101 260.80099 l
193.36099 261.401 l
193.481 262.121 l
193.36099 262.841 l
193.00101 263.44099 l
192.401 263.92101 l
191.681 264.041 l
190.961 263.92101 l
190.36099 263.44099 l
189.881 262.841 l
189.761 262.121 l
f* 
190.00101 262.241 m
190.121 261.521 l
190.601 260.92101 l
190.481 261.041 l
191.08099 260.681 l
191.80099 260.561 l
191.681 260.561 l
192.401 260.681 l
192.28101 260.681 l
192.881 261.041 l
192.881 260.92101 l
193.241 261.521 l
193.121 261.521 l
193.241 262.241 l
193.241 262.121 l
193.121 262.841 l
193.241 262.72099 l
192.881 263.321 l
192.28101 263.80099 l
192.401 263.681 l
191.681 263.80099 l
191.80099 263.80099 l
191.08099 263.681 l
191.08099 263.80099 l
190.481 263.321 l
190.601 263.321 l
190.121 262.72099 l
190.121 262.841 l
190.00101 262.121 l
189.521 262.241 l
189.64101 262.961 l
189.761 262.961 l
190.241 263.561 l
190.241 263.681 l
190.841 264.161 l
190.961 264.161 l
191.681 264.28101 l
191.80099 264.28101 l
192.521 264.161 l
193.121 263.681 l
193.241 263.561 l
193.601 262.961 l
193.72099 262.241 l
193.72099 262.121 l
193.601 261.401 l
193.601 261.28101 l
193.241 260.681 l
193.121 260.681 l
192.521 260.321 l
192.521 260.201 l
191.80099 260.08099 l
191.681 260.08099 l
190.961 260.201 l
190.841 260.321 l
190.241 260.681 l
189.761 261.28101 l
189.64101 261.401 l
189.521 262.121 l
f 
190.00101 262.121 m
190.00101 262.241 l
189.521 262.121 l
189.521 262.241 l
f 
189.521 345.521 m
189.64101 344.80099 l
190.121 344.201 l
190.72099 343.841 l
191.44099 343.72099 l
192.161 343.841 l
192.761 344.201 l
193.121 344.80099 l
193.241 345.521 l
193.121 346.241 l
192.761 346.841 l
192.161 347.321 l
191.44099 347.44099 l
190.72099 347.321 l
190.121 346.841 l
189.64101 346.241 l
189.521 345.521 l
f* 
189.761 345.64101 m
189.881 344.92101 l
190.36099 344.321 l
190.241 344.44099 l
190.841 344.08099 l
191.561 343.961 l
191.44099 343.961 l
192.161 344.08099 l
192.041 344.08099 l
192.64101 344.44099 l
192.64101 344.321 l
193.00101 344.92101 l
192.881 344.92101 l
193.00101 345.64101 l
193.00101 345.521 l
192.881 346.241 l
193.00101 346.121 l
192.64101 346.72099 l
192.041 347.201 l
192.161 347.08099 l
191.44099 347.201 l
191.561 347.201 l
190.841 347.08099 l
190.841 347.201 l
190.241 346.72099 l
190.36099 346.72099 l
189.881 346.121 l
189.881 346.241 l
189.761 345.521 l
189.28101 345.64101 l
189.401 346.36099 l
189.521 346.36099 l
190.00101 346.961 l
190.00101 347.08099 l
190.601 347.561 l
190.72099 347.561 l
191.44099 347.681 l
191.561 347.681 l
192.28101 347.561 l
192.881 347.08099 l
193.00101 346.961 l
193.36099 346.36099 l
193.481 345.64101 l
193.481 345.521 l
193.36099 344.80099 l
193.36099 344.681 l
193.00101 344.08099 l
192.881 344.08099 l
192.28101 343.72099 l
192.28101 343.601 l
191.561 343.481 l
191.44099 343.481 l
190.72099 343.601 l
190.601 343.72099 l
190.00101 344.08099 l
189.521 344.681 l
189.401 344.80099 l
189.28101 345.521 l
f 
189.761 345.521 m
189.761 345.64101 l
189.28101 345.521 l
189.28101 345.64101 l
f 
239.681 261.401 m
239.80099 260.681 l
240.161 260.08099 l
240.761 259.72099 l
241.481 259.481 l
242.321 259.72099 l
242.92101 260.08099 l
243.28101 260.681 l
243.401 261.401 l
243.28101 262.121 l
242.92101 262.72099 l
242.321 263.08099 l
241.481 263.321 l
240.761 263.08099 l
240.161 262.72099 l
239.80099 262.121 l
239.681 261.401 l
f* 
239.92101 261.521 m
240.041 260.80099 l
240.401 260.201 l
240.28101 260.321 l
240.881 259.961 l
241.601 259.72099 l
241.481 259.72099 l
242.321 259.961 l
242.201 259.961 l
242.80099 260.321 l
242.80099 260.201 l
243.161 260.80099 l
243.041 260.80099 l
243.161 261.521 l
243.161 261.401 l
243.041 262.121 l
243.161 262.00101 l
242.80099 262.601 l
242.201 262.961 l
242.321 262.841 l
241.481 263.08099 l
241.601 263.08099 l
240.881 262.841 l
240.881 262.961 l
240.28101 262.601 l
240.401 262.601 l
240.041 262.00101 l
240.041 262.121 l
239.92101 261.401 l
239.44099 261.521 l
239.561 262.241 l
239.681 262.241 l
240.041 262.841 l
240.041 262.961 l
240.64101 263.321 l
240.761 263.321 l
241.481 263.561 l
241.601 263.561 l
242.44099 263.321 l
243.041 262.961 l
243.161 262.841 l
243.521 262.241 l
243.64101 261.521 l
243.64101 261.401 l
243.521 260.681 l
243.521 260.561 l
243.161 259.961 l
243.041 259.961 l
242.44099 259.601 l
242.44099 259.481 l
241.601 259.241 l
241.481 259.241 l
240.761 259.481 l
240.64101 259.601 l
240.041 259.961 l
239.681 260.561 l
239.561 260.681 l
239.44099 261.401 l
f 
239.92101 261.401 m
239.92101 261.521 l
239.44099 261.401 l
239.44099 261.521 l
f 
239.80099 344.80099 m
239.92101 344.08099 l
240.28101 343.481 l
240.881 343.121 l
241.72099 342.881 l
242.44099 343.121 l
243.041 343.481 l
243.401 344.08099 l
243.521 344.80099 l
243.401 345.521 l
243.041 346.121 l
242.44099 346.481 l
241.72099 346.72099 l
240.881 346.481 l
240.28101 346.121 l
239.92101 345.521 l
239.80099 344.80099 l
f* 
240.041 344.92101 m
240.161 344.201 l
240.521 343.601 l
240.401 343.72099 l
241.00101 343.36099 l
241.841 343.121 l
241.72099 343.121 l
242.44099 343.36099 l
242.321 343.36099 l
242.92101 343.72099 l
242.92101 343.601 l
243.28101 344.201 l
243.161 344.201 l
243.28101 344.92101 l
243.28101 344.80099 l
243.161 345.521 l
243.28101 345.401 l
242.92101 346.00101 l
242.321 346.36099 l
242.44099 346.241 l
241.72099 346.481 l
241.841 346.481 l
241.00101 346.241 l
241.00101 346.36099 l
240.401 346.00101 l
240.521 346.00101 l
240.161 345.401 l
240.161 345.521 l
240.041 344.80099 l
239.561 344.92101 l
239.681 345.64101 l
239.80099 345.64101 l
240.161 346.241 l
240.161 346.36099 l
240.761 346.72099 l
240.881 346.72099 l
241.72099 346.961 l
241.841 346.961 l
242.561 346.72099 l
243.161 346.36099 l
243.28101 346.241 l
243.64101 345.64101 l
243.761 344.92101 l
243.761 344.80099 l
243.64101 344.08099 l
243.64101 343.961 l
243.28101 343.36099 l
243.161 343.36099 l
242.561 343.00101 l
242.561 342.881 l
241.841 342.64101 l
241.72099 342.64101 l
240.881 342.881 l
240.761 343.00101 l
240.161 343.36099 l
239.80099 343.961 l
239.681 344.08099 l
239.561 344.80099 l
f 
240.041 344.80099 m
240.041 344.92101 l
239.561 344.80099 l
239.561 344.92101 l
f 
1 1 1 scn
202.841 389.201 m
203.08099 386.44099 l
203.80099 383.92101 l
205.121 381.64101 l
206.681 379.601 l
208.72099 377.92101 l
211.00101 376.72099 l
213.521 375.881 l
216.28101 375.64101 l
219.041 375.881 l
221.561 376.72099 l
223.841 377.92101 l
225.881 379.601 l
227.44099 381.64101 l
228.761 383.92101 l
229.481 386.44099 l
229.841 389.201 l
229.841 409.481 l
229.481 412.241 l
228.761 414.761 l
227.44099 417.041 l
225.881 418.961 l
223.841 420.64101 l
221.561 421.961 l
219.041 422.681 l
216.28101 422.92101 l
213.521 422.681 l
211.00101 421.961 l
208.72099 420.64101 l
206.681 418.961 l
205.121 417.041 l
203.80099 414.761 l
203.08099 412.241 l
202.841 409.481 l
202.841 389.201 l
f* 
0 0 0 scn
203.08099 389.201 m
203.321 386.44099 l
203.321 386.561 l
204.041 384.041 l
205.36099 381.761 l
206.92101 379.72099 l
206.92101 379.841 l
208.961 378.161 l
208.841 378.161 l
211.121 376.961 l
213.64101 376.121 l
213.521 376.121 l
216.28101 375.881 l
219.041 376.121 l
221.561 376.961 l
221.44099 376.961 l
223.72099 378.161 l
225.761 379.841 l
225.761 379.72099 l
227.321 381.761 l
228.64101 384.041 l
228.521 384.041 l
229.241 386.561 l
229.601 389.321 l
229.601 389.201 l
229.601 409.481 l
229.241 412.241 l
228.521 414.761 l
228.64101 414.64101 l
227.321 416.92101 l
225.761 418.841 l
223.72099 420.521 l
221.44099 421.841 l
221.561 421.72099 l
219.041 422.44099 l
216.28101 422.681 l
213.521 422.44099 l
213.64101 422.44099 l
211.121 421.72099 l
211.121 421.841 l
208.841 420.521 l
208.961 420.521 l
206.92101 418.841 l
205.36099 416.92101 l
204.041 414.64101 l
204.041 414.761 l
203.321 412.241 l
203.08099 409.481 l
203.08099 389.201 l
202.601 389.201 l
202.601 409.481 l
202.841 412.241 l
202.841 412.36099 l
203.561 414.881 l
203.681 414.881 l
205.00101 417.161 l
205.00101 417.28101 l
206.561 419.201 l
208.601 420.881 l
210.881 422.201 l
211.00101 422.201 l
213.521 422.92101 l
216.28101 423.161 l
219.041 422.92101 l
219.161 422.92101 l
221.681 422.201 l
223.961 420.881 l
224.08099 420.881 l
226.121 419.201 l
227.681 417.28101 l
227.681 417.161 l
229.00101 414.881 l
229.72099 412.36099 l
230.08099 409.601 l
230.08099 389.201 l
229.72099 386.44099 l
229.00101 383.92101 l
229.00101 383.80099 l
227.681 381.521 l
226.121 379.481 l
224.08099 377.80099 l
223.961 377.681 l
221.681 376.481 l
219.161 375.64101 l
219.041 375.64101 l
216.28101 375.401 l
213.521 375.64101 l
211.00101 376.481 l
210.881 376.481 l
208.601 377.681 l
208.601 377.80099 l
206.561 379.481 l
205.00101 381.521 l
203.681 383.80099 l
203.561 383.92101 l
202.841 386.44099 l
202.601 389.201 l
f 
203.08099 389.201 m
202.601 389.201 l
f 
BT
0 6.36 -6.36 0 217.48061 394.12061 Tm
-0.0071 Tc
(FF)Tj [-18.89999 ]TJ (T)Tj 
ET
1 1 1 scn
202.481 454.961 m
202.841 452.201 l
203.561 449.681 l
204.881 447.401 l
206.44099 445.36099 l
208.481 443.681 l
210.761 442.481 l
213.28101 441.64101 l
216.041 441.401 l
218.80099 441.64101 l
221.321 442.481 l
223.601 443.681 l
225.64101 445.36099 l
227.201 447.401 l
228.521 449.681 l
229.241 452.201 l
229.481 454.961 l
229.481 477.041 l
229.241 479.80099 l
228.521 482.321 l
227.201 484.601 l
225.64101 486.64101 l
223.601 488.321 l
221.321 489.521 l
218.80099 490.36099 l
216.041 490.601 l
213.28101 490.36099 l
210.761 489.521 l
208.481 488.321 l
206.44099 486.64101 l
204.881 484.601 l
203.561 482.321 l
202.841 479.80099 l
202.481 477.041 l
202.481 454.961 l
f* 
0 0 0 scn
202.72099 455.08099 m
203.08099 452.321 l
203.80099 449.80099 l
205.121 447.521 l
206.681 445.481 l
206.681 445.601 l
208.72099 443.92101 l
208.601 443.92101 l
210.881 442.72099 l
213.401 441.881 l
213.28101 441.881 l
216.041 441.64101 l
218.80099 441.881 l
221.321 442.72099 l
221.201 442.72099 l
223.481 443.92101 l
225.521 445.601 l
225.521 445.481 l
227.08099 447.521 l
228.401 449.80099 l
228.28101 449.80099 l
229.00101 452.321 l
229.00101 452.201 l
229.241 454.961 l
229.241 477.041 l
229.00101 479.80099 l
228.28101 482.321 l
228.401 482.201 l
227.08099 484.481 l
225.521 486.521 l
223.481 488.201 l
223.481 488.08099 l
221.201 489.28101 l
221.321 489.28101 l
218.80099 490.121 l
216.041 490.36099 l
213.28101 490.121 l
213.401 490.121 l
210.881 489.28101 l
208.601 488.08099 l
208.72099 488.201 l
206.681 486.521 l
205.121 484.481 l
203.80099 482.201 l
203.80099 482.321 l
203.08099 479.80099 l
202.72099 477.041 l
202.72099 454.961 l
202.241 454.961 l
202.241 477.161 l
202.601 479.92101 l
203.321 482.44099 l
203.44099 482.44099 l
204.761 484.72099 l
206.321 486.761 l
206.321 486.881 l
208.36099 488.561 l
210.64101 489.761 l
210.761 489.761 l
213.28101 490.601 l
216.041 490.841 l
218.80099 490.601 l
218.92101 490.601 l
221.44099 489.761 l
223.72099 488.561 l
223.841 488.561 l
225.881 486.881 l
225.881 486.761 l
227.44099 484.72099 l
228.761 482.44099 l
229.481 479.92101 l
229.481 479.80099 l
229.72099 477.041 l
229.72099 454.961 l
229.481 452.201 l
228.761 449.681 l
228.761 449.561 l
227.44099 447.28101 l
225.881 445.241 l
223.841 443.561 l
223.72099 443.44099 l
221.44099 442.241 l
218.92101 441.401 l
218.80099 441.401 l
216.041 441.161 l
213.28101 441.401 l
210.761 442.241 l
210.64101 442.241 l
208.36099 443.44099 l
208.36099 443.561 l
206.321 445.241 l
204.761 447.28101 l
203.44099 449.561 l
203.321 449.681 l
202.601 452.201 l
202.241 454.961 l
f 
202.72099 454.961 m
202.72099 455.08099 l
202.241 454.961 l
f 
BT
0 6.36 -6.36 0 217.2406 445.48061 Tm
0.00999 Tc
(Ch)Tj [19 ]TJ (eck)Tj [19.39999 ]TJ (F)Tj [-1.8 ]TJ (re)Tj [19 ]TJ (qH)Tj [15.2 ]TJ (op)Tj 
ET
1 1 1 scn
202.841 520.841 m
203.08099 518.08099 l
203.80099 515.561 l
205.121 513.28101 l
206.681 511.241 l
208.72099 509.561 l
211.00101 508.36099 l
213.521 507.521 l
216.28101 507.28101 l
219.041 507.521 l
221.561 508.36099 l
223.841 509.561 l
225.881 511.241 l
227.44099 513.28101 l
228.761 515.561 l
229.481 518.08099 l
229.841 520.841 l
229.841 541.121 l
229.481 543.761 l
228.761 546.401 l
227.44099 548.681 l
225.881 550.601 l
223.841 552.28101 l
221.561 553.481 l
219.041 554.321 l
216.28101 554.561 l
213.521 554.321 l
211.00101 553.481 l
208.72099 552.28101 l
206.681 550.601 l
205.121 548.681 l
203.80099 546.401 l
203.08099 543.761 l
202.841 541.121 l
202.841 520.841 l
f* 
0 0 0 scn
203.08099 520.841 m
203.321 518.08099 l
203.321 518.201 l
204.041 515.681 l
205.36099 513.401 l
206.92101 511.36099 l
206.92101 511.481 l
208.961 509.80099 l
208.841 509.80099 l
211.121 508.601 l
213.64101 507.761 l
213.521 507.761 l
216.28101 507.521 l
219.041 507.761 l
221.561 508.601 l
221.44099 508.601 l
223.72099 509.80099 l
225.761 511.481 l
225.761 511.36099 l
227.321 513.401 l
228.64101 515.681 l
228.521 515.681 l
229.241 518.201 l
229.601 520.961 l
229.601 520.841 l
229.601 541.121 l
229.241 543.761 l
228.521 546.401 l
228.64101 546.28101 l
227.321 548.561 l
225.761 550.481 l
223.72099 552.161 l
223.72099 552.041 l
221.44099 553.241 l
221.561 553.241 l
219.041 554.08099 l
216.28101 554.321 l
213.521 554.08099 l
213.64101 554.08099 l
211.121 553.241 l
208.841 552.041 l
208.961 552.161 l
206.92101 550.481 l
205.36099 548.561 l
204.041 546.28101 l
204.041 546.401 l
203.321 543.761 l
203.08099 541.121 l
203.08099 520.841 l
202.601 520.841 l
202.601 541.121 l
202.841 543.761 l
202.841 543.881 l
203.561 546.521 l
203.681 546.521 l
205.00101 548.80099 l
205.00101 548.92101 l
206.561 550.841 l
208.601 552.521 l
210.881 553.72099 l
211.00101 553.72099 l
213.521 554.561 l
216.28101 554.80099 l
219.041 554.561 l
219.161 554.561 l
221.681 553.72099 l
223.961 552.521 l
224.08099 552.521 l
226.121 550.841 l
227.681 548.92101 l
227.681 548.80099 l
229.00101 546.521 l
229.72099 543.881 l
230.08099 541.241 l
230.08099 520.841 l
229.72099 518.08099 l
229.00101 515.561 l
229.00101 515.44099 l
227.681 513.161 l
226.121 511.121 l
224.08099 509.44099 l
223.961 509.321 l
221.681 508.121 l
219.161 507.28101 l
219.041 507.28101 l
216.28101 507.041 l
213.521 507.28101 l
211.00101 508.121 l
210.881 508.121 l
208.601 509.321 l
208.601 509.44099 l
206.561 511.121 l
205.00101 513.161 l
203.681 515.44099 l
203.561 515.561 l
202.841 518.08099 l
202.601 520.841 l
f 
203.08099 520.841 m
202.601 520.841 l
f 
BT
0 6.36 -6.36 0 217.48061 513.1606 Tm
0.0119 Tc
(Ch)Tj [20.89999 ]TJ (ec)Tj [21.3 ]TJ (kQu)Tj [20.89999 ]TJ (a)Tj [2 ]TJ (l)Tj [7.7 ]TJ (i)Tj [26.5 ]TJ (t)Tj [6.7 ]TJ (y)Tj 
ET
1 1 1 scn
202.841 587.201 m
203.08099 584.44099 l
203.80099 581.92101 l
205.121 579.64101 l
206.681 577.601 l
208.72099 575.92101 l
211.00101 574.72099 l
213.521 574.00101 l
216.28101 573.64101 l
219.041 574.00101 l
221.561 574.72099 l
223.841 575.92101 l
225.881 577.601 l
227.44099 579.64101 l
228.761 581.92101 l
229.481 584.44099 l
229.841 587.201 l
229.841 609.761 l
229.481 612.401 l
228.761 614.92101 l
227.44099 617.321 l
225.881 619.241 l
223.841 620.92101 l
221.561 622.121 l
219.041 622.961 l
216.28101 623.201 l
213.521 622.961 l
211.00101 622.121 l
208.72099 620.92101 l
206.681 619.241 l
205.121 617.321 l
203.80099 614.92101 l
203.08099 612.401 l
202.841 609.761 l
202.841 587.201 l
f* 
0 0 0 scn
203.08099 587.201 m
203.321 584.44099 l
203.321 584.561 l
204.041 582.041 l
205.36099 579.761 l
206.92101 577.72099 l
206.92101 577.841 l
208.961 576.161 l
208.841 576.161 l
211.121 574.961 l
213.64101 574.241 l
216.401 573.881 l
216.28101 573.881 l
219.041 574.241 l
221.561 574.961 l
221.44099 574.961 l
223.72099 576.161 l
225.761 577.841 l
225.761 577.72099 l
227.321 579.761 l
228.64101 582.041 l
228.521 582.041 l
229.241 584.561 l
229.601 587.321 l
229.601 587.201 l
229.601 609.761 l
229.241 612.401 l
228.521 614.92101 l
228.521 614.80099 l
227.201 617.201 l
227.321 617.201 l
225.761 619.121 l
223.72099 620.80099 l
223.72099 620.681 l
221.44099 621.881 l
221.561 621.881 l
219.041 622.72099 l
216.28101 622.961 l
213.521 622.72099 l
213.64101 622.72099 l
211.121 621.881 l
208.841 620.681 l
208.961 620.80099 l
206.92101 619.121 l
205.36099 617.201 l
204.041 614.80099 l
204.041 614.92101 l
203.321 612.401 l
203.08099 609.761 l
203.08099 587.201 l
202.601 587.201 l
202.601 609.761 l
202.841 612.401 l
202.841 612.521 l
203.561 615.041 l
204.881 617.44099 l
205.00101 617.561 l
206.561 619.481 l
208.601 621.161 l
210.881 622.36099 l
211.00101 622.36099 l
213.521 623.201 l
216.28101 623.44099 l
219.041 623.201 l
219.161 623.201 l
221.681 622.36099 l
223.961 621.161 l
224.08099 621.161 l
226.121 619.481 l
227.681 617.561 l
227.681 617.44099 l
229.00101 615.041 l
229.72099 612.521 l
230.08099 609.881 l
230.08099 587.201 l
229.72099 584.44099 l
229.00101 581.92101 l
229.00101 581.80099 l
227.681 579.521 l
226.121 577.481 l
224.08099 575.80099 l
223.961 575.681 l
221.681 574.481 l
219.161 573.761 l
216.401 573.401 l
216.28101 573.401 l
213.521 573.761 l
211.00101 574.481 l
210.881 574.481 l
208.601 575.681 l
208.601 575.80099 l
206.561 577.481 l
205.00101 579.521 l
203.681 581.80099 l
203.561 581.92101 l
202.841 584.44099 l
202.601 587.201 l
f 
203.08099 587.201 m
202.601 587.201 l
f 
BT
0 6.36 -6.36 0 217.48061 577.6006 Tm
0.0103 Tc
(Au)Tj [19.3 ]TJ (di)Tj [6.10001 ]TJ (o)Tj [19.3 ]TJ (B)Tj [-2 ]TJ (a)Tj [19.3 ]TJ (ckE)Tj [16.89999 ]TJ (nd)Tj 
ET
198.041 214.961 m
197.80099 214.72099 l
202.241 209.561 l
202.601 209.80099 l
f 
199.72099 216.041 m
199.36099 215.80099 l
202.241 209.561 l
202.36099 209.44099 l
203.08099 208.961 l
202.72099 209.80099 l
f 
202.36099 209.44099 m
202.601 209.80099 l
196.841 213.521 l
196.601 213.161 l
f 
203.44099 450.64101 m
203.561 450.761 l
203.201 451.00101 l
203.08099 450.881 l
f 
203.44099 450.64101 m
196.481 441.521 l
191.201 433.961 l
189.041 430.481 l
187.241 427.00101 l
185.561 423.401 l
185.561 423.521 l
184.121 419.681 l
182.80099 415.601 l
181.601 410.92101 l
179.44099 399.761 l
174.521 366.401 l
169.841 332.92101 l
168.64101 321.521 l
168.041 312.161 l
168.041 303.881 l
168.64101 295.481 l
168.64101 295.601 l
171.521 274.481 l
173.08099 263.561 l
174.521 254.80099 l
176.321 247.72099 l
178.481 241.72099 l
179.80099 238.841 l
181.481 235.961 l
185.561 229.961 l
185.561 230.08099 l
185.201 229.72099 l
181.121 235.72099 l
179.44099 238.601 l
179.321 238.601 l
178.00101 241.481 l
178.00101 241.601 l
175.841 247.601 l
174.041 254.681 l
172.601 263.44099 l
171.041 274.36099 l
168.161 295.481 l
167.561 303.881 l
167.561 312.161 l
168.161 321.521 l
169.36099 332.92101 l
169.36099 333.041 l
174.041 366.521 l
178.961 399.881 l
181.121 411.041 l
182.321 415.72099 l
183.64101 419.80099 l
185.08099 423.64101 l
186.761 427.241 l
188.561 430.72099 l
188.681 430.72099 l
190.841 434.201 l
196.121 441.761 l
203.08099 450.881 l
f 
185.561 230.08099 m
190.961 223.36099 l
190.601 223.00101 l
185.201 229.72099 l
f 
198.161 215.08099 m
198.28101 214.961 l
197.92101 214.601 l
197.80099 214.72099 l
f 
190.961 223.36099 m
190.601 223.00101 l
197.80099 214.72099 l
198.161 215.08099 l
f 
215.321 312.881 m
215.08099 313.121 l
210.161 308.321 l
210.401 308.08099 l
f 
216.401 311.201 m
216.161 311.561 l
210.161 308.321 l
210.041 308.321 l
209.561 307.481 l
210.401 307.961 l
f 
210.041 308.321 m
210.401 308.08099 l
213.761 313.961 l
213.401 314.201 l
f 
228.401 514.481 m
228.401 514.72099 l
227.92101 514.601 l
227.92101 514.36099 l
f 
228.401 514.481 m
237.881 488.08099 l
240.761 478.481 l
242.80099 469.72099 l
244.00101 460.961 l
244.00101 460.841 l
244.72099 450.881 l
245.321 423.28101 l
245.44099 395.80099 l
245.201 386.44099 l
244.481 379.00101 l
243.28101 372.28101 l
241.36099 365.681 l
238.72099 358.241 l
235.241 349.121 l
229.601 334.961 l
229.601 334.841 l
227.44099 329.80099 l
225.401 325.601 l
223.36099 322.241 l
221.201 319.121 l
220.841 319.481 l
220.841 319.36099 l
223.00101 322.481 l
225.041 325.841 l
224.92101 325.841 l
226.961 330.041 l
229.121 335.08099 l
234.761 349.241 l
238.241 358.36099 l
240.881 365.80099 l
242.80099 372.401 l
244.00101 379.121 l
244.00101 379.00101 l
244.72099 386.44099 l
244.961 395.80099 l
244.841 423.28101 l
244.241 450.881 l
243.521 460.841 l
242.321 469.601 l
240.28101 478.36099 l
237.401 487.961 l
227.92101 514.36099 l
f 
221.201 319.121 m
218.561 316.121 l
218.201 316.481 l
220.841 319.481 l
f 
215.44099 312.881 m
215.321 312.761 l
214.961 313.121 l
215.08099 313.241 l
f 
218.561 316.121 m
218.201 316.481 l
215.08099 313.241 l
215.44099 312.881 l
f 
202.72099 340.121 m
202.601 339.761 l
202.841 339.041 l
203.201 338.80099 l
203.561 338.681 l
204.28101 338.92101 l
204.521 339.28101 l
204.64101 339.64101 l
204.64101 340.00101 l
204.401 340.36099 l
204.041 340.601 l
203.681 340.72099 l
203.321 340.601 l
202.961 340.481 l
202.72099 340.121 l
f* 
204.761 338.92101 m
202.241 337.241 l
202.00101 336.881 l
201.64101 337.241 l
194.561 343.601 l
193.36099 344.80099 l
195.041 344.44099 l
204.521 342.761 l
204.761 342.761 l
204.881 342.28101 l
204.28101 341.80099 l
194.80099 343.481 l
195.041 344.44099 l
195.28101 344.321 l
202.36099 337.961 l
201.64101 337.241 l
201.64101 338.08099 l
204.161 339.761 l
f 
204.881 342.28101 m
205.00101 339.28101 l
205.00101 339.041 l
204.761 338.92101 l
204.041 339.28101 l
203.92101 342.28101 l
f 
204.521 339.28101 m
202.00101 337.601 l
194.92101 343.961 l
204.401 342.28101 l
f* 
214.241 333.401 m
215.08099 332.92101 l
216.041 334.72099 l
215.201 335.201 l
f 
203.201 338.92101 m
202.36099 339.401 l
203.321 341.201 l
204.161 340.72099 l
f 
214.241 333.401 m
215.201 335.201 l
204.161 340.72099 l
203.201 338.92101 l
f 
215.44099 335.08099 m
214.841 334.961 l
214.36099 334.601 l
214.00101 334.121 l
213.881 333.521 l
214.00101 332.92101 l
214.36099 332.44099 l
214.841 332.201 l
215.44099 332.08099 l
216.041 332.201 l
216.521 332.44099 l
216.761 332.92101 l
216.881 333.521 l
216.761 334.121 l
216.521 334.601 l
216.041 334.961 l
215.44099 335.08099 l
f* 
215.561 334.841 m
214.961 334.72099 l
214.961 334.841 l
214.481 334.481 l
214.601 334.481 l
214.241 334.00101 l
214.241 334.121 l
214.121 333.521 l
214.121 333.64101 l
214.241 333.041 l
214.601 332.561 l
214.481 332.681 l
214.961 332.44099 l
215.561 332.321 l
215.44099 332.321 l
216.041 332.44099 l
215.92101 332.44099 l
216.401 332.681 l
216.28101 332.561 l
216.521 333.041 l
216.64101 333.64101 l
216.64101 333.521 l
216.521 334.121 l
216.521 334.00101 l
216.28101 334.481 l
216.401 334.481 l
215.92101 334.841 l
216.041 334.72099 l
215.44099 334.841 l
215.561 335.321 l
216.161 335.201 l
216.64101 334.841 l
216.761 334.72099 l
217.00101 334.241 l
217.121 333.64101 l
217.121 333.521 l
217.00101 332.92101 l
217.00101 332.80099 l
216.761 332.321 l
216.64101 332.201 l
216.161 331.961 l
215.561 331.841 l
215.44099 331.841 l
214.841 331.961 l
214.72099 331.961 l
214.241 332.201 l
214.241 332.321 l
213.881 332.80099 l
213.761 332.92101 l
213.64101 333.521 l
213.64101 333.64101 l
213.761 334.241 l
213.881 334.241 l
214.241 334.72099 l
214.241 334.841 l
214.72099 335.201 l
214.841 335.201 l
215.44099 335.321 l
f 
215.44099 334.841 m
215.561 334.841 l
215.44099 335.321 l
215.561 335.321 l
f 
0.75 0.75 0.75 scn
195.041 261.401 m
195.041 261.161 l
195.521 261.041 l
195.521 261.28101 l
f 
195.041 261.401 m
195.521 264.161 l
196.72099 266.80099 l
196.841 266.92101 l
198.881 269.321 l
201.521 271.36099 l
204.761 273.041 l
204.881 273.041 l
208.601 274.36099 l
208.72099 273.881 l
205.00101 272.561 l
201.761 270.881 l
201.761 271.00101 l
199.121 268.961 l
199.241 268.961 l
197.201 266.561 l
196.00101 263.92101 l
196.00101 264.041 l
195.521 261.28101 l
f 
208.601 274.36099 m
212.80099 275.08099 l
212.80099 274.601 l
212.92101 274.601 l
208.72099 273.881 l
f 
217.121 275.44099 0.24001 -0.48 rf
212.80099 275.08099 m
212.80099 274.601 l
217.121 274.961 l
217.121 275.44099 l
f 
216.881 274.961 0.24001 0.48 rf
217.121 275.44099 m
221.80099 275.08099 l
221.92101 275.08099 l
226.121 274.36099 l
229.961 273.161 l
233.321 271.481 l
236.201 269.561 l
236.321 269.561 l
237.401 268.36099 l
238.36099 267.28101 l
238.36099 267.161 l
237.881 266.92101 l
238.00101 266.92101 l
237.041 268.00101 l
235.961 269.201 l
233.08099 271.121 l
233.08099 271.00101 l
229.72099 272.681 l
229.841 272.681 l
226.00101 273.881 l
221.80099 274.601 l
217.121 274.961 l
f 
238.36099 267.161 m
239.681 264.64101 l
239.201 264.521 l
239.201 264.401 l
237.881 266.92101 l
f 
240.161 261.881 m
240.161 261.64101 l
239.681 261.521 l
239.681 261.761 l
f 
239.681 264.64101 m
239.201 264.521 l
239.681 261.761 l
240.161 261.881 l
f 
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -132 450 a Fq(Figure)30 b(1:)39 b(A)30 b(blo)r(c)n(k)g
(diagram)g(of)g(a)g(soft)n(w)n(are)e(radio.)41 b(A)29
b(detailed)h(StreaMIT)g(implemen)n(tation)g(app)r(ears)g(in)h(Figure)f
(17.)-152 647 y Fr(longing)g(to)f(a)g(distinct)g(class)h(of)g
(programs,)g(whic)n(h)f(w)n(e)g(will)h(refer)-152 734
y(to)h(as)g Fp(str)l(e)l(aming)i(applic)l(ations.)49
b Fr(The)30 b(follo)n(wing)j(are)e(the)f(salien)n(t)-152
821 y(prop)r(erties)22 b(of)g(a)g(streaming)f(application,)j(indep)r
(enden)n(t)c(of)i(its)g(im-)-152 908 y(plemen)n(tation:)-62
1138 y(1.)38 b Fp(L)l(ar)l(ge)28 b(str)l(e)l(ams)h(of)d(data.)35
b Fr(P)n(erhaps)25 b(the)f(most)h(fundamen)n(tal)35 1225
y(asp)r(ect)d(of)g(a)f(streaming)g(application)h(is)g(that)f(it)g(op)r
(erates)h(on)35 1312 y(a)32 b(large)h(\(or)e(virtually)h(in\014nite\))f
(sequence)g(of)h(data)g(items,)35 1399 y(hereafter)g(referred)g(to)f
(as)h(a)f Fp(data)j(str)l(e)l(am)p Fr(.)52 b(Data)32
b(streams)35 1486 y(generally)19 b(en)n(ter)e(the)g(program)g(from)h
(some)f(external)h(source,)35 1574 y(and)25 b(eac)n(h)f(data)h(item)f
(is)i(pro)r(cessed)f(for)h(a)f(limited)f(time)g(b)r(e-)35
1661 y(fore)32 b(b)r(eing)f(discarded.)51 b(This)32 b(is)g(in)f(con)n
(trast)g(to)g(scien)n(ti\014c)35 1748 y(applications,)25
b(in)e(whic)n(h)g(a)g(\014xed)f(input)g(set)h(is)h(manipulated)35
1835 y(with)i(a)g(large)h(degree)f(of)h(data)f(reuse.)-62
1980 y(2.)38 b Fp(Indep)l(endent)31 b(str)l(e)l(am)f(\014lters.)38
b Fr(Conceptually)-6 b(,)28 b(a)f(streaming)35 2067 y(computation)e
(represen)n(ts)g(a)h(sequence)f(of)h(transformations)35
2154 y(on)i(the)g(data)g(streams)g(in)f(the)h(program.)41
b(W)-6 b(e)28 b(will)h(refer)g(to)35 2241 y(the)23 b(basic)h(unit)e(of)
i(this)f(transformation)h(as)g(a)f Fp(\014lter)p Fr(:)34
b(an)23 b(op-)35 2328 y(eration)f(that{on)e(eac)n(h)h(execution)g
(step{reads)g(one)g(or)g(more)35 2416 y(items)26 b(from)g(an)h(input)e
(stream,)i(p)r(erforms)f(some)g(computa-)35 2503 y(tion,)20
b(and)d(writes)h(one)f(or)h(more)f(items)g(to)g(an)g(output)g(stream.)
35 2590 y(Filters)36 b(are)f(generally)h(indep)r(enden)n(t)d(and)i
(self-con)n(tained,)35 2677 y(without)29 b(references)i(to)e(global)i
(v)l(ariables)f(or)f(other)g(\014lters.)35 2764 y(A)f(stream)h(program)
g(is)g(the)f(comp)r(osition)i(of)f(\014lters)h(in)n(to)e(a)35
2852 y Fp(str)l(e)l(am)i(gr)l(aph)p Fr(,)f(in)e(whic)n(h)g(the)f
(outputs)h(of)g(some)g(\014lters)g(are)35 2939 y(connected)f(to)f(the)h
(inputs)f(of)h(others.)-62 3083 y(3.)38 b Fp(A)g(stable)g(c)l
(omputation)h(p)l(attern.)69 b Fr(The)37 b(structure)f(of)h(the)35
3171 y(stream)26 b(graph)h(is)g(generally)g(constan)n(t)f(during)g(the)
g(steady-)35 3258 y(state)20 b(op)r(eration)g(of)g(a)g(stream)f
(program.)32 b(That)19 b(is,)j(a)d(certain)35 3345 y(set)31
b(of)g(\014lters)g(are)g(rep)r(eatedly)f(applied)g(in)h(a)g(regular,)h
(pre-)35 3432 y(dictable)e(order)g(to)g(pro)r(duce)f(an)h(output)f
(stream)g(that)g(is)h(a)35 3519 y(giv)n(en)c(function)f(of)i(the)e
(input)g(stream.)-62 3664 y(4.)38 b Fp(Oc)l(c)l(asional)20
b(mo)l(di\014c)l(ation)h(of)e(str)l(e)l(am)i(structur)l(e.)34
b Fr(Ev)n(en)17 b(though)35 3751 y(eac)n(h)23 b(arrangemen)n(t)f(of)h
(\014lters)g(is)g(executed)f(for)h(a)g(long)g(time,)35
3838 y(there)39 b(are)i(still)f(dynamic)e(mo)r(di\014cations)i(to)g
(the)f(stream)35 3925 y(graph)27 b(that)g(o)r(ccur)g(on)g(o)r(ccasion.)
40 b(F)-6 b(or)27 b(instance,)g(if)h(a)f(wire-)35 4013
y(less)e(net)n(w)n(ork)f(in)n(terface)h(is)g(exp)r(eriencing)g(high)f
(noise)h(on)f(an)35 4100 y(input)34 b(c)n(hannel,)i(it)f(migh)n(t)e
(react)i(b)n(y)f(adding)g(some)g(\014lters)35 4187 y(to)26
b(clean)h(up)e(the)g(signal;)j(a)e(soft)n(w)n(are)h(radio)g
(re-initializes)g(a)35 4274 y(p)r(ortion)22 b(of)g(the)f(stream)f
(graph)i(when)f(a)g(user)h(switc)n(hes)g(from)35 4361
y(AM)d(to)g(FM.)g(Sometimes,)h(these)e(re-initializations)j(are)f(syn-)
35 4448 y(c)n(hronized)29 b(with)g(some)f(data)h(in)f(the)g(stream{for)
i(instance,)35 4536 y(when)35 b(a)h(net)n(w)n(ork)e(proto)r(col)j(c)n
(hanges)e(from)g(blueto)r(oth)h(to)35 4623 y(802.11)41
b(at)e(a)g(certain)g(p)r(oin)n(t)f(of)i(a)f(transmission.)73
b(There)35 4710 y(is)37 b(t)n(ypically)f(an)g(en)n(umerable)g(n)n(um)n
(b)r(er)e(of)j(con\014gurations)35 4797 y(that)25 b(the)h(stream)f
(graph)h(can)g(adopt)f(in)h(an)n(y)f(one)h(program,)35
4884 y(suc)n(h)c(that)g(all)h(of)h(the)e(p)r(ossible)h(arrangemen)n(ts)
f(of)i(\014lters)e(are)35 4971 y(kno)n(wn)j(at)h(compile)g(time.)-62
5116 y(5.)38 b Fp(Oc)l(c)l(asional)31 b(out-of-str)l(e)l(am)i(c)l
(ommunic)l(ation.)42 b Fr(In)28 b(addition)35 5203 y(to)f(the)f(high-v)
n(olume)e(data)j(streams)f(passing)i(from)e(one)g(\014l-)35
5290 y(ter)21 b(to)g(another,)i(\014lters)e(also)i(comm)n(unicate)c
(small)j(amoun)n(ts)35 5378 y(of)31 b(con)n(trol)f(information)h(on)f
(an)g(infrequen)n(t)f(and)g(irregular)2040 604 y Fo(class)h(FIR)h
(extends)f(Filter)g({)2133 671 y(Channel)g(input)g(=)h(new)f
(FloatChannel\(\);)2133 737 y(Channel)g(output)g(=)h(new)f
(FloatChannel\(\);)2133 803 y(int)g(N;)2133 936 y(void)g(init\(int)g
(N\))h({)2225 1003 y(this.N)f(=)h(N;)2133 1069 y(})2133
1202 y(void)f(work\(\))g({)2225 1268 y(float)h(sum)f(=)h(0;)2225
1335 y(for)g(\(int)f(i=0;)h(i<N;)f(i++\))2318 1401 y(sum)g(+=)h
(input.peek\(i\)*FIR_COEFF[i][N];)2225 1468 y(input.pop\(\);)2225
1534 y(output.push\(sum\);)2133 1600 y(})2040 1667 y(})2040
1800 y(class)f(Main)h(extends)f(Stream)g({)2133 1866
y(void)g(init\(\))g({)2225 1932 y(add\(new)g(DataSource\(\)\);)2225
1999 y(add\(new)g(FIR\(N\)\);)2225 2065 y(add\(new)g(Display\(\)\);)
2133 2132 y(})2040 2198 y(})2344 2349 y Fq(Figure)g(2:)39
b Fn(An)28 b(FIR)f(\014lter)g(in)g(StreaMIT.)2227 2501
y Fr(basis.)34 b(Examples)22 b(include)g(c)n(hanging)g(the)g(v)n(olume)
e(on)i(a)h(cell)2227 2588 y(phone,)e(prin)n(ting)f(an)g(error)g
(message)h(to)f(a)h(screen,)h(or)e(c)n(hang-)2227 2675
y(ing)26 b(a)g(co)r(e\016cien)n(t)g(in)g(an)g(upstream)e(FIR)h
(\014lter.)2130 2830 y(6.)38 b Fp(High)32 b(p)l(erformanc)l(e)i(exp)l
(e)l(ctations.)51 b Fr(Often)31 b(there)f(are)h(real-)2227
2917 y(time)h(constrain)n(ts)h(that)f(m)n(ust)f(b)r(e)h(satis\014ed)h
(b)n(y)e(streaming)2227 3004 y(applications;)c(th)n(us,)d(e\016ciency)h
(\(in)f(terms)g(of)h(b)r(oth)g(latency)2227 3091 y(and)j(throughput\))e
(is)j(of)g(primary)e(concern.)42 b(Additionally)-6 b(,)2227
3179 y(man)n(y)28 b(em)n(b)r(edded)g(applications)k(are)e(in)n(tended)f
(for)i(mobile)2227 3266 y(en)n(vironmen)n(ts)e(where)i(p)r(o)n(w)n(er)h
(consumption,)f(memory)e(re-)2227 3353 y(quiremen)n(ts,)24
b(and)i(co)r(de)g(size)g(are)h(also)g(imp)r(ortan)n(t.)2040
3560 y Fs(3.)99 b(LANGU)-6 b(A)h(GE)25 b(O)-5 b(VER)g(VIEW)2040
3651 y Fr(StreaMIT)36 b(includes)f(stream-sp)r(eci\014c)f(abstractions)
i(and)f(repre-)2040 3739 y(sen)n(tations)h(that)f(are)g(designed)h(to)f
(impro)n(v)n(e)f(programmer)g(pro-)2040 3826 y(ductivit)n(y)d(for)h
(the)f(domain)g(of)i(programs)f(describ)r(ed)g(ab)r(o)n(v)n(e.)52
b(In)2040 3913 y(this)18 b(pap)r(er,)i(w)n(e)f(presen)n(t)f(StreaMIT)g
(in)g(legal)i(Ja)n(v)l(a)e(syn)n(tax)g(for)h(ease)2040
4000 y(of)27 b(presen)n(tation.)34 b(Though)26 b(this)g(syn)n(tax)f
(can)g(express)h(the)f(funda-)2040 4087 y(men)n(tal)34
b(ideas)i(of)g(StreaMIT,)h(in)e(the)f(longer)i(term)f(w)n(e)g(plan)g
(to)2040 4174 y(dev)n(elop)23 b(a)g(cleaner)g(and)g(more)f(abstract)i
(syn)n(tax)d(that)i(is)g(designed)2040 4262 y(sp)r(eci\014cally)k(for)f
(stream)g(programs.)2040 4436 y(Figure)34 b(17)g(con)n(tains)g(a)f
(detailed)h(example)e(of)i(a)g(soft)n(w)n(are)h(radio)2040
4523 y(implemen)n(ted)c(in)i(StreaMIT;)h(a)f(blo)r(c)n(k)g(diagram)g
(of)h(the)e(system)2040 4610 y(app)r(ears)e(in)e(Figure)i(1.)44
b(In)28 b(the)g(follo)n(wing)j(sections,)g(w)n(e)e(dra)n(w)h(on)2040
4697 y(di\013eren)n(t)22 b(comp)r(onen)n(ts)g(of)i(this)f(example)e(to)
i(describ)r(e)h(and)e(justify)2040 4785 y(the)30 b(ma)t(jor)i(features)
f(of)h(StreaMIT.)g(A)e(more)g(detailed)h(guide)g(to)2040
4872 y(the)25 b(syn)n(tax)g(of)i(StreaMIT)f(can)g(b)r(e)f(found)h(in)f
(the)h(App)r(endix.)2040 5079 y Fs(3.1)99 b(Filters)2040
5199 y Fm(3.1.1)90 b(Str)m(eaMIT)22 b(Appr)l(oac)o(h)2040
5290 y Fr(The)30 b(basic)g(unit)f(of)h(computation)f(in)h(StreaMIT)g
(is)g(the)f Ft(Filter)p Fr(.)2040 5378 y(An)19 b(example)g(of)i(a)f
(Filter)h(is)f(the)g Ft(FIRFilter)p Fr(,)j(a)d(comp)r(onen)n(t)f(of)i
(our)1921 5627 y(2)p eop
%%Page: 3 3
3 2 bop -152 -116 a Fo(int)31 b(N)g(=)f(5;)-152 -50 y(int)h(BLOCK_SIZE)
e(=)i(100;)-152 83 y(void)g(step\(float[])e(input,)h(float[])g(output,)
g(int)h(numIn,)f(int)g(numOut\))g({)-59 150 y(float)g(sum)h(=)f(0;)-59
216 y(for)g(\(int)h(k=0;)f(k<numIn;)g(k++\))34 282 y(sum)g(=)h(sum)f(+)
h(input[k]*FIR_COEFF[k+numIn][N];)-59 349 y(for)f(\(int)h(k=numIn;)f
(k<N;)g(k++\))34 415 y(sum)g(=)h(sum)f(+)h
(input[k]*FIR_COEFF[k-numIn][N];)-59 482 y(output[numOut])e(=)i(sum;)
-59 548 y(input[numIn])e(=)i(getData\(\);)-152 614 y(})-152
747 y(void)g(main\(\))f({)-59 814 y(float)g(input[])g(=)h(new)f
(float[N];)-59 880 y(float)g(output[])g(=)h(new)f(float[BLOCK_SIZE];)
-59 947 y(int)g(numIn,)h(numOut;)-59 1079 y(for)f(\(numIn=0;)g
(numIn<N;)g(numIn++\))34 1146 y(input[numIn])f(=)i(getData\(\);)-59
1279 y(while)f(\(true\))g({)34 1411 y(for)g(\(out=0;)g(numIn<N;)g
(numIn++,)g(numOut++\))126 1478 y(step\(input,)g(output,)g(numIn,)g
(numOut\);)34 1611 y(int)g(wholeSteps)g(=)g(\(BLOCK_SIZE-numOut\)/N;)34
1677 y(for)g(\(int)g(k=0;)h(k<wholeSteps;)e(k++\))h({)126
1744 y(for)h(\(numIn=0;)e(numIn<N;)h(numIn++,)g(numOut++\))219
1810 y(step\(input,)f(output,)h(numIn,)g(numOut\);)34
1943 y(for)g(\(numIn=0;)g(numOut<BLOCK_SIZE;)e(numIn++,)i(numOut++\))
126 2009 y(step\(input,)g(output,)g(numIn,)g(numOut\);)34
2142 y(displayBlock\(output\);)-59 2208 y(})-152 2275
y(})-152 2426 y Fq(Figure)j(3:)44 b Fn(An)30 b(optimized)d(FIR)j
(\014lter)f(in)g(a)g(pro)r(cedural)f(lan-)-152 2513 y(guage.)79
b(A)42 b(complicated)e(lo)r(op)h(nest)h(is)f(required)g(to)g(a)n(v)n
(oid)-152 2600 y(mo)r(d)c(functions)g(and)h(to)f(use)i(memory)c
(e\016cien)n(tly)-7 b(,)39 b(and)f(the)-152 2687 y(structure)c(of)f
(the)h(lo)r(ops)g(dep)r(ends)h(on)f(the)g(data)f(rates)g(\(e.g.,)-152
2775 y(BLOCK)p 144 2775 25 4 v 29 w(SIZE\))26 b(within)e(the)i(stream.)
33 b(An)27 b(actual)d(implemen-)-152 2862 y(tation)i(migh)n(t)f(inline)
h(the)h(calls)f(to)h Fl(step)p Fn(.)-152 3030 y Fr(soft)n(w)n(are)c
(radio)e(\(see)g(Figure)g(2\).)33 b(Eac)n(h)21 b Ft(Filter)h
Fr(con)n(tains)f(an)g Ft(init)-152 3117 y Fr(function)h(that)g(is)g
(called)g(at)g(initialization)i(time;)f(in)f(this)f(case,)j(the)-152
3204 y Ft(FIRFilter)j Fr(records)d Ft(N)p Fr(,)h(the)f(n)n(um)n(b)r(er)
e(of)j(items)f(it)g(should)g(\014lter)h(at)-152 3292
y(once.)33 b(A)20 b(user)g(should)f(instan)n(tiate)i(a)f(\014lter)g(b)n
(y)f(using)h(its)g(construc-)-152 3379 y(tor,)26 b(and)e(the)g
Ft(init)i Fr(function)f(will)h(b)r(e)e(called)i(implicitly)e(with)h
(the)-152 3466 y(same)h(argumen)n(ts)f(that)g(w)n(ere)h(passed)g(to)g
(the)g(constructor)1609 3434 y Fk(1)1644 3466 y Fr(.)-152
3640 y(The)35 b Ft(work)h Fr(function)f(describ)r(es)h(the)e(most)h
(\014ne)f(grained)i(execu-)-152 3727 y(tion)29 b(step)f(of)h(the)f
(\014lter)h(in)f(the)g(steady)h(state.)43 b(Within)28
b(the)g Ft(work)-152 3815 y Fr(function,)20 b(the)d(\014lter)h(can)g
(comm)n(unicate)e(with)i(neigh)n(b)r(oring)h(blo)r(c)n(ks)-152
3902 y(using)h(the)g Ft(input)g Fr(and)g Ft(output)h
Fr(c)n(hannels,)g(whic)n(h)f(are)g(t)n(yp)r(ed)e(FIF)n(O)-152
3989 y(queues)k(declared)g(as)h(\014elds)f(at)g(the)g(top)g(of)h(the)f
(class.)34 b(These)23 b(high-)-152 4076 y(v)n(olume)i(c)n(hannels)h
(supp)r(ort)f(the)g(three)h(in)n(tuitiv)n(e)f(op)r(erations:)-62
4331 y(1.)38 b Ft(pop\(\))d Fr(remo)n(v)n(es)f(an)g(item)g(from)g(the)f
(end)h(of)h(the)f(c)n(hannel)35 4418 y(and)25 b(returns)h(its)g(v)l
(alue.)-62 4606 y(2.)38 b Ft(peek\(i\))d Fr(returns)f(the)f(v)l(alue)g
(of)i(the)e(item)g Fj(i)g Fr(spaces)i(from)35 4693 y(the)25
b(end)g(of)i(the)e(c)n(hannel)h(without)g(remo)n(ving)f(it.)-62
4881 y(3.)38 b Ft(push\(x\))i Fr(writes)e Fj(x)g Fr(to)g(the)f(fron)n
(t)h(of)h(the)f(c)n(hannel.)71 b(The)35 4969 y(argumen)n(t)35
b Fj(x)h Fr(is)g(passed)h(b)n(y)e(v)l(alue;)41 b(if)c(it)f(is)h(an)f
(ob)t(ject,)j(a)35 5056 y(separate)27 b(cop)n(y)e(is)h(enqueued)e(on)i
(the)f(c)n(hannel.)p -152 5143 797 4 v -148 5196 a Fk(1)-113
5228 y Fr(This)32 b(design)g(migh)n(t)f(seem)h(unnatural,)h(but)e(it)h
(is)g(necessary)h(to)-152 5303 y(allo)n(w)21 b(inlining)e(\(Section)g
(3.2\))g(and)f(re-initialization)j(\(Section)e(3.4\))-152
5378 y(within)26 b(a)g(Ja)n(v)l(a-based)g(syn)n(tax.)2040
-111 y Fo(class)k(FIRFilter)g({)2133 -45 y(int)g(N;)2133
22 y(float[])g(input;)2133 154 y(FIRFilter\(int)f(N\))i({)2225
221 y(this.N)f(=)h(N;)2133 287 y(})2133 420 y(float[])f
(getData\(float[])f(output,)h(int)g(offset,)g(int)h(length\))f({)2225
486 y(if)h(\(input==null\))e({)2318 553 y(input)h(=)h(new)f
(float[MAX_LENGTH];)2318 619 y(source.getData\(input,)e(0,)j
(N+length\);)2225 686 y(})g(else)f({)2318 752 y(source.getData\(input,)
e(N,)j(length\);)2225 819 y(})2225 951 y(for)g(\(int)f(i=0;)h
(i<length;)e(i++\))i({)2318 1018 y(float)f(sum)h(=)f(0;)2318
1084 y(for)g(\(int)h(j=0;)f(j<N;)h(j++\))f({)2411 1151
y(sum)g(=)h(sum)f(+)h(data1[i+j]*FIR_COEFF[j][N];)2318
1217 y(})2318 1283 y(output[i+offset])e(=)i(sum;)2225
1350 y(})2225 1483 y(for)g(\(int)f(i=0;)h(i<N;)f(i++\))g({)2318
1549 y(input[i])g(=)h(input[i+length];)2225 1616 y(})2133
1682 y(})2040 1748 y(})2040 1881 y(void)f(main\(\))h({)2133
2014 y(DataSource)e(datasource)h(=)h(new)f(DataSource\(\);)2133
2080 y(FIRFilter)f(filter)i(=)f(new)h(FIRFilter\(5\);)2133
2147 y(Display)f(display)g(=)g(new)h(Display\(\);)2133
2213 y(filter.source)e(=)i(datasource;)2133 2280 y(display.source)e(=)i
(filter;)2133 2346 y(display.run\(\);)2040 2479 y(})2040
2630 y Fq(Figure)f(4:)39 b Fn(An)27 b(FIR)g(\014lter)g(in)f(an)h(ob)5
b(ject)26 b(orien)n(ted)g(language.)2040 2717 y(A)31
b(\\pull)f(mo)r(del")f(is)h(used)h(b)n(y)f(eac)n(h)g(\014lter)g(ob)5
b(ject)29 b(to)h(retriev)n(e)2040 2804 y(a)j(c)n(h)n(unk)g(of)g(data)f
(from)f(its)h(source,)i(and)f(straigh)n(t-line)e(co)r(de)2040
2892 y(connects)d(one)f(\014lter)f(to)h(another.)2040
3044 y Fr(A)e(\014lter)f(can)h(also)i(push,)d(p)r(op,)i(and)e(p)r(eek)h
(items)f(from)h(within)g(the)2040 3131 y Ft(init)30 b
Fr(function)f(if)g(it)g(needs)g(to)g(set)g(up)f(some)g(initial)i(state)
f(on)g(its)2040 3218 y(c)n(hannels,)d(although)g(this)g(usually)g(is)g
(not)f(necessary)-6 b(.)2040 3392 y(A)34 b(ma)t(jor)g(restriction)i(of)
f(the)e(curren)n(t)h(v)n(ersion)g(of)h(StreaMIT)g(is)2040
3479 y(that)23 b(it)h(requires)f(\014lters)h(to)f(ha)n(v)n(e)g(static)h
(input)e(and)h(output)g(rates.)2040 3567 y(That)31 b(is,)h(the)d(n)n
(um)n(b)r(er)f(of)j(items)f(p)r(eek)n(ed,)h(p)r(opp)r(ed,)g(and)f
(pushed)2040 3654 y(b)n(y)e(eac)n(h)i(\014lter)f(m)n(ust)f(b)r(e)i
(constan)n(t)f(from)g(one)h(in)n(v)n(o)r(cation)g(of)g(the)2040
3741 y Ft(work)c Fr(function)f(to)g(the)g(next.)33 b(W)-6
b(e)25 b(plan)g(to)g(supp)r(ort)f(dynamically)2040 3828
y(c)n(hanging)i(rates)h(in)e(a)h(future)g(v)n(ersion)f(of)i(StreaMIT.)
2040 4066 y Fm(3.1.2)90 b(Rationale)2040 4157 y Fr(StreaMIT's)23
b(represen)n(tation)f(of)g(a)f(\014lter)h(is)g(an)f(impro)n(v)n(emen)n
(t)e(o)n(v)n(er)2040 4244 y(general-purp)r(ose)35 b(languages.)61
b(In)33 b(a)i(pro)r(cedural)f(language,)k(the)2040 4332
y(analog)31 b(of)f(a)g(\014lter)f(is)h(a)g(blo)r(c)n(k)f(of)i(statemen)
n(ts)d(in)i(a)g(complicated)2040 4419 y(lo)r(op)19 b(nest)g(\(see)g
(Figure)g(3\).)32 b(This)20 b(represen)n(tation)f(is)g(unnatural)f(for)
2040 4506 y(expressing)30 b(the)f(feedbac)n(k)g(and)g(parallelism)i
(that)e(is)h(inheren)n(t)f(in)2040 4593 y(streaming)f(systems.)42
b(Also,)30 b(there)e(is)g(no)h(clear)g(abstraction)g(bar-)2040
4680 y(rier)22 b(b)r(et)n(w)n(een)f(one)h(\014lter)f(and)g(another,)i
(and)e(high-v)n(olume)f(stream)2040 4767 y(pro)r(cessing)h(is)f(m)n
(uddled)d(with)i(global)i(v)l(ariables)f(and)f(con)n(trol)h(\015o)n(w.)
2040 4855 y(The)i(lo)r(op)g(nest)f(m)n(ust)f(b)r(e)h(re-arranged)h(if)f
(the)g(input)g(or)g(output)g(ra-)2040 4942 y(tios)i(of)g(a)f(\014lter)g
(c)n(hanges,)i(and)e(sc)n(heduling)g(optimizations)h(further)2040
5029 y(inhibit)31 b(the)g(readabilit)n(y)h(of)g(the)f(co)r(de.)53
b(In)30 b(con)n(trast,)k(StreaMIT)2040 5116 y(places)22
b(the)e(\014lter)h(in)g(its)h(o)n(wn)f(indep)r(enden)n(t)e(unit,)j
(making)e(explicit)2040 5203 y(the)27 b(parallelism)i(and)e(in)n
(ter-\014lter)h(comm)n(unication)e(while)j(hiding)2040
5290 y(the)e(grungy)g(details)h(of)g(sc)n(heduling)f(and)g
(optimization)g(from)g(the)2040 5378 y(programmer.)1921
5627 y(3)p eop
%%Page: 4 4
4 3 bop -152 -111 a Fo(class)31 b(FFT)f(extends)g(Stream)g({)-59
-45 y(void)g(init\(int)g(N\))h({)34 22 y(add\(new)f(SplitJoin\(\))f({)
126 88 y(void)i(init\(\))f({)219 154 y
(setSplitter\(WEIGHTED_ROUND_ROBIN\(N/2,)c(N/2\)\);)219
221 y(for)k(\(int)h(i=0;)f(i<2;)g(i++\))311 287 y(add\(new)g
(SplitJoin\(\))g({)404 354 y(void)g(init\(\))h({)497
420 y(setSplitter\(ROUND_ROBIN\);)497 486 y(add\(IDENTITY\(\)\);)497
553 y(add\(IDENTITY\(\)\);)497 619 y
(setJoiner\(WEIGHTED_ROUND_ROBIN\(N/4,)26 b(N/4\);)311
686 y(}}\);)219 752 y(setJoiner\(ROUND_ROBIN\);)34 819
y(}}\);)34 885 y(for)k(\(int)g(i=2;)h(i<N;)f(i*=2\))95
951 y(add\(new)g(Butterfly\(i,)g(N\)\);)-152 1018 y(}})-152
1169 y Fq(Figure)22 b(5:)36 b Fn(A)20 b(F)-7 b(ast)19
b(F)-7 b(ourier)19 b(T)-7 b(ransform)17 b(\(FFT\))i(in)h(StreaMIT.)-152
1384 y Fr(One)35 b(could)h(also)h(use)f(an)g(ob)t(ject-orien)n(ted)g
(language)h(to)f(imple-)-152 1471 y(men)n(t)23 b(a)h(stream)f
(abstraction)i(\(see)g(Figure)f(4\).)34 b(This)25 b(a)n(v)n(oids)f
(some)-152 1558 y(of)i(the)e(problems)g(asso)r(ciated)i(with)f(a)f(pro)
r(cedural)h(lo)r(op)h(nest,)f(but)-152 1645 y(the)31
b(programming)f(mo)r(del)h(is)h(again)g(complicated)f(b)n(y)f
(e\016ciency)-152 1732 y(concerns.)k(That)22 b(is,)h(a)f(run)n(time)e
(library)i(usually)g(exectutes)f(\014lters)-152 1819
y(according)j(to)e(a)h(pull)f(mo)r(del,)g(where)h(a)g(\014lter)f(op)r
(erates)h(on)f(a)h(blo)r(c)n(k)-152 1907 y(of)28 b(data)f(that)g(it)g
(retriev)n(es)h(from)e(the)h(input)f(c)n(hannel.)39 b(The)27
b(blo)r(c)n(k)-152 1994 y(size)34 b(is)f(often)g(optimized)f(for)i(the)
e(cac)n(he)h(size)h(of)f(a)g(giv)n(en)g(arc)n(hi-)-152
2081 y(tecture,)25 b(whic)n(h)f(hamp)r(ers)f(p)r(ortabilit)n(y)-6
b(.)34 b(Moreo)n(v)n(er,)26 b(op)r(erating)f(on)-152
2168 y(large-grained)32 b(blo)r(c)n(ks)e(obscures)h(the)e(fundamen)n
(tal)g(\014ne-grained)-152 2255 y(algorithm)c(that)f(is)g(visible)h(in)
f(a)g(StreaMIT)h(\014lter.)34 b(Th)n(us,)24 b(the)g(ab-)-152
2342 y(sence)29 b(of)g(a)f(run)n(time)f(mo)r(del)h(in)g(fa)n(v)n(or)g
(of)h(automated)f(sc)n(heduling)-152 2430 y(and)e(optimization)g(again)
g(distinguishes)h(StreaMIT.)-152 2626 y Fs(3.2)99 b(Connecting)26
b(Filters)-152 2740 y Fm(3.2.1)90 b(Str)m(eaMIT)22 b(Appr)l(oac)o(h)
-152 2831 y Fr(The)32 b(basic)g(construct)f(for)h(comp)r(osing)g
(\014lters)f(in)n(to)h(a)f(comm)n(uni-)-152 2918 y(cating)38
b(net)n(w)n(ork)e(is)i(a)f Ft(Stream)p Fr(.)69 b(The)37
b(FFT)g(in)g(Figure)g(5)g(is)h(an)-152 3005 y(example)f(of)i(a)f
Ft(Stream)h Fr(that)e(app)r(ears)i(in)e(our)h(soft)n(w)n(are)i(radio.)
-152 3093 y(Lik)n(e)25 b(a)g Ft(Filter)p Fr(,)i(a)e Ft(Stream)h
Fr(has)f(an)g Ft(init)h Fr(function)f(that)f(is)i(called)-152
3180 y(up)r(on)h(its)i(instan)n(tiation.)41 b(Ho)n(w)n(ev)n(er,)28
b(there)g(is)g(no)g Ft(work)g Fr(function,)-152 3267
y(and)d(all)i(input)d(and)h(output)f(c)n(hannels)i(are)f(implicit;)h
(instead,)g(the)-152 3354 y(stream)f(b)r(eha)n(v)n(es)g(as)h(the)f
(sequen)n(tial)h(comp)r(osition)f(of)h(\014lters)g(that)-152
3441 y(are)i(sp)r(eci\014ed)g(with)g(successiv)n(e)g(calls)h(to)f
Ft(add)g Fr(from)g(within)g Ft(init)p Fr(.)-152 3528
y(That)e(is,)h Ft(Stream)g Fr(creates)f(a)g(single)h(pip)r(eline.)-152
3703 y(There)39 b(are)g(t)n(w)n(o)f(other)h(stream)e(constructors)i(b)r
(esides)g Ft(Stream)p Fr(:)-152 3790 y Ft(SplitJoin)22
b Fr(and)e Ft(FeedbackLoop)p Fr(.)36 b(The)20 b(former)g(is)h(used)f
(to)g(sp)r(ecify)-152 3877 y(indep)r(enden)n(t)31 b(parallel)i(streams)
f(that)g(div)n(erge)f(from)h(a)g(common)-152 3964 y Fp(splitter)h
Fr(and)d(merge)h(in)n(to)g(a)g(common)f Fp(joiner)p Fr(.)50
b(There)31 b(are)h(three)-152 4051 y(kinds)25 b(of)i(splitters:)-62
4280 y(1.)38 b(WEIGHTED)p 483 4280 24 4 v 28 w(R)n(OUND)p
801 4280 V 25 w(R)n(OBIN\()p Fj(i)1132 4288 y Fk(1)1166
4280 y Fr(,)d Fj(i)1248 4288 y Fk(2)1283 4280 y Fr(,)f
Fj(:)14 b(:)f(:)g Fr(,)35 b Fj(i)1523 4289 y Fi(k)1561
4280 y Fr(\),)g(whic)n(h)35 4367 y(sends)e(the)g(\014rst)g
Fj(i)580 4375 y Fk(1)648 4367 y Fr(data)h(items)f(to)g(the)g(\014rst)g
(stream,)i(the)35 4455 y(next)25 b Fj(i)234 4463 y Fk(2)294
4455 y Fr(data)h(items)g(to)f(the)h(second)g(stream,)f(and)h(so)g(on.)
-62 4599 y(2.)38 b(R)n(OUND)p 330 4599 V 26 w(R)n(OBIN,)19
b(whic)n(h)h(is)g(just)g(a)g(w)n(eigh)n(ted)h(round)e(robin)35
4686 y(where)26 b(all)h(w)n(eigh)n(ts)f(are)h(1.)-62
4830 y(3.)38 b(DUPLICA)-6 b(TE,)41 b(whic)n(h)g(replicates)h(eac)n(h)g
(data)f(item)f(and)35 4917 y(sends)26 b(a)g(cop)n(y)f(to)h(eac)n(h)g
(parallel)h(stream.)-62 5062 y(4.)38 b(NULL,)d(whic)n(h)h(means)g(that)
f(all)i(of)g(the)e(parallel)j(comp)r(o-)35 5149 y(nen)n(ts)25
b(are)h(sources)h(and)e(there)h(is)g(no)g(input)e(to)i(split.)-152
5378 y(Similarly)-6 b(,)26 b(there)f(are)h(three)g(kinds)f(of)i
(joiners:)2136 7 y @beginspecial 82 @llx 207 @lly 399
@urx 235 @ury 2160 @rwi @setspecial
%%BeginDocument: basic-pipeline.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725163731)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 82 207 399 235
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

82 207 moveto
399 207 lineto
399 235 lineto
82 235 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font GCMMPK+Arial
11 dict begin
/FontName /GCMMPK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GCMMPK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N71/GCMMPK+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
82 207 317 28 re W n
[ 0 -1 1 0 -125 317 ] concat
/N62 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N83 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N62 /ColorSpace findRes cs
0 0 0 scn
/N83 /ExtGState findRes gs
1 i
95.201 287.80099 2.03999 0.96001 rf
95.201 308.681 2.03999 -0.96001 rf
95.201 288.761 2.03999 18.96001 rf
95.201 306.761 2.03999 0.96001 rf
95.201 309.28101 2.03999 -0.96001 rf
95.201 307.72099 2.03999 0.60001 rf
95.201 311.681 2.03999 0.96001 re
f* 
95.201 314.561 2.03999 -0.96001 re
f* 
95.201 312.64101 2.03999 0.96001 re
f* 
95.201 316.961 2.03999 0.96001 re
f* 
95.201 319.841 2.03999 -0.96001 re
f* 
95.201 317.92101 2.03999 0.96001 re
f* 
95.201 322.241 2.03999 0.96001 rf
95.201 324.64101 2.03999 -0.96001 rf
95.201 323.201 2.03999 0.48 rf
96.161 333.041 m
95.80099 332.92101 l
95.44099 332.681 l
95.321 332.44099 l
95.201 331.961 l
95.44099 331.241 l
96.161 331.00101 l
96.64101 331.121 l
96.881 331.241 l
97.121 331.601 l
97.241 331.961 l
97.121 332.44099 l
96.64101 332.92101 l
96.161 333.041 l
f* 
95.92101 330.64101 m
93.28101 332.201 l
92.92101 332.321 l
93.041 332.681 l
95.681 341.80099 l
96.161 343.481 l
96.64101 341.80099 l
99.28101 332.681 l
99.401 332.44099 l
99.041 332.201 l
98.321 332.44099 l
95.681 341.561 l
96.64101 341.80099 l
96.64101 341.561 l
94.00101 332.44099 l
93.041 332.681 l
93.761 333.041 l
96.401 331.481 l
f 
99.041 332.201 m
96.401 330.64101 l
96.161 330.521 l
95.92101 330.64101 l
95.92101 331.481 l
98.561 333.041 l
f 
96.161 331.00101 m
93.521 332.561 l
96.161 341.681 l
98.80099 332.561 l
f* 
95.201 323.561 2.03999 0.96001 rf
95.201 332.92101 2.03999 -0.96001 rf
95.201 324.521 2.03999 7.44 rf
95.201 386.80099 2.03999 0.96001 rf
95.201 407.681 2.03999 -0.96001 rf
95.201 387.761 2.03999 18.96001 rf
95.201 405.761 2.03999 0.96001 rf
95.201 408.28101 2.03999 -0.96001 rf
95.201 406.72099 2.03999 0.60001 rf
95.201 410.681 2.03999 0.96001 re
f* 
95.201 413.561 2.03999 -0.96001 re
f* 
95.201 411.64101 2.03999 0.96001 re
f* 
95.201 415.961 2.03999 0.96001 re
f* 
95.201 418.841 2.03999 -0.96001 re
f* 
95.201 416.92101 2.03999 0.96001 re
f* 
95.201 421.241 2.03999 0.96001 rf
95.201 423.64101 2.03999 -0.96001 rf
95.201 422.201 2.03999 0.48 rf
96.161 432.041 m
95.80099 431.92101 l
95.44099 431.681 l
95.321 431.44099 l
95.201 430.961 l
95.44099 430.241 l
96.161 430.00101 l
96.64101 430.121 l
96.881 430.241 l
97.121 430.601 l
97.241 430.961 l
97.121 431.44099 l
96.64101 431.92101 l
96.161 432.041 l
f* 
95.92101 429.64101 m
93.28101 431.201 l
92.92101 431.321 l
93.041 431.681 l
95.681 440.80099 l
96.161 442.481 l
96.64101 440.80099 l
99.28101 431.681 l
99.401 431.44099 l
99.041 431.201 l
98.321 431.44099 l
95.681 440.561 l
96.64101 440.80099 l
96.64101 440.561 l
94.00101 431.44099 l
93.041 431.681 l
93.761 432.041 l
96.401 430.481 l
f 
99.041 431.201 m
96.401 429.64101 l
96.161 429.521 l
95.92101 429.64101 l
95.92101 430.481 l
98.561 432.041 l
f 
96.161 430.00101 m
93.521 431.561 l
96.161 440.681 l
98.80099 431.561 l
f* 
95.201 422.561 2.03999 0.96001 rf
95.201 431.92101 2.03999 -0.96001 rf
95.201 423.521 2.03999 7.44 rf
96.161 232.961 m
95.80099 232.961 l
95.44099 232.72099 l
95.201 232.00101 l
95.44099 231.28101 l
95.80099 231.041 l
96.64101 231.041 l
96.881 231.28101 l
97.121 231.64101 l
97.241 232.00101 l
97.121 232.36099 l
96.881 232.72099 l
96.64101 232.961 l
96.161 232.961 l
f* 
95.92101 230.561 m
93.28101 232.121 l
92.92101 232.121 l
93.041 232.601 l
96.161 243.521 l
99.28101 232.601 l
99.401 232.36099 l
99.041 232.121 l
98.321 232.36099 l
95.681 241.601 l
96.64101 241.841 l
96.64101 241.601 l
94.00101 232.36099 l
93.041 232.601 l
93.761 232.961 l
96.401 231.401 l
f 
99.041 232.121 m
96.401 230.561 l
96.161 230.44099 l
95.92101 230.561 l
95.92101 231.401 l
98.561 232.961 l
f 
96.161 230.92101 m
93.521 232.481 l
96.161 241.72099 l
98.80099 232.481 l
f* 
95.201 207.041 2.03999 0.96001 rf
95.201 232.961 2.03999 -0.96001 rf
95.201 208.00101 2.03999 24 rf
96.161 512.561 m
95.80099 512.44099 l
95.44099 512.201 l
95.201 511.481 l
95.44099 510.761 l
95.80099 510.64101 l
96.161 510.521 l
96.64101 510.64101 l
96.881 510.761 l
97.121 511.121 l
97.241 511.481 l
97.121 511.841 l
96.881 512.201 l
96.64101 512.44099 l
96.161 512.561 l
f* 
95.92101 510.161 m
93.28101 511.601 l
92.92101 511.601 l
93.041 512.08099 l
96.161 523.00101 l
99.28101 512.08099 l
99.401 511.841 l
99.041 511.601 l
98.321 511.841 l
95.681 521.08099 l
96.64101 521.321 l
96.64101 521.08099 l
94.00101 511.841 l
93.041 512.08099 l
93.761 512.44099 l
96.401 511.00101 l
f 
99.041 511.601 m
96.401 510.161 l
96.161 510.041 l
95.92101 510.161 l
95.92101 511.00101 l
98.561 512.44099 l
f 
96.161 510.521 m
93.521 511.961 l
96.161 521.201 l
98.80099 511.961 l
f* 
95.201 486.521 2.03999 0.96001 rf
95.201 512.44099 2.03999 -0.96001 rf
95.201 487.481 2.03999 24 rf
1 1 1 scn
82.72099 356.201 m
82.961 353.44099 l
83.80099 350.92101 l
85.00101 348.64101 l
86.681 346.601 l
88.601 344.92101 l
91.00101 343.72099 l
93.521 342.881 l
96.161 342.64101 l
98.92101 342.881 l
101.44099 343.72099 l
103.72099 344.92101 l
105.761 346.601 l
107.44099 348.64101 l
108.64101 350.92101 l
109.481 353.44099 l
109.72099 356.201 l
109.72099 374.201 l
109.481 376.961 l
108.64101 379.481 l
107.44099 381.761 l
105.761 383.80099 l
103.72099 385.36099 l
101.44099 386.681 l
98.92101 387.401 l
96.161 387.761 l
93.521 387.401 l
91.00101 386.681 l
88.601 385.36099 l
86.681 383.80099 l
85.00101 381.761 l
83.80099 379.481 l
82.961 376.961 l
82.72099 374.201 l
82.72099 356.201 l
f* 
0 0 0 scn
82.961 356.201 m
83.201 353.44099 l
83.201 353.561 l
84.041 351.041 l
85.241 348.761 l
85.241 348.881 l
86.92101 346.841 l
88.841 345.161 l
88.72099 345.161 l
91.121 343.961 l
93.64101 343.121 l
93.521 343.121 l
96.161 342.881 l
98.92101 343.121 l
101.44099 343.961 l
101.321 343.961 l
103.601 345.161 l
105.64101 346.841 l
107.321 348.881 l
107.201 348.761 l
108.401 351.041 l
109.241 353.561 l
109.241 353.44099 l
109.481 356.201 l
109.481 374.201 l
109.241 376.961 l
108.401 379.481 l
108.401 379.36099 l
107.201 381.64101 l
107.321 381.64101 l
105.64101 383.681 l
103.601 385.241 l
101.321 386.561 l
101.44099 386.44099 l
98.92101 387.161 l
96.161 387.521 l
96.28101 387.521 l
93.64101 387.161 l
91.121 386.44099 l
88.72099 385.121 l
88.841 385.241 l
86.92101 383.681 l
85.241 381.64101 l
84.041 379.36099 l
84.041 379.481 l
83.201 376.961 l
82.961 374.201 l
82.961 356.201 l
82.481 356.201 l
82.481 374.201 l
82.72099 376.961 l
82.72099 377.08099 l
83.561 379.601 l
84.761 381.881 l
84.881 382.00101 l
86.561 384.041 l
88.481 385.601 l
90.881 386.92101 l
91.00101 386.92101 l
93.521 387.64101 l
96.161 388.00101 l
96.28101 388.00101 l
99.041 387.64101 l
101.561 386.92101 l
103.841 385.601 l
105.881 384.041 l
106.00101 384.041 l
107.681 382.00101 l
107.681 381.881 l
108.881 379.601 l
109.72099 377.08099 l
109.72099 376.961 l
109.961 374.201 l
109.961 356.201 l
109.72099 353.44099 l
108.881 350.92101 l
108.881 350.80099 l
107.681 348.521 l
106.00101 346.481 l
103.961 344.80099 l
103.841 344.681 l
101.561 343.481 l
99.041 342.64101 l
98.92101 342.64101 l
96.161 342.401 l
93.521 342.64101 l
91.00101 343.481 l
90.881 343.481 l
88.481 344.681 l
88.481 344.80099 l
86.561 346.481 l
84.881 348.521 l
84.761 348.521 l
83.561 350.80099 l
83.561 350.92101 l
82.72099 353.44099 l
82.481 356.201 l
f 
82.961 356.201 m
82.481 356.201 l
f 
BT
/N71 1 Tf
0 11.16 -11.16 0 101.20061 349.12061 Tm
-0.0433 Tc
0 Tw
(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 
ET
1 1 1 scn
82.72099 257.201 m
82.961 254.44099 l
83.80099 251.92101 l
85.00101 249.64101 l
86.681 247.601 l
88.601 245.92101 l
91.00101 244.72099 l
93.521 243.881 l
96.161 243.64101 l
98.92101 243.881 l
101.44099 244.72099 l
103.72099 245.92101 l
105.761 247.601 l
107.44099 249.64101 l
108.64101 251.92101 l
109.481 254.44099 l
109.72099 257.201 l
109.72099 275.201 l
109.481 277.961 l
108.64101 280.481 l
107.44099 282.761 l
105.761 284.80099 l
103.72099 286.36099 l
101.44099 287.681 l
98.92101 288.401 l
96.161 288.761 l
93.521 288.401 l
91.00101 287.681 l
88.601 286.36099 l
86.681 284.80099 l
85.00101 282.761 l
83.80099 280.481 l
82.961 277.961 l
82.72099 275.201 l
82.72099 257.201 l
f* 
0 0 0 scn
82.961 257.201 m
83.201 254.44099 l
83.201 254.561 l
84.041 252.041 l
85.241 249.761 l
85.241 249.881 l
86.92101 247.841 l
88.841 246.161 l
88.72099 246.161 l
91.121 244.961 l
93.64101 244.121 l
93.521 244.121 l
96.161 243.881 l
98.92101 244.121 l
101.44099 244.961 l
101.321 244.961 l
103.601 246.161 l
105.64101 247.841 l
107.321 249.881 l
107.201 249.761 l
108.401 252.041 l
109.241 254.561 l
109.241 254.44099 l
109.481 257.201 l
109.481 275.201 l
109.241 277.961 l
108.401 280.481 l
108.401 280.36099 l
107.201 282.64101 l
107.321 282.64101 l
105.64101 284.681 l
103.601 286.241 l
101.321 287.561 l
101.44099 287.44099 l
98.92101 288.161 l
96.161 288.521 l
96.28101 288.521 l
93.64101 288.161 l
91.121 287.44099 l
88.72099 286.121 l
88.841 286.241 l
86.92101 284.681 l
85.241 282.64101 l
84.041 280.36099 l
84.041 280.481 l
83.201 277.961 l
82.961 275.201 l
82.961 257.201 l
82.481 257.201 l
82.481 275.201 l
82.72099 277.961 l
82.72099 278.08099 l
83.561 280.601 l
84.761 282.881 l
84.881 283.00101 l
86.561 285.041 l
88.481 286.601 l
90.881 287.92101 l
91.00101 287.92101 l
93.521 288.64101 l
96.161 289.00101 l
96.28101 289.00101 l
99.041 288.64101 l
101.561 287.92101 l
103.841 286.601 l
105.881 285.041 l
106.00101 285.041 l
107.681 283.00101 l
107.681 282.881 l
108.881 280.601 l
109.72099 278.08099 l
109.72099 277.961 l
109.961 275.201 l
109.961 257.201 l
109.72099 254.44099 l
108.881 251.92101 l
108.881 251.80099 l
107.681 249.521 l
106.00101 247.481 l
103.961 245.80099 l
103.841 245.681 l
101.561 244.481 l
99.041 243.64101 l
98.92101 243.64101 l
96.161 243.401 l
93.521 243.64101 l
91.00101 244.481 l
90.881 244.481 l
88.481 245.681 l
88.481 245.80099 l
86.561 247.481 l
84.881 249.521 l
84.761 249.521 l
83.561 251.80099 l
83.561 251.92101 l
82.72099 254.44099 l
82.481 257.201 l
f 
82.961 257.201 m
82.481 257.201 l
f 
BT
0 11.16 -11.16 0 101.20061 250.12061 Tm
(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 
ET
1 1 1 scn
82.72099 455.201 m
82.961 452.44099 l
83.80099 449.92101 l
85.00101 447.64101 l
86.681 445.601 l
88.601 443.92101 l
91.00101 442.72099 l
93.521 442.00101 l
96.161 441.64101 l
98.92101 442.00101 l
101.44099 442.72099 l
103.72099 443.92101 l
105.761 445.601 l
107.44099 447.64101 l
108.64101 449.92101 l
109.481 452.44099 l
109.72099 455.201 l
109.72099 473.201 l
109.481 475.961 l
108.64101 478.481 l
107.44099 480.761 l
105.761 482.80099 l
103.72099 484.36099 l
101.44099 485.681 l
98.92101 486.401 l
96.161 486.761 l
93.521 486.401 l
91.00101 485.681 l
88.601 484.36099 l
86.681 482.80099 l
85.00101 480.761 l
83.80099 478.481 l
82.961 475.961 l
82.72099 473.201 l
82.72099 455.201 l
f* 
0 0 0 scn
82.961 455.201 m
83.201 452.44099 l
83.201 452.561 l
84.041 450.041 l
85.241 447.761 l
85.241 447.881 l
86.92101 445.841 l
88.841 444.161 l
88.72099 444.161 l
91.121 442.961 l
93.64101 442.241 l
96.28101 441.881 l
96.161 441.881 l
98.92101 442.241 l
101.44099 442.961 l
101.321 442.961 l
103.601 444.161 l
105.64101 445.841 l
107.321 447.881 l
107.201 447.761 l
108.401 450.041 l
109.241 452.561 l
109.241 452.44099 l
109.481 455.201 l
109.481 473.201 l
109.241 475.961 l
108.401 478.481 l
108.401 478.36099 l
107.201 480.64101 l
107.321 480.64101 l
105.64101 482.681 l
103.601 484.241 l
101.321 485.561 l
101.44099 485.44099 l
98.92101 486.161 l
96.161 486.521 l
96.28101 486.521 l
93.64101 486.161 l
91.121 485.44099 l
88.72099 484.121 l
88.841 484.241 l
86.92101 482.681 l
85.241 480.64101 l
84.041 478.36099 l
84.041 478.481 l
83.201 475.961 l
82.961 473.201 l
82.961 455.201 l
82.481 455.201 l
82.481 473.201 l
82.72099 475.961 l
82.72099 476.08099 l
83.561 478.601 l
84.761 480.881 l
84.881 481.00101 l
86.561 483.041 l
88.481 484.601 l
90.881 485.92101 l
91.00101 485.92101 l
93.521 486.64101 l
96.161 487.00101 l
96.28101 487.00101 l
99.041 486.64101 l
101.561 485.92101 l
103.841 484.601 l
105.881 483.041 l
106.00101 483.041 l
107.681 481.00101 l
107.681 480.881 l
108.881 478.601 l
109.72099 476.08099 l
109.72099 475.961 l
109.961 473.201 l
109.961 455.201 l
109.72099 452.44099 l
108.881 449.92101 l
108.881 449.80099 l
107.681 447.521 l
106.00101 445.481 l
103.961 443.80099 l
103.841 443.681 l
101.561 442.481 l
99.041 441.761 l
96.28101 441.401 l
96.161 441.401 l
93.521 441.761 l
91.00101 442.481 l
90.881 442.481 l
88.481 443.681 l
88.481 443.80099 l
86.561 445.481 l
84.881 447.521 l
84.761 447.521 l
83.561 449.80099 l
83.561 449.92101 l
82.72099 452.44099 l
82.481 455.201 l
f 
82.961 455.201 m
82.481 455.201 l
f 
BT
0 11.16 -11.16 0 101.20061 448.12061 Tm
(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2803 94 a(\(a\))e(A)h(Stream.)2136 950 y
@beginspecial 43 @llx 183 @lly 324 @urx 302 @ury 2160
@rwi @setspecial
%%BeginDocument: basic-splitjoin.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725163731)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 43 183 324 302
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

43 183 moveto
324 183 lineto
324 302 lineto
43 302 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font GCMMPK+Arial
11 dict begin
/FontName /GCMMPK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GCMMPK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N71/GCMMPK+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
43 183 281 119 re W n
[ 0 -1 1 0 -140 345 ] concat
/N62 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N83 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N62 /ColorSpace findRes cs
0 0 0 scn
/N83 /ExtGState findRes gs
1 i
118.72099 378.521 m
118.481 378.28101 l
118.36099 377.80099 l
118.36099 377.44099 l
118.601 377.08099 l
118.841 376.841 l
119.201 376.72099 l
119.681 376.841 l
120.041 376.961 l
120.28101 377.321 l
120.28101 378.041 l
120.161 378.401 l
119.80099 378.64101 l
119.44099 378.761 l
119.08099 378.761 l
118.72099 378.521 l
f* 
120.041 376.481 m
117.041 376.00101 l
116.80099 375.761 l
116.561 376.241 l
112.601 385.00101 l
111.881 386.681 l
113.321 385.601 l
121.241 380.201 l
121.481 380.08099 l
121.36099 379.72099 l
120.761 379.481 l
112.841 384.881 l
113.321 385.601 l
113.561 385.481 l
117.521 376.72099 l
116.561 376.241 l
116.92101 376.961 l
119.92101 377.44099 l
f 
121.36099 379.72099 m
120.401 376.841 l
120.401 376.601 l
120.041 376.481 l
119.561 377.201 l
120.521 380.08099 l
f 
120.041 376.961 m
117.041 376.481 l
113.08099 385.241 l
121.00101 379.841 l
f* 
120.161 378.521 m
119.561 379.241 l
118.00101 377.92101 l
118.601 377.201 l
f 
147.041 346.121 m
147.64101 345.401 l
146.08099 344.08099 l
145.481 344.80099 l
f 
120.161 378.521 m
118.601 377.201 l
145.481 344.80099 l
147.041 346.121 l
f 
85.00101 379.00101 m
84.64101 379.241 l
84.28101 379.241 l
83.92101 379.121 l
83.561 378.881 l
83.321 378.521 l
83.321 378.161 l
83.44099 377.80099 l
83.681 377.44099 l
84.041 377.321 l
84.761 377.321 l
85.121 377.681 l
85.241 377.92101 l
85.36099 378.401 l
85.241 378.761 l
85.00101 379.00101 l
f* 
83.321 377.321 m
82.241 380.201 l
82.00101 380.561 l
82.36099 380.681 l
90.28101 386.08099 l
91.72099 387.161 l
91.00101 385.481 l
87.161 376.72099 l
87.041 376.481 l
86.681 376.481 l
86.201 377.201 l
90.041 385.961 l
91.00101 385.481 l
90.761 385.36099 l
82.841 379.961 l
82.36099 380.681 l
83.08099 380.561 l
84.161 377.681 l
f 
86.681 376.481 m
83.681 376.961 l
83.321 377.08099 l
83.321 377.321 l
83.80099 377.92101 l
86.80099 377.44099 l
f 
83.681 377.44099 m
82.601 380.321 l
90.521 385.72099 l
86.681 376.961 l
f* 
85.121 377.681 m
85.72099 378.401 l
84.161 379.72099 l
83.561 379.00101 l
f 
58.36099 345.401 m
57.761 344.681 l
56.201 346.00101 l
56.80099 346.72099 l
f 
85.121 377.681 m
83.561 379.00101 l
56.80099 346.72099 l
58.36099 345.401 l
f 
140.92101 292.601 m
140.681 292.72099 l
140.201 292.841 l
139.841 292.72099 l
139.601 292.481 l
139.36099 292.121 l
139.36099 291.64101 l
139.481 291.28101 l
139.72099 291.041 l
140.08099 290.80099 l
140.44099 290.80099 l
140.80099 290.92101 l
141.161 291.161 l
141.28101 291.521 l
141.28101 292.241 l
140.92101 292.601 l
f* 
139.36099 290.92101 m
138.28101 293.80099 l
138.041 294.161 l
138.401 294.28101 l
146.321 299.681 l
147.761 300.761 l
147.041 299.08099 l
143.201 290.201 l
143.08099 289.961 l
142.72099 289.961 l
142.241 290.681 l
146.08099 299.561 l
147.041 299.08099 l
146.80099 298.961 l
138.881 293.561 l
138.401 294.28101 l
139.121 294.161 l
140.201 291.28101 l
f 
142.72099 289.961 m
139.72099 290.561 l
139.36099 290.681 l
139.36099 290.92101 l
139.841 291.521 l
142.841 290.92101 l
f 
139.72099 291.041 m
138.64101 293.92101 l
146.561 299.321 l
142.72099 290.44099 l
f* 
112.72099 260.201 m
112.121 259.481 l
113.681 258.161 l
114.28101 258.881 l
f 
139.601 292.481 m
140.201 293.201 l
141.761 291.881 l
141.161 291.161 l
f 
112.72099 260.201 m
114.28101 258.881 l
141.161 291.161 l
139.601 292.481 l
f 
65.681 292.00101 m
65.44099 291.761 l
65.321 291.401 l
65.561 290.681 l
65.92101 290.44099 l
66.28101 290.321 l
66.64101 290.321 l
67.00101 290.561 l
67.241 290.80099 l
67.36099 291.161 l
67.121 291.881 l
66.761 292.121 l
66.401 292.241 l
66.041 292.241 l
65.681 292.00101 l
f* 
67.00101 290.08099 m
64.00101 289.481 l
63.64101 289.36099 l
63.521 289.72099 l
59.681 298.481 l
58.961 300.161 l
60.401 299.08099 l
68.321 293.681 l
68.561 293.561 l
68.44099 293.201 l
67.841 292.961 l
59.92101 298.36099 l
60.401 299.08099 l
60.64101 298.961 l
64.481 290.201 l
63.521 289.72099 l
63.881 290.44099 l
66.881 291.041 l
f 
68.44099 293.201 m
67.36099 290.44099 l
67.36099 290.201 l
67.00101 290.08099 l
66.521 290.80099 l
67.601 293.561 l
f 
67.00101 290.561 m
64.00101 289.961 l
60.161 298.72099 l
68.08099 293.321 l
f* 
92.44099 258.401 m
93.041 257.681 l
94.601 259.00101 l
94.00101 259.72099 l
f 
65.681 290.681 m
65.08099 291.401 l
66.64101 292.72099 l
67.241 292.00101 l
f 
92.44099 258.401 m
94.00101 259.72099 l
67.241 292.00101 l
65.681 290.681 l
f 
100.72099 426.041 2.03999 0.96001 rf
100.72099 463.481 2.03999 -0.96001 rf
100.72099 427.00101 2.03999 35.52 rf
102.761 209.44099 m
102.28101 209.44099 l
102.041 209.201 l
101.80099 208.841 l
101.681 208.481 l
101.80099 208.121 l
102.041 207.761 l
102.28101 207.521 l
103.121 207.521 l
103.36099 207.761 l
103.601 208.121 l
103.72099 208.481 l
103.601 208.841 l
103.36099 209.201 l
103.121 209.44099 l
102.761 209.44099 l
f* 
102.521 207.161 m
99.881 208.601 l
99.521 208.601 l
99.64101 209.08099 l
102.761 220.00101 l
105.881 209.08099 l
106.00101 208.841 l
105.64101 208.601 l
104.92101 208.841 l
102.28101 218.08099 l
103.241 218.321 l
103.241 218.08099 l
100.601 208.841 l
99.64101 209.08099 l
100.36099 209.44099 l
103.00101 208.00101 l
f 
105.64101 208.601 m
103.00101 207.161 l
102.761 207.041 l
102.521 207.161 l
102.521 208.00101 l
105.161 209.44099 l
f 
102.761 207.521 m
100.121 208.961 l
102.761 218.201 l
105.401 208.961 l
f* 
101.80099 183.521 2.03999 0.96001 rf
101.80099 209.44099 2.03999 -0.96001 rf
101.80099 184.481 2.03999 24 rf
1 1 1 scn
134.201 314.201 m
134.44099 311.44099 l
135.28101 308.92101 l
136.481 306.64101 l
138.161 304.601 l
140.201 302.92101 l
142.481 301.72099 l
145.00101 300.881 l
147.761 300.64101 l
150.401 300.881 l
152.92101 301.72099 l
155.201 302.92101 l
157.241 304.601 l
158.92101 306.64101 l
160.121 308.92101 l
160.961 311.44099 l
161.201 314.201 l
161.201 332.201 l
160.961 334.961 l
160.121 337.481 l
158.92101 339.761 l
157.241 341.80099 l
155.201 343.36099 l
152.92101 344.681 l
150.401 345.401 l
147.761 345.761 l
145.00101 345.401 l
142.481 344.681 l
140.201 343.36099 l
138.161 341.80099 l
136.481 339.761 l
135.28101 337.481 l
134.44099 334.961 l
134.201 332.201 l
134.201 314.201 l
f* 
0 0 0 scn
134.44099 314.201 m
134.681 311.44099 l
134.681 311.561 l
135.521 309.041 l
136.72099 306.761 l
136.72099 306.881 l
138.401 304.841 l
140.44099 303.161 l
140.321 303.161 l
142.601 301.961 l
145.121 301.121 l
145.00101 301.121 l
147.761 300.881 l
150.401 301.121 l
152.92101 301.961 l
152.80099 301.961 l
155.08099 303.161 l
157.121 304.841 l
158.80099 306.881 l
158.681 306.761 l
159.881 309.041 l
160.72099 311.561 l
160.72099 311.44099 l
160.961 314.201 l
160.961 332.201 l
160.72099 334.961 l
159.881 337.481 l
159.881 337.36099 l
158.681 339.64101 l
158.80099 339.64101 l
157.121 341.681 l
155.08099 343.241 l
152.80099 344.561 l
152.92101 344.44099 l
150.401 345.161 l
147.761 345.521 l
147.881 345.521 l
145.121 345.161 l
142.601 344.44099 l
142.601 344.561 l
140.321 343.241 l
138.28101 341.681 l
138.401 341.681 l
136.72099 339.64101 l
135.521 337.36099 l
135.521 337.481 l
134.681 334.961 l
134.44099 332.201 l
134.44099 314.201 l
133.961 314.201 l
133.961 332.201 l
134.201 334.961 l
134.201 335.08099 l
135.041 337.601 l
136.241 339.881 l
136.36099 340.00101 l
138.041 342.041 l
140.08099 343.601 l
142.36099 344.92101 l
142.481 344.92101 l
145.00101 345.64101 l
147.761 346.00101 l
147.881 346.00101 l
150.521 345.64101 l
153.041 344.92101 l
155.321 343.601 l
157.36099 342.041 l
157.481 342.041 l
159.161 340.00101 l
159.161 339.881 l
160.36099 337.601 l
161.201 335.08099 l
161.201 334.961 l
161.44099 332.201 l
161.44099 314.201 l
161.201 311.44099 l
160.36099 308.92101 l
160.36099 308.80099 l
159.161 306.521 l
157.481 304.481 l
155.44099 302.80099 l
155.321 302.681 l
153.041 301.481 l
150.521 300.64101 l
150.401 300.64101 l
147.761 300.401 l
145.00101 300.64101 l
142.481 301.481 l
142.36099 301.481 l
140.08099 302.681 l
140.08099 302.80099 l
138.041 304.481 l
136.36099 306.521 l
136.241 306.521 l
135.041 308.80099 l
135.041 308.92101 l
134.201 311.44099 l
133.961 314.201 l
f 
134.44099 314.201 m
133.961 314.201 l
f 
BT
/N71 1 Tf
0 11.16 -11.16 0 152.6806 307.12061 Tm
-0.0433 Tc
0 Tw
(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 
ET
1 1 1 scn
44.201 314.201 m
44.44099 311.44099 l
45.28101 308.92101 l
46.481 306.64101 l
48.161 304.601 l
50.201 302.92101 l
52.481 301.72099 l
55.00101 300.881 l
57.761 300.64101 l
60.401 300.881 l
62.92101 301.72099 l
65.201 302.92101 l
67.241 304.601 l
68.92101 306.64101 l
70.121 308.92101 l
70.961 311.44099 l
71.201 314.201 l
71.201 332.201 l
70.961 334.961 l
70.121 337.481 l
68.92101 339.761 l
67.241 341.80099 l
65.201 343.36099 l
62.92101 344.681 l
60.401 345.401 l
57.761 345.761 l
55.00101 345.401 l
52.481 344.681 l
50.201 343.36099 l
48.161 341.80099 l
46.481 339.761 l
45.28101 337.481 l
44.44099 334.961 l
44.201 332.201 l
44.201 314.201 l
f* 
0 0 0 scn
44.44099 314.201 m
44.681 311.44099 l
44.681 311.561 l
45.521 309.041 l
46.72099 306.761 l
46.72099 306.881 l
48.401 304.841 l
50.44099 303.161 l
50.321 303.161 l
52.601 301.961 l
55.121 301.121 l
55.00101 301.121 l
57.761 300.881 l
60.401 301.121 l
62.92101 301.961 l
62.80099 301.961 l
65.08099 303.161 l
67.121 304.841 l
68.80099 306.881 l
68.681 306.761 l
69.881 309.041 l
70.72099 311.561 l
70.72099 311.44099 l
70.961 314.201 l
70.961 332.201 l
70.72099 334.961 l
69.881 337.481 l
69.881 337.36099 l
68.681 339.64101 l
68.80099 339.64101 l
67.121 341.681 l
65.08099 343.241 l
62.80099 344.561 l
62.92101 344.44099 l
60.401 345.161 l
57.761 345.521 l
57.881 345.521 l
55.121 345.161 l
52.601 344.44099 l
52.601 344.561 l
50.321 343.241 l
48.28101 341.681 l
48.401 341.681 l
46.72099 339.64101 l
45.521 337.36099 l
45.521 337.481 l
44.681 334.961 l
44.44099 332.201 l
44.44099 314.201 l
43.961 314.201 l
43.961 332.201 l
44.201 334.961 l
44.201 335.08099 l
45.041 337.601 l
46.241 339.881 l
46.36099 340.00101 l
48.041 342.041 l
50.08099 343.601 l
52.36099 344.92101 l
52.481 344.92101 l
55.00101 345.64101 l
57.761 346.00101 l
57.881 346.00101 l
60.521 345.64101 l
63.041 344.92101 l
65.321 343.601 l
67.36099 342.041 l
67.481 342.041 l
69.161 340.00101 l
69.161 339.881 l
70.36099 337.601 l
71.201 335.08099 l
71.201 334.961 l
71.44099 332.201 l
71.44099 314.201 l
71.201 311.44099 l
70.36099 308.92101 l
70.36099 308.80099 l
69.161 306.521 l
67.481 304.481 l
65.44099 302.80099 l
65.321 302.681 l
63.041 301.481 l
60.521 300.64101 l
60.401 300.64101 l
57.761 300.401 l
55.00101 300.64101 l
52.481 301.481 l
52.36099 301.481 l
50.08099 302.681 l
50.08099 302.80099 l
48.041 304.481 l
46.36099 306.521 l
46.241 306.521 l
45.041 308.80099 l
45.041 308.92101 l
44.201 311.44099 l
43.961 314.201 l
f 
44.44099 314.201 m
43.961 314.201 l
f 
BT
0 11.16 -11.16 0 62.6806 307.12061 Tm
(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 
ET
1 1 1 scn
88.241 395.44099 m
88.481 392.681 l
89.321 390.161 l
90.521 387.881 l
92.201 385.841 l
94.121 384.161 l
96.401 382.961 l
99.041 382.121 l
101.681 381.881 l
104.44099 382.121 l
106.961 382.961 l
109.241 384.161 l
111.28101 385.841 l
112.841 387.881 l
114.161 390.161 l
114.881 392.681 l
115.241 395.44099 l
115.241 413.44099 l
114.881 416.201 l
114.161 418.72099 l
112.841 421.00101 l
111.28101 423.041 l
109.241 424.601 l
106.961 425.92101 l
104.44099 426.64101 l
101.681 427.00101 l
99.041 426.64101 l
96.401 425.92101 l
94.121 424.601 l
92.201 423.041 l
90.521 421.00101 l
89.321 418.72099 l
88.481 416.201 l
88.241 413.44099 l
88.241 395.44099 l
f* 
0 0 0 scn
88.481 395.44099 m
88.72099 392.681 l
88.72099 392.80099 l
89.561 390.28101 l
90.761 388.00101 l
90.761 388.121 l
92.44099 386.08099 l
94.36099 384.401 l
94.241 384.401 l
96.521 383.201 l
99.161 382.36099 l
99.041 382.36099 l
101.681 382.121 l
104.44099 382.36099 l
106.961 383.201 l
106.841 383.201 l
109.121 384.401 l
111.161 386.08099 l
111.161 385.961 l
112.72099 388.00101 l
114.041 390.28101 l
113.92101 390.28101 l
114.64101 392.80099 l
115.00101 395.561 l
115.00101 395.44099 l
115.00101 413.44099 l
114.64101 416.201 l
113.92101 418.72099 l
114.041 418.601 l
112.72099 420.881 l
111.161 422.92101 l
109.121 424.481 l
106.841 425.80099 l
106.961 425.681 l
104.44099 426.401 l
101.681 426.761 l
101.80099 426.761 l
99.161 426.401 l
96.521 425.681 l
96.521 425.80099 l
94.241 424.481 l
94.36099 424.481 l
92.44099 422.92101 l
90.761 420.881 l
89.561 418.601 l
89.561 418.72099 l
88.72099 416.201 l
88.481 413.44099 l
88.481 395.44099 l
88.00101 395.44099 l
88.00101 413.44099 l
88.241 416.201 l
88.241 416.321 l
89.08099 418.841 l
90.28101 421.121 l
90.401 421.241 l
92.08099 423.28101 l
94.00101 424.841 l
96.28101 426.161 l
96.401 426.161 l
99.041 426.881 l
101.681 427.241 l
101.80099 427.241 l
104.561 426.881 l
107.08099 426.161 l
109.36099 424.841 l
111.401 423.28101 l
111.521 423.161 l
113.08099 421.121 l
114.401 418.841 l
115.121 416.321 l
115.481 413.561 l
115.481 395.44099 l
115.121 392.681 l
114.401 390.161 l
114.401 390.041 l
113.08099 387.761 l
111.521 385.72099 l
109.481 384.041 l
109.36099 383.92101 l
107.08099 382.72099 l
104.561 381.881 l
104.44099 381.881 l
101.681 381.64101 l
99.041 381.881 l
96.401 382.72099 l
96.28101 382.72099 l
94.00101 383.92101 l
94.00101 384.041 l
92.08099 385.72099 l
90.401 387.761 l
90.28101 387.761 l
89.08099 390.041 l
89.08099 390.161 l
88.241 392.681 l
88.00101 395.44099 l
f 
88.481 395.44099 m
88.00101 395.44099 l
f 
BT
0 14.39999 -14.39999 0 107.6806 389.56059 Tm
0.0014 Tc
(Jo)Tj [7.60001 ]TJ (in)Tj 
ET
1 1 1 scn
89.681 232.601 m
89.92101 229.961 l
90.761 227.44099 l
91.961 225.161 l
93.64101 223.121 l
95.681 221.44099 l
97.961 220.241 l
100.481 219.401 l
103.241 219.161 l
105.881 219.401 l
108.521 220.241 l
110.80099 221.44099 l
112.72099 223.121 l
114.401 225.161 l
115.601 227.44099 l
116.44099 229.961 l
116.681 232.601 l
116.681 250.72099 l
116.44099 253.481 l
115.601 256.00101 l
114.401 258.28101 l
112.72099 260.201 l
110.80099 261.881 l
108.521 263.201 l
105.881 263.92101 l
103.241 264.161 l
100.481 263.92101 l
97.961 263.201 l
95.681 261.881 l
93.64101 260.201 l
91.961 258.28101 l
90.761 256.00101 l
89.92101 253.481 l
89.681 250.72099 l
89.681 232.601 l
f* 
0 0 0 scn
89.92101 232.601 m
90.161 229.961 l
90.161 230.08099 l
91.00101 227.561 l
92.201 225.28101 l
92.201 225.401 l
93.881 223.36099 l
95.92101 221.681 l
95.80099 221.681 l
98.08099 220.481 l
100.601 219.64101 l
100.481 219.64101 l
103.241 219.401 l
105.881 219.64101 l
108.521 220.481 l
108.401 220.481 l
110.681 221.681 l
112.601 223.36099 l
114.28101 225.401 l
114.161 225.28101 l
115.36099 227.561 l
116.201 230.08099 l
116.201 229.961 l
116.44099 232.601 l
116.44099 250.72099 l
116.201 253.481 l
115.36099 256.00101 l
115.36099 255.881 l
114.161 258.161 l
114.28101 258.161 l
112.601 260.08099 l
110.681 261.761 l
108.401 263.08099 l
108.521 262.961 l
105.881 263.681 l
103.241 263.92101 l
100.481 263.681 l
100.601 263.681 l
98.08099 262.961 l
98.08099 263.08099 l
95.80099 261.761 l
95.92101 261.761 l
93.881 260.08099 l
92.201 258.161 l
91.00101 255.881 l
91.00101 256.00101 l
90.161 253.481 l
89.92101 250.72099 l
89.92101 232.601 l
89.44099 232.601 l
89.44099 250.72099 l
89.681 253.481 l
89.681 253.601 l
90.521 256.121 l
91.72099 258.401 l
91.841 258.521 l
93.521 260.44099 l
95.561 262.121 l
97.841 263.44099 l
97.961 263.44099 l
100.481 264.161 l
103.241 264.401 l
105.881 264.161 l
106.00101 264.161 l
108.64101 263.44099 l
110.92101 262.121 l
111.041 262.121 l
112.961 260.44099 l
114.64101 258.521 l
114.64101 258.401 l
115.841 256.121 l
116.681 253.601 l
116.681 253.481 l
116.92101 250.72099 l
116.92101 232.601 l
116.681 229.961 l
115.841 227.44099 l
115.841 227.321 l
114.64101 225.041 l
112.961 223.00101 l
111.041 221.321 l
110.92101 221.201 l
108.64101 220.00101 l
106.00101 219.161 l
105.881 219.161 l
103.241 218.92101 l
100.481 219.161 l
97.961 220.00101 l
97.841 220.00101 l
95.561 221.201 l
95.561 221.321 l
93.521 223.00101 l
91.841 225.041 l
91.72099 225.041 l
90.521 227.321 l
90.521 227.44099 l
89.681 229.961 l
89.44099 232.601 l
f 
89.92101 232.601 m
89.44099 232.601 l
f 
BT
0 14.39999 -14.39999 0 109.12061 229.3606 Tm
0.00101 Tc
(Spl)Tj [6.5 ]TJ (i)Tj [-1.8 ]TJ (t)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2770 1037 a(\(b\))f(A)g(SplitJoin.)2136
1779 y @beginspecial 61 @llx 150 @lly 372 @urx 262 @ury
2160 @rwi @setspecial
%%BeginDocument: basic-feedback.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725164412)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 61 150 372 262
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

61 150 moveto
372 150 lineto
372 262 lineto
61 262 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font GIONOK+Arial
11 dict begin
/FontName /GIONOK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GIONOK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N71/GIONOK+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
61 150 311 112 re W n
[ 0 -1 1 0 -89 323 ] concat
/N62 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N83 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N62 /ColorSpace findRes cs
0 0 0 scn
/N83 /ExtGState findRes gs
1 i
159.161 189.041 m
158.80099 188.92101 l
158.321 188.44099 l
158.201 187.961 l
158.321 187.601 l
158.561 187.241 l
158.80099 187.121 l
159.161 187.00101 l
159.64101 187.121 l
159.881 187.241 l
160.121 187.601 l
160.241 187.961 l
160.121 188.44099 l
159.64101 188.92101 l
159.161 189.041 l
f* 
158.92101 186.64101 m
156.28101 188.08099 l
155.92101 188.08099 l
156.041 188.561 l
159.161 199.481 l
162.28101 188.561 l
162.401 188.321 l
162.041 188.08099 l
161.321 188.321 l
158.681 197.561 l
159.64101 197.80099 l
159.64101 197.561 l
157.00101 188.321 l
156.041 188.561 l
156.761 188.92101 l
159.401 187.481 l
f 
162.041 188.08099 m
159.401 186.64101 l
159.161 186.521 l
158.92101 186.64101 l
158.92101 187.481 l
161.561 188.92101 l
f 
159.161 187.00101 m
156.521 188.44099 l
159.161 197.681 l
161.80099 188.44099 l
f* 
158.201 150.041 2.03999 0.96001 rf
158.201 188.92101 2.03999 -0.96001 rf
158.201 151.00101 2.03999 36.96001 rf
159.161 276.041 m
158.80099 275.92101 l
158.321 275.44099 l
158.201 274.961 l
158.321 274.601 l
158.561 274.241 l
158.80099 274.121 l
159.161 274.00101 l
159.64101 274.121 l
159.881 274.241 l
160.121 274.601 l
160.241 274.961 l
160.121 275.44099 l
159.64101 275.92101 l
159.161 276.041 l
f* 
158.92101 273.64101 m
156.28101 275.08099 l
155.92101 275.08099 l
156.041 275.561 l
159.161 286.481 l
162.28101 275.561 l
162.401 275.321 l
162.041 275.08099 l
161.321 275.321 l
158.681 284.561 l
159.64101 284.80099 l
159.64101 284.561 l
157.00101 275.321 l
156.041 275.561 l
156.761 275.92101 l
159.401 274.481 l
f 
162.041 275.08099 m
159.401 273.64101 l
159.161 273.521 l
158.92101 273.64101 l
158.92101 274.481 l
161.561 275.92101 l
f 
159.161 274.00101 m
156.521 275.44099 l
159.161 284.681 l
161.80099 275.44099 l
f* 
158.201 243.041 2.03999 0.96001 rf
158.201 275.92101 2.03999 -0.96001 rf
158.201 244.00101 2.03999 30.96001 rf
158.201 417.64101 2.03999 0.96001 rf
158.201 460.481 2.03999 -0.96001 rf
158.201 418.601 2.03999 40.92 rf
1 1 1 scn
145.241 212.681 m
145.481 209.92101 l
146.321 207.401 l
147.521 205.121 l
149.201 203.08099 l
151.121 201.521 l
153.401 200.201 l
156.041 199.481 l
158.681 199.121 l
161.44099 199.481 l
163.961 200.201 l
166.241 201.521 l
168.28101 203.08099 l
169.961 205.121 l
171.161 207.401 l
171.881 209.92101 l
172.241 212.681 l
172.241 230.681 l
171.881 233.44099 l
171.161 235.961 l
169.961 238.241 l
168.28101 240.28101 l
166.241 241.961 l
163.961 243.161 l
161.44099 243.881 l
158.681 244.241 l
156.041 243.881 l
153.401 243.161 l
151.121 241.961 l
149.201 240.28101 l
147.521 238.241 l
146.321 235.961 l
145.481 233.44099 l
145.241 230.681 l
145.241 212.681 l
f* 
0 0 0 scn
145.481 212.681 m
145.72099 209.92101 l
145.72099 210.041 l
146.561 207.521 l
147.761 205.241 l
147.761 205.36099 l
149.44099 203.321 l
151.36099 201.761 l
151.241 201.761 l
153.521 200.44099 l
156.161 199.72099 l
158.80099 199.36099 l
158.681 199.36099 l
161.44099 199.72099 l
163.961 200.44099 l
163.841 200.44099 l
166.121 201.761 l
168.161 203.321 l
169.841 205.36099 l
169.72099 205.241 l
170.92101 207.521 l
171.64101 210.041 l
172.00101 212.80099 l
172.00101 212.681 l
172.00101 230.681 l
171.64101 233.44099 l
170.92101 235.961 l
170.92101 235.841 l
169.72099 238.121 l
169.841 238.121 l
168.161 240.161 l
166.121 241.841 l
166.121 241.72099 l
163.841 242.92101 l
163.961 242.92101 l
161.44099 243.64101 l
158.681 244.00101 l
158.80099 244.00101 l
156.161 243.64101 l
153.521 242.92101 l
151.241 241.72099 l
151.36099 241.841 l
149.44099 240.161 l
147.761 238.121 l
146.561 235.841 l
146.561 235.961 l
145.72099 233.44099 l
145.481 230.681 l
145.481 212.681 l
145.00101 212.681 l
145.00101 230.681 l
145.241 233.44099 l
145.241 233.561 l
146.08099 236.08099 l
147.28101 238.36099 l
147.401 238.481 l
149.08099 240.521 l
151.00101 242.201 l
153.28101 243.401 l
153.401 243.401 l
156.041 244.121 l
158.681 244.481 l
158.80099 244.481 l
161.561 244.121 l
164.08099 243.401 l
166.36099 242.201 l
166.481 242.201 l
168.521 240.521 l
170.201 238.481 l
170.201 238.36099 l
171.401 236.08099 l
172.121 233.561 l
172.481 230.80099 l
172.481 212.681 l
172.121 209.92101 l
171.401 207.401 l
171.401 207.28101 l
170.201 205.00101 l
168.521 202.961 l
168.401 202.961 l
166.36099 201.401 l
164.08099 200.08099 l
164.08099 199.961 l
161.561 199.241 l
158.80099 198.881 l
158.681 198.881 l
156.041 199.241 l
153.401 199.961 l
153.28101 200.08099 l
151.00101 201.401 l
149.08099 202.961 l
147.401 205.00101 l
147.28101 205.00101 l
146.08099 207.28101 l
146.08099 207.401 l
145.241 209.92101 l
145.00101 212.681 l
f 
145.481 212.681 m
145.00101 212.681 l
f 
BT
/N71 1 Tf
0 14.39999 -14.39999 0 162.7606 210.1606 Tm
0.0011 Tc
0 Tw
(Joi)Tj [6.60001 ]TJ (n)Tj 
ET
142.72099 193.841 m
142.481 194.08099 l
141.64101 194.08099 l
141.401 193.841 l
141.161 193.481 l
141.041 193.121 l
141.161 192.761 l
141.401 192.401 l
141.64101 192.161 l
142.481 192.161 l
142.72099 192.401 l
142.961 192.761 l
143.08099 193.121 l
142.961 193.481 l
142.72099 193.841 l
f* 
140.80099 192.28101 m
140.08099 195.28101 l
139.961 195.64101 l
140.321 195.881 l
148.72099 200.44099 l
150.28101 201.28101 l
149.44099 199.72099 l
144.761 191.44099 l
144.64101 191.201 l
144.161 191.201 l
143.80099 191.92101 l
148.481 200.201 l
149.44099 199.72099 l
149.201 199.481 l
140.80099 194.92101 l
140.321 195.881 l
141.041 195.521 l
141.761 192.521 l
f 
144.161 191.201 m
141.161 191.92101 l
140.92101 192.041 l
140.80099 192.28101 l
141.401 192.881 l
144.401 192.161 l
f 
141.28101 192.401 m
140.561 195.401 l
148.961 199.961 l
144.28101 191.681 l
f* 
142.72099 192.401 m
143.44099 193.121 l
142.00101 194.561 l
141.28101 193.841 l
f 
142.72099 192.401 m
123.881 173.44099 l
123.64101 173.201 l
123.161 173.201 l
122.44099 174.881 l
141.28101 193.841 l
f 
74.80099 175.241 48.36 -2.03999 rf
74.80099 288.521 2.03999 -0.96001 rf
74.80099 174.161 2.03999 113.39999 rf
1 1 1 scn
62.201 297.64101 m
62.44099 294.881 l
63.28101 292.36099 l
64.481 290.08099 l
66.161 288.161 l
68.201 286.481 l
70.481 285.28101 l
73.00101 284.44099 l
75.761 284.201 l
78.401 284.44099 l
80.92101 285.28101 l
83.201 286.481 l
85.241 288.161 l
86.92101 290.08099 l
88.121 292.36099 l
88.961 294.881 l
89.201 297.64101 l
89.201 315.761 l
88.961 318.401 l
88.121 320.92101 l
86.92101 323.201 l
85.241 325.241 l
83.201 326.92101 l
80.92101 328.121 l
78.401 328.961 l
75.761 329.201 l
73.00101 328.961 l
70.481 328.121 l
68.201 326.92101 l
66.161 325.241 l
64.481 323.201 l
63.28101 320.92101 l
62.44099 318.401 l
62.201 315.761 l
62.201 297.64101 l
f* 
0 0 0 scn
62.44099 297.64101 m
62.681 294.881 l
62.681 295.00101 l
63.521 292.481 l
64.72099 290.201 l
64.72099 290.321 l
66.401 288.401 l
68.44099 286.72099 l
68.321 286.72099 l
70.601 285.521 l
73.121 284.681 l
73.00101 284.681 l
75.761 284.44099 l
78.401 284.681 l
80.92101 285.521 l
80.80099 285.521 l
83.08099 286.72099 l
85.121 288.401 l
86.80099 290.321 l
86.681 290.201 l
87.881 292.481 l
88.72099 295.00101 l
88.72099 294.881 l
88.961 297.64101 l
88.961 315.761 l
88.72099 318.401 l
87.881 320.92101 l
87.881 320.80099 l
86.681 323.08099 l
86.80099 323.08099 l
85.121 325.121 l
83.08099 326.80099 l
83.08099 326.681 l
80.80099 327.881 l
80.92101 327.881 l
78.401 328.72099 l
75.761 328.961 l
73.00101 328.72099 l
73.121 328.72099 l
70.601 327.881 l
68.321 326.681 l
68.44099 326.80099 l
66.401 325.121 l
64.72099 323.08099 l
63.521 320.80099 l
63.521 320.92101 l
62.681 318.401 l
62.44099 315.761 l
62.44099 297.64101 l
61.961 297.64101 l
61.961 315.761 l
62.201 318.401 l
62.201 318.521 l
63.041 321.041 l
64.241 323.321 l
64.36099 323.44099 l
66.041 325.481 l
68.08099 327.161 l
70.36099 328.36099 l
70.481 328.36099 l
73.00101 329.201 l
75.761 329.44099 l
78.401 329.201 l
78.521 329.201 l
81.041 328.36099 l
83.321 327.161 l
83.44099 327.161 l
85.481 325.481 l
87.161 323.44099 l
87.161 323.321 l
88.36099 321.041 l
89.201 318.521 l
89.201 318.401 l
89.44099 315.761 l
89.44099 297.64101 l
89.201 294.881 l
88.36099 292.36099 l
88.36099 292.241 l
87.161 289.961 l
85.481 288.041 l
83.44099 286.36099 l
83.321 286.241 l
81.041 285.041 l
78.521 284.201 l
78.401 284.201 l
75.761 283.961 l
73.00101 284.201 l
70.481 285.041 l
70.36099 285.041 l
68.08099 286.241 l
68.08099 286.36099 l
66.041 288.041 l
64.36099 289.961 l
64.241 289.961 l
63.041 292.241 l
63.041 292.36099 l
62.201 294.881 l
61.961 297.64101 l
f 
62.44099 297.64101 m
61.961 297.64101 l
f 
BT
0 11.16 -11.16 0 78.7606 290.6806 Tm
0.0023 Tc
(S)Tj [45.60001 ]TJ (t)Tj [0.60001 ]TJ (ream)Tj 
ET
1 1 1 scn
145.72099 299.201 m
145.961 296.44099 l
146.80099 293.92101 l
148.00101 291.64101 l
149.681 289.601 l
151.601 287.92101 l
154.00101 286.72099 l
156.521 285.881 l
159.161 285.64101 l
161.92101 285.881 l
164.44099 286.72099 l
166.72099 287.92101 l
168.761 289.601 l
170.44099 291.64101 l
171.64101 293.92101 l
172.481 296.44099 l
172.72099 299.201 l
172.72099 317.201 l
172.481 319.961 l
171.64101 322.481 l
170.44099 324.761 l
168.761 326.80099 l
166.72099 328.36099 l
164.44099 329.681 l
161.92101 330.401 l
159.161 330.761 l
156.521 330.401 l
154.00101 329.681 l
151.601 328.36099 l
149.681 326.80099 l
148.00101 324.761 l
146.80099 322.481 l
145.961 319.961 l
145.72099 317.201 l
145.72099 299.201 l
f* 
0 0 0 scn
145.961 299.201 m
146.201 296.44099 l
146.201 296.561 l
147.041 294.041 l
148.241 291.761 l
148.241 291.881 l
149.92101 289.841 l
151.841 288.161 l
151.72099 288.161 l
154.121 286.961 l
156.64101 286.121 l
156.521 286.121 l
159.161 285.881 l
161.92101 286.121 l
164.44099 286.961 l
164.321 286.961 l
166.601 288.161 l
168.64101 289.841 l
170.321 291.881 l
170.201 291.761 l
171.401 294.041 l
172.241 296.561 l
172.241 296.44099 l
172.481 299.201 l
172.481 317.201 l
172.241 319.961 l
171.401 322.481 l
171.401 322.36099 l
170.201 324.64101 l
170.321 324.64101 l
168.64101 326.681 l
166.601 328.241 l
164.321 329.561 l
164.44099 329.44099 l
161.92101 330.161 l
159.161 330.521 l
159.28101 330.521 l
156.64101 330.161 l
154.121 329.44099 l
151.72099 328.121 l
151.841 328.241 l
149.92101 326.681 l
148.241 324.64101 l
147.041 322.36099 l
147.041 322.481 l
146.201 319.961 l
145.961 317.201 l
145.961 299.201 l
145.481 299.201 l
145.481 317.201 l
145.72099 319.961 l
145.72099 320.08099 l
146.561 322.601 l
147.761 324.881 l
147.881 325.00101 l
149.561 327.041 l
151.481 328.601 l
153.881 329.92101 l
154.00101 329.92101 l
156.521 330.64101 l
159.161 331.00101 l
159.28101 331.00101 l
162.041 330.64101 l
164.561 329.92101 l
166.841 328.601 l
168.881 327.041 l
169.00101 327.041 l
170.681 325.00101 l
170.681 324.881 l
171.881 322.601 l
172.72099 320.08099 l
172.72099 319.961 l
172.961 317.201 l
172.961 299.201 l
172.72099 296.44099 l
171.881 293.92101 l
171.881 293.80099 l
170.681 291.521 l
169.00101 289.481 l
166.961 287.80099 l
166.841 287.681 l
164.561 286.481 l
162.041 285.64101 l
161.92101 285.64101 l
159.161 285.401 l
156.521 285.64101 l
154.00101 286.481 l
153.881 286.481 l
151.481 287.681 l
151.481 287.80099 l
149.561 289.481 l
147.881 291.521 l
147.761 291.521 l
146.561 293.80099 l
146.561 293.92101 l
145.72099 296.44099 l
145.481 299.201 l
f 
145.961 299.201 m
145.481 299.201 l
f 
BT
0 11.16 -11.16 0 164.20061 292.12061 Tm
-0.0433 Tc
(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 
ET
1 1 1 scn
145.241 386.561 m
145.481 383.80099 l
146.321 381.28101 l
147.521 379.00101 l
149.201 376.961 l
151.121 375.401 l
153.401 374.08099 l
156.041 373.36099 l
158.681 373.00101 l
161.44099 373.36099 l
163.961 374.08099 l
166.241 375.401 l
168.28101 376.961 l
169.961 379.00101 l
171.161 381.28101 l
171.881 383.80099 l
172.241 386.561 l
172.241 404.561 l
171.881 407.321 l
171.161 409.841 l
169.961 412.121 l
168.28101 414.161 l
166.241 415.841 l
163.961 417.041 l
161.44099 417.761 l
158.681 418.121 l
156.041 417.761 l
153.401 417.041 l
151.121 415.841 l
149.201 414.161 l
147.521 412.121 l
146.321 409.841 l
145.481 407.321 l
145.241 404.561 l
145.241 386.561 l
f* 
0 0 0 scn
145.481 386.561 m
145.72099 383.80099 l
145.72099 383.92101 l
146.561 381.401 l
147.761 379.121 l
147.761 379.241 l
149.44099 377.201 l
151.36099 375.64101 l
151.241 375.64101 l
153.521 374.321 l
156.161 373.601 l
158.80099 373.241 l
158.681 373.241 l
161.44099 373.601 l
163.961 374.321 l
163.841 374.321 l
166.121 375.64101 l
168.161 377.201 l
169.841 379.241 l
169.72099 379.121 l
170.92101 381.401 l
171.64101 383.92101 l
172.00101 386.681 l
172.00101 386.561 l
172.00101 404.561 l
171.64101 407.321 l
170.92101 409.841 l
170.92101 409.72099 l
169.72099 412.00101 l
169.841 412.00101 l
168.161 414.041 l
166.121 415.72099 l
166.121 415.601 l
163.841 416.80099 l
163.961 416.80099 l
161.44099 417.521 l
158.681 417.881 l
158.80099 417.881 l
156.161 417.521 l
153.521 416.80099 l
151.241 415.601 l
151.36099 415.72099 l
149.44099 414.041 l
147.761 412.00101 l
146.561 409.72099 l
146.561 409.841 l
145.72099 407.321 l
145.481 404.561 l
145.481 386.561 l
145.00101 386.561 l
145.00101 404.561 l
145.241 407.321 l
145.241 407.44099 l
146.08099 409.961 l
147.28101 412.241 l
147.401 412.36099 l
149.08099 414.401 l
151.00101 416.08099 l
153.28101 417.28101 l
153.401 417.28101 l
156.041 418.00101 l
158.681 418.36099 l
158.80099 418.36099 l
161.561 418.00101 l
164.08099 417.28101 l
166.36099 416.08099 l
166.481 416.08099 l
168.521 414.401 l
170.201 412.36099 l
170.201 412.241 l
171.401 409.961 l
172.121 407.44099 l
172.481 404.681 l
172.481 386.561 l
172.121 383.80099 l
171.401 381.28101 l
171.401 381.161 l
170.201 378.881 l
168.521 376.841 l
168.401 376.841 l
166.36099 375.28101 l
164.08099 373.961 l
164.08099 373.841 l
161.561 373.121 l
158.80099 372.761 l
158.681 372.761 l
156.041 373.121 l
153.401 373.841 l
153.28101 373.961 l
151.00101 375.28101 l
149.08099 376.841 l
147.401 378.881 l
147.28101 378.881 l
146.08099 381.161 l
146.08099 381.28101 l
145.241 383.80099 l
145.00101 386.561 l
f 
145.481 386.561 m
145.00101 386.561 l
f 
BT
0 14.39999 -14.39999 0 162.7606 379.84061 Tm
0.00101 Tc
(Spl)Tj [6.5 ]TJ (i)Tj [-1.8 ]TJ (t)Tj 
ET
75.761 340.241 m
76.121 340.36099 l
76.36099 340.481 l
76.601 340.841 l
76.72099 341.201 l
76.601 341.681 l
76.121 342.161 l
75.761 342.28101 l
75.28101 342.161 l
74.80099 341.681 l
74.681 341.201 l
74.80099 340.841 l
75.041 340.481 l
75.28101 340.36099 l
75.761 340.241 l
f* 
76.00101 342.64101 m
78.64101 341.08099 l
79.00101 341.08099 l
78.881 340.601 l
76.241 331.36099 l
75.761 329.80099 l
75.28101 331.36099 l
72.521 340.601 l
72.401 340.841 l
72.761 341.08099 l
73.481 340.841 l
76.241 331.601 l
75.28101 331.36099 l
75.28101 331.601 l
77.92101 340.841 l
78.881 340.601 l
78.161 340.241 l
75.521 341.80099 l
f 
72.761 341.08099 m
75.521 342.64101 l
75.761 342.761 l
76.00101 342.64101 l
76.00101 341.80099 l
73.241 340.241 l
f 
75.761 342.28101 m
78.401 340.72099 l
75.761 331.481 l
73.00101 340.72099 l
f* 
149.44099 415.241 m
150.161 414.521 l
151.601 415.961 l
150.881 416.681 l
f 
149.44099 415.241 m
122.44099 442.36099 l
123.161 444.161 l
123.521 444.161 l
123.881 443.80099 l
150.881 416.681 l
f 
74.80099 444.161 48.36 -2.03999 rf
74.80099 341.201 2.03999 -0.96001 rf
74.80099 341.201 2.03999 101.88 rf
159.161 363.041 m
158.80099 362.92101 l
158.321 362.44099 l
158.201 361.961 l
158.321 361.601 l
158.561 361.241 l
158.80099 361.121 l
159.161 361.00101 l
159.64101 361.121 l
159.881 361.241 l
160.121 361.601 l
160.241 361.961 l
160.121 362.44099 l
159.64101 362.92101 l
159.161 363.041 l
f* 
158.92101 360.64101 m
156.28101 362.201 l
155.92101 362.321 l
156.041 362.681 l
158.681 371.80099 l
159.161 373.481 l
159.64101 371.80099 l
162.28101 362.681 l
162.401 362.44099 l
162.041 362.201 l
161.321 362.44099 l
158.681 371.561 l
159.64101 371.80099 l
159.64101 371.561 l
157.00101 362.44099 l
156.041 362.681 l
156.761 363.041 l
159.401 361.481 l
f 
162.041 362.201 m
159.401 360.64101 l
159.161 360.521 l
158.92101 360.64101 l
158.92101 361.481 l
161.561 363.041 l
f 
159.161 361.00101 m
156.521 362.561 l
159.161 371.681 l
161.80099 362.561 l
f* 
158.201 330.041 2.03999 0.96001 rf
158.201 362.92101 2.03999 -0.96001 rf
158.201 331.00101 2.03999 30.96001 rf
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2685 1866 a(\(c\))h(A)f(F)-6 b(eedbac)n(kLo)r(op.)2040
2107 y Fq(Figure)91 b(6:)161 b(Stream)91 b(structures)h(supp)r(orted)g
(b)n(y)2040 2194 y(StreaMIT.)2130 2427 y Fr(1.)38 b(WEIGHTED)p
2675 2427 V 28 w(R)n(OUND)p 2993 2427 V 25 w(R)n(OBIN\()p
Fj(i)3324 2435 y Fk(1)3358 2427 y Fr(,)d Fj(i)3440 2435
y Fk(2)3474 2427 y Fr(,)g Fj(:)13 b(:)h(:)f Fr(,)34 b
Fj(i)3714 2436 y Fi(k)3753 2427 y Fr(\),)h(whic)n(h)2227
2514 y(reads)25 b(the)g(\014rst)g Fj(i)2743 2522 y Fk(1)2803
2514 y Fr(data)g(items)g(from)g(the)g(\014rst)g(stream,)g(the)2227
2601 y(next)g Fj(i)2426 2609 y Fk(2)2486 2601 y Fr(data)h(items)f(to)h
(the)f(second)h(stream,)g(and)f(so)i(on.)2130 2749 y(2.)38
b(R)n(OUND)p 2522 2749 V 25 w(R)n(OBIN,)19 b(whic)n(h)h(is)h(just)f(a)g
(w)n(eigh)n(ted)g(round)g(robin)2227 2836 y(where)26
b(all)h(w)n(eigh)n(ts)f(are)g(1.)2130 2984 y(3.)38 b(COMBINE,)30
b(whic)n(h)g(reads)g(from)f(all)i(the)e(streams)g(in)h(par-)2227
3071 y(allel)35 b(and)d(com)n(bines)h(the)g(results)h(in)n(to)f(a)h
(structure.)56 b(The)2227 3158 y(structure)24 b(has)g(a)g(separate)h
(\014eld)f(for)h(eac)n(h)f(stream,)g(and)g(the)2227 3245
y(joiner)32 b(cannot)g(\014re)f(un)n(til)g(eac)n(h)h(\014eld)f(is)h
(\014lled)f(b)n(y)g(an)g(item)2227 3333 y(from)25 b(the)h(corresp)r
(onding)g(output)f(c)n(hannel.)2130 3480 y(4.)38 b(NULL,)d(whic)n(h)h
(means)f(that)h(all)h(of)f(the)g(parallel)h(comp)r(o-)2227
3567 y(nen)n(ts)21 b(are)h(sinks)f(and)g(there)h(is)g(no)f(output)g(to)
g(join)i(together.)2040 3802 y(The)17 b(splitter)h(and)f(joiner)h(t)n
(yp)r(e)e(are)i(sp)r(eci\014ed)f(with)h(calls)g(to)f
Ft(setSplitter)2040 3889 y Fr(and)g Ft(setJoiner)p Fr(,)k(resp)r(ectiv)
n(ely)c(\(see)h(Figure)g(5\);)i(the)d(parallel)i(streams)2040
3976 y(are)j(sp)r(eci\014ed)f(b)n(y)f(successiv)n(e)h(calls)i(to)e
Ft(add)p Fr(,)i(with)e(the)g Fj(i)p Fr('th)g(call)h(set-)2040
4063 y(ting)17 b(the)g Fj(i)p Fr('th)g(stream)g(in)g(the)g(SplitJoin)h
(.)31 b(Note)17 b(that)g(a)h(WEIGHTED)p 4107 4063 V 28
w(R)n(OUND)p 4425 4063 V 25 w(R)n(OBIN)2040 4151 y(can)31
b(function)g(as)h(an)f(exclusiv)n(e)g(selector)h(if)f(one)g(or)h(more)e
(of)i(the)2040 4238 y(w)n(eigh)n(ts)k(are)g(zero.)64
b(Also,)38 b(there)d(are)h(additional)g(splitters)g(and)2040
4325 y(joiners)27 b(that)d(w)n(e)i(plan)f(to)h(add)e(when)h(StreaMIT)h
(supp)r(orts)f(\014lters)2040 4412 y(with)h(dynamically)f(c)n(hanging)h
(rates,)h(including:)2130 4647 y(1.)38 b(TYPE)p 2449
4647 V 28 w(DISP)-6 b(A)g(TCH,)17 b(whic)n(h)h(sends)g(an)g(item)f(to)h
(one)g(of)h(m)n(ul-)2227 4734 y(tiple)26 b(streams)f(dep)r(ending)h(on)
f(its)h(t)n(yp)r(e.)2130 4882 y(2.)38 b(ANY,)31 b(whic)n(h)h(sends)g
(items)f(to)h(an)n(y)g(parallel)h(stream)f(that)2227
4969 y(has)21 b(space)g(on)f(its)h(input,)g(or)g(reads)g(items)f(from)g
(an)n(y)g(parallel)2227 5056 y(stream)25 b(that)h(has)g(output)e(a)n(v)
l(ailable.)2040 5290 y(The)f(last)g(con)n(trol)f(construct)h(pro)n
(vides)f(a)g(w)n(a)n(y)h(to)f(create)h(cycles)g(in)2040
5378 y(the)29 b(stream)g(graph:)43 b(the)29 b Ft(FeedbackLoop)p
Fr(.)48 b(It)29 b(con)n(tains)h(a)g(joiner,)1921 5627
y(4)p eop
%%Page: 5 5
5 4 bop -152 -111 a Fo(class)31 b(Fibonnacci)e(extends)h(FeedbackLoop)g
({)-59 -45 y(void)g(init\(\))g({)34 22 y(setDelay\(2\);)34
88 y(setJoiner\(WEIGHTED_ROUND_ROBIN\(0,1\)\);)34 154
y(setBody\(new)f(Filter\(\))h({)157 221 y(Channel)g(input)g(=)h(new)g
(IntChannel\(\);)157 287 y(Channel)f(output)g(=)h(new)f
(IntChannel\(\);)157 354 y(void)g(work\(\))h({)281 420
y(output.push\(input.peek\(0\)+input.peek\(1\)\);)281
486 y(input.pop\(\);)157 553 y(})34 619 y(}\);)34 686
y(setSplitter\(DUPLICATE\);)-59 752 y(})-59 885 y(int)f(initPath\(int)g
(index\))g({)34 951 y(return)g(index;)-59 1018 y(})-152
1084 y(})-67 1235 y Fq(Figure)f(7:)40 b Fn(A)27 b(F)-7
b(eedbac)n(kLo)r(op)27 b(v)n(ersion)g(of)f(Fib)r(onnacci.)-152
1397 y Fr(a)39 b(b)r(o)r(dy)e(stream,)k(a)d(splitter,)k(and)c(a)g(lo)r
(op)h(stream,)i(whic)n(h)d(are)-152 1484 y(set)i(with)g(calls)h(to)f
Ft(setJoiner)p Fr(,)46 b Ft(setBody)p Fr(,)f Ft(setSplitter)p
Fr(,)h(and)-152 1571 y Ft(setLoop)p Fr(,)25 b(resp)r(ectiv)n(ely)e
(\(see)g(Figure)g(7\).)34 b(The)23 b(splitters)g(and)f(join-)-152
1659 y(ers)k(can)g(b)r(e)g(an)n(y)f(of)h(those)g(for)h(SplitJoin,)f
(except)f(for)i(NULL.)-152 1833 y(The)e(feedbac)n(k)g(lo)r(op)h(has)f
(a)h(sp)r(ecial)g(seman)n(tics)f(when)g(the)f(stream)-152
1920 y(is)g(\014rst)f(starting)g(to)h(run.)33 b(Since)22
b(there)h(are)h(no)f(items)f(on)h(the)g(feed-)-152 2007
y(bac)n(k)j(path)g(at)h(\014rst,)g(the)f(stream)g(instead)h(inputs)e
(items)i(from)f(an)-152 2094 y Ft(initPath)k Fr(function)f(de\014ned)e
(b)n(y)g(the)h Ft(FeedbackLoop)p Fr(;)33 b Ft(initPath)-152
2182 y Fr(is)k(called)g(with)g(the)f(n)n(um)n(b)r(er)e(of)j(the)f(data)
g(item)g(that)g(is)g(b)r(eing)-152 2269 y(fabricated)29
b(\(starting)f(from)f(0\).)39 b(With)27 b(a)h(call)g(to)g
Ft(setDelay)h Fr(from)-152 2356 y(within)35 b(the)f Ft(init)i
Fr(function,)h(the)e(user)f(can)h(sp)r(ecify)g(ho)n(w)g(man)n(y)-152
2443 y(items)27 b(should)f(b)r(e)h(calculated)h(with)f
Ft(initPath)i Fr(b)r(efore)e(the)g(joiner)-152 2530 y(lo)r(oks)g(for)f
(data)g(items)g(from)f(the)g(feedbac)n(k)h(c)n(hannel.)-152
2705 y(Eviden)n(t)34 b(in)f(all)i(of)g(these)f(examples)f(is)i(another)
f(feature)g(of)h(the)-152 2792 y(StreaMIT)27 b(syn)n(tax:)33
b Fp(inlining)p Fr(.)g(The)26 b(de\014nition)g(of)g(an)n(y)f(stream)g
(or)-152 2879 y(\014lter)e(can)f(b)r(e)g(inlined)g(at)h(the)f(p)r(oin)n
(t)g(of)h(its)g(instan)n(tiation,)h(thereb)n(y)-152 2966
y(prev)n(en)n(ting)c(the)g(de\014nition)h(of)g(man)n(y)e(small)i
(classes)i(that)d(are)h(used)-152 3053 y(only)33 b(once,)i(and,)f
(moreo)n(v)n(er,)g(pro)n(viding)e(a)h(syn)n(tax)f(that)g(rev)n(eals)
-152 3140 y(the)d(hierarc)n(hical)i(structure)d(of)i(the)f(streams)g
(from)g(the)g(inden)n(ta-)-152 3228 y(tion)h(lev)n(el)f(of)h(the)f(co)r
(de.)45 b(In)28 b(our)i(Ja)n(v)l(a)f(syn)n(tax,)g(w)n(e)h(mak)n(e)e
(use)h(of)-152 3315 y(anon)n(ymous)c(classes)i(for)g(inlining)f([5].)
-152 3543 y Fm(3.2.2)90 b(Rationale)-152 3634 y Fr(StreaMIT)28
b(di\013ers)g(from)g(other)f(languages)i(in)f(that)f(it)h(imp)r(oses)f
(a)-152 3721 y(w)n(ell-de\014ned)d(structure)g(on)h(the)f(streams;)h
(all)g(stream)f(graphs)h(are)-152 3808 y(built)17 b(out)g(of)h(a)g
(hierarc)n(hical)g(comp)r(osition)g(of)g(Streams,)g(SplitJoins,)-152
3896 y(and)33 b(F)-6 b(eedbac)n(kLo)r(ops.)56 b(This)34
b(is)f(in)g(con)n(trast)h(to)f(other)g(en)n(viron-)-152
3983 y(men)n(ts,)38 b(whic)n(h)e(generally)h(regard)g(a)f(stream)g(as)h
(a)f(\015at)g(and)g(ar-)-152 4070 y(bitrary)f(net)n(w)n(ork)g(of)h
(\014lters)f(that)g(are)g(connected)g(b)n(y)f(c)n(hannels.)-152
4157 y(Ho)n(w)n(ev)n(er,)24 b(arbitrary)g(graphs)g(are)g(v)n(ery)f
(hard)g(for)h(the)f(compiler)h(to)-152 4244 y(analyze,)j(and)d(equally)
h(di\016cult)h(for)g(a)f(programmer)g(to)g(describ)r(e.)-152
4332 y(Most)35 b(programmers)d(either)i(resort)g(to)g(straigh)n(t-line)
g(co)r(de)g(that)-152 4419 y(links)c(one)g(\014lter)f(to)h(another)g
(\(thereb)n(y)e(making)h(it)h(v)n(ery)e(hard)i(to)-152
4506 y(visualize)36 b(the)d(stream)h(graph\),)j(or)e(using)f(an)g
(ad-ho)r(c)g(graphical)-152 4593 y(programming)29 b(en)n(vironmen)n(t)e
(that)i(is)h(a)n(wkw)n(ard)g(to)f(use)g(and)g(ad-)-152
4680 y(mits)c(no)h(go)r(o)r(d)h(textual)e(represen)n(tation.)-152
4855 y(In)18 b(con)n(trast,)i(StreaMIT)f(is)g(a)g(clean)g(textual)f
(represen)n(tation)h(that{)-152 4942 y(esp)r(ecially)j(with)f(inlined)g
(streams{mak)n(es)f(it)h(v)n(ery)e(easy)i(to)g(see)g(the)-152
5029 y(shap)r(e)28 b(of)h(the)e(computation)g(from)h(the)f(inden)n
(tation)h(lev)n(el)g(of)g(the)-152 5116 y(co)r(de.)57
b(The)34 b(comparison)f(of)h(StreaMIT's)g(structure)f(with)g(arbi-)-152
5203 y(trary)f(stream)f(graphs)h(could)g(b)r(e)f(lik)n(ened)h(to)f(the)
h(di\013erence)f(b)r(e-)-152 5290 y(t)n(w)n(een)17 b(structured)g(con)n
(trol)h(\015o)n(w)f(and)g(GOTO)g(statemen)n(ts.)31 b(Though)-152
5378 y(sometimes)g(the)f(structure)h(restricts)h(the)f(expressiv)n
(eness)g(of)h(the)2040 2069 y @beginspecial 69 @llx 71
@lly 428 @urx 514 @ury 2160 @rwi @setspecial
%%BeginDocument: portal-code.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010803210631)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 69 71 428 514
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

69 71 moveto
428 71 lineto
428 514 lineto
69 514 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
%%BeginResource: font PDFEGF+Courier-Bold
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/version (004.000) def
/FullName (Courier Bold) def
/FamilyName (Courier) def
/BaseFontName (Courier-Bold) def
/Weight (Bold) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -224 def
/UnderlineThickness 52 def
end def
/FontName /PDFEGF+Courier-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -113 -250 749 801 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 29 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -13 0 572 584 434 448 601 613 618 633 ] def
/OtherBlues [ 256 264 -183 -182 ] def
/FamilyBlues [ -14 0 572 585 434 448 782 803 626 626 ] def
/FamilyOtherBlues [ 236 243 344 344 -195 -193 ] def
/StdHW [ 93 ] def
/StdVW [ 93 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold true  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
11.625 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
93 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 38 dict dup begin
/.notdef 9 -| 68CCB9B776D9A12F95 |-
/parenleft 66 -| 68CCB9B776D9A12FAE68C1B6EF06BA280D9D0FAEF2E6C9C51282E117818B3D798467A62B
1CDED6B0F87FBC260CD921EE479F67F05748C2117DAB8D5D81D332709F2E |-
/parenright 69 -| 68CCB9B776D9A12FAE68C1B6EF1E4110A7371308F21C51FA10256A195D35DC21EF2B2681
EFED1C0BDE77CEEC408E9A75C5F2F63120835163704460FCA5B463B1394F0DA3
66 |-
/asterisk 72 -| 68CCB9B776D9A12F635F5A723082FE469DD77DB267AC8473C3749C7A33C8577988984846
E03E3BDD00DC9D0A42631F478482F72DB192A18D205E181DBC87C747EC96F6D0
587B6062 |-
/comma 34 -| 68CCB9B776D9A12FBC2C27AAB63CE023CFF952B94ACF21DB38616A7B963F2618221C |-
/period 43 -| 68CCB9B776D9A12FE4EBD9E21C954A6649B73477C4BFD35DFF8A05ED077CF49034D85294
09FA26C44BFD3A |-
/four 74 -| 68CCB9B776D9A12F10C2F098695C2A4E302DF684584204D85D5C3751B132B8A939FCBBD6
F148C2F8ECE551E0C1F746508E7D14221E2CBF553077D206D39CE0DAF4755309
3A5D21D966DE |-
/six 174 -| 68CCB9B776D9A12FE4FAF94A85149E3F1D6CC33286A3978C34B4DF1E52FCA96E9B750BCD
E543AB4DED74AA3FC1B4B1B8FF2CFBF3FE549C07B4088E005B8542B2A8F0F6B2
ABC0B8D3B34C799E4ADE2E711C1744A81A8A5785A1AADB558B2AEDC95E6EA8C0
380B4F27E031EFEFC111ED37F0134289EBAF6E5612267C2568E8DD1154C591A0
3647C9648E0960C1A789C28C10DA66D7BE80CCFC51CDB9854CDCF4F8EEE1339E
2233B4C0ADD2BAF14947 |-
/semicolon 60 -| 68CCB9B776D9A12F6CDB6F768B93788963A1DF05F16E703F31C3887CE012E3DA20ACCC0C
827B23874C71FFCB833A4FEC4A957360CEF4C3B1DC637E0D |-
/equal 46 -| 68CCB9B776D9A12F44F067FD39077BE56D4415FC24A5D5D1727749CE5FC106B52691A45F
F3B423CE69C5BD33E92E |-
/F 227 -| 68CCB9B776D9A12F10C2F098AB04058BFFD39EC3458A1456E9D0DAFAA5C3C33011BAE6E9
85E57E7B78BED1992F87DBDE02F09EF3A2011F35CF083585B9D43467868F7F93
95B17B8D6BE7BE5294C2C349C7C6AD848DA053A30714EA690241EDF95711E108
865276F043B095ADFB124014902568671832CB57F8C6ABC4A54A5F17D109BBF8
B346F389B5B1C9D9EA2B4EE74E88247B9E978353340CE5EF0FC09DB48FB18B34
4E00741A4E281C0137E5E504B77A4CA43999B24C4521930E26BE6CF62E2AB16F
227107DBAC6C2A5A46D1ABFB94F75E059E5112AF2EA1F3C94A28440074F5C7 |-
/H 96 -| 68CCB9B776D9A12F10C2F098A0E5D1F45B2E047C2A559E30DBE30FD3FBF14FB94D660D46
5A6AE53B7908CBE7F4F92781F52592248CC2D177AF4FAE9F0CF5E7C746AB615D
D0183A8A3816AA9AEE90ADC83AA9DD7F56122D991CAE3180B6F74F35 |-
/I 53 -| 68CCB9B776D9A12F10C2F0972D50116043B51D17BBF75380E5AEAA2188BC30594C9203F7
6FCC61ACE74258F3D2A633196B863CEADC |-
/N 80 -| 68CCB9B776D9A12F10C2F0972D501172B3898E4A5385D319477910BED7B197A4CEDD7AEC
B48B58B3C2E736F1E299B65C947CC3494276F491C72EE177C89458714CD636CD
5C2108EBFDD1791646F4E736 |-
/P 120 -| 68CCB9B776D9A12F10C2F0987BDFA99E96FA7248B4A9B6F478950BAB204F0DE519B1B262
67276747C52B8647D0D833AAFA368A64596A4AE30CB4AD3F90A42DD6D7BAF36F
5AFFE05E08BCFFA824333267362BF441E3A22F0F04623C307E4268D6394832F9
B823834F4F62D731C12925426773400BEA4C1D44 |-
/R 125 -| 68CCB9B776D9A12F10C2F0985B825C59937D873408E20B7EBC2177B35245966B3FEE0355
B19D634D4B2CA3CEC62139EE10DDEFF2963FC50FF8D5F8A8406724C244C27551
661A98B5A29442256BF43F4A3753C9711A6F8E3F3CE783E6D30E7D19FDEE1FCA
6AB4FCCE58BAF5520854D40D569C754A71DEF58D21F1341A87 |-
/T 74 -| 68CCB9B776D9A12F10C2F0972D50112486C25AFA95B6D5E0C5895CCCA1DDEB9DB828E08D
A491048AB15DF1C65BD8FE56B0E945C3AB2C97E1EAB7187A9187E56AEBBAC2D1
2D78B6AAD953 |-
/bracketleft 44 -| 68CCB9B776D9A12FAE7960396973E901AFB07BC2C2F7890D5C183A062281FE9D69054982
E2393DB6129C89FC |-
/bracketright 44 -| 68CCB9B776D9A12FAE7960396973E9016A5C1D90DBFBE83889B957F770F56D51EC7407F5
C5B1BB4EB59BBE3F |-
/a 201 -| 68CCB9B776D9A12F10C2F0987475F74434C4DB7A2AB10F859412B2800C47140351B2DB79
06AF812807FB5669106032D1C29C6C3AF03DCD02392040D07F4C8CFB380444FD
5AA579070A89DEB97FEBA40A6F5E4A50DAFF97D35F13ED9DB3587EA219D2437A
5ED0A7EFD2809B9C467928D39F6DC3E12F34FE3043C597B83F75B7079CB8DF7C
3A634B77EAAED0DB376E768BA3D1FDCC2A62E07BEB2F16DF9ED51904BCB069AC
7EC2DB8FC7D800ED8940EBBA5A6730A9ABE9765E1C92EF13148FE11D6DEA705A
A1E8EC2885 |-
/d 196 -| 68CCB9B776D9A12F10C2F098DB48CCB7A696A42A4FF85175F18168B484CB1BC43018EF05
55604BEC6B6BFAFA57185B7557F11FFE832C9AA43C57168DB44AA1B115134783
E81FA4F22AAC7C74B0ACC7E675E2160561BFBE368A3F12EF2D2059C2914DC737
063B1FCD19764EDF3C0B001D8E0EE20DEBFCD5FBDCBE4CD950CC65C6F4DD6FE9
6608DD4B554F6D9F79B9841E0EA82AE895E0C748298622B4F4A9CF1F24C32A17
2FC99B4ED9163AB58DEF0AE5AE9792FBDEAF6F5457EBC6D6F7A09A4A7C361A9B
 |-
/e 112 -| 68CCB9B776D9A12FE4FBC7F1B7440C0B0C3C5CBC7433465F2608CAF7B4EB61AE343C802F
72A600C47F7F2BEE2A4A3783AEAF607DB6DC980B999E133B4A9674EB23E78582
99AF277AE2F678461923D7F1D41341F908A0B8AABF41D0F253FAF3B1DDBEA119
0F32F223E6DA1922DA51AF56 |-
/f 136 -| 68CCB9B776D9A12F10C2F098C6566DD458F23CBC65011443BCD3357B00F09424AFBA67A1
7C039D393398001280255A1613545CD6BA0D9F87AC1837E1D184BE6769303095
78062BD18162B20D4939A3B0F264616459554233EDE360E36CC0CAF0FBD3CAF8
7B1B4D64316C8F6F508962CB0BD0C5569BF591251E4C8252B3E445DC178DEC0D
E6BDB2CE |-
/i 69 -| 68CCB9B776D9A12F10C2F098C50B596AAA7310CC89FD5F84AD30C81749E1D04B39086B6E
62CEE45C6883BA2D766D1889C1A266D4FB7D30FCE7632D58669B3690A2955602
9F |-
/k 143 -| 68CCB9B776D9A12F10C2F098C659D65E462157A4A99202AF08230D051451EA1ED2C8325A
D92F3C5F8FFE2E22B8A9C2497B6CD6B250072988048A941D73C41B8D59AF0339
734E6FEAC0E42EB337695967CD9110E8F9DA2709D941488E53CB0DD1256C2BA3
198A38CE5BB2873CEA25FAFBB0CA49251D427F60FB67D7D39F563A6EDB08D70A
E187B3DF2F9B366E8C2A95 |-
/l 48 -| 68CCB9B776D9A12F10C2F097FAED4EE108B09D29F47B44810D9CE36ECEC54A2CF1FC91BD
CEF5020CA8A0C105AD07792A |-
/m 186 -| 68CCB9B776D9A12F10C2F098C50B595BF4D3291F2E9A6D138EC788C8E26185F6124746B8
4AB9A84FA2FE6471FDE9F35F0AA018284846D986AEB702C05B7580B802DCACFF
8C5883089D8EF7E11612BDFD73C417BF1DAD1DAC51F50FFE90A3EE0ACDB271E5
BB2A0BF394A8FF43FACD676FC6F387369455ADDC0DD29E96A23DD9322B03200E
3021E26A3953E908449ED4A2C8F359FDE522895AA9F5371ED7591EA8914EAD7A
6182F5307E945C7838CA835576CBE787A028E2858AE0 |-
/n 148 -| 68CCB9B776D9A12F10C2F098C50B5963616D4971BA13476818BAC66A668EBD3BF8B853EB
4213878042F40941475254339EEEBC3C883388182036FE8954E2001FC87C8F72
66B9DE319A3F8186978FC087C06FFC3E6518C0691640CCB460538BE02ABD4F8D
59B6CC6E401DBA018F3491A9600E0192BD3D5E70040A29016DB4E2655540FF57
163C4F3BD90FDC71CFF93E8BAC6EBA6B |-
/o 87 -| 68CCB9B776D9A12FE4F420D3A88F0157B18A5008CF24DF1C7DB137B50C9247E8324BF9F5
8C7A3B487C51215F082B31010625AD76F127F4CF746E425996A8256D4F830B1C
60078107467FBCC21D5D1EFE6970A38758BD66 |-
/p 175 -| 68CCB9B776D9A12F60E7E0D056A990218ABE43C95B63B9D79BFD7CD86AD8AC7D3C1B4F9B
724F09F39D444C10EF16EC77C4617FA1D616A31D118383F3737DBE2FC1F3F7E8
0ED100803AC02F4D37C8ABEDC02B2BD4FE307EA0092DD7FA7EA915EB2443D569
C0E6CA36A21FE331BA04E46F2B18235C45514C285AD47972CE4C1620A9598610
820A176FC47CE56923AE3A61C0EDD93975347A303A587E74CD97332451CC8AD3
E01B6D1AD0B4ECA0DEE6A8 |-
/q 134 -| 68CCB9B776D9A12F60E7E0D0A9DCC00B09427DA3A6102791A965D66365F7E0D4DF86591D
971ECB8E3F3484BB38A16FC121271CD223EF6EBB1F07E9C75C33D7F9D9A341B8
DA9B525EC4323F0DBAE0B401871F8C203C18FC039E06ED4AAC7A75E95186BCE1
F36495E158FD884F2A9E63BC3C6D119D1413FCEDFA09DBDE5DCA0553FFA57E19
9377 |-
/r 135 -| 68CCB9B776D9A12F10C2F098C50B59656643528E8E016C3103F8DA60CF08FE8B8137E570
862D0752B1A8F945DD2C51DAE8EB492788BAEBE395573862F14B37E7E8470B00
0B8F5A551C64E46BA7659F33E5E6B38F7AA73BEA47A816B88EC846FC428EA695
965D87BC6AC140BCF9FA2D19AA85D7A09C914B1A5D8EDFEB77C4A5000A7E9885
E373EF |-
/s 271 -| 68CCB9B776D9A12FE4F420D3A88F01022A6BEB4ED9021669E6D5802E40EEE1A26671962F
A420DD1C120177E5157A4C9BE5FF409DDACAF6387A7F422DBA6E5012517FBEBA
0E891B38FD38FD804D82BC882D392731B0AE2A8E5613956ACA8A75B709B7983A
C7CAAFA4C2702F7D95CFAA2D16A225D02D296461F16D10D9C1B451F21328425B
3B502DAD35544E88B3A77D8CD3DC2618499B601B9F07D4035BAF005E8D84F967
2EAFB818B530C0AE8D5163A20610C24CEA3CCCBA7BB774B812EA668AF8D44E3F
522D306C3C9EB20CD31EB5D7DCA2691534D9B58FE5137FD65142EE56E3C74EED
363D1F80892B0A6AAC376339A2A09D603868C2FA3D5FB666055B006E00899791
BE6BA23910E3CDBFAB3466 |-
/t 81 -| 68CCB9B776D9A12FE4FBC7F11AFBEAD2E1A1DAA456F2915A5DB25C768D07FEA6924EA15D
87C10DDC2AB17C77CA4C546EA4DD7CBFA3735B20BCE4D7734CA719A427E4E29E
CF99CFB3E9C3ADE39C148ABBAF |-
/v 73 -| 68CCB9B776D9A12F3BA0777AAEA74417787A6B8E7B795FA0B29A33D04CCFCBF223BF0122
955D7B3E91A5543D833C94C3DBD39E066AE31CD01D20E7E638D77F3F7F81643B
A39B3E7B6B |-
/w 127 -| 68CCB9B776D9A12F3BA0777AAEA74405FBDDF8FBF570B39776E0F15749925925CFDE4D75
7549114BE6C8BEC33EEBEF025987622DE446D573AF30E82D4D3827F9F2BF709E
77C7DFFDC2FDE1ED437CBF6CB3BBB3030484A0277C268D168F351F75D15152D6
EB5CC07363273E48F9C10E98C903A942787883D8CE1FF8B8D37482 |-
/braceleft 133 -| 68CCB9B776D9A12F60D45E8907B6C53BA63196D84DEB44AF85D86A84A827000ABDDDFA7D
689DDB840309D2290E128C06017ED3BFCAC48841EFAA3E64E482C14503201D4B
1A6F486C379374B1048E9838F1DBD12E97BF2097A06B17F9535EEB31B12EAC17
3E979321F1FFE8F37B063BF45948B1D04C1D666EE19CD69BAFF7194A3494A42E
B1 |-
/braceright 133 -| 68CCB9B776D9A12F60D45E8907B6C53BA62A31318FDB8584E0124EB5F67B83E1210E103D
EE4CE1AF21E34D521346CAD23F44F1775E2667F6EA66B0B099A35C47766C542D
113E6B81AD37C32FB5962FE9E238443E1E66A6D5F5E80006F773BE850C26F161
D92D057298AED120AF73653F51462F72AF3725C61C68F2251044951041C78C2D
A8 |-
end
end
put
put
dup/FontName get exch definefont pop
end
/PDFEGF+Courier-Bold findfont /Encoding get
dup 0 /.notdef put
pop
end
/PDFEGF+Courier-Bold findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 46 /period put
dup 52 /four put
dup 54 /six put
dup 59 /semicolon put
dup 61 /equal put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 123 /braceleft put
dup 125 /braceright put
pop
%%EndResource
[/N40/PDFEGF+Courier-Bold 1 TZ
%%BeginResource: font PDFEDE+Courier
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/version (004.000) def
/FullName (Courier) def
/FamilyName (Courier) def
/BaseFontName (Courier) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -224 def
/UnderlineThickness 52 def
end def
/FontName /PDFEDE+Courier def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -28 -250 628 805 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 29 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -14 0 572 585 434 448 782 803 626 626 ] def
/OtherBlues [ 236 243 344 344 -195 -193 ] def
/FamilyBlues [ -14 0 572 585 434 448 782 803 626 626 ] def
/FamilyOtherBlues [ 236 243 344 344 -195 -193 ] def
/StdHW [ 55 ] def
/StdVW [ 55 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold false  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
6.875 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
55 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 53 dict dup begin
/.notdef 9 -| 68CCB9B776D9A12F95 |-
/parenleft 62 -| 68CCB9B776D9A12FB105DADE8684D41B375C0770BAC1B61C6429FF9FE0EDD9C8EDAE9960
024571161B9B1670EADCC1B86EC91D25E0341F6939F840D016CD |-
/parenright 65 -| 68CCB9B776D9A12FB105DADE86AF0016EDDDF57407F6ECA1DADF1428EA6BAE95A798696A
6BCC168798A3C983D76CB61F18EDFDFF408E3D11BFF08D7DAC2A104D67 |-
/period 43 -| 68CCB9B776D9A12FE4EBEB663D73353FB389871799C652D628056D88CDEAC0E3A7B42113
338D6EF617FE2E |-
/slash 35 -| 68CCB9B776D9A12F608FEB7C300ADD9E9B769CB0621A96FC7E7688E6FAACCA88845075 |-
/two 105 -| 68CCB9B776D9A12F10E894D3E226A9724650F60B70C118BD9A18D8DA511796595B8D06DE
6701F9B3250492072CFFF58BA203184DE1D6F82A93C39F40EAF873C3E78AD122
A60F99E6D200CB98A704E1245D074F233E5BE08545EF4EA377B406F0BA1584A4
4D7B829755 |-
/semicolon 58 -| 68CCB9B776D9A12F6CD404C50ADB0E0F307AAE7CED1FEBE9EB2FFE0CAB15E1EC2966B849
F7D32FDBF4A230D9EF21D9F339D44C6CF06CD2740248 |-
/less 41 -| 68CCB9B776D9A12F040B256D0D3AF2BEC4905F9E16579700D82EDDD32BDC49B606BA5D9E
BFAF3ADE5E |-
/equal 47 -| 68CCB9B776D9A12F6C5BA09C95E8212FB2A96979DEDB13501F0CE08A7B036DF6A83E56B5
D47BE1F665FA10B7B5323C |-
/greater 43 -| 68CCB9B776D9A12F3BA077754F0890271651A980E0E64E0C4CCDBE8310C1268F773AFD38
31A73375B06665 |-
/A 116 -| 68CCB9B776D9A12F10E894DCBB206F8C5DAA32900F0853184DE07DD7E92666D01D035852
5BEF419A21C973829489881C4C54F0D53F104158DFAC60D26F9AEDF3F32C4332
14F31B086AA7D124BCADA6DEDBE4F35BE687F3D9305E0DF5CF736CABE072E45F
C8A6A8AF6B12C784FCD4D54967251AD0 |-
/C 103 -| 68CCB9B776D9A12FE5283C115560B723B20E249A6A1832A590D6D4F07399D0C71674177E
8E4E42DEC773FFCC8D7843B8B01419135F1CE205A87095BAFFA5AEEB7CFFC294
08D2C7F788A55F8E7BBEA7A931B361E7DD3AC756EA0D0BA0D665177C481F98FE
C05759 |-
/D 117 -| 68CCB9B776D9A12F10E894D3DD1D6367D612CD82CAE2AF4E634441B999C7B7CB5D80A181
83573D2718681466E8EF5222345EBAC357B8964B62945F905D766E9B1DA5B341
79B89974ADA5D96A7191203E104E4236947751F478167E6938D477B3FD9B32DF
ED76B463E2EEDC1E8012EC6252C966309F |-
/E 145 -| 68CCB9B776D9A12F10E894DC103DAD9C88D113B62C642D0D9778E5217DB9572D0C12E429
8B077CB6DD7769E66E4DD48676168B242463CAE29F0F1C4D941411A3FE705BCD
52672B226DC22DA2CA0A699878F75BA6275BB687EA2407F3272603B1D32B5E4B
C2AF621961F1ECC4FE9BE7D07007A91361EE8CE061C7C62CC79DD4588E374AFD
B0E9F06F42EC9B668A8F33F3D9 |-
/F 92 -| 68CCB9B776D9A12F10E894DC103DAD9C88D113B61D4F30D43A90416981542A9C8416DE89
665CC375F44CD7FF6BE0DFD62C6DB6B96FF423A6DF7A868C9C1C8144ECD96C71
E6C117251EE2FDAF14FCE67D48A99E359312D79B6FBFE186 |-
/H 97 -| 68CCB9B776D9A12F10E894DC1766F52E67C66D062B32D7536BE0A5C30CC1D101B87108BB
EF519E577D81CB0DB63F01BCC38171EFC4D37DC48E21412993AE7601645A9C26
3F443EFD7D8FDD62ACD487592189710D8ED8D7483A12E66644A37A11D0 |-
/I 53 -| 68CCB9B776D9A12F10E894D3DD1D636777FB619FE7AA202986B21CFCD381041869C02B14
7B48473D100711293CE8D885D80C7A81C5 |-
/J 89 -| 68CCB9B776D9A12FE4DD97C264DDECB9BCFA03C1AF5E15B0C02DFAA895CDD59E0F05A066
FC3C57534EC6AB17E5AD5421D11321CBE1785575D995E5E3D14C2482CA8814C6
2AA67D6BFF640669DDA4129F1F2BDBF7F8A90CA941 |-
/L 61 -| 68CCB9B776D9A12F10E894D3DD1D6367E026F5D3E10141A4407197FEB15E43B257D586ED
8633305A0C55D077C1E90BE93186E04556DD960BB3BA330F8B |-
/M 98 -| 68CCB9B776D9A12F10E894D3DD1D63409D549DDADF848168567791CE8F9534A036183BD2
647502DCC6795CEACD0397BBF577912087997AFF92D44636526A1A762BB32639
532CDB87886C815FF6F382ECE4EDBC1CDE9CD734D551427181A181802C2C |-
/N 81 -| 68CCB9B776D9A12F10E894D3DD1D637AE6336A9CE07C496949EF8BC71F55DC88829C0033
B3D71E57A3759A1F65DE346E69CF9C98A8A37A07CBC783CEA9B573B39C0B7DD9
0AA054E56E74899ECA21CFFC21 |-
/O 94 -| 68CCB9B776D9A12FE4DE657B76B16F470582045C370106EB06DDC527B7E9C37D3FE90D66
F8AF6FCDBBD4D7E1BC0560C2465855DCFBA103D89E5FE41DE740FDC55FE44DC8
45021E2137B14F10FB8E83D76332A919C50A52F906C7D40E81F0 |-
/P 122 -| 68CCB9B776D9A12F10E894DCE64CD9522F338D81B043C7C7B5638D04930531E728FAF6E4
655E5656EE26C0AA1A0961B301FDB7FF2181902EB692E1375476F6F141053924
BAD17E370C6425F9417A8EC706202817526E448C6623EFCB2E300AF68DB835E0
0905E6D1E7E48900530B28F93B82181A23FD03E9D075 |-
/Q 304 -| 68CCB9B776D9A12F60BE3A3DB830C8A2EA9AC8CC61A41887FF8BD9E889820A5254020117
B0D89816A935F0B4E1C4B048BC4CC5EF1B35036EE9B47D1C5C92FB9ABC1E5B56
A04A22670E30B9373DBE2821BA471E89F35E84D2567A4E74295E6BD431E6B9D8
3775ADB21541789E149E458A4A346AE1BCFEFDC8D058B2B04534786EF0366F66
DA640194E61DB65BE033AABB13F7480CF23DA77223CE7C3F8F48F6D33B1905D5
94BD51040E41EE1C23A2380B40F1EB8C794076C12FA6BA1A84A78486E244D910
13AEE0EA7F1BC5E7DF51D9DA7556F0A7979C5926C880B8FF62A45925D45053EE
F19B173F22F1DD758146EA914814AF4478BB91B2394B3059D5A173758B4DB61A
EE4B363A4466D9B5AB8CF7E0266F6982A76D3FB92A3354B139E798213EE57967
5A3858BCFC1C6B014203A941 |-
/R 126 -| 68CCB9B776D9A12F10E894DC012547E4EE29A497D6EDF0FFBFDB2505A1134FD6AFAEE92F
909E9EA487202F71471F8D1C81A84A0F9715C70E5412FCEAE7CC05E6E3AFEBE0
2A6A6A356DB8566414F852BF409FF4DE6929B5161BAE33DE5427D343B02B0FB5
DD9E13BF3E3A51F6432C880D508920718592E13BC4B89E563678 |-
/S 311 -| 68CCB9B776D9A12FE4DE6574A5E3719E7C54C83B79D95D90582FDE8AD75A7725E99A22E0
F6AB829F46F10502D7FB546E84E8E5A6CB3C4CF44E361F24182E9D696DB01D98
236E33BF6C0F44464807B0BC1358412715092EF28417DF6008D60BBAE965A5BE
318796B96FE3A9438A04565008C14AFB1C0C5A191310229CE4D752773DF9ABDE
214D1DBDC9B9DF6773D611F1E790F366A9A55B2AAAFCC53C875941875615B946
C14CADAB8B9215DE07FEDECE45FB55120F9FE496C4387D49FE2F9A076847F6B3
A118E285A7BF29F9EEF7D3D01607B91756AA55692205DBF2B310676F740F5D87
41E8BF20A7937258D240D3EF30995551353DD68486034171D2666A85FBC748AD
8E80CDA44E0452743269FFA95F734991E8FE472D3AA136745E87268C9A4A54D6
DD1E590EE4A4402B8322DF4587E331C85DF8E5 |-
/T 74 -| 68CCB9B776D9A12F10E894D3DD1D632A60153F452040D087BA29AF1E49A8307D164075BE
1C4E096D5F043A9B297B3B18AB9C635521292094098188E32DDA587B40164C02
92B0E9D23591 |-
/underscore 30 -| 68CCB9B776D9A12F6021E132E350EDE50BA89834D3F818D016AE5988B89D |-
/a 210 -| 68CCB9B776D9A12F10E894DCEF13513962BF475F34729405EE6F5B7D02A283D8860732C2
190E56DDD3C0F6F115D341123F132806856F94EE5CC6FF0E189CC2152C42F923
1C8FE2CEA719191469F35B033DB05D5A5B95D37C5DFC704FD78B9000733B900E
E2659CC60D0A5A8996DDA7BE7642AB858FD03C6CA9230649E348CC760BDF6623
5CECCFA946467B8E3F0624305856667624613E19484B27B427C602A30C09DEF4
78AA2E538F0B182844972FBE7ED51B18987FF337930B5880D811B45C17D0D8F3
6C874F9120386ACC2E6D1EC89D0D |-
/c 98 -| 68CCB9B776D9A12FE4DD97C2E631A4DD16124039DB0B2640D58A28034E59B9086E01B807
989BD30EB9A6F900788E37391A1E7EFC641D67824AAC67C54C6865116B54EDCE
3118AAF9621A7FD0398C1E38D1384481CD613217C1DB5E01662D1CBE4A80 |-
/d 187 -| 68CCB9B776D9A12F10E894D35862CCB7D23BCF74479F1F93CBD10EE4B1F8284B18BAB14E
E4FB11F0685912D7863F78690CBE996A2F882A617980F4B9738A2F170F2BC74F
E6C35318C5C44864BE01B875E52690C8D8757177F889A0AB2CB05995F416E2DC
53F699E6D36236C46082F862623CAAA41F89E022B796068E11E32FC8536A72CD
D38140E58C414A6329C936E79B7BF03A61DDA81DEFD214E1C05E9ABBEB809C67
DD3A554920C4E4058EFF417F8249C903036D7D5F4491B7 |-
/e 113 -| 68CCB9B776D9A12FE4DD97CDBD44D90578477F3B85F4360763CC1F2420025429F401E8A3
61493A8AEFA103E1172012926851145FF038D630BE08A933E901C06211926984
F00E9E82F01D18B422297503105E8547859E512A2E0726E6E719DE709ABC2FBC
719ED30DC7DF642E78FBDDCBF3 |-
/f 101 -| 68CCB9B776D9A12F10E894D34BE735484CC085AE2523D0A749E805C1F1113F9885BC0E01
359AE41F10CBE6EECB173829663078F39F5BC3BCEC36A919AD2F853E4CEF8D3B
3F4F7A0E92F61761EDB8169500DB26B9D986AA91A6E79F29D61BFB72E2AC1528
44 |-
/g 189 -| 68CCB9B776D9A12F60FA9BA5CEF16AB32B88C27339654D3FEBF3C75CF6AD340F08E92898
85A57F26CC1074698E3C9AB7C7D50F818F3A42859C93394661733A16ED01B351
5F4CC2C63FE65428927C3310A04305B80498EAF20020A99A99ED2BD4B4C930FA
1BF6308D9CF59B35EDADA7D1F133FBE9BD166A2C6F5D9D4D78AF1608B996DEF0
022DF93CFD14BA9F3CCD6640ECF5B24DA74B0778DFC16BD5B586F2D3466B87B9
674968CC3DE876864F1C6110CD46B35DB4FFF24FFA0145DC11 |-
/h 98 -| 68CCB9B776D9A12F10E894D35862CCB7D23BCF3D25C43323FEC1187632ADD70B5B78600F
762F1522BDE4B575140B7813546EA48968D6FAF1BB0F556B70A70B2C50920FA5
53EAD8BD49A6F4F6A3C06BA5B55738AA9FE8A16AE7146DD4937615C907A6 |-
/i 105 -| 68CCB9B776D9A12F10E894D34BE73548243612E429343E4DC19468110C99EE4BAF96700B
E2422D520C34582F98AC14FA5219F3C39BC70C136F6A8FF926CB028313777E86
0CE0224182192E29CA19C1CB1282504501CC21FB680EB9D9C0BE371D18C65224
1DEEF34AF2 |-
/k 149 -| 68CCB9B776D9A12F10E894D34BE7354853655CF80F9AF3A7EAB1CA415E35B74BF31E7F3F
BA00CB9FEAD8540D88255FFE34BF2569282E87EB92F8BB0FD64A3B6C466D5F18
44CA9E7D7DB05FF0FC5CEF1FAF2F294AF9C3895905920A5777B8E130F1ADDEB0
F3375A17FDB3BFB4081FC82C2B6329A2058F6DF3E3DD93846BCD93D6074A8842
05348F79B4931C6F77593B8B0EDF557175 |-
/l 48 -| 68CCB9B776D9A12F10E894D394C0C8F47FB82AA59B1291A7379F24C65A3F987BB7CBAC2F
70D5C8EBBE93B8A6DC94BCF1 |-
/m 197 -| 68CCB9B776D9A12F10E894D34BE7357ECC3CBBAC4AF98A317D67ABE7271143884AFDDF41
9EA5A1A5F5F9FEAB54FA70F3C114094ADD7F837722EEA176A68F4B6FBC3F23BC
526DB906762749D621AF8563BB4E85E4060AEA54A973026F23FF0B42B7097A37
BE437CD0D436B1463DB334522F71FCAFC924023717A5AF174D50740D98D527EF
7E2669E6CDF212E5E4F52FDF396A43A033B8DE680B6F24D46808CA55638FDADC
4C572E1613FA6FBD4B7DB8D041C70708E0FA1E603480447ED5246C4E38544A36
C1 |-
/n 152 -| 68CCB9B776D9A12F10E894D34A957A567238DF2952E81C556B42DF625D2FABDA24860C3C
EF29D36B3000130CAB0ADCD5DB63EE035CF2388B436E57E51D09093532AAA914
15E9E8A47DA2E1BCC024AA538374DC5D5DD0E1523BE7E2CF04E72C8CA9DE16D9
EEC0AC379D5053805B19EA93BB096FD6509C60861A8AB1207C81DDA57B1E24C2
A671F4C7135CD4EA583F0AAFEBDECCD2F523442D |-
/o 87 -| 68CCB9B776D9A12FE4DE657BCC0EDFE7A0E8A98D9B78FB09F97D3631A8CB64B9A363771F
9988DF453DFEFD424C9F5B1C4782866F37002A0FD92AF5A33F880F6008AB8F50
FC569F0431D7FF1AA00E89B3980F9AF2768521 |-
/p 183 -| 68CCB9B776D9A12F60FA9838D304FFC215857665E2F9AB69FD727E745705ECD90580F726
86037604164810AE79E5106C547BFEB39F9B3E348EB7226A8D3F4600F762B45A
AC72AAC9AE3B5ACDA8CCF0BCCC6238BC599EC857DC33FA92B93B531672F85F76
FB5276CEBA76C42B9DC60FEA636A16306D813470172F043290F9F0DBD15AEA7E
E7DBE7F641BBB7F56F856C0D349FA35BBA6A18D90C6B41DCBCF173CFBBD74C79
E3C44F4495AC6A4F0367186669E348AF93A3E1 |-
/q 143 -| 68CCB9B776D9A12F60FA9838D304FFC215857636FF001CA605492BF87F6F7DDA9E5B48EF
AE9F4046D5E7852743D5927C661125848A63982041A9C305055F0C1A7EDE191E
1AC554B40001D8ADA57DCE6DB5DF94A222E2E4D519249196072A174D6B801108
6CA618C9F567A1D4D2FEEB6D40DEC12BCB2D65748B3F3E695BB452BAF934A6DF
E5CEF179F1923BD6D3156C |-
/r 131 -| 68CCB9B776D9A12F10E894D34BE73547EF15B59D1C8DD8740A435BC715A7A1E2235A6964
56BA9395FB32ECC0BA527731C712BA06E9FA7B3834FDA2C624D28B518A2FC143
DA5A120BA30F6212D5C7A7CE185B4B89CB90C010B93CF8A04B925473840191D0
42DE82B32FA83527CFBD597FE5CB71157CE5D32923C3850A0FEABCE116A47D |-
/s 215 -| 68CCB9B776D9A12FE4DE657BCC0EDFB0CA9F469DCCE16C7C8CBCEC806FB65322803B3AED
425564DAFED9F2713209A90BB5D5290FDAE9079CC5A036E905BAAA931F921C9B
B40E67EE649C87A6C401812486885896857A140B5494CBBFE6D9EB6DFE032404
0C370D8D1AD7B098C6898D84E2EA1F289266571F1983BB76CBE294290D15CA74
DADF2D73BE3D6523708D5B149F053DE2D799FA2FB6F07691BF271CCA587C0B7B
7EF54CBA5337ED971E3D59506FA12E80218F8D132D30C3D2989CEF27C1FBB03A
C1714575B1882D7FAD390806B88EACE524A66D |-
/t 91 -| 68CCB9B776D9A12FE4DE657BDFDC71900974225B3E8C0DBC70C4E74BB6BB3DC6659578AD
5EAB7C41A6FC99B71C0226A4D40EA479F35D66BAE94AD739EE987C901FAAB5B5
B081D06FA01700D6116485A3E57C3718FAFBB63927CBC5 |-
/u 136 -| 68CCB9B776D9A12F10E894D34BE73547B5D3ECBCC39C41C51A848BA9E408D8837F7922BA
00E0213C8252306D913179424C4B2EADEC40EF5826A2A033A68017B13CDA19F6
E5498652341711259FEE8F9FFA8CAC9929ADD55C14208653F8E23D9A933342C6
1776FFB95FF25BFD199842C1A61B1646E23AAC92E9535F345F0B3A951F520838
288F19F6 |-
/v 91 -| 68CCB9B776D9A12F3BA077753073299B191716F96D4DEC6ADFD0866657648FD7099C8CF7
D48C939A027CBD1F7309C5218AFE4EF92CC75F0AE8D47F02D0B12F66576654C2
F54023A0E7E6B9088FC6B83C59462F058FA9C95F7FA75F |-
/w 108 -| 68CCB9B776D9A12F3BA07775307329A509ADC1710DC02341DE6F169EE890D29B423CDEFE
0DB6FEEDF4D3C14560817EF52619EEB60C0F2CEA011642113E73933EEB0C4400
0506EEBE5806341B1CE5F09A0FB04D6E27FF4CBFC6D7AA8D72242D2B8527CB96
2F06366B6B837006 |-
/x 164 -| 68CCB9B776D9A12F10E894D34BE735032805A43DAF5EF80570AF1CEE578C6169C1FAB534
0710C45EDABF7EE4B4E9AB184938ADB906181D5D3C36DEC370CEBC9DA58CEC70
96A5E69D6E12DFB365F2EE42CE4FC073CB3C82BF8119C155B4651A0594806F61
A7276D0057EC7A7189FEB0589D46894BB60278C24B423D3AF8EAAA6FC178683D
409617C2B4F1F7BC778A156681239723AF4AFBBD5391B9266469A843B716478C
 |-
/y 107 -| 68CCB9B776D9A12F60FA98385451B91DAE9F3E7AE97AAEA1972765F40198999AECD70F8A
8DF6B85EB771650E3F36F4501B4C57DA97DB8386C20192B8A09D2935CFA0D4D3
0036FB2B2E5E2187D0B41C101FED5C6A08E3AA7289712B5640EF40B2CDE32F2A
8777B60209E20D |-
/braceleft 121 -| 68CCB9B776D9A12F60D691DCD0257B8B5262FB337345A388679AAB3A46217D16BECE59DF
AB93C214842997079765E72E7BB4243B63ED2678691B22D2F8526E60981AA233
5D9580C94D68C043F4F19ACE5DD22E1EB8A15893D7123A37CE7A72B5B1B1433F
A75ACFFD91C598A2A4B502061A51D31BE2852263A3 |-
/braceright 121 -| 68CCB9B776D9A12F60D691DCD0257B8B5262FB3373409B178620022806FE3A548BE99F19
D1CC4DB089FAA0EF4FE87F065B22F1E69883FA73E6A7343099321737E490C5FD
EB03229792DF06507D5A5D6FE97D99757E1E8487986CBBC2BD2F2B9158E7A197
B8BC0B594F88B536852B900504CA1D3C7875B7F699 |-
end
end
put
put
dup/FontName get exch definefont pop
end
/PDFEDE+Courier findfont /Encoding get
dup 0 /.notdef put
pop
end
/PDFEDE+Courier findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 47 /slash put
dup 50 /two put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
pop
%%EndResource
[/N39/PDFEDE+Courier 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
69 71 359 443 re W n
[ 0 -1 1 0 -2 583 ] concat
/N71 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N92 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
BT
/N39 1 Tf
0 9 -9 0 78.0406 72.0406 Tm
/N71 /ColorSpace findRes cs
0 0 0 scn
/N92 /ExtGState findRes gs
0 Tc
0 Tw
(class)Tj [-586.7 ]TJ (TrunkedRadio)Tj [-600 ]TJ (ex)Tj [13.3 ]TJ (tends)Tj [-600 ]TJ (Stream)Tj [-600 ]TJ ({)Tj 
/N40 1 Tf
1.8 -1.2267 TD
(RF)Tj [13.3 ]TJ (toIFPortal)Tj [-600 ]TJ (freqH)Tj [13.3 ]TJ (op)Tj [-600 ]TJ (=)Tj [-600 ]TJ (new)Tj [-600 ]TJ (RFtoIFPo)Tj [13.3 ]TJ (rtal\(\))Tj 
/N39 1 Tf
24.56 0 TD
(;)Tj 
-24.56 -1.2133 TD
(..)Tj [13.3 ]TJ (.)Tj 
0 -1.2267 TD
(vo)Tj [13.3 ]TJ (id)Tj [-600 ]TJ (init\(\))Tj [-600 ]TJ ({)Tj 
1.7867 -1.2267 TD
(...)Tj 
0 -1.2133 TD
(RFtoIF)Tj [-600 ]TJ (rf2if;)Tj 
0 -1.2267 TD
(add\(rf2if)Tj [-600 ]TJ (=)Tj [-600 ]TJ (new)Tj [-586.7 ]TJ (RFtoIF\(STARTFREQ)Tj [13.3 ]TJ (\)\);)Tj 
T*
(freqHop.registe)Tj [13.3 ]TJ (r\(rf2if\);)Tj 
0 -1.2133 TD
(...)Tj 
0 -1.2267 TD
(add\(new)Tj [-600 ]TJ (CheckFr)Tj [13.3 ]TJ (eqHop\(freqHop\)\);)Tj 
T*
(...)Tj 
-1.7867 -1.2133 TD
(})Tj 
-1.8 -1.2267 TD
(})Tj 
0 -2.44 TD
(class)Tj [-586.7 ]TJ (RFtoIF)Tj [-600 ]TJ (extends)Tj [-586.7 ]TJ (Filter)Tj [-600 ]TJ ({)Tj 
1.8 -1.2267 TD
(..)Tj [13.3 ]TJ (.)Tj 
T*
(//)Tj [-586.7 ]TJ (sets)Tj [-600 ]TJ (frequency)Tj [-586.7 ]TJ (to)Tj [-600 ]TJ (<f>)Tj 
/N40 1 Tf
0 -1.2133 TD
(vo)Tj [13.3 ]TJ (id)Tj [-600 ]TJ (setf\(float)Tj [-600 ]TJ (f\))Tj [-586.7 ]TJ ({)Tj 
1.7867 -1.2267 TD
(...)Tj 
-1.7867 -1.2267 TD
(})Tj 
/N39 1 Tf
-1.8 -1.2133 TD
(})Tj 
0 -2.45329 TD
(class)Tj [-586.7 ]TJ (CheckFreqHop)Tj [-600 ]TJ (ex)Tj [13.3 ]TJ (tends)Tj [-600 ]TJ (SplitJoin)Tj [-600 ]TJ ({)Tj 
1.8 -1.2133 TD
(RF)Tj [13.3 ]TJ (toIFPortal)Tj [-600 ]TJ (freqH)Tj [13.3 ]TJ (op;)Tj 
0 -2.45329 TD
(vo)Tj [13.3 ]TJ (id)Tj [-600 ]TJ (init\(RFtoIFPo)Tj [13.3 ]TJ (rtal)Tj [-600 ]TJ (freqHop\))Tj [-600 ]TJ ({)Tj 
1.7867 -1.2133 TD
(this.freqHop)Tj [-600 ]TJ (=)Tj [-586.7 ]TJ (freqHop;)Tj 
0 -1.2267 TD
(...)Tj 
T*
(add\(new)Tj [-600 ]TJ (Filter\()Tj [13.3 ]TJ (\))Tj [-600 ]TJ ({)Tj 
1.8 -1.2133 TD
(...)Tj 
0 -1.2267 TD
(void)Tj [-600 ]TJ (work\(\))Tj [-586.7 ]TJ ({)Tj 
1.8 -1.2267 TD
(...)Tj 
0 -1.2133 TD
(if\(val)Tj [-600 ]TJ (>=)Tj [-586.7 ]TJ (MIN_THRESHOLD\))Tj 
/N40 1 Tf
1.8 -1.2267 TD
(freqHo)Tj [13.3 ]TJ (p.setf\(Freq[k],)Tj [-600 ]TJ (n)Tj [13.3 ]TJ (e)Tj [0 ]TJ (w)Tj [-600 ]TJ (TimeInterval\()Tj [13.3 ]TJ (4*N,)Tj [-600 ]TJ (6*N\)\);)Tj 
/N39 1 Tf
-1.8 -1.2267 TD
(...)Tj 
-1.2 -1.2133 TD
(})Tj 
-2.39999 -1.2267 TD
(}\);)Tj 
T*
(...)Tj 
-1.7867 -1.2133 TD
(})Tj 
-1.8 -1.2267 TD
(})Tj 
ET
1 i
98.201 305.201 m
100.00101 303.28101 l
100.241 302.681 l
99.881 302.44099 l
91.601 297.881 l
90.041 297.041 l
90.881 298.601 l
95.44099 306.881 l
95.80099 307.36099 l
96.28101 307.00101 l
96.401 306.401 l
91.841 298.121 l
90.881 298.601 l
91.121 298.841 l
99.401 303.401 l
99.881 302.44099 l
99.28101 302.561 l
97.481 304.481 l
f 
96.28101 307.00101 m
98.201 305.201 l
97.481 304.481 l
95.561 306.28101 l
f 
97.841 304.841 m
99.64101 302.92101 l
91.36099 298.36099 l
95.92101 306.64101 l
f* 
432.041 341.80099 m
432.28101 341.80099 l
432.401 342.28101 l
432.161 342.28101 l
f 
432.041 341.80099 m
387.28101 353.681 l
352.841 362.44099 l
338.561 365.681 l
325.961 368.321 l
314.681 370.241 l
304.36099 371.561 l
294.761 372.401 l
285.521 372.64101 l
276.28101 372.28101 l
266.92101 371.561 l
256.841 370.36099 l
256.961 370.36099 l
246.161 368.681 l
220.601 364.241 l
196.481 359.92101 l
177.401 356.08099 l
169.481 354.161 l
162.28101 352.00101 l
155.681 349.72099 l
149.561 347.08099 l
143.80099 344.08099 l
143.80099 344.201 l
138.161 340.72099 l
132.521 336.64101 l
126.64101 331.961 l
126.761 331.961 l
120.64101 326.561 l
120.28101 326.92101 l
126.401 332.321 l
132.28101 337.00101 l
137.92101 341.08099 l
143.561 344.561 l
149.321 347.561 l
155.44099 350.201 l
155.561 350.201 l
162.161 352.481 l
169.36099 354.64101 l
177.28101 356.561 l
196.36099 360.401 l
220.481 364.72099 l
246.041 369.161 l
256.841 370.841 l
266.92101 372.041 l
276.28101 372.761 l
285.521 373.121 l
294.761 372.881 l
304.36099 372.041 l
304.481 372.041 l
314.80099 370.72099 l
326.08099 368.80099 l
338.681 366.161 l
352.961 362.92101 l
387.401 354.161 l
432.161 342.28101 l
f 
120.64101 326.561 m
113.92101 320.321 l
113.561 320.681 l
120.28101 326.92101 l
f 
98.44099 305.08099 m
98.321 304.961 l
97.961 305.321 l
98.08099 305.44099 l
f 
113.92101 320.321 m
113.561 320.681 l
98.08099 305.44099 l
98.44099 305.08099 l
f 
261.041 209.561 m
264.28101 209.561 l
264.161 208.961 l
261.041 198.041 l
257.92101 208.961 l
257.80099 209.561 l
258.401 209.561 l
258.881 209.201 l
261.521 199.961 l
260.561 199.72099 l
260.561 199.961 l
263.201 209.201 l
264.161 208.961 l
263.681 208.601 l
261.041 208.601 l
f 
258.401 209.561 2.64 -0.96001 rf
261.041 209.08099 m
263.681 209.08099 l
261.041 199.841 l
258.401 209.08099 l
f* 
90.041 288.28101 m
89.80099 288.28101 l
89.92101 287.80099 l
90.161 287.80099 l
f 
90.041 288.28101 m
119.80099 297.161 l
142.72099 303.64101 l
152.08099 305.92101 l
160.241 307.72099 l
167.44099 308.92101 l
173.80099 309.64101 l
179.681 309.761 l
185.201 309.401 l
185.321 309.401 l
190.601 308.561 l
195.881 307.241 l
201.28101 305.44099 l
207.161 303.161 l
220.601 297.28101 l
233.44099 291.401 l
238.72099 288.761 l
243.161 286.121 l
247.121 283.36099 l
247.241 283.36099 l
250.481 280.36099 l
253.241 277.00101 l
253.241 276.881 l
255.401 273.041 l
257.201 268.601 l
258.64101 263.44099 l
259.601 257.321 l
259.601 257.201 l
260.321 250.121 l
260.80099 241.961 l
260.321 241.961 l
259.841 250.121 l
259.121 257.201 l
258.161 263.321 l
256.72099 268.481 l
256.72099 268.36099 l
254.92101 272.80099 l
255.041 272.80099 l
252.881 276.64101 l
250.121 280.00101 l
246.881 283.00101 l
242.92101 285.761 l
238.481 288.401 l
238.481 288.28101 l
233.201 290.92101 l
220.36099 296.80099 l
206.92101 302.681 l
207.041 302.681 l
201.161 304.961 l
195.761 306.761 l
190.481 308.08099 l
185.201 308.92101 l
179.681 309.28101 l
173.80099 309.161 l
167.44099 308.44099 l
167.561 308.44099 l
160.36099 307.241 l
152.201 305.44099 l
142.841 303.161 l
119.92101 296.681 l
90.161 287.80099 l
f 
260.80099 241.961 m
261.161 232.601 l
260.681 232.601 l
260.321 241.961 l
f 
260.80099 209.561 0.48 -0.24001 rf
261.161 232.601 m
260.681 232.601 l
260.80099 209.561 l
261.28101 209.561 l
f 
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 175 x Fq(Figure)44 b(8:)68 b(The)43 b(frequency-hopping)i
(of)g(our)f(soft)n(w)n(are)2040 2331 y(radio)39 b(illustrates)g
(StreaMIT's)e(messaging)g(system.)61 b(In)2040 2418 y
Ft(TrunkedRadio)p Fq(,)28 b(a)c Ft(Portal)h Fq(is)g(created)g(to)f
(hold)i(the)e(message)2040 2505 y(target,)31 b Ft(rf2if)p
Fq(.)41 b(Then,)29 b Ft(CheckFreqHop)k Fq(uses)d(the)g
Ft(Portal)h Fq(to)2040 2593 y(send)e(a)h(frequency-c)n(hange)f
(message.)2040 2751 y Fr(programmer,)d(the)h(gains)h(in)e(robustness,)i
(readabilit)n(y)-6 b(,)27 b(and)g(com-)2040 2838 y(piler)f(analysis)h
(are)f(immense.)2040 3013 y(A)e(\014nal)h(b)r(ene\014t)f(of)i(stream)e
(graph)h(construction)g(in)g(StreaMIT)g(is)2040 3100
y(the)30 b(abilit)n(y)g(to)h(do)f Fp(scripting)h Fr(to)g(parameterize)f
(graphs.)49 b(F)-6 b(or)30 b(in-)2040 3187 y(stance,)23
b(b)r(oth)d(the)g(FFT)i(stream)e(in)h(Figure)g(5)h(inputs)e(a)h
(parameter)2040 3274 y Ft(N)27 b Fr(and)f(adjusts)g(the)g(n)n(um)n(b)r
(er)f(of)i(butter\015y)e(stages)i(appropriately)-6 b(.)2040
3361 y(This)26 b(further)g(impro)n(v)n(es)f(readabilit)n(y)h(and)f
(decreases)i(co)r(de)f(size.)2040 3583 y Fs(3.3)99 b(Messages)2040
3717 y Fm(3.3.1)90 b(Str)m(eaMIT)22 b(Appr)l(oac)o(h)2040
3808 y Fr(StreaMIT)35 b(pro)n(vides)f(a)g(dynamic)f(messaging)h(system)
g(for)g(pass-)2040 3896 y(ing)j(irregular,)k(lo)n(w-v)n(olume)36
b(con)n(trol)h(information)g(b)r(et)n(w)n(een)f(\014l-)2040
3983 y(ters)30 b(and)e(streams.)46 b(Messages)31 b(are)f(sen)n(t)f
(from)g(within)g(the)g(b)r(o)r(dy)2040 4070 y(of)k(a)f(\014lter's)h
Ft(work)g Fr(function,)h(p)r(erhaps)e(to)g(c)n(hange)h(a)f(parameter)
2040 4157 y(in)26 b(another)g(\014lter.)35 b(F)-6 b(or)26
b(example,)g(in)g(the)f Ft(CheckFreqHop)k Fr(stream)2040
4244 y(of)f(our)e(soft)n(w)n(are)j(radio)e(example)f(\(Figure)i(8\),)f
(a)g(message)g(is)h(sen)n(t)2040 4332 y(upstream)17 b(to)h(c)n(hange)f
(the)h(frequency)f(of)h(the)f(receiv)n(er)h(if)h(the)e(do)n(wn-)2040
4419 y(stream)28 b(comp)r(onen)n(t)e(detects)i(that)g(the)f
(transmitter)g(is)i(ab)r(out)e(to)2040 4506 y(c)n(hange)40
b(frequencies.)77 b(The)40 b(sender)g(can)g(con)n(tin)n(ue)f(to)h
(execute)2040 4593 y(while)d(the)f(message)h(is)g(en)f(route,)k(and)c
(the)g Ft(set)p 3562 4593 24 4 v 29 w(freq)h Fr(metho)r(d)2040
4680 y(will)23 b(b)r(e)f(in)n(v)n(ok)n(ed)f(in)h(the)f(receiv)n(er)h
(with)g(argumen)n(t)f Ft(Freq[k])j Fr(when)2040 4767
y(the)18 b(message)i(arriv)n(es.)32 b(Since)19 b(message)g(deliv)n(ery)
f(is)h(async)n(hronous,)2040 4855 y(there)h(can)h(b)r(e)g(no)f(return)g
(v)l(alue;)i(only)f(v)n(oid)f(metho)r(ds)g(can)g(b)r(e)h(mes-)2040
4942 y(sage)27 b(targets.)2040 5116 y Fq(Message)j(timing.)p
Fr(The)e(cen)n(tral)f(asp)r(ect)g(of)g(the)f(messaging)i(sys-)2040
5203 y(tem)f(is)h(a)f(sophisticated)i(timing)e(mec)n(hanism)f(that)h
(allo)n(ws)i(\014lters)2040 5290 y(to)k(sp)r(ecify)g(when)f(a)g
(message)h(will)h(b)r(e)e(receiv)n(ed)h(relativ)n(e)f(to)h(the)2040
5378 y(\015o)n(w)39 b(of)g(information)g(b)r(et)n(w)n(een)f(the)g
(sender)g(and)g(the)g(receiv)n(er.)1921 5627 y(5)p eop
%%Page: 6 6
6 5 bop -152 -69 a Fr(Recall)29 b(that)e(eac)n(h)h(\014lter)g(executes)
g(indep)r(enden)n(tly)-6 b(,)26 b(without)i(an)n(y)-152
19 y(notion)g(of)f(global)i(time.)38 b(Th)n(us,)27 b(the)g(only)g(w)n
(a)n(y)g(for)h(t)n(w)n(o)f(\014lters)h(to)-152 106 y(talk)f(ab)r(out)g
(a)h(time)e(that)h(is)g(meaningful)g(for)h(b)r(oth)f(of)h(them)d(is)j
(in)-152 193 y(terms)21 b(of)i(the)e(data)h(items)f(that)h(are)g
(passed)g(through)f(the)h(streams)-152 280 y(from)k(one)g(to)f(the)h
(other.)-152 454 y(In)d(StreaMIT,)i(one)e(can)h(sp)r(ecify)g(a)g(range)
g(of)h(latencies)g(for)f(a)g(mes-)-152 542 y(sage)37
b(to)f(get)g(deliv)n(ered.)65 b(This)36 b(latency)g(is)g(measured)f(in)
g(terms)-152 629 y(of)i(an)e(information)h(\\w)n(a)n(v)n(efron)n(t")g
(from)g(one)f(\014lter)h(to)f(another.)-152 716 y(F)-6
b(or)25 b(example,)g(in)f(the)g Ft(CheckFreqHop)k Fr(example)c(of)h
(Figure)h(8,)f(the)-152 803 y(sender)38 b(indicates)g(an)g(in)n(terv)l
(al)f(of)h(latencies)h(b)r(et)n(w)n(een)f(4)p Fj(N)46
b Fr(and)-152 890 y(6)p Fj(N)8 b Fr(.)46 b(This)30 b(means)f(that)g
(the)g(receiv)n(er)g(will)i(receiv)n(e)e(the)g(message)-152
977 y(immediately)k(follo)n(wing)38 b(the)c(last)h(in)n(v)n(o)r(cation)
g(of)g(its)g(o)n(wn)g Ft(work)-152 1065 y Fr(function)27
b(whic)n(h)g(pro)r(duces)f(an)h(item)f(a\013ecting)h(the)f(some)h
(output)-152 1152 y(of)c(the)e Fp(sender's)j Fr(4)p Fj(N)8
b Fr('th)22 b(to)g(6)p Fj(N)8 b Fr('th)23 b(w)n(ork)f(functions,)h
(coun)n(ting)f(the)-152 1239 y(sender's)31 b(curren)n(t)f(w)n(ork)h
(function)f(as)h(n)n(um)n(b)r(er)e(0.)49 b(De\014ning)30
b(this)-152 1326 y(notion)d(precisely)g(is)g(the)f(sub)t(ject)h(of)h
(Section)e(4,)i(but)e(the)g(general)-152 1413 y(idea)d(is)g(simple:)33
b(the)22 b(receiv)n(er)h(is)g(in)n(v)n(ok)n(ed)f(when)g(it)h(sees)g
(the)f(infor-)-152 1500 y(mation)c(w)n(a)n(v)n(efron)n(t)g(that)f(the)h
(sender)f(sees)i(in)f(4)p Fj(N)26 b Fr(to)18 b(6)p Fj(N)27
b Fr(execution)-152 1588 y(steps.)-152 1762 y(In)36 b(some)g(cases,)41
b(the)36 b(abilit)n(y)h(to)g(sync)n(hronize)f(the)g(arriv)l(al)h(of)g
(a)-152 1849 y(message)31 b(with)f(some)g(elemen)n(t)f(of)h(the)g(data)
g(stream)g(is)g(v)n(ery)f(im-)-152 1936 y(p)r(ortan)n(t.)36
b(F)-6 b(or)26 b(example,)f Ft(CheckFreqHop)k Fr(kno)n(ws)d(that)f(the)
h(trans-)-152 2023 y(mitter)f(will)i(c)n(hange)f(the)f(frequency)f(b)r
(et)n(w)n(een)i(4)p Fj(N)34 b Fr(and)25 b(6)p Fj(N)35
b Fr(steps)-152 2111 y(later,)25 b(in)f(terms)e(of)i(the)g(frame)f
(that)g Ft(CheckFreqHop)j Fr(is)e(inputting.)-152 2198
y(T)-6 b(o)35 b(ensure)e(that)h(the)g(radio)g(c)n(hanges)h(frequencies)
f(at)g(the)g(same)-152 2285 y(time{so)22 b(as)g(not)f(to)h(lose)h(an)n
(y)d(data)i(at)g(the)f(old)h(or)f(new)h(frequency{)-152
2372 y Ft(CheckFreqHop)40 b Fr(instructs)d(the)f(receiv)n(er)h(to)g
(switc)n(h)g(frequencies)-152 2459 y(when)27 b(the)f
Fp(r)l(e)l(c)l(eiver)j Fr(sees)e(one)g(of)g(the)g(last)g(data)g(items)f
(at)h(the)f(old)-152 2547 y(frequency)-6 b(.)-152 2721
y(If)32 b(the)e(receiv)n(er)i(of)g(a)f(message)h(is)f(a)h(stream)f
(instead)g(of)h(a)f(\014lter,)-152 2808 y(then)26 b(the)h(message)g
(deliv)n(ery)f(is)h(timed)f(with)h(resp)r(ect)g(to)g(the)f(\014rst)-152
2895 y(\(most)18 b(upstream\))e(\014lter)i(in)g(the)g(stream.)31
b(W)-6 b(e)18 b(are)g(still)h(formalizing)-152 2982 y(the)30
b(message)h(deliv)n(ery)e(seman)n(tics)h(in)g(cases)h(where)g(the)e
(receiv)n(er)-152 3070 y(is)h(a)g(stream)f(that)g(has)h(no)f(unique)f
(\014rst)h(\014lter)h(\(e.g.,)h(a)f(SplitJoin)-152 3157
y(with)22 b(NULL)f(splitter\).)33 b(Note)22 b(that)f(the)g(stream)h
(itself)h(can)e(receiv)n(e)-152 3244 y(a)34 b(message)g(ev)n(en)f
(though)g(the)g(timing)f(is)i(in)g(terms)e(of)i(\014lter-to-)-152
3331 y(\014lter)26 b(comm)n(unication.)-152 3505 y Fq(P)n(ortals)42
b(for)f(broadcast)h(messaging.)62 b Fr(StreaMIT)36 b(also)g(has)-152
3593 y(supp)r(ort)30 b(for)h(mo)r(dular)f(broadcast)g(messaging.)49
b(When)29 b(a)i(sender)-152 3680 y(w)n(an)n(ts)d(to)f(send)g(a)g
(message)h(that)f(will)i(in)n(v)n(ok)n(e)d(metho)r(d)g
Fj(M)35 b Fr(of)28 b(the)-152 3767 y(receiv)n(er)34 b
Fj(R)g Fr(up)r(on)f(arriv)l(al,)k(it)c(do)r(es)i(not)e(call)i
Fj(M)41 b Fr(on)34 b(the)f(ob)t(ject)-152 3854 y Fj(R)q
Fr(.)38 b(Rather,)27 b(it)g(calls)h Fj(M)35 b Fr(on)27
b(a)g Fp(Portal)g Fr(of)h(whic)n(h)f Fj(R)g Fr(is)g(a)h(mem)n(b)r(er.)
-152 3941 y(P)n(ortals)e(are)f(t)n(yp)r(ed)f(con)n(tainers)h(that)g
(forw)n(ard)g(all)h(messages)g(they)-152 4028 y(receiv)n(e)32
b(to)g(the)g(elemen)n(ts)f(of)i(the)e(con)n(tainer.)54
b(P)n(ortals)33 b(could)f(b)r(e)-152 4116 y(useful)24
b(in)f(cases)h(when)f(a)g(comp)r(onen)n(t)f(of)h(a)h(\014lter)f
(library)g(needs)g(to)-152 4203 y(announce)e(a)h(message)g(\(e.g.,)h
(that)e(it)h(is)g(sh)n(utting)f(do)n(wn\))g(but)f(do)r(es)-152
4290 y(not)31 b(kno)n(w)g(the)g(list)h(of)f(recipien)n(ts;)k(the)c
(user)g(of)h(the)e(library)i(can)-152 4377 y(pass)20
b(the)g(\014lter)f(a)h(P)n(ortal)h(con)n(taining)f(all)g(in)n(terested)
g(receiv)n(ers.)33 b(As)-152 4464 y(for)e(message)f(deliv)n(ery)g
(constrain)n(ts,)i(the)d(user)h(sp)r(eci\014es)h(a)f(single)-152
4552 y(time)k(in)n(terv)l(al)g(for)i(eac)n(h)e(message,)k(and)c(that)g
(in)n(terv)l(al)g(is)h(in)n(ter-)-152 4639 y(preted)30
b(separately)i(\(as)f(describ)r(ed)g(ab)r(o)n(v)n(e\))f(for)i(eac)n(h)f
(receiv)n(er)g(in)-152 4726 y(the)26 b(P)n(ortal.)-152
4900 y(In)35 b(a)g(language)h(with)g(generic)g(data)f(t)n(yp)r(es,)i(a)
f(P)n(ortal)g(could)f(b)r(e)-152 4987 y(implemen)n(ted)25
b(as)j(a)g(templated)e(list.)40 b(Ho)n(w)n(ev)n(er,)28
b(since)g(Ja)n(v)l(a)f(do)r(es)-152 5075 y(not)38 b(y)n(et)f(supp)r
(ort)g(templates,)j(w)n(e)e(automatically)g(generate)h(an)-152
5162 y Ft(<X>Portal)28 b Fr(class)f(for)g(ev)n(ery)e(class)i(and)f(in)n
(terface)h Ft(<X>)p Fr(.)36 b(Our)25 b(syn-)-152 5249
y(tax)d(for)i(using)e(P)n(ortals)i(is)f(eviden)n(t)f(in)g(the)g
Ft(TrunkedRadio)j Fr(class)f(in)-152 5336 y(Figure)j(8.)2040
-69 y Fm(3.3.2)90 b(Rationale)2040 23 y Fr(Stream)38
b(programs)h(presen)n(t)f(a)h(c)n(hallenge)h(in)f(that)f(\014lters)h
(need)2040 110 y(b)r(oth)27 b(regular,)i(high-v)n(olume)d(data)i
(transfer)g(and)f(irregular,)j(lo)n(w-)2040 197 y(v)n(olume)18
b(con)n(trol)i(comm)n(unication.)31 b(Moreo)n(v)n(er,)22
b(there)d(is)g(the)g(prob-)2040 284 y(lem)32 b(of)i(reasoning)g(ab)r
(out)e(the)h(relativ)n(e)g(\\time")g(b)r(et)n(w)n(een)f(\014lters)2040
371 y(when)26 b(they)e(are)j(running)e(async)n(hronously)g(and)g(in)h
(parallel.)2040 546 y(A)e(di\013eren)n(t)h(approac)n(h)f(to)h
(messaging)h(is)f(to)g(em)n(b)r(ed)e(con)n(trol)j(mes-)2040
633 y(sages)39 b(in)f(the)g(data)g(stream)g(instead)g(of)h(pro)n
(viding)e(a)i(separate)2040 720 y(mec)n(hanism)33 b(for)i(dynamic)d
(message)j(passing.)61 b(This)34 b(do)r(es)h(ha)n(v)n(e)2040
807 y(the)25 b(e\013ect)f(of)i(asso)r(ciating)i(the)c(message)h(time)g
(with)g(a)g(data)g(item,)2040 894 y(but)j(it)g(is)h(complicated,)h
(error-prone,)f(and)g(leads)g(to)f(unreadable)2040 982
y(co)r(de.)34 b(F)-6 b(urther,)22 b(it)g(could)g(h)n(urt)f(p)r
(erformance)h(in)g(the)f(steady)h(state)2040 1069 y(\(if)35
b(eac)n(h)g(\014lter)g(has)g(to)f(c)n(hec)n(k)g(whether)h(or)g(not)f(a)
h(data)g(item)f(is)2040 1156 y(actual)i(data)f(or)h(con)n(trol,)j
(instead\))c(and)g(complicates)h(compiler)2040 1243 y(analysis,)k(to)r
(o.)65 b(Finally)-6 b(,)39 b(one)d(can't)g(send)g(messages)h(upstream)
2040 1330 y(without)25 b(creating)h(a)f(separate)h(data)f(c)n(hannel)f
(for)i(them)e(to)h(tra)n(v)n(el)2040 1417 y(in.)2040
1592 y(Another)17 b(solution)h(is)f(to)h(treat)f(messages)h(as)g(sync)n
(hronous)f(metho)r(d)2040 1679 y(calls.)36 b(Ho)n(w)n(ev)n(er,)26
b(this)g(dela)n(ys)g(the)f(progress)i(of)g(the)e(stream)h(when)2040
1766 y(the)d(message)i(is)f(en)g(route,)g(thereb)n(y)f(degrading)h(the)
f(p)r(erformance)2040 1853 y(of)38 b(the)f(program)g(and)g(restricting)
h(the)f(compiler's)g(freedom)g(to)2040 1940 y(reorder)26
b(\014lter)g(executions.)2040 2115 y(W)-6 b(e)19 b(feel)h(that)f(the)g
(StreaMIT)h(messaging)h(mo)r(del)d(is)i(an)g(adv)l(ance)f(in)2040
2202 y(that)i(it)g(separates)i(the)e(notions)g(of)h(lo)n(w-v)n(olume)f
(and)g(high-v)n(olume)2040 2289 y(data)33 b(transfer{b)r(oth)g(for)g
(the)g(programmer)e(and)h(the)g(compiler{)2040 2376 y(without)g(losing)
g(a)g(w)n(ell-de\014nd)f(seman)n(tics)g(where)h(messages)g(are)2040
2464 y Fp(time)l(d)k Fr(relativ)n(e)h(to)f(the)f(high-v)n(olume)f(data)
i(\015o)n(w.)66 b(F)-6 b(urther,)38 b(b)n(y)2040 2551
y(separating)g(message)g(comm)n(unication)e(in)n(to)h(its)g(o)n(wn)h
(category)-6 b(,)2040 2638 y(few)n(er)37 b(connections)g(are)g(needed)f
(for)h(steady-state)f(data)h(trans-)2040 2725 y(fer)32
b(and)f(the)g(resulting)h(stream)f(graphs)h(are)f(more)g(amenable)g(to)
2040 2812 y(structured)25 b(stream)g(programming.)2040
3045 y Fs(3.4)99 b(Re\255Initialization)2040 3194 y Fm(3.4.1)90
b(Str)m(eaMIT)22 b(Appr)l(oac)o(h)2040 3285 y Fr(One)28
b(of)g(the)g(c)n(haracteristics)i(of)f(a)f(streaming)g(application)h
(is)g(the)2040 3373 y(need)37 b(to)g(o)r(ccaisionally)j(mo)r(dify)d
(the)f(structure)h(of)h(part)f(of)h(the)2040 3460 y(stream)23
b(graph.)34 b(StreaMIT)24 b(allo)n(ws)i(these)e(c)n(hanges)g(through)f
(a)h(re-)2040 3547 y(initialization)k(mec)n(hanism)c(that)h(is)g(in)n
(tegrated)h(with)g(its)f(messag-)2040 3634 y(ing)19 b(mo)r(del.)32
b(If)18 b(a)h(sender)g(targets)g(a)g(message)g(at)g(the)f
Ft(init)h Fr(function)2040 3721 y(of)24 b(a)g(stream)f(or)h(\014lter)f
Fj(S)t Fr(,)i(then)d(when)h(the)h(message)g(arriv)n(es,)g(it)g(re-)2040
3808 y(executes)k(the)g(initialazation)j(co)r(de)e(and)f(replaces)h
Fj(S)k Fr(with)c(a)f(new)2040 3896 y(v)n(ersion)36 b(of)g(itself.)66
b(Ho)n(w)n(ev)n(er,)38 b(the)d(new)h(v)n(ersion)g(migh)n(t)e(ha)n(v)n
(e)h(a)2040 3983 y(di\013eren)n(t)25 b(structure)f(than)h(the)f
(original)j(if)f(the)e(argumen)n(ts)h(to)g(the)2040 4070
y Ft(init)k Fr(call)f(on)g(re-initialization)h(w)n(ere)g(di\013eren)n
(t)e(than)g(during)g(the)2040 4157 y(original)h(initialization.)2040
4332 y(When)22 b(an)h(init)f(message)i(arriv)n(es,)g(it)e(do)r(es)i
(not)e(kill)h(all)h(of)f(the)f(data)2040 4419 y(that)28
b(is)i(in)e(the)h(stream)f(b)r(eing)h(re-initialized.)45
b(Rather,)29 b(it)g Fp(dr)l(ains)2040 4506 y Fr(the)21
b(stream)g(un)n(til)g(the)g(w)n(a)n(v)n(efron)n(t)g(of)h(information)g
(\(as)g(de\014ned)e(for)2040 4593 y(the)e(messaging)h(mo)r(del\))f
(from)g(the)f(top)h(of)h(the)f(stream)g(has)h(reac)n(hed)2040
4680 y(the)34 b(b)r(ottom.)59 b(The)34 b(draining)h(o)r(ccurs)f
(without)h(consuming)e(an)n(y)2040 4767 y(data)38 b(from)f(the)g(input)
f(c)n(hannels)h(to)h(the)f(re-initialized)h(region.)2040
4855 y(Instead,)e(a)e Ft(drain)h Fr(function)e(of)i(eac)n(h)f(\014lter)
f(is)i(in)n(v)n(ok)n(ed)d(to)i(pro-)2040 4942 y(vide)21
b(input)g(when)g(its)h(other)f(input)g(source)h(is)g(frozen.)34
b(\(Eac)n(h)22 b(\014lter)2040 5029 y(can)k(o)n(v)n(erride)f(the)g
Ft(drain)h Fr(function)g(as)f(part)h(of)g(its)f(de\014nition.\))34
b(If)2040 5116 y(the)22 b(programmer)f(prefers)i(to)g(kill)f(the)g
(data)h(in)f(a)g(stream)g(segmen)n(t)2040 5203 y(instead)d(of)g
(draining)f(it,)i(this)f(can)f(b)r(e)g(indicated)h(b)n(y)e(sending)h
(an)g(ex-)2040 5290 y(tra)i(argumen)n(t)g(to)g(the)g(message)g(p)r
(ortal)h(with)g(the)e(re-initialization)2040 5378 y(message.)1921
5627 y(6)p eop
%%Page: 7 7
7 6 bop -152 -69 a Fm(3.4.2)90 b(Rationale)-152 23 y
Fr(Re-initialization)19 b(is)f(a)f(headac)n(he)g(for)h(stream)f
(programmers)g(b)r(ecause{)-152 110 y(if)36 b(done)g(man)n(ually{the)e
(en)n(tire)i(run)n(time)d(system)i(could)g(b)r(e)h(put)-152
197 y(on)30 b(hold)f(to)g(re-initialize)i(a)f(p)r(ortion)g(of)g(the)f
(stream.)45 b(The)29 b(in)n(ter-)-152 284 y(face)e(to)f(starting)h(and)
f(stopping)g(streams)g(could)g(b)r(e)g(complicated)-152
371 y(when)c(there)g(is)g(not)g(an)g(explicit)g(notion)h(of)f
(initialization)i(time)e(vs.)-152 459 y(steady-state)f(execution)f
(time,)i(and)e(ad-ho)r(c)g(draining)i(tec)n(hniques)-152
546 y(could)k(risk)g(losing)h(data)f(or)g(deadlo)r(c)n(king)g(the)f
(system.)-152 720 y(StreaMIT)j(impro)n(v)n(es)d(on)i(this)g(situation)g
(b)n(y)f(abstracting)i(the)e(re-)-152 807 y(initialization)36
b(pro)r(cess)e(from)g(the)e(user.)58 b(That)34 b(is,)i(no)d(auxillary)
-152 894 y(con)n(trol)25 b(program)f(is)g(needed)g(to)g(drain)g(the)f
(old)h(streams)g(and)g(cre-)-152 982 y(ate)29 b(the)f(new)g(structure;)
h(the)f(user)g(need)g(only)g(trigger)h(the)f(reini-)-152
1069 y(tialization)41 b(pro)r(cess)e(through)f(a)h(message.)73
b(Additionally)-6 b(,)41 b(an)n(y)-152 1156 y(hierarc)n(hical)27
b(stream)e(construct)g(automatically)h(b)r(ecomes)f(a)h(p)r(os-)-152
1243 y(sible)k(candidate)f(for)h(re-initialization,)j(due)28
b(to)h(the)g(w)n(ell-de\014ned)-152 1330 y(stream)40
b(structure)f(and)h(the)g(simple)f(in)n(terface)i(with)f(the)g
Ft(init)-152 1417 y Fr(function.)62 b(Finally)-6 b(,)37
b(it)e(is)g(easy)g(for)g(the)f(compiler)h(to)f(recognize)-152
1505 y(stream)h(re-initialization)i(p)r(ossibilities)g(and)d(to)h
(accoun)n(t)g(for)h(all)-152 1592 y(p)r(ossible)21 b(con\014gurations)f
(of)g(the)f(stream)g(\015o)n(w)g(graph)h(during)e(anal-)-152
1679 y(ysis)26 b(and)g(optimization.)-152 1862 y Fs(3.5)99
b(Latency)26 b(Constraints)-152 1953 y Fr(Lastly)-6 b(,)36
b(StreaMIT)e(pro)n(vides)g(a)f(simple)h(w)n(a)n(y)f(of)i(restricting)f
(the)-152 2040 y(latency)h(of)g(an)f(information)h(w)n(a)n(v)n(efron)n
(t)g(in)f(tra)n(v)n(eling)h(from)f(the)-152 2127 y(input)27
b(of)h(one)f(\014lter)g(to)h(the)e(output)h(of)h(a)f(do)n(wnstream)g
(\014lter.)39 b(Is-)-152 2214 y(sueing)29 b(the)e(directiv)n(e)h
Ft(MAX)p 656 2214 24 4 v 29 w(LATENCY\(A,)41 b(B,)f(n\))28
b Fr(from)g(within)g(an)-152 2302 y Ft(init)e Fr(means)e(that)h
Fj(A)g Fr(can)g(only)f(execute)h(up)f(to)h(the)g(w)n(a)n(v)n(efron)n(t)
g(of)-152 2389 y(information)33 b(that)g Fj(B)j Fr(will)e(see)f(after)h
Fj(n)f Fr(in)n(v)n(o)r(cations)g(of)g(its)g(o)n(wn)-152
2476 y(w)n(ork)26 b(function.)-152 2650 y(In)j(the)h(case)h(that)e
Fj(A)h Fr(is)g(a)g(stream)g(instead)g(of)h(a)f(\014lter,)h(then)e(the)
-152 2737 y(latency)36 b(is)h(with)f(regards)h(to)f(the)f(most)h
(upstream)e(\014lter)i(of)h Fj(A)p Fr(;)-152 2825 y(lik)n(ewise,)24
b(if)f Fj(B)i Fr(is)d(a)g(stream,)h(then)d(the)i(latency)f(is)h(with)g
(regards)h(to)-152 2912 y(the)g(most)g(do)n(wnstream)h(\014lter)f(in)h
Fj(B)t Fr(.)33 b(W)-6 b(e)23 b(are)i(still)f(in)g(the)f(pro)r(cess)-152
2999 y(of)e(formalizing)f(the)f(seman)n(tics)h(in)f(cases)i(when)e
(there)g(is)h(no)g(unique)-152 3086 y(upstream)25 b(or)h(do)n(wnstream)
f(\014lter)h(in)g(these)f(streams.)-152 3269 y Fs(4.)100
b(SEMANTICS)26 b(OF)e(TIME)-152 3360 y Fr(In)k(this)h(section)g(w)n(e)g
(dev)n(elop)g(a)g(more)f(formal)h(seman)n(tics)g(for)g(the)-152
3447 y(message)35 b(deliv)n(ery)e(guaran)n(tees)h(describ)r(ed)g(ab)r
(o)n(v)n(e.)58 b(The)34 b(timing)-152 3534 y(mo)r(del)29
b(in)g(StreaMIT)h(is)f(unique)f(in)h(that)g(all)h(time)e(is)i(relativ)n
(e)g(to)-152 3622 y Fp(information)f(wavefr)l(onts)p
Fr({that)f(is,)g(t)n(w)n(o)f(indep)r(enden)n(t)e(\014lters)i(can)-152
3709 y(describ)r(e)c(a)g(common)e(time)g(only)i(in)f(terms)g(of)h(when)
f(the)g Fp(e\013e)l(cts)i Fr(of)-152 3796 y(one)i(\014lter's)g
(execution)f(are)h(seen)g(b)n(y)e(the)h(other.)35 b(Th)n(us,)25
b(although)-152 3883 y(eac)n(h)19 b(\014lter's)f Ft(work)i
Fr(function)e(is)h(in)n(v)n(ok)n(ed)e(async)n(hronously)h(without)-152
3970 y(an)n(y)h(notion)h(of)g(global)g(time,)h(t)n(w)n(o)e(in)n(v)n(o)r
(cations)h(of)h(a)e(w)n(ork)h(function)-152 4058 y(o)r(ccur)e(at)f(the)
g(same)g(\\information-relativ)n(e)i(time")e(if)h(they)e(op)r(erate)
-152 4145 y(on)26 b(the)f(same)h(information)g(w)n(a)n(v)n(efron)n(t.)
-152 4319 y(T)-6 b(o)39 b(de\014ne)g(this)f(notion)h(more)g(precisely)
-6 b(,)42 b(w)n(e)e(presen)n(t)e(transfer)-152 4406 y(functions)f(that)
f(describ)r(e)h(the)f(\015o)n(w)h(of)g(information)f(across)i(\014l-)
-152 4493 y(ters)28 b(and)g(streams.)40 b(Using)28 b(these)g(transfer)h
(functions,)g(w)n(e)f(trans-)-152 4581 y(late)36 b(message)g(deliv)n
(ery)e(constrain)n(ts)i(in)n(to)f(a)h(set)f(of)h(constrain)n(ts)-152
4668 y(on)28 b(the)f(execution)g(sc)n(hedule)h(of)g(the)f(stream)h
(graph.)40 b(Finally)-6 b(,)28 b(w)n(e)-152 4755 y(use)22
b(these)g(sc)n(heduling)g(constrain)n(ts)h(to)f(form)n(ulate)g(an)g(op)
r(erational)-152 4842 y(seman)n(tics)k(for)g(messaging)h(and)e(latency)
h(in)g(StreaMIT.)-152 5025 y Fs(4.1)99 b(Inf)n(ormation)25
b(Flo)o(w)-152 5116 y Fr(The)i(concept)e(of)i(information)g(\015o)n(w)f
(is)h(cen)n(tral)f(to)g(the)g(streaming)-152 5203 y(domain.)53
b(When)31 b(an)g(item)g(en)n(ters)h(a)g(stream,)i(it)e(carries)h(with)f
(it)-152 5290 y(some)c(new)g(information.)43 b(As)28
b(execution)g(progresses,)i(this)e(infor-)-152 5378 y(mation)i
(cascades)i(through)f(the)f(stream,)i(e\013ecting)f(the)f(state)h(of)
2076 663 y @beginspecial 88 @llx 157 @lly 326 @urx 258
@ury 2304 @rwi @setspecial
%%BeginDocument: Tapes.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725005805-04'00')
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 88 157 326 258
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

88 157 moveto
326 157 lineto
326 258 lineto
88 258 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font ZAAAAA+TimesNewRoman
11 dict begin
/FontName /ZAAAAA+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
/x 215 RD 
98f8880df842049f8b9b8798820899819d75a36808dffb0f052efb11056e
6476737f8208828381887f89087a07f726069c077c8c808f849108849187
938b93088b8f969ea0a908d3ea05cd2b059f6d96788b83088b8488858586
08828480887c8b088c7a05f767069c07788c7c907f9308809277a370b308
fb03f73605c7dc05a8b0a0a39b9608979399909b8c089d07fb2a06790797
89948a91860890858e858b84088b837f76736b0867580569be0586978592
8790087f9d85968b93088b948e909090089090948d988b088d9d05fb6706
8c7905090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ZAAAAA+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 90 /Z put
dup 104 /h put
dup 120 /x put
pop
%%EndResource
[/N25/ZAAAAA+TimesNewRoman 1 TZ
%%BeginResource: font CBAAAA+Arial
11 dict begin
/FontName /CBAAAA+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CBAAAA+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N28/CBAAAA+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
88 157 238 101 re W n
[ 0 -1 1 0 -69 346 ] concat
/N22 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N24 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N22 /ColorSpace findRes cs
0.94901 0.94901 0.94901 scn
/N24 /ExtGState findRes gs
1 i
122.681 321.161 36.12 -12.60001 rf
122.44099 321.401 0.48 -12.84 rf
122.681 321.401 36.36 -0.48 rf
158.561 321.161 0.48 -12.84 rf
122.44099 308.80099 36.36 -0.48 rf
0 0 0 scn
145.241 292.481 2.03999 0.96001 rf
145.241 333.64101 2.03999 -0.96001 rf
145.241 293.44099 2.03999 39.24001 rf
0.94901 0.94901 0.94901 scn
106.72099 233.80099 81.12 -12.48 rf
106.481 234.041 0.48 -12.72 rf
106.72099 234.041 81.36 -0.48 rf
187.601 233.80099 0.48 -12.72 rf
106.481 221.561 81.36 -0.48 rf
0 0 0 scn
145.961 207.161 2.03999 0.96001 rf
145.961 250.601 2.03999 -0.96001 rf
145.961 208.121 2.03999 41.52 rf
1 1 1 scn
133.00101 259.121 m
133.241 256.481 l
134.08099 253.961 l
135.28101 251.681 l
136.961 249.64101 l
139.00101 247.961 l
141.28101 246.761 l
143.80099 245.92101 l
146.561 245.681 l
149.201 245.92101 l
151.72099 246.761 l
154.121 247.961 l
156.041 249.64101 l
157.72099 251.681 l
158.92101 253.961 l
159.761 256.481 l
160.00101 259.121 l
160.00101 283.241 l
159.761 286.00101 l
158.92101 288.521 l
157.72099 290.80099 l
156.041 292.72099 l
154.121 294.401 l
151.72099 295.601 l
149.201 296.44099 l
146.561 296.681 l
143.80099 296.44099 l
141.28101 295.601 l
139.00101 294.401 l
136.961 292.72099 l
135.28101 290.80099 l
134.08099 288.521 l
133.241 286.00101 l
133.00101 283.241 l
133.00101 259.121 l
f* 
0 0 0 scn
133.241 259.121 m
133.481 256.481 l
133.481 256.601 l
134.321 254.08099 l
135.521 251.80099 l
135.521 251.92101 l
137.201 249.881 l
139.241 248.201 l
139.121 248.201 l
141.401 247.00101 l
143.92101 246.161 l
143.80099 246.161 l
146.561 245.92101 l
149.201 246.161 l
151.72099 247.00101 l
151.601 247.00101 l
154.00101 248.201 l
155.92101 249.881 l
157.601 251.92101 l
157.481 251.80099 l
158.681 254.08099 l
159.521 256.601 l
159.521 256.481 l
159.761 259.121 l
159.761 283.241 l
159.521 286.00101 l
158.681 288.521 l
158.681 288.401 l
157.481 290.681 l
157.601 290.681 l
155.92101 292.601 l
154.00101 294.28101 l
154.00101 294.161 l
151.601 295.36099 l
151.72099 295.36099 l
149.201 296.201 l
146.561 296.44099 l
143.80099 296.201 l
143.92101 296.201 l
141.401 295.36099 l
139.121 294.161 l
139.241 294.28101 l
137.201 292.601 l
135.521 290.681 l
134.321 288.401 l
134.321 288.521 l
133.481 286.00101 l
133.241 283.241 l
133.241 259.121 l
132.761 259.121 l
132.761 283.241 l
133.00101 286.00101 l
133.00101 286.121 l
133.841 288.64101 l
135.041 290.92101 l
135.161 291.041 l
136.841 292.961 l
138.881 294.64101 l
141.161 295.841 l
141.28101 295.841 l
143.80099 296.681 l
146.561 296.92101 l
149.201 296.681 l
149.321 296.681 l
151.841 295.841 l
154.241 294.64101 l
154.36099 294.64101 l
156.28101 292.961 l
157.961 291.041 l
157.961 290.92101 l
159.161 288.64101 l
160.00101 286.121 l
160.00101 286.00101 l
160.241 283.241 l
160.241 259.121 l
160.00101 256.481 l
159.161 253.961 l
159.161 253.841 l
157.961 251.561 l
156.28101 249.521 l
154.36099 247.841 l
154.241 247.72099 l
151.841 246.521 l
149.321 245.681 l
149.201 245.681 l
146.561 245.44099 l
143.80099 245.681 l
141.28101 246.521 l
141.161 246.521 l
138.881 247.72099 l
138.881 247.841 l
136.841 249.521 l
135.161 251.561 l
135.041 251.561 l
133.841 253.841 l
133.841 253.961 l
133.00101 256.481 l
132.761 259.121 l
f 
133.241 259.121 m
132.761 259.121 l
f 
BT
/N28 1 Tf
0 11.16 -11.16 0 153.1606 260.20061 Tm
0.0029 Tc
0 Tw
(Fil)Tj [10 ]TJ (t)Tj [1.2 ]TJ (er)Tj 
ET
1 1 1 scn
177.161 321.161 8.88 -12.60001 rf
0 0 0 scn
176.92101 321.401 0.48 -12.84 rf
177.161 321.401 9.12 -0.48 rf
185.80099 321.161 0.48 -12.84 rf
176.92101 308.80099 9.12 -0.48 rf
BT
/N25 1 Tf
0 8.3813 -6.48 0 183.8806 312.8806 Tm
0 Tc
(1)Tj 
ET
1 1 1 scn
168.041 321.161 9 -12.60001 rf
0 0 0 scn
167.80099 321.401 0.48 -12.84 rf
168.041 321.401 9.24001 -0.48 rf
176.80099 321.161 0.48 -12.84 rf
167.80099 308.80099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 174.8806 312.8806 Tm
(2)Tj 
ET
1 1 1 scn
158.92101 321.161 9 -12.60001 rf
0 0 0 scn
158.681 321.401 0.48 -12.84 rf
158.92101 321.401 9.24001 -0.48 rf
167.681 321.161 0.48 -12.84 rf
158.681 308.80099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 165.7606 312.8806 Tm
(3)Tj 
ET
0.55099 0.55099 0.55099 scn
149.561 321.401 0.48 -12.84 rf
149.80099 321.401 9.24001 -0.48 rf
158.561 321.161 0.48 -12.84 rf
149.561 308.80099 9.24001 -0.48 rf
140.681 321.401 0.48 -12.84 rf
140.92101 321.401 9.12 -0.48 rf
149.561 321.161 0.48 -12.84 rf
140.681 308.80099 9.12 -0.48 rf
131.561 321.401 0.48 -12.84 rf
131.80099 321.401 9.24001 -0.48 rf
140.561 321.161 0.48 -12.84 rf
131.561 308.80099 9.24001 -0.48 rf
122.44099 321.401 0.48 -12.84 rf
122.681 321.401 9.12 -0.48 rf
131.321 321.161 0.48 -12.84 rf
122.44099 308.80099 9.12 -0.48 rf
0.60201 0.60201 0.60201 scn
178.601 234.041 0.48 -12.72 rf
178.841 234.041 9.24001 -0.48 rf
187.601 233.80099 0.48 -12.72 rf
178.601 221.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 185.6806 225.5206 Tm
0.5 0.5 0.5 scn
(1)Tj 
ET
0.60201 0.60201 0.60201 scn
169.601 234.041 0.48 -12.72 rf
169.841 234.041 9.12 -0.48 rf
178.481 233.80099 0.48 -12.72 rf
169.601 221.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 176.56059 225.5206 Tm
0.5 0.5 0.5 scn
(2)Tj 
ET
0.60201 0.60201 0.60201 scn
160.481 234.041 0.48 -12.72 rf
160.72099 234.041 9.12 -0.48 rf
169.36099 233.80099 0.48 -12.72 rf
160.481 221.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 167.4406 225.5206 Tm
0.5 0.5 0.5 scn
(3)Tj 
ET
0.55099 0.55099 0.55099 scn
151.36099 234.041 0.48 -12.72 rf
151.601 234.041 9.12 -0.48 rf
160.241 233.80099 0.48 -12.72 rf
151.36099 221.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 158.3206 225.5206 Tm
0.5 0.5 0.5 scn
(4)Tj 
ET
0.55099 0.55099 0.55099 scn
142.36099 234.041 0.48 -12.72 rf
142.601 234.041 9.24001 -0.48 rf
151.36099 233.80099 0.48 -12.72 rf
142.36099 221.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 149.4406 225.5206 Tm
0.5 0.5 0.5 scn
(5)Tj 
ET
0.60201 0.60201 0.60201 scn
133.36099 234.041 0.48 -12.72 rf
133.601 234.041 9.12 -0.48 rf
142.241 233.80099 0.48 -12.72 rf
133.36099 221.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 140.3206 225.5206 Tm
0.5 0.5 0.5 scn
(6)Tj 
ET
0.60201 0.60201 0.60201 scn
124.36099 233.80099 9 -12.48 rf
124.121 234.041 0.48 -12.72 rf
124.36099 234.041 9.24001 -0.48 rf
133.121 233.80099 0.48 -12.72 rf
124.121 221.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 131.20061 225.5206 Tm
0.5 0.5 0.5 scn
(7)Tj 
ET
0.60201 0.60201 0.60201 scn
115.72099 233.80099 9 -12.48 rf
115.481 234.041 0.48 -12.72 rf
115.72099 234.041 9.24001 -0.48 rf
124.481 233.80099 0.48 -12.72 rf
115.481 221.561 9.24001 -0.48 rf
BT
0 8.9798 -7.08 0 123.1606 225.5206 Tm
0.5 0.5 0.5 scn
(8)Tj 
ET
0.60201 0.60201 0.60201 scn
106.72099 233.80099 9 -12.48 rf
106.481 234.041 0.48 -12.72 rf
106.72099 234.041 9.24001 -0.48 rf
115.481 233.80099 0.48 -12.72 rf
106.481 221.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 113.56059 225.5206 Tm
0.5 0.5 0.5 scn
(9)Tj 
ET
1 1 1 scn
97.72099 233.80099 9 -12.48 rf
0 0 0 scn
97.481 234.041 0.48 -12.72 rf
97.72099 234.041 9.24001 -0.48 rf
106.481 233.80099 0.48 -12.72 rf
97.481 221.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 104.56059 223.6006 Tm
-0.0132 Tc
(10)Tj 
ET
1 1 1 scn
88.601 233.80099 8.88 -12.48 rf
0 0 0 scn
88.36099 234.041 0.48 -12.72 rf
88.601 234.041 9.12 -0.48 rf
97.241 233.80099 0.48 -12.72 rf
88.36099 221.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 95.3206 223.7206 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
134.80099 269.561 9 -12.48 rf
0 0 0 scn
134.561 269.80099 0.48 -12.72 rf
134.80099 269.80099 9.24001 -0.48 rf
143.561 269.561 0.48 -12.72 rf
134.561 257.321 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 141.64059 261.28059 Tm
0 Tc
(6)Tj 
ET
1 1 1 scn
149.92101 321.161 9 -12.60001 rf
0 0 0 scn
149.681 321.401 0.48 -12.84 rf
149.92101 321.401 9.24001 -0.48 rf
158.681 321.161 0.48 -12.84 rf
149.681 308.80099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 156.7606 312.8806 Tm
(4)Tj 
ET
1 1 1 scn
134.44099 285.28101 9 -12.48 rf
0 0 0 scn
134.201 285.521 0.48 -12.72 rf
134.44099 285.521 9.24001 -0.48 rf
143.201 285.28101 0.48 -12.72 rf
134.201 273.041 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 141.28059 277.0006 Tm
(5)Tj 
ET
0.94901 0.94901 0.94901 scn
151.481 172.36099 36.24001 -12.48 rf
151.241 172.601 0.48 -12.72 rf
151.481 172.601 36.48 -0.48 rf
187.481 172.36099 0.48 -12.72 rf
151.241 160.121 36.48 -0.48 rf
0.60201 0.60201 0.60201 scn
178.601 172.601 0.48 -12.72 rf
178.841 172.601 9.12 -0.48 rf
187.481 172.36099 0.48 -12.72 rf
178.601 160.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 185.56059 164.20061 Tm
0.5 0.5 0.5 scn
(1)Tj 
ET
0.60201 0.60201 0.60201 scn
169.481 172.601 0.48 -12.72 rf
169.72099 172.601 9.24001 -0.48 rf
178.481 172.36099 0.48 -12.72 rf
169.481 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 176.56059 164.20061 Tm
0.5 0.5 0.5 scn
(2)Tj 
ET
0.60201 0.60201 0.60201 scn
160.36099 172.601 0.48 -12.72 rf
160.601 172.601 9.24001 -0.48 rf
169.36099 172.36099 0.48 -12.72 rf
160.36099 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 167.4406 164.20061 Tm
0.5 0.5 0.5 scn
(3)Tj 
ET
0.55099 0.55099 0.55099 scn
151.241 172.601 0.48 -12.72 rf
151.481 172.601 9.24001 -0.48 rf
160.241 172.36099 0.48 -12.72 rf
151.241 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 158.3206 164.20061 Tm
0.5 0.5 0.5 scn
(4)Tj 
ET
142.601 172.36099 8.88 -12.48 rf
142.36099 172.601 0.48 -12.72 rf
142.601 172.601 9.12 -0.48 rf
151.241 172.36099 0.48 -12.72 rf
142.36099 160.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 149.3206 164.20061 Tm
0 0 0 scn
(5)Tj 
ET
0.5 0.5 0.5 scn
133.481 172.36099 9 -12.48 rf
133.241 172.601 0.48 -12.72 rf
133.481 172.601 9.24001 -0.48 rf
142.241 172.36099 0.48 -12.72 rf
133.241 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 140.3206 164.20061 Tm
0 0 0 scn
(6)Tj 
ET
0.5 0.5 0.5 scn
124.36099 172.36099 9 -12.48 rf
124.121 172.601 0.48 -12.72 rf
124.36099 172.601 9.24001 -0.48 rf
133.121 172.36099 0.48 -12.72 rf
124.121 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 131.20061 164.20061 Tm
0 0 0 scn
(7)Tj 
ET
115.36099 172.601 0.48 -12.72 rf
115.601 172.601 9.24001 -0.48 rf
124.36099 172.36099 0.48 -12.72 rf
115.36099 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 122.4406 164.20061 Tm
(8)Tj 
ET
106.481 172.601 0.48 -12.72 rf
106.72099 172.601 9.12 -0.48 rf
115.36099 172.36099 0.48 -12.72 rf
106.481 160.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 113.56059 164.20061 Tm
(9)Tj 
ET
1 1 1 scn
97.72099 172.36099 8.88 -12.48 rf
0 0 0 scn
97.481 172.601 0.48 -12.72 rf
97.72099 172.601 9.12 -0.48 rf
106.36099 172.36099 0.48 -12.72 rf
97.481 160.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 104.4406 162.1606 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
88.481 172.36099 9 -12.48 rf
0 0 0 scn
88.241 172.601 0.48 -12.72 rf
88.481 172.601 9.24001 -0.48 rf
97.241 172.36099 0.48 -12.72 rf
88.241 160.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 95.3206 162.28059 Tm
-0.0562 Tc
(11)Tj 
ET
0.94901 0.94901 0.94901 scn
122.44099 381.28101 36.12 -12.60001 rf
122.201 381.521 0.48 -12.84 rf
122.44099 381.521 36.36 -0.48 rf
158.321 381.28101 0.48 -12.84 rf
122.201 368.92101 36.36 -0.48 rf
1 1 1 scn
176.92101 381.28101 8.88 -12.60001 rf
0 0 0 scn
176.681 381.521 0.48 -12.84 rf
176.92101 381.521 9.12 -0.48 rf
185.561 381.28101 0.48 -12.84 rf
176.681 368.92101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 183.64059 373.0006 Tm
0 Tc
(1)Tj 
ET
1 1 1 scn
167.80099 381.28101 9 -12.60001 rf
0 0 0 scn
167.561 381.521 0.48 -12.84 rf
167.80099 381.521 9.24001 -0.48 rf
176.561 381.28101 0.48 -12.84 rf
167.561 368.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 174.64059 373.0006 Tm
(2)Tj 
ET
1 1 1 scn
158.681 381.28101 8.88 -12.60001 rf
0 0 0 scn
158.44099 381.521 0.48 -12.84 rf
158.681 381.521 9.12 -0.48 rf
167.321 381.28101 0.48 -12.84 rf
158.44099 368.92101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 165.4006 373.0006 Tm
(3)Tj 
ET
0.55099 0.55099 0.55099 scn
149.321 381.521 0.48 -12.84 rf
149.561 381.521 9.24001 -0.48 rf
158.321 381.28101 0.48 -12.84 rf
149.321 368.92101 9.24001 -0.48 rf
140.321 381.521 0.48 -12.84 rf
140.561 381.521 9.24001 -0.48 rf
149.321 381.28101 0.48 -12.84 rf
140.321 368.92101 9.24001 -0.48 rf
131.321 381.521 0.48 -12.84 rf
131.561 381.521 9.24001 -0.48 rf
140.321 381.28101 0.48 -12.84 rf
131.321 368.92101 9.24001 -0.48 rf
122.201 381.521 0.48 -12.84 rf
122.44099 381.521 9.12 -0.48 rf
131.08099 381.28101 0.48 -12.84 rf
122.201 368.92101 9.12 -0.48 rf
1 1 1 scn
149.681 381.28101 9 -12.60001 rf
0 0 0 scn
149.44099 381.521 0.48 -12.84 rf
149.681 381.521 9.24001 -0.48 rf
158.44099 381.28101 0.48 -12.84 rf
149.44099 368.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 156.5206 373.0006 Tm
(4)Tj 
ET
1 1 1 scn
140.44099 381.28101 8.88 -12.60001 rf
0 0 0 scn
140.201 381.521 0.48 -12.84 rf
140.44099 381.521 9.12 -0.48 rf
149.08099 381.28101 0.48 -12.84 rf
140.201 368.92101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 147.28059 373.0006 Tm
(5)Tj 
ET
1 1 1 scn
131.321 381.28101 9 -12.60001 rf
0 0 0 scn
131.08099 381.521 0.48 -12.84 rf
131.321 381.521 9.24001 -0.48 rf
140.08099 381.28101 0.48 -12.84 rf
131.08099 368.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 138.1606 373.0006 Tm
(6)Tj 
ET
1 1 1 scn
125.561 235.00101 9 -12.48 rf
0 0 0 scn
125.321 235.241 0.48 -12.72 rf
125.561 235.241 9.24001 -0.48 rf
134.321 235.00101 0.48 -12.72 rf
125.321 222.761 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 132.4006 226.7206 Tm
(7)Tj 
ET
1 1 1 scn
116.92101 235.00101 8.88 -12.48 rf
0 0 0 scn
116.681 235.241 0.48 -12.72 rf
116.92101 235.241 9.12 -0.48 rf
125.561 235.00101 0.48 -12.72 rf
116.681 222.761 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 123.7606 226.7206 Tm
(8)Tj 
ET
1 1 1 scn
107.92101 235.00101 9 -12.48 rf
0 0 0 scn
107.681 235.241 0.48 -12.72 rf
107.92101 235.241 9.24001 -0.48 rf
116.681 235.00101 0.48 -12.72 rf
107.681 222.761 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 114.7606 226.7206 Tm
(9)Tj 
ET
1 1 1 scn
144.161 173.80099 9 -12.48 rf
0 0 0 scn
143.92101 174.041 0.48 -12.72 rf
144.161 174.041 9.24001 -0.48 rf
152.92101 173.80099 0.48 -12.72 rf
143.92101 161.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 151.0006 165.64059 Tm
(5)Tj 
ET
1 1 1 scn
135.161 173.80099 8.88 -12.48 rf
0 0 0 scn
134.92101 174.041 0.48 -12.72 rf
135.161 174.041 9.12 -0.48 rf
143.80099 173.80099 0.48 -12.72 rf
134.92101 161.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 141.8806 165.64059 Tm
(6)Tj 
ET
1 1 1 scn
125.92101 173.80099 9 -12.48 rf
0 0 0 scn
125.681 174.041 0.48 -12.72 rf
125.92101 174.041 9.24001 -0.48 rf
134.681 173.80099 0.48 -12.72 rf
125.681 161.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 132.7606 165.64059 Tm
(7)Tj 
ET
0.703 0.703 0.703 scn
146.561 199.601 m
133.36099 194.44099 l
137.08099 194.44099 l
137.08099 182.681 l
156.28101 182.681 l
156.28101 194.321 l
159.881 194.44099 l
f* 
146.681 199.36099 m
133.481 194.201 l
133.36099 194.681 l
133.36099 194.201 l
133.36099 194.681 l
146.561 199.841 l
f 
133.36099 194.681 3.96001 -0.48 rf
136.841 194.44099 0.48 -12 rf
137.08099 182.92101 19.44 -0.48 rf
156.041 182.681 m
156.041 194.561 l
156.28101 194.561 l
159.881 194.681 l
159.881 194.201 l
146.561 199.36099 l
146.561 199.841 l
146.681 199.841 l
160.00101 194.681 l
159.881 194.201 l
156.28101 194.08099 l
156.28101 194.561 l
156.521 194.321 l
156.521 182.681 l
f 
146.201 358.601 m
132.881 353.44099 l
136.601 353.44099 l
136.601 341.561 l
155.80099 341.561 l
155.80099 353.201 l
159.521 353.321 l
f* 
146.321 358.36099 m
133.00101 353.201 l
132.881 353.681 l
132.881 353.201 l
132.881 353.681 l
146.201 358.841 l
f 
132.881 353.681 3.96001 -0.48 rf
136.36099 353.44099 0.48 -12.12 rf
136.601 341.80099 19.44 -0.48 rf
155.561 341.561 m
155.561 353.44099 l
155.80099 353.44099 l
159.521 353.561 l
159.521 353.08099 l
146.201 358.36099 l
146.201 358.841 l
146.321 358.841 l
159.64101 353.561 l
159.521 353.08099 l
155.80099 352.961 l
155.80099 353.44099 l
156.041 353.201 l
156.041 341.561 l
f 
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2040 837 a Fq(Figure)22 b(9:)35 b(A)21 b(\014lter's)g
(input)i(and)e(output)i(tap)r(es)f(during)h(an)2040 925
y(execution)e(step.)36 b(With)22 b(eac)n(h)f(step,)h(the)f(\014lter)h
(pushes)e(t)n(w)n(o)2040 1012 y(items,)k(p)r(ops)h(t)n(w)n(o)e(items,)h
(and)g(p)r(eeks)f(at)g(three)h(additional)2040 1099 y(items.)53
b(The)34 b(initial)j(state)d(of)h(the)f(input)h(tap)r(e)g(is)g(sho)n
(wn)2040 1186 y(at)c(left.)41 b(The)30 b(cen)n(ter)g(sho)n(ws)g(the)g
(\014lter)i(with)f(b)r(oth)g(input)2040 1273 y(and)25
b(output)h(tap)r(es)f(during)h(the)e(in)n(v)n(o)r(cation)j(of)d
Ft(work)p Fq(.)38 b(The)2040 1360 y(\014nal)30 b(state)g(of)g(the)f
(output)i(tap)r(e)f(is)g(sho)n(wn)f(at)h(righ)n(t)2040
1587 y Fr(\014lters)22 b(and)g(the)g(v)l(alues)g(of)h(new)f(data)g
(items)g(whic)n(h)g(are)h(pro)r(duced.)2040 1675 y(W)-6
b(e)29 b(refer)h(to)g(an)f(\\information)h(w)n(a)n(v)n(efron)n(t")g(as)
g(the)f(sequence)g(of)2040 1762 y(\014lter)j(executions)f(that)h
(\014rst)f(sees)i(the)e(e\013ects)h(of)g(a)g(giv)n(en)f(input)2040
1849 y(item.)j(This)26 b(w)n(a)n(v)n(efron)n(t)g(is)g(w)n
(ell-de\014ned)f(ev)n(en)g(in)g(the)g(presence)h(of)2040
1936 y(rate-c)n(hanging)g(\014lters)g(that)f(p)r(eek)g(or)h(p)r(op)f(a)
h(di\013eren)n(t)f(n)n(um)n(b)r(er)f(of)2040 2023 y(items)e(than)g
(they)g(push.)33 b(T)-6 b(o)23 b(formalize)h(the)e(w)n(a)n(v)n(efron)n
(t,)i(w)n(e)f(in)n(tro-)2040 2110 y(duce)30 b(some)h(new)g(represen)n
(tations)h(for)f(the)g(state)g(of)g(the)g(stream)2040
2198 y(graph.)37 b(Consider)27 b(that)g(in)f(place)h(of)g(eac)n(h)g
(data)g(c)n(hannel)f(there)g(is)2040 2285 y(an)h(in\014nite)f(\\tap)r
(e")h(whic)n(h)g(con)n(tains)g(the)f(history)g(of)h(v)l(alues)g(that)
2040 2372 y(ha)n(v)n(e)36 b(b)r(een)g(pushed)g(on)n(to)g(the)h(c)n
(hannel)f(\(see)h(Figure)g(9\).)67 b(No)n(w)2040 2459
y(consider)26 b(the)g(follo)n(wing)i(functions:)2151
2673 y Fu(\017)38 b Fr(Giv)n(en)g(that)g(there)g(are)h
Fj(x)e Fr(items)h(on)g(tap)r(e)h Fj(a)p Fr(,)i(the)d(maxi-)2227
2760 y(m)n(um)32 b(n)n(um)n(b)r(er)g(of)k(items)e(that)g(can)h(app)r
(ear)f(on)h(tap)r(e)g Fj(b)f Fr(is)2227 2847 y Fj(max)2380
2856 y Fi(a)p Fw(!)p Fi(b)2505 2847 y Fr(\()p Fj(x)p
Fr(\).)2151 2984 y Fu(\017)k Fr(Giv)n(en)i(that)g(there)g(are)h
Fj(x)f Fr(items)g(on)h(tap)r(e)f Fj(b)p Fr(,)45 b(the)40
b(mini-)2227 3071 y(m)n(um)35 b(n)n(um)n(b)r(er)h(of)i(items)g(that)f
(m)n(ust)f(app)r(ear)i(on)g(tap)r(e)g Fj(a)2227 3159
y Fr(is)26 b Fj(min)2444 3168 y Fi(a)p Fw( )p Fi(b)2570
3159 y Fr(\()p Fj(x)p Fr(\).)2040 3373 y(Note)19 b(that)g(these)g
(functions)g(are)h(only)f(de\014ned)f(o)n(v)n(er)h(pairs)g(of)h(tap)r
(es)2040 3460 y(\()p Fj(a;)13 b(b)p Fr(\))28 b(where)h
Fj(a)f Fr(is)i Fp(upstr)l(e)l(am)g Fr(of)f Fj(b)p Fr({that)g(is,)h
(where)f(there)g(is)g(a)g(di-)2040 3547 y(rected)g(path)f(in)g(the)g
(stream)g(graph)h(from)f(the)g(\014lter)h(follo)n(wing)i
Fj(a)2040 3634 y Fr(to)36 b(the)g(\014lter)g(preceding)g
Fj(b)p Fr(.)66 b(W)-6 b(e)36 b(will)h(sa)n(y)f(that)g(the)g(\014lter)g
Fj(b)g Fr(is)2040 3721 y Fp(downstr)l(e)l(am)28 b Fr(of)e
Fj(a)g Fr(under)e(exactly)i(these)g(same)f(conditions.)2040
3896 y(The)i Fj(max)f Fr(and)g Fj(min)h Fr(functions)g(are)g(related)h
(to)f(the)f(information)2040 3983 y(w)n(a)n(v)n(efron)n(t)i(in)g(the)g
(follo)n(wing)i(sense.)42 b(The)28 b(item)f(at)h(p)r(osition)h
Fj(y)f Fr(=)2040 4070 y Fj(min)2180 4079 y Fi(a)p Fw( )p
Fi(b)2306 4070 y Fr(\()p Fj(x)p Fr(\))i(of)h(tap)r(e)g
Fj(a)f Fr(is)h(the)g(latest)g(item)f(on)h(tap)r(e)f Fj(a)g
Fr(to)h Fp(a\013e)l(ct)2040 4157 y Fr(the)j(item)g(at)h(p)r(osition)h
Fj(x)e Fr(of)h(tap)r(e)g Fj(b)p Fr(.)61 b(This)36 b(is)f(b)r(ecause)g
(item)f Fj(x)2040 4244 y Fr(on)26 b(tap)r(e)h Fj(b)f
Fr(can)g(b)r(e)g(pro)r(duced)g(if)h(and)e(only)i(if)f(tap)r(e)h
Fj(a)f Fr(con)n(tains)g(at)2040 4332 y(least)31 b Fj(y)i
Fr(items.)48 b(Note)30 b(that)g(this)h(e\013ect)f(migh)n(t)g(b)r(e)g
(via)g(a)h(con)n(trol)2040 4419 y(dep)r(endence)d(rather)h(than)g(a)g
(data)h(dep)r(endence{for)f(instance,)i(if)2040 4506
y(item)e Fj(y)j Fr(needed)d(to)h(pass)h(through)e(a)h(round-robin)f
(joiner)i(b)r(efore)2040 4593 y(some)e(data)h(from)f(another)g(stream)g
(could)g(b)r(e)h(routed)f(to)g(tap)r(e)g Fj(b)p Fr(.)2040
4680 y(Ho)n(w)n(ev)n(er,)34 b(when)f(sp)r(eaking)f(of)i(the)e
(information)g(w)n(a)n(v)n(efron)n(t,)j(w)n(e)2040 4767
y(only)24 b(consider)h(information)f(passed)h(through)e(the)h(data)g
(streams;)2040 4855 y(if)h(a)g(data)g(item)f(a\013ects)h(another)g(via)
g(a)g(lo)n(w-latency)g(do)n(wnstream)2040 4942 y(message,)e(then)d
(this)h(e\013ect)g(could)g(jump)f(ahead)h(of)g(the)g(w)n(a)n(v)n(efron)
n(t.)2040 5116 y(W)-6 b(e)17 b(no)n(w)g(turn)g(to)g(deriving)g
(expressions)h(for)g Fj(max)3505 5125 y Fi(a)p Fw(!)p
Fi(b)3647 5116 y Fr(and)f Fj(min)3928 5125 y Fi(a)p Fw( )p
Fi(b)4054 5116 y Fr(.)2040 5203 y(Doing)24 b(so)g(will)h(allo)n(w)g(us)
e(to)h(formalize)g(the)f(seman)n(tics)g(of)h(messag-)2040
5290 y(ing)f(and)g(latency)g(in)g(StreaMIT,)h(as)f(w)n(ell)h(as)g
(enabling)f(static)h(v)n(eri-)2040 5378 y(\014cation)f(tec)n(hniques)g
(suc)n(h)f(as)i(deadlo)r(c)n(k)f(and)g(o)n(v)n(er\015o)n(w)g
(detection.)1921 5627 y(7)p eop
%%Page: 8 8
8 7 bop 245 -8 a @beginspecial 145 @llx 243 @lly 388
@urx 272 @ury 1440 @rwi @setspecial
%%BeginDocument: pipeline.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010806092404)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 145 243 388 272
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

145 243 moveto
388 243 lineto
388 272 lineto
145 272 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font ODDKGL+TimesNewRoman
11 dict begin
/FontName /ODDKGL+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/A 138 RD 
93f9660df87df71315986c92748b7d088b7f868282840882847986718a08
8a7905f79a069d07708d76927c98087b997ba878b708fb7af8bc057a06fb
7dfcb605775a796c7a7b08828379856f86088d7905f763068d9d05698d77
90819308839285948b95088c99909e96a508b7f305f79606b12c0509fbac
f71615f707f7a005f703fba005fb7606090e ND 
/B 254 RD 
9cf92f0df8aaf821159fa595a98bac088bb27ead71a90872a965a05a9708
6d915f90568b08fbb2067907a406a38b9e84987d08947f90728b6208fc41
078b6687738480087f787783708b0872067907f7cc06d68bc292af9908b0
98a7a1a0a9089fab96aa8bac088bb67bb06ba90876a0689b5d9508b297a9
9f9fa50809fbedf77215a592a88fac8b08c78bb97dab7008aa709b6a8b64
088b7385747e76087f74797c738108728168865c8b08778b7b8c7c8c087a
8c7e8d7f8d08f7910709fbbf04948c978c998c08998c9d8b9f8b08b88bb3
84ab7d08aa7ea2789973089a7492728b71088b647b6a6c70086d725d7d50
8b08678b658f659408f7a407090e ND 
/F 175 RD 
9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08
9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f
8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d
0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06
a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685
6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 
/I 108 RD 
a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8
41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b
87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b
7783708b0873067907f7b0069d077306090e ND 
/J 146 RD 
a0f8190df1f919159a8b9a87998308968692848e83088f7f8d768b6a08fc
59078b6e877983800885818286828b0880898195849d087ea7819e839208
8191828f818b087e8b7e868081088383877f8b7b088b77947a9d7c089b7b
a484a98b08b18bab97a6a208a5a19ea796aa0895a991b48bbd08f7d8078b
b38fa4939508979b9f93a68b08a3069d07fbb0067907a306090e ND 
/O 133 RD 
aef9660df6f8e315444967358b22088b24aa37c94a08c94bd86ae68b08e4
8bd8accacd08cccfaade8bf0088bec6cdd4ccc084bcc41ac358b08358b40
6e4d51088b0609f7fe7c15b854a1368bfb05088b22773f635a08615a5873
4d8b08528b5ca168b7085bc675de8bf700088bf5a1dbb8c208aeb7bba1c6
8b08ca8bbc75af5f088a07090e ND 
/S 263 RD 
caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308
639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975
9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b
8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3
087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893
8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f
b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77
a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08
a67ca1769a71089b719568915f089d06f779077906090e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
/m 352 RD 
93f99e0df731f861157606fb1b54059279059890968d948b08938c928990
870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584
83870883867d89768b087907f771069d07738b7b8d838f08839085918794
088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099
7608967c90708b6708fb55078b708a7b898608897f848282850881877b87
738b08897905f77706899d05768b7a8e829008828f84928892088893899e
8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81
987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d
88788b0882067907f76f069d07788b7d8e829008828f8592889208879589
9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b
7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88
7a84087b847b827c7f08868478796b6a088aeb05090e ND 
/n 207 RD 
91f8880df730f861157606fb1b54059279059890968d948b08938c928990
870890858f848d7f088e7f8c6a8b5508fb3a078b6d8774838008837e7c86
748b0881067907f772069d07738b7b8d838f08829085918694088894899c
8ba908f78107b1b8b19fb28b08a48b9d829679089477916e8b6208fb4c07
8b718a7c8a8608887f858183850882867d87768b0882067907f771069d07
768b7c8d839008838f85928793088894889e8ba708f753078bb687a8849f
0881a67da07997087a977691738b085b8b5a6c574c088ae905090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ODDKGL+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 79 /O put
dup 83 /S put
dup 90 /Z put
dup 104 /h put
dup 109 /m put
dup 110 /n put
pop
%%EndResource
[/N89/ODDKGL+TimesNewRoman 1 TZ
%%BeginResource: font ODDKFK+Arial
11 dict begin
/FontName /ODDKFK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/M 66 RD 
d5f9d50de716f8f607f763fcf605e006f765f8eb05fceb07e606f96007fb
1306fb40fc860579587e6583710885a37fae7bba08fb3df88f05fb2206fd
6007e606090e ND 
/O 157 RD 
bbf99e0db4f73e15a653b35fc06a08c26ac77bce8b08c88bc59ac1a808c2
a9b4b6a8c408a8c49acc8bd4088bd27dcb6fc30870c562b656ab0856aa50
9b498b08248b3a694b48084b486b2e8bfb0b088b4d994fa6530809f715f8
2b15bcb9c5a2ce8b08b98bb67fb17308b173a8699f60089e6095588b5108
8b2f74445d59085d595072448b08458b51a45dbd085cbb74d08be1088bf6
a3d8bbb908090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/j 83 RD 
5df7720df75bf8fa15f10734068a2505e30609fb16fdcc15bc8bae9ba0ac
089ca493b88bcb088cf8b70532068cfcb5058a59876e827f0882817e8479
8b08818b7d8d7990087b4005a185a288a38b088b06090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ODDKFK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N86/ODDKFK+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
145 243 243 29 re W n
[ 0 -1 1 0 -98 417 ] concat
/N77 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N98 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
BT
/N89 1 Tf
0 9 -9 0 167.0806 252.0406 Tm
/N77 /ColorSpace findRes cs
0 0 0 scn
/N98 /ExtGState findRes gs
0 Tc
0 Tw
(I)Tj 
0 6.96001 -6.96001 0 169.9606 255.4006 Tm
(A)Tj 
0 9 -9 0 167.0806 339.28059 Tm
(O)Tj 
0 6.96001 -6.96001 0 169.9606 346.12061 Tm
(A)Tj 
0 9 -9 0 167.0806 365.3206 Tm
(I)Tj 
0 6.96001 -6.96001 0 169.9606 368.6806 Tm
(B)Tj 
/N86 1 Tf
0 9 -9 0 167.0806 355.6006 Tm
(=)Tj 
/N89 1 Tf
9.8533 0 TD
(O)Tj 
0 6.96001 -6.96001 0 169.9606 451.12061 Tm
(B)Tj 
ET
1 i
158.681 276.041 m
158.321 275.92101 l
157.961 275.681 l
157.841 275.44099 l
157.72099 274.961 l
157.961 274.241 l
158.681 274.00101 l
159.401 274.241 l
159.64101 274.601 l
159.761 274.961 l
159.64101 275.44099 l
159.401 275.681 l
159.041 275.92101 l
158.681 276.041 l
f* 
158.44099 273.64101 m
155.80099 275.08099 l
155.44099 275.08099 l
155.561 275.561 l
158.681 286.481 l
161.80099 275.561 l
161.92101 275.321 l
161.561 275.08099 l
160.841 275.321 l
158.201 284.561 l
159.161 284.80099 l
159.161 284.561 l
156.521 275.321 l
155.561 275.561 l
156.28101 275.92101 l
158.92101 274.481 l
f 
161.561 275.08099 m
158.92101 273.64101 l
158.681 273.521 l
158.44099 273.64101 l
158.44099 274.481 l
161.08099 275.92101 l
f 
158.681 274.00101 m
156.041 275.44099 l
158.681 284.681 l
161.321 275.44099 l
f* 
157.72099 243.041 2.03999 0.96001 rf
157.72099 275.92101 2.03999 -0.96001 rf
157.72099 244.00101 2.03999 30.96001 rf
157.72099 432.28101 2.03999 0.96001 rf
157.72099 485.201 2.03999 -0.96001 rf
157.72099 433.241 2.03999 51 rf
1 1 1 scn
145.241 401.681 m
145.481 398.92101 l
146.321 396.401 l
147.521 394.121 l
149.201 392.08099 l
151.121 390.401 l
153.401 389.201 l
156.041 388.481 l
158.681 388.121 l
161.44099 388.481 l
163.961 389.201 l
166.241 390.401 l
168.28101 392.08099 l
169.961 394.121 l
171.161 396.401 l
171.881 398.92101 l
172.241 401.681 l
172.241 419.681 l
171.881 422.44099 l
171.161 424.961 l
169.961 427.241 l
168.28101 429.28101 l
166.241 430.841 l
163.961 432.161 l
161.44099 432.881 l
158.681 433.241 l
156.041 432.881 l
153.401 432.161 l
151.121 430.841 l
149.201 429.28101 l
147.521 427.241 l
146.321 424.961 l
145.481 422.44099 l
145.241 419.681 l
145.241 401.681 l
f* 
0 0 0 scn
145.481 401.681 m
145.72099 398.92101 l
145.72099 399.041 l
146.561 396.521 l
147.761 394.241 l
147.761 394.36099 l
149.44099 392.321 l
151.36099 390.64101 l
151.241 390.64101 l
153.521 389.44099 l
156.161 388.72099 l
158.80099 388.36099 l
158.681 388.36099 l
161.44099 388.72099 l
163.961 389.44099 l
163.841 389.44099 l
166.121 390.64101 l
168.161 392.321 l
169.841 394.36099 l
169.72099 394.241 l
170.92101 396.521 l
171.64101 399.041 l
172.00101 401.80099 l
172.00101 401.681 l
172.00101 419.681 l
171.64101 422.44099 l
170.92101 424.961 l
170.92101 424.841 l
169.72099 427.121 l
169.841 427.121 l
168.161 429.161 l
166.121 430.72099 l
163.841 432.041 l
163.961 431.92101 l
161.44099 432.64101 l
158.681 433.00101 l
158.80099 433.00101 l
156.161 432.64101 l
153.521 431.92101 l
153.521 432.041 l
151.241 430.72099 l
151.36099 430.72099 l
149.44099 429.161 l
147.761 427.121 l
146.561 424.841 l
146.561 424.961 l
145.72099 422.44099 l
145.481 419.681 l
145.481 401.681 l
145.00101 401.681 l
145.00101 419.681 l
145.241 422.44099 l
145.241 422.561 l
146.08099 425.08099 l
147.28101 427.36099 l
147.401 427.481 l
149.08099 429.521 l
151.00101 431.08099 l
153.28101 432.401 l
153.401 432.401 l
156.041 433.121 l
158.681 433.481 l
158.80099 433.481 l
161.561 433.121 l
164.08099 432.401 l
166.36099 431.08099 l
168.401 429.521 l
168.521 429.521 l
170.201 427.481 l
170.201 427.36099 l
171.401 425.08099 l
172.121 422.561 l
172.481 419.80099 l
172.481 401.681 l
172.121 398.92101 l
171.401 396.401 l
171.401 396.28101 l
170.201 394.00101 l
168.521 391.961 l
166.481 390.28101 l
166.36099 390.161 l
164.08099 388.961 l
161.561 388.241 l
158.80099 387.881 l
158.681 387.881 l
156.041 388.241 l
153.401 388.961 l
153.28101 388.961 l
151.00101 390.161 l
151.00101 390.28101 l
149.08099 391.961 l
147.401 394.00101 l
147.28101 394.00101 l
146.08099 396.28101 l
146.08099 396.401 l
145.241 398.92101 l
145.00101 401.681 l
f 
145.481 401.681 m
145.00101 401.681 l
f 
BT
/N86 1 Tf
0 14.39999 -14.39999 0 162.7606 404.20061 Tm
(B)Tj 
ET
1 1 1 scn
145.241 300.161 m
145.481 297.401 l
146.321 294.881 l
147.521 292.601 l
149.201 290.561 l
151.121 289.00101 l
153.401 287.681 l
156.041 286.961 l
158.681 286.72099 l
161.44099 286.961 l
163.961 287.681 l
166.241 289.00101 l
168.28101 290.561 l
169.961 292.601 l
171.161 294.881 l
171.881 297.401 l
172.241 300.161 l
172.241 318.161 l
171.881 320.92101 l
171.161 323.44099 l
169.961 325.72099 l
168.28101 327.761 l
166.241 329.44099 l
163.961 330.64101 l
161.44099 331.481 l
158.681 331.72099 l
156.041 331.481 l
153.401 330.64101 l
151.121 329.44099 l
149.201 327.761 l
147.521 325.72099 l
146.321 323.44099 l
145.481 320.92101 l
145.241 318.161 l
145.241 300.161 l
f* 
0 0 0 scn
145.481 300.161 m
145.72099 297.401 l
145.72099 297.521 l
146.561 295.00101 l
147.761 292.72099 l
147.761 292.841 l
149.44099 290.80099 l
151.36099 289.241 l
151.241 289.241 l
153.521 287.92101 l
156.161 287.201 l
156.041 287.201 l
158.681 286.961 l
161.44099 287.201 l
163.961 287.92101 l
163.841 287.92101 l
166.121 289.241 l
168.161 290.80099 l
169.841 292.841 l
169.72099 292.72099 l
170.92101 295.00101 l
171.64101 297.521 l
172.00101 300.28101 l
172.00101 300.161 l
172.00101 318.161 l
171.64101 320.92101 l
170.92101 323.44099 l
170.92101 323.321 l
169.72099 325.601 l
169.841 325.601 l
168.161 327.64101 l
166.121 329.321 l
166.121 329.201 l
163.841 330.401 l
163.961 330.401 l
161.44099 331.241 l
158.681 331.481 l
156.041 331.241 l
156.161 331.241 l
153.521 330.401 l
151.241 329.201 l
151.36099 329.321 l
149.44099 327.64101 l
147.761 325.601 l
146.561 323.321 l
146.561 323.44099 l
145.72099 320.92101 l
145.481 318.161 l
145.481 300.161 l
145.00101 300.161 l
145.00101 318.161 l
145.241 320.92101 l
145.241 321.041 l
146.08099 323.561 l
147.28101 325.841 l
147.401 325.961 l
149.08099 328.00101 l
151.00101 329.681 l
153.28101 330.881 l
153.401 330.881 l
156.041 331.72099 l
158.681 331.961 l
161.44099 331.72099 l
161.561 331.72099 l
164.08099 330.881 l
166.36099 329.681 l
166.481 329.681 l
168.521 328.00101 l
170.201 325.961 l
170.201 325.841 l
171.401 323.561 l
172.121 321.041 l
172.481 318.28101 l
172.481 300.161 l
172.121 297.401 l
171.401 294.881 l
171.401 294.761 l
170.201 292.481 l
168.521 290.44099 l
168.401 290.44099 l
166.36099 288.881 l
164.08099 287.561 l
164.08099 287.44099 l
161.561 286.72099 l
161.44099 286.72099 l
158.681 286.481 l
156.041 286.72099 l
153.401 287.44099 l
153.28101 287.561 l
151.00101 288.881 l
149.08099 290.44099 l
147.401 292.481 l
147.28101 292.481 l
146.08099 294.761 l
146.08099 294.881 l
145.241 297.401 l
145.00101 300.161 l
f 
145.481 300.161 m
145.00101 300.161 l
f 
BT
0 14.39999 -14.39999 0 162.7606 306.0406 Tm
(A)Tj 
ET
158.681 377.201 m
158.321 377.201 l
157.961 376.961 l
157.72099 376.241 l
157.961 375.521 l
158.321 375.28101 l
159.041 375.28101 l
159.401 375.521 l
159.64101 375.881 l
159.761 376.241 l
159.64101 376.601 l
159.401 376.961 l
159.041 377.201 l
158.681 377.201 l
f* 
158.44099 374.92101 m
155.80099 376.36099 l
155.44099 376.36099 l
155.561 376.841 l
158.681 387.761 l
161.80099 376.841 l
161.92101 376.601 l
161.561 376.36099 l
160.841 376.601 l
158.201 385.841 l
159.161 386.08099 l
159.161 385.841 l
156.521 376.601 l
155.561 376.841 l
156.28101 377.201 l
158.92101 375.761 l
f 
161.561 376.36099 m
158.92101 374.92101 l
158.681 374.80099 l
158.44099 374.92101 l
158.44099 375.761 l
161.08099 377.201 l
f 
158.681 375.28101 m
156.041 376.72099 l
158.681 385.961 l
161.321 376.72099 l
f* 
157.72099 331.121 2.03999 0.96001 rf
157.72099 377.201 2.03999 -0.96001 rf
157.72099 332.08099 2.03999 44.16 rf
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 47 166 a Fq(Figure)30 b(10:)39 b Fn(Stream)25
b(construct)i(with)f(lab)r(eling.)-152 411 y Fm(4.1.1)90
b(F)l(ilter)o(s)-152 502 y Fr(Consider)22 b(a)f(\014lter)g
Fj(A)f Fr(that)h(p)r(eeks)f Fj(peek)997 510 y Fi(A)1046
502 y Fr(,)i(p)r(ops)f Fj(pop)1381 510 y Fi(A)1431 502
y Fr(,)h(and)e(pushes)-152 589 y Fj(push)11 597 y Fi(A)91
589 y Fr(data)30 b(items)f(on)g(ev)n(ery)g(execution)h(step.)46
b(F)-6 b(urther,)30 b(let)g(us)-152 676 y(denote)e(the)f(input)f(and)i
(output)e(tap)r(es)i(of)g Fj(A)f Fr(b)n(y)g Fj(I)1365
684 y Fi(A)1442 676 y Fr(and)g Fj(O)1651 684 y Fi(A)1702
676 y Fr(,)h(re-)-152 763 y(sp)r(ectiv)n(ely)-6 b(.)32
b(W)-6 b(e)18 b(no)n(w)h(turn)f(our)h(atten)n(tion)g(to)g(\014nding)f
Fj(max)1609 771 y Fi(I)1636 782 y Fh(A)1682 771 y Fw(!)p
Fi(O)1790 782 y Fh(A)-152 851 y Fr(and)f Fj(min)129 859
y Fi(I)156 870 y Fh(A)204 859 y Fw( )p Fi(O)312 870 y
Fh(A)363 851 y Fr(,)i(describing)e(the)g(transfer)h(of)g(information)g
(across)-152 938 y(the)26 b(\014lter)f Fj(A)p Fr(.)-152
1112 y(T)-6 b(o)23 b(deriv)n(e)e Fj(max)333 1120 y Fi(I)360
1131 y Fh(A)407 1120 y Fw(!)p Fi(O)515 1131 y Fh(A)565
1112 y Fr(\()p Fj(x)p Fr(\),)i(observ)n(e)f(that)f(the)h(\014lter)g
(can)g(execute)-152 1199 y(so)37 b(long)f(as)h(it)f(do)r(es)g(not)g(p)r
(eek)f(b)r(ey)n(ond)g(the)g Fj(x)p Fr('th)g(item)g(on)h(the)-152
1286 y(input)g(tap)r(e,)41 b Fj(I)307 1294 y Fi(A)356
1286 y Fr(.)69 b(After)37 b(the)f Fj(n)p Fr('th)h(execution,)j(it)d
(has)g(p)r(opp)r(ed)-152 1374 y Fj(n)23 b Fu(\003)f Fj(pop)92
1382 y Fi(A)175 1374 y Fr(items,)35 b(p)r(eek)n(ed)e(up)g(to)g
Fj(n)23 b Fu(\003)f Fj(pop)1137 1382 y Fi(A)1209 1374
y Fr(+)g(\()p Fj(peek)1472 1382 y Fi(A)1543 1374 y Fu(\000)g
Fj(pop)1740 1382 y Fi(A)1790 1374 y Fr(\),)-152 1461
y(and)37 b(pushed)g Fj(n)25 b Fu(\003)g Fj(push)579 1469
y Fi(A)666 1461 y Fr(items.)69 b(Th)n(us,)40 b(it)e(can)f(execute)g
Fj(n)k Fr(=)-152 1548 y Fu(b)p Fr(\()p Fj(x)20 b Fu(\000)g
Fr(\()p Fj(peek)237 1556 y Fi(A)306 1548 y Fu(\000)g
Fj(pop)501 1556 y Fi(A)551 1548 y Fr(\)\))p Fj(=pop)764
1556 y Fi(A)813 1548 y Fr(\))p Fu(c)31 b Fr(times,)g(lea)n(ving)g(the)f
(follo)n(wing)-152 1635 y(expression)c(for)h Fj(max)489
1643 y Fi(I)516 1654 y Fh(A)562 1643 y Fw(!)p Fi(O)670
1654 y Fh(A)721 1635 y Fr(\()p Fj(x)p Fr(\):)-114 1773
y Fj(max)39 1781 y Fi(I)66 1792 y Fh(A)112 1781 y Fw(!)p
Fi(O)220 1792 y Fh(A)271 1773 y Fr(\()p Fj(x)p Fr(\))20
b(=)-42 1887 y Fg(8)-42 1954 y(>)-42 1976 y(<)-42 2111
y(>)-42 2133 y(:)64 1975 y Fj(push)227 1983 y Fi(A)294
1975 y Fu(\003)350 1892 y Fg(j)400 1939 y Fi(x)p Fw(\000)p
Fk(\()p Fi(peek)630 1950 y Fh(A)678 1939 y Fw(\000)p
Fi(pop)821 1950 y Fh(A)867 1939 y Fk(\))p 400 1958 492
4 v 575 2000 a Fi(pop)670 2011 y Fh(A)901 1892 y Fg(k)1016
1975 y Fj(if)84 b(x)21 b Fu(\025)g Fr(\()p Fj(peek)1490
1983 y Fi(A)1556 1975 y Fu(\000)c Fj(pop)1748 1983 y
Fi(A)1797 1975 y Fr(\))484 2172 y(0)494 b Fj(if)84 b(x)21
b(<)g Fr(\()p Fj(peek)1490 2180 y Fi(A)1556 2172 y Fu(\000)c
Fj(pop)1748 2180 y Fi(A)1797 2172 y Fr(\))-152 2310 y(By)32
b(iden)n(tical)g(reasoning,)i(the)d(reader)h(can)f(v)n(erify)g(the)g
(follo)n(wing)-152 2397 y(expression)26 b(for)h Fj(min)476
2405 y Fi(I)503 2416 y Fh(A)551 2405 y Fw( )p Fi(O)659
2416 y Fh(A)709 2397 y Fr(\()p Fj(x)p Fr(\):)-31 2582
y Fj(min)109 2590 y Fi(I)136 2601 y Fh(A)184 2590 y Fw( )p
Fi(O)292 2601 y Fh(A)343 2582 y Fr(\()p Fj(x)p Fr(\))20
b(=)548 2477 y Fg(\030)688 2534 y Fj(x)p 603 2565 213
4 v 603 2633 a(push)766 2641 y Fi(A)826 2477 y Fg(\031)888
2582 y Fu(\003)d Fj(pop)1058 2590 y Fi(A)1125 2582 y
Fr(+)g(\()p Fj(peek)1383 2590 y Fi(A)1449 2582 y Fu(\000)g
Fj(pop)1641 2590 y Fi(A)1690 2582 y Fr(\))-152 2805 y
Fm(4.1.2)90 b(Pipelines)-152 2897 y Fr(Let)26 b(us)g(no)n(w)g(deriv)n
(e)f(expressions)i(for)f Fj(min)g Fr(and)f Fj(max)g Fr(in)h(the)f(case)
-152 2984 y(of)c(pip)r(elined)f(\014lters.)33 b(In)19
b(the)h(base)g(case,)j(consider)d(that)g(t)n(w)n(o)g(\014lters)-152
3071 y(are)29 b(connected,)g(with)f(the)g(output)f(of)i
Fj(A)f Fr(feeding)h(in)n(to)f(the)g(input)-152 3158 y(of)33
b Fj(B)j Fr(\(see)d(Figure)g(10\).)55 b(W)-6 b(e)32 b(are)h(seeking)f
Fj(max)1328 3166 y Fi(I)1355 3177 y Fh(A)1402 3166 y
Fw(!)p Fi(O)1510 3177 y Fh(B)1562 3158 y Fr(\()p Fj(x)p
Fr(\):)47 b(the)-152 3245 y(maxim)n(um)35 b(n)n(um)n(b)r(er)h(of)i
(items)g(that)g(can)g(app)r(ear)g(on)g(tap)r(e)g Fj(O)1788
3253 y Fi(B)-152 3332 y Fr(giv)n(en)29 b(that)f(there)g(are)i
Fj(x)e Fr(items)g(on)g(tap)r(e)h Fj(I)1151 3340 y Fi(A)1201
3332 y Fr(.)43 b(Observing)28 b(that)g(a)-152 3420 y(maxim)n(um)e(of)j
Fj(max)453 3428 y Fi(I)480 3439 y Fh(A)526 3428 y Fw(!)p
Fi(O)634 3439 y Fh(A)685 3420 y Fr(\()p Fj(x)p Fr(\))f(items)g(can)h
(app)r(ear)g(on)f(tap)r(e)h Fj(O)1769 3428 y Fi(A)1820
3420 y Fr(,)-152 3507 y(and)17 b(that)g Fj(O)205 3515
y Fi(A)273 3507 y Fr(m)n(ust)e(equal)j Fj(I)683 3515
y Fi(B)752 3507 y Fr(since)g(the)e(\014lters)i(are)f(connected,)i(w)n
(e)-152 3594 y(see)35 b(that)f(a)g(maxim)n(um)d(of)j
Fj(max)843 3602 y Fi(I)870 3613 y Fh(B)919 3602 y Fw(!)p
Fi(O)1027 3613 y Fh(B)1079 3594 y Fr(\()p Fj(max)1262
3602 y Fi(I)1289 3613 y Fh(A)1335 3602 y Fw(!)p Fi(O)1443
3613 y Fh(A)1494 3594 y Fr(\()p Fj(x)p Fr(\)\))f(items)-152
3681 y(can)26 b(app)r(ear)g(on)g Fj(O)408 3689 y Fi(B)461
3681 y Fr(:)177 3818 y Fj(max)330 3826 y Fi(I)357 3837
y Fh(A)403 3826 y Fw(!)p Fi(O)511 3837 y Fh(B)585 3818
y Fr(=)21 b Fj(max)819 3826 y Fi(I)846 3837 y Fh(B)894
3826 y Fw(!)p Fi(O)1002 3837 y Fh(B)1072 3818 y Fu(\016)d
Fj(max)1281 3826 y Fi(I)1308 3837 y Fh(A)1354 3826 y
Fw(!)p Fi(O)1462 3837 y Fh(A)-152 3954 y Fr(In)k(the)h(case)h(of)f
Fj(min)455 3962 y Fi(I)482 3973 y Fh(A)530 3962 y Fw( )p
Fi(O)638 3973 y Fh(B)691 3954 y Fr(\()p Fj(x)p Fr(\),)f(the)h(order)g
(of)g(comp)r(osition)h(is)f(re-)-152 4041 y(v)n(ersed:)32
b(giv)n(en)20 b(that)f(there)h(are)h Fj(x)e Fr(items)h(on)g(tap)r(e)g
Fj(O)1369 4049 y Fi(B)1422 4041 y Fr(,)i(a)e(minim)n(um)-152
4128 y(of)34 b Fj(min)83 4136 y Fi(I)110 4147 y Fh(B)159
4136 y Fw( )p Fi(O)267 4147 y Fh(B)320 4128 y Fr(\()p
Fj(x)p Fr(\))e(are)h(on)g(tap)r(e)f Fj(I)918 4136 y Fi(B)971
4128 y Fr(,)i(and)e(since)h Fj(O)1435 4136 y Fi(B)1521
4128 y Fr(=)g Fj(I)1648 4136 y Fi(A)1698 4128 y Fr(,)h(w)n(e)-152
4215 y(ha)n(v)n(e)d(that)g(a)h(minim)n(um)d(of)j Fj(min)856
4223 y Fi(I)883 4234 y Fh(A)931 4223 y Fw( )p Fi(O)1039
4234 y Fh(A)1089 4215 y Fr(\()p Fj(min)1259 4223 y Fi(I)1286
4234 y Fh(B)1336 4223 y Fw( )p Fi(O)1444 4234 y Fh(B)1497
4215 y Fr(\()p Fj(x)p Fr(\)\))e(items)-152 4303 y(app)r(ear)c(on)g
Fj(I)243 4311 y Fi(A)293 4303 y Fr(,)g(lea)n(ving:)194
4439 y Fj(min)334 4447 y Fi(I)361 4458 y Fh(A)409 4447
y Fw( )p Fi(O)517 4458 y Fh(B)591 4439 y Fr(=)21 b Fj(min)812
4447 y Fi(I)839 4458 y Fh(A)887 4447 y Fw( )p Fi(O)995
4458 y Fh(A)1062 4439 y Fu(\016)d Fj(min)1258 4447 y
Fi(I)1285 4458 y Fh(B)1334 4447 y Fw( )p Fi(O)1442 4458
y Fh(B)-152 4575 y Fr(By)f(iden)n(tical)h(reasoning,)j(these)c(comp)r
(osition)g(la)n(ws)i(hold)e(for)h(pip)r(elined)-152 4663
y(streams)29 b(as)g(w)n(ell)g(as)g(\014lters.)43 b(That)29
b(is,)h(giv)n(en)e(tap)r(es)h Fj(x)p Fr(,)g Fj(y)s Fr(,)g(and)f
Fj(z)s Fr(,)-152 4750 y(w)n(e)e(ha)n(v)n(e)f(that:)332
4868 y Fj(max)485 4876 y Fi(x)p Fw(!)p Fi(z)637 4868
y Fr(=)c Fj(max)871 4876 y Fi(y)r Fw(!)p Fi(z)1017 4868
y Fu(\016)c Fj(max)1225 4876 y Fi(x)p Fw(!)p Fi(y)344
4980 y Fj(min)484 4988 y Fi(x)p Fw( )p Fi(z)637 4980
y Fr(=)k Fj(min)858 4988 y Fi(x)p Fw( )p Fi(y)1008 4980
y Fu(\016)d Fj(min)1204 4988 y Fi(y)r Fw( )p Fi(z)1743
4926 y Fr(\(1\))-152 5116 y(Ho)n(w)n(ev)n(er,)39 b(there)d(are)h(some)f
(restrictions)h(on)f(these)g(de\014nitions.)-152 5203
y(They)26 b(only)g(apply)f(when)h(there)g(is)g(a)g(do)n(wnstream)g
(path)f Fj(P)1624 5211 y Fk(1)1685 5203 y Fr(from)-152
5290 y(the)e(\014lter)g(follo)n(wing)i Fj(x)d Fr(to)h(the)g(\014lter)g
(preceding)g Fj(y)s Fr(,)g(a)g(do)n(wnstream)-152 5378
y(path)j Fj(P)77 5386 y Fk(2)137 5378 y Fr(from)f(the)h(\014lter)f
(follo)n(wing)k Fj(y)f Fr(to)e(the)f(\014lter)h(preceding)g
Fj(z)s Fr(,)2076 399 y @beginspecial 43 @llx 183 @lly
458 @urx 302 @ury 2304 @rwi @setspecial
%%BeginDocument: splitjoin.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010806092404)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 43 183 458 302
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

43 183 moveto
458 183 lineto
458 302 lineto
43 302 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font ODDKGL+TimesNewRoman
11 dict begin
/FontName /ODDKGL+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/A 138 RD 
93f9660df87df71315986c92748b7d088b7f868282840882847986718a08
8a7905f79a069d07708d76927c98087b997ba878b708fb7af8bc057a06fb
7dfcb605775a796c7a7b08828379856f86088d7905f763068d9d05698d77
90819308839285948b95088c99909e96a508b7f305f79606b12c0509fbac
f71615f707f7a005f703fba005fb7606090e ND 
/B 254 RD 
9cf92f0df8aaf821159fa595a98bac088bb27ead71a90872a965a05a9708
6d915f90568b08fbb2067907a406a38b9e84987d08947f90728b6208fc41
078b6687738480087f787783708b0872067907f7cc06d68bc292af9908b0
98a7a1a0a9089fab96aa8bac088bb67bb06ba90876a0689b5d9508b297a9
9f9fa50809fbedf77215a592a88fac8b08c78bb97dab7008aa709b6a8b64
088b7385747e76087f74797c738108728168865c8b08778b7b8c7c8c087a
8c7e8d7f8d08f7910709fbbf04948c978c998c08998c9d8b9f8b08b88bb3
84ab7d08aa7ea2789973089a7492728b71088b647b6a6c70086d725d7d50
8b08678b658f659408f7a407090e ND 
/F 175 RD 
9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08
9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f
8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d
0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06
a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685
6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 
/I 108 RD 
a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8
41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b
87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b
7783708b0873067907f7b0069d077306090e ND 
/J 146 RD 
a0f8190df1f919159a8b9a87998308968692848e83088f7f8d768b6a08fc
59078b6e877983800885818286828b0880898195849d087ea7819e839208
8191828f818b087e8b7e868081088383877f8b7b088b77947a9d7c089b7b
a484a98b08b18bab97a6a208a5a19ea796aa0895a991b48bbd08f7d8078b
b38fa4939508979b9f93a68b08a3069d07fbb0067907a306090e ND 
/O 133 RD 
aef9660df6f8e315444967358b22088b24aa37c94a08c94bd86ae68b08e4
8bd8accacd08cccfaade8bf0088bec6cdd4ccc084bcc41ac358b08358b40
6e4d51088b0609f7fe7c15b854a1368bfb05088b22773f635a08615a5873
4d8b08528b5ca168b7085bc675de8bf700088bf5a1dbb8c208aeb7bba1c6
8b08ca8bbc75af5f088a07090e ND 
/S 263 RD 
caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308
639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975
9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b
8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3
087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893
8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f
b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77
a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08
a67ca1769a71089b719568915f089d06f779077906090e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
/m 352 RD 
93f99e0df731f861157606fb1b54059279059890968d948b08938c928990
870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584
83870883867d89768b087907f771069d07738b7b8d838f08839085918794
088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099
7608967c90708b6708fb55078b708a7b898608897f848282850881877b87
738b08897905f77706899d05768b7a8e829008828f84928892088893899e
8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81
987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d
88788b0882067907f76f069d07788b7d8e829008828f8592889208879589
9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b
7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88
7a84087b847b827c7f08868478796b6a088aeb05090e ND 
/n 207 RD 
91f8880df730f861157606fb1b54059279059890968d948b08938c928990
870890858f848d7f088e7f8c6a8b5508fb3a078b6d8774838008837e7c86
748b0881067907f772069d07738b7b8d838f08829085918694088894899c
8ba908f78107b1b8b19fb28b08a48b9d829679089477916e8b6208fb4c07
8b718a7c8a8608887f858183850882867d87768b0882067907f771069d07
768b7c8d839008838f85928793088894889e8ba708f753078bb687a8849f
0881a67da07997087a977691738b085b8b5a6c574c088ae905090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ODDKGL+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 79 /O put
dup 83 /S put
dup 90 /Z put
dup 104 /h put
dup 109 /m put
dup 110 /n put
pop
%%EndResource
[/N89/ODDKGL+TimesNewRoman 1 TZ
%%BeginResource: font ODDKFK+Arial
11 dict begin
/FontName /ODDKFK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/M 66 RD 
d5f9d50de716f8f607f763fcf605e006f765f8eb05fceb07e606f96007fb
1306fb40fc860579587e6583710885a37fae7bba08fb3df88f05fb2206fd
6007e606090e ND 
/O 157 RD 
bbf99e0db4f73e15a653b35fc06a08c26ac77bce8b08c88bc59ac1a808c2
a9b4b6a8c408a8c49acc8bd4088bd27dcb6fc30870c562b656ab0856aa50
9b498b08248b3a694b48084b486b2e8bfb0b088b4d994fa6530809f715f8
2b15bcb9c5a2ce8b08b98bb67fb17308b173a8699f60089e6095588b5108
8b2f74445d59085d595072448b08458b51a45dbd085cbb74d08be1088bf6
a3d8bbb908090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/j 83 RD 
5df7720df75bf8fa15f10734068a2505e30609fb16fdcc15bc8bae9ba0ac
089ca493b88bcb088cf8b70532068cfcb5058a59876e827f0882817e8479
8b08818b7d8d7990087b4005a185a288a38b088b06090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ODDKFK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N86/ODDKFK+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
43 183 415 119 re W n
[ 0 -1 1 0 -140 345 ] concat
/N77 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N98 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N77 /ColorSpace findRes cs
0 0 0 scn
/N98 /ExtGState findRes gs
1 i
118.72099 508.00101 m
118.481 507.761 l
118.36099 507.401 l
118.36099 506.92101 l
118.841 506.44099 l
119.201 506.321 l
119.681 506.321 l
120.041 506.44099 l
120.28101 506.80099 l
120.28101 507.521 l
120.161 507.881 l
119.80099 508.121 l
119.44099 508.241 l
119.08099 508.241 l
118.72099 508.00101 l
f* 
120.041 505.961 m
117.041 505.481 l
116.80099 505.241 l
116.561 505.72099 l
112.601 514.481 l
111.881 516.161 l
113.321 515.08099 l
121.241 509.681 l
121.481 509.561 l
121.36099 509.201 l
120.761 508.961 l
112.841 514.36099 l
113.321 515.08099 l
113.561 514.961 l
117.521 506.201 l
116.561 505.72099 l
116.92101 506.44099 l
119.92101 506.92101 l
f 
121.36099 509.201 m
120.401 506.321 l
120.401 506.08099 l
120.041 505.961 l
119.561 506.681 l
120.521 509.561 l
f 
120.041 506.44099 m
117.041 505.961 l
113.08099 514.72099 l
121.00101 509.321 l
f* 
120.161 508.00101 m
119.561 508.72099 l
118.00101 507.401 l
118.601 506.681 l
f 
147.041 475.72099 m
147.64101 475.00101 l
146.08099 473.681 l
145.481 474.401 l
f 
120.161 508.00101 m
118.601 506.681 l
145.481 474.401 l
147.041 475.72099 l
f 
BT
/N89 1 Tf
0 9 -9 0 123.5206 454.9606 Tm
0 Tc
0 Tw
(O)Tj 
0 6.96001 -6.96001 0 126.4006 461.8006 Tm
0.0054 Tc
(Bm)Tj 
0 9 -9 0 123.5206 486.1606 Tm
0.00031 Tc
(I2)Tj 
0 6.96001 -6.96001 0 126.4006 493.9606 Tm
0 Tc
(J)Tj 
/N86 1 Tf
0 9 -9 0 123.5206 476.4406 Tm
(=)Tj 
ET
85.00101 508.481 m
84.64101 508.72099 l
84.28101 508.72099 l
83.92101 508.601 l
83.561 508.36099 l
83.321 508.00101 l
83.321 507.64101 l
83.44099 507.28101 l
83.681 507.041 l
84.041 506.80099 l
84.401 506.80099 l
84.761 506.92101 l
85.121 507.161 l
85.36099 507.881 l
85.241 508.241 l
85.00101 508.481 l
f* 
83.321 506.80099 m
82.241 509.681 l
82.00101 510.041 l
82.36099 510.161 l
90.28101 515.561 l
91.72099 516.64101 l
91.00101 514.961 l
87.161 506.201 l
87.041 505.961 l
86.681 505.961 l
86.201 506.681 l
90.041 515.44099 l
91.00101 514.961 l
90.761 514.841 l
82.841 509.44099 l
82.36099 510.161 l
83.08099 510.041 l
84.161 507.161 l
f 
86.681 505.961 m
83.681 506.44099 l
83.321 506.561 l
83.321 506.80099 l
83.80099 507.401 l
86.80099 506.92101 l
f 
83.681 506.92101 m
82.601 509.80099 l
90.521 515.201 l
86.681 506.44099 l
f* 
85.121 507.161 m
85.72099 507.881 l
84.161 509.201 l
83.561 508.481 l
f 
58.36099 474.881 m
57.761 474.161 l
56.201 475.481 l
56.80099 476.201 l
f 
85.121 507.161 m
83.561 508.481 l
56.80099 476.201 l
58.36099 474.881 l
f 
BT
/N89 1 Tf
0 9 -9 0 83.92059 458.8006 Tm
(O)Tj 
0 6.96001 -6.96001 0 86.92059 465.64059 Tm
0.002 Tc
(An)Tj 
0 9 -9 0 83.92059 488.3206 Tm
0.00031 Tc
(I1)Tj 
0 6.96001 -6.96001 0 86.92059 496.2406 Tm
0 Tc
(J)Tj 
/N86 1 Tf
0 9 -9 0 83.92059 478.6006 Tm
(=)Tj 
ET
1 1 1 scn
134.201 445.121 m
134.44099 442.481 l
135.28101 439.961 l
136.481 437.561 l
138.161 435.64101 l
140.201 433.961 l
142.481 432.761 l
145.00101 431.92101 l
147.761 431.681 l
150.401 431.92101 l
152.92101 432.761 l
155.201 433.961 l
157.241 435.64101 l
158.92101 437.561 l
160.121 439.961 l
160.961 442.481 l
161.201 445.121 l
161.201 463.241 l
160.961 465.881 l
160.121 468.521 l
158.92101 470.80099 l
157.241 472.72099 l
155.201 474.401 l
152.92101 475.601 l
150.401 476.44099 l
147.761 476.681 l
145.00101 476.44099 l
142.481 475.601 l
140.201 474.401 l
138.161 472.72099 l
136.481 470.80099 l
135.28101 468.521 l
134.44099 465.881 l
134.201 463.241 l
134.201 445.121 l
f* 
0 0 0 scn
134.44099 445.121 m
134.681 442.481 l
134.681 442.601 l
135.521 440.08099 l
136.72099 437.681 l
136.72099 437.80099 l
138.401 435.881 l
140.44099 434.201 l
140.321 434.201 l
142.601 433.00101 l
145.121 432.161 l
145.00101 432.161 l
147.761 431.92101 l
150.401 432.161 l
152.92101 433.00101 l
152.80099 433.00101 l
155.08099 434.201 l
157.121 435.881 l
158.80099 437.80099 l
158.681 437.681 l
159.881 440.08099 l
160.72099 442.601 l
160.72099 442.481 l
160.961 445.121 l
160.961 463.241 l
160.72099 465.881 l
159.881 468.521 l
159.881 468.401 l
158.681 470.681 l
158.80099 470.681 l
157.121 472.601 l
155.08099 474.28101 l
155.08099 474.161 l
152.80099 475.36099 l
152.92101 475.36099 l
150.401 476.201 l
147.761 476.44099 l
145.00101 476.201 l
145.121 476.201 l
142.601 475.36099 l
140.321 474.161 l
140.44099 474.28101 l
138.401 472.601 l
136.72099 470.681 l
135.521 468.401 l
135.521 468.521 l
134.681 465.881 l
134.44099 463.241 l
134.44099 445.121 l
133.961 445.121 l
133.961 463.241 l
134.201 465.881 l
134.201 466.00101 l
135.041 468.64101 l
136.241 470.92101 l
136.36099 471.041 l
138.041 472.961 l
140.08099 474.64101 l
142.36099 475.841 l
142.481 475.841 l
145.00101 476.681 l
147.761 476.92101 l
150.401 476.681 l
150.521 476.681 l
153.041 475.841 l
155.321 474.64101 l
155.44099 474.64101 l
157.481 472.961 l
159.161 471.041 l
159.161 470.92101 l
160.36099 468.64101 l
161.201 466.00101 l
161.201 465.881 l
161.44099 463.241 l
161.44099 445.121 l
161.201 442.481 l
160.36099 439.961 l
160.36099 439.841 l
159.161 437.44099 l
157.481 435.521 l
155.44099 433.841 l
155.321 433.72099 l
153.041 432.521 l
150.521 431.681 l
150.401 431.681 l
147.761 431.44099 l
145.00101 431.681 l
142.481 432.521 l
142.36099 432.521 l
140.08099 433.72099 l
140.08099 433.841 l
138.041 435.521 l
136.36099 437.44099 l
136.241 437.44099 l
135.041 439.841 l
135.041 439.961 l
134.201 442.481 l
133.961 445.121 l
f 
134.44099 445.121 m
133.961 445.121 l
f 
BT
0 14.39999 -14.39999 0 153.64059 445.12061 Tm
-0.00031 Tc
(Bm)Tj 
ET
146.80099 344.80099 2.03999 0.96001 rf
146.80099 376.481 2.03999 -0.96001 rf
146.80099 345.761 2.03999 29.75999 rf
146.80099 374.561 2.03999 0.96001 rf
146.80099 376.961 2.03999 -0.96001 rf
146.80099 375.521 2.03999 0.48 rf
146.80099 379.241 2.03999 0.96001 re
f* 
146.80099 382.00101 2.03999 -0.96001 re
f* 
146.80099 380.201 2.03999 0.84 re
f* 
146.80099 384.161 2.03999 0.96001 re
f* 
146.80099 386.92101 2.03999 -0.96001 re
f* 
146.80099 385.121 2.03999 0.84 re
f* 
146.80099 389.201 2.03999 0.96001 re
f* 
146.80099 391.841 2.03999 -0.96001 re
f* 
146.80099 390.161 2.03999 0.72 re
f* 
146.80099 394.121 2.03999 0.96001 re
f* 
146.80099 396.881 2.03999 -0.96001 re
f* 
146.80099 395.08099 2.03999 0.84 re
f* 
146.80099 399.041 2.03999 0.96001 rf
146.80099 401.44099 2.03999 -0.96001 rf
146.80099 400.00101 2.03999 0.48 rf
147.761 421.00101 m
147.28101 420.881 l
147.041 420.761 l
146.80099 420.401 l
146.681 420.041 l
146.80099 419.561 l
147.28101 419.08099 l
147.761 418.961 l
148.121 419.08099 l
148.601 419.561 l
148.72099 420.041 l
148.601 420.401 l
148.36099 420.761 l
148.121 420.881 l
147.761 421.00101 l
f* 
147.521 418.601 m
144.881 420.161 l
144.521 420.161 l
144.64101 420.64101 l
147.761 431.561 l
150.881 420.64101 l
151.00101 420.401 l
150.64101 420.161 l
149.92101 420.401 l
147.28101 429.64101 l
148.241 429.881 l
148.241 429.64101 l
145.601 420.401 l
144.64101 420.64101 l
145.36099 421.00101 l
148.00101 419.44099 l
f 
150.64101 420.161 m
148.00101 418.601 l
147.761 418.481 l
147.521 418.601 l
147.521 419.44099 l
150.161 421.00101 l
f 
147.761 418.961 m
145.121 420.521 l
147.761 429.761 l
150.401 420.521 l
f* 
146.80099 400.72099 2.03999 0.96001 rf
146.80099 421.00101 2.03999 -0.96001 rf
146.80099 401.681 2.03999 18.36 rf
1 1 1 scn
134.201 314.201 m
134.44099 311.44099 l
135.28101 308.92101 l
136.481 306.64101 l
138.161 304.601 l
140.201 302.92101 l
142.481 301.72099 l
145.00101 300.881 l
147.761 300.64101 l
150.401 300.881 l
152.92101 301.72099 l
155.201 302.92101 l
157.241 304.601 l
158.92101 306.64101 l
160.121 308.92101 l
160.961 311.44099 l
161.201 314.201 l
161.201 332.201 l
160.961 334.961 l
160.121 337.481 l
158.92101 339.761 l
157.241 341.80099 l
155.201 343.36099 l
152.92101 344.681 l
150.401 345.401 l
147.761 345.761 l
145.00101 345.401 l
142.481 344.681 l
140.201 343.36099 l
138.161 341.80099 l
136.481 339.761 l
135.28101 337.481 l
134.44099 334.961 l
134.201 332.201 l
134.201 314.201 l
f* 
0 0 0 scn
134.44099 314.201 m
134.681 311.44099 l
134.681 311.561 l
135.521 309.041 l
136.72099 306.761 l
136.72099 306.881 l
138.401 304.841 l
140.44099 303.161 l
140.321 303.161 l
142.601 301.961 l
145.121 301.121 l
145.00101 301.121 l
147.761 300.881 l
150.401 301.121 l
152.92101 301.961 l
152.80099 301.961 l
155.08099 303.161 l
157.121 304.841 l
158.80099 306.881 l
158.681 306.761 l
159.881 309.041 l
160.72099 311.561 l
160.72099 311.44099 l
160.961 314.201 l
160.961 332.201 l
160.72099 334.961 l
159.881 337.481 l
159.881 337.36099 l
158.681 339.64101 l
158.80099 339.64101 l
157.121 341.681 l
155.08099 343.241 l
152.80099 344.561 l
152.92101 344.44099 l
150.401 345.161 l
147.761 345.521 l
147.881 345.521 l
145.121 345.161 l
142.601 344.44099 l
142.601 344.561 l
140.321 343.241 l
138.28101 341.681 l
138.401 341.681 l
136.72099 339.64101 l
135.521 337.36099 l
135.521 337.481 l
134.681 334.961 l
134.44099 332.201 l
134.44099 314.201 l
133.961 314.201 l
133.961 332.201 l
134.201 334.961 l
134.201 335.08099 l
135.041 337.601 l
136.241 339.881 l
136.36099 340.00101 l
138.041 342.041 l
140.08099 343.601 l
142.36099 344.92101 l
142.481 344.92101 l
145.00101 345.64101 l
147.761 346.00101 l
147.881 346.00101 l
150.521 345.64101 l
153.041 344.92101 l
155.321 343.601 l
157.36099 342.041 l
157.481 342.041 l
159.161 340.00101 l
159.161 339.881 l
160.36099 337.601 l
161.201 335.08099 l
161.201 334.961 l
161.44099 332.201 l
161.44099 314.201 l
161.201 311.44099 l
160.36099 308.92101 l
160.36099 308.80099 l
159.161 306.521 l
157.481 304.481 l
155.44099 302.80099 l
155.321 302.681 l
153.041 301.481 l
150.521 300.64101 l
150.401 300.64101 l
147.761 300.401 l
145.00101 300.64101 l
142.481 301.481 l
142.36099 301.481 l
140.08099 302.681 l
140.08099 302.80099 l
138.041 304.481 l
136.36099 306.521 l
136.241 306.521 l
135.041 308.80099 l
135.041 308.92101 l
134.201 311.44099 l
133.961 314.201 l
f 
134.44099 314.201 m
133.961 314.201 l
f 
BT
0 14.39999 -14.39999 0 153.64059 316.12061 Tm
(B1)Tj 
ET
140.92101 292.601 m
140.681 292.72099 l
140.201 292.841 l
139.841 292.72099 l
139.601 292.481 l
139.36099 292.121 l
139.36099 291.64101 l
139.481 291.28101 l
139.72099 291.041 l
140.08099 290.80099 l
140.44099 290.80099 l
140.80099 290.92101 l
141.161 291.161 l
141.28101 291.521 l
141.28101 292.241 l
140.92101 292.601 l
f* 
139.36099 290.92101 m
138.28101 293.80099 l
138.041 294.161 l
138.401 294.28101 l
146.321 299.681 l
147.761 300.761 l
147.041 299.08099 l
143.201 290.201 l
143.08099 289.961 l
142.72099 289.961 l
142.241 290.681 l
146.08099 299.561 l
147.041 299.08099 l
146.80099 298.961 l
138.881 293.561 l
138.401 294.28101 l
139.121 294.161 l
140.201 291.28101 l
f 
142.72099 289.961 m
139.72099 290.561 l
139.36099 290.681 l
139.36099 290.92101 l
139.841 291.521 l
142.841 290.92101 l
f 
139.72099 291.041 m
138.64101 293.92101 l
146.561 299.321 l
142.72099 290.44099 l
f* 
112.72099 260.201 m
112.121 259.481 l
113.681 258.161 l
114.28101 258.881 l
f 
139.601 292.481 m
140.201 293.201 l
141.761 291.881 l
141.161 291.161 l
f 
112.72099 260.201 m
114.28101 258.881 l
141.161 291.161 l
139.601 292.481 l
f 
BT
/N89 1 Tf
0 9 -9 0 124.9606 282.28059 Tm
-0.0022 Tc
(O2)Tj 
0 6.96001 -6.96001 0 127.84061 293.6806 Tm
0 Tc
(S)Tj 
0 9 -9 0 124.9606 311.8006 Tm
(I)Tj 
0 6.96001 -6.96001 0 127.84061 315.0406 Tm
0.0054 Tc
(B1)Tj 
/N86 1 Tf
0 9 -9 0 124.9606 302.0806 Tm
0 Tc
(=)Tj 
ET
65.681 292.00101 m
65.44099 291.761 l
65.321 291.401 l
65.561 290.681 l
65.92101 290.44099 l
66.28101 290.321 l
66.64101 290.321 l
67.00101 290.561 l
67.241 290.80099 l
67.36099 291.161 l
67.121 291.881 l
66.761 292.121 l
66.401 292.241 l
66.041 292.241 l
65.681 292.00101 l
f* 
67.00101 290.08099 m
64.00101 289.481 l
63.64101 289.36099 l
63.521 289.72099 l
59.681 298.481 l
58.961 300.161 l
60.401 299.08099 l
68.321 293.681 l
68.561 293.561 l
68.44099 293.201 l
67.841 292.961 l
59.92101 298.36099 l
60.401 299.08099 l
60.64101 298.961 l
64.481 290.201 l
63.521 289.72099 l
63.881 290.44099 l
66.881 291.041 l
f 
68.44099 293.201 m
67.36099 290.44099 l
67.36099 290.201 l
67.00101 290.08099 l
66.521 290.80099 l
67.601 293.561 l
f 
67.00101 290.561 m
64.00101 289.961 l
60.161 298.72099 l
68.08099 293.321 l
f* 
92.44099 258.401 m
93.041 257.681 l
94.601 259.00101 l
94.00101 259.72099 l
f 
65.681 290.681 m
65.08099 291.401 l
66.64101 292.72099 l
67.241 292.00101 l
f 
92.44099 258.401 m
94.00101 259.72099 l
67.241 292.00101 l
65.681 290.681 l
f 
1 1 1 scn
44.201 445.121 m
44.44099 442.481 l
45.28101 439.961 l
46.481 437.561 l
48.161 435.64101 l
50.201 433.961 l
52.481 432.761 l
55.00101 431.92101 l
57.761 431.681 l
60.401 431.92101 l
62.92101 432.761 l
65.201 433.961 l
67.241 435.64101 l
68.92101 437.561 l
70.121 439.961 l
70.961 442.481 l
71.201 445.121 l
71.201 463.241 l
70.961 465.881 l
70.121 468.521 l
68.92101 470.80099 l
67.241 472.72099 l
65.201 474.401 l
62.92101 475.601 l
60.401 476.44099 l
57.761 476.681 l
55.00101 476.44099 l
52.481 475.601 l
50.201 474.401 l
48.161 472.72099 l
46.481 470.80099 l
45.28101 468.521 l
44.44099 465.881 l
44.201 463.241 l
44.201 445.121 l
f* 
0 0 0 scn
44.44099 445.121 m
44.681 442.481 l
44.681 442.601 l
45.521 440.08099 l
46.72099 437.681 l
46.72099 437.80099 l
48.401 435.881 l
50.44099 434.201 l
50.321 434.201 l
52.601 433.00101 l
55.121 432.161 l
55.00101 432.161 l
57.761 431.92101 l
60.401 432.161 l
62.92101 433.00101 l
62.80099 433.00101 l
65.08099 434.201 l
67.121 435.881 l
68.80099 437.80099 l
68.681 437.681 l
69.881 440.08099 l
70.72099 442.601 l
70.72099 442.481 l
70.961 445.121 l
70.961 463.241 l
70.72099 465.881 l
69.881 468.521 l
69.881 468.401 l
68.681 470.681 l
68.80099 470.681 l
67.121 472.601 l
65.08099 474.28101 l
65.08099 474.161 l
62.80099 475.36099 l
62.92101 475.36099 l
60.401 476.201 l
57.761 476.44099 l
55.00101 476.201 l
55.121 476.201 l
52.601 475.36099 l
50.321 474.161 l
50.44099 474.28101 l
48.401 472.601 l
46.72099 470.681 l
45.521 468.401 l
45.521 468.521 l
44.681 465.881 l
44.44099 463.241 l
44.44099 445.121 l
43.961 445.121 l
43.961 463.241 l
44.201 465.881 l
44.201 466.00101 l
45.041 468.64101 l
46.241 470.92101 l
46.36099 471.041 l
48.041 472.961 l
50.08099 474.64101 l
52.36099 475.841 l
52.481 475.841 l
55.00101 476.681 l
57.761 476.92101 l
60.401 476.681 l
60.521 476.681 l
63.041 475.841 l
65.321 474.64101 l
65.44099 474.64101 l
67.481 472.961 l
69.161 471.041 l
69.161 470.92101 l
70.36099 468.64101 l
71.201 466.00101 l
71.201 465.881 l
71.44099 463.241 l
71.44099 445.121 l
71.201 442.481 l
70.36099 439.961 l
70.36099 439.841 l
69.161 437.44099 l
67.481 435.521 l
65.44099 433.841 l
65.321 433.72099 l
63.041 432.521 l
60.521 431.681 l
60.401 431.681 l
57.761 431.44099 l
55.00101 431.681 l
52.481 432.521 l
52.36099 432.521 l
50.08099 433.72099 l
50.08099 433.841 l
48.041 435.521 l
46.36099 437.44099 l
46.241 437.44099 l
45.041 439.841 l
45.041 439.961 l
44.201 442.481 l
43.961 445.121 l
f 
44.44099 445.121 m
43.961 445.121 l
f 
BT
0 14.39999 -14.39999 0 63.64059 447.0406 Tm
-0.00031 Tc
(An)Tj 
ET
56.80099 344.80099 2.03999 0.96001 rf
56.80099 376.481 2.03999 -0.96001 rf
56.80099 345.761 2.03999 29.75999 rf
56.80099 374.561 2.03999 0.96001 rf
56.80099 376.961 2.03999 -0.96001 rf
56.80099 375.521 2.03999 0.48 rf
56.80099 379.241 2.03999 0.96001 re
f* 
56.80099 382.00101 2.03999 -0.96001 re
f* 
56.80099 380.201 2.03999 0.84 re
f* 
56.80099 384.161 2.03999 0.96001 re
f* 
56.80099 386.92101 2.03999 -0.96001 re
f* 
56.80099 385.121 2.03999 0.84 re
f* 
56.80099 389.201 2.03999 0.96001 re
f* 
56.80099 391.841 2.03999 -0.96001 re
f* 
56.80099 390.161 2.03999 0.72 re
f* 
56.80099 394.121 2.03999 0.96001 re
f* 
56.80099 396.881 2.03999 -0.96001 re
f* 
56.80099 395.08099 2.03999 0.84 re
f* 
56.80099 399.041 2.03999 0.96001 rf
56.80099 401.44099 2.03999 -0.96001 rf
56.80099 400.00101 2.03999 0.48 rf
57.761 421.00101 m
57.28101 420.881 l
57.041 420.761 l
56.80099 420.401 l
56.681 420.041 l
56.80099 419.561 l
57.28101 419.08099 l
57.761 418.961 l
58.121 419.08099 l
58.601 419.561 l
58.72099 420.041 l
58.601 420.401 l
58.36099 420.761 l
58.121 420.881 l
57.761 421.00101 l
f* 
57.521 418.601 m
54.761 420.161 l
54.401 420.28101 l
54.521 420.64101 l
57.28101 429.881 l
57.761 431.561 l
60.881 420.64101 l
61.00101 420.401 l
60.64101 420.161 l
59.92101 420.401 l
57.28101 429.64101 l
58.241 429.881 l
58.241 429.64101 l
55.481 420.401 l
54.521 420.64101 l
55.241 421.00101 l
58.00101 419.44099 l
f 
60.64101 420.161 m
58.00101 418.601 l
57.761 418.481 l
57.521 418.601 l
57.521 419.44099 l
60.161 421.00101 l
f 
57.761 418.961 m
55.00101 420.521 l
57.761 429.761 l
60.401 420.521 l
f* 
56.80099 400.72099 2.03999 0.96001 rf
56.80099 421.00101 2.03999 -0.96001 rf
56.80099 401.681 2.03999 18.36 rf
1 1 1 scn
44.201 314.201 m
44.44099 311.44099 l
45.28101 308.92101 l
46.481 306.64101 l
48.161 304.601 l
50.201 302.92101 l
52.481 301.72099 l
55.00101 300.881 l
57.761 300.64101 l
60.401 300.881 l
62.92101 301.72099 l
65.201 302.92101 l
67.241 304.601 l
68.92101 306.64101 l
70.121 308.92101 l
70.961 311.44099 l
71.201 314.201 l
71.201 332.201 l
70.961 334.961 l
70.121 337.481 l
68.92101 339.761 l
67.241 341.80099 l
65.201 343.36099 l
62.92101 344.681 l
60.401 345.401 l
57.761 345.761 l
55.00101 345.401 l
52.481 344.681 l
50.201 343.36099 l
48.161 341.80099 l
46.481 339.761 l
45.28101 337.481 l
44.44099 334.961 l
44.201 332.201 l
44.201 314.201 l
f* 
0 0 0 scn
44.44099 314.201 m
44.681 311.44099 l
44.681 311.561 l
45.521 309.041 l
46.72099 306.761 l
46.72099 306.881 l
48.401 304.841 l
50.44099 303.161 l
50.321 303.161 l
52.601 301.961 l
55.121 301.121 l
55.00101 301.121 l
57.761 300.881 l
60.401 301.121 l
62.92101 301.961 l
62.80099 301.961 l
65.08099 303.161 l
67.121 304.841 l
68.80099 306.881 l
68.681 306.761 l
69.881 309.041 l
70.72099 311.561 l
70.72099 311.44099 l
70.961 314.201 l
70.961 332.201 l
70.72099 334.961 l
69.881 337.481 l
69.881 337.36099 l
68.681 339.64101 l
68.80099 339.64101 l
67.121 341.681 l
65.08099 343.241 l
62.80099 344.561 l
62.92101 344.44099 l
60.401 345.161 l
57.761 345.521 l
57.881 345.521 l
55.121 345.161 l
52.601 344.44099 l
52.601 344.561 l
50.321 343.241 l
48.28101 341.681 l
48.401 341.681 l
46.72099 339.64101 l
45.521 337.36099 l
45.521 337.481 l
44.681 334.961 l
44.44099 332.201 l
44.44099 314.201 l
43.961 314.201 l
43.961 332.201 l
44.201 334.961 l
44.201 335.08099 l
45.041 337.601 l
46.241 339.881 l
46.36099 340.00101 l
48.041 342.041 l
50.08099 343.601 l
52.36099 344.92101 l
52.481 344.92101 l
55.00101 345.64101 l
57.761 346.00101 l
57.881 346.00101 l
60.521 345.64101 l
63.041 344.92101 l
65.321 343.601 l
67.36099 342.041 l
67.481 342.041 l
69.161 340.00101 l
69.161 339.881 l
70.36099 337.601 l
71.201 335.08099 l
71.201 334.961 l
71.44099 332.201 l
71.44099 314.201 l
71.201 311.44099 l
70.36099 308.92101 l
70.36099 308.80099 l
69.161 306.521 l
67.481 304.481 l
65.44099 302.80099 l
65.321 302.681 l
63.041 301.481 l
60.521 300.64101 l
60.401 300.64101 l
57.761 300.401 l
55.00101 300.64101 l
52.481 301.481 l
52.36099 301.481 l
50.08099 302.681 l
50.08099 302.80099 l
48.041 304.481 l
46.36099 306.521 l
46.241 306.521 l
45.041 308.80099 l
45.041 308.92101 l
44.201 311.44099 l
43.961 314.201 l
f 
44.44099 314.201 m
43.961 314.201 l
f 
BT
0 14.39999 -14.39999 0 63.64059 316.12061 Tm
(A1)Tj 
/N89 1 Tf
0 9 -9 0 83.92059 282.1606 Tm
-0.0022 Tc
(O1)Tj 
0 6.96001 -6.96001 0 86.92059 293.4406 Tm
0 Tc
(S)Tj 
0 9 -9 0 83.92059 311.56059 Tm
(I)Tj 
0 6.96001 -6.96001 0 86.92059 314.92059 Tm
0.002 Tc
(A1)Tj 
/N86 1 Tf
0 9 -9 0 83.92059 301.84061 Tm
0 Tc
(=)Tj 
/N89 1 Tf
5.7733 -6.34669 TD
(O)Tj 
0 6.96001 -6.96001 0 143.92059 360.64059 Tm
0.0054 Tc
(B1)Tj 
0 9 -9 0 141.0406 404.56059 Tm
0 Tc
(I)Tj 
0 6.96001 -6.96001 0 143.92059 407.92059 Tm
0.0054 Tc
(Bm)Tj 
0 9 -9 0 64.9606 353.56059 Tm
0 Tc
(O)Tj 
0 6.96001 -6.96001 0 67.84061 360.4006 Tm
0.002 Tc
(A1)Tj 
0 9 -9 0 64.9606 405.4006 Tm
0 Tc
(I)Tj 
0 6.96001 -6.96001 0 67.84061 408.64059 Tm
0.002 Tc
(An)Tj 
ET
100.72099 555.521 2.03999 0.96001 rf
100.72099 592.961 2.03999 -0.96001 rf
100.72099 556.481 2.03999 35.52 rf
102.761 209.44099 m
102.28101 209.44099 l
102.041 209.201 l
101.80099 208.841 l
101.681 208.481 l
101.80099 208.121 l
102.041 207.761 l
102.28101 207.521 l
103.121 207.521 l
103.36099 207.761 l
103.601 208.121 l
103.72099 208.481 l
103.601 208.841 l
103.36099 209.201 l
103.121 209.44099 l
102.761 209.44099 l
f* 
102.521 207.161 m
99.881 208.601 l
99.521 208.601 l
99.64101 209.08099 l
102.761 220.00101 l
105.881 209.08099 l
106.00101 208.841 l
105.64101 208.601 l
104.92101 208.841 l
102.28101 218.08099 l
103.241 218.321 l
103.241 218.08099 l
100.601 208.841 l
99.64101 209.08099 l
100.36099 209.44099 l
103.00101 208.00101 l
f 
105.64101 208.601 m
103.00101 207.161 l
102.761 207.041 l
102.521 207.161 l
102.521 208.00101 l
105.161 209.44099 l
f 
102.761 207.521 m
100.121 208.961 l
102.761 218.201 l
105.401 208.961 l
f* 
101.80099 183.521 2.03999 0.96001 rf
101.80099 209.44099 2.03999 -0.96001 rf
101.80099 184.481 2.03999 24 rf
1 1 1 scn
88.241 524.92101 m
88.481 522.161 l
89.321 519.64101 l
90.521 517.36099 l
92.201 515.321 l
94.121 513.761 l
96.401 512.44099 l
99.041 511.72099 l
101.681 511.36099 l
104.44099 511.72099 l
106.961 512.44099 l
109.241 513.761 l
111.28101 515.321 l
112.841 517.36099 l
114.161 519.64101 l
114.881 522.161 l
115.241 524.92101 l
115.241 542.92101 l
114.881 545.681 l
114.161 548.201 l
112.841 550.481 l
111.28101 552.521 l
109.241 554.201 l
106.961 555.401 l
104.44099 556.241 l
101.681 556.481 l
99.041 556.241 l
96.401 555.401 l
94.121 554.201 l
92.201 552.521 l
90.521 550.481 l
89.321 548.201 l
88.481 545.681 l
88.241 542.92101 l
88.241 524.92101 l
f* 
0 0 0 scn
88.481 524.92101 m
88.72099 522.161 l
88.72099 522.28101 l
89.561 519.761 l
90.761 517.481 l
90.761 517.601 l
92.44099 515.561 l
94.36099 514.00101 l
94.241 514.00101 l
96.521 512.681 l
99.161 511.961 l
101.80099 511.601 l
101.681 511.601 l
104.44099 511.961 l
106.961 512.681 l
106.841 512.681 l
109.121 514.00101 l
111.161 515.561 l
111.161 515.44099 l
112.72099 517.481 l
114.041 519.761 l
113.92101 519.761 l
114.64101 522.28101 l
115.00101 525.041 l
115.00101 524.92101 l
115.00101 542.92101 l
114.64101 545.681 l
113.92101 548.201 l
114.041 548.08099 l
112.72099 550.36099 l
111.161 552.401 l
109.121 554.08099 l
109.121 553.961 l
106.841 555.161 l
106.961 555.161 l
104.44099 556.00101 l
101.681 556.241 l
99.041 556.00101 l
99.161 556.00101 l
96.521 555.161 l
94.241 553.961 l
94.36099 554.08099 l
92.44099 552.401 l
90.761 550.36099 l
89.561 548.08099 l
89.561 548.201 l
88.72099 545.681 l
88.481 542.92101 l
88.481 524.92101 l
88.00101 524.92101 l
88.00101 542.92101 l
88.241 545.681 l
88.241 545.80099 l
89.08099 548.321 l
90.28101 550.601 l
90.401 550.72099 l
92.08099 552.761 l
94.00101 554.44099 l
96.28101 555.64101 l
96.401 555.64101 l
99.041 556.481 l
101.681 556.72099 l
104.44099 556.481 l
104.561 556.481 l
107.08099 555.64101 l
109.36099 554.44099 l
109.481 554.44099 l
111.521 552.761 l
111.521 552.64101 l
113.08099 550.601 l
114.401 548.321 l
115.121 545.80099 l
115.481 543.041 l
115.481 524.92101 l
115.121 522.161 l
114.401 519.64101 l
114.401 519.521 l
113.08099 517.241 l
111.521 515.201 l
111.401 515.201 l
109.36099 513.64101 l
107.08099 512.321 l
107.08099 512.201 l
104.561 511.481 l
101.80099 511.121 l
101.681 511.121 l
99.041 511.481 l
96.401 512.201 l
96.28101 512.321 l
94.00101 513.64101 l
92.08099 515.201 l
90.401 517.241 l
90.28101 517.241 l
89.08099 519.521 l
89.08099 519.64101 l
88.241 522.161 l
88.00101 524.92101 l
f 
88.481 524.92101 m
88.00101 524.92101 l
f 
BT
/N86 1 Tf
0 14.39999 -14.39999 0 107.6806 528.64059 Tm
0 Tc
(J)Tj 
ET
1 1 1 scn
89.681 232.601 m
89.92101 229.961 l
90.761 227.44099 l
91.961 225.161 l
93.64101 223.121 l
95.681 221.44099 l
97.961 220.241 l
100.481 219.401 l
103.241 219.161 l
105.881 219.401 l
108.521 220.241 l
110.80099 221.44099 l
112.72099 223.121 l
114.401 225.161 l
115.601 227.44099 l
116.44099 229.961 l
116.681 232.601 l
116.681 250.72099 l
116.44099 253.481 l
115.601 256.00101 l
114.401 258.28101 l
112.72099 260.201 l
110.80099 261.881 l
108.521 263.201 l
105.881 263.92101 l
103.241 264.161 l
100.481 263.92101 l
97.961 263.201 l
95.681 261.881 l
93.64101 260.201 l
91.961 258.28101 l
90.761 256.00101 l
89.92101 253.481 l
89.681 250.72099 l
89.681 232.601 l
f* 
0 0 0 scn
89.92101 232.601 m
90.161 229.961 l
90.161 230.08099 l
91.00101 227.561 l
92.201 225.28101 l
92.201 225.401 l
93.881 223.36099 l
95.92101 221.681 l
95.80099 221.681 l
98.08099 220.481 l
100.601 219.64101 l
100.481 219.64101 l
103.241 219.401 l
105.881 219.64101 l
108.521 220.481 l
108.401 220.481 l
110.681 221.681 l
112.601 223.36099 l
114.28101 225.401 l
114.161 225.28101 l
115.36099 227.561 l
116.201 230.08099 l
116.201 229.961 l
116.44099 232.601 l
116.44099 250.72099 l
116.201 253.481 l
115.36099 256.00101 l
115.36099 255.881 l
114.161 258.161 l
114.28101 258.161 l
112.601 260.08099 l
110.681 261.761 l
108.401 263.08099 l
108.521 262.961 l
105.881 263.681 l
103.241 263.92101 l
100.481 263.681 l
100.601 263.681 l
98.08099 262.961 l
98.08099 263.08099 l
95.80099 261.761 l
95.92101 261.761 l
93.881 260.08099 l
92.201 258.161 l
91.00101 255.881 l
91.00101 256.00101 l
90.161 253.481 l
89.92101 250.72099 l
89.92101 232.601 l
89.44099 232.601 l
89.44099 250.72099 l
89.681 253.481 l
89.681 253.601 l
90.521 256.121 l
91.72099 258.401 l
91.841 258.521 l
93.521 260.44099 l
95.561 262.121 l
97.841 263.44099 l
97.961 263.44099 l
100.481 264.161 l
103.241 264.401 l
105.881 264.161 l
106.00101 264.161 l
108.64101 263.44099 l
110.92101 262.121 l
111.041 262.121 l
112.961 260.44099 l
114.64101 258.521 l
114.64101 258.401 l
115.841 256.121 l
116.681 253.601 l
116.681 253.481 l
116.92101 250.72099 l
116.92101 232.601 l
116.681 229.961 l
115.841 227.44099 l
115.841 227.321 l
114.64101 225.041 l
112.961 223.00101 l
111.041 221.321 l
110.92101 221.201 l
108.64101 220.00101 l
106.00101 219.161 l
105.881 219.161 l
103.241 218.92101 l
100.481 219.161 l
97.961 220.00101 l
97.841 220.00101 l
95.561 221.201 l
95.561 221.321 l
93.521 223.00101 l
91.841 225.041 l
91.72099 225.041 l
90.521 227.321 l
90.521 227.44099 l
89.681 229.961 l
89.44099 232.601 l
f 
89.92101 232.601 m
89.44099 232.601 l
f 
BT
0 14.39999 -14.39999 0 109.12061 238.6006 Tm
(S)Tj 
/N89 1 Tf
0 9 -9 0 112.0006 195.1606 Tm
(I)Tj 
0 6.96001 -6.96001 0 114.8806 198.5206 Tm
(S)Tj 
0 9 -9 0 111.5206 573.0406 Tm
(O)Tj 
0 6.96001 -6.96001 0 114.4006 579.8806 Tm
(J)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2207 573 a Fq(Figure)k(11:)39 b Fn(SplitJoin)26
b(construct)h(with)f(lab)r(eling.)2040 826 y Fr(and)g(the)f(paths)h
Fj(P)2581 834 y Fk(1)2642 826 y Fr(and)f Fj(P)2840 834
y Fk(2)2901 826 y Fr(are)h(non-o)n(v)n(erlapping.)36
b(This)26 b(restric-)2040 913 y(tion)36 b(prev)n(en)n(ts)f(the)h
(successiv)n(e)g(comp)r(osition)h(of)f(transfer)h(func-)2040
1000 y(tions)24 b(around)g(feedbac)n(k)g(lo)r(ops,)h(thereb)n(y)e
(ensuring)h(a)g(unique)f(def-)2040 1087 y(inition)i(for)h(all)g(pairs)g
(\()p Fj(x;)12 b(z)s Fr(\))25 b(where)g(there)g(is)g(a)g(do)n(wnstream)
g(path)2040 1174 y(from)h Fj(x)f Fr(to)h Fj(z)s Fr(.)2040
1385 y Fm(4.1.3)90 b(SplitJ)n(oins)2040 1476 y Fr(W)-6
b(e)28 b(no)n(w)g(deriv)n(e)g Fj(min)g Fr(and)g Fj(max)f
Fr(in)h(the)g(case)h(of)g(a)f(SplitJoin,)i(as)2040 1563
y(pictured)17 b(in)h(Figure)g(11.)33 b(F)-6 b(or)18 b(the)f(splitter)h
Fj(S)k Fr(there)17 b(are)h(t)n(w)n(o)h(output)2040 1650
y(tap)r(es;)24 b(let)f(us)f(denote)g(them)e(b)n(y)i Fj(O)r
Fr(1)3103 1658 y Fi(S)3170 1650 y Fr(and)g Fj(O)r Fr(2)3414
1658 y Fi(S)3459 1650 y Fr(.)34 b(Similarly)-6 b(,)22
b(let)h(us)2040 1737 y(denote)j(the)g(t)n(w)n(o)g(input)f(tap)r(es)i
(of)g(the)f(joiner)h Fj(J)33 b Fr(b)n(y)25 b Fj(I)6 b
Fr(1)3672 1745 y Fi(J)3741 1737 y Fr(and)26 b Fj(I)6
b Fr(2)3969 1745 y Fi(J)4011 1737 y Fr(.)2040 1825 y(W)-6
b(e)24 b(deriv)n(e)g(b)r(elo)n(w)i(the)e(transfer)h(functions)g(the)f
(round)g(robin)h(and)2040 1912 y(duplicate/com)n(bine)f(no)r(des.)35
b(Note)24 b(that)h(the)f(duplicate/com)n(bine)2040 1999
y(no)r(des)30 b(can)f(b)r(e)h(sim)n(ulated)f(with)g(round)g(robins)h
(and)f(duplicating)2040 2086 y(\014lters,)21 b(but)d(w)n(e)i(pro)n
(vide)e(the)h(transfer)h(functions)f(an)n(yw)n(a)n(ys)g(to)g(sim-)2040
2173 y(plify)j(the)f(seman)n(tic)g(analysis)h(of)g(a)g(program.)33
b(W)-6 b(e)21 b(ha)n(v)n(e)g(y)n(et)g(to)g(de-)2040 2260
y(riv)n(e)26 b(these)f(expressions)i(for)f(the)g(w)n(eigh)n(ted)g
(round)f(robin)g(no)r(des.)2040 2435 y Fq(Round)30 b(robin)h(splitter.)
36 b Fr(In)24 b(the)h(case)i(of)f(a)g(round-robin)f(split-)2040
2522 y(ter,)h(the)f(items)g(from)g(the)g(input)f(tap)r(e)i(are)f
(alternately)h(routed)f(to)2040 2609 y(the)j(output)g(tap)r(es,)i(with)
e(the)g(\014rst)g(item)g(going)i(on)n(to)e(tap)r(e)h
Fj(O)r Fr(1)3966 2617 y Fi(S)4011 2609 y Fr(.)2040 2696
y(By)d(this)h(de\014nition,)g(w)n(e)g(can)f(see)h(that)f(the)g
(splitter's)i Fj(max)d Fr(is)i(de-)2040 2783 y(\014ned)e(as)h(follo)n
(ws:)2658 2926 y Fj(max)2811 2934 y Fi(I)2838 2945 y
Fh(S)2879 2934 y Fw(!)p Fi(O)r Fk(1)3019 2945 y Fh(S)3064
2926 y Fr(\()p Fj(x)p Fr(\))21 b(=)3270 2843 y Fg(l)3321
2878 y Fj(x)p 3321 2909 44 4 v 3324 2977 a Fr(2)3374
2843 y Fg(m)2658 3096 y Fj(max)2811 3104 y Fi(I)2838
3115 y Fh(S)2879 3104 y Fw(!)p Fi(O)r Fk(2)3019 3115
y Fh(S)3064 3096 y Fr(\()p Fj(x)p Fr(\))g(=)3270 3013
y Fg(j)3321 3047 y Fj(x)p 3321 3079 V 3324 3146 a Fr(2)3374
3013 y Fg(k)2040 3262 y Fr(T)-6 b(o)33 b(deriv)n(e)f(the)g
Fj(min)g Fr(function)h(across)h(a)f(splitter,)h(observ)n(e)f(that)2040
3349 y(the)c(input)f(tap)r(e)h(need)f(only)h(progress)h(so)g(far)g(as)f
(to)g(pro)r(duce)g(the)2040 3436 y(items)c(on)g(the)g(emptier)f(output)
g(tap)r(e.)35 b(That)25 b(is,)h(w)n(e)g(need)f(to)g(con-)2040
3523 y(sider)d(the)g(n)n(um)n(b)r(er)e(of)j(items)e(on)h(b)r(oth)g(of)h
(the)e(splitter's)i(output)e(to)2040 3610 y(determine)g(the)h(minim)n
(um)c(n)n(um)n(b)r(er)i(of)j(items)f(that)f(are)i(needed)e(at)2040
3698 y(its)29 b(input.)44 b(Th)n(us,)29 b(our)g Fj(min)g
Fr(function)g(has)h(t)n(w)n(o)f(argumen)n(ts:)40 b(the)2040
3785 y(\014rst)24 b(corresp)r(onding)h(to)f Fj(O)r Fr(1)2879
3793 y Fi(S)2948 3785 y Fr(and)g(the)f(second)i(corresp)r(onding)f(to)
2040 3872 y Fj(O)r Fr(2)2138 3880 y Fi(S)2184 3872 y
Fr(.)34 b(The)26 b(equation)g(is)g(as)g(follo)n(ws:)2171
4014 y Fj(min)2311 4026 y Fi(I)2338 4037 y Fh(S)2381
4026 y Fw( )p Fk(\()p Fi(O)r Fk(1)2545 4037 y Fh(S)2586
4026 y Fi(;O)r Fk(2)2684 4037 y Fh(S)2725 4026 y Fk(\))2753
4014 y Fr(\()p Fj(x)2827 4022 y Fk(1)2861 4014 y Fj(;)14
b(x)2940 4022 y Fk(2)2974 4014 y Fr(\))21 b(=)g Fj(M)8
b(I)e(N)i Fr(\(2)17 b Fu(\003)h Fj(x)3482 4022 y Fk(1)3533
4014 y Fu(\000)f Fr(1)p Fj(;)c Fr(2)18 b Fu(\003)f Fj(x)3837
4022 y Fk(2)3871 4014 y Fr(\))2040 4157 y Fq(Round)36
b(robin)h(joiner.)49 b Fr(The)31 b(rules)g(for)g(a)g(round)f(robin)h
(joiner)2040 4244 y(are)d(in)f(some)g(sense)g(dual)h(to)f(those)g(of)h
(the)f(round)g(robin)g(splitter.)2040 4331 y(Again)j(assuming)f(that)g
(items)f(are)i(alternately)g(dra)n(wn)f(from)g(the)2040
4418 y(input)c(tap)r(es,)h(starting)h(with)f Fj(I)6 b
Fr(1)3009 4426 y Fi(J)3051 4418 y Fr(,)26 b(w)n(e)g(ha)n(v)n(e)f(that:)
2664 4582 y Fj(min)2804 4590 y Fi(I)t Fk(1)2865 4601
y Fh(J)2906 4590 y Fw( )p Fi(O)3014 4601 y Fh(J)3058
4582 y Fr(\()p Fj(x)p Fr(\))c(=)3264 4500 y Fg(l)3314
4534 y Fj(x)p 3314 4565 V 3317 4633 a Fr(2)3368 4500
y Fg(m)2664 4752 y Fj(min)2804 4760 y Fi(I)t Fk(2)2865
4771 y Fh(J)2906 4760 y Fw( )p Fi(O)3014 4771 y Fh(J)3058
4752 y Fr(\()p Fj(x)p Fr(\))g(=)3264 4669 y Fg(j)3314
4704 y Fj(x)p 3314 4735 V 3317 4803 a Fr(2)3368 4669
y Fg(k)2040 4918 y Fr(Again,)28 b(the)e Fj(max)g Fr(function)h(tak)n
(es)g(t)n(w)n(o)g(argumen)n(ts,)f(corresp)r(ond-)2040
5006 y(ing)g(to)g(the)f(n)n(um)n(b)r(er)f(of)i(items)g(on)f
Fj(I)6 b Fr(1)3151 5014 y Fi(J)3219 5006 y Fr(and)26
b Fj(I)6 b Fr(2)3447 5014 y Fi(J)3489 5006 y Fr(,)26
b(resp)r(ectiv)n(ely:)2175 5148 y Fj(max)2328 5160 y
Fk(\()p Fi(I)t Fk(1)2413 5171 y Fh(J)2453 5160 y Fi(;I)t
Fk(2)2533 5171 y Fh(J)2574 5160 y Fk(\))p Fw(!)p Fi(O)2706
5171 y Fh(J)2749 5148 y Fr(\()p Fj(x)2823 5156 y Fk(1)2857
5148 y Fj(;)14 b(x)2936 5156 y Fk(2)2970 5148 y Fr(\))21
b(=)g Fj(M)8 b(I)e(N)i Fr(\(2)17 b Fu(\003)h Fj(x)3478
5156 y Fk(1)3529 5148 y Fu(\000)f Fr(1)p Fj(;)c Fr(2)18
b Fu(\003)f Fj(x)3833 5156 y Fk(2)3867 5148 y Fr(\))2040
5290 y Fq(Duplicate)33 b(splitter)p Fr(.)41 b(Clearly)-6
b(,)29 b(the)d Fj(max)g Fr(function)i(of)g(a)f(dupli-)2040
5378 y(cate)33 b(splitter)g(is)g(simply)f(the)g(iden)n(tit)n(y)g
(function,)j(since)e(it)f(maps)1921 5627 y(8)p eop
%%Page: 9 9
9 8 bop -115 522 a @beginspecial 61 @llx 150 @lly 383
@urx 263 @ury 2304 @rwi @setspecial
%%BeginDocument: feedback.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010803210631)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 61 150 383 263
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

61 150 moveto
383 150 lineto
383 263 lineto
61 263 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font PDEPKK+TimesNewRoman
11 dict begin
/FontName /PDEPKK+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/A 138 RD 
93f9660df87df71315986c92748b7d088b7f868282840882847986718a08
8a7905f79a069d07708d76927c98087b997ba878b708fb7af8bc057a06fb
7dfcb605775a796c7a7b08828379856f86088d7905f763068d9d05698d77
90819308839285948b95088c99909e96a508b7f305f79606b12c0509fbac
f71615f707f7a005f703fba005fb7606090e ND 
/B 254 RD 
9cf92f0df8aaf821159fa595a98bac088bb27ead71a90872a965a05a9708
6d915f90568b08fbb2067907a406a38b9e84987d08947f90728b6208fc41
078b6687738480087f787783708b0872067907f7cc06d68bc292af9908b0
98a7a1a0a9089fab96aa8bac088bb67bb06ba90876a0689b5d9508b297a9
9f9fa50809fbedf77215a592a88fac8b08c78bb97dab7008aa709b6a8b64
088b7385747e76087f74797c738108728168865c8b08778b7b8c7c8c087a
8c7e8d7f8d08f7910709fbbf04948c978c998c08998c9d8b9f8b08b88bb3
84ab7d08aa7ea2789973089a7492728b71088b647b6a6c70086d725d7d50
8b08678b658f659408f7a407090e ND 
/F 175 RD 
9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08
9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f
8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d
0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06
a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685
6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 
/I 108 RD 
a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8
41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b
87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b
7783708b0873067907f7b0069d077306090e ND 
/J 146 RD 
a0f8190df1f919159a8b9a87998308968692848e83088f7f8d768b6a08fc
59078b6e877983800885818286828b0880898195849d087ea7819e839208
8191828f818b087e8b7e868081088383877f8b7b088b77947a9d7c089b7b
a484a98b08b18bab97a6a208a5a19ea796aa0895a991b48bbd08f7d8078b
b38fa4939508979b9f93a68b08a3069d07fbb0067907a306090e ND 
/O 133 RD 
aef9660df6f8e315444967358b22088b24aa37c94a08c94bd86ae68b08e4
8bd8accacd08cccfaade8bf0088bec6cdd4ccc084bcc41ac358b08358b40
6e4d51088b0609f7fe7c15b854a1368bfb05088b22773f635a08615a5873
4d8b08528b5ca168b7085bc675de8bf700088bf5a1dbb8c208aeb7bba1c6
8b08ca8bbc75af5f088a07090e ND 
/S 263 RD 
caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308
639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975
9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b
8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3
087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893
8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f
b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77
a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08
a67ca1769a71089b719568915f089d06f779077906090e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
/m 352 RD 
93f99e0df731f861157606fb1b54059279059890968d948b08938c928990
870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584
83870883867d89768b087907f771069d07738b7b8d838f08839085918794
088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099
7608967c90708b6708fb55078b708a7b898608897f848282850881877b87
738b08897905f77706899d05768b7a8e829008828f84928892088893899e
8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81
987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d
88788b0882067907f76f069d07788b7d8e829008828f8592889208879589
9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b
7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88
7a84087b847b827c7f08868478796b6a088aeb05090e ND 
/n 207 RD 
91f8880df730f861157606fb1b54059279059890968d948b08938c928990
870890858f848d7f088e7f8c6a8b5508fb3a078b6d8774838008837e7c86
748b0881067907f772069d07738b7b8d838f08829085918694088894899c
8ba908f78107b1b8b19fb28b08a48b9d829679089477916e8b6208fb4c07
8b718a7c8a8608887f858183850882867d87768b0882067907f771069d07
768b7c8d839008838f85928793088894889e8ba708f753078bb687a8849f
0881a67da07997087a977691738b085b8b5a6c574c088ae905090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PDEPKK+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 79 /O put
dup 83 /S put
dup 90 /Z put
dup 104 /h put
dup 109 /m put
dup 110 /n put
pop
%%EndResource
[/N83/PDEPKK+TimesNewRoman 1 TZ
%%BeginResource: font PDEPJJ+Arial
11 dict begin
/FontName /PDEPJJ+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PDEPJJ+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N80/PDEPJJ+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
61 150 322 113 re W n
[ 0 -1 1 0 -89 324 ] concat
/N71 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N92 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
BT
/N83 1 Tf
0 9 -9 0 167.0806 249.5206 Tm
/N71 /ColorSpace findRes cs
0 0 0 scn
/N92 /ExtGState findRes gs
0 Tc
0 Tw
(O)Tj 
0 6.96001 -6.96001 0 169.9606 256.3606 Tm
0.0128 Tc
(FJ)Tj 
0 9 -9 0 167.0806 350.6806 Tm
0 Tc
(I)Tj 
0 6.96001 -6.96001 0 169.9606 354.0406 Tm
0.0128 Tc
(FS)Tj 
ET
1 i
158.681 189.041 m
158.321 188.92101 l
157.961 188.681 l
157.841 188.44099 l
157.72099 187.961 l
157.961 187.241 l
158.681 187.00101 l
159.401 187.241 l
159.64101 187.601 l
159.761 187.961 l
159.64101 188.44099 l
159.401 188.681 l
159.041 188.92101 l
158.681 189.041 l
f* 
158.44099 186.64101 m
155.80099 188.08099 l
155.44099 188.08099 l
155.561 188.561 l
158.681 199.481 l
161.80099 188.561 l
161.92101 188.321 l
161.561 188.08099 l
160.841 188.321 l
158.201 197.561 l
159.161 197.80099 l
159.161 197.561 l
156.521 188.321 l
155.561 188.561 l
156.28101 188.92101 l
158.92101 187.481 l
f 
161.561 188.08099 m
158.92101 186.64101 l
158.681 186.521 l
158.44099 186.64101 l
158.44099 187.481 l
161.08099 188.92101 l
f 
158.681 187.00101 m
156.041 188.44099 l
158.681 197.681 l
161.321 188.44099 l
f* 
157.72099 150.041 2.03999 0.96001 rf
157.72099 188.92101 2.03999 -0.96001 rf
157.72099 151.00101 2.03999 36.96001 rf
BT
0 9 -9 0 167.0806 162.5206 Tm
0.00031 Tc
(I1)Tj 
0 6.96001 -6.96001 0 169.9606 170.4406 Tm
0.0128 Tc
(FJ)Tj 
0 9 -9 0 167.0806 426.28059 Tm
-0.0022 Tc
(O1)Tj 
0 6.96001 -6.96001 0 169.9606 437.56059 Tm
-0.00439 Tc
(FS)Tj 
ET
158.681 276.041 m
158.321 275.92101 l
157.961 275.681 l
157.841 275.44099 l
157.72099 274.961 l
157.961 274.241 l
158.681 274.00101 l
159.401 274.241 l
159.64101 274.601 l
159.761 274.961 l
159.64101 275.44099 l
159.401 275.681 l
159.041 275.92101 l
158.681 276.041 l
f* 
158.44099 273.64101 m
155.80099 275.08099 l
155.44099 275.08099 l
155.561 275.561 l
158.681 286.481 l
161.80099 275.561 l
161.92101 275.321 l
161.561 275.08099 l
160.841 275.321 l
158.201 284.561 l
159.161 284.80099 l
159.161 284.561 l
156.521 275.321 l
155.561 275.561 l
156.28101 275.92101 l
158.92101 274.481 l
f 
161.561 275.08099 m
158.92101 273.64101 l
158.681 273.521 l
158.44099 273.64101 l
158.44099 274.481 l
161.08099 275.92101 l
f 
158.681 274.00101 m
156.041 275.44099 l
158.681 284.681 l
161.321 275.44099 l
f* 
157.72099 243.041 2.03999 0.96001 rf
157.72099 275.92101 2.03999 -0.96001 rf
157.72099 244.00101 2.03999 30.96001 rf
157.72099 418.121 2.03999 0.96001 rf
157.72099 471.041 2.03999 -0.96001 rf
157.72099 419.08099 2.03999 51 rf
1 1 1 scn
145.241 387.401 m
145.481 384.64101 l
146.321 382.121 l
147.521 379.841 l
149.201 377.80099 l
151.121 376.241 l
153.401 374.92101 l
156.041 374.201 l
158.681 373.841 l
161.44099 374.201 l
163.961 374.92101 l
166.241 376.241 l
168.28101 377.80099 l
169.961 379.841 l
171.161 382.121 l
171.881 384.64101 l
172.241 387.401 l
172.241 405.401 l
171.881 408.161 l
171.161 410.681 l
169.961 412.961 l
168.28101 415.00101 l
166.241 416.681 l
163.961 417.881 l
161.44099 418.72099 l
158.681 418.961 l
156.041 418.72099 l
153.401 417.881 l
151.121 416.681 l
149.201 415.00101 l
147.521 412.961 l
146.321 410.681 l
145.481 408.161 l
145.241 405.401 l
145.241 387.401 l
f* 
0 0 0 scn
145.481 387.401 m
145.72099 384.64101 l
145.72099 384.761 l
146.561 382.241 l
147.761 379.961 l
147.761 380.08099 l
149.44099 378.041 l
151.36099 376.481 l
151.241 376.481 l
153.521 375.161 l
156.161 374.44099 l
158.80099 374.08099 l
158.681 374.08099 l
161.44099 374.44099 l
163.961 375.161 l
163.841 375.161 l
166.121 376.481 l
168.161 378.041 l
169.841 380.08099 l
169.72099 379.961 l
170.92101 382.241 l
171.64101 384.761 l
172.00101 387.521 l
172.00101 387.401 l
172.00101 405.401 l
171.64101 408.161 l
170.92101 410.681 l
170.92101 410.561 l
169.72099 412.841 l
169.841 412.841 l
168.161 414.881 l
166.121 416.561 l
166.121 416.44099 l
163.841 417.64101 l
163.961 417.64101 l
161.44099 418.481 l
158.681 418.72099 l
156.041 418.481 l
156.161 418.481 l
153.521 417.64101 l
151.241 416.44099 l
151.36099 416.561 l
149.44099 414.881 l
147.761 412.841 l
146.561 410.561 l
146.561 410.681 l
145.72099 408.161 l
145.481 405.401 l
145.481 387.401 l
145.00101 387.401 l
145.00101 405.401 l
145.241 408.161 l
145.241 408.28101 l
146.08099 410.80099 l
147.28101 413.08099 l
147.401 413.201 l
149.08099 415.241 l
151.00101 416.92101 l
153.28101 418.121 l
153.401 418.121 l
156.041 418.961 l
158.681 419.201 l
161.44099 418.961 l
161.561 418.961 l
164.08099 418.121 l
166.36099 416.92101 l
166.481 416.92101 l
168.521 415.241 l
170.201 413.201 l
170.201 413.08099 l
171.401 410.80099 l
172.121 408.28101 l
172.481 405.521 l
172.481 387.401 l
172.121 384.64101 l
171.401 382.121 l
171.401 382.00101 l
170.201 379.72099 l
168.521 377.681 l
168.401 377.681 l
166.36099 376.121 l
164.08099 374.80099 l
164.08099 374.681 l
161.561 373.961 l
158.80099 373.601 l
158.681 373.601 l
156.041 373.961 l
153.401 374.681 l
153.28101 374.80099 l
151.00101 376.121 l
149.08099 377.681 l
147.401 379.72099 l
147.28101 379.72099 l
146.08099 382.00101 l
146.08099 382.121 l
145.241 384.64101 l
145.00101 387.401 l
f 
145.481 387.401 m
145.00101 387.401 l
f 
BT
/N80 1 Tf
0 14.39999 -14.39999 0 162.7606 385.48061 Tm
0.0058 Tc
(FS)Tj 
ET
1 1 1 scn
145.241 212.681 m
145.481 209.92101 l
146.321 207.401 l
147.521 205.121 l
149.201 203.08099 l
151.121 201.521 l
153.401 200.201 l
156.041 199.481 l
158.681 199.121 l
161.44099 199.481 l
163.961 200.201 l
166.241 201.521 l
168.28101 203.08099 l
169.961 205.121 l
171.161 207.401 l
171.881 209.92101 l
172.241 212.681 l
172.241 230.681 l
171.881 233.44099 l
171.161 235.961 l
169.961 238.241 l
168.28101 240.28101 l
166.241 241.961 l
163.961 243.161 l
161.44099 243.881 l
158.681 244.241 l
156.041 243.881 l
153.401 243.161 l
151.121 241.961 l
149.201 240.28101 l
147.521 238.241 l
146.321 235.961 l
145.481 233.44099 l
145.241 230.681 l
145.241 212.681 l
f* 
0 0 0 scn
145.481 212.681 m
145.72099 209.92101 l
145.72099 210.041 l
146.561 207.521 l
147.761 205.241 l
147.761 205.36099 l
149.44099 203.321 l
151.36099 201.761 l
151.241 201.761 l
153.521 200.44099 l
156.161 199.72099 l
158.80099 199.36099 l
158.681 199.36099 l
161.44099 199.72099 l
163.961 200.44099 l
163.841 200.44099 l
166.121 201.761 l
168.161 203.321 l
169.841 205.36099 l
169.72099 205.241 l
170.92101 207.521 l
171.64101 210.041 l
172.00101 212.80099 l
172.00101 212.681 l
172.00101 230.681 l
171.64101 233.44099 l
170.92101 235.961 l
170.92101 235.841 l
169.72099 238.121 l
169.841 238.121 l
168.161 240.161 l
166.121 241.841 l
166.121 241.72099 l
163.841 242.92101 l
163.961 242.92101 l
161.44099 243.64101 l
158.681 244.00101 l
158.80099 244.00101 l
156.161 243.64101 l
153.521 242.92101 l
151.241 241.72099 l
151.36099 241.841 l
149.44099 240.161 l
147.761 238.121 l
146.561 235.841 l
146.561 235.961 l
145.72099 233.44099 l
145.481 230.681 l
145.481 212.681 l
145.00101 212.681 l
145.00101 230.681 l
145.241 233.44099 l
145.241 233.561 l
146.08099 236.08099 l
147.28101 238.36099 l
147.401 238.481 l
149.08099 240.521 l
151.00101 242.201 l
153.28101 243.401 l
153.401 243.401 l
156.041 244.121 l
158.681 244.481 l
158.80099 244.481 l
161.561 244.121 l
164.08099 243.401 l
166.36099 242.201 l
166.481 242.201 l
168.521 240.521 l
170.201 238.481 l
170.201 238.36099 l
171.401 236.08099 l
172.121 233.561 l
172.481 230.80099 l
172.481 212.681 l
172.121 209.92101 l
171.401 207.401 l
171.401 207.28101 l
170.201 205.00101 l
168.521 202.961 l
168.401 202.961 l
166.36099 201.401 l
164.08099 200.08099 l
164.08099 199.961 l
161.561 199.241 l
158.80099 198.881 l
158.681 198.881 l
156.041 199.241 l
153.401 199.961 l
153.28101 200.08099 l
151.00101 201.401 l
149.08099 202.961 l
147.401 205.00101 l
147.28101 205.00101 l
146.08099 207.28101 l
146.08099 207.401 l
145.241 209.92101 l
145.00101 212.681 l
f 
145.481 212.681 m
145.00101 212.681 l
f 
BT
0 14.39999 -14.39999 0 162.7606 215.4406 Tm
(FJ)Tj 
ET
1 1 1 scn
145.241 300.161 m
145.481 297.401 l
146.321 294.881 l
147.521 292.601 l
149.201 290.561 l
151.121 289.00101 l
153.401 287.681 l
156.041 286.961 l
158.681 286.72099 l
161.44099 286.961 l
163.961 287.681 l
166.241 289.00101 l
168.28101 290.561 l
169.961 292.601 l
171.161 294.881 l
171.881 297.401 l
172.241 300.161 l
172.241 318.161 l
171.881 320.92101 l
171.161 323.44099 l
169.961 325.72099 l
168.28101 327.761 l
166.241 329.44099 l
163.961 330.64101 l
161.44099 331.481 l
158.681 331.72099 l
156.041 331.481 l
153.401 330.64101 l
151.121 329.44099 l
149.201 327.761 l
147.521 325.72099 l
146.321 323.44099 l
145.481 320.92101 l
145.241 318.161 l
145.241 300.161 l
f* 
0 0 0 scn
145.481 300.161 m
145.72099 297.401 l
145.72099 297.521 l
146.561 295.00101 l
147.761 292.72099 l
147.761 292.841 l
149.44099 290.80099 l
151.36099 289.241 l
151.241 289.241 l
153.521 287.92101 l
156.161 287.201 l
156.041 287.201 l
158.681 286.961 l
161.44099 287.201 l
163.961 287.92101 l
163.841 287.92101 l
166.121 289.241 l
168.161 290.80099 l
169.841 292.841 l
169.72099 292.72099 l
170.92101 295.00101 l
171.64101 297.521 l
172.00101 300.28101 l
172.00101 300.161 l
172.00101 318.161 l
171.64101 320.92101 l
170.92101 323.44099 l
170.92101 323.321 l
169.72099 325.601 l
169.841 325.601 l
168.161 327.64101 l
166.121 329.321 l
166.121 329.201 l
163.841 330.401 l
163.961 330.401 l
161.44099 331.241 l
158.681 331.481 l
156.041 331.241 l
156.161 331.241 l
153.521 330.401 l
151.241 329.201 l
151.36099 329.321 l
149.44099 327.64101 l
147.761 325.601 l
146.561 323.321 l
146.561 323.44099 l
145.72099 320.92101 l
145.481 318.161 l
145.481 300.161 l
145.00101 300.161 l
145.00101 318.161 l
145.241 320.92101 l
145.241 321.041 l
146.08099 323.561 l
147.28101 325.841 l
147.401 325.961 l
149.08099 328.00101 l
151.00101 329.681 l
153.28101 330.881 l
153.401 330.881 l
156.041 331.72099 l
158.681 331.961 l
161.44099 331.72099 l
161.561 331.72099 l
164.08099 330.881 l
166.36099 329.681 l
166.481 329.681 l
168.521 328.00101 l
170.201 325.961 l
170.201 325.841 l
171.401 323.561 l
172.121 321.041 l
172.481 318.28101 l
172.481 300.161 l
172.121 297.401 l
171.401 294.881 l
171.401 294.761 l
170.201 292.481 l
168.521 290.44099 l
168.401 290.44099 l
166.36099 288.881 l
164.08099 287.561 l
164.08099 287.44099 l
161.561 286.72099 l
161.44099 286.72099 l
158.681 286.481 l
156.041 286.72099 l
153.401 287.44099 l
153.28101 287.561 l
151.00101 288.881 l
149.08099 290.44099 l
147.401 292.481 l
147.28101 292.481 l
146.08099 294.761 l
146.08099 294.881 l
145.241 297.401 l
145.00101 300.161 l
f 
145.481 300.161 m
145.00101 300.161 l
f 
BT
0 14.39999 -14.39999 0 162.7606 294.5206 Tm
0.00101 Tc
(Bo)Tj [7.2 ]TJ (dy)Tj 
ET
142.72099 193.841 m
142.481 194.08099 l
141.64101 194.08099 l
141.401 193.841 l
141.161 193.481 l
141.041 193.121 l
141.161 192.761 l
141.401 192.401 l
141.64101 192.161 l
142.481 192.161 l
142.72099 192.401 l
142.961 192.761 l
143.08099 193.121 l
142.961 193.481 l
142.72099 193.841 l
f* 
140.80099 192.28101 m
140.08099 195.28101 l
139.961 195.64101 l
140.321 195.881 l
148.72099 200.44099 l
150.28101 201.28101 l
149.44099 199.72099 l
144.761 191.44099 l
144.64101 191.201 l
144.161 191.201 l
143.80099 191.92101 l
148.481 200.201 l
149.44099 199.72099 l
149.201 199.481 l
140.80099 194.92101 l
140.321 195.881 l
141.041 195.521 l
141.761 192.521 l
f 
144.161 191.201 m
141.161 191.92101 l
140.92101 192.041 l
140.80099 192.28101 l
141.401 192.881 l
144.401 192.161 l
f 
141.28101 192.401 m
140.561 195.401 l
148.961 199.961 l
144.28101 191.681 l
f* 
142.72099 192.401 m
143.44099 193.121 l
142.00101 194.561 l
141.28101 193.841 l
f 
142.72099 192.401 m
123.881 173.44099 l
123.64101 173.201 l
123.161 173.201 l
122.44099 174.881 l
141.28101 193.841 l
f 
74.80099 175.241 48.36 -2.03999 rf
74.80099 288.521 2.03999 -0.96001 rf
74.80099 174.161 2.03999 113.39999 rf
158.681 364.00101 m
157.961 363.761 l
157.72099 363.041 l
157.841 362.561 l
157.961 362.321 l
158.321 362.08099 l
158.681 361.961 l
159.041 362.08099 l
159.401 362.321 l
159.64101 362.561 l
159.761 363.041 l
159.64101 363.401 l
159.401 363.761 l
158.681 364.00101 l
f* 
158.44099 361.601 m
155.80099 363.161 l
155.44099 363.161 l
155.561 363.64101 l
158.681 374.561 l
161.80099 363.64101 l
161.92101 363.401 l
161.561 363.161 l
160.841 363.401 l
158.201 372.64101 l
159.161 372.881 l
159.161 372.64101 l
156.521 363.401 l
155.561 363.64101 l
156.28101 364.00101 l
158.92101 362.44099 l
f 
161.561 363.161 m
158.92101 361.601 l
158.681 361.481 l
158.44099 361.601 l
158.44099 362.44099 l
161.08099 364.00101 l
f 
158.681 361.961 m
156.041 363.521 l
158.681 372.761 l
161.321 363.521 l
f* 
157.72099 331.121 2.03999 0.96001 rf
157.72099 364.00101 2.03999 -0.96001 rf
157.72099 332.08099 2.03999 30.96001 rf
BT
/N83 1 Tf
0 9 -9 0 129.0406 184.6006 Tm
0.00031 Tc
(I2)Tj 
0 6.96001 -6.96001 0 131.92059 192.4006 Tm
-0.00439 Tc
(FJ)Tj 
ET
1 1 1 scn
62.201 298.121 m
62.44099 295.481 l
63.28101 292.961 l
64.481 290.561 l
66.161 288.64101 l
68.201 286.961 l
70.481 285.761 l
73.00101 284.92101 l
75.761 284.681 l
78.401 284.92101 l
80.92101 285.761 l
83.201 286.961 l
85.241 288.64101 l
86.92101 290.561 l
88.121 292.961 l
88.961 295.481 l
89.201 298.121 l
89.201 316.241 l
88.961 318.881 l
88.121 321.521 l
86.92101 323.80099 l
85.241 325.72099 l
83.201 327.401 l
80.92101 328.601 l
78.401 329.44099 l
75.761 329.681 l
73.00101 329.44099 l
70.481 328.601 l
68.201 327.401 l
66.161 325.72099 l
64.481 323.80099 l
63.28101 321.521 l
62.44099 318.881 l
62.201 316.241 l
62.201 298.121 l
f* 
0 0 0 scn
62.44099 298.121 m
62.681 295.481 l
62.681 295.601 l
63.521 293.08099 l
64.72099 290.681 l
64.72099 290.80099 l
66.401 288.881 l
68.44099 287.201 l
68.321 287.201 l
70.601 286.00101 l
73.121 285.161 l
73.00101 285.161 l
75.761 284.92101 l
78.401 285.161 l
80.92101 286.00101 l
80.80099 286.00101 l
83.08099 287.201 l
85.121 288.881 l
86.80099 290.80099 l
86.681 290.681 l
87.881 293.08099 l
88.72099 295.601 l
88.72099 295.481 l
88.961 298.121 l
88.961 316.241 l
88.72099 318.881 l
87.881 321.521 l
87.881 321.401 l
86.681 323.681 l
86.80099 323.681 l
85.121 325.601 l
83.08099 327.28101 l
83.08099 327.161 l
80.80099 328.36099 l
80.92101 328.36099 l
78.401 329.201 l
75.761 329.44099 l
73.00101 329.201 l
73.121 329.201 l
70.601 328.36099 l
68.321 327.161 l
68.44099 327.28101 l
66.401 325.601 l
64.72099 323.681 l
63.521 321.401 l
63.521 321.521 l
62.681 318.881 l
62.44099 316.241 l
62.44099 298.121 l
61.961 298.121 l
61.961 316.241 l
62.201 318.881 l
62.201 319.00101 l
63.041 321.64101 l
64.241 323.92101 l
64.36099 324.041 l
66.041 325.961 l
68.08099 327.64101 l
70.36099 328.841 l
70.481 328.841 l
73.00101 329.681 l
75.761 329.92101 l
78.401 329.681 l
78.521 329.681 l
81.041 328.841 l
83.321 327.64101 l
83.44099 327.64101 l
85.481 325.961 l
87.161 324.041 l
87.161 323.92101 l
88.36099 321.64101 l
89.201 319.00101 l
89.201 318.881 l
89.44099 316.241 l
89.44099 298.121 l
89.201 295.481 l
88.36099 292.961 l
88.36099 292.841 l
87.161 290.44099 l
85.481 288.521 l
83.44099 286.841 l
83.321 286.72099 l
81.041 285.521 l
78.521 284.681 l
78.401 284.681 l
75.761 284.44099 l
73.00101 284.681 l
70.481 285.521 l
70.36099 285.521 l
68.08099 286.72099 l
68.08099 286.841 l
66.041 288.521 l
64.36099 290.44099 l
64.241 290.44099 l
63.041 292.841 l
63.041 292.961 l
62.201 295.481 l
61.961 298.121 l
f 
62.44099 298.121 m
61.961 298.121 l
f 
BT
/N80 1 Tf
0 14.39999 -14.39999 0 79.7206 292.84061 Tm
0.0022 Tc
(Loo)Tj [8.39999 ]TJ (p)Tj 
ET
75.761 340.241 m
76.121 340.36099 l
76.36099 340.481 l
76.601 340.841 l
76.72099 341.201 l
76.601 341.681 l
76.121 342.161 l
75.761 342.28101 l
75.28101 342.161 l
74.80099 341.681 l
74.681 341.201 l
74.80099 340.841 l
75.041 340.481 l
75.28101 340.36099 l
75.761 340.241 l
f* 
76.00101 342.64101 m
78.64101 341.08099 l
79.00101 341.08099 l
78.881 340.601 l
76.241 331.36099 l
75.761 329.80099 l
75.28101 331.36099 l
72.521 340.601 l
72.401 340.841 l
72.761 341.08099 l
73.481 340.841 l
76.241 331.601 l
75.28101 331.36099 l
75.28101 331.601 l
77.92101 340.841 l
78.881 340.601 l
78.161 340.241 l
75.521 341.80099 l
f 
72.761 341.08099 m
75.521 342.64101 l
75.761 342.761 l
76.00101 342.64101 l
76.00101 341.80099 l
73.241 340.241 l
f 
75.761 342.28101 m
78.401 340.72099 l
75.761 331.481 l
73.00101 340.72099 l
f* 
149.44099 415.241 m
150.161 414.521 l
151.601 415.961 l
150.881 416.681 l
f 
149.44099 415.241 m
122.44099 442.36099 l
123.161 444.161 l
123.521 444.161 l
123.881 443.80099 l
150.881 416.681 l
f 
74.80099 444.161 48.36 -2.03999 rf
74.80099 341.201 2.03999 -0.96001 rf
74.80099 341.201 2.03999 101.88 rf
BT
/N83 1 Tf
0 9 -9 0 130.48061 412.2406 Tm
-0.0022 Tc
(O2)Tj 
0 6.96001 -6.96001 0 133.48061 423.5206 Tm
0.0128 Tc
(FS)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -78 696 a Fq(Figure)30 b(12:)40 b Fn(F)-7
b(eedbac)n(kLo)r(op)27 b(construct)g(with)f(lab)r(eling.)-152
961 y Fr(eac)n(h)g(elemen)n(t)e(on)h(the)g(input)f(tap)r(e)i(to)f(the)g
(same)g(lo)r(cation)i(on)e(the)-152 1048 y(output)g(tap)r(es:)517
1203 y Fj(max)670 1211 y Fi(I)697 1222 y Fh(S)738 1211
y Fw(!)p Fi(O)r Fk(1)878 1222 y Fh(S)923 1203 y Fr(\()p
Fj(x)p Fr(\))c(=)g Fj(x)517 1315 y(max)670 1323 y Fi(I)697
1334 y Fh(S)738 1323 y Fw(!)p Fi(O)r Fk(2)878 1334 y
Fh(S)923 1315 y Fr(\()p Fj(x)p Fr(\))g(=)g Fj(x)-152
1470 y Fr(The)d Fj(min)f Fr(function)h(is)g(similar,)i(except)c
(that{lik)n(e)i(the)f(round)g(robin)-152 1557 y(split{the)j(input)e
(need)g(only)h(progress)h(as)g(far)f(as)h(the)e(lesser)i(output:)157
1712 y Fj(min)297 1724 y Fi(I)324 1735 y Fh(S)366 1724
y Fw( )p Fk(\()p Fi(O)r Fk(1)530 1735 y Fh(S)571 1724
y Fi(;O)r Fk(2)669 1735 y Fh(S)711 1724 y Fk(\))739 1712
y Fr(\()p Fj(x)813 1720 y Fk(1)847 1712 y Fj(;)13 b(x)925
1720 y Fk(2)959 1712 y Fr(\))21 b(=)g Fj(M)8 b(I)e(N)i
Fr(\()p Fj(x)1356 1720 y Fk(1)1390 1712 y Fj(;)13 b(x)1468
1720 y Fk(2)1503 1712 y Fr(\))-152 1867 y Fq(Com)n(bine)37
b(joiner.)54 b Fr(The)32 b(com)n(bine)f(joiner)i(is)g(simply)e(the)h
(dual)-152 1954 y(of)38 b(the)e(duplicate)h(splitter,)j(with)c
(transfer)i(functions)f(that)f(the)-152 2041 y(reader)26
b(can)g(v)n(erify)g(as)g(follo)n(ws:)161 2196 y Fj(max)314
2208 y Fk(\()p Fi(I)t Fk(1)399 2219 y Fh(J)438 2208 y
Fi(;I)t Fk(2)518 2219 y Fh(J)559 2208 y Fk(\))p Fw(!)p
Fi(O)691 2219 y Fh(J)735 2196 y Fr(\()p Fj(x)809 2204
y Fk(1)843 2196 y Fj(;)13 b(x)921 2204 y Fk(2)955 2196
y Fr(\))21 b(=)g Fj(M)8 b(I)e(N)i Fr(\()p Fj(x)1352 2204
y Fk(1)1386 2196 y Fj(;)13 b(x)1464 2204 y Fk(2)1499
2196 y Fr(\))488 2308 y Fj(min)628 2316 y Fi(I)t Fk(1)689
2327 y Fh(J)730 2316 y Fw( )p Fi(O)838 2327 y Fh(J)882
2308 y Fr(\()p Fj(x)p Fr(\))20 b(=)h Fj(x)488 2420 y(min)628
2428 y Fi(I)t Fk(2)689 2439 y Fh(J)730 2428 y Fw( )p
Fi(O)838 2439 y Fh(J)882 2420 y Fr(\()p Fj(x)p Fr(\))f(=)h
Fj(x)-152 2655 y Fm(4.1.4)90 b(F)-7 b(eedbac)n(kLoops)-152
2747 y Fr(W)h(e)28 b(ha)n(v)n(e)g(to)g(b)r(e)g(careful)h(when)f
(de\014ning)g(the)f(transfer)i(functions)-152 2834 y(for)22
b(feedbac)n(k)e(lo)r(ops)i(\(see)e(Figure)i(12\).)33
b(The)21 b(feedbac)n(k)f(splitter)h Fj(F)11 b(S)-152
2921 y Fr(serv)n(es)25 b(as)g(a)g(normal)f(splitter,)h(and)f(has)h(the)
f(same)g Fj(min)h Fr(and)f Fj(max)-152 3008 y Fr(functions)c(as)g
(de\014ned)e(ab)r(o)n(v)n(e.)32 b(Ho)n(w)n(ev)n(er,)21
b(the)d(feedbac)n(k)i(joiner)g Fj(F)11 b(J)-152 3095
y Fr(is)27 b(sligh)n(tly)g(di\013eren)n(t)e(than)h(a)g(standard)g
(joiner,)i(since)e(during)g(the)-152 3183 y(\014rst)i(few)g(executions)
g(it)g(fabricates)h(v)l(alues)e(from)h(the)f(lo)r(op)h(b)r(o)r(dy)-152
3270 y(b)r(efore)23 b(they)f(app)r(ear)g(on)h(the)e(input)h(tap)r(e.)33
b(The)23 b(transfer)g(function)-152 3357 y(m)n(ust)j(tak)n(e)g(sp)r
(ecial)i(accoun)n(t)f(of)h(these)f(initial)h(v)l(alues,)f(since)h(they)
-152 3444 y(nev)n(er)h(app)r(ear)h(on)f Fj(I)6 b Fr(2)503
3452 y Fi(F)i(J)592 3444 y Fr(,)31 b(the)d(input)h(tap)r(e)g(from)g
(the)g(lo)r(op)h(b)r(o)r(dy)-6 b(.)-152 3531 y(This)19
b(is)g(b)r(ecause)f(w)n(e)g(mo)r(del)g(the)g(initialization)i(of)f(F)-6
b(eedbac)n(kLo)r(ops)-152 3618 y(b)n(y)35 b(feeding)h(the)e(joiner)j
(the)e(initial)h(v)l(alues)f(directly)g(instead)h(of)-152
3706 y(pushing)26 b(them)e(on)n(to)i(a)g(c)n(hannel.)-152
3880 y(Let)k Fj(n)h Fr(b)r(e)f(the)g(n)n(um)n(b)r(er)e(of)j(initial)g
(v)l(alues)g(that)e(are)i(pro)n(vided)f(to)-152 3967
y(the)23 b(feedbac)n(k)f(joiner)i(b)r(efore)g(v)l(alues)e(from)h(the)f
(feedbac)n(k)h(lo)r(op)g(are)-152 4054 y(read.)60 b(Let)34
b Fj(J)42 b Fr(b)r(e)33 b(a)i(normal)f(COMBINE)g(or)g(R)n(OUND)p
1566 4054 24 4 v 26 w(R)n(OBIN)-152 4141 y(joiner)22
b(as)g(de\014ned)e(for)i(SplitJoins.)34 b(No)n(w,)23
b(let)e(us)g(de\014ne)f(the)h(trans-)-152 4229 y(fer)27
b(functions)f(for)g Fj(F)11 b(J)c Fr(,)26 b(the)f(feedbac)n(k)h
(joiner.)-152 4403 y(The)g Fj(min)g Fr(function)g(for)g(the)g(main)f
(stream)g(is)h(as)g(b)r(efore:)356 4558 y Fj(min)496
4566 y Fi(I)t Fk(1)557 4577 y Fh(F)8 b(J)642 4566 y Fw( )p
Fi(O)750 4577 y Fh(F)e(J)858 4558 y Fr(=)21 b Fj(min)1079
4566 y Fi(I)t Fk(1)1140 4577 y Fh(J)1181 4566 y Fw( )p
Fi(O)1289 4577 y Fh(J)-152 4713 y Fr(Ho)n(w)n(ev)n(er,)40
b(w)n(e)d(m)n(ust)e(o\013set)i(b)n(y)f Fj(n)h Fr(when)g(considering)g
(the)g Fj(min)-152 4800 y Fr(function)26 b(that)f(dra)n(ws)i(from)e
(the)h(lo)r(op's)h(tap)r(e:)183 4955 y Fj(min)323 4963
y Fi(I)t Fk(2)384 4974 y Fh(F)8 b(J)468 4963 y Fw( )p
Fi(O)576 4974 y Fh(F)f(J)663 4955 y Fr(\()p Fj(x)p Fr(\))21
b(=)g Fj(min)1009 4963 y Fi(I)t Fk(2)1070 4974 y Fh(J)1111
4963 y Fw( )p Fi(O)1219 4974 y Fh(J)1263 4955 y Fr(\()p
Fj(x)p Fr(\))16 b Fu(\000)h Fj(n)-152 5109 y Fr(Finally)-6
b(,)30 b(the)d Fj(max)g Fr(function)h(m)n(ust)f(b)r(e)h(similarly)h
(shifted)f(for)h(the)-152 5197 y(input)c(from)h(the)f(lo)r(op:)-152
5351 y Fj(max)1 5363 y Fk(\()p Fi(I)t Fk(1)86 5374 y
Fh(F)7 b(J)169 5363 y Fi(;I)t Fk(2)249 5374 y Fh(F)h(J)333
5363 y Fk(\))p Fw(!)p Fi(O)465 5374 y Fh(F)f(J)552 5351
y Fr(\()p Fj(x)626 5359 y Fk(1)660 5351 y Fj(;)13 b(x)738
5359 y Fk(2)772 5351 y Fr(\))21 b(=)g Fj(max)1057 5363
y Fk(\()p Fi(I)t Fk(1)1142 5374 y Fh(J)1182 5363 y Fi(;I)t
Fk(2)1262 5374 y Fh(J)1303 5363 y Fk(\))p Fw(!)p Fi(O)1435
5374 y Fh(J)1478 5351 y Fr(\()p Fj(x)1552 5359 y Fk(1)1586
5351 y Fj(;)14 b(x)1665 5359 y Fk(2)1716 5351 y Fr(+)j
Fj(n)p Fr(\))2040 -69 y Fm(4.1.5)90 b(Summary)2040 23
y Fr(W)-6 b(e)33 b(ha)n(v)n(e)f(deriv)n(ed)h(expressions)h(for)g
Fj(max)3327 32 y Fi(a)p Fw(!)p Fi(b)3485 23 y Fr(and)e
Fj(min)3781 32 y Fi(a)p Fw( )p Fi(b)3941 23 y Fr(for)2040
110 y(when)22 b Fj(a)g Fr(and)f Fj(b)h Fr(are)h(the)f(resp)r(ectiv)n(e)
g(input)f(and)h(output)f(to)h(1\))h(a)f(\014l-)2040 197
y(ter,)g(2\))e(a)h(pip)r(eline,)h(3\))f(a)f(split)h(or)g(join,)h(and)e
(4\))h(a)f(feedbac)n(k)g(split)h(or)2040 284 y(join.)35
b(By)26 b(comp)r(osing)g(these)g(expressions)g(follo)n(wing)i(Equation)
e(1,)2040 371 y(w)n(e)e(can)g(arriv)n(e)g(at)g(v)l(alues)g(of)h
Fj(max)3064 380 y Fi(a)p Fw(!)p Fi(b)3212 371 y Fr(and)f
Fj(min)3500 380 y Fi(a)p Fw( )p Fi(b)3650 371 y Fr(for)g(all)h(pairs)
2040 459 y(of)d(tap)r(es)f(\()p Fj(a;)12 b(b)p Fr(\))21
b(where)g(there)f(is)h(some)g(directed)f(path)h(through)f(the)2040
546 y(stream)25 b(graph{that)g(is,)i(along)f(the)f(direction)g(of)h
(data)g(\015o)n(w{from)2040 633 y(the)e(\014lter)h(reading)g(from)g
(tap)r(e)f Fj(a)h Fr(to)f(the)h(\014lter)f(writing)i(to)f(tap)r(e)f
Fj(b)p Fr(.)2040 807 y(Ommitted)j(from)i(the)g(ab)r(o)n(v)n(e)g
(analysis)i(are:)42 b(1\))30 b(w)n(eigh)n(ted)f(round)2040
894 y(robin)i(no)r(des,)h(2\))f(\014lters)g(that)f(push)g(or)h(p)r(op)g
(items)f(from)g(within)2040 982 y(their)18 b Ft(init)h
Fr(functions,)h(and)e(3\))g(message)g(handlers)g(that)g(send)g(mes-)
2040 1069 y(sages)h(themselv)n(es.)32 b(W)-6 b(e)17 b(hop)r(e)h(to)g
(address)g(these)g(issues)h(in)f(a)g(future)2040 1156
y(do)r(cumen)n(t.)2040 1355 y Fs(4.2)99 b(Semantics)2040
1446 y Fr(Equipp)r(ed)27 b(with)h(de\014nitions)g(of)g
Fj(max)3182 1455 y Fi(a)p Fw(!)p Fi(b)3335 1446 y Fr(and)f
Fj(min)3626 1455 y Fi(a)p Fw( )p Fi(b)3753 1446 y Fr(,)h(w)n(e)g(can)
2040 1534 y(no)n(w)i(address)g(the)f(seman)n(tics)g(of)h(StreaMIT's)h
(message)f(deliv)n(ery)2040 1621 y(and)25 b(latency)h(guaran)n(tees.)
2040 1820 y Fm(4.2.1)90 b(Messa)o(g)o(es)2040 1911 y
Fr(Supp)r(ose)17 b(that)h(\014lter)f Fj(A)h Fr(sends)f(a)h(message)h
(to)e(\014lter)h Fj(B)k Fr(with)c(latency)2040 1999 y
Fj(\025)p Fr(,)40 b(where)e Fj(\025)f Fr(is)h(an)n(y)f(in)n(teger.)70
b(In)37 b Fj(\025)g Fr(in)n(v)n(o)r(cations)h(of)g Fj(A)p
Fr('s)g Ft(work)2040 2086 y Fr(function,)c Fj(A)d Fr(will)j(pro)r(duce)
d(one)i(or)f(more)f(data)h(items)g Fj(d)p Fr(.)53 b(No)n(w,)2040
2173 y(the)25 b(messaging)i(system)e(guaran)n(tees)h(that:)2130
2407 y(1.)38 b(If)23 b Fj(B)k Fr(is)d(upstream)e(of)i
Fj(A)p Fr(,)g(then)e Fj(B)27 b Fr(will)e(receiv)n(e)e(the)g(message)
2227 2494 y(immediately)31 b(follo)n(wing)j(the)e(last)g(in)n(v)n(o)r
(cation)h(of)f(its)h Ft(work)2227 2581 y Fr(function)26
b(whic)n(h)f(pro)r(duces)h(items)f(that)h(a\013ect)g
Fj(d)p Fr(.)2130 2728 y(2.)38 b(If)25 b Fj(B)30 b Fr(is)c(do)n
(wnstream)f(of)h Fj(A)p Fr(,)f(then)g Fj(B)k Fr(will)e(receiv)n(e)f
(the)f(mes-)2227 2816 y(sage)30 b(immediately)e(preceding)i(the)e
(\014rst)h(in)n(v)n(o)r(cation)h(of)g(its)2227 2903 y
Ft(work)g Fr(function)g(whic)n(h)f(pro)r(duces)h(items)f(that)g(are)h
(e\013ected)2227 2990 y(b)n(y)25 b Fj(d)p Fr(.)2130 3137
y(3.)38 b(If)26 b Fj(B)31 b Fr(runs)26 b(in)g(parallel)i(with)f
Fj(A)p Fr(,)f(then)g(the)g(message)h(timing)2227 3224
y(is)f(in)f(terms)f(of)i(a)g(shared)f(set)h(of)f(splitters)h(and)f
(joiners.)36 b(W)-6 b(e)2227 3311 y(are)36 b(dev)n(eloping)g(seman)n
(tics)f(for)i(this)e(case,)40 b(but)34 b(they)h(are)2227
3398 y(b)r(ey)n(ond)25 b(the)g(scop)r(e)h(of)h(this)e(pap)r(er.)2040
3632 y(These)e(guaran)n(tees)f(can)g(b)r(e)g(expressed)g(more)f
(formally)i(as)f(a)h(set)f(of)2040 3720 y(constrain)n(ts)29
b(on)g(the)f(n)n(um)n(b)r(er)e(of)j(items)f(on)h(certain)g(tap)r(es)g
(in)f(the)2040 3807 y(system.)42 b(W)-6 b(e)28 b(will)i(use)f
Fj(n)p Fr(\()p Fj(t)p Fr(\))f(to)h(represen)n(t)f(the)g(n)n(um)n(b)r
(er)f(of)i(items)2040 3894 y(on)22 b(tap)r(e)h Fj(t)f
Fr(at)g(a)g(giv)n(en)h(p)r(oin)n(t)f(of)h(execution.)33
b(Again,)23 b(supp)r(ose)g(that)2040 3981 y(\014lter)i
Fj(A)g Fr(sends)g(a)h(message)g(to)g(\014lter)f Fj(B)k
Fr(with)c(latency)h Fj(\025)p Fr(,)f(where)h Fj(\025)2040
4068 y Fr(is)e(an)n(y)f(in)n(teger.)34 b(Let)23 b Fj(s)g
Fr(b)r(e)h(equal)f(to)h Fj(n)p Fr(\()p Fj(O)3264 4076
y Fi(A)3314 4068 y Fr(\))g(at)f(the)g(time)g(that)g(the)2040
4156 y(message)j(w)n(as)h(sen)n(t.)34 b(W)-6 b(e)26 b(ha)n(v)n(e)f
(that:)2130 4406 y(1.)38 b(If)31 b Fj(B)36 b Fr(is)31
b(upstream)g(of)h Fj(A)p Fr(,)h(the)e(message)h(will)g(b)r(e)g(deliv)n
(ered)2227 4493 y(when:)2513 4630 y Fj(n)p Fr(\()p Fj(O)2647
4638 y Fi(B)2700 4630 y Fr(\))21 b(=)g Fj(min)2972 4638
y Fi(O)3019 4649 y Fh(B)3068 4638 y Fw( )p Fi(O)3176
4649 y Fh(A)3227 4630 y Fr(\()p Fj(s)c Fr(+)g Fj(push)3550
4638 y Fi(A)3617 4630 y Fu(\003)g Fj(\025)p Fr(\))188
b(\(2\))2227 4767 y(That)29 b(is,)g Fj(s)19 b Fr(+)g
Fj(push)2820 4775 y Fi(A)2888 4767 y Fu(\003)h Fj(\025)28
b Fr(is)h(the)f(n)n(um)n(b)r(er)e(of)j(items)f(on)g Fj(A)p
Fr('s)2227 4855 y(output)17 b(tap)r(e)h(after)g(pro)r(ducing)g(the)g
(data)g(of)g(in)n(terest.)32 b(Then,)2227 4942 y Fj(y)24
b Fr(=)d Fj(min)2510 4950 y Fi(O)2557 4961 y Fh(B)2606
4950 y Fw( )p Fi(O)2714 4961 y Fh(A)2764 4942 y Fr(\()p
Fj(s)t Fr(+)t Fj(push)3061 4950 y Fi(A)3115 4942 y Fu(\003)t
Fj(\025)p Fr(\))e(is)h(the)f(latest)h(item)e(on)h Fj(B)t
Fr('s)2227 5029 y(output)h(tap)r(e)i(that)f(a\013ects)h(the)g(data)f
(of)i(in)n(terest.)33 b(The)22 b(mes-)2227 5116 y(sage)34
b(should)f(b)r(e)h(deliv)n(ered)f(immediately)e(after)k(the)d(w)n(ork)
2227 5203 y(function)e(pro)r(ducing)h(this)f(item,)h(whic)n(h)g(o)r
(ccurs)g(when)f(the)2227 5290 y(item)j(coun)n(t)g Fj(n)p
Fr(\()p Fj(O)2763 5298 y Fi(B)2816 5290 y Fr(\))g(equals)h
Fj(y)s Fr(,)h(as)g(sp)r(eci\014ed)e(b)n(y)g(the)g(con-)2227
5378 y(strain)n(t.)1921 5627 y(9)p eop
%%Page: 10 10
10 9 bop -62 -69 a Fr(2.)38 b(If)23 b Fj(B)j Fr(is)c(do)n(wnstream)g
(of)h Fj(A)p Fr(,)g(the)f(message)h(will)h(b)r(e)e(deliv)n(ered)35
19 y(when:)170 150 y Fj(n)p Fr(\()p Fj(O)304 158 y Fi(B)358
150 y Fr(\))f(=)g Fj(max)643 158 y Fi(O)690 169 y Fh(A)735
158 y Fw(!)p Fi(O)843 169 y Fh(B)896 150 y Fr(\()p Fj(s)c
Fr(+)g Fj(push)1219 158 y Fi(A)1286 150 y Fu(\003)g Fr(\()p
Fj(\025)g Fu(\000)g Fr(1\)\))135 b(\(3\))35 282 y(That)33
b(is,)j Fj(s)22 b Fr(+)f Fj(push)644 290 y Fi(A)716 282
y Fu(\003)h Fr(\()p Fj(\025)g Fu(\000)g Fr(1\))33 b(is)g(the)g(n)n(um)n
(b)r(er)e(of)i(items)35 369 y(on)e Fj(A)p Fr('s)g(output)f(tap)r(e)h(b)
r(efore)h(pushing)e(the)h(data)g(of)g(in)n(ter-)35 456
y(est,)g(and)e Fj(y)i Fr(=)c Fj(max)643 464 y Fi(O)690
475 y Fh(A)736 464 y Fw(!)p Fi(O)844 475 y Fh(B)896 456
y Fr(\()p Fj(s)20 b Fr(+)f Fj(push)1224 464 y Fi(A)1294
456 y Fu(\003)h Fr(\()p Fj(\025)f Fu(\000)g Fr(1\)\))30
b(is)g(the)35 543 y(maxim)n(um)h(n)n(um)n(b)r(er)g(of)k(items)e(on)h
Fj(B)t Fr('s)g(output)e(tap)r(e)i(as)g(a)35 630 y(result)29
b(of)g(the)f(outputs)g(of)i Fj(A)p Fr(.)42 b(Th)n(us,)30
b(when)e Fj(A)g Fr(pushes)g(the)35 718 y(next)h(set)h(of)g(data,)h(it)e
(could)h(a\013ect)g(the)f(data)h(that)f(will)i(b)r(e)35
805 y(pushed)h(next)g(on)n(to)i(the)e(output)h(tap)r(e)g(of)h
Fj(B)t Fr(.)56 b(\(Note)33 b(that)35 892 y(the)i(next)f(set)i(of)g
(data)f(from)h Fj(A)e Fr(migh)n(t)h(not)g(b)r(e)g(su\016cien)n(t)35
979 y(to)c(calculate)h(the)e(next)g(set)h(on)g Fj(B)t
Fr('s)g(output,)g(but)f(it)h(could)35 1066 y(a\013ect)c(it)g
(nonetheless.\))38 b(The)27 b(message)g(m)n(ust)e(b)r(e)i(deliv)n(ered)
35 1153 y(immediately)i(b)r(efore)h(this)g(e\013ected)g(data)g(app)r
(ears)h(on)e Fj(B)t Fr('s)35 1241 y(output,)f(so)g(the)f(n)n(um)n(b)r
(er)f(of)j(items)e Fj(n)p Fr(\()p Fj(O)1254 1249 y Fi(B)1307
1241 y Fr(\))h(on)g Fj(B)t Fr('s)g(output)35 1328 y(m)n(ust)c(equal)i
Fj(y)s Fr(.)-152 1516 y Fm(4.2.2)90 b(Latency)-152 1608
y Fr(Eac)n(h)20 b(directiv)n(e)g Ft(MAX)p 461 1608 24
4 v 29 w(LATENCY\(A,)41 b(B,)f(n\))20 b Fr(has)g(the)f(same)g(e\013ect)
h(as)-152 1695 y(de\014ning)30 b(a)g(message)h(from)e(\014lter)h
Fj(B)k Fr(to)c(upstream)f(\014lter)h Fj(A)g Fr(with)-152
1782 y(latency)c Fj(n)p Fr(.)-152 1970 y Fm(4.2.3)90
b(Sc)o(heduling)-152 2062 y Fr(W)-6 b(e)18 b(can)h(fully)f(de\014ne)g
(the)g(p)r(ossible)h(sequences)f(of)h(\014lter)g(executions)-152
2149 y(as)26 b(a)g(set)g(of)g(constrain)n(ts)g(on)g(the)f(n)n(um)n(b)r
(er)e(of)k(items)e(on)g(eac)n(h)h(tap)r(e)-152 2236 y(in)j(the)g
(stream)g(graph.)45 b(This)29 b(is)h(useful)g(not)f(only)g(from)g(the)f
(p)r(er-)-152 2323 y(sp)r(ectiv)n(e)c(of)h(seman)n(tics,)f(but)f(for)i
(compiler)f(analysis)h(of)g(the)e(space)-152 2410 y(of)29
b(v)l(alid)f(sc)n(hedules.)42 b(T)-6 b(o)28 b(b)r(egin)g(the)g
(analysis,)i(w)n(e)e(form)n(ulate)g(the)-152 2498 y(constrain)n(ts)h
(imp)r(osed)e(b)n(y)g(message)h(deliv)n(ery)f(guaran)n(tees)i(on)e(the)
-152 2585 y(n)n(um)n(b)r(er)d(of)i(items)g(on)f(eac)n(h)h(tap)r(e.)-152
2759 y(Supp)r(ose)19 b(that)h(a)f(\014lter)h Fj(A)f Fr(migh)n(t)f(send)
h(a)h(message)g(to)g(\014lter)f Fj(B)24 b Fr(with)-152
2846 y(a)29 b(maxim)n(um)d(latency)i(of)i Fj(\025)e Fr(during)g(an)n(y)
g(in)n(v)n(o)r(cation)h(of)h(its)f(w)n(ork)-152 2933
y(function.)64 b(Then)35 b(w)n(e)h(m)n(ust)e(constrain)h(the)g
(execution)g(of)i Fj(B)i Fr(to)-152 3021 y(mak)n(e)21
b(sure)g(that)h(it)f(is)h(not)g(to)r(o)g(far)h(ahead)e(to)h(receiv)n(e)
g(the)f(message)-152 3108 y(with)30 b(the)f(giv)n(en)g(latency)-6
b(.)46 b(That)30 b(is,)h(w)n(e)f(can)g(only)f(execute)g
Fj(B)k Fr(so)-152 3195 y(long)c(as)g Fj(n)p Fr(\()p Fj(O)248
3203 y Fi(B)301 3195 y Fr(\){the)f(item)g(coun)n(t)g(on)g(its)g(output)
g(tap)r(e{do)r(es)h(not)-152 3282 y(exceed)h(the)f(coun)n(t)g(when)h(a)
g(message)g(w)n(ould)g(b)r(e)g(deliv)n(ered.)47 b(Re-)-152
3369 y(calling)28 b(the)e(expression)h(for)g(message)g(deliv)n(ery)f
(time)g(\(Equations)-152 3456 y(2)g(and)e(3\),)i(this)f(constrain)n(t)g
(is)h(as)f(follo)n(ws)i(if)f Fj(B)j Fr(is)c(upstream)f(of)i
Fj(A)p Fr(:)138 3588 y Fj(n)p Fr(\()p Fj(O)272 3596 y
Fi(B)326 3588 y Fr(\))21 b Fu(\024)g Fj(min)598 3596
y Fi(O)645 3607 y Fh(B)694 3596 y Fw( )p Fi(O)802 3607
y Fh(A)852 3588 y Fr(\()p Fj(n)p Fr(\()p Fj(O)1016 3596
y Fi(A)1067 3588 y Fr(\))c(+)g Fj(push)1354 3596 y Fi(A)1421
3588 y Fu(\003)g Fj(\025)p Fr(\))192 b(\(4\))-152 3720
y(and)26 b(as)g(follo)n(ws)i(if)e Fj(B)k Fr(is)c(do)n(wnstream)g(of)g
Fj(A)p Fr(:)-13 3851 y Fj(n)p Fr(\()p Fj(O)121 3859 y
Fi(B)175 3851 y Fr(\))21 b Fu(\024)g Fj(max)460 3859
y Fi(O)507 3870 y Fh(A)552 3859 y Fw(!)p Fi(O)660 3870
y Fh(B)713 3851 y Fr(\()p Fj(n)p Fr(\()p Fj(O)877 3859
y Fi(A)928 3851 y Fr(\))c(+)g Fj(push)1215 3859 y Fi(A)1282
3851 y Fu(\003)g Fr(\()p Fj(\025)g Fu(\000)g Fr(1\)\))139
b(\(5\))-152 3983 y(The)33 b(guaran)n(tees)h(for)f(latency)g(are)g
(treated)g(iden)n(tically)g(to)g(mes-)-152 4070 y(sage)c(guaran)n
(tees,)h(as)e(\014tting)f(with)h(the)f(seman)n(tics)h(of)g(latency)g
(as)-152 4157 y(describ)r(ed)e(ab)r(o)n(v)n(e.)-152 4332
y Fq(De\014ning)k(the)e(sc)n(hedule.)34 b Fr(W)-6 b(e)24
b(no)n(w)i(ha)n(v)n(e)e(a)i(set)f(of)h(constrain)n(ts)-152
4419 y(expressing)j(whether)e(or)i(not)e(a)i(giv)n(en)e(set)i(of)f(tap)
r(es)h(resp)r(ects)f(the)-152 4506 y(latency)f(and)g(message)g(deliv)n
(ery)g(guaran)n(tees)h(in)f(a)g(program.)38 b(W)-6 b(e)-152
4593 y(will)35 b(no)n(w)e(incorp)r(orate)h(these)f(constrain)n(ts)h(in)
n(to)f(an)g(op)r(erational)-152 4680 y(seman)n(tics)25
b(that)g(de\014nes)f(a)h(legal)h(sequences)f(of)h(\014lter)e
(executions.)-152 4855 y(W)-6 b(e)17 b(represen)n(t)g(a)g(stream)g
(graph)h(as)f(a)h(con\014guration)f(\()p Fu(h)p Fj(p)p
Fr(\()p Fj(t)1558 4863 y Fk(1)1592 4855 y Fr(\))p Fj(;)c(n)p
Fr(\()p Fj(t)1760 4863 y Fk(1)1794 4855 y Fr(\))p Fu(i)p
Fj(;)-152 4942 y Fu(h)p Fj(p)p Fr(\()p Fj(t)-25 4950
y Fk(2)9 4942 y Fr(\))p Fj(;)g(n)p Fr(\()p Fj(t)177 4950
y Fk(2)211 4942 y Fr(\))p Fu(i)p Fj(;)30 b(:)13 b(:)g(:)g(;)30
b Fu(h)p Fj(p)p Fr(\()p Fj(t)602 4951 y Fi(k)639 4942
y Fr(\))p Fj(;)13 b(n)p Fr(\()p Fj(t)807 4951 y Fi(k)845
4942 y Fr(\))p Fu(i)p Fr(\),)31 b(where)f Fj(p)p Fr(\()p
Fj(t)p Fr(\))e(represen)n(ts)i(the)-152 5029 y(n)n(um)n(b)r(er)h(of)i
(items)f(that)g(ha)n(v)n(e)g(b)r(een)g(p)r(opp)r(ed)g(from)g(tap)r(e)h
Fj(t)p Fr(,)h(and)-152 5116 y Fj(t)-124 5124 y Fk(1)-77
5116 y Fj(:)14 b(:)f(:)g(t)54 5125 y Fi(k)124 5116 y
Fr(are)33 b(the)f(tap)r(es)g(in)h(the)f(stream)g(graph.)54
b(Ob)n(viously)-6 b(,)33 b(w)n(e)-152 5203 y(ha)n(v)n(e)26
b(the)f(constrain)n(t)i(that)e Fj(p)p Fr(\()p Fj(t)p
Fr(\))c Fu(\024)g Fj(n)p Fr(\()p Fj(t)p Fr(\))26 b(for)h(eac)n(h)f(tap)
r(e)g Fj(t)p Fr(,)g(since)g(a)-152 5290 y(\014lter)k(can)h(only)f(p)r
(op)g(as)g(man)n(y)f(items)h(as)g(ha)n(v)n(e)g(app)r(eared)g(on)g(its)
-152 5378 y(input)25 b(tap)r(e.)2040 -69 y(When)33 b(the)g(program)g(b)
r(egins,)j(no)d(items)g(ha)n(v)n(e)g(b)r(een)g(pushed)f(or)2040
19 y(p)r(opp)r(ed)27 b(from)f(an)n(y)h(data)g(c)n(hannels.)39
b(Th)n(us,)28 b(eac)n(h)f(tap)r(e)g(is)h(empt)n(y)-6
b(,)2040 106 y(and)25 b(the)h(starting)g(con\014guration)h
Fj(C)3129 114 y Fk(0)3189 106 y Fr(is)f(simply)f(the)g(zero)h(v)n
(ector.)2040 193 y(It)i(is)h(p)r(ossible)g(that)f(the)g(initial)h
(con\014guration)g(violates)h(some)e(of)2040 280 y(the)e(constrain)n
(ts)i(imp)r(osed)e(b)n(y)g(the)g(messaging)i(and)e(latency)h(con-)2040
367 y(structs,)d(in)f(whic)n(h)g(case)h(the)f(compiler)g(can)g(inform)f
(the)h(program-)2040 454 y(mer)j(that)h(the)g(deliv)n(ery)g(constrain)n
(ts)h(requested)f(in)g(the)g(program)2040 542 y(are)f(unsatis\014able.)
2040 716 y(Let)33 b Fu(P)6 b Fr(\()p Fj(C)f Fr(\))32
b(denote)h(whether)g(or)g(not)f(the)h(constrain)n(ts)g(in)g(Equa-)2040
803 y(tions)f(4)f(and)g(5)h(are)g(satis\014ed)g(for)g(all)g(\014lters)g
(in)f(a)h(stream)e(graph)2040 890 y(with)19 b(con\014guration)g
Fj(C)5 b Fr(.)32 b(W)-6 b(e)19 b(can)f(then)g(write)i(the)e(transition)
h(func-)2040 977 y(tion)26 b(b)r(et)n(w)n(een)g(con\014gurations)g(as)g
(follo)n(ws:)2704 1109 y Ff(n)p Fe(\()p Ff(I)2800 1117
y Fh(A)2848 1109 y Fe(\))15 b Fd(\000)g Ff(p)p Fe(\()p
Ff(I)3045 1117 y Fh(A)3093 1109 y Fe(\))j Fd(\025)h Ff(peek)3339
1117 y Fh(A)3388 1109 y Fe(;)2380 1175 y(\()p Ff(:)11
b(:)g(:)g(;)g Fd(h)p Ff(p)p Fe(\()p Ff(I)2646 1183 y
Fh(A)2694 1175 y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(I)2847
1183 y Fh(A)2895 1175 y Fe(\))p Fd(i)p Ff(;)f(:)h(:)h(:)f(;)g
Fd(h)p Ff(p)p Fe(\()p Ff(O)3240 1183 y Fh(A)3287 1175
y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(O)3461 1183 y Fh(A)3509
1175 y Fe(\))p Fd(i)p Ff(;)g(:)g(:)g(:)g Fe(\);)2077
1242 y Fd(P)5 b Fe(\(\()p Ff(:)11 b(:)g(:)g(;)g Fd(h)p
Ff(p)p Fe(\()p Ff(I)2421 1250 y Fh(A)2469 1242 y Fe(\))k(+)g
Ff(pop)2677 1250 y Fh(A)2725 1242 y Ff(;)c(n)p Fe(\()p
Ff(I)2852 1250 y Fh(A)2899 1242 y Fe(\))p Fd(i)p Ff(;)g(:)g(:)g(:)g(;)g
Fd(h)p Ff(p)p Fe(\()p Ff(O)3244 1250 y Fh(A)3292 1242
y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(O)3466 1250 y Fh(A)3514
1242 y Fe(\))k(+)g Ff(push)3764 1250 y Fh(A)3812 1242
y Fd(i)p Ff(;)c(:)g(:)g(:)g Fe(\)\);)p 2040 1265 2031
4 v 2139 1312 a(\()p Ff(:)g(:)g(:)g(;)g Fd(h)p Ff(p)p
Fe(\()p Ff(I)2405 1320 y Fh(A)2453 1312 y Fe(\))k(+)g
Ff(pop)2661 1320 y Fh(A)2708 1312 y Ff(;)c(n)p Fe(\()p
Ff(I)2835 1320 y Fh(A)2883 1312 y Fe(\))p Fd(i)p Ff(;)g(:)g(:)g(:)g(;)g
Fd(h)p Ff(p)p Fe(\()p Ff(O)3228 1320 y Fh(A)3275 1312
y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(O)3449 1320 y Fh(A)3497
1312 y Fe(\))k(+)g Ff(push)3747 1320 y Fh(A)3795 1312
y Fd(i)p Ff(;)c(:)g(:)g(:)g Fe(\))2040 1454 y Fr(There)24
b(are)h(t)n(w)n(o)f(comp)r(onen)n(ts)f(of)h(this)g(rule.)34
b(On)23 b(the)h(\014rst)f(line,)i(w)n(e)2040 1541 y(state)j(that,)g
(for)g(\014lter)f Fj(A)g Fr(to)g(\014re,)h(there)f(m)n(ust)f(b)r(e)h
(at)g(least)i Fj(peek)3984 1549 y Fi(A)2040 1628 y Fr(items)36
b(on)h Fj(A)p Fr('s)g(input)f(tap)r(e)g(that)h(ha)n(v)n(e)f(not)g(y)n
(et)g(b)r(een)h(p)r(opp)r(ed.)2040 1715 y(Secondly)-6
b(,)22 b(w)n(e)g(express)g(that)f(once)h Fj(A)g Fr(has)g(\014red,)g
(the)f(new)h(con\014gu-)2040 1803 y(ration)e(m)n(ust)f(satisfy)h(the)g
(messaging)g(and)g(latency)f(constrain)n(ts)i Fu(P)6
b Fr(.)2040 1890 y(The)25 b(new)g(con\014guration)h(di\013ers)f(from)f
(the)h(original)h(only)f(in)g(that)2040 1977 y Fj(pop)2155
1985 y Fi(A)2239 1977 y Fr(items)35 b(ha)n(v)n(e)f(b)r(een)g(p)r(opp)r
(ed)h(from)f Fj(A)p Fr('s)h(input)f(and)h Fj(push)3983
1985 y Fi(A)2040 2064 y Fr(items)25 b(ha)n(v)n(e)g(b)r(een)h(pushed)f
(to)g Fj(A)p Fr('s)h(output.)2040 2238 y Fq(Bounding)44
b(the)e(bu\013er)h(size.)67 b Fr(It)37 b(is)g(a)g(straigh)n(tforw)n
(ard)i(ex-)2040 2326 y(tension)30 b(to)g(incorp)r(orate)g(a)g
(constrain)n(t)g(on)g(the)f(maxim)n(um)d(n)n(um-)2040
2413 y(b)r(er)k(of)h(liv)n(e)g(items)f(in)g(the)g(stream.)48
b(This)31 b(could)f(b)r(e)g(useful)h(b)r(oth)2040 2500
y(from)26 b(a)g(language)i(p)r(ersp)r(ectiv)n(e,)f(in)f(whic)n(h)g(a)g
(user)g(migh)n(t)g(wish)g(to)2040 2587 y(constrain)h(the)e(bu\013er)g
(size,)i(or)g(from)e(a)h(compiler)g(p)r(ersp)r(ectiv)n(e,)h(in)2040
2674 y(whic)n(h)21 b(the)g(sc)n(heduler)g(is)h(in)n(terested)f(in)g
(constraining)h(the)f(n)n(um)n(b)r(er)2040 2761 y(of)27
b(liv)n(e)e(items.)2040 2936 y(The)j(liv)n(e)g(items)g(in)g(a)g(giv)n
(en)f(con\014guration)i(are)f(those)h(that)e(ha)n(v)n(e)2040
3023 y(b)r(een)34 b(pushed)e(to)i(a)g(c)n(hannel)g(but)f(ha)n(v)n(e)g
(not)g(y)n(et)g(b)r(een)h(p)r(opp)r(ed.)2040 3110 y(That)18
b(is,)h(the)e(bu\013er)f(size)i(needed)f(for)h(a)f(con\014guration)h
(\()p Fu(h)p Fj(p)p Fr(\()p Fj(t)3813 3118 y Fk(1)3847
3110 y Fr(\))p Fj(;)13 b(n)p Fr(\()p Fj(t)4015 3118 y
Fk(1)4049 3110 y Fr(\))p Fu(i)p Fj(;)2040 3207 y(:)g(:)g(:)g(;)22
b Fu(h)p Fj(p)p Fr(\()p Fj(t)2312 3216 y Fi(k)2349 3207
y Fr(\))p Fj(;)13 b(n)p Fr(\()p Fj(t)2517 3216 y Fi(k)2555
3207 y Fr(\))p Fu(i)p Fr(\))21 b(is)2739 3151 y Fg(P)2820
3172 y Fi(k)2820 3230 y(i)p Fk(=0)2936 3207 y Fj(n)p
Fr(\()p Fj(t)3040 3215 y Fi(i)3067 3207 y Fr(\))8 b Fu(\000)g
Fj(p)p Fr(\()p Fj(t)3270 3215 y Fi(i)3296 3207 y Fr(\).)33
b(If)21 b(w)n(e)h(wish)g(to)f(b)r(ound)2040 3294 y(the)e(n)n(um)n(b)r
(er)f(of)i(liv)n(e)g(items)f(to)h(MAXITEMS,)g(then,)g(w)n(e)h(need)e
(only)2040 3382 y(add)25 b(one)h(condition)g(to)g(the)f(transition)i
(rule:)2704 3499 y Ff(n)p Fe(\()p Ff(I)2800 3507 y Fh(A)2848
3499 y Fe(\))15 b Fd(\000)g Ff(p)p Fe(\()p Ff(I)3045
3507 y Fh(A)3093 3499 y Fe(\))j Fd(\025)h Ff(peek)3339
3507 y Fh(A)3388 3499 y Fe(;)2380 3565 y(\()p Ff(:)11
b(:)g(:)g(;)g Fd(h)p Ff(p)p Fe(\()p Ff(I)2646 3573 y
Fh(A)2694 3565 y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(I)2847
3573 y Fh(A)2895 3565 y Fe(\))p Fd(i)p Ff(;)f(:)h(:)h(:)f(;)g
Fd(h)p Ff(p)p Fe(\()p Ff(O)3240 3573 y Fh(A)3287 3565
y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(O)3461 3573 y Fh(A)3509
3565 y Fe(\))p Fd(i)p Ff(;)g(:)g(:)g(:)g Fe(\);)2077
3631 y Fd(P)5 b Fe(\(\()p Ff(:)11 b(:)g(:)g(;)g Fd(h)p
Ff(p)p Fe(\()p Ff(I)2421 3639 y Fh(A)2469 3631 y Fe(\))k(+)g
Ff(pop)2677 3639 y Fh(A)2725 3631 y Ff(;)c(n)p Fe(\()p
Ff(I)2852 3639 y Fh(A)2899 3631 y Fe(\))p Fd(i)p Ff(;)g(:)g(:)g(:)g(;)g
Fd(h)p Ff(p)p Fe(\()p Ff(O)3244 3639 y Fh(A)3292 3631
y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(O)3466 3639 y Fh(A)3514
3631 y Fe(\))k(+)g Ff(push)3764 3639 y Fh(A)3812 3631
y Fd(i)p Ff(;)c(:)g(:)g(:)g Fe(\)\);)2517 3662 y Fc(P)2587
3680 y Fh(k)2587 3724 y(i)p Fb(=0)2695 3705 y Ff(n)p
Fe(\()p Ff(t)2787 3713 y Fh(i)2814 3705 y Fe(\))k Fd(\000)g
Ff(p)p Fe(\()p Ff(t)3007 3713 y Fh(i)3033 3705 y Fe(\))k
Fd(\024)g Ff(M)6 b(AX)f(I)g(T)k(E)s(M)d(S)s Fe(;)p 2040
3728 V 2139 3775 a(\()p Ff(:)11 b(:)g(:)g(;)g Fd(h)p
Ff(p)p Fe(\()p Ff(I)2405 3783 y Fh(A)2453 3775 y Fe(\))k(+)g
Ff(pop)2661 3783 y Fh(A)2708 3775 y Ff(;)c(n)p Fe(\()p
Ff(I)2835 3783 y Fh(A)2883 3775 y Fe(\))p Fd(i)p Ff(;)g(:)g(:)g(:)g(;)g
Fd(h)p Ff(p)p Fe(\()p Ff(O)3228 3783 y Fh(A)3275 3775
y Fe(\))p Ff(;)g(n)p Fe(\()p Ff(O)3449 3783 y Fh(A)3497
3775 y Fe(\))k(+)g Ff(push)3747 3783 y Fh(A)3795 3775
y Fd(i)p Ff(;)c(:)g(:)g(:)g Fe(\))2040 3979 y Fs(4.3)99
b(Pr)n(ogram)25 b(V)-10 b(eri\002cation)2040 4070 y Fr(A)29
b(n)n(um)n(b)r(er)f(of)i(program)g(analysis)h(tec)n(hniques)d(are)j
(also)g(enabled)2040 4157 y(b)n(y)j(the)g Fj(min)h Fr(and)f
Fj(max)g Fr(functions)h(that)f(w)n(e)i(ha)n(v)n(e)e(de\014ned.)60
b(In)2040 4244 y(particular,)34 b(it)d(is)h(v)n(ery)e(simple)h(to)g
(compute)f(1\))h(whether)g(or)h(not)2040 4332 y(the)37
b(program)g(will)i(deadlo)r(c)n(k)f(as)g(a)g(result)f(of)i(a)e(starv)n
(ed)g(input)2040 4419 y(c)n(hannel,)23 b(and)f(2\))h(whether)f(or)h
(not)f(an)n(y)g(bu\013er)f(will)j(gro)n(w)f(without)2040
4506 y(b)r(ound)i(during)g(the)h(steady-state)f(execution)h(of)g(the)f
(program.)2040 4680 y Fq(Deadlo)r(c)n(k)39 b(detection.)60
b Fr(The)35 b(deadlo)r(c)n(k)f(detection)g(algorithm)2040
4767 y(tak)n(es)21 b(adv)l(an)n(tage)f(of)h(the)f(fact)i(that)e(the)g
(only)g(lo)r(ops)i(in)e(our)h(stream)2040 4855 y(graph)c(are)h(part)f
(of)h(a)g(F)-6 b(eedbac)n(kLo)r(op)17 b(construct.)32
b(A)17 b(stream)f(graph)2040 4942 y(will)26 b(b)r(e)f(deadlo)r(c)n
(k-free)h(if)f(and)g(only)g(if)g(there)g(is)g(no)g(net)g(c)n(hange)g
(of)2040 5029 y(output)d(rate)i(in)f(the)f(feedbac)n(k)h(lo)r(op.)35
b(This)24 b(can)f(b)r(e)g(form)n(ulated)g(in)2040 5116
y(terms)28 b(of)h(the)f Fj(max)f Fr(function)h(b)n(y)g(requiring)g
(that)g(the)g(w)n(a)n(v)n(efron)n(t)2040 5203 y(from)d(the)g(output)g
(of)h(the)f(feedbac)n(k)g(joiner)h Fj(F)11 b(J)33 b Fr(un)n(to)24
b(itself)j(is)f(the)2040 5290 y(iden)n(tit)n(y)31 b(function.)52
b(Ho)n(w)n(ev)n(er,)33 b(since)g(w)n(e)f(w)n(ere)g(careful)h(to)e(lea)n
(v)n(e)2040 5378 y(the)21 b Fj(max)f Fr(function)h(unde\014ned)f(o)n(v)
n(er)h(cycles)g(in)g(the)g(stream)g(graph,)1902 5627
y(10)p eop
%%Page: 11 11
11 10 bop -115 626 a @beginspecial 179 @llx 93 @lly 448
@urx 202 @ury 2304 @rwi @setspecial
%%BeginDocument: fir-block.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725005706)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 179 93 448 202
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

179 93 moveto
448 93 lineto
448 202 lineto
179 202 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font AFNJKN+TimesNewRoman,Bold
11 dict begin
/FontName /AFNJKN+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/asterisk 359 RD 
c3f8880df725f88c15868f7f97789f08789e7795778b087c8b7f86818108
8282867f8b7e088b7d917f978108967e9b879e8b08908b998c9e8d08958a
938c948b08bf89057d7d808183850883867d8377800879807c8184810884
7f87808b7e088b7f908095820894819787988b089a8b9791969608969593
a08fa9088d9b8f998f94088c969398969c089679917f8e82088f838e7d8e
78088d6d9477968008967e9886998b08988b9790949508949390978b9908
8b99889585930882957d9678950878947d9383910885917f967d9b08a38c
9d8c978b08968b938b938b089a89978b928b089e8b9b9097960897969197
8b99088b98869681940882967f8f7d8b08768b78807675087d7b7f808385
0883877e847984088d9d8d9b8e95088d93929a959e08959f909b8b98088b
9c869981960880947f917d8b087e8b7f85808008827f857e8b7c088b8090
7b9676089677927b8e81088c838e7c8c780879937e928391088a07090e ND 
/plus 42 RD 
9ff8ce0d8af7be15f77f06fb7c07ca06f77c07f77f06cb07fb7f06f77e07
4c06fb7e07fb7f064b07090e ND 
/hyphen 21 RD 
a3f7e10df7b1f7ac15fbb1062607f7b106f007090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AFNJKN+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 42 /asterisk put
dup 43 /plus put
dup 45 /hyphen put
pop
%%EndResource
[/N19/AFNJKN+TimesNewRoman,Bold 1 TZ
%%BeginResource: font AFNJAO+TimesNewRoman
11 dict begin
/FontName /AFNJAO+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
/x 215 RD 
98f8880df842049f8b9b8798820899819d75a36808dffb0f052efb11056e
6476737f8208828381887f89087a07f726069c077c8c808f849108849187
938b93088b8f969ea0a908d3ea05cd2b059f6d96788b83088b8488858586
08828480887c8b088c7a05f767069c07788c7c907f9308809277a370b308
fb03f73605c7dc05a8b0a0a39b9608979399909b8c089d07fb2a06790797
89948a91860890858e858b84088b837f76736b0867580569be0586978592
8790087f9d85968b93088b948e909090089090948d988b088d9d05fb6706
8c7905090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AFNJAO+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 90 /Z put
dup 104 /h put
dup 120 /x put
pop
%%EndResource
[/N57/AFNJAO+TimesNewRoman 1 TZ
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
%%BeginResource: font AFNKKJ+Symbol
ct_CffDict begin
15 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/version (001.008) def
/FullName (Symbol) def
/FamilyName (Symbol) def
/BaseFontName (Symbol) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /AFNKKJ+Symbol def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for def
/PaintType 0 def
/FontType 1 def
/FontMatrix [.001 0 0 .001 0 0 ] def
/FontBBox { -180 -293 1090 1010 } def
/StrokeWidth 0 def
currentdict end
systemdict begin
dup /Private 26 dict dup begin
/-|{string currentfile exch readhexstring pop}executeonly def
/|-{def}executeonly def
/|{put}executeonly def
/BlueValues [ -19 0 673 688 487 500 ] def
/StdHW [ 92 ] def
/StdVW [ 85 ] def
/BlueScale 0.039625 def
/BlueShift 7 def
/BlueFuzz 1 def
/ForceBold false  def
/ForceBoldThreshold 0 def
/LanguageGroup 0 def
/ExpansionFactor 0.06 def
/initialRandomSeed 0 def
/lenIV 4 def
/MinFeature {16 16} def
/password 5839 def
/Erode{
10.625 dup 3 -1 roll 0.1 mul exch 0.5 sub mul cvi sub dup mul
85 0 dtransform dup mul exch dup mul add
le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def
/OtherSubrs [
{ct_CffDict/F0Subr get exec}executeonly{ct_CffDict/F1Subr get exec}executeonly{ct_CffDict/F2Subr get exec}executeonly{ct_CffDict/HSSubr get exec}executeonly] |-
/Subrs 5  array
dup 0 15 -| 68CCB9B7733DBF957B5C4F6827AC8A |
dup 1 9 -| 68CCB9B776ADDED836 |
dup 2 9 -| 68CCB9B776AC088F04 |
dup 3 5 -| 68CCB9B7F6 |
dup 4 13 -| 68CCB9B7733AC657EC3EB6EC2F |
|-
2 index /CharStrings 2 dict dup begin
/.notdef 9 -| 68CCB9B776D66C9B0D |-
/Sigma 79 -| 68CCB9B776D9A99B0F8C60A68012A0A703930D5247235EC1DA15F553ED2E1603BB5117C3
356658DE18D203E430B8A0BA56669FAEB5FE960B1985ACE2EA7704EC2927F0EA
322988B9EA36EDE904983C |-
end
end
put
put
dup/FontName get exch definefont pop
end
/AFNKKJ+Symbol findfont /Encoding get
dup 0 /.notdef put
pop
end
/AFNKKJ+Symbol findfont /Encoding get
dup 0 /.notdef put
dup 83 /Sigma put
pop
%%EndResource
[ 1 /Sigma
/N20/AFNKKJ+Symbol -1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
179 93 269 109 re W n
[ 0 -1 1 0 86 381 ] concat
/N45 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N66 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N45 /ColorSpace findRes cs
0 0 0 scn
/N66 /ExtGState findRes gs
1 i
189.401 246.28101 0.48 0.24001 rf
189.401 210.28101 0.48 -0.24001 rf
189.401 210.28101 0.48 36 rf
1 1 1 scn
180.64101 261.041 18 -18 rf
0 0 0 scn
180.401 261.28101 0.48 -18.24001 rf
180.64101 261.28101 18.24001 -0.48 rf
198.401 261.041 0.48 -18.24001 rf
180.401 243.28101 18.24001 -0.48 rf
BT
/N57 1 Tf
0 8.3813 -6.48 0 191.6806 246.28059 Tm
0 Tc
0 Tw
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
189.28101 210.28101 0.48 0.24001 rf
189.28101 174.28101 0.48 -0.24001 rf
189.28101 174.28101 0.48 36 rf
1 1 1 scn
180.521 225.041 18 -18 rf
0 0 0 scn
180.28101 225.28101 0.48 -18.24001 rf
180.521 225.28101 18.24001 -0.48 rf
198.28101 225.041 0.48 -18.24001 rf
180.28101 207.28101 18.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 210.28059 Tm
0 Tc
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
189.28101 270.041 0.48 0.24001 rf
189.28101 261.041 0.48 -0.24001 rf
189.28101 261.041 0.48 9 rf
216.521 269.80099 0.24001 0.48 rf
189.28101 270.28101 0.24001 -0.48 rf
189.521 269.80099 27 0.48 rf
235.36099 233.80099 0.24001 0.48 rf
189.401 234.28101 0.24001 -0.48 rf
189.64101 233.80099 45.72 0.48 rf
243.521 197.80099 0.24001 0.48 rf
189.28101 198.28101 0.24001 -0.48 rf
189.521 197.80099 54 0.48 rf
261.521 161.80099 0.24001 0.48 rf
189.28101 162.28101 0.24001 -0.48 rf
189.521 161.80099 72 0.48 rf
189.28101 174.28101 0.48 0.24001 rf
189.28101 138.28101 0.48 -0.24001 rf
189.28101 138.28101 0.48 36 rf
1 1 1 scn
180.521 189.041 18 -18 rf
0 0 0 scn
180.28101 189.28101 0.48 -18.24001 rf
180.521 189.28101 18.24001 -0.48 rf
198.28101 189.041 0.48 -18.24001 rf
180.28101 171.28101 18.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 174.28059 Tm
0 Tc
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
189.28101 138.28101 0.48 0.24001 rf
189.28101 102.28101 0.48 -0.24001 rf
189.28101 102.28101 0.48 36 rf
1 1 1 scn
180.521 153.041 18 -18 rf
0 0 0 scn
180.28101 153.28101 0.48 -18.24001 rf
180.521 153.28101 18.24001 -0.48 rf
198.28101 153.041 0.48 -18.24001 rf
180.28101 135.28101 18.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 138.28059 Tm
0 Tc
(Z)Tj 
0.58701 0.8148 TD
-0.00369 Tc
(-1)Tj 
ET
1 1 1 scn
214.241 270.041 m
214.481 268.241 l
214.961 266.561 l
215.80099 265.00101 l
216.881 263.681 l
218.201 262.601 l
219.761 261.761 l
221.44099 261.161 l
223.241 261.041 l
225.041 261.161 l
226.841 261.761 l
228.28101 262.601 l
229.601 263.681 l
230.80099 265.00101 l
231.521 266.561 l
232.121 268.241 l
232.241 270.041 l
232.121 271.841 l
231.521 273.521 l
230.80099 275.08099 l
229.601 276.401 l
228.28101 277.481 l
226.841 278.321 l
225.041 278.80099 l
223.241 279.041 l
221.44099 278.80099 l
219.761 278.321 l
218.201 277.481 l
216.881 276.401 l
215.80099 275.08099 l
214.961 273.521 l
214.481 271.841 l
214.241 270.041 l
f* 
0 0 0 scn
214.481 270.161 m
214.72099 268.36099 l
215.201 266.681 l
216.041 265.121 l
216.041 265.241 l
217.121 263.92101 l
218.44099 262.841 l
218.321 262.841 l
219.881 262.00101 l
221.561 261.401 l
221.44099 261.401 l
223.241 261.28101 l
225.041 261.401 l
226.841 262.00101 l
226.72099 262.00101 l
228.161 262.841 l
229.481 263.92101 l
230.681 265.241 l
230.561 265.121 l
231.28101 266.681 l
231.881 268.36099 l
231.881 268.241 l
232.00101 270.041 l
231.881 271.841 l
231.28101 273.521 l
231.28101 273.401 l
230.561 274.961 l
230.681 274.961 l
229.481 276.28101 l
228.161 277.36099 l
226.72099 278.201 l
226.841 278.08099 l
225.041 278.561 l
223.241 278.80099 l
223.36099 278.80099 l
221.561 278.561 l
219.881 278.08099 l
218.321 277.241 l
218.44099 277.36099 l
217.121 276.28101 l
216.041 274.961 l
215.201 273.401 l
215.201 273.521 l
214.72099 271.841 l
214.481 270.041 l
214.00101 270.161 l
214.241 271.961 l
214.72099 273.64101 l
215.561 275.201 l
215.681 275.321 l
216.761 276.64101 l
218.08099 277.72099 l
219.64101 278.561 l
219.761 278.561 l
221.44099 279.041 l
223.241 279.28101 l
223.36099 279.28101 l
225.161 279.041 l
226.961 278.561 l
228.401 277.72099 l
228.521 277.72099 l
229.841 276.64101 l
231.041 275.321 l
231.041 275.201 l
231.761 273.64101 l
232.36099 271.961 l
232.36099 271.841 l
232.481 270.041 l
232.36099 268.241 l
231.761 266.561 l
231.761 266.44099 l
231.041 264.881 l
229.841 263.561 l
228.521 262.481 l
228.401 262.481 l
226.961 261.64101 l
226.961 261.521 l
225.161 260.92101 l
225.041 260.92101 l
223.241 260.80099 l
221.44099 260.92101 l
219.761 261.521 l
219.64101 261.521 l
218.08099 262.36099 l
218.08099 262.481 l
216.761 263.561 l
215.681 264.881 l
215.561 264.881 l
214.72099 266.44099 l
214.72099 266.561 l
214.241 268.241 l
214.00101 270.041 l
f 
214.481 270.041 m
214.481 270.161 l
214.00101 270.041 l
214.00101 270.161 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 228.28059 266.6806 Tm
0 Tc
(*)Tj 
ET
1 1 1 scn
227.80099 234.041 m
227.92101 232.241 l
228.521 230.561 l
229.36099 229.00101 l
230.44099 227.681 l
231.761 226.601 l
233.321 225.761 l
235.00101 225.161 l
236.80099 225.041 l
238.601 225.161 l
240.28101 225.761 l
241.841 226.601 l
243.161 227.681 l
244.241 229.00101 l
245.08099 230.561 l
245.561 232.241 l
245.80099 234.041 l
245.561 235.841 l
245.08099 237.521 l
244.241 239.08099 l
243.161 240.401 l
241.841 241.481 l
240.28101 242.321 l
238.601 242.80099 l
236.80099 243.041 l
235.00101 242.80099 l
233.321 242.321 l
231.761 241.481 l
230.44099 240.401 l
229.36099 239.08099 l
228.521 237.521 l
227.92101 235.841 l
227.80099 234.041 l
f* 
0 0 0 scn
228.041 234.041 m
228.161 232.241 l
228.161 232.36099 l
228.761 230.681 l
229.601 229.121 l
229.601 229.241 l
230.681 227.92101 l
232.00101 226.841 l
231.881 226.841 l
233.44099 226.00101 l
235.121 225.401 l
235.00101 225.401 l
236.80099 225.28101 l
238.601 225.401 l
240.28101 226.00101 l
240.161 226.00101 l
241.72099 226.841 l
243.041 227.92101 l
244.121 229.241 l
244.00101 229.121 l
244.841 230.681 l
245.321 232.36099 l
245.561 234.161 l
245.561 234.041 l
245.321 235.841 l
244.841 237.521 l
244.841 237.401 l
244.00101 238.961 l
244.121 238.961 l
243.041 240.28101 l
241.72099 241.36099 l
241.72099 241.241 l
240.161 242.08099 l
240.28101 242.08099 l
238.601 242.561 l
236.80099 242.80099 l
236.92101 242.80099 l
235.121 242.561 l
233.44099 242.08099 l
231.881 241.241 l
232.00101 241.36099 l
230.681 240.28101 l
229.601 238.961 l
228.761 237.401 l
228.761 237.521 l
228.161 235.841 l
228.041 234.041 l
227.561 234.041 l
227.681 235.841 l
227.681 235.961 l
228.28101 237.64101 l
229.121 239.201 l
229.241 239.321 l
230.321 240.64101 l
231.64101 241.72099 l
233.201 242.561 l
233.321 242.561 l
235.00101 243.041 l
236.80099 243.28101 l
236.92101 243.28101 l
238.72099 243.041 l
240.401 242.561 l
241.961 241.72099 l
242.08099 241.72099 l
243.401 240.64101 l
244.481 239.321 l
244.481 239.201 l
245.321 237.64101 l
245.80099 235.961 l
246.041 234.161 l
246.041 234.041 l
245.80099 232.241 l
245.321 230.561 l
245.321 230.44099 l
244.481 228.881 l
243.401 227.561 l
242.08099 226.481 l
241.961 226.36099 l
240.401 225.521 l
238.72099 224.92101 l
238.601 224.92101 l
236.80099 224.80099 l
235.00101 224.92101 l
233.321 225.521 l
233.201 225.521 l
231.64101 226.36099 l
231.64101 226.481 l
230.321 227.561 l
229.241 228.881 l
229.121 228.881 l
228.28101 230.44099 l
228.28101 230.561 l
227.681 232.241 l
227.561 234.041 l
f 
228.041 234.041 m
227.561 234.041 l
f 
BT
0 14.39999 -14.39999 0 242.6806 230.6806 Tm
(*)Tj 
ET
1 1 1 scn
240.521 198.041 m
240.761 196.241 l
241.241 194.561 l
242.08099 193.00101 l
243.161 191.681 l
244.481 190.601 l
246.041 189.761 l
247.72099 189.161 l
249.521 189.041 l
251.321 189.161 l
253.00101 189.761 l
254.561 190.601 l
255.881 191.681 l
256.961 193.00101 l
257.80099 194.561 l
258.401 196.241 l
258.521 198.041 l
258.401 199.841 l
257.80099 201.521 l
256.961 203.08099 l
255.881 204.401 l
254.561 205.481 l
253.00101 206.321 l
251.321 206.80099 l
249.521 207.041 l
247.72099 206.80099 l
246.041 206.321 l
244.481 205.481 l
243.161 204.401 l
242.08099 203.08099 l
241.241 201.521 l
240.761 199.841 l
240.521 198.041 l
f* 
0 0 0 scn
240.761 198.161 m
241.00101 196.36099 l
241.481 194.681 l
242.321 193.121 l
242.321 193.241 l
243.401 191.92101 l
244.72099 190.841 l
244.601 190.841 l
246.161 190.00101 l
247.841 189.401 l
247.72099 189.401 l
249.521 189.28101 l
251.321 189.401 l
253.00101 190.00101 l
252.881 190.00101 l
254.44099 190.841 l
255.761 191.92101 l
256.841 193.241 l
256.72099 193.121 l
257.561 194.681 l
258.161 196.36099 l
258.161 196.241 l
258.28101 198.041 l
258.161 199.841 l
257.561 201.521 l
257.561 201.401 l
256.72099 202.961 l
256.841 202.961 l
255.761 204.28101 l
254.44099 205.36099 l
254.44099 205.241 l
252.881 206.08099 l
253.00101 206.08099 l
251.321 206.561 l
249.521 206.80099 l
249.64101 206.80099 l
247.841 206.561 l
246.161 206.08099 l
244.601 205.241 l
244.72099 205.36099 l
243.401 204.28101 l
242.321 202.961 l
241.481 201.401 l
241.481 201.521 l
241.00101 199.841 l
240.761 198.041 l
240.28101 198.161 l
240.521 199.961 l
241.00101 201.64101 l
241.841 203.201 l
241.961 203.321 l
243.041 204.64101 l
244.36099 205.72099 l
245.92101 206.561 l
246.041 206.561 l
247.72099 207.041 l
249.521 207.28101 l
249.64101 207.28101 l
251.44099 207.041 l
253.121 206.561 l
254.681 205.72099 l
254.80099 205.72099 l
256.121 204.64101 l
257.201 203.321 l
257.201 203.201 l
258.041 201.64101 l
258.64101 199.961 l
258.64101 199.841 l
258.761 198.041 l
258.64101 196.241 l
258.041 194.561 l
258.041 194.44099 l
257.201 192.881 l
256.121 191.561 l
254.80099 190.481 l
254.681 190.36099 l
253.121 189.521 l
251.44099 188.92101 l
251.321 188.92101 l
249.521 188.80099 l
247.72099 188.92101 l
246.041 189.521 l
245.92101 189.521 l
244.36099 190.36099 l
244.36099 190.481 l
243.041 191.561 l
241.961 192.881 l
241.841 192.881 l
241.00101 194.44099 l
241.00101 194.561 l
240.521 196.241 l
240.28101 198.041 l
f 
240.761 198.041 m
240.761 198.161 l
240.28101 198.041 l
240.28101 198.161 l
f 
BT
0 14.39999 -14.39999 0 254.56059 194.6806 Tm
(*)Tj 
ET
1 1 1 scn
253.961 162.041 m
254.201 160.241 l
254.681 158.561 l
255.521 157.00101 l
256.601 155.681 l
257.92101 154.601 l
259.481 153.761 l
261.161 153.161 l
262.961 153.041 l
264.761 153.161 l
266.44099 153.761 l
268.00101 154.601 l
269.321 155.681 l
270.401 157.00101 l
271.241 158.561 l
271.841 160.241 l
271.961 162.041 l
271.841 163.841 l
271.241 165.521 l
270.401 167.08099 l
269.321 168.401 l
268.00101 169.481 l
266.44099 170.321 l
264.761 170.80099 l
262.961 171.041 l
261.161 170.80099 l
259.481 170.321 l
257.92101 169.481 l
256.601 168.401 l
255.521 167.08099 l
254.681 165.521 l
254.201 163.841 l
253.961 162.041 l
f* 
0 0 0 scn
254.201 162.161 m
254.44099 160.36099 l
254.92101 158.681 l
255.761 157.121 l
255.761 157.241 l
256.841 155.92101 l
258.161 154.841 l
258.041 154.841 l
259.601 154.00101 l
261.28101 153.401 l
261.161 153.401 l
262.961 153.28101 l
264.761 153.401 l
266.44099 154.00101 l
266.321 154.00101 l
267.881 154.841 l
269.201 155.92101 l
270.28101 157.241 l
270.161 157.121 l
271.00101 158.681 l
271.601 160.36099 l
271.601 160.241 l
271.72099 162.041 l
271.601 163.841 l
271.00101 165.521 l
271.00101 165.401 l
270.161 166.961 l
270.28101 166.961 l
269.201 168.28101 l
267.881 169.36099 l
267.881 169.241 l
266.321 170.08099 l
266.44099 170.08099 l
264.761 170.561 l
262.961 170.80099 l
263.08099 170.80099 l
261.28101 170.561 l
259.601 170.08099 l
258.041 169.241 l
258.161 169.36099 l
256.841 168.28101 l
255.761 166.961 l
254.92101 165.401 l
254.92101 165.521 l
254.44099 163.841 l
254.201 162.041 l
253.72099 162.161 l
253.961 163.961 l
254.44099 165.64101 l
255.28101 167.201 l
255.401 167.321 l
256.481 168.64101 l
257.80099 169.72099 l
259.36099 170.561 l
259.481 170.561 l
261.161 171.041 l
262.961 171.28101 l
263.08099 171.28101 l
264.881 171.041 l
266.561 170.561 l
268.121 169.72099 l
268.241 169.72099 l
269.561 168.64101 l
270.64101 167.321 l
270.64101 167.201 l
271.481 165.64101 l
272.08099 163.961 l
272.08099 163.841 l
272.201 162.041 l
272.08099 160.241 l
271.481 158.561 l
271.481 158.44099 l
270.64101 156.881 l
269.561 155.561 l
268.241 154.481 l
268.121 154.36099 l
266.561 153.521 l
264.881 152.92101 l
264.761 152.92101 l
262.961 152.80099 l
261.161 152.92101 l
259.481 153.521 l
259.36099 153.521 l
257.80099 154.36099 l
257.80099 154.481 l
256.481 155.561 l
255.401 156.881 l
255.28101 156.881 l
254.44099 158.44099 l
254.44099 158.561 l
253.961 160.241 l
253.72099 162.041 l
f 
254.201 162.041 m
254.201 162.161 l
253.72099 162.041 l
253.72099 162.161 l
f 
BT
0 14.39999 -14.39999 0 268.0006 158.6806 Tm
(*)Tj 
ET
270.521 125.80099 0.24001 0.48 rf
189.28101 126.28101 0.24001 -0.48 rf
189.521 125.80099 81 0.48 rf
1 1 1 scn
266.321 126.041 m
266.561 124.241 l
267.041 122.561 l
267.881 121.00101 l
268.961 119.681 l
270.28101 118.601 l
271.841 117.761 l
273.521 117.161 l
275.321 117.041 l
277.121 117.161 l
278.80099 117.761 l
280.36099 118.601 l
281.681 119.681 l
282.761 121.00101 l
283.601 122.561 l
284.201 124.241 l
284.321 126.041 l
284.201 127.841 l
283.601 129.521 l
282.761 131.08099 l
281.681 132.401 l
280.36099 133.481 l
278.80099 134.321 l
277.121 134.80099 l
275.321 135.041 l
273.521 134.80099 l
271.841 134.321 l
270.28101 133.481 l
268.961 132.401 l
267.881 131.08099 l
267.041 129.521 l
266.561 127.841 l
266.321 126.041 l
f* 
0 0 0 scn
266.561 126.161 m
266.80099 124.36099 l
267.28101 122.681 l
268.121 121.121 l
268.121 121.241 l
269.201 119.92101 l
270.521 118.841 l
270.401 118.841 l
271.961 118.00101 l
273.64101 117.401 l
273.521 117.401 l
275.321 117.28101 l
277.121 117.401 l
278.80099 118.00101 l
278.681 118.00101 l
280.241 118.841 l
281.561 119.92101 l
282.64101 121.241 l
282.521 121.121 l
283.36099 122.681 l
283.961 124.36099 l
283.961 124.241 l
284.08099 126.041 l
283.961 127.841 l
283.36099 129.521 l
283.36099 129.401 l
282.521 130.961 l
282.64101 130.961 l
281.561 132.28101 l
280.241 133.36099 l
280.241 133.241 l
278.681 134.08099 l
278.80099 134.08099 l
277.121 134.561 l
275.321 134.80099 l
275.44099 134.80099 l
273.64101 134.561 l
271.961 134.08099 l
270.401 133.241 l
270.521 133.36099 l
269.201 132.28101 l
268.121 130.961 l
267.28101 129.401 l
267.28101 129.521 l
266.80099 127.841 l
266.561 126.041 l
266.08099 126.161 l
266.321 127.961 l
266.80099 129.64101 l
267.64101 131.201 l
267.761 131.321 l
268.841 132.64101 l
270.161 133.72099 l
271.72099 134.561 l
271.841 134.561 l
273.521 135.041 l
275.321 135.28101 l
275.44099 135.28101 l
277.241 135.041 l
278.92101 134.561 l
280.481 133.72099 l
280.601 133.72099 l
281.92101 132.64101 l
283.00101 131.321 l
283.00101 131.201 l
283.841 129.64101 l
284.44099 127.961 l
284.44099 127.841 l
284.561 126.041 l
284.44099 124.241 l
283.841 122.561 l
283.841 122.44099 l
283.00101 120.881 l
281.92101 119.561 l
280.601 118.481 l
280.481 118.36099 l
278.92101 117.521 l
277.241 116.92101 l
277.121 116.92101 l
275.321 116.80099 l
273.521 116.92101 l
271.841 117.521 l
271.72099 117.521 l
270.161 118.36099 l
270.161 118.481 l
268.841 119.561 l
267.761 120.881 l
267.64101 120.881 l
266.80099 122.44099 l
266.80099 122.561 l
266.321 124.241 l
266.08099 126.041 l
f 
266.561 126.041 m
266.561 126.161 l
266.08099 126.041 l
266.08099 126.161 l
f 
BT
0 14.39999 -14.39999 0 280.3606 122.56059 Tm
(*)Tj 
ET
223.00101 278.80099 0.48 0.24001 rf
223.00101 297.28101 0.48 -0.24001 rf
223.00101 279.041 0.48 18 rf
236.561 242.80099 0.48 0.24001 rf
236.561 297.28101 0.48 -0.24001 rf
236.561 243.041 0.48 54 rf
249.28101 206.80099 0.48 0.24001 rf
249.28101 361.00101 0.48 -0.24001 rf
249.28101 207.041 0.48 153.72 rf
262.72099 170.80099 0.48 0.24001 rf
262.72099 297.28101 0.48 -0.24001 rf
262.72099 171.041 0.48 126 rf
275.08099 134.80099 0.48 0.24001 rf
275.08099 297.28101 0.48 -0.24001 rf
275.08099 135.041 0.48 162 rf
223.00101 261.041 0.48 0.24001 rf
223.00101 252.041 0.48 -0.24001 rf
223.00101 252.041 0.48 9 rf
BT
/N57 1 Tf
0 9.96001 -9.96001 0 221.3206 243.0406 Tm
(h)Tj 
0 7.92 -7.92 0 223.84061 248.0806 Tm
(5)Tj 
ET
236.561 224.681 0.48 0.24001 rf
236.561 215.681 0.48 -0.24001 rf
236.561 215.681 0.48 9 rf
BT
0 9.96001 -9.96001 0 234.7606 206.6806 Tm
(h)Tj 
0 7.92 -7.92 0 237.28059 211.6006 Tm
(4)Tj 
ET
249.64101 189.041 0.48 0.24001 rf
249.64101 180.041 0.48 -0.24001 rf
249.64101 180.041 0.48 9 rf
BT
0 9.96001 -9.96001 0 247.9606 171.0406 Tm
(h)Tj 
0 7.92 -7.92 0 250.48061 176.0806 Tm
(3)Tj 
ET
262.841 152.681 0.48 0.24001 rf
262.841 143.681 0.48 -0.24001 rf
262.841 143.681 0.48 9 rf
BT
0 9.96001 -9.96001 0 261.0406 134.6806 Tm
(h)Tj 
0 7.92 -7.92 0 263.56059 139.6006 Tm
(2)Tj 
ET
275.561 116.681 0.48 0.24001 rf
275.561 107.681 0.48 -0.24001 rf
275.561 107.681 0.48 9 rf
BT
0 9.96001 -9.96001 0 273.7606 98.6806 Tm
(h)Tj 
0 7.92 -7.92 0 276.28059 103.6006 Tm
(1)Tj 
ET
236.561 297.161 m
236.561 296.92101 l
237.041 296.80099 l
237.041 297.041 l
f 
244.481 324.881 m
244.481 325.121 l
244.961 325.00101 l
244.961 324.761 l
f 
236.561 297.161 m
237.041 297.041 l
244.961 324.761 l
244.481 324.881 l
f 
223.121 297.161 m
223.00101 297.041 l
223.36099 296.80099 l
223.481 296.92101 l
f 
243.401 329.44099 m
243.521 329.561 l
243.881 329.321 l
243.761 329.201 l
f 
223.121 297.161 m
223.481 296.92101 l
243.761 329.201 l
243.401 329.44099 l
f 
262.72099 297.041 m
262.72099 296.80099 l
263.201 296.92101 l
263.201 297.161 l
f 
253.241 324.761 m
253.241 325.00101 l
253.72099 325.121 l
253.72099 324.881 l
f 
262.72099 297.041 m
263.201 297.161 l
253.72099 324.881 l
253.241 324.761 l
f 
275.201 296.92101 m
275.321 296.80099 l
275.681 297.041 l
275.561 297.161 l
f 
256.481 327.521 m
256.36099 327.64101 l
256.72099 327.881 l
256.841 327.761 l
f 
275.201 296.92101 m
275.561 297.161 l
256.841 327.761 l
256.481 327.521 l
f 
1 1 1 scn
240.161 332.681 m
240.401 330.881 l
240.881 329.201 l
241.72099 327.64101 l
242.80099 326.321 l
244.121 325.241 l
245.681 324.401 l
247.36099 323.80099 l
249.161 323.681 l
250.961 323.80099 l
252.64101 324.401 l
254.201 325.241 l
255.521 326.321 l
256.601 327.64101 l
257.44099 329.201 l
257.92101 330.881 l
258.161 332.681 l
257.92101 334.481 l
257.44099 336.161 l
256.601 337.72099 l
255.521 339.041 l
254.201 340.121 l
252.64101 340.961 l
250.961 341.44099 l
249.161 341.681 l
247.36099 341.44099 l
245.681 340.961 l
244.121 340.121 l
242.80099 339.041 l
241.72099 337.72099 l
240.881 336.161 l
240.401 334.481 l
240.161 332.681 l
f* 
0 0 0 scn
240.401 332.80099 m
240.64101 331.00101 l
241.121 329.321 l
241.961 327.761 l
241.961 327.881 l
243.041 326.561 l
244.36099 325.481 l
244.241 325.481 l
245.80099 324.64101 l
247.481 324.041 l
247.36099 324.041 l
249.161 323.92101 l
250.961 324.041 l
252.64101 324.64101 l
252.521 324.64101 l
254.08099 325.481 l
255.401 326.561 l
256.481 327.881 l
256.36099 327.761 l
257.201 329.321 l
257.681 331.00101 l
257.92101 332.80099 l
257.92101 332.681 l
257.681 334.481 l
257.201 336.161 l
257.201 336.041 l
256.36099 337.601 l
256.481 337.601 l
255.401 338.92101 l
254.08099 340.00101 l
254.08099 339.881 l
252.521 340.72099 l
252.64101 340.72099 l
250.961 341.201 l
249.161 341.44099 l
249.28101 341.44099 l
247.481 341.201 l
245.80099 340.72099 l
244.241 339.881 l
244.36099 340.00101 l
243.041 338.92101 l
241.961 337.601 l
241.121 336.041 l
241.121 336.161 l
240.64101 334.481 l
240.401 332.681 l
239.92101 332.80099 l
240.161 334.601 l
240.64101 336.28101 l
241.481 337.841 l
241.601 337.961 l
242.681 339.28101 l
244.00101 340.36099 l
245.561 341.201 l
245.681 341.201 l
247.36099 341.681 l
249.161 341.92101 l
249.28101 341.92101 l
251.08099 341.681 l
252.761 341.201 l
254.321 340.36099 l
254.44099 340.36099 l
255.761 339.28101 l
256.841 337.961 l
256.841 337.841 l
257.681 336.28101 l
258.161 334.601 l
258.401 332.80099 l
258.401 332.681 l
258.161 330.881 l
257.681 329.201 l
257.681 329.08099 l
256.841 327.521 l
255.761 326.201 l
254.44099 325.121 l
254.321 325.00101 l
252.761 324.161 l
251.08099 323.561 l
250.961 323.561 l
249.161 323.44099 l
247.36099 323.561 l
245.681 324.161 l
245.561 324.161 l
244.00101 325.00101 l
244.00101 325.121 l
242.681 326.201 l
241.601 327.521 l
241.481 327.521 l
240.64101 329.08099 l
240.64101 329.201 l
240.161 330.881 l
239.92101 332.681 l
f 
240.401 332.681 m
240.401 332.80099 l
239.92101 332.681 l
239.92101 332.80099 l
f 
BT
/N20 1 Tf
0 9 -9 0 251.8006 330.0406 Tm
(\001)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -151 801 a Fq(Figure)30 b(13:)39 b(A)29
b(blo)r(c)n(k)h(diagram)h(of)f(a)f(\014v)n(e)f(tap)i(FIR)g(\014lter.)
-152 1048 y Fr(w)n(e)f(de\014ne)f(a)h(new)g(function)f
Fj(maxl)q(oop)g Fr(that)g(maps)g(a)g(giv)n(en)h(feed-)-152
1135 y(bac)n(k)d(joiner)g(to)g(the)f(information)h(w)n(a)n(v)n(efron)n
(t)g(around)g(the)f(lo)r(op:)-54 1273 y Fj(maxl)q(oop)236
1281 y Fi(F)8 b(J)d Fw(!)p Fi(F)j(J)471 1273 y Fr(\()p
Fj(x)p Fr(\))20 b Fu(\021)h Fj(max)829 1281 y Fi(I)t
Fk(2)890 1292 y Fh(F)937 1281 y Fi(J)5 b Fw(!)p Fi(O)1084
1292 y Fh(F)1131 1281 y Fi(J)1191 1273 y Fu(\016)17 b
Fj(max)1399 1281 y Fi(O)1446 1292 y Fh(F)1492 1281 y
Fi(J)5 b Fw(!)p Fi(I)t Fk(2)1653 1292 y Fh(F)1700 1281
y Fi(J)-152 1411 y Fr(The)31 b(order)f(of)h(comp)r(osition)f(is)h(as)g
(in)f(Equation)g(1)g(for)h(the)f(com-)-152 1498 y(p)r(osition)i(of)f
(pip)r(elines.)50 b(Also,)33 b(for)f(the)e(purp)r(oses)h(of)g
(calculating)-152 1585 y Fj(maxl)q(oop)138 1593 y Fi(F)8
b(J)d Fw(!)p Fi(F)j(J)373 1585 y Fr(,)25 b(one)g(m)n(ust)e(assume)i
(that)f(there)g(are)i(an)e(in\014nite)-152 1672 y(n)n(um)n(b)r(er)32
b(of)i(items)f(on)g(tap)r(e)g Fj(I)6 b Fr(1)816 1680
y Fi(F)i(J)906 1672 y Fr(;)37 b(that)c(is,)j(the)d(join)h(from)f(the)
-152 1759 y(feedbac)n(k)26 b(lo)r(op)g(is)h(not)e(limited)h(b)n(y)e
(the)h(external)h(data)g(source.)-152 1934 y(Finally)-6
b(,)30 b(w)n(e)f(can)f(state)h(the)f(constrain)n(t)h(that)f(the)h
(feedbac)n(k)f(lo)r(op)-152 2021 y(m)n(ust)f(resp)r(ect.)41
b(F)-6 b(or)28 b(a)h(lo)r(op)f(with)h(declared)f(latency)g
Fj(\025)p Fr(,)g(the)g(lo)r(op)-152 2108 y(will)f(neither)f(o)n(v)n
(er\015o)n(w)g(nor)f(deadlo)r(c)n(k)h(if:)388 2246 y
Fj(maxl)q(oop)678 2254 y Fi(F)8 b(J)d Fw(!)p Fi(F)j(J)913
2246 y Fr(\()p Fj(x)p Fr(\))21 b(=)g Fj(x)16 b Fr(+)h
Fj(\025)-152 2383 y Fr(If)30 b Fj(maxl)q(oop)219 2391
y Fi(F)8 b(J)d Fw(!)p Fi(F)j(J)453 2383 y Fr(\()p Fj(x)p
Fr(\))29 b(is)h(less)g(than)f Fj(x)19 b Fr(+)h Fj(\025)p
Fr(,)30 b(then)f(there)g(will)i(b)r(e)-152 2471 y(deadlo)r(c)n(k)26
b(in)g(the)f(program.)-152 2645 y Fq(Ov)n(er\015o)n(w)36
b(detection.)52 b Fr(There)32 b(are)g(t)n(w)n(o)g(places)g(that)g(a)g
(bu\013er)-152 2732 y(can)26 b(o)n(v)n(er\015o)n(w)f(in)g(the)g(stream)
g(graph.)35 b(The)25 b(\014rst)g(is)h(in)f(a)h(feedbac)n(k)-152
2819 y(lo)r(op,)40 b(when)c Fj(maxl)q(oop)552 2827 y
Fi(F)8 b(J)d Fw(!)p Fi(F)j(J)787 2819 y Fr(\()p Fj(x)p
Fr(\))35 b(\(calculated)i(ab)r(o)n(v)n(e\))f(is)g(more)-152
2906 y(than)24 b Fj(x)13 b Fr(+)h Fj(\025)p Fr(.)34 b(The)24
b(second)h(case)g(is)f(when)g(the)g(parallel)i(streams)e(of)-152
2994 y(a)h(split/join)g(ha)n(v)n(e)f(di\013eren)n(t)f(pro)r(duction)h
(rates.)35 b(F)-6 b(or)24 b(a)g(splitter)h Fj(S)-152
3081 y Fr(and)d(a)f(joiner)i Fj(J)7 b Fr(,)23 b(the)e(pro)r(duction)h
(rates)g(will)h(cause)f(an)f(o)n(v)n(er\015o)n(w)h(if)-152
3168 y(and)27 b(only)f(if)h Fj(max)392 3176 y Fi(O)r
Fk(1)471 3187 y Fh(S)511 3176 y Fw(!)p Fi(I)t Fk(1)633
3187 y Fh(J)678 3168 y Fr(\()p Fj(x)p Fr(\))17 b Fu(\000)h
Fj(max)1030 3176 y Fi(O)r Fk(2)1109 3187 y Fh(S)1149
3176 y Fw(!)p Fi(I)t Fk(2)1271 3187 y Fh(J)1316 3168
y Fr(\()p Fj(x)p Fr(\))25 b(is)i(not)g Fj(O)r Fr(\(1\).)-152
3255 y(This)34 b(di\013erence)g(could)f(b)r(e)g(analyzed)h(b)n(y)e(a)i
(compiler)f(for)i(ev)n(ery)-152 3342 y(SplitJoin)29 b(in)f(the)g
(stream)g(graph)g(to)h(v)n(erify)f(that)f(no)i(bu\013ers)e(will)-152
3429 y(o)n(v)n(er\015o)n(w)f(during)g(steady-state)f(execution.)-152
3630 y Fs(5.)100 b(DET)-9 b(AILED)26 b(EXAMPLE)-152 3721
y Fr(This)36 b(section)f(describ)r(es)h(the)e(T)-6 b(runk)n(ed)33
b(Radio)i(example)f(imple-)-152 3808 y(men)n(tation)d(in)g(Figure)g
(17.)52 b(The)31 b(trunk)n(ed)f(radio)h(is)h(a)g(frequency)-152
3896 y(hopping)h(system.)57 b(The)34 b(transition)g(times)f(b)r(et)n(w)
n(een)h(the)f(preset)-152 3983 y(frequencies)38 b(is)g(indicated)f(to)g
(the)g(receiv)n(er)h(b)n(y)e(transmitting)g(a)-152 4070
y(preset)f(tone.)62 b(Our)35 b(radio)g(also)i(has)e(an)g(FIR)f
(\014lter)h(to)g(increase)-152 4157 y(the)26 b(gain)g(of)h(a)f(w)n(eak)
g(signal.)37 b(Ho)n(w)n(ev)n(er,)26 b(in)g(order)g(to)g(sa)n(v)n(e)g(p)
r(o)n(w)n(er,)-152 4244 y(this)h(\014lter)g(is)g(activ)l(ated)f(only)h
(when)f(the)h(signal)g(to)g(noise)h(ratio)f(is)-152 4332
y(lo)n(w.)41 b(This)29 b(implemen)n(tation)d(relies)j(on)e
(transforming)h(the)f(signal)-152 4419 y(in)n(to)h(the)f(frequency)g
(domain)g(for)h(pro)r(cessing)h(using)e(a)h(FFT.)h(F)-6
b(or)-152 4506 y(brevit)n(y)g(,)26 b(w)n(e)h(ha)n(v)n(e)f(not)h(sho)n
(wn)g(the)f(RF)h(pro)r(cessing)h(in)f(the)f(fron)n(t-)-152
4593 y(end)e(and)f(the)h(audio)g(pro)r(cessing)h(in)f(the)g(bac)n
(k-end.)32 b(The)25 b(co)r(de)f(for)-152 4680 y(the)e(trunk)n(ed)e
(radio)i(demonstrates)g(man)n(y)e(features)i(of)h(StreaMIT.)-152
4855 y(The)30 b(high-lev)n(el)f(structure)g(of)h(the)f(radio,)j
(graphically)e(sho)n(wn)g(in)-152 4942 y(Figure)k(1,)h(is)e(implemen)n
(ted)e(in)i(the)f(class)i Ft(TrunkedRadio)p Fr(.)59 b(The)-152
5029 y(radio)29 b(has)f(sev)n(en)f(stages,)j(where)e(the)g(\014rst)f
(three)h(stages)h(op)r(erate)-152 5116 y(in)c(the)f(time)g(domain,)h
(the)f(last)i(three)e(stages)i(op)r(erate)g(in)e(the)h(fre-)-152
5203 y(quency)d(domain,)i(and)f(there)h(is)g(a)g(con)n(v)n(ersion)f
(phase)h(in)g(b)r(et)n(w)n(een.)-152 5290 y(A)n(t)j(this)h(high)g(lev)n
(el,)h(the)f(structure)g(of)g(the)g(system)f(is)h(a)g(pip)r(eline)-152
5378 y(of)k(either)f(six)g(or)g(sev)n(en)g(stream)f(stages.)52
b(The)31 b(di\013erence)g(is)g(due)2076 786 y @beginspecial
59 @llx 44 @lly 628 @urx 322 @ury 2304 @rwi @setspecial
%%BeginDocument: fft-block.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725005706)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 59 44 628 322
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

59 44 moveto
628 44 lineto
628 322 lineto
59 322 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font AFNJKN+TimesNewRoman,Bold
11 dict begin
/FontName /AFNJKN+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/asterisk 359 RD 
c3f8880df725f88c15868f7f97789f08789e7795778b087c8b7f86818108
8282867f8b7e088b7d917f978108967e9b879e8b08908b998c9e8d08958a
938c948b08bf89057d7d808183850883867d8377800879807c8184810884
7f87808b7e088b7f908095820894819787988b089a8b9791969608969593
a08fa9088d9b8f998f94088c969398969c089679917f8e82088f838e7d8e
78088d6d9477968008967e9886998b08988b9790949508949390978b9908
8b99889585930882957d9678950878947d9383910885917f967d9b08a38c
9d8c978b08968b938b938b089a89978b928b089e8b9b9097960897969197
8b99088b98869681940882967f8f7d8b08768b78807675087d7b7f808385
0883877e847984088d9d8d9b8e95088d93929a959e08959f909b8b98088b
9c869981960880947f917d8b087e8b7f85808008827f857e8b7c088b8090
7b9676089677927b8e81088c838e7c8c780879937e928391088a07090e ND 
/plus 42 RD 
9ff8ce0d8af7be15f77f06fb7c07ca06f77c07f77f06cb07fb7f06f77e07
4c06fb7e07fb7f064b07090e ND 
/hyphen 21 RD 
a3f7e10df7b1f7ac15fbb1062607f7b106f007090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AFNJKN+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 42 /asterisk put
dup 43 /plus put
dup 45 /hyphen put
pop
%%EndResource
[/N19/AFNJKN+TimesNewRoman,Bold 1 TZ
%%BeginResource: font AFNION+Arial
11 dict begin
/FontName /AFNION+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AFNION+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N54/AFNION+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
59 44 569 278 re W n
[ 0 -1 1 0 15 381 ] concat
/N45 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N66 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N45 /ColorSpace findRes cs
0 0 0 scn
/N66 /ExtGState findRes gs
1 i
216.041 512.80099 m
216.28101 512.80099 l
216.401 513.28101 l
216.161 513.28101 l
f 
72.041 566.80099 m
71.80099 566.80099 l
71.92101 567.28101 l
72.161 567.28101 l
f 
216.041 512.80099 m
216.161 513.28101 l
72.161 567.28101 l
72.041 566.80099 l
f 
288.401 512.92101 m
288.64101 512.92101 l
288.761 513.401 l
288.521 513.401 l
f 
144.041 566.80099 m
143.80099 566.80099 l
143.92101 567.28101 l
144.161 567.28101 l
f 
288.401 512.92101 m
288.521 513.401 l
144.161 567.28101 l
144.041 566.80099 l
f 
251.681 513.041 m
251.92101 513.041 l
252.041 513.521 l
251.80099 513.521 l
f 
107.561 566.80099 m
107.321 566.80099 l
107.44099 567.28101 l
107.681 567.28101 l
f 
251.681 513.041 m
251.80099 513.521 l
107.681 567.28101 l
107.561 566.80099 l
f 
0.90199 0.90199 0.90199 scn
60.161 440.80099 276 -139.56 rf
60.041 154.481 276 -74.52 rf
0 0 0 scn
179.92101 368.92101 m
180.041 368.80099 l
180.28101 369.161 l
180.161 369.28101 l
f 
107.44099 422.80099 m
107.321 422.92101 l
107.561 423.28101 l
107.681 423.161 l
f 
179.92101 368.92101 m
180.161 369.28101 l
107.681 423.161 l
107.44099 422.80099 l
f 
180.041 513.28101 m
179.80099 513.28101 l
179.92101 512.80099 l
180.161 512.80099 l
f 
324.041 567.28101 m
324.28101 567.28101 l
324.401 566.80099 l
324.161 566.80099 l
f 
180.041 513.28101 m
180.161 512.80099 l
324.161 566.80099 l
324.041 567.28101 l
f 
324.521 512.80099 m
324.761 512.80099 l
324.881 513.28101 l
324.64101 513.28101 l
f 
179.561 566.80099 m
179.321 566.80099 l
179.44099 567.28101 l
179.681 567.28101 l
f 
324.521 512.80099 m
324.64101 513.28101 l
179.681 567.28101 l
179.561 566.80099 l
f 
324.401 368.92101 m
324.521 368.80099 l
324.761 369.161 l
324.64101 369.28101 l
f 
251.44099 422.80099 m
251.321 422.92101 l
251.561 423.28101 l
251.681 423.161 l
f 
324.401 368.92101 m
324.64101 369.28101 l
251.681 423.161 l
251.44099 422.80099 l
f 
179.80099 71.80099 0.48 0.24001 rf
179.80099 72.041 m
179.80099 90.28101 l
179.92101 90.28101 l
180.28101 90.041 l
180.28101 72.041 l
f 
179.92101 90.28101 m
288.401 139.00101 l
288.761 138.761 l
288.761 138.521 l
288.64101 138.521 l
180.161 89.80099 l
f 
287.80099 612.28101 0.48 -0.24001 rf
288.28101 138.761 m
288.761 138.761 l
288.28101 612.041 l
287.80099 612.041 l
f 
71.80099 71.80099 0.48 0.24001 rf
71.80099 612.28101 0.48 -0.24001 rf
71.80099 72.041 0.48 540 rf
107.80099 612.041 0.48 0.24001 rf
108.28101 612.041 m
108.28101 138.521 l
107.92101 138.28101 l
107.80099 138.28101 l
107.80099 612.041 l
f 
108.161 138.761 m
216.161 88.841 l
216.28101 88.841 l
216.28101 88.601 l
215.92101 88.36099 l
107.92101 138.28101 l
f 
215.80099 72.041 0.48 -0.24001 rf
215.80099 72.041 0.48 16.56 rf
143.80099 71.80099 0.48 0.24001 rf
143.80099 612.28101 0.48 -0.24001 rf
143.80099 72.041 0.48 540 rf
287.80099 71.80099 0.48 0.24001 rf
287.80099 72.041 m
287.80099 90.521 l
288.161 90.761 l
288.28101 90.761 l
288.28101 72.041 l
f 
287.92101 90.28101 m
179.92101 138.521 l
179.80099 138.521 l
179.80099 138.761 l
180.161 139.00101 l
288.161 90.761 l
f 
179.80099 612.28101 0.48 -0.24001 rf
179.80099 138.761 0.48 473.28 rf
251.80099 71.80099 0.48 0.24001 rf
251.80099 612.28101 0.48 -0.24001 rf
251.80099 72.041 0.48 540 rf
323.80099 612.041 0.48 0.24001 rf
323.80099 72.041 0.48 -0.24001 rf
323.80099 72.041 0.48 540 rf
BT
/N54 1 Tf
0 12 -12 0 72.0406 52.9606 Tm
0 Tc
0 Tw
(a)Tj 
0 9.60001 -9.60001 0 75.0406 59.56059 Tm
(0)Tj 
0 12 -12 0 108.64059 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 111.64059 59.56059 Tm
(1)Tj 
0 12 -12 0 145.12061 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 148.12061 59.56059 Tm
(2)Tj 
0 12 -12 0 181.7206 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 184.7206 59.56059 Tm
(3)Tj 
0 12 -12 0 218.20061 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 221.20061 59.56059 Tm
(4)Tj 
0 12 -12 0 254.8006 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 257.8006 59.56059 Tm
(5)Tj 
0 12 -12 0 291.4006 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 294.4006 59.56059 Tm
(6)Tj 
0 12 -12 0 327.8806 52.9606 Tm
(a)Tj 
0 9.60001 -9.60001 0 330.8806 59.56059 Tm
(7)Tj 
ET
107.80099 71.80099 0.48 0.24001 rf
107.80099 72.041 m
107.80099 88.841 l
107.92101 88.841 l
108.28101 88.601 l
108.28101 72.041 l
f 
107.92101 88.841 m
215.92101 138.761 l
216.28101 138.521 l
216.28101 138.28101 l
216.161 138.28101 l
108.161 88.36099 l
f 
215.80099 612.28101 0.48 -0.24001 rf
215.80099 138.521 0.48 473.52 rf
71.92101 225.161 m
71.80099 225.041 l
72.161 224.80099 l
72.28101 224.92101 l
f 
107.92101 279.161 m
108.041 279.28101 l
108.401 279.041 l
108.28101 278.92101 l
f 
71.92101 225.161 m
72.28101 224.92101 l
108.28101 278.92101 l
107.92101 279.161 l
f 
107.92101 224.92101 m
108.041 224.80099 l
108.401 225.041 l
108.28101 225.161 l
f 
71.92101 278.92101 m
71.80099 279.041 l
72.161 279.28101 l
72.28101 279.161 l
f 
107.92101 224.92101 m
108.28101 225.161 l
72.28101 279.161 l
71.92101 278.92101 l
f 
1 1 1 scn
63.041 279.041 m
63.161 277.241 l
63.761 275.561 l
64.601 274.00101 l
65.681 272.681 l
67.00101 271.601 l
68.561 270.761 l
70.241 270.161 l
72.041 270.041 l
73.841 270.161 l
75.521 270.761 l
77.08099 271.601 l
78.401 272.681 l
79.481 274.00101 l
80.321 275.561 l
80.80099 277.241 l
81.041 279.041 l
80.80099 280.841 l
80.321 282.521 l
79.481 284.08099 l
78.401 285.401 l
77.08099 286.481 l
75.521 287.321 l
73.841 287.80099 l
72.041 288.041 l
70.241 287.80099 l
68.561 287.321 l
67.00101 286.481 l
65.681 285.401 l
64.601 284.08099 l
63.761 282.521 l
63.161 280.841 l
63.041 279.041 l
f* 
0 0 0 scn
63.28101 279.041 m
63.401 277.241 l
63.401 277.36099 l
64.00101 275.681 l
64.841 274.121 l
64.841 274.241 l
65.92101 272.92101 l
67.241 271.841 l
67.121 271.841 l
68.681 271.00101 l
70.36099 270.401 l
70.241 270.401 l
72.041 270.28101 l
73.841 270.401 l
75.521 271.00101 l
75.401 271.00101 l
76.961 271.841 l
78.28101 272.92101 l
79.36099 274.241 l
79.241 274.121 l
80.08099 275.681 l
80.561 277.36099 l
80.80099 279.161 l
80.80099 279.041 l
80.561 280.841 l
80.08099 282.521 l
80.08099 282.401 l
79.241 283.961 l
79.36099 283.961 l
78.28101 285.28101 l
76.961 286.36099 l
76.961 286.241 l
75.401 287.08099 l
75.521 287.08099 l
73.841 287.561 l
72.041 287.80099 l
72.161 287.80099 l
70.36099 287.561 l
68.681 287.08099 l
67.121 286.241 l
67.241 286.36099 l
65.92101 285.28101 l
64.841 283.961 l
64.00101 282.401 l
64.00101 282.521 l
63.401 280.841 l
63.28101 279.041 l
62.80099 279.041 l
62.92101 280.841 l
62.92101 280.961 l
63.521 282.64101 l
64.36099 284.201 l
64.481 284.321 l
65.561 285.64101 l
66.881 286.72099 l
68.44099 287.561 l
68.561 287.561 l
70.241 288.041 l
72.041 288.28101 l
72.161 288.28101 l
73.961 288.041 l
75.64101 287.561 l
77.201 286.72099 l
77.321 286.72099 l
78.64101 285.64101 l
79.72099 284.321 l
79.72099 284.201 l
80.561 282.64101 l
81.041 280.961 l
81.28101 279.161 l
81.28101 279.041 l
81.041 277.241 l
80.561 275.561 l
80.561 275.44099 l
79.72099 273.881 l
78.64101 272.561 l
77.321 271.481 l
77.201 271.36099 l
75.64101 270.521 l
73.961 269.92101 l
73.841 269.92101 l
72.041 269.80099 l
70.241 269.92101 l
68.561 270.521 l
68.44099 270.521 l
66.881 271.36099 l
66.881 271.481 l
65.561 272.561 l
64.481 273.881 l
64.36099 273.881 l
63.521 275.44099 l
63.521 275.561 l
62.92101 277.241 l
62.80099 279.041 l
f 
63.28101 279.041 m
62.80099 279.041 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 77.0806 275.0806 Tm
(+)Tj 
ET
1 1 1 scn
98.561 278.92101 m
98.80099 277.121 l
99.28101 275.44099 l
100.121 274.00101 l
101.201 272.561 l
102.521 271.481 l
104.08099 270.64101 l
105.761 270.161 l
107.561 269.92101 l
109.36099 270.161 l
111.041 270.64101 l
112.601 271.481 l
113.92101 272.561 l
115.00101 274.00101 l
115.841 275.44099 l
116.44099 277.121 l
116.561 278.92101 l
116.44099 280.841 l
115.841 282.521 l
115.00101 283.961 l
113.92101 285.28101 l
112.601 286.481 l
111.041 287.321 l
109.36099 287.80099 l
107.561 287.92101 l
105.761 287.80099 l
104.08099 287.321 l
102.521 286.481 l
101.201 285.28101 l
100.121 283.961 l
99.28101 282.521 l
98.80099 280.841 l
98.561 278.92101 l
f* 
0 0 0 scn
98.80099 279.041 m
99.041 277.241 l
99.521 275.561 l
100.36099 274.121 l
101.44099 272.681 l
101.44099 272.80099 l
102.761 271.72099 l
102.64101 271.72099 l
104.201 270.881 l
105.881 270.401 l
107.681 270.161 l
107.561 270.161 l
109.36099 270.401 l
111.041 270.881 l
110.92101 270.881 l
112.481 271.72099 l
113.80099 272.80099 l
113.80099 272.681 l
114.881 274.121 l
115.72099 275.561 l
115.601 275.561 l
116.201 277.241 l
116.201 277.121 l
116.321 278.92101 l
116.201 280.841 l
115.601 282.521 l
115.72099 282.401 l
114.881 283.841 l
113.80099 285.161 l
112.481 286.36099 l
112.481 286.241 l
110.92101 287.08099 l
111.041 287.08099 l
109.36099 287.561 l
107.561 287.681 l
105.761 287.561 l
105.881 287.561 l
104.201 287.08099 l
102.64101 286.241 l
102.761 286.36099 l
101.44099 285.161 l
100.36099 283.841 l
99.521 282.401 l
99.521 282.521 l
99.041 280.841 l
98.80099 278.92101 l
98.321 278.92101 l
98.561 280.841 l
98.561 280.961 l
99.041 282.64101 l
99.161 282.64101 l
100.00101 284.08099 l
100.00101 284.201 l
101.08099 285.521 l
102.401 286.72099 l
103.961 287.561 l
104.08099 287.561 l
105.761 288.041 l
107.561 288.161 l
109.36099 288.041 l
109.481 288.041 l
111.161 287.561 l
112.72099 286.72099 l
112.841 286.72099 l
114.161 285.521 l
115.241 284.201 l
115.241 284.08099 l
116.08099 282.64101 l
116.681 280.961 l
116.681 280.841 l
116.80099 278.92101 l
116.681 277.121 l
116.08099 275.44099 l
116.08099 275.321 l
115.241 273.881 l
114.161 272.44099 l
112.841 271.36099 l
112.72099 271.241 l
111.161 270.401 l
109.481 269.92101 l
107.681 269.681 l
107.561 269.681 l
105.761 269.92101 l
104.08099 270.401 l
103.961 270.401 l
102.401 271.241 l
102.401 271.36099 l
101.08099 272.44099 l
100.00101 273.881 l
99.161 275.321 l
99.041 275.44099 l
98.561 277.121 l
98.321 278.92101 l
f 
98.80099 278.92101 m
98.80099 279.041 l
98.321 278.92101 l
f 
BT
0 14.39999 -14.39999 0 111.5206 277.0006 Tm
(-)Tj 
ET
1 1 1 scn
171.041 198.401 m
171.161 196.481 l
171.761 194.80099 l
172.601 193.36099 l
173.681 192.041 l
175.00101 190.841 l
176.561 190.00101 l
178.241 189.521 l
180.041 189.401 l
181.841 189.521 l
183.521 190.00101 l
185.08099 190.841 l
186.401 192.041 l
187.481 193.36099 l
188.321 194.80099 l
188.80099 196.481 l
189.041 198.401 l
188.80099 200.201 l
188.321 201.881 l
187.481 203.44099 l
186.401 204.761 l
185.08099 205.841 l
183.521 206.681 l
181.841 207.161 l
180.041 207.401 l
178.241 207.161 l
176.561 206.681 l
175.00101 205.841 l
173.681 204.761 l
172.601 203.44099 l
171.761 201.881 l
171.161 200.201 l
171.041 198.401 l
f* 
0 0 0 scn
171.28101 198.401 m
171.401 196.481 l
171.401 196.601 l
172.00101 194.92101 l
172.841 193.481 l
172.841 193.601 l
173.92101 192.28101 l
175.241 191.08099 l
175.121 191.08099 l
176.681 190.241 l
178.36099 189.761 l
178.241 189.761 l
180.041 189.64101 l
181.841 189.761 l
183.521 190.241 l
183.401 190.241 l
184.961 191.08099 l
186.28101 192.28101 l
187.36099 193.601 l
187.36099 193.481 l
188.201 194.92101 l
188.08099 194.92101 l
188.561 196.601 l
188.561 196.481 l
188.80099 198.401 l
188.561 200.201 l
188.08099 201.881 l
188.08099 201.761 l
187.241 203.321 l
187.36099 203.321 l
186.28101 204.64101 l
184.961 205.72099 l
184.961 205.601 l
183.401 206.44099 l
183.521 206.44099 l
181.841 206.92101 l
180.041 207.161 l
180.161 207.161 l
178.36099 206.92101 l
176.681 206.44099 l
175.121 205.601 l
175.241 205.72099 l
173.92101 204.64101 l
172.841 203.321 l
172.00101 201.761 l
172.00101 201.881 l
171.401 200.201 l
171.28101 198.401 l
170.80099 198.401 l
170.92101 200.201 l
170.92101 200.321 l
171.521 202.00101 l
172.36099 203.561 l
172.481 203.681 l
173.561 205.00101 l
174.881 206.08099 l
176.44099 206.92101 l
176.561 206.92101 l
178.241 207.401 l
180.041 207.64101 l
180.161 207.64101 l
181.961 207.401 l
183.64101 206.92101 l
185.201 206.08099 l
185.321 206.08099 l
186.64101 205.00101 l
187.72099 203.681 l
187.72099 203.561 l
188.561 202.00101 l
189.041 200.321 l
189.28101 198.521 l
189.28101 198.401 l
189.041 196.481 l
188.561 194.80099 l
188.561 194.681 l
187.72099 193.241 l
186.64101 191.92101 l
185.321 190.72099 l
185.201 190.601 l
183.64101 189.761 l
181.961 189.28101 l
181.841 189.28101 l
180.041 189.161 l
178.241 189.28101 l
176.561 189.761 l
176.44099 189.761 l
174.881 190.601 l
174.881 190.72099 l
173.561 191.92101 l
172.481 193.241 l
171.64101 194.681 l
171.521 194.80099 l
170.92101 196.481 l
170.80099 198.401 l
f 
171.28101 198.401 m
170.80099 198.401 l
f 
BT
0 14.39999 -14.39999 0 185.0806 194.92059 Tm
(*)Tj 
ET
171.28101 198.041 0.24001 0.48 rf
162.401 198.521 8.88 -0.48 rf
162.401 177.881 0.48 -0.24001 rf
162.401 177.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 162.8806 162.1606 Tm
(w)Tj 
0 6.36 -6.36 0 165.4006 169.6006 Tm
(1)Tj 
0.283 0.94341 TD
(1)Tj 
ET
1 1 1 scn
243.041 198.401 m
243.28101 196.481 l
243.761 194.80099 l
244.601 193.36099 l
245.681 192.041 l
247.00101 190.841 l
248.561 190.00101 l
250.241 189.521 l
252.041 189.401 l
253.841 189.521 l
255.521 190.00101 l
257.08099 190.841 l
258.401 192.041 l
259.481 193.36099 l
260.321 194.80099 l
260.80099 196.481 l
261.041 198.401 l
260.80099 200.201 l
260.321 201.881 l
259.481 203.44099 l
258.401 204.761 l
257.08099 205.841 l
255.521 206.681 l
253.841 207.161 l
252.041 207.401 l
250.241 207.161 l
248.561 206.681 l
247.00101 205.841 l
245.681 204.761 l
244.601 203.44099 l
243.761 201.881 l
243.28101 200.201 l
243.041 198.401 l
f* 
0 0 0 scn
243.28101 198.401 m
243.521 196.481 l
243.521 196.601 l
244.00101 194.92101 l
244.841 193.481 l
244.841 193.601 l
245.92101 192.28101 l
247.241 191.08099 l
247.121 191.08099 l
248.681 190.241 l
250.36099 189.761 l
250.241 189.761 l
252.041 189.64101 l
253.841 189.761 l
255.521 190.241 l
255.401 190.241 l
256.961 191.08099 l
258.28101 192.28101 l
259.36099 193.601 l
259.36099 193.481 l
260.201 194.92101 l
260.08099 194.92101 l
260.561 196.601 l
260.561 196.481 l
260.80099 198.401 l
260.561 200.201 l
260.08099 201.881 l
260.08099 201.761 l
259.241 203.321 l
259.36099 203.321 l
258.28101 204.64101 l
256.961 205.72099 l
256.961 205.601 l
255.401 206.44099 l
255.521 206.44099 l
253.841 206.92101 l
252.041 207.161 l
252.161 207.161 l
250.36099 206.92101 l
248.681 206.44099 l
247.121 205.601 l
247.241 205.72099 l
245.92101 204.64101 l
244.841 203.321 l
244.00101 201.761 l
244.00101 201.881 l
243.521 200.201 l
243.28101 198.401 l
242.80099 198.521 l
243.041 200.321 l
243.521 202.00101 l
244.36099 203.561 l
244.481 203.681 l
245.561 205.00101 l
246.881 206.08099 l
248.44099 206.92101 l
248.561 206.92101 l
250.241 207.401 l
252.041 207.64101 l
252.161 207.64101 l
253.961 207.401 l
255.64101 206.92101 l
257.201 206.08099 l
257.321 206.08099 l
258.64101 205.00101 l
259.72099 203.681 l
259.72099 203.561 l
260.561 202.00101 l
261.041 200.321 l
261.28101 198.521 l
261.28101 198.401 l
261.041 196.481 l
260.561 194.80099 l
260.561 194.681 l
259.72099 193.241 l
258.64101 191.92101 l
257.321 190.72099 l
257.201 190.601 l
255.64101 189.761 l
253.961 189.28101 l
253.841 189.28101 l
252.041 189.161 l
250.241 189.28101 l
248.561 189.761 l
248.44099 189.761 l
246.881 190.601 l
246.881 190.72099 l
245.561 191.92101 l
244.481 193.241 l
243.64101 194.681 l
243.521 194.80099 l
243.041 196.481 l
242.80099 198.401 l
f 
243.28101 198.401 m
242.80099 198.401 l
242.80099 198.521 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 257.0806 194.92059 Tm
(*)Tj 
ET
243.28101 198.041 0.24001 0.48 rf
234.401 198.521 8.88 -0.48 rf
234.401 177.881 0.48 -0.24001 rf
234.401 177.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 234.8806 162.1606 Tm
(w)Tj 
0 6.36 -6.36 0 237.4006 169.6006 Tm
(1)Tj 
0.283 0.94341 TD
(2)Tj 
ET
1 1 1 scn
315.041 198.401 m
315.28101 196.481 l
315.761 194.80099 l
316.601 193.36099 l
317.681 192.041 l
319.00101 190.841 l
320.561 190.00101 l
322.241 189.521 l
324.041 189.401 l
325.841 189.521 l
327.521 190.00101 l
329.08099 190.841 l
330.401 192.041 l
331.481 193.36099 l
332.321 194.80099 l
332.80099 196.481 l
333.041 198.401 l
332.80099 200.201 l
332.321 201.881 l
331.481 203.44099 l
330.401 204.761 l
329.08099 205.841 l
327.521 206.681 l
325.841 207.161 l
324.041 207.401 l
322.241 207.161 l
320.561 206.681 l
319.00101 205.841 l
317.681 204.761 l
316.601 203.44099 l
315.761 201.881 l
315.28101 200.201 l
315.041 198.401 l
f* 
0 0 0 scn
315.28101 198.401 m
315.521 196.481 l
315.521 196.601 l
316.00101 194.92101 l
316.841 193.481 l
316.841 193.601 l
317.92101 192.28101 l
319.241 191.08099 l
319.121 191.08099 l
320.681 190.241 l
322.36099 189.761 l
322.241 189.761 l
324.041 189.64101 l
325.841 189.761 l
327.521 190.241 l
327.401 190.241 l
328.961 191.08099 l
330.28101 192.28101 l
331.36099 193.601 l
331.36099 193.481 l
332.201 194.92101 l
332.08099 194.92101 l
332.561 196.601 l
332.561 196.481 l
332.80099 198.401 l
332.561 200.201 l
332.08099 201.881 l
332.08099 201.761 l
331.241 203.321 l
331.36099 203.321 l
330.28101 204.64101 l
328.961 205.72099 l
328.961 205.601 l
327.401 206.44099 l
327.521 206.44099 l
325.841 206.92101 l
324.041 207.161 l
324.161 207.161 l
322.36099 206.92101 l
320.681 206.44099 l
319.121 205.601 l
319.241 205.72099 l
317.92101 204.64101 l
316.841 203.321 l
316.00101 201.761 l
316.00101 201.881 l
315.521 200.201 l
315.28101 198.401 l
314.80099 198.521 l
315.041 200.321 l
315.521 202.00101 l
316.36099 203.561 l
316.481 203.681 l
317.561 205.00101 l
318.881 206.08099 l
320.44099 206.92101 l
320.561 206.92101 l
322.241 207.401 l
324.041 207.64101 l
324.161 207.64101 l
325.961 207.401 l
327.64101 206.92101 l
329.201 206.08099 l
329.321 206.08099 l
330.64101 205.00101 l
331.72099 203.681 l
331.72099 203.561 l
332.561 202.00101 l
333.041 200.321 l
333.28101 198.521 l
333.28101 198.401 l
333.041 196.481 l
332.561 194.80099 l
332.561 194.681 l
331.72099 193.241 l
330.64101 191.92101 l
329.321 190.72099 l
329.201 190.601 l
327.64101 189.761 l
325.961 189.28101 l
325.841 189.28101 l
324.041 189.161 l
322.241 189.28101 l
320.561 189.761 l
320.44099 189.761 l
318.881 190.601 l
318.881 190.72099 l
317.561 191.92101 l
316.481 193.241 l
315.64101 194.681 l
315.521 194.80099 l
315.041 196.481 l
314.80099 198.401 l
f 
315.28101 198.401 m
314.80099 198.401 l
314.80099 198.521 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 329.0806 194.92059 Tm
(*)Tj 
ET
315.28101 198.041 0.24001 0.48 rf
306.401 198.521 8.88 -0.48 rf
306.401 177.881 0.48 -0.24001 rf
306.401 177.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 306.8806 162.1606 Tm
(w)Tj 
0 6.36 -6.36 0 309.4006 169.6006 Tm
(1)Tj 
0.283 0.94341 TD
(3)Tj 
ET
1 1 1 scn
98.44099 198.161 m
98.561 196.36099 l
99.041 194.681 l
99.881 193.121 l
101.08099 191.80099 l
102.401 190.72099 l
103.841 189.881 l
105.521 189.401 l
107.44099 189.161 l
109.241 189.401 l
110.92101 189.881 l
112.481 190.72099 l
113.80099 191.80099 l
114.881 193.121 l
115.72099 194.681 l
116.201 196.36099 l
116.44099 198.161 l
116.201 199.961 l
115.72099 201.64101 l
114.881 203.201 l
113.80099 204.521 l
112.481 205.601 l
110.92101 206.44099 l
109.241 207.041 l
107.44099 207.161 l
105.521 207.041 l
103.841 206.44099 l
102.401 205.601 l
101.08099 204.521 l
99.881 203.201 l
99.041 201.64101 l
98.561 199.961 l
98.44099 198.161 l
f* 
0 0 0 scn
98.681 198.161 m
98.80099 196.36099 l
98.80099 196.481 l
99.28101 194.80099 l
100.121 193.241 l
100.121 193.36099 l
101.321 192.041 l
102.64101 190.961 l
102.521 190.961 l
103.961 190.121 l
105.64101 189.64101 l
105.521 189.64101 l
107.44099 189.401 l
109.241 189.64101 l
110.92101 190.121 l
110.80099 190.121 l
112.36099 190.961 l
113.681 192.041 l
114.761 193.36099 l
114.64101 193.241 l
115.481 194.80099 l
115.961 196.481 l
116.201 198.28101 l
116.201 198.161 l
115.961 199.961 l
115.481 201.64101 l
115.481 201.521 l
114.64101 203.08099 l
114.761 203.08099 l
113.681 204.401 l
112.36099 205.481 l
112.36099 205.36099 l
110.80099 206.201 l
110.92101 206.201 l
109.241 206.80099 l
107.44099 206.92101 l
105.521 206.80099 l
105.64101 206.80099 l
103.961 206.201 l
103.961 206.321 l
102.521 205.481 l
102.64101 205.481 l
101.321 204.401 l
100.121 203.08099 l
99.28101 201.521 l
99.28101 201.64101 l
98.80099 199.961 l
98.681 198.161 l
98.201 198.161 l
98.321 199.961 l
98.321 200.08099 l
98.80099 201.761 l
99.64101 203.321 l
99.761 203.44099 l
100.961 204.761 l
102.28101 205.841 l
103.72099 206.681 l
103.841 206.681 l
105.521 207.28101 l
107.44099 207.401 l
109.241 207.28101 l
109.36099 207.28101 l
111.041 206.681 l
112.601 205.841 l
112.72099 205.841 l
114.041 204.761 l
115.121 203.44099 l
115.121 203.321 l
115.961 201.761 l
116.44099 200.08099 l
116.681 198.28101 l
116.681 198.161 l
116.44099 196.36099 l
115.961 194.681 l
115.961 194.561 l
115.121 193.00101 l
114.041 191.681 l
112.72099 190.601 l
112.601 190.481 l
111.041 189.64101 l
109.36099 189.161 l
107.561 188.92101 l
107.44099 188.92101 l
105.521 189.161 l
103.841 189.64101 l
103.72099 189.761 l
102.28101 190.601 l
100.961 191.681 l
99.761 193.00101 l
99.64101 193.00101 l
98.80099 194.561 l
98.80099 194.681 l
98.321 196.36099 l
98.201 198.161 l
f 
98.681 198.161 m
98.201 198.161 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 112.48061 194.8006 Tm
(*)Tj 
ET
98.561 197.80099 0.24001 0.48 rf
89.80099 198.28101 8.75999 -0.48 rf
89.80099 177.761 0.48 -0.24001 rf
89.80099 177.761 0.48 20.28 rf
BT
/N54 1 Tf
0 12 -12 0 90.28059 162.0406 Tm
(w)Tj 
0 6.36 -6.36 0 92.8006 169.3606 Tm
(1)Tj 
0.3019 0.94341 TD
(0)Tj 
ET
71.92101 226.841 m
71.321 226.72099 l
70.72099 226.36099 l
70.36099 225.761 l
70.241 225.041 l
70.36099 224.44099 l
70.72099 223.841 l
71.321 223.481 l
71.92101 223.36099 l
72.64101 223.481 l
73.241 223.841 l
73.601 224.44099 l
73.72099 225.041 l
73.601 225.761 l
73.241 226.36099 l
72.64101 226.72099 l
71.92101 226.841 l
f* 
72.041 226.601 m
71.44099 226.481 l
71.44099 226.601 l
70.841 226.241 l
70.961 226.241 l
70.601 225.64101 l
70.601 225.761 l
70.481 225.041 l
70.481 225.161 l
70.601 224.561 l
70.961 223.961 l
70.841 224.08099 l
71.44099 223.72099 l
72.041 223.601 l
71.92101 223.601 l
72.64101 223.72099 l
72.521 223.72099 l
73.121 224.08099 l
73.121 223.961 l
73.481 224.561 l
73.36099 224.561 l
73.481 225.161 l
73.481 225.041 l
73.36099 225.761 l
73.481 225.64101 l
73.121 226.241 l
72.521 226.601 l
72.64101 226.481 l
71.92101 226.601 l
72.041 227.08099 l
72.761 226.961 l
73.36099 226.601 l
73.481 226.481 l
73.841 225.881 l
73.961 225.161 l
73.961 225.041 l
73.841 224.44099 l
73.841 224.321 l
73.481 223.72099 l
73.36099 223.72099 l
72.761 223.36099 l
72.761 223.241 l
72.041 223.121 l
71.92101 223.121 l
71.321 223.241 l
71.201 223.36099 l
70.601 223.72099 l
70.241 224.321 l
70.121 224.44099 l
70.00101 225.041 l
70.00101 225.161 l
70.121 225.881 l
70.241 225.881 l
70.601 226.481 l
70.601 226.601 l
71.201 226.961 l
71.321 226.961 l
71.92101 227.08099 l
f 
71.92101 226.601 m
72.041 226.601 l
71.92101 227.08099 l
72.041 227.08099 l
f 
107.681 226.961 m
107.08099 226.841 l
106.481 226.481 l
106.121 225.881 l
106.00101 225.161 l
106.121 224.561 l
106.481 223.961 l
107.08099 223.601 l
107.681 223.481 l
108.401 223.601 l
109.00101 223.961 l
109.36099 224.561 l
109.481 225.161 l
109.36099 225.881 l
109.00101 226.481 l
108.401 226.841 l
107.681 226.961 l
f* 
107.80099 226.72099 m
107.201 226.601 l
107.201 226.72099 l
106.601 226.36099 l
106.72099 226.36099 l
106.36099 225.761 l
106.36099 225.881 l
106.241 225.161 l
106.241 225.28101 l
106.36099 224.681 l
106.72099 224.08099 l
106.601 224.201 l
107.201 223.841 l
107.80099 223.72099 l
107.681 223.72099 l
108.401 223.841 l
108.28101 223.841 l
108.881 224.201 l
108.881 224.08099 l
109.241 224.681 l
109.121 224.681 l
109.241 225.28101 l
109.241 225.161 l
109.121 225.881 l
109.241 225.761 l
108.881 226.36099 l
108.28101 226.72099 l
108.401 226.601 l
107.681 226.72099 l
107.80099 227.201 l
108.521 227.08099 l
109.121 226.72099 l
109.241 226.601 l
109.601 226.00101 l
109.72099 225.28101 l
109.72099 225.161 l
109.601 224.561 l
109.601 224.44099 l
109.241 223.841 l
109.121 223.841 l
108.521 223.481 l
108.521 223.36099 l
107.80099 223.241 l
107.681 223.241 l
107.08099 223.36099 l
106.961 223.481 l
106.36099 223.841 l
106.00101 224.44099 l
105.881 224.561 l
105.761 225.161 l
105.761 225.28101 l
105.881 226.00101 l
106.00101 226.00101 l
106.36099 226.601 l
106.36099 226.72099 l
106.961 227.08099 l
107.08099 227.08099 l
107.681 227.201 l
f 
107.681 226.72099 m
107.80099 226.72099 l
107.681 227.201 l
107.80099 227.201 l
f 
143.92101 225.161 m
143.80099 225.041 l
144.161 224.80099 l
144.28101 224.92101 l
f 
179.92101 279.161 m
180.041 279.28101 l
180.401 279.041 l
180.28101 278.92101 l
f 
143.92101 225.161 m
144.28101 224.92101 l
180.28101 278.92101 l
179.92101 279.161 l
f 
179.92101 224.92101 m
180.041 224.80099 l
180.401 225.041 l
180.28101 225.161 l
f 
143.92101 278.92101 m
143.80099 279.041 l
144.161 279.28101 l
144.28101 279.161 l
f 
179.92101 224.92101 m
180.28101 225.161 l
144.28101 279.161 l
143.92101 278.92101 l
f 
1 1 1 scn
135.041 279.041 m
135.161 277.241 l
135.761 275.561 l
136.601 274.00101 l
137.681 272.681 l
139.00101 271.601 l
140.561 270.761 l
142.241 270.161 l
144.041 270.041 l
145.841 270.161 l
147.521 270.761 l
149.08099 271.601 l
150.401 272.681 l
151.481 274.00101 l
152.321 275.561 l
152.80099 277.241 l
153.041 279.041 l
152.80099 280.841 l
152.321 282.521 l
151.481 284.08099 l
150.401 285.401 l
149.08099 286.481 l
147.521 287.321 l
145.841 287.80099 l
144.041 288.041 l
142.241 287.80099 l
140.561 287.321 l
139.00101 286.481 l
137.681 285.401 l
136.601 284.08099 l
135.761 282.521 l
135.161 280.841 l
135.041 279.041 l
f* 
0 0 0 scn
135.28101 279.041 m
135.401 277.241 l
135.401 277.36099 l
136.00101 275.681 l
136.841 274.121 l
136.841 274.241 l
137.92101 272.92101 l
139.241 271.841 l
139.121 271.841 l
140.681 271.00101 l
142.36099 270.401 l
142.241 270.401 l
144.041 270.28101 l
145.841 270.401 l
147.521 271.00101 l
147.401 271.00101 l
148.961 271.841 l
150.28101 272.92101 l
151.36099 274.241 l
151.241 274.121 l
152.08099 275.681 l
152.561 277.36099 l
152.80099 279.161 l
152.80099 279.041 l
152.561 280.841 l
152.08099 282.521 l
152.08099 282.401 l
151.241 283.961 l
151.36099 283.961 l
150.28101 285.28101 l
148.961 286.36099 l
148.961 286.241 l
147.401 287.08099 l
147.521 287.08099 l
145.841 287.561 l
144.041 287.80099 l
144.161 287.80099 l
142.36099 287.561 l
140.681 287.08099 l
139.121 286.241 l
139.241 286.36099 l
137.92101 285.28101 l
136.841 283.961 l
136.00101 282.401 l
136.00101 282.521 l
135.401 280.841 l
135.28101 279.041 l
134.80099 279.041 l
134.92101 280.841 l
134.92101 280.961 l
135.521 282.64101 l
136.36099 284.201 l
136.481 284.321 l
137.561 285.64101 l
138.881 286.72099 l
140.44099 287.561 l
140.561 287.561 l
142.241 288.041 l
144.041 288.28101 l
144.161 288.28101 l
145.961 288.041 l
147.64101 287.561 l
149.201 286.72099 l
149.321 286.72099 l
150.64101 285.64101 l
151.72099 284.321 l
151.72099 284.201 l
152.561 282.64101 l
153.041 280.961 l
153.28101 279.161 l
153.28101 279.041 l
153.041 277.241 l
152.561 275.561 l
152.561 275.44099 l
151.72099 273.881 l
150.64101 272.561 l
149.321 271.481 l
149.201 271.36099 l
147.64101 270.521 l
145.961 269.92101 l
145.841 269.92101 l
144.041 269.80099 l
142.241 269.92101 l
140.561 270.521 l
140.44099 270.521 l
138.881 271.36099 l
138.881 271.481 l
137.561 272.561 l
136.481 273.881 l
136.36099 273.881 l
135.521 275.44099 l
135.521 275.561 l
134.92101 277.241 l
134.80099 279.041 l
f 
135.28101 279.041 m
134.80099 279.041 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 149.0806 275.0806 Tm
(+)Tj 
ET
1 1 1 scn
170.561 278.92101 m
170.80099 277.121 l
171.28101 275.44099 l
172.121 274.00101 l
173.201 272.561 l
174.521 271.481 l
176.08099 270.64101 l
177.761 270.161 l
179.561 269.92101 l
181.36099 270.161 l
183.161 270.64101 l
184.601 271.481 l
185.92101 272.561 l
187.121 274.00101 l
187.841 275.44099 l
188.44099 277.121 l
188.561 278.92101 l
188.44099 280.841 l
187.841 282.521 l
187.121 283.961 l
185.92101 285.28101 l
184.601 286.481 l
183.161 287.321 l
181.36099 287.80099 l
179.561 287.92101 l
177.761 287.80099 l
176.08099 287.321 l
174.521 286.481 l
173.201 285.28101 l
172.121 283.961 l
171.28101 282.521 l
170.80099 280.841 l
170.561 278.92101 l
f* 
0 0 0 scn
170.80099 279.041 m
171.041 277.241 l
171.521 275.561 l
172.36099 274.121 l
173.44099 272.681 l
173.44099 272.80099 l
174.761 271.72099 l
174.64101 271.72099 l
176.201 270.881 l
177.881 270.401 l
179.681 270.161 l
179.561 270.161 l
181.36099 270.401 l
183.161 270.881 l
183.041 270.881 l
184.481 271.72099 l
185.80099 272.80099 l
187.00101 274.241 l
186.881 274.121 l
187.601 275.561 l
188.201 277.241 l
188.201 277.121 l
188.321 278.92101 l
188.201 280.841 l
187.601 282.521 l
187.601 282.401 l
186.881 283.841 l
187.00101 283.841 l
185.80099 285.161 l
184.481 286.36099 l
183.041 287.201 l
183.161 287.08099 l
181.36099 287.561 l
179.561 287.681 l
177.761 287.561 l
177.881 287.561 l
176.201 287.08099 l
174.64101 286.241 l
174.761 286.36099 l
173.44099 285.161 l
172.36099 283.841 l
171.521 282.401 l
171.521 282.521 l
171.041 280.841 l
170.80099 278.92101 l
170.321 278.92101 l
170.561 280.841 l
170.561 280.961 l
171.041 282.64101 l
171.161 282.64101 l
172.00101 284.08099 l
172.00101 284.201 l
173.08099 285.521 l
174.401 286.72099 l
175.961 287.561 l
176.08099 287.561 l
177.761 288.041 l
179.561 288.161 l
181.36099 288.041 l
181.481 288.041 l
183.28101 287.561 l
184.72099 286.72099 l
184.841 286.72099 l
186.161 285.521 l
187.36099 284.201 l
187.36099 284.08099 l
188.08099 282.64101 l
188.681 280.961 l
188.681 280.841 l
188.80099 278.92101 l
188.681 277.121 l
188.08099 275.44099 l
188.08099 275.321 l
187.36099 273.881 l
186.161 272.44099 l
184.841 271.36099 l
184.72099 271.36099 l
183.28101 270.521 l
183.28101 270.401 l
181.481 269.92101 l
179.681 269.681 l
179.561 269.681 l
177.761 269.92101 l
176.08099 270.401 l
175.961 270.401 l
174.401 271.241 l
174.401 271.36099 l
173.08099 272.44099 l
172.00101 273.881 l
171.161 275.321 l
171.041 275.44099 l
170.561 277.121 l
170.321 278.92101 l
f 
170.80099 278.92101 m
170.80099 279.041 l
170.321 278.92101 l
f 
BT
0 14.39999 -14.39999 0 183.5206 277.0006 Tm
(-)Tj 
ET
143.92101 226.841 m
143.321 226.72099 l
142.72099 226.36099 l
142.36099 225.761 l
142.241 225.041 l
142.36099 224.44099 l
142.72099 223.841 l
143.321 223.481 l
143.92101 223.36099 l
144.64101 223.481 l
145.241 223.841 l
145.601 224.44099 l
145.72099 225.041 l
145.601 225.761 l
145.241 226.36099 l
144.64101 226.72099 l
143.92101 226.841 l
f* 
144.041 226.601 m
143.44099 226.481 l
143.44099 226.601 l
142.841 226.241 l
142.961 226.241 l
142.601 225.64101 l
142.601 225.761 l
142.481 225.041 l
142.481 225.161 l
142.601 224.561 l
142.961 223.961 l
142.841 224.08099 l
143.44099 223.72099 l
144.041 223.601 l
143.92101 223.601 l
144.64101 223.72099 l
144.521 223.72099 l
145.121 224.08099 l
145.121 223.961 l
145.481 224.561 l
145.36099 224.561 l
145.481 225.161 l
145.481 225.041 l
145.36099 225.761 l
145.481 225.64101 l
145.121 226.241 l
144.521 226.601 l
144.64101 226.481 l
143.92101 226.601 l
144.041 227.08099 l
144.761 226.961 l
145.36099 226.601 l
145.481 226.481 l
145.841 225.881 l
145.961 225.161 l
145.961 225.041 l
145.841 224.44099 l
145.841 224.321 l
145.481 223.72099 l
145.36099 223.72099 l
144.761 223.36099 l
144.761 223.241 l
144.041 223.121 l
143.92101 223.121 l
143.321 223.241 l
143.201 223.36099 l
142.601 223.72099 l
142.241 224.321 l
142.121 224.44099 l
142.00101 225.041 l
142.00101 225.161 l
142.121 225.881 l
142.241 225.881 l
142.601 226.481 l
142.601 226.601 l
143.201 226.961 l
143.321 226.961 l
143.92101 227.08099 l
f 
143.92101 226.601 m
144.041 226.601 l
143.92101 227.08099 l
144.041 227.08099 l
f 
179.681 226.961 m
179.08099 226.841 l
178.481 226.481 l
178.121 225.881 l
178.00101 225.161 l
178.121 224.561 l
178.481 223.961 l
179.08099 223.601 l
179.681 223.481 l
180.401 223.601 l
181.00101 223.961 l
181.36099 224.561 l
181.481 225.161 l
181.36099 225.881 l
181.00101 226.481 l
180.401 226.841 l
179.681 226.961 l
f* 
179.80099 226.72099 m
179.201 226.601 l
179.201 226.72099 l
178.601 226.36099 l
178.72099 226.36099 l
178.36099 225.761 l
178.36099 225.881 l
178.241 225.161 l
178.241 225.28101 l
178.36099 224.681 l
178.72099 224.08099 l
178.601 224.201 l
179.201 223.841 l
179.80099 223.72099 l
179.681 223.72099 l
180.401 223.841 l
180.28101 223.841 l
180.881 224.201 l
180.881 224.08099 l
181.241 224.681 l
181.121 224.681 l
181.241 225.28101 l
181.241 225.161 l
181.121 225.881 l
181.241 225.761 l
180.881 226.36099 l
180.28101 226.72099 l
180.401 226.601 l
179.681 226.72099 l
179.80099 227.201 l
180.521 227.08099 l
181.121 226.72099 l
181.241 226.601 l
181.601 226.00101 l
181.72099 225.28101 l
181.72099 225.161 l
181.601 224.561 l
181.601 224.44099 l
181.241 223.841 l
181.121 223.841 l
180.521 223.481 l
180.521 223.36099 l
179.80099 223.241 l
179.681 223.241 l
179.08099 223.36099 l
178.961 223.481 l
178.36099 223.841 l
178.00101 224.44099 l
177.881 224.561 l
177.761 225.161 l
177.761 225.28101 l
177.881 226.00101 l
178.00101 226.00101 l
178.36099 226.601 l
178.36099 226.72099 l
178.961 227.08099 l
179.08099 227.08099 l
179.681 227.201 l
f 
179.681 226.72099 m
179.80099 226.72099 l
179.681 227.201 l
179.80099 227.201 l
f 
215.92101 225.161 m
215.80099 225.041 l
216.161 224.80099 l
216.28101 224.92101 l
f 
251.92101 279.161 m
252.041 279.28101 l
252.401 279.041 l
252.28101 278.92101 l
f 
215.92101 225.161 m
216.28101 224.92101 l
252.28101 278.92101 l
251.92101 279.161 l
f 
251.92101 224.92101 m
252.041 224.80099 l
252.401 225.041 l
252.28101 225.161 l
f 
215.92101 278.92101 m
215.80099 279.041 l
216.161 279.28101 l
216.28101 279.161 l
f 
251.92101 224.92101 m
252.28101 225.161 l
216.28101 279.161 l
215.92101 278.92101 l
f 
1 1 1 scn
207.041 279.041 m
207.161 277.241 l
207.761 275.561 l
208.601 274.00101 l
209.681 272.681 l
211.00101 271.601 l
212.561 270.761 l
214.241 270.161 l
216.041 270.041 l
217.841 270.161 l
219.521 270.761 l
221.08099 271.601 l
222.401 272.681 l
223.481 274.00101 l
224.321 275.561 l
224.80099 277.241 l
225.041 279.041 l
224.80099 280.841 l
224.321 282.521 l
223.481 284.08099 l
222.401 285.401 l
221.08099 286.481 l
219.521 287.321 l
217.841 287.80099 l
216.041 288.041 l
214.241 287.80099 l
212.561 287.321 l
211.00101 286.481 l
209.681 285.401 l
208.601 284.08099 l
207.761 282.521 l
207.161 280.841 l
207.041 279.041 l
f* 
0 0 0 scn
207.28101 279.041 m
207.401 277.241 l
207.401 277.36099 l
208.00101 275.681 l
208.841 274.121 l
208.841 274.241 l
209.92101 272.92101 l
211.241 271.841 l
211.121 271.841 l
212.681 271.00101 l
214.36099 270.401 l
214.241 270.401 l
216.041 270.28101 l
217.841 270.401 l
219.521 271.00101 l
219.401 271.00101 l
220.961 271.841 l
222.28101 272.92101 l
223.36099 274.241 l
223.241 274.121 l
224.08099 275.681 l
224.561 277.36099 l
224.80099 279.161 l
224.80099 279.041 l
224.561 280.841 l
224.08099 282.521 l
224.08099 282.401 l
223.241 283.961 l
223.36099 283.961 l
222.28101 285.28101 l
220.961 286.36099 l
220.961 286.241 l
219.401 287.08099 l
219.521 287.08099 l
217.841 287.561 l
216.041 287.80099 l
216.161 287.80099 l
214.36099 287.561 l
212.681 287.08099 l
211.121 286.241 l
211.241 286.36099 l
209.92101 285.28101 l
208.841 283.961 l
208.00101 282.401 l
208.00101 282.521 l
207.401 280.841 l
207.28101 279.041 l
206.80099 279.041 l
206.92101 280.841 l
206.92101 280.961 l
207.521 282.64101 l
208.36099 284.201 l
208.481 284.321 l
209.561 285.64101 l
210.881 286.72099 l
212.44099 287.561 l
212.561 287.561 l
214.241 288.041 l
216.041 288.28101 l
216.161 288.28101 l
217.961 288.041 l
219.64101 287.561 l
221.201 286.72099 l
221.321 286.72099 l
222.64101 285.64101 l
223.72099 284.321 l
223.72099 284.201 l
224.561 282.64101 l
225.041 280.961 l
225.28101 279.161 l
225.28101 279.041 l
225.041 277.241 l
224.561 275.561 l
224.561 275.44099 l
223.72099 273.881 l
222.64101 272.561 l
221.321 271.481 l
221.201 271.36099 l
219.64101 270.521 l
217.961 269.92101 l
217.841 269.92101 l
216.041 269.80099 l
214.241 269.92101 l
212.561 270.521 l
212.44099 270.521 l
210.881 271.36099 l
210.881 271.481 l
209.561 272.561 l
208.481 273.881 l
208.36099 273.881 l
207.521 275.44099 l
207.521 275.561 l
206.92101 277.241 l
206.80099 279.041 l
f 
207.28101 279.041 m
206.80099 279.041 l
f 
BT
0 14.39999 -14.39999 0 221.0806 275.0806 Tm
(+)Tj 
ET
1 1 1 scn
242.561 278.92101 m
242.80099 277.121 l
243.28101 275.44099 l
244.121 274.00101 l
245.201 272.561 l
246.521 271.481 l
248.08099 270.64101 l
249.761 270.161 l
251.561 269.92101 l
253.36099 270.161 l
255.161 270.64101 l
256.601 271.481 l
257.92101 272.561 l
259.121 274.00101 l
259.841 275.44099 l
260.44099 277.121 l
260.561 278.92101 l
260.44099 280.841 l
259.841 282.521 l
259.121 283.961 l
257.92101 285.28101 l
256.601 286.481 l
255.161 287.321 l
253.36099 287.80099 l
251.561 287.92101 l
249.761 287.80099 l
248.08099 287.321 l
246.521 286.481 l
245.201 285.28101 l
244.121 283.961 l
243.28101 282.521 l
242.80099 280.841 l
242.561 278.92101 l
f* 
0 0 0 scn
242.80099 279.041 m
243.041 277.241 l
243.521 275.561 l
244.36099 274.121 l
245.44099 272.681 l
245.44099 272.80099 l
246.761 271.72099 l
246.64101 271.72099 l
248.201 270.881 l
249.881 270.401 l
251.681 270.161 l
251.561 270.161 l
253.36099 270.401 l
255.161 270.881 l
255.041 270.881 l
256.481 271.72099 l
257.80099 272.80099 l
259.00101 274.241 l
258.881 274.121 l
259.601 275.561 l
260.201 277.241 l
260.201 277.121 l
260.321 278.92101 l
260.201 280.841 l
259.601 282.521 l
259.601 282.401 l
258.881 283.841 l
259.00101 283.841 l
257.80099 285.161 l
256.481 286.36099 l
255.041 287.201 l
255.161 287.08099 l
253.36099 287.561 l
251.561 287.681 l
249.761 287.561 l
249.881 287.561 l
248.201 287.08099 l
246.64101 286.241 l
246.761 286.36099 l
245.44099 285.161 l
244.36099 283.841 l
243.521 282.401 l
243.521 282.521 l
243.041 280.841 l
242.80099 278.92101 l
242.321 278.92101 l
242.561 280.841 l
242.561 280.961 l
243.041 282.64101 l
243.161 282.64101 l
244.00101 284.08099 l
244.00101 284.201 l
245.08099 285.521 l
246.401 286.72099 l
247.961 287.561 l
248.08099 287.561 l
249.761 288.041 l
251.561 288.161 l
253.36099 288.041 l
253.481 288.041 l
255.28101 287.561 l
256.72099 286.72099 l
256.841 286.72099 l
258.161 285.521 l
259.36099 284.201 l
259.36099 284.08099 l
260.08099 282.64101 l
260.681 280.961 l
260.681 280.841 l
260.80099 278.92101 l
260.681 277.121 l
260.08099 275.44099 l
260.08099 275.321 l
259.36099 273.881 l
258.161 272.44099 l
256.841 271.36099 l
256.72099 271.36099 l
255.28101 270.521 l
255.28101 270.401 l
253.481 269.92101 l
251.681 269.681 l
251.561 269.681 l
249.761 269.92101 l
248.08099 270.401 l
247.961 270.401 l
246.401 271.241 l
246.401 271.36099 l
245.08099 272.44099 l
244.00101 273.881 l
243.161 275.321 l
243.041 275.44099 l
242.561 277.121 l
242.321 278.92101 l
f 
242.80099 278.92101 m
242.80099 279.041 l
242.321 278.92101 l
f 
BT
0 14.39999 -14.39999 0 255.5206 277.0006 Tm
(-)Tj 
ET
215.92101 226.841 m
215.321 226.72099 l
214.72099 226.36099 l
214.36099 225.761 l
214.241 225.041 l
214.36099 224.44099 l
214.72099 223.841 l
215.321 223.481 l
215.92101 223.36099 l
216.64101 223.481 l
217.241 223.841 l
217.601 224.44099 l
217.72099 225.041 l
217.601 225.761 l
217.241 226.36099 l
216.64101 226.72099 l
215.92101 226.841 l
f* 
216.041 226.601 m
215.44099 226.481 l
215.44099 226.601 l
214.841 226.241 l
214.961 226.241 l
214.601 225.64101 l
214.601 225.761 l
214.481 225.041 l
214.481 225.161 l
214.601 224.561 l
214.961 223.961 l
214.841 224.08099 l
215.44099 223.72099 l
216.041 223.601 l
215.92101 223.601 l
216.64101 223.72099 l
216.521 223.72099 l
217.121 224.08099 l
217.121 223.961 l
217.481 224.561 l
217.36099 224.561 l
217.481 225.161 l
217.481 225.041 l
217.36099 225.761 l
217.481 225.64101 l
217.121 226.241 l
216.521 226.601 l
216.64101 226.481 l
215.92101 226.601 l
216.041 227.08099 l
216.761 226.961 l
217.36099 226.601 l
217.481 226.481 l
217.841 225.881 l
217.961 225.161 l
217.961 225.041 l
217.841 224.44099 l
217.841 224.321 l
217.481 223.72099 l
217.36099 223.72099 l
216.761 223.36099 l
216.761 223.241 l
216.041 223.121 l
215.92101 223.121 l
215.321 223.241 l
215.201 223.36099 l
214.601 223.72099 l
214.241 224.321 l
214.121 224.44099 l
214.00101 225.041 l
214.00101 225.161 l
214.121 225.881 l
214.241 225.881 l
214.601 226.481 l
214.601 226.601 l
215.201 226.961 l
215.321 226.961 l
215.92101 227.08099 l
f 
215.92101 226.601 m
216.041 226.601 l
215.92101 227.08099 l
216.041 227.08099 l
f 
251.681 226.961 m
251.08099 226.841 l
250.481 226.481 l
250.121 225.881 l
250.00101 225.161 l
250.121 224.561 l
250.481 223.961 l
251.08099 223.601 l
251.681 223.481 l
252.401 223.601 l
253.00101 223.961 l
253.36099 224.561 l
253.481 225.161 l
253.36099 225.881 l
253.00101 226.481 l
252.401 226.841 l
251.681 226.961 l
f* 
251.80099 226.72099 m
251.201 226.601 l
251.201 226.72099 l
250.601 226.36099 l
250.72099 226.36099 l
250.36099 225.761 l
250.36099 225.881 l
250.241 225.161 l
250.241 225.28101 l
250.36099 224.681 l
250.72099 224.08099 l
250.601 224.201 l
251.201 223.841 l
251.80099 223.72099 l
251.681 223.72099 l
252.401 223.841 l
252.28101 223.841 l
252.881 224.201 l
252.881 224.08099 l
253.241 224.681 l
253.121 224.681 l
253.241 225.28101 l
253.241 225.161 l
253.121 225.881 l
253.241 225.761 l
252.881 226.36099 l
252.28101 226.72099 l
252.401 226.601 l
251.681 226.72099 l
251.80099 227.201 l
252.521 227.08099 l
253.121 226.72099 l
253.241 226.601 l
253.601 226.00101 l
253.72099 225.28101 l
253.72099 225.161 l
253.601 224.561 l
253.601 224.44099 l
253.241 223.841 l
253.121 223.841 l
252.521 223.481 l
252.521 223.36099 l
251.80099 223.241 l
251.681 223.241 l
251.08099 223.36099 l
250.961 223.481 l
250.36099 223.841 l
250.00101 224.44099 l
249.881 224.561 l
249.761 225.161 l
249.761 225.28101 l
249.881 226.00101 l
250.00101 226.00101 l
250.36099 226.601 l
250.36099 226.72099 l
250.961 227.08099 l
251.08099 227.08099 l
251.681 227.201 l
f 
251.681 226.72099 m
251.80099 226.72099 l
251.681 227.201 l
251.80099 227.201 l
f 
288.401 225.161 m
288.28101 225.041 l
288.64101 224.80099 l
288.761 224.92101 l
f 
324.401 279.161 m
324.521 279.28101 l
324.881 279.041 l
324.761 278.92101 l
f 
288.401 225.161 m
288.761 224.92101 l
324.761 278.92101 l
324.401 279.161 l
f 
324.401 224.92101 m
324.521 224.80099 l
324.881 225.041 l
324.761 225.161 l
f 
288.401 278.92101 m
288.28101 279.041 l
288.64101 279.28101 l
288.761 279.161 l
f 
324.401 224.92101 m
324.761 225.161 l
288.761 279.161 l
288.401 278.92101 l
f 
1 1 1 scn
279.521 279.041 m
279.64101 277.241 l
280.241 275.561 l
280.961 274.00101 l
282.161 272.681 l
283.481 271.601 l
284.92101 270.761 l
286.72099 270.161 l
288.521 270.041 l
290.321 270.161 l
292.00101 270.761 l
293.561 271.601 l
294.881 272.681 l
295.961 274.00101 l
296.80099 275.561 l
297.28101 277.241 l
297.521 279.041 l
297.28101 280.841 l
296.80099 282.521 l
295.961 284.08099 l
294.881 285.401 l
293.561 286.481 l
292.00101 287.321 l
290.321 287.80099 l
288.521 288.041 l
286.72099 287.80099 l
284.92101 287.321 l
283.481 286.481 l
282.161 285.401 l
280.961 284.08099 l
280.241 282.521 l
279.64101 280.841 l
279.521 279.041 l
f* 
0 0 0 scn
279.761 279.041 m
279.881 277.241 l
279.881 277.36099 l
280.481 275.681 l
281.201 274.121 l
281.201 274.241 l
282.401 272.92101 l
283.72099 271.841 l
283.601 271.841 l
285.041 271.00101 l
286.841 270.401 l
286.72099 270.401 l
288.521 270.28101 l
290.321 270.401 l
292.00101 271.00101 l
291.881 271.00101 l
293.44099 271.841 l
294.761 272.92101 l
295.841 274.241 l
295.72099 274.121 l
296.561 275.681 l
297.041 277.36099 l
297.28101 279.161 l
297.28101 279.041 l
297.041 280.841 l
296.561 282.521 l
296.561 282.401 l
295.72099 283.961 l
295.841 283.961 l
294.761 285.28101 l
293.44099 286.36099 l
293.44099 286.241 l
291.881 287.08099 l
292.00101 287.08099 l
290.321 287.561 l
288.521 287.80099 l
288.64101 287.80099 l
286.841 287.561 l
285.041 287.08099 l
285.041 287.201 l
283.601 286.36099 l
283.72099 286.36099 l
282.401 285.28101 l
281.201 283.961 l
280.481 282.401 l
280.481 282.521 l
279.881 280.841 l
279.761 279.041 l
279.28101 279.041 l
279.401 280.841 l
279.401 280.961 l
280.00101 282.64101 l
280.72099 284.201 l
280.841 284.321 l
282.041 285.64101 l
283.36099 286.72099 l
284.80099 287.561 l
284.92101 287.561 l
286.72099 288.041 l
288.521 288.28101 l
288.64101 288.28101 l
290.44099 288.041 l
292.121 287.561 l
293.681 286.72099 l
293.80099 286.72099 l
295.121 285.64101 l
296.201 284.321 l
296.201 284.201 l
297.041 282.64101 l
297.521 280.961 l
297.761 279.161 l
297.761 279.041 l
297.521 277.241 l
297.041 275.561 l
297.041 275.44099 l
296.201 273.881 l
295.121 272.561 l
293.80099 271.481 l
293.681 271.36099 l
292.121 270.521 l
290.44099 269.92101 l
290.321 269.92101 l
288.521 269.80099 l
286.72099 269.92101 l
284.92101 270.521 l
284.80099 270.64101 l
283.36099 271.481 l
282.041 272.561 l
280.841 273.881 l
280.72099 273.881 l
280.00101 275.44099 l
280.00101 275.561 l
279.401 277.241 l
279.28101 279.041 l
f 
279.761 279.041 m
279.28101 279.041 l
f 
BT
0 14.39999 -14.39999 0 293.56059 275.0806 Tm
(+)Tj 
ET
1 1 1 scn
315.041 278.92101 m
315.28101 277.121 l
315.761 275.44099 l
316.601 274.00101 l
317.681 272.561 l
319.00101 271.481 l
320.561 270.64101 l
322.241 270.161 l
324.041 269.92101 l
325.841 270.161 l
327.521 270.64101 l
329.08099 271.481 l
330.401 272.561 l
331.481 274.00101 l
332.321 275.44099 l
332.80099 277.121 l
333.041 278.92101 l
332.80099 280.841 l
332.321 282.521 l
331.481 283.961 l
330.401 285.28101 l
329.08099 286.481 l
327.521 287.321 l
325.841 287.80099 l
324.041 287.92101 l
322.241 287.80099 l
320.561 287.321 l
319.00101 286.481 l
317.681 285.28101 l
316.601 283.961 l
315.761 282.521 l
315.28101 280.841 l
315.041 278.92101 l
f* 
0 0 0 scn
315.28101 279.041 m
315.521 277.241 l
316.00101 275.561 l
316.841 274.121 l
317.92101 272.681 l
317.92101 272.80099 l
319.241 271.72099 l
319.121 271.72099 l
320.681 270.881 l
322.36099 270.401 l
324.161 270.161 l
324.041 270.161 l
325.841 270.401 l
327.521 270.881 l
327.401 270.881 l
328.961 271.72099 l
330.28101 272.80099 l
330.28101 272.681 l
331.36099 274.121 l
332.201 275.561 l
332.08099 275.561 l
332.561 277.241 l
332.80099 279.041 l
332.80099 278.92101 l
332.561 280.841 l
332.08099 282.521 l
332.201 282.401 l
331.36099 283.841 l
330.28101 285.161 l
328.961 286.36099 l
328.961 286.241 l
327.401 287.08099 l
327.521 287.08099 l
325.841 287.561 l
324.041 287.681 l
322.241 287.561 l
322.36099 287.561 l
320.681 287.08099 l
319.121 286.241 l
319.241 286.36099 l
317.92101 285.161 l
316.841 283.841 l
316.00101 282.401 l
316.00101 282.521 l
315.521 280.841 l
315.28101 278.92101 l
314.80099 278.92101 l
315.041 280.841 l
315.041 280.961 l
315.521 282.64101 l
315.64101 282.64101 l
316.481 284.08099 l
316.481 284.201 l
317.561 285.521 l
318.881 286.72099 l
320.44099 287.561 l
320.561 287.561 l
322.241 288.041 l
324.041 288.161 l
325.841 288.041 l
325.961 288.041 l
327.64101 287.561 l
329.201 286.72099 l
329.321 286.72099 l
330.64101 285.521 l
331.72099 284.201 l
331.72099 284.08099 l
332.561 282.64101 l
333.041 280.961 l
333.041 280.841 l
333.28101 278.92101 l
333.041 277.121 l
332.561 275.44099 l
332.561 275.321 l
331.72099 273.881 l
330.64101 272.44099 l
329.321 271.36099 l
329.201 271.241 l
327.64101 270.401 l
325.961 269.92101 l
324.161 269.681 l
324.041 269.681 l
322.241 269.92101 l
320.561 270.401 l
320.44099 270.401 l
318.881 271.241 l
318.881 271.36099 l
317.561 272.44099 l
316.481 273.881 l
315.64101 275.321 l
315.521 275.44099 l
315.041 277.121 l
314.80099 278.92101 l
f 
315.28101 278.92101 m
315.28101 279.041 l
314.80099 278.92101 l
f 
BT
0 14.39999 -14.39999 0 328.0006 277.0006 Tm
(-)Tj 
ET
288.401 226.841 m
287.681 226.72099 l
287.201 226.36099 l
286.841 225.761 l
286.72099 225.041 l
286.841 224.44099 l
287.201 223.841 l
287.681 223.481 l
288.401 223.36099 l
289.121 223.481 l
289.601 223.841 l
290.08099 224.44099 l
290.201 225.041 l
290.08099 225.761 l
289.601 226.36099 l
289.121 226.72099 l
288.401 226.841 l
f* 
288.521 226.601 m
287.80099 226.481 l
287.80099 226.601 l
287.321 226.241 l
287.44099 226.241 l
287.08099 225.64101 l
287.08099 225.761 l
286.961 225.041 l
286.961 225.161 l
287.08099 224.561 l
287.44099 223.961 l
287.321 224.08099 l
287.80099 223.72099 l
288.521 223.601 l
288.401 223.601 l
289.121 223.72099 l
289.00101 223.72099 l
289.481 224.08099 l
289.481 223.961 l
289.961 224.561 l
289.841 224.561 l
289.961 225.161 l
289.961 225.041 l
289.841 225.761 l
289.961 225.64101 l
289.481 226.241 l
289.00101 226.601 l
289.121 226.481 l
288.401 226.601 l
288.521 227.08099 l
289.241 226.961 l
289.72099 226.601 l
289.841 226.481 l
290.321 225.881 l
290.44099 225.161 l
290.44099 225.041 l
290.321 224.44099 l
290.321 224.321 l
289.841 223.72099 l
289.72099 223.72099 l
289.241 223.36099 l
289.241 223.241 l
288.521 223.121 l
288.401 223.121 l
287.681 223.241 l
287.561 223.36099 l
287.08099 223.72099 l
286.72099 224.321 l
286.601 224.44099 l
286.481 225.041 l
286.481 225.161 l
286.601 225.881 l
286.72099 225.881 l
287.08099 226.481 l
287.08099 226.601 l
287.561 226.961 l
287.681 226.961 l
288.401 227.08099 l
f 
288.401 226.601 m
288.521 226.601 l
288.401 227.08099 l
288.521 227.08099 l
f 
324.161 226.961 m
323.44099 226.841 l
322.961 226.481 l
322.601 225.881 l
322.36099 225.161 l
322.601 224.561 l
322.961 223.961 l
323.44099 223.601 l
324.161 223.481 l
324.881 223.601 l
325.36099 223.961 l
325.72099 224.561 l
325.961 225.161 l
325.72099 225.881 l
325.36099 226.481 l
324.881 226.841 l
324.161 226.961 l
f* 
324.28101 226.72099 m
323.561 226.601 l
323.561 226.72099 l
323.08099 226.36099 l
323.201 226.36099 l
322.841 225.761 l
322.841 225.881 l
322.601 225.161 l
322.601 225.28101 l
322.841 224.681 l
323.201 224.08099 l
323.08099 224.201 l
323.561 223.841 l
324.28101 223.72099 l
324.161 223.72099 l
324.881 223.841 l
324.761 223.841 l
325.241 224.201 l
325.241 224.08099 l
325.601 224.681 l
325.481 224.681 l
325.72099 225.28101 l
325.72099 225.161 l
325.481 225.881 l
325.601 225.761 l
325.241 226.36099 l
324.761 226.72099 l
324.881 226.601 l
324.161 226.72099 l
324.28101 227.201 l
325.00101 227.08099 l
325.481 226.72099 l
325.601 226.601 l
325.961 226.00101 l
326.201 225.28101 l
326.201 225.161 l
325.961 224.561 l
325.961 224.44099 l
325.601 223.841 l
325.481 223.841 l
325.00101 223.481 l
325.00101 223.36099 l
324.28101 223.241 l
324.161 223.241 l
323.44099 223.36099 l
323.321 223.481 l
322.841 223.841 l
322.481 224.44099 l
322.36099 224.561 l
322.121 225.161 l
322.121 225.28101 l
322.36099 226.00101 l
322.481 226.00101 l
322.841 226.601 l
322.841 226.72099 l
323.321 227.08099 l
323.44099 227.08099 l
324.161 227.201 l
f 
324.161 226.72099 m
324.28101 226.72099 l
324.161 227.201 l
324.28101 227.201 l
f 
71.92101 369.28101 m
71.80099 369.161 l
72.041 368.80099 l
72.161 368.92101 l
f 
143.92101 423.28101 m
144.041 423.401 l
144.28101 423.041 l
144.161 422.92101 l
f 
71.92101 369.28101 m
72.161 368.92101 l
144.161 422.92101 l
143.92101 423.28101 l
f 
143.80099 368.92101 m
143.92101 368.80099 l
144.161 369.161 l
144.041 369.28101 l
f 
71.92101 422.92101 m
71.80099 423.041 l
72.041 423.401 l
72.161 423.28101 l
f 
143.80099 368.92101 m
144.041 369.28101 l
72.161 423.28101 l
71.92101 422.92101 l
f 
1 1 1 scn
63.041 423.041 m
63.161 421.241 l
63.761 419.561 l
64.601 418.00101 l
65.681 416.681 l
67.00101 415.601 l
68.561 414.761 l
70.241 414.28101 l
72.041 414.041 l
73.841 414.28101 l
75.521 414.761 l
77.08099 415.601 l
78.401 416.681 l
79.481 418.00101 l
80.321 419.561 l
80.80099 421.241 l
81.041 423.041 l
80.80099 424.841 l
80.321 426.521 l
79.481 428.08099 l
78.401 429.401 l
77.08099 430.481 l
75.521 431.321 l
73.841 431.80099 l
72.041 432.041 l
70.241 431.80099 l
68.561 431.321 l
67.00101 430.481 l
65.681 429.401 l
64.601 428.08099 l
63.761 426.521 l
63.161 424.841 l
63.041 423.041 l
f* 
0 0 0 scn
63.28101 423.041 m
63.401 421.241 l
63.401 421.36099 l
64.00101 419.681 l
64.841 418.121 l
64.841 418.241 l
65.92101 416.92101 l
67.241 415.841 l
67.121 415.841 l
68.681 415.00101 l
70.36099 414.521 l
72.161 414.28101 l
72.041 414.28101 l
73.841 414.521 l
75.521 415.00101 l
75.401 415.00101 l
76.961 415.841 l
78.28101 416.92101 l
79.36099 418.241 l
79.241 418.121 l
80.08099 419.681 l
80.561 421.36099 l
80.80099 423.161 l
80.80099 423.041 l
80.561 424.841 l
80.08099 426.521 l
80.08099 426.401 l
79.241 427.961 l
79.36099 427.961 l
78.28101 429.28101 l
76.961 430.36099 l
76.961 430.241 l
75.401 431.08099 l
75.521 431.08099 l
73.841 431.561 l
72.041 431.80099 l
72.161 431.80099 l
70.36099 431.561 l
68.681 431.08099 l
67.121 430.241 l
67.241 430.36099 l
65.92101 429.28101 l
64.841 427.961 l
64.00101 426.401 l
64.00101 426.521 l
63.401 424.841 l
63.28101 423.041 l
62.80099 423.041 l
62.92101 424.841 l
62.92101 424.961 l
63.521 426.64101 l
64.36099 428.201 l
64.481 428.321 l
65.561 429.64101 l
66.881 430.72099 l
68.44099 431.561 l
68.561 431.561 l
70.241 432.041 l
72.041 432.28101 l
72.161 432.28101 l
73.961 432.041 l
75.64101 431.561 l
77.201 430.72099 l
77.321 430.72099 l
78.64101 429.64101 l
79.72099 428.321 l
79.72099 428.201 l
80.561 426.64101 l
81.041 424.961 l
81.28101 423.161 l
81.28101 423.041 l
81.041 421.241 l
80.561 419.561 l
80.561 419.44099 l
79.72099 417.881 l
78.64101 416.561 l
77.321 415.481 l
77.201 415.36099 l
75.64101 414.521 l
73.961 414.041 l
72.161 413.80099 l
72.041 413.80099 l
70.241 414.041 l
68.561 414.521 l
68.44099 414.521 l
66.881 415.36099 l
66.881 415.481 l
65.561 416.561 l
64.481 417.881 l
64.36099 417.881 l
63.521 419.44099 l
63.521 419.561 l
62.92101 421.241 l
62.80099 423.041 l
f 
63.28101 423.041 m
62.80099 423.041 l
f 
BT
0 14.39999 -14.39999 0 77.0806 419.0806 Tm
(+)Tj 
ET
1 1 1 scn
98.561 422.92101 m
98.80099 421.121 l
99.28101 419.44099 l
100.121 418.00101 l
101.201 416.561 l
102.521 415.481 l
104.08099 414.64101 l
105.761 414.161 l
107.561 413.92101 l
109.36099 414.161 l
111.041 414.64101 l
112.601 415.481 l
113.92101 416.561 l
115.00101 418.00101 l
115.841 419.44099 l
116.44099 421.121 l
116.561 422.92101 l
116.44099 424.841 l
115.841 426.521 l
115.00101 427.961 l
113.92101 429.401 l
112.601 430.481 l
111.041 431.321 l
109.36099 431.80099 l
107.561 431.92101 l
105.761 431.80099 l
104.08099 431.321 l
102.521 430.481 l
101.201 429.401 l
100.121 427.961 l
99.28101 426.521 l
98.80099 424.841 l
98.561 422.92101 l
f* 
0 0 0 scn
98.80099 423.041 m
99.041 421.241 l
99.521 419.561 l
100.36099 418.121 l
101.44099 416.681 l
101.44099 416.80099 l
102.761 415.72099 l
102.64101 415.72099 l
104.201 414.881 l
105.881 414.401 l
107.681 414.161 l
107.561 414.161 l
109.36099 414.401 l
111.041 414.881 l
110.92101 414.881 l
112.481 415.72099 l
113.80099 416.80099 l
113.80099 416.681 l
114.881 418.121 l
115.72099 419.561 l
115.601 419.561 l
116.201 421.241 l
116.201 421.121 l
116.321 422.92101 l
116.201 424.841 l
115.601 426.521 l
115.72099 426.401 l
114.881 427.841 l
113.80099 429.28101 l
112.481 430.36099 l
112.481 430.241 l
110.92101 431.08099 l
111.041 431.08099 l
109.36099 431.561 l
107.561 431.681 l
105.761 431.561 l
105.881 431.561 l
104.201 431.08099 l
102.64101 430.241 l
102.761 430.36099 l
101.44099 429.28101 l
100.36099 427.841 l
99.521 426.401 l
99.521 426.521 l
99.041 424.841 l
98.80099 422.92101 l
98.321 422.92101 l
98.561 424.841 l
98.561 424.961 l
99.041 426.64101 l
99.161 426.64101 l
100.00101 428.08099 l
101.08099 429.521 l
101.08099 429.64101 l
102.401 430.72099 l
103.961 431.561 l
104.08099 431.561 l
105.761 432.041 l
107.561 432.161 l
109.36099 432.041 l
109.481 432.041 l
111.161 431.561 l
112.72099 430.72099 l
112.841 430.72099 l
114.161 429.64101 l
114.161 429.521 l
115.241 428.08099 l
116.08099 426.64101 l
116.681 424.961 l
116.681 424.841 l
116.80099 422.92101 l
116.681 421.121 l
116.08099 419.44099 l
116.08099 419.321 l
115.241 417.881 l
114.161 416.44099 l
112.841 415.36099 l
112.72099 415.241 l
111.161 414.401 l
109.481 413.92101 l
107.681 413.681 l
107.561 413.681 l
105.761 413.92101 l
104.08099 414.401 l
103.961 414.401 l
102.401 415.241 l
102.401 415.36099 l
101.08099 416.44099 l
100.00101 417.881 l
99.161 419.321 l
99.041 419.44099 l
98.561 421.121 l
98.321 422.92101 l
f 
98.80099 422.92101 m
98.80099 423.041 l
98.321 422.92101 l
f 
BT
0 14.39999 -14.39999 0 111.5206 419.20061 Tm
(+)Tj 
ET
1 1 1 scn
171.041 342.401 m
171.161 340.601 l
171.761 338.80099 l
172.601 337.36099 l
173.681 336.041 l
175.00101 334.841 l
176.561 334.121 l
178.241 333.521 l
180.041 333.401 l
181.841 333.521 l
183.521 334.121 l
185.08099 334.841 l
186.401 336.041 l
187.481 337.36099 l
188.321 338.80099 l
188.80099 340.601 l
189.041 342.401 l
188.80099 344.201 l
188.321 345.881 l
187.481 347.44099 l
186.401 348.761 l
185.08099 349.841 l
183.521 350.681 l
181.841 351.161 l
180.041 351.401 l
178.241 351.161 l
176.561 350.681 l
175.00101 349.841 l
173.681 348.761 l
172.601 347.44099 l
171.761 345.881 l
171.161 344.201 l
171.041 342.401 l
f* 
0 0 0 scn
171.28101 342.401 m
171.401 340.601 l
171.401 340.72099 l
172.00101 338.92101 l
172.841 337.481 l
172.841 337.601 l
173.92101 336.28101 l
175.241 335.08099 l
175.121 335.08099 l
176.681 334.36099 l
178.36099 333.761 l
178.241 333.761 l
180.041 333.64101 l
181.841 333.761 l
183.521 334.36099 l
183.401 334.36099 l
184.961 335.08099 l
186.28101 336.28101 l
187.36099 337.601 l
187.36099 337.481 l
188.201 338.92101 l
188.08099 338.92101 l
188.561 340.72099 l
188.80099 342.521 l
188.80099 342.401 l
188.561 344.201 l
188.08099 345.881 l
188.08099 345.761 l
187.241 347.321 l
187.36099 347.321 l
186.28101 348.64101 l
184.961 349.72099 l
184.961 349.601 l
183.401 350.44099 l
183.521 350.44099 l
181.841 350.92101 l
180.041 351.161 l
180.161 351.161 l
178.36099 350.92101 l
176.681 350.44099 l
175.121 349.601 l
175.241 349.72099 l
173.92101 348.64101 l
172.841 347.321 l
172.00101 345.761 l
172.00101 345.881 l
171.401 344.201 l
171.28101 342.401 l
170.80099 342.401 l
170.92101 344.201 l
170.92101 344.321 l
171.521 346.00101 l
172.36099 347.561 l
172.481 347.681 l
173.561 349.00101 l
174.881 350.08099 l
176.44099 350.92101 l
176.561 350.92101 l
178.241 351.401 l
180.041 351.64101 l
180.161 351.64101 l
181.961 351.401 l
183.64101 350.92101 l
185.201 350.08099 l
185.321 350.08099 l
186.64101 349.00101 l
187.72099 347.681 l
187.72099 347.561 l
188.561 346.00101 l
189.041 344.321 l
189.28101 342.521 l
189.28101 342.401 l
189.041 340.601 l
188.561 338.80099 l
188.561 338.681 l
187.72099 337.241 l
186.64101 335.92101 l
185.321 334.72099 l
185.201 334.601 l
183.64101 333.881 l
181.961 333.28101 l
181.841 333.28101 l
180.041 333.161 l
178.241 333.28101 l
176.561 333.881 l
176.44099 333.881 l
174.881 334.601 l
174.881 334.72099 l
173.561 335.92101 l
172.481 337.241 l
171.64101 338.681 l
171.521 338.80099 l
170.92101 340.601 l
170.80099 342.401 l
f 
171.28101 342.401 m
170.80099 342.401 l
f 
BT
0 14.39999 -14.39999 0 185.0806 338.92059 Tm
(*)Tj 
ET
171.28101 342.041 0.24001 0.48 rf
162.401 342.521 8.88 -0.48 rf
162.401 321.881 0.48 -0.24001 rf
162.401 321.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 162.8806 306.1606 Tm
(w)Tj 
0 6.36 -6.36 0 165.4006 313.6006 Tm
(2)Tj 
0.283 0.94341 TD
(1)Tj 
ET
1 1 1 scn
279.041 342.401 m
279.28101 340.601 l
279.761 338.80099 l
280.601 337.36099 l
281.681 336.041 l
283.00101 334.841 l
284.561 334.121 l
286.241 333.521 l
288.041 333.401 l
289.841 333.521 l
291.521 334.121 l
293.08099 334.841 l
294.401 336.041 l
295.481 337.36099 l
296.321 338.80099 l
296.80099 340.601 l
297.041 342.401 l
296.80099 344.201 l
296.321 345.881 l
295.481 347.44099 l
294.401 348.761 l
293.08099 349.841 l
291.521 350.681 l
289.841 351.161 l
288.041 351.401 l
286.241 351.161 l
284.561 350.681 l
283.00101 349.841 l
281.681 348.761 l
280.601 347.44099 l
279.761 345.881 l
279.28101 344.201 l
279.041 342.401 l
f* 
0 0 0 scn
279.28101 342.521 m
279.521 340.72099 l
280.00101 338.92101 l
280.841 337.481 l
280.841 337.601 l
281.92101 336.28101 l
283.241 335.08099 l
283.121 335.08099 l
284.681 334.36099 l
286.36099 333.761 l
286.241 333.761 l
288.041 333.64101 l
289.841 333.761 l
291.521 334.36099 l
291.401 334.36099 l
292.961 335.08099 l
294.28101 336.28101 l
295.36099 337.601 l
295.36099 337.481 l
296.201 338.92101 l
296.08099 338.92101 l
296.561 340.72099 l
296.80099 342.521 l
296.80099 342.401 l
296.561 344.201 l
296.08099 345.881 l
296.08099 345.761 l
295.241 347.321 l
295.36099 347.321 l
294.28101 348.64101 l
292.961 349.72099 l
292.961 349.601 l
291.401 350.44099 l
291.521 350.44099 l
289.841 350.92101 l
288.041 351.161 l
288.161 351.161 l
286.36099 350.92101 l
284.681 350.44099 l
283.121 349.601 l
283.241 349.72099 l
281.92101 348.64101 l
280.841 347.321 l
280.00101 345.761 l
280.00101 345.881 l
279.521 344.201 l
279.28101 342.401 l
278.80099 342.521 l
279.041 344.321 l
279.521 346.00101 l
280.36099 347.561 l
280.481 347.681 l
281.561 349.00101 l
282.881 350.08099 l
284.44099 350.92101 l
284.561 350.92101 l
286.241 351.401 l
288.041 351.64101 l
288.161 351.64101 l
289.961 351.401 l
291.64101 350.92101 l
293.201 350.08099 l
293.321 350.08099 l
294.64101 349.00101 l
295.72099 347.681 l
295.72099 347.561 l
296.561 346.00101 l
297.041 344.321 l
297.28101 342.521 l
297.28101 342.401 l
297.041 340.601 l
296.561 338.80099 l
296.561 338.681 l
295.72099 337.241 l
294.64101 335.92101 l
293.321 334.72099 l
293.201 334.601 l
291.64101 333.881 l
289.961 333.28101 l
289.841 333.28101 l
288.041 333.161 l
286.241 333.28101 l
284.561 333.881 l
284.44099 333.881 l
282.881 334.601 l
282.881 334.72099 l
281.561 335.92101 l
280.481 337.241 l
279.64101 338.681 l
279.521 338.80099 l
279.041 340.601 l
278.80099 342.401 l
f 
279.28101 342.401 m
279.28101 342.521 l
278.80099 342.401 l
278.80099 342.521 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 293.0806 338.92059 Tm
(*)Tj 
ET
279.28101 342.041 0.24001 0.48 rf
270.401 342.521 8.88 -0.48 rf
270.401 321.881 0.48 -0.24001 rf
270.401 321.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 270.8806 306.1606 Tm
(w)Tj 
0 6.36 -6.36 0 273.4006 313.6006 Tm
(2)Tj 
0.283 0.94341 TD
(2)Tj 
ET
1 1 1 scn
315.041 342.401 m
315.28101 340.601 l
315.761 338.80099 l
316.601 337.36099 l
317.681 336.041 l
319.00101 334.841 l
320.561 334.121 l
322.241 333.521 l
324.041 333.401 l
325.841 333.521 l
327.521 334.121 l
329.08099 334.841 l
330.401 336.041 l
331.481 337.36099 l
332.321 338.80099 l
332.80099 340.601 l
333.041 342.401 l
332.80099 344.201 l
332.321 345.881 l
331.481 347.44099 l
330.401 348.761 l
329.08099 349.841 l
327.521 350.681 l
325.841 351.161 l
324.041 351.401 l
322.241 351.161 l
320.561 350.681 l
319.00101 349.841 l
317.681 348.761 l
316.601 347.44099 l
315.761 345.881 l
315.28101 344.201 l
315.041 342.401 l
f* 
0 0 0 scn
315.28101 342.521 m
315.521 340.72099 l
316.00101 338.92101 l
316.841 337.481 l
316.841 337.601 l
317.92101 336.28101 l
319.241 335.08099 l
319.121 335.08099 l
320.681 334.36099 l
322.36099 333.761 l
322.241 333.761 l
324.041 333.64101 l
325.841 333.761 l
327.521 334.36099 l
327.401 334.36099 l
328.961 335.08099 l
330.28101 336.28101 l
331.36099 337.601 l
331.36099 337.481 l
332.201 338.92101 l
332.08099 338.92101 l
332.561 340.72099 l
332.80099 342.521 l
332.80099 342.401 l
332.561 344.201 l
332.08099 345.881 l
332.08099 345.761 l
331.241 347.321 l
331.36099 347.321 l
330.28101 348.64101 l
328.961 349.72099 l
328.961 349.601 l
327.401 350.44099 l
327.521 350.44099 l
325.841 350.92101 l
324.041 351.161 l
324.161 351.161 l
322.36099 350.92101 l
320.681 350.44099 l
319.121 349.601 l
319.241 349.72099 l
317.92101 348.64101 l
316.841 347.321 l
316.00101 345.761 l
316.00101 345.881 l
315.521 344.201 l
315.28101 342.401 l
314.80099 342.521 l
315.041 344.321 l
315.521 346.00101 l
316.36099 347.561 l
316.481 347.681 l
317.561 349.00101 l
318.881 350.08099 l
320.44099 350.92101 l
320.561 350.92101 l
322.241 351.401 l
324.041 351.64101 l
324.161 351.64101 l
325.961 351.401 l
327.64101 350.92101 l
329.201 350.08099 l
329.321 350.08099 l
330.64101 349.00101 l
331.72099 347.681 l
331.72099 347.561 l
332.561 346.00101 l
333.041 344.321 l
333.28101 342.521 l
333.28101 342.401 l
333.041 340.601 l
332.561 338.80099 l
332.561 338.681 l
331.72099 337.241 l
330.64101 335.92101 l
329.321 334.72099 l
329.201 334.601 l
327.64101 333.881 l
325.961 333.28101 l
325.841 333.28101 l
324.041 333.161 l
322.241 333.28101 l
320.561 333.881 l
320.44099 333.881 l
318.881 334.601 l
318.881 334.72099 l
317.561 335.92101 l
316.481 337.241 l
315.64101 338.681 l
315.521 338.80099 l
315.041 340.601 l
314.80099 342.401 l
f 
315.28101 342.401 m
315.28101 342.521 l
314.80099 342.401 l
314.80099 342.521 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 329.0806 338.92059 Tm
(*)Tj 
ET
315.28101 342.041 0.24001 0.48 rf
306.401 342.521 8.88 -0.48 rf
306.401 321.881 0.48 -0.24001 rf
306.401 321.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 306.8806 306.1606 Tm
(w)Tj 
0 6.36 -6.36 0 309.4006 313.6006 Tm
(2)Tj 
0.283 0.94341 TD
(3)Tj 
ET
1 1 1 scn
135.041 342.161 m
135.161 340.36099 l
135.761 338.681 l
136.601 337.121 l
137.681 335.80099 l
139.00101 334.72099 l
140.561 333.881 l
142.241 333.401 l
144.041 333.161 l
145.841 333.401 l
147.521 333.881 l
149.08099 334.72099 l
150.401 335.80099 l
151.481 337.121 l
152.321 338.681 l
152.80099 340.36099 l
153.041 342.161 l
152.80099 343.961 l
152.321 345.64101 l
151.481 347.201 l
150.401 348.521 l
149.08099 349.601 l
147.521 350.44099 l
145.841 351.041 l
144.041 351.161 l
142.241 351.041 l
140.561 350.44099 l
139.00101 349.601 l
137.681 348.521 l
136.601 347.201 l
135.761 345.64101 l
135.161 343.961 l
135.041 342.161 l
f* 
0 0 0 scn
135.28101 342.161 m
135.401 340.36099 l
135.401 340.481 l
136.00101 338.80099 l
136.841 337.241 l
136.841 337.36099 l
137.92101 336.041 l
139.241 334.961 l
139.121 334.961 l
140.681 334.121 l
142.36099 333.64101 l
144.161 333.401 l
144.041 333.401 l
145.841 333.64101 l
147.521 334.121 l
147.401 334.121 l
148.961 334.961 l
150.28101 336.041 l
151.36099 337.36099 l
151.241 337.241 l
152.08099 338.80099 l
152.561 340.481 l
152.80099 342.28101 l
152.80099 342.161 l
152.561 343.961 l
152.08099 345.64101 l
152.08099 345.521 l
151.241 347.08099 l
151.36099 347.08099 l
150.28101 348.401 l
148.961 349.481 l
148.961 349.36099 l
147.401 350.201 l
147.521 350.201 l
145.841 350.80099 l
144.041 350.92101 l
142.241 350.80099 l
142.36099 350.80099 l
140.681 350.201 l
139.121 349.36099 l
139.241 349.481 l
137.92101 348.401 l
136.841 347.08099 l
136.00101 345.521 l
136.00101 345.64101 l
135.401 343.961 l
135.28101 342.161 l
134.80099 342.161 l
134.92101 343.961 l
134.92101 344.08099 l
135.521 345.761 l
136.36099 347.321 l
136.481 347.44099 l
137.561 348.761 l
138.881 349.841 l
140.44099 350.681 l
140.561 350.681 l
142.241 351.28101 l
144.041 351.401 l
145.841 351.28101 l
145.961 351.28101 l
147.64101 350.681 l
149.201 349.841 l
149.321 349.841 l
150.64101 348.761 l
151.72099 347.44099 l
151.72099 347.321 l
152.561 345.761 l
153.041 344.08099 l
153.28101 342.28101 l
153.28101 342.161 l
153.041 340.36099 l
152.561 338.681 l
152.561 338.561 l
151.72099 337.00101 l
150.64101 335.681 l
149.321 334.601 l
149.201 334.481 l
147.64101 333.64101 l
145.961 333.161 l
144.161 332.92101 l
144.041 332.92101 l
142.241 333.161 l
140.561 333.64101 l
140.44099 333.64101 l
138.881 334.481 l
138.881 334.601 l
137.561 335.681 l
136.481 337.00101 l
136.36099 337.00101 l
135.521 338.561 l
135.521 338.681 l
134.92101 340.36099 l
134.80099 342.161 l
f 
135.28101 342.161 m
134.80099 342.161 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 149.0806 338.8006 Tm
(*)Tj 
ET
135.28101 341.80099 0.24001 0.48 rf
126.401 342.28101 8.88 -0.48 rf
126.401 321.761 0.48 -0.24001 rf
126.401 321.761 0.48 20.28 rf
BT
/N54 1 Tf
0 12 -12 0 126.8806 306.0406 Tm
(w)Tj 
0 6.36 -6.36 0 129.4006 313.3606 Tm
(2)Tj 
0.3019 0.94341 TD
(0)Tj 
ET
71.92101 370.841 m
71.321 370.72099 l
70.72099 370.36099 l
70.36099 369.761 l
70.241 369.041 l
70.36099 368.44099 l
70.72099 367.841 l
71.321 367.481 l
71.92101 367.36099 l
72.64101 367.481 l
73.241 367.841 l
73.601 368.44099 l
73.72099 369.041 l
73.601 369.761 l
73.241 370.36099 l
72.64101 370.72099 l
71.92101 370.841 l
f* 
72.041 370.601 m
71.44099 370.481 l
71.44099 370.601 l
70.841 370.241 l
70.961 370.241 l
70.601 369.64101 l
70.601 369.761 l
70.481 369.041 l
70.481 369.161 l
70.601 368.561 l
70.961 367.961 l
70.841 368.08099 l
71.44099 367.72099 l
72.041 367.601 l
71.92101 367.601 l
72.64101 367.72099 l
72.521 367.72099 l
73.121 368.08099 l
73.121 367.961 l
73.481 368.561 l
73.36099 368.561 l
73.481 369.161 l
73.481 369.041 l
73.36099 369.761 l
73.481 369.64101 l
73.121 370.241 l
72.521 370.601 l
72.64101 370.481 l
71.92101 370.601 l
72.041 371.08099 l
72.761 370.961 l
73.36099 370.601 l
73.481 370.481 l
73.841 369.881 l
73.961 369.161 l
73.961 369.041 l
73.841 368.44099 l
73.841 368.321 l
73.481 367.72099 l
73.36099 367.72099 l
72.761 367.36099 l
72.761 367.241 l
72.041 367.121 l
71.92101 367.121 l
71.321 367.241 l
71.201 367.36099 l
70.601 367.72099 l
70.241 368.321 l
70.121 368.44099 l
70.00101 369.041 l
70.00101 369.161 l
70.121 369.881 l
70.241 369.881 l
70.601 370.481 l
70.601 370.601 l
71.201 370.961 l
71.321 370.961 l
71.92101 371.08099 l
f 
71.92101 370.601 m
72.041 370.601 l
71.92101 371.08099 l
72.041 371.08099 l
f 
107.681 370.961 m
107.08099 370.841 l
106.481 370.481 l
106.121 369.881 l
106.00101 369.28101 l
106.121 368.561 l
106.481 367.961 l
107.08099 367.601 l
107.681 367.481 l
108.401 367.601 l
109.00101 367.961 l
109.36099 368.561 l
109.481 369.28101 l
109.36099 369.881 l
109.00101 370.481 l
108.401 370.841 l
107.681 370.961 l
f* 
107.80099 370.72099 m
107.201 370.601 l
107.201 370.72099 l
106.601 370.36099 l
106.72099 370.36099 l
106.36099 369.761 l
106.36099 369.881 l
106.241 369.28101 l
106.241 369.401 l
106.36099 368.681 l
106.72099 368.08099 l
106.601 368.201 l
107.201 367.841 l
107.80099 367.72099 l
107.681 367.72099 l
108.401 367.841 l
108.28101 367.841 l
108.881 368.201 l
108.881 368.08099 l
109.241 368.681 l
109.121 368.681 l
109.241 369.401 l
109.241 369.28101 l
109.121 369.881 l
109.241 369.761 l
108.881 370.36099 l
108.28101 370.72099 l
108.401 370.601 l
107.681 370.72099 l
107.80099 371.201 l
108.521 371.08099 l
109.121 370.72099 l
109.241 370.601 l
109.601 370.00101 l
109.72099 369.401 l
109.72099 369.28101 l
109.601 368.561 l
109.601 368.44099 l
109.241 367.841 l
109.121 367.841 l
108.521 367.481 l
108.521 367.36099 l
107.80099 367.241 l
107.681 367.241 l
107.08099 367.36099 l
106.961 367.481 l
106.36099 367.841 l
106.00101 368.44099 l
105.881 368.561 l
105.761 369.28101 l
105.761 369.401 l
105.881 370.00101 l
106.00101 370.00101 l
106.36099 370.601 l
106.36099 370.72099 l
106.961 371.08099 l
107.08099 371.08099 l
107.681 371.201 l
f 
107.681 370.72099 m
107.80099 370.72099 l
107.681 371.201 l
107.80099 371.201 l
f 
107.561 369.521 m
107.44099 369.401 l
107.681 369.041 l
107.80099 369.161 l
f 
179.92101 423.28101 m
180.041 423.401 l
180.28101 423.041 l
180.161 422.92101 l
f 
107.561 369.521 m
107.80099 369.161 l
180.161 422.92101 l
179.92101 423.28101 l
f 
1 1 1 scn
135.041 423.041 m
135.161 421.241 l
135.761 419.561 l
136.601 418.00101 l
137.681 416.681 l
139.00101 415.601 l
140.561 414.761 l
142.241 414.28101 l
144.041 414.041 l
145.841 414.28101 l
147.521 414.761 l
149.08099 415.601 l
150.401 416.681 l
151.481 418.00101 l
152.321 419.561 l
152.80099 421.241 l
153.041 423.041 l
152.80099 424.841 l
152.321 426.521 l
151.481 428.08099 l
150.401 429.401 l
149.08099 430.481 l
147.521 431.321 l
145.841 431.80099 l
144.041 432.041 l
142.241 431.80099 l
140.561 431.321 l
139.00101 430.481 l
137.681 429.401 l
136.601 428.08099 l
135.761 426.521 l
135.161 424.841 l
135.041 423.041 l
f* 
0 0 0 scn
135.28101 423.041 m
135.401 421.241 l
135.401 421.36099 l
136.00101 419.681 l
136.841 418.121 l
136.841 418.241 l
137.92101 416.92101 l
139.241 415.841 l
139.121 415.841 l
140.681 415.00101 l
142.36099 414.521 l
144.161 414.28101 l
144.041 414.28101 l
145.841 414.521 l
147.521 415.00101 l
147.401 415.00101 l
148.961 415.841 l
150.28101 416.92101 l
151.36099 418.241 l
151.241 418.121 l
152.08099 419.681 l
152.561 421.36099 l
152.80099 423.161 l
152.80099 423.041 l
152.561 424.841 l
152.08099 426.521 l
152.08099 426.401 l
151.241 427.961 l
151.36099 427.961 l
150.28101 429.28101 l
148.961 430.36099 l
148.961 430.241 l
147.401 431.08099 l
147.521 431.08099 l
145.841 431.561 l
144.041 431.80099 l
144.161 431.80099 l
142.36099 431.561 l
140.681 431.08099 l
139.121 430.241 l
139.241 430.36099 l
137.92101 429.28101 l
136.841 427.961 l
136.00101 426.401 l
136.00101 426.521 l
135.401 424.841 l
135.28101 423.041 l
134.80099 423.041 l
134.92101 424.841 l
134.92101 424.961 l
135.521 426.64101 l
136.36099 428.201 l
136.481 428.321 l
137.561 429.64101 l
138.881 430.72099 l
140.44099 431.561 l
140.561 431.561 l
142.241 432.041 l
144.041 432.28101 l
144.161 432.28101 l
145.961 432.041 l
147.64101 431.561 l
149.201 430.72099 l
149.321 430.72099 l
150.64101 429.64101 l
151.72099 428.321 l
151.72099 428.201 l
152.561 426.64101 l
153.041 424.961 l
153.28101 423.161 l
153.28101 423.041 l
153.041 421.241 l
152.561 419.561 l
152.561 419.44099 l
151.72099 417.881 l
150.64101 416.561 l
149.321 415.481 l
149.201 415.36099 l
147.64101 414.521 l
145.961 414.041 l
144.161 413.80099 l
144.041 413.80099 l
142.241 414.041 l
140.561 414.521 l
140.44099 414.521 l
138.881 415.36099 l
138.881 415.481 l
137.561 416.561 l
136.481 417.881 l
136.36099 417.881 l
135.521 419.44099 l
135.521 419.561 l
134.92101 421.241 l
134.80099 423.041 l
f 
135.28101 423.041 m
134.80099 423.041 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 149.0806 420.8806 Tm
(-)Tj 
ET
1 1 1 scn
170.561 422.92101 m
170.80099 421.121 l
171.28101 419.44099 l
172.121 418.00101 l
173.201 416.561 l
174.521 415.481 l
176.08099 414.64101 l
177.761 414.161 l
179.561 413.92101 l
181.36099 414.161 l
183.161 414.64101 l
184.601 415.481 l
185.92101 416.561 l
187.121 418.00101 l
187.841 419.44099 l
188.44099 421.121 l
188.561 422.92101 l
188.44099 424.841 l
187.841 426.521 l
187.121 427.961 l
185.92101 429.401 l
184.601 430.481 l
183.161 431.321 l
181.36099 431.80099 l
179.561 431.92101 l
177.761 431.80099 l
176.08099 431.321 l
174.521 430.481 l
173.201 429.401 l
172.121 427.961 l
171.28101 426.521 l
170.80099 424.841 l
170.561 422.92101 l
f* 
0 0 0 scn
170.80099 423.041 m
171.041 421.241 l
171.521 419.561 l
172.36099 418.121 l
173.44099 416.681 l
173.44099 416.80099 l
174.761 415.72099 l
174.64101 415.72099 l
176.201 414.881 l
177.881 414.401 l
179.681 414.161 l
179.561 414.161 l
181.36099 414.401 l
183.161 414.881 l
183.041 414.881 l
184.481 415.72099 l
185.80099 416.80099 l
187.00101 418.241 l
186.881 418.121 l
187.601 419.561 l
188.201 421.241 l
188.201 421.121 l
188.321 422.92101 l
188.201 424.841 l
187.601 426.521 l
187.601 426.401 l
186.881 427.841 l
187.00101 427.841 l
185.80099 429.28101 l
184.481 430.36099 l
183.041 431.201 l
183.161 431.08099 l
181.36099 431.561 l
179.561 431.681 l
177.761 431.561 l
177.881 431.561 l
176.201 431.08099 l
174.64101 430.241 l
174.761 430.36099 l
173.44099 429.28101 l
172.36099 427.841 l
171.521 426.401 l
171.521 426.521 l
171.041 424.841 l
170.80099 422.92101 l
170.321 422.92101 l
170.561 424.841 l
170.561 424.961 l
171.041 426.64101 l
171.161 426.64101 l
172.00101 428.08099 l
173.08099 429.521 l
173.08099 429.64101 l
174.401 430.72099 l
175.961 431.561 l
176.08099 431.561 l
177.761 432.041 l
179.561 432.161 l
181.36099 432.041 l
181.481 432.041 l
183.28101 431.561 l
184.72099 430.72099 l
184.841 430.72099 l
186.161 429.64101 l
187.36099 428.201 l
187.36099 428.08099 l
188.08099 426.64101 l
188.681 424.961 l
188.681 424.841 l
188.80099 422.92101 l
188.681 421.121 l
188.08099 419.44099 l
188.08099 419.321 l
187.36099 417.881 l
186.161 416.44099 l
184.841 415.36099 l
184.72099 415.36099 l
183.28101 414.521 l
183.28101 414.401 l
181.481 413.92101 l
179.681 413.681 l
179.561 413.681 l
177.761 413.92101 l
176.08099 414.401 l
175.961 414.401 l
174.401 415.241 l
174.401 415.36099 l
173.08099 416.44099 l
172.00101 417.881 l
171.161 419.321 l
171.041 419.44099 l
170.561 421.121 l
170.321 422.92101 l
f 
170.80099 422.92101 m
170.80099 423.041 l
170.321 422.92101 l
f 
BT
0 14.39999 -14.39999 0 183.5206 421.0006 Tm
(-)Tj 
ET
143.92101 370.841 m
143.321 370.72099 l
142.72099 370.36099 l
142.36099 369.761 l
142.241 369.041 l
142.36099 368.44099 l
142.72099 367.841 l
143.321 367.481 l
143.92101 367.36099 l
144.64101 367.481 l
145.241 367.841 l
145.601 368.44099 l
145.72099 369.041 l
145.601 369.761 l
145.241 370.36099 l
144.64101 370.72099 l
143.92101 370.841 l
f* 
144.041 370.601 m
143.44099 370.481 l
143.44099 370.601 l
142.841 370.241 l
142.961 370.241 l
142.601 369.64101 l
142.601 369.761 l
142.481 369.041 l
142.481 369.161 l
142.601 368.561 l
142.961 367.961 l
142.841 368.08099 l
143.44099 367.72099 l
144.041 367.601 l
143.92101 367.601 l
144.64101 367.72099 l
144.521 367.72099 l
145.121 368.08099 l
145.121 367.961 l
145.481 368.561 l
145.36099 368.561 l
145.481 369.161 l
145.481 369.041 l
145.36099 369.761 l
145.481 369.64101 l
145.121 370.241 l
144.521 370.601 l
144.64101 370.481 l
143.92101 370.601 l
144.041 371.08099 l
144.761 370.961 l
145.36099 370.601 l
145.481 370.481 l
145.841 369.881 l
145.961 369.161 l
145.961 369.041 l
145.841 368.44099 l
145.841 368.321 l
145.481 367.72099 l
145.36099 367.72099 l
144.761 367.36099 l
144.761 367.241 l
144.041 367.121 l
143.92101 367.121 l
143.321 367.241 l
143.201 367.36099 l
142.601 367.72099 l
142.241 368.321 l
142.121 368.44099 l
142.00101 369.041 l
142.00101 369.161 l
142.121 369.881 l
142.241 369.881 l
142.601 370.481 l
142.601 370.601 l
143.201 370.961 l
143.321 370.961 l
143.92101 371.08099 l
f 
143.92101 370.601 m
144.041 370.601 l
143.92101 371.08099 l
144.041 371.08099 l
f 
179.681 370.961 m
179.08099 370.841 l
178.481 370.481 l
178.121 369.881 l
178.00101 369.28101 l
178.121 368.561 l
178.481 367.961 l
179.08099 367.601 l
179.681 367.481 l
180.401 367.601 l
181.00101 367.961 l
181.36099 368.561 l
181.481 369.28101 l
181.36099 369.881 l
181.00101 370.481 l
180.401 370.841 l
179.681 370.961 l
f* 
179.80099 370.72099 m
179.201 370.601 l
179.201 370.72099 l
178.601 370.36099 l
178.72099 370.36099 l
178.36099 369.761 l
178.36099 369.881 l
178.241 369.28101 l
178.241 369.401 l
178.36099 368.681 l
178.72099 368.08099 l
178.601 368.201 l
179.201 367.841 l
179.80099 367.72099 l
179.681 367.72099 l
180.401 367.841 l
180.28101 367.841 l
180.881 368.201 l
180.881 368.08099 l
181.241 368.681 l
181.121 368.681 l
181.241 369.401 l
181.241 369.28101 l
181.121 369.881 l
181.241 369.761 l
180.881 370.36099 l
180.28101 370.72099 l
180.401 370.601 l
179.681 370.72099 l
179.80099 371.201 l
180.521 371.08099 l
181.121 370.72099 l
181.241 370.601 l
181.601 370.00101 l
181.72099 369.401 l
181.72099 369.28101 l
181.601 368.561 l
181.601 368.44099 l
181.241 367.841 l
181.121 367.841 l
180.521 367.481 l
180.521 367.36099 l
179.80099 367.241 l
179.681 367.241 l
179.08099 367.36099 l
178.961 367.481 l
178.36099 367.841 l
178.00101 368.44099 l
177.881 368.561 l
177.761 369.28101 l
177.761 369.401 l
177.881 370.00101 l
178.00101 370.00101 l
178.36099 370.601 l
178.36099 370.72099 l
178.961 371.08099 l
179.08099 371.08099 l
179.681 371.201 l
f 
179.681 370.72099 m
179.80099 370.72099 l
179.681 371.201 l
179.80099 371.201 l
f 
215.92101 369.28101 m
215.80099 369.161 l
216.041 368.80099 l
216.161 368.92101 l
f 
288.401 423.28101 m
288.521 423.401 l
288.761 423.041 l
288.64101 422.92101 l
f 
215.92101 369.28101 m
216.161 368.92101 l
288.64101 422.92101 l
288.401 423.28101 l
f 
288.28101 368.92101 m
288.401 368.80099 l
288.64101 369.161 l
288.521 369.28101 l
f 
215.92101 422.92101 m
215.80099 423.041 l
216.041 423.401 l
216.161 423.28101 l
f 
288.28101 368.92101 m
288.521 369.28101 l
216.161 423.28101 l
215.92101 422.92101 l
f 
1 1 1 scn
207.041 423.041 m
207.161 421.241 l
207.761 419.561 l
208.601 418.00101 l
209.681 416.681 l
211.00101 415.601 l
212.561 414.761 l
214.241 414.28101 l
216.041 414.041 l
217.841 414.28101 l
219.521 414.761 l
221.08099 415.601 l
222.401 416.681 l
223.481 418.00101 l
224.321 419.561 l
224.80099 421.241 l
225.041 423.041 l
224.80099 424.841 l
224.321 426.521 l
223.481 428.08099 l
222.401 429.401 l
221.08099 430.481 l
219.521 431.321 l
217.841 431.80099 l
216.041 432.041 l
214.241 431.80099 l
212.561 431.321 l
211.00101 430.481 l
209.681 429.401 l
208.601 428.08099 l
207.761 426.521 l
207.161 424.841 l
207.041 423.041 l
f* 
0 0 0 scn
207.28101 423.041 m
207.401 421.241 l
207.401 421.36099 l
208.00101 419.681 l
208.841 418.121 l
208.841 418.241 l
209.92101 416.92101 l
211.241 415.841 l
211.121 415.841 l
212.681 415.00101 l
214.36099 414.521 l
216.161 414.28101 l
216.041 414.28101 l
217.841 414.521 l
219.521 415.00101 l
219.401 415.00101 l
220.961 415.841 l
222.28101 416.92101 l
223.36099 418.241 l
223.241 418.121 l
224.08099 419.681 l
224.561 421.36099 l
224.80099 423.161 l
224.80099 423.041 l
224.561 424.841 l
224.08099 426.521 l
224.08099 426.401 l
223.241 427.961 l
223.36099 427.961 l
222.28101 429.28101 l
220.961 430.36099 l
220.961 430.241 l
219.401 431.08099 l
219.521 431.08099 l
217.841 431.561 l
216.041 431.80099 l
216.161 431.80099 l
214.36099 431.561 l
212.681 431.08099 l
211.121 430.241 l
211.241 430.36099 l
209.92101 429.28101 l
208.841 427.961 l
208.00101 426.401 l
208.00101 426.521 l
207.401 424.841 l
207.28101 423.041 l
206.80099 423.041 l
206.92101 424.841 l
206.92101 424.961 l
207.521 426.64101 l
208.36099 428.201 l
208.481 428.321 l
209.561 429.64101 l
210.881 430.72099 l
212.44099 431.561 l
212.561 431.561 l
214.241 432.041 l
216.041 432.28101 l
216.161 432.28101 l
217.961 432.041 l
219.64101 431.561 l
221.201 430.72099 l
221.321 430.72099 l
222.64101 429.64101 l
223.72099 428.321 l
223.72099 428.201 l
224.561 426.64101 l
225.041 424.961 l
225.28101 423.161 l
225.28101 423.041 l
225.041 421.241 l
224.561 419.561 l
224.561 419.44099 l
223.72099 417.881 l
222.64101 416.561 l
221.321 415.481 l
221.201 415.36099 l
219.64101 414.521 l
217.961 414.041 l
216.161 413.80099 l
216.041 413.80099 l
214.241 414.041 l
212.561 414.521 l
212.44099 414.521 l
210.881 415.36099 l
210.881 415.481 l
209.561 416.561 l
208.481 417.881 l
208.36099 417.881 l
207.521 419.44099 l
207.521 419.561 l
206.92101 421.241 l
206.80099 423.041 l
f 
207.28101 423.041 m
206.80099 423.041 l
f 
BT
0 14.39999 -14.39999 0 221.0806 419.0806 Tm
(+)Tj 
ET
1 1 1 scn
242.561 422.92101 m
242.80099 421.121 l
243.28101 419.44099 l
244.121 418.00101 l
245.201 416.561 l
246.521 415.481 l
248.08099 414.64101 l
249.761 414.161 l
251.561 413.92101 l
253.36099 414.161 l
255.161 414.64101 l
256.601 415.481 l
257.92101 416.561 l
259.121 418.00101 l
259.841 419.44099 l
260.44099 421.121 l
260.561 422.92101 l
260.44099 424.841 l
259.841 426.521 l
259.121 427.961 l
257.92101 429.401 l
256.601 430.481 l
255.161 431.321 l
253.36099 431.80099 l
251.561 431.92101 l
249.761 431.80099 l
248.08099 431.321 l
246.521 430.481 l
245.201 429.401 l
244.121 427.961 l
243.28101 426.521 l
242.80099 424.841 l
242.561 422.92101 l
f* 
0 0 0 scn
242.80099 423.041 m
243.041 421.241 l
243.521 419.561 l
244.36099 418.121 l
245.44099 416.681 l
245.44099 416.80099 l
246.761 415.72099 l
246.64101 415.72099 l
248.201 414.881 l
249.881 414.401 l
251.681 414.161 l
251.561 414.161 l
253.36099 414.401 l
255.161 414.881 l
255.041 414.881 l
256.481 415.72099 l
257.80099 416.80099 l
259.00101 418.241 l
258.881 418.121 l
259.601 419.561 l
260.201 421.241 l
260.201 421.121 l
260.321 422.92101 l
260.201 424.841 l
259.601 426.521 l
259.601 426.401 l
258.881 427.841 l
259.00101 427.841 l
257.80099 429.28101 l
256.481 430.36099 l
255.041 431.201 l
255.161 431.08099 l
253.36099 431.561 l
251.561 431.681 l
249.761 431.561 l
249.881 431.561 l
248.201 431.08099 l
246.64101 430.241 l
246.761 430.36099 l
245.44099 429.28101 l
244.36099 427.841 l
243.521 426.401 l
243.521 426.521 l
243.041 424.841 l
242.80099 422.92101 l
242.321 422.92101 l
242.561 424.841 l
242.561 424.961 l
243.041 426.64101 l
243.161 426.64101 l
244.00101 428.08099 l
245.08099 429.521 l
245.08099 429.64101 l
246.401 430.72099 l
247.961 431.561 l
248.08099 431.561 l
249.761 432.041 l
251.561 432.161 l
253.36099 432.041 l
253.481 432.041 l
255.28101 431.561 l
256.72099 430.72099 l
256.841 430.72099 l
258.161 429.64101 l
259.36099 428.201 l
259.36099 428.08099 l
260.08099 426.64101 l
260.681 424.961 l
260.681 424.841 l
260.80099 422.92101 l
260.681 421.121 l
260.08099 419.44099 l
260.08099 419.321 l
259.36099 417.881 l
258.161 416.44099 l
256.841 415.36099 l
256.72099 415.36099 l
255.28101 414.521 l
255.28101 414.401 l
253.481 413.92101 l
251.681 413.681 l
251.561 413.681 l
249.761 413.92101 l
248.08099 414.401 l
247.961 414.401 l
246.401 415.241 l
246.401 415.36099 l
245.08099 416.44099 l
244.00101 417.881 l
243.161 419.321 l
243.041 419.44099 l
242.561 421.121 l
242.321 422.92101 l
f 
242.80099 422.92101 m
242.80099 423.041 l
242.321 422.92101 l
f 
BT
0 14.39999 -14.39999 0 255.5206 419.20061 Tm
(+)Tj 
ET
215.92101 370.841 m
215.321 370.72099 l
214.72099 370.36099 l
214.36099 369.761 l
214.241 369.041 l
214.36099 368.44099 l
214.72099 367.841 l
215.321 367.481 l
215.92101 367.36099 l
216.64101 367.481 l
217.241 367.841 l
217.601 368.44099 l
217.72099 369.041 l
217.601 369.761 l
217.241 370.36099 l
216.64101 370.72099 l
215.92101 370.841 l
f* 
216.041 370.601 m
215.44099 370.481 l
215.44099 370.601 l
214.841 370.241 l
214.961 370.241 l
214.601 369.64101 l
214.601 369.761 l
214.481 369.041 l
214.481 369.161 l
214.601 368.561 l
214.961 367.961 l
214.841 368.08099 l
215.44099 367.72099 l
216.041 367.601 l
215.92101 367.601 l
216.64101 367.72099 l
216.521 367.72099 l
217.121 368.08099 l
217.121 367.961 l
217.481 368.561 l
217.36099 368.561 l
217.481 369.161 l
217.481 369.041 l
217.36099 369.761 l
217.481 369.64101 l
217.121 370.241 l
216.521 370.601 l
216.64101 370.481 l
215.92101 370.601 l
216.041 371.08099 l
216.761 370.961 l
217.36099 370.601 l
217.481 370.481 l
217.841 369.881 l
217.961 369.161 l
217.961 369.041 l
217.841 368.44099 l
217.841 368.321 l
217.481 367.72099 l
217.36099 367.72099 l
216.761 367.36099 l
216.761 367.241 l
216.041 367.121 l
215.92101 367.121 l
215.321 367.241 l
215.201 367.36099 l
214.601 367.72099 l
214.241 368.321 l
214.121 368.44099 l
214.00101 369.041 l
214.00101 369.161 l
214.121 369.881 l
214.241 369.881 l
214.601 370.481 l
214.601 370.601 l
215.201 370.961 l
215.321 370.961 l
215.92101 371.08099 l
f 
215.92101 370.601 m
216.041 370.601 l
215.92101 371.08099 l
216.041 371.08099 l
f 
251.681 370.961 m
251.08099 370.841 l
250.481 370.481 l
250.121 369.881 l
250.00101 369.28101 l
250.121 368.561 l
250.481 367.961 l
251.08099 367.601 l
251.681 367.481 l
252.401 367.601 l
253.00101 367.961 l
253.36099 368.561 l
253.481 369.28101 l
253.36099 369.881 l
253.00101 370.481 l
252.401 370.841 l
251.681 370.961 l
f* 
251.80099 370.72099 m
251.201 370.601 l
251.201 370.72099 l
250.601 370.36099 l
250.72099 370.36099 l
250.36099 369.761 l
250.36099 369.881 l
250.241 369.28101 l
250.241 369.401 l
250.36099 368.681 l
250.72099 368.08099 l
250.601 368.201 l
251.201 367.841 l
251.80099 367.72099 l
251.681 367.72099 l
252.401 367.841 l
252.28101 367.841 l
252.881 368.201 l
252.881 368.08099 l
253.241 368.681 l
253.121 368.681 l
253.241 369.401 l
253.241 369.28101 l
253.121 369.881 l
253.241 369.761 l
252.881 370.36099 l
252.28101 370.72099 l
252.401 370.601 l
251.681 370.72099 l
251.80099 371.201 l
252.521 371.08099 l
253.121 370.72099 l
253.241 370.601 l
253.601 370.00101 l
253.72099 369.401 l
253.72099 369.28101 l
253.601 368.561 l
253.601 368.44099 l
253.241 367.841 l
253.121 367.841 l
252.521 367.481 l
252.521 367.36099 l
251.80099 367.241 l
251.681 367.241 l
251.08099 367.36099 l
250.961 367.481 l
250.36099 367.841 l
250.00101 368.44099 l
249.881 368.561 l
249.761 369.28101 l
249.761 369.401 l
249.881 370.00101 l
250.00101 370.00101 l
250.36099 370.601 l
250.36099 370.72099 l
250.961 371.08099 l
251.08099 371.08099 l
251.681 371.201 l
f 
251.681 370.72099 m
251.80099 370.72099 l
251.681 371.201 l
251.80099 371.201 l
f 
251.561 369.521 m
251.44099 369.401 l
251.681 369.041 l
251.80099 369.161 l
f 
324.401 423.28101 m
324.521 423.401 l
324.761 423.041 l
324.64101 422.92101 l
f 
251.561 369.521 m
251.80099 369.161 l
324.64101 422.92101 l
324.401 423.28101 l
f 
1 1 1 scn
279.521 423.041 m
279.64101 421.241 l
280.241 419.561 l
280.961 418.00101 l
282.161 416.681 l
283.481 415.601 l
284.92101 414.761 l
286.72099 414.28101 l
288.521 414.041 l
290.321 414.28101 l
292.00101 414.761 l
293.561 415.601 l
294.881 416.681 l
295.961 418.00101 l
296.80099 419.561 l
297.28101 421.241 l
297.521 423.041 l
297.28101 424.841 l
296.80099 426.521 l
295.961 428.08099 l
294.881 429.401 l
293.561 430.481 l
292.00101 431.321 l
290.321 431.80099 l
288.521 432.041 l
286.72099 431.80099 l
284.92101 431.321 l
283.481 430.481 l
282.161 429.401 l
280.961 428.08099 l
280.241 426.521 l
279.64101 424.841 l
279.521 423.041 l
f* 
0 0 0 scn
279.761 423.041 m
279.881 421.241 l
279.881 421.36099 l
280.481 419.681 l
281.201 418.121 l
281.201 418.241 l
282.401 416.92101 l
283.72099 415.841 l
283.601 415.841 l
285.041 415.00101 l
286.841 414.521 l
288.64101 414.28101 l
288.521 414.28101 l
290.321 414.521 l
292.00101 415.00101 l
291.881 415.00101 l
293.44099 415.841 l
294.761 416.92101 l
295.841 418.241 l
295.72099 418.121 l
296.561 419.681 l
297.041 421.36099 l
297.28101 423.161 l
297.28101 423.041 l
297.041 424.841 l
296.561 426.521 l
296.561 426.401 l
295.72099 427.961 l
295.841 427.961 l
294.761 429.28101 l
293.44099 430.36099 l
293.44099 430.241 l
291.881 431.08099 l
292.00101 431.08099 l
290.321 431.561 l
288.521 431.80099 l
288.64101 431.80099 l
286.841 431.561 l
285.041 431.08099 l
285.041 431.201 l
283.601 430.36099 l
283.72099 430.36099 l
282.401 429.28101 l
281.201 427.961 l
280.481 426.401 l
280.481 426.521 l
279.881 424.841 l
279.761 423.041 l
279.28101 423.041 l
279.401 424.841 l
279.401 424.961 l
280.00101 426.64101 l
280.72099 428.201 l
280.841 428.321 l
282.041 429.64101 l
283.36099 430.72099 l
284.80099 431.561 l
284.92101 431.561 l
286.72099 432.041 l
288.521 432.28101 l
288.64101 432.28101 l
290.44099 432.041 l
292.121 431.561 l
293.681 430.72099 l
293.80099 430.72099 l
295.121 429.64101 l
296.201 428.321 l
296.201 428.201 l
297.041 426.64101 l
297.521 424.961 l
297.761 423.161 l
297.761 423.041 l
297.521 421.241 l
297.041 419.561 l
297.041 419.44099 l
296.201 417.881 l
295.121 416.561 l
293.80099 415.481 l
293.681 415.36099 l
292.121 414.521 l
290.44099 414.041 l
288.64101 413.80099 l
288.521 413.80099 l
286.72099 414.041 l
284.92101 414.521 l
284.80099 414.64101 l
283.36099 415.481 l
282.041 416.561 l
280.841 417.881 l
280.72099 417.881 l
280.00101 419.44099 l
280.00101 419.561 l
279.401 421.241 l
279.28101 423.041 l
f 
279.761 423.041 m
279.28101 423.041 l
f 
BT
0 14.39999 -14.39999 0 293.56059 420.8806 Tm
(-)Tj 
ET
1 1 1 scn
315.041 422.92101 m
315.28101 421.121 l
315.761 419.44099 l
316.601 418.00101 l
317.681 416.561 l
319.00101 415.481 l
320.561 414.64101 l
322.241 414.161 l
324.041 413.92101 l
325.841 414.161 l
327.521 414.64101 l
329.08099 415.481 l
330.401 416.561 l
331.481 418.00101 l
332.321 419.44099 l
332.80099 421.121 l
333.041 422.92101 l
332.80099 424.841 l
332.321 426.521 l
331.481 427.961 l
330.401 429.401 l
329.08099 430.481 l
327.521 431.321 l
325.841 431.80099 l
324.041 431.92101 l
322.241 431.80099 l
320.561 431.321 l
319.00101 430.481 l
317.681 429.401 l
316.601 427.961 l
315.761 426.521 l
315.28101 424.841 l
315.041 422.92101 l
f* 
0 0 0 scn
315.28101 423.041 m
315.521 421.241 l
316.00101 419.561 l
316.841 418.121 l
317.92101 416.681 l
317.92101 416.80099 l
319.241 415.72099 l
319.121 415.72099 l
320.681 414.881 l
322.36099 414.401 l
324.161 414.161 l
324.041 414.161 l
325.841 414.401 l
327.521 414.881 l
327.401 414.881 l
328.961 415.72099 l
330.28101 416.80099 l
330.28101 416.681 l
331.36099 418.121 l
332.201 419.561 l
332.08099 419.561 l
332.561 421.241 l
332.80099 423.041 l
332.80099 422.92101 l
332.561 424.841 l
332.08099 426.521 l
332.201 426.401 l
331.36099 427.841 l
330.28101 429.28101 l
328.961 430.36099 l
328.961 430.241 l
327.401 431.08099 l
327.521 431.08099 l
325.841 431.561 l
324.041 431.681 l
322.241 431.561 l
322.36099 431.561 l
320.681 431.08099 l
319.121 430.241 l
319.241 430.36099 l
317.92101 429.28101 l
316.841 427.841 l
316.00101 426.401 l
316.00101 426.521 l
315.521 424.841 l
315.28101 422.92101 l
314.80099 422.92101 l
315.041 424.841 l
315.041 424.961 l
315.521 426.64101 l
315.64101 426.64101 l
316.481 428.08099 l
317.561 429.521 l
317.561 429.64101 l
318.881 430.72099 l
320.44099 431.561 l
320.561 431.561 l
322.241 432.041 l
324.041 432.161 l
325.841 432.041 l
325.961 432.041 l
327.64101 431.561 l
329.201 430.72099 l
329.321 430.72099 l
330.64101 429.64101 l
330.64101 429.521 l
331.72099 428.08099 l
332.561 426.64101 l
333.041 424.961 l
333.041 424.841 l
333.28101 422.92101 l
333.041 421.121 l
332.561 419.44099 l
332.561 419.321 l
331.72099 417.881 l
330.64101 416.44099 l
329.321 415.36099 l
329.201 415.241 l
327.64101 414.401 l
325.961 413.92101 l
324.161 413.681 l
324.041 413.681 l
322.241 413.92101 l
320.561 414.401 l
320.44099 414.401 l
318.881 415.241 l
318.881 415.36099 l
317.561 416.44099 l
316.481 417.881 l
315.64101 419.321 l
315.521 419.44099 l
315.041 421.121 l
314.80099 422.92101 l
f 
315.28101 422.92101 m
315.28101 423.041 l
314.80099 422.92101 l
f 
BT
0 14.39999 -14.39999 0 328.0006 421.0006 Tm
(-)Tj 
ET
288.401 370.841 m
287.681 370.72099 l
287.201 370.36099 l
286.841 369.761 l
286.72099 369.041 l
286.841 368.44099 l
287.201 367.841 l
287.681 367.481 l
288.401 367.36099 l
289.121 367.481 l
289.601 367.841 l
290.08099 368.44099 l
290.201 369.041 l
290.08099 369.761 l
289.601 370.36099 l
289.121 370.72099 l
288.401 370.841 l
f* 
288.521 370.601 m
287.80099 370.481 l
287.80099 370.601 l
287.321 370.241 l
287.44099 370.241 l
287.08099 369.64101 l
287.08099 369.761 l
286.961 369.041 l
286.961 369.161 l
287.08099 368.561 l
287.44099 367.961 l
287.321 368.08099 l
287.80099 367.72099 l
288.521 367.601 l
288.401 367.601 l
289.121 367.72099 l
289.00101 367.72099 l
289.481 368.08099 l
289.481 367.961 l
289.961 368.561 l
289.841 368.561 l
289.961 369.161 l
289.961 369.041 l
289.841 369.761 l
289.961 369.64101 l
289.481 370.241 l
289.00101 370.601 l
289.121 370.481 l
288.401 370.601 l
288.521 371.08099 l
289.241 370.961 l
289.72099 370.601 l
289.841 370.481 l
290.321 369.881 l
290.44099 369.161 l
290.44099 369.041 l
290.321 368.44099 l
290.321 368.321 l
289.841 367.72099 l
289.72099 367.72099 l
289.241 367.36099 l
289.241 367.241 l
288.521 367.121 l
288.401 367.121 l
287.681 367.241 l
287.561 367.36099 l
287.08099 367.72099 l
286.72099 368.321 l
286.601 368.44099 l
286.481 369.041 l
286.481 369.161 l
286.601 369.881 l
286.72099 369.881 l
287.08099 370.481 l
287.08099 370.601 l
287.561 370.961 l
287.681 370.961 l
288.401 371.08099 l
f 
288.401 370.601 m
288.521 370.601 l
288.401 371.08099 l
288.521 371.08099 l
f 
324.161 370.961 m
323.44099 370.841 l
322.961 370.481 l
322.601 369.881 l
322.36099 369.28101 l
322.601 368.561 l
322.961 367.961 l
323.44099 367.601 l
324.161 367.481 l
324.881 367.601 l
325.36099 367.961 l
325.72099 368.561 l
325.961 369.28101 l
325.72099 369.881 l
325.36099 370.481 l
324.881 370.841 l
324.161 370.961 l
f* 
324.28101 370.72099 m
323.561 370.601 l
323.561 370.72099 l
323.08099 370.36099 l
323.201 370.36099 l
322.841 369.761 l
322.841 369.881 l
322.601 369.28101 l
322.601 369.401 l
322.841 368.681 l
323.201 368.08099 l
323.08099 368.201 l
323.561 367.841 l
324.28101 367.72099 l
324.161 367.72099 l
324.881 367.841 l
324.761 367.841 l
325.241 368.201 l
325.241 368.08099 l
325.601 368.681 l
325.481 368.681 l
325.72099 369.401 l
325.72099 369.28101 l
325.481 369.881 l
325.601 369.761 l
325.241 370.36099 l
324.761 370.72099 l
324.881 370.601 l
324.161 370.72099 l
324.28101 371.201 l
325.00101 371.08099 l
325.481 370.72099 l
325.601 370.601 l
325.961 370.00101 l
326.201 369.401 l
326.201 369.28101 l
325.961 368.561 l
325.961 368.44099 l
325.601 367.841 l
325.481 367.841 l
325.00101 367.481 l
325.00101 367.36099 l
324.28101 367.241 l
324.161 367.241 l
323.44099 367.36099 l
323.321 367.481 l
322.841 367.841 l
322.481 368.44099 l
322.36099 368.561 l
322.121 369.28101 l
322.121 369.401 l
322.36099 370.00101 l
322.481 370.00101 l
322.841 370.601 l
322.841 370.72099 l
323.321 371.08099 l
323.44099 371.08099 l
324.161 371.201 l
f 
324.161 370.72099 m
324.28101 370.72099 l
324.161 371.201 l
324.28101 371.201 l
f 
72.041 513.28101 m
71.80099 513.28101 l
71.92101 512.80099 l
72.161 512.80099 l
f 
216.041 567.28101 m
216.28101 567.28101 l
216.401 566.80099 l
216.161 566.80099 l
f 
72.041 513.28101 m
72.161 512.80099 l
216.161 566.80099 l
216.041 567.28101 l
f 
143.92101 513.401 m
143.681 513.401 l
143.80099 512.92101 l
144.041 512.92101 l
f 
288.521 567.28101 m
288.761 567.28101 l
288.881 566.80099 l
288.64101 566.80099 l
f 
143.92101 513.401 m
144.041 512.92101 l
288.64101 566.80099 l
288.521 567.28101 l
f 
1 1 1 scn
63.041 567.041 m
63.161 565.241 l
63.761 563.561 l
64.601 562.00101 l
65.681 560.681 l
67.00101 559.601 l
68.561 558.761 l
70.241 558.28101 l
72.041 558.041 l
73.841 558.28101 l
75.521 558.761 l
77.08099 559.601 l
78.401 560.681 l
79.481 562.00101 l
80.321 563.561 l
80.80099 565.241 l
81.041 567.041 l
80.80099 568.841 l
80.321 570.521 l
79.481 572.08099 l
78.401 573.401 l
77.08099 574.481 l
75.521 575.321 l
73.841 575.92101 l
72.041 576.041 l
70.241 575.92101 l
68.561 575.321 l
67.00101 574.481 l
65.681 573.401 l
64.601 572.08099 l
63.761 570.521 l
63.161 568.841 l
63.041 567.041 l
f* 
0 0 0 scn
63.28101 567.041 m
63.401 565.241 l
63.401 565.36099 l
64.00101 563.681 l
64.841 562.121 l
64.841 562.241 l
65.92101 560.92101 l
67.241 559.841 l
67.121 559.841 l
68.681 559.00101 l
70.36099 558.521 l
72.161 558.28101 l
72.041 558.28101 l
73.841 558.521 l
75.521 559.00101 l
75.401 559.00101 l
76.961 559.841 l
78.28101 560.92101 l
79.36099 562.241 l
79.241 562.121 l
80.08099 563.681 l
80.561 565.36099 l
80.80099 567.161 l
80.80099 567.041 l
80.561 568.841 l
80.08099 570.521 l
80.08099 570.401 l
79.241 571.961 l
79.36099 571.961 l
78.28101 573.28101 l
76.961 574.36099 l
76.961 574.241 l
75.401 575.08099 l
75.521 575.08099 l
73.841 575.681 l
72.041 575.80099 l
70.241 575.681 l
70.36099 575.681 l
68.681 575.08099 l
67.121 574.241 l
67.241 574.36099 l
65.92101 573.28101 l
64.841 571.961 l
64.00101 570.401 l
64.00101 570.521 l
63.401 568.841 l
63.28101 567.041 l
62.80099 567.041 l
62.92101 568.841 l
62.92101 568.961 l
63.521 570.64101 l
64.36099 572.201 l
64.481 572.321 l
65.561 573.64101 l
66.881 574.72099 l
68.44099 575.561 l
68.561 575.561 l
70.241 576.161 l
72.041 576.28101 l
73.841 576.161 l
73.961 576.161 l
75.64101 575.561 l
77.201 574.72099 l
77.321 574.72099 l
78.64101 573.64101 l
79.72099 572.321 l
79.72099 572.201 l
80.561 570.64101 l
81.041 568.961 l
81.28101 567.161 l
81.28101 567.041 l
81.041 565.241 l
80.561 563.561 l
80.561 563.44099 l
79.72099 561.881 l
78.64101 560.561 l
77.321 559.481 l
77.201 559.36099 l
75.64101 558.521 l
73.961 558.041 l
72.161 557.80099 l
72.041 557.80099 l
70.241 558.041 l
68.561 558.521 l
68.44099 558.521 l
66.881 559.36099 l
66.881 559.481 l
65.561 560.561 l
64.481 561.881 l
64.36099 561.881 l
63.521 563.44099 l
63.521 563.561 l
62.92101 565.241 l
62.80099 567.041 l
f 
63.28101 567.041 m
62.80099 567.041 l
f 
BT
0 14.39999 -14.39999 0 77.0806 563.0806 Tm
(+)Tj 
ET
1 1 1 scn
98.561 567.041 m
98.80099 565.121 l
99.28101 563.44099 l
100.121 562.00101 l
101.201 560.561 l
102.521 559.481 l
104.08099 558.64101 l
105.761 558.161 l
107.561 558.041 l
109.36099 558.161 l
111.041 558.64101 l
112.601 559.481 l
113.92101 560.561 l
115.00101 562.00101 l
115.841 563.44099 l
116.44099 565.121 l
116.561 567.041 l
116.44099 568.841 l
115.841 570.521 l
115.00101 571.961 l
113.92101 573.401 l
112.601 574.481 l
111.041 575.321 l
109.36099 575.80099 l
107.561 576.041 l
105.761 575.80099 l
104.08099 575.321 l
102.521 574.481 l
101.201 573.401 l
100.121 571.961 l
99.28101 570.521 l
98.80099 568.841 l
98.561 567.041 l
f* 
0 0 0 scn
98.80099 567.041 m
99.041 565.121 l
99.041 565.241 l
99.521 563.561 l
100.36099 562.121 l
101.44099 560.681 l
101.44099 560.80099 l
102.761 559.72099 l
102.64101 559.72099 l
104.201 558.881 l
105.881 558.401 l
105.761 558.401 l
107.561 558.28101 l
109.36099 558.401 l
111.041 558.881 l
110.92101 558.881 l
112.481 559.72099 l
113.80099 560.80099 l
113.80099 560.681 l
114.881 562.121 l
115.72099 563.561 l
115.601 563.561 l
116.201 565.241 l
116.201 565.121 l
116.321 567.041 l
116.201 568.841 l
115.601 570.521 l
115.72099 570.401 l
114.881 571.841 l
113.80099 573.28101 l
112.481 574.36099 l
112.481 574.241 l
110.92101 575.08099 l
111.041 575.08099 l
109.36099 575.561 l
107.561 575.80099 l
107.681 575.80099 l
105.881 575.561 l
104.201 575.08099 l
102.64101 574.241 l
102.761 574.36099 l
101.44099 573.28101 l
100.36099 571.841 l
99.521 570.401 l
99.521 570.521 l
99.041 568.841 l
98.80099 567.041 l
98.321 567.161 l
98.561 568.961 l
99.041 570.64101 l
99.161 570.64101 l
100.00101 572.08099 l
101.08099 573.521 l
101.08099 573.64101 l
102.401 574.72099 l
103.961 575.561 l
104.08099 575.561 l
105.761 576.041 l
107.561 576.28101 l
107.681 576.28101 l
109.481 576.041 l
111.161 575.561 l
112.72099 574.72099 l
112.841 574.72099 l
114.161 573.64101 l
114.161 573.521 l
115.241 572.08099 l
116.08099 570.64101 l
116.681 568.961 l
116.681 568.841 l
116.80099 567.041 l
116.681 565.121 l
116.08099 563.44099 l
116.08099 563.321 l
115.241 561.881 l
114.161 560.44099 l
112.841 559.36099 l
112.72099 559.241 l
111.161 558.401 l
109.481 557.92101 l
109.36099 557.92101 l
107.561 557.80099 l
105.761 557.92101 l
104.08099 558.401 l
103.961 558.401 l
102.401 559.241 l
102.401 559.36099 l
101.08099 560.44099 l
100.00101 561.881 l
99.161 563.321 l
99.041 563.44099 l
98.561 565.121 l
98.321 567.041 l
f 
98.80099 567.041 m
98.321 567.041 l
98.321 567.161 l
f 
BT
0 14.39999 -14.39999 0 111.5206 563.20061 Tm
(+)Tj 
ET
1 1 1 scn
243.041 486.401 m
243.28101 484.601 l
243.761 482.80099 l
244.601 481.36099 l
245.681 480.041 l
247.00101 478.841 l
248.561 478.121 l
250.241 477.521 l
252.041 477.401 l
253.841 477.521 l
255.521 478.121 l
257.08099 478.841 l
258.401 480.041 l
259.481 481.36099 l
260.321 482.80099 l
260.80099 484.601 l
261.041 486.401 l
260.80099 488.201 l
260.321 489.881 l
259.481 491.44099 l
258.401 492.761 l
257.08099 493.841 l
255.521 494.681 l
253.841 495.161 l
252.041 495.401 l
250.241 495.161 l
248.561 494.681 l
247.00101 493.841 l
245.681 492.761 l
244.601 491.44099 l
243.761 489.881 l
243.28101 488.201 l
243.041 486.401 l
f* 
0 0 0 scn
243.28101 486.521 m
243.521 484.72099 l
244.00101 482.92101 l
244.841 481.481 l
244.841 481.601 l
245.92101 480.28101 l
247.241 479.08099 l
247.121 479.08099 l
248.681 478.36099 l
250.36099 477.761 l
250.241 477.761 l
252.041 477.64101 l
253.841 477.761 l
255.521 478.36099 l
255.401 478.36099 l
256.961 479.08099 l
258.28101 480.28101 l
259.36099 481.601 l
259.36099 481.481 l
260.201 482.92101 l
260.08099 482.92101 l
260.561 484.72099 l
260.80099 486.521 l
260.80099 486.401 l
260.561 488.201 l
260.08099 489.881 l
260.08099 489.761 l
259.241 491.321 l
259.36099 491.321 l
258.28101 492.64101 l
256.961 493.72099 l
256.961 493.601 l
255.401 494.44099 l
255.521 494.44099 l
253.841 494.92101 l
252.041 495.161 l
252.161 495.161 l
250.36099 494.92101 l
248.681 494.44099 l
247.121 493.601 l
247.241 493.72099 l
245.92101 492.64101 l
244.841 491.321 l
244.00101 489.761 l
244.00101 489.881 l
243.521 488.201 l
243.28101 486.401 l
242.80099 486.521 l
243.041 488.321 l
243.521 490.00101 l
244.36099 491.561 l
244.481 491.681 l
245.561 493.00101 l
246.881 494.08099 l
248.44099 494.92101 l
248.561 494.92101 l
250.241 495.401 l
252.041 495.64101 l
252.161 495.64101 l
253.961 495.401 l
255.64101 494.92101 l
257.201 494.08099 l
257.321 494.08099 l
258.64101 493.00101 l
259.72099 491.681 l
259.72099 491.561 l
260.561 490.00101 l
261.041 488.321 l
261.28101 486.521 l
261.28101 486.401 l
261.041 484.601 l
260.561 482.80099 l
260.561 482.681 l
259.72099 481.241 l
258.64101 479.92101 l
257.321 478.72099 l
257.201 478.601 l
255.64101 477.881 l
253.961 477.28101 l
253.841 477.28101 l
252.041 477.161 l
250.241 477.28101 l
248.561 477.881 l
248.44099 477.881 l
246.881 478.601 l
246.881 478.72099 l
245.561 479.92101 l
244.481 481.241 l
243.64101 482.681 l
243.521 482.80099 l
243.041 484.601 l
242.80099 486.401 l
f 
243.28101 486.401 m
243.28101 486.521 l
242.80099 486.401 l
242.80099 486.521 l
f 
BT
0 14.39999 -14.39999 0 257.0806 482.92059 Tm
(*)Tj 
ET
243.28101 486.041 0.24001 0.48 rf
234.401 486.521 8.88 -0.48 rf
234.401 465.881 0.48 -0.24001 rf
234.401 465.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 234.8806 450.1606 Tm
(w)Tj 
0 6.36 -6.36 0 237.4006 457.6006 Tm
(4)Tj 
0.283 0.94341 TD
(1)Tj 
ET
1 1 1 scn
279.041 486.401 m
279.28101 484.601 l
279.761 482.80099 l
280.601 481.36099 l
281.681 480.041 l
283.00101 478.841 l
284.561 478.121 l
286.241 477.521 l
288.041 477.401 l
289.841 477.521 l
291.521 478.121 l
293.08099 478.841 l
294.401 480.041 l
295.481 481.36099 l
296.321 482.80099 l
296.80099 484.601 l
297.041 486.401 l
296.80099 488.201 l
296.321 489.881 l
295.481 491.44099 l
294.401 492.761 l
293.08099 493.841 l
291.521 494.681 l
289.841 495.161 l
288.041 495.401 l
286.241 495.161 l
284.561 494.681 l
283.00101 493.841 l
281.681 492.761 l
280.601 491.44099 l
279.761 489.881 l
279.28101 488.201 l
279.041 486.401 l
f* 
0 0 0 scn
279.28101 486.521 m
279.521 484.72099 l
280.00101 482.92101 l
280.841 481.481 l
280.841 481.601 l
281.92101 480.28101 l
283.241 479.08099 l
283.121 479.08099 l
284.681 478.36099 l
286.36099 477.761 l
286.241 477.761 l
288.041 477.64101 l
289.841 477.761 l
291.521 478.36099 l
291.401 478.36099 l
292.961 479.08099 l
294.28101 480.28101 l
295.36099 481.601 l
295.36099 481.481 l
296.201 482.92101 l
296.08099 482.92101 l
296.561 484.72099 l
296.80099 486.521 l
296.80099 486.401 l
296.561 488.201 l
296.08099 489.881 l
296.08099 489.761 l
295.241 491.321 l
295.36099 491.321 l
294.28101 492.64101 l
292.961 493.72099 l
292.961 493.601 l
291.401 494.44099 l
291.521 494.44099 l
289.841 494.92101 l
288.041 495.161 l
288.161 495.161 l
286.36099 494.92101 l
284.681 494.44099 l
283.121 493.601 l
283.241 493.72099 l
281.92101 492.64101 l
280.841 491.321 l
280.00101 489.761 l
280.00101 489.881 l
279.521 488.201 l
279.28101 486.401 l
278.80099 486.521 l
279.041 488.321 l
279.521 490.00101 l
280.36099 491.561 l
280.481 491.681 l
281.561 493.00101 l
282.881 494.08099 l
284.44099 494.92101 l
284.561 494.92101 l
286.241 495.401 l
288.041 495.64101 l
288.161 495.64101 l
289.961 495.401 l
291.64101 494.92101 l
293.201 494.08099 l
293.321 494.08099 l
294.64101 493.00101 l
295.72099 491.681 l
295.72099 491.561 l
296.561 490.00101 l
297.041 488.321 l
297.28101 486.521 l
297.28101 486.401 l
297.041 484.601 l
296.561 482.80099 l
296.561 482.681 l
295.72099 481.241 l
294.64101 479.92101 l
293.321 478.72099 l
293.201 478.601 l
291.64101 477.881 l
289.961 477.28101 l
289.841 477.28101 l
288.041 477.161 l
286.241 477.28101 l
284.561 477.881 l
284.44099 477.881 l
282.881 478.601 l
282.881 478.72099 l
281.561 479.92101 l
280.481 481.241 l
279.64101 482.681 l
279.521 482.80099 l
279.041 484.601 l
278.80099 486.401 l
f 
279.28101 486.401 m
279.28101 486.521 l
278.80099 486.401 l
278.80099 486.521 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 293.0806 482.92059 Tm
(*)Tj 
ET
279.28101 486.041 0.24001 0.48 rf
270.401 486.521 8.88 -0.48 rf
270.401 465.881 0.48 -0.24001 rf
270.401 465.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 270.8806 450.1606 Tm
(w)Tj 
0 6.36 -6.36 0 273.4006 457.6006 Tm
(4)Tj 
0.283 0.94341 TD
(2)Tj 
ET
1 1 1 scn
315.041 486.401 m
315.28101 484.601 l
315.761 482.80099 l
316.601 481.36099 l
317.681 480.041 l
319.00101 478.841 l
320.561 478.121 l
322.241 477.521 l
324.041 477.401 l
325.841 477.521 l
327.521 478.121 l
329.08099 478.841 l
330.401 480.041 l
331.481 481.36099 l
332.321 482.80099 l
332.80099 484.601 l
333.041 486.401 l
332.80099 488.201 l
332.321 489.881 l
331.481 491.44099 l
330.401 492.761 l
329.08099 493.841 l
327.521 494.681 l
325.841 495.161 l
324.041 495.401 l
322.241 495.161 l
320.561 494.681 l
319.00101 493.841 l
317.681 492.761 l
316.601 491.44099 l
315.761 489.881 l
315.28101 488.201 l
315.041 486.401 l
f* 
0 0 0 scn
315.28101 486.521 m
315.521 484.72099 l
316.00101 482.92101 l
316.841 481.481 l
316.841 481.601 l
317.92101 480.28101 l
319.241 479.08099 l
319.121 479.08099 l
320.681 478.36099 l
322.36099 477.761 l
322.241 477.761 l
324.041 477.64101 l
325.841 477.761 l
327.521 478.36099 l
327.401 478.36099 l
328.961 479.08099 l
330.28101 480.28101 l
331.36099 481.601 l
331.36099 481.481 l
332.201 482.92101 l
332.08099 482.92101 l
332.561 484.72099 l
332.80099 486.521 l
332.80099 486.401 l
332.561 488.201 l
332.08099 489.881 l
332.08099 489.761 l
331.241 491.321 l
331.36099 491.321 l
330.28101 492.64101 l
328.961 493.72099 l
328.961 493.601 l
327.401 494.44099 l
327.521 494.44099 l
325.841 494.92101 l
324.041 495.161 l
324.161 495.161 l
322.36099 494.92101 l
320.681 494.44099 l
319.121 493.601 l
319.241 493.72099 l
317.92101 492.64101 l
316.841 491.321 l
316.00101 489.761 l
316.00101 489.881 l
315.521 488.201 l
315.28101 486.401 l
314.80099 486.521 l
315.041 488.321 l
315.521 490.00101 l
316.36099 491.561 l
316.481 491.681 l
317.561 493.00101 l
318.881 494.08099 l
320.44099 494.92101 l
320.561 494.92101 l
322.241 495.401 l
324.041 495.64101 l
324.161 495.64101 l
325.961 495.401 l
327.64101 494.92101 l
329.201 494.08099 l
329.321 494.08099 l
330.64101 493.00101 l
331.72099 491.681 l
331.72099 491.561 l
332.561 490.00101 l
333.041 488.321 l
333.28101 486.521 l
333.28101 486.401 l
333.041 484.601 l
332.561 482.80099 l
332.561 482.681 l
331.72099 481.241 l
330.64101 479.92101 l
329.321 478.72099 l
329.201 478.601 l
327.64101 477.881 l
325.961 477.28101 l
325.841 477.28101 l
324.041 477.161 l
322.241 477.28101 l
320.561 477.881 l
320.44099 477.881 l
318.881 478.601 l
318.881 478.72099 l
317.561 479.92101 l
316.481 481.241 l
315.64101 482.681 l
315.521 482.80099 l
315.041 484.601 l
314.80099 486.401 l
f 
315.28101 486.401 m
315.28101 486.521 l
314.80099 486.401 l
314.80099 486.521 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 329.0806 482.92059 Tm
(*)Tj 
ET
315.28101 486.041 0.24001 0.48 rf
306.401 486.521 8.88 -0.48 rf
306.401 465.881 0.48 -0.24001 rf
306.401 465.881 0.48 20.39999 rf
BT
/N54 1 Tf
0 12 -12 0 306.8806 450.1606 Tm
(w)Tj 
0 6.36 -6.36 0 309.4006 457.6006 Tm
(4)Tj 
0.283 0.94341 TD
(3)Tj 
ET
1 1 1 scn
207.041 486.161 m
207.161 484.36099 l
207.761 482.681 l
208.601 481.121 l
209.681 479.80099 l
211.00101 478.72099 l
212.561 477.881 l
214.241 477.401 l
216.041 477.161 l
217.841 477.401 l
219.521 477.881 l
221.08099 478.72099 l
222.401 479.80099 l
223.481 481.121 l
224.321 482.681 l
224.80099 484.36099 l
225.041 486.161 l
224.80099 487.961 l
224.321 489.761 l
223.481 491.201 l
222.401 492.521 l
221.08099 493.72099 l
219.521 494.44099 l
217.841 495.041 l
216.041 495.161 l
214.241 495.041 l
212.561 494.44099 l
211.00101 493.72099 l
209.681 492.521 l
208.601 491.201 l
207.761 489.761 l
207.161 487.961 l
207.041 486.161 l
f* 
0 0 0 scn
207.28101 486.161 m
207.401 484.36099 l
207.401 484.481 l
208.00101 482.80099 l
208.841 481.241 l
208.841 481.36099 l
209.92101 480.041 l
211.241 478.961 l
211.121 478.961 l
212.681 478.121 l
214.36099 477.64101 l
216.161 477.401 l
216.041 477.401 l
217.841 477.64101 l
219.521 478.121 l
219.401 478.121 l
220.961 478.961 l
222.28101 480.041 l
223.36099 481.36099 l
223.241 481.241 l
224.08099 482.80099 l
224.561 484.481 l
224.80099 486.28101 l
224.80099 486.161 l
224.561 487.961 l
224.08099 489.761 l
224.201 489.64101 l
223.36099 491.08099 l
222.28101 492.401 l
220.961 493.601 l
220.961 493.481 l
219.401 494.201 l
219.521 494.201 l
217.841 494.80099 l
216.041 494.92101 l
214.241 494.80099 l
214.36099 494.80099 l
212.681 494.201 l
211.121 493.481 l
211.241 493.601 l
209.92101 492.401 l
208.841 491.08099 l
208.00101 489.64101 l
208.00101 489.761 l
207.401 487.961 l
207.28101 486.161 l
206.80099 486.161 l
206.92101 487.961 l
206.92101 488.08099 l
207.521 489.881 l
207.64101 489.881 l
208.481 491.321 l
208.481 491.44099 l
209.561 492.761 l
210.881 493.961 l
212.44099 494.681 l
212.561 494.681 l
214.241 495.28101 l
216.041 495.401 l
217.841 495.28101 l
217.961 495.28101 l
219.64101 494.681 l
221.201 493.961 l
221.321 493.961 l
222.64101 492.761 l
223.72099 491.44099 l
223.72099 491.321 l
224.561 489.881 l
225.041 488.08099 l
225.28101 486.28101 l
225.28101 486.161 l
225.041 484.36099 l
224.561 482.681 l
224.561 482.561 l
223.72099 481.00101 l
222.64101 479.681 l
221.321 478.601 l
221.201 478.481 l
219.64101 477.64101 l
217.961 477.161 l
216.161 476.92101 l
216.041 476.92101 l
214.241 477.161 l
212.561 477.64101 l
212.44099 477.64101 l
210.881 478.481 l
210.881 478.601 l
209.561 479.681 l
208.481 481.00101 l
208.36099 481.00101 l
207.521 482.561 l
207.521 482.681 l
206.92101 484.36099 l
206.80099 486.161 l
f 
207.28101 486.161 m
206.80099 486.161 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 221.0806 482.8006 Tm
(*)Tj 
ET
207.28101 485.80099 0.24001 0.48 rf
198.401 486.28101 8.88 -0.48 rf
198.401 465.761 0.48 -0.24001 rf
198.401 465.761 0.48 20.28 rf
BT
/N54 1 Tf
0 12 -12 0 198.8806 450.0406 Tm
(w)Tj 
0 6.36 -6.36 0 201.4006 457.3606 Tm
(4)Tj 
0.3019 0.94341 TD
(0)Tj 
ET
71.92101 514.841 m
71.321 514.72099 l
70.72099 514.36099 l
70.36099 513.761 l
70.241 513.161 l
70.36099 512.44099 l
70.72099 511.841 l
71.321 511.481 l
71.92101 511.36099 l
72.64101 511.481 l
73.241 511.841 l
73.601 512.44099 l
73.72099 513.161 l
73.601 513.761 l
73.241 514.36099 l
72.64101 514.72099 l
71.92101 514.841 l
f* 
72.041 514.601 m
71.44099 514.481 l
71.44099 514.601 l
70.841 514.241 l
70.961 514.241 l
70.601 513.64101 l
70.601 513.761 l
70.481 513.161 l
70.481 513.28101 l
70.601 512.561 l
70.961 511.961 l
70.841 512.08099 l
71.44099 511.72099 l
72.041 511.601 l
71.92101 511.601 l
72.64101 511.72099 l
72.521 511.72099 l
73.121 512.08099 l
73.121 511.961 l
73.481 512.561 l
73.36099 512.561 l
73.481 513.28101 l
73.481 513.161 l
73.36099 513.761 l
73.481 513.64101 l
73.121 514.241 l
72.521 514.601 l
72.64101 514.481 l
71.92101 514.601 l
72.041 515.08099 l
72.761 514.961 l
73.36099 514.601 l
73.481 514.481 l
73.841 513.881 l
73.961 513.28101 l
73.961 513.161 l
73.841 512.44099 l
73.841 512.321 l
73.481 511.72099 l
73.36099 511.72099 l
72.761 511.36099 l
72.761 511.241 l
72.041 511.121 l
71.92101 511.121 l
71.321 511.241 l
71.201 511.36099 l
70.601 511.72099 l
70.241 512.321 l
70.121 512.44099 l
70.00101 513.161 l
70.00101 513.28101 l
70.121 513.881 l
70.241 513.881 l
70.601 514.481 l
70.601 514.601 l
71.201 514.961 l
71.321 514.961 l
71.92101 515.08099 l
f 
71.92101 514.601 m
72.041 514.601 l
71.92101 515.08099 l
72.041 515.08099 l
f 
107.681 514.961 m
107.08099 514.841 l
106.481 514.481 l
106.121 513.881 l
106.00101 513.28101 l
106.121 512.561 l
106.481 511.961 l
107.08099 511.601 l
107.681 511.481 l
108.401 511.601 l
109.00101 511.961 l
109.36099 512.561 l
109.481 513.28101 l
109.36099 513.881 l
109.00101 514.481 l
108.401 514.841 l
107.681 514.961 l
f* 
107.80099 514.72099 m
107.201 514.601 l
107.201 514.72099 l
106.601 514.36099 l
106.72099 514.36099 l
106.36099 513.761 l
106.36099 513.881 l
106.241 513.28101 l
106.241 513.401 l
106.36099 512.681 l
106.72099 512.08099 l
106.601 512.201 l
107.201 511.841 l
107.80099 511.72099 l
107.681 511.72099 l
108.401 511.841 l
108.28101 511.841 l
108.881 512.201 l
108.881 512.08099 l
109.241 512.681 l
109.121 512.681 l
109.241 513.401 l
109.241 513.28101 l
109.121 513.881 l
109.241 513.761 l
108.881 514.36099 l
108.28101 514.72099 l
108.401 514.601 l
107.681 514.72099 l
107.80099 515.201 l
108.521 515.08099 l
109.121 514.72099 l
109.241 514.601 l
109.601 514.00101 l
109.72099 513.401 l
109.72099 513.28101 l
109.601 512.561 l
109.601 512.44099 l
109.241 511.841 l
109.121 511.841 l
108.521 511.481 l
108.521 511.36099 l
107.80099 511.241 l
107.681 511.241 l
107.08099 511.36099 l
106.961 511.481 l
106.36099 511.841 l
106.00101 512.44099 l
105.881 512.561 l
105.761 513.28101 l
105.761 513.401 l
105.881 514.00101 l
106.00101 514.00101 l
106.36099 514.601 l
106.36099 514.72099 l
106.961 515.08099 l
107.08099 515.08099 l
107.681 515.201 l
f 
107.681 514.72099 m
107.80099 514.72099 l
107.681 515.201 l
107.80099 515.201 l
f 
107.681 513.521 m
107.44099 513.521 l
107.561 513.041 l
107.80099 513.041 l
f 
251.561 567.28101 m
251.80099 567.28101 l
251.92101 566.80099 l
251.681 566.80099 l
f 
107.681 513.521 m
107.80099 513.041 l
251.681 566.80099 l
251.561 567.28101 l
f 
1 1 1 scn
135.041 567.041 m
135.161 565.241 l
135.761 563.561 l
136.601 562.00101 l
137.681 560.681 l
139.00101 559.601 l
140.561 558.761 l
142.241 558.28101 l
144.041 558.041 l
145.841 558.28101 l
147.521 558.761 l
149.08099 559.601 l
150.401 560.681 l
151.481 562.00101 l
152.321 563.561 l
152.80099 565.241 l
153.041 567.041 l
152.80099 568.841 l
152.321 570.521 l
151.481 572.08099 l
150.401 573.401 l
149.08099 574.481 l
147.521 575.321 l
145.841 575.92101 l
144.041 576.041 l
142.241 575.92101 l
140.561 575.321 l
139.00101 574.481 l
137.681 573.401 l
136.601 572.08099 l
135.761 570.521 l
135.161 568.841 l
135.041 567.041 l
f* 
0 0 0 scn
135.28101 567.041 m
135.401 565.241 l
135.401 565.36099 l
136.00101 563.681 l
136.841 562.121 l
136.841 562.241 l
137.92101 560.92101 l
139.241 559.841 l
139.121 559.841 l
140.681 559.00101 l
142.36099 558.521 l
144.161 558.28101 l
144.041 558.28101 l
145.841 558.521 l
147.521 559.00101 l
147.401 559.00101 l
148.961 559.841 l
150.28101 560.92101 l
151.36099 562.241 l
151.241 562.121 l
152.08099 563.681 l
152.561 565.36099 l
152.80099 567.161 l
152.80099 567.041 l
152.561 568.841 l
152.08099 570.521 l
152.08099 570.401 l
151.241 571.961 l
151.36099 571.961 l
150.28101 573.28101 l
148.961 574.36099 l
148.961 574.241 l
147.401 575.08099 l
147.521 575.08099 l
145.841 575.681 l
144.041 575.80099 l
142.241 575.681 l
142.36099 575.681 l
140.681 575.08099 l
139.121 574.241 l
139.241 574.36099 l
137.92101 573.28101 l
136.841 571.961 l
136.00101 570.401 l
136.00101 570.521 l
135.401 568.841 l
135.28101 567.041 l
134.80099 567.041 l
134.92101 568.841 l
134.92101 568.961 l
135.521 570.64101 l
136.36099 572.201 l
136.481 572.321 l
137.561 573.64101 l
138.881 574.72099 l
140.44099 575.561 l
140.561 575.561 l
142.241 576.161 l
144.041 576.28101 l
145.841 576.161 l
145.961 576.161 l
147.64101 575.561 l
149.201 574.72099 l
149.321 574.72099 l
150.64101 573.64101 l
151.72099 572.321 l
151.72099 572.201 l
152.561 570.64101 l
153.041 568.961 l
153.28101 567.161 l
153.28101 567.041 l
153.041 565.241 l
152.561 563.561 l
152.561 563.44099 l
151.72099 561.881 l
150.64101 560.561 l
149.321 559.481 l
149.201 559.36099 l
147.64101 558.521 l
145.961 558.041 l
144.161 557.80099 l
144.041 557.80099 l
142.241 558.041 l
140.561 558.521 l
140.44099 558.521 l
138.881 559.36099 l
138.881 559.481 l
137.561 560.561 l
136.481 561.881 l
136.36099 561.881 l
135.521 563.44099 l
135.521 563.561 l
134.92101 565.241 l
134.80099 567.041 l
f 
135.28101 567.041 m
134.80099 567.041 l
f 
BT
/N19 1 Tf
0 14.39999 -14.39999 0 149.0806 563.0806 Tm
(+)Tj 
ET
1 1 1 scn
170.561 567.041 m
170.80099 565.121 l
171.28101 563.44099 l
172.121 562.00101 l
173.201 560.561 l
174.521 559.481 l
176.08099 558.64101 l
177.761 558.161 l
179.561 558.041 l
181.36099 558.161 l
183.161 558.64101 l
184.601 559.481 l
185.92101 560.561 l
187.121 562.00101 l
187.841 563.44099 l
188.44099 565.121 l
188.561 567.041 l
188.44099 568.841 l
187.841 570.521 l
187.121 571.961 l
185.92101 573.401 l
184.601 574.481 l
183.161 575.321 l
181.36099 575.80099 l
179.561 576.041 l
177.761 575.80099 l
176.08099 575.321 l
174.521 574.481 l
173.201 573.401 l
172.121 571.961 l
171.28101 570.521 l
170.80099 568.841 l
170.561 567.041 l
f* 
0 0 0 scn
170.80099 567.041 m
171.041 565.121 l
171.041 565.241 l
171.521 563.561 l
172.36099 562.121 l
173.44099 560.681 l
173.44099 560.80099 l
174.761 559.72099 l
174.64101 559.72099 l
176.201 558.881 l
177.881 558.401 l
177.761 558.401 l
179.561 558.28101 l
181.36099 558.401 l
183.161 558.881 l
183.041 558.881 l
184.481 559.72099 l
185.80099 560.80099 l
187.00101 562.241 l
186.881 562.121 l
187.601 563.561 l
188.201 565.241 l
188.201 565.121 l
188.321 567.041 l
188.201 568.841 l
187.601 570.521 l
187.601 570.401 l
186.881 571.841 l
187.00101 571.841 l
185.80099 573.28101 l
184.481 574.36099 l
183.041 575.201 l
183.161 575.08099 l
181.36099 575.561 l
179.561 575.80099 l
179.681 575.80099 l
177.881 575.561 l
176.201 575.08099 l
174.64101 574.241 l
174.761 574.36099 l
173.44099 573.28101 l
172.36099 571.841 l
171.521 570.401 l
171.521 570.521 l
171.041 568.841 l
170.80099 567.041 l
170.321 567.161 l
170.561 568.961 l
171.041 570.64101 l
171.161 570.64101 l
172.00101 572.08099 l
173.08099 573.521 l
173.08099 573.64101 l
174.401 574.72099 l
175.961 575.561 l
176.08099 575.561 l
177.761 576.041 l
179.561 576.28101 l
179.681 576.28101 l
181.481 576.041 l
183.28101 575.561 l
184.72099 574.72099 l
184.841 574.72099 l
186.161 573.64101 l
187.36099 572.201 l
187.36099 572.08099 l
188.08099 570.64101 l
188.681 568.961 l
188.681 568.841 l
188.80099 567.041 l
188.681 565.121 l
188.08099 563.44099 l
188.08099 563.321 l
187.36099 561.881 l
186.161 560.44099 l
184.841 559.36099 l
184.72099 559.36099 l
183.28101 558.521 l
183.28101 558.401 l
181.481 557.92101 l
181.36099 557.92101 l
179.561 557.80099 l
177.761 557.92101 l
176.08099 558.401 l
175.961 558.401 l
174.401 559.241 l
174.401 559.36099 l
173.08099 560.44099 l
172.00101 561.881 l
171.161 563.321 l
171.041 563.44099 l
170.561 565.121 l
170.321 567.041 l
f 
170.80099 567.041 m
170.321 567.041 l
170.321 567.161 l
f 
BT
0 14.39999 -14.39999 0 183.5206 563.20061 Tm
(+)Tj 
ET
143.92101 514.841 m
143.321 514.72099 l
142.72099 514.36099 l
142.36099 513.761 l
142.241 513.161 l
142.36099 512.44099 l
142.72099 511.841 l
143.321 511.481 l
143.92101 511.36099 l
144.64101 511.481 l
145.241 511.841 l
145.601 512.44099 l
145.72099 513.161 l
145.601 513.761 l
145.241 514.36099 l
144.64101 514.72099 l
143.92101 514.841 l
f* 
144.041 514.601 m
143.44099 514.481 l
143.44099 514.601 l
142.841 514.241 l
142.961 514.241 l
142.601 513.64101 l
142.601 513.761 l
142.481 513.161 l
142.481 513.28101 l
142.601 512.561 l
142.961 511.961 l
142.841 512.08099 l
143.44099 511.72099 l
144.041 511.601 l
143.92101 511.601 l
144.64101 511.72099 l
144.521 511.72099 l
145.121 512.08099 l
145.121 511.961 l
145.481 512.561 l
145.36099 512.561 l
145.481 513.28101 l
145.481 513.161 l
145.36099 513.761 l
145.481 513.64101 l
145.121 514.241 l
144.521 514.601 l
144.64101 514.481 l
143.92101 514.601 l
144.041 515.08099 l
144.761 514.961 l
145.36099 514.601 l
145.481 514.481 l
145.841 513.881 l
145.961 513.28101 l
145.961 513.161 l
145.841 512.44099 l
145.841 512.321 l
145.481 511.72099 l
145.36099 511.72099 l
144.761 511.36099 l
144.761 511.241 l
144.041 511.121 l
143.92101 511.121 l
143.321 511.241 l
143.201 511.36099 l
142.601 511.72099 l
142.241 512.321 l
142.121 512.44099 l
142.00101 513.161 l
142.00101 513.28101 l
142.121 513.881 l
142.241 513.881 l
142.601 514.481 l
142.601 514.601 l
143.201 514.961 l
143.321 514.961 l
143.92101 515.08099 l
f 
143.92101 514.601 m
144.041 514.601 l
143.92101 515.08099 l
144.041 515.08099 l
f 
179.681 514.961 m
179.08099 514.841 l
178.481 514.481 l
178.121 513.881 l
178.00101 513.28101 l
178.121 512.561 l
178.481 511.961 l
179.08099 511.601 l
179.681 511.481 l
180.401 511.601 l
181.00101 511.961 l
181.36099 512.561 l
181.481 513.28101 l
181.36099 513.881 l
181.00101 514.481 l
180.401 514.841 l
179.681 514.961 l
f* 
179.80099 514.72099 m
179.201 514.601 l
179.201 514.72099 l
178.601 514.36099 l
178.72099 514.36099 l
178.36099 513.761 l
178.36099 513.881 l
178.241 513.28101 l
178.241 513.401 l
178.36099 512.681 l
178.72099 512.08099 l
178.601 512.201 l
179.201 511.841 l
179.80099 511.72099 l
179.681 511.72099 l
180.401 511.841 l
180.28101 511.841 l
180.881 512.201 l
180.881 512.08099 l
181.241 512.681 l
181.121 512.681 l
181.241 513.401 l
181.241 513.28101 l
181.121 513.881 l
181.241 513.761 l
180.881 514.36099 l
180.28101 514.72099 l
180.401 514.601 l
179.681 514.72099 l
179.80099 515.201 l
180.521 515.08099 l
181.121 514.72099 l
181.241 514.601 l
181.601 514.00101 l
181.72099 513.401 l
181.72099 513.28101 l
181.601 512.561 l
181.601 512.44099 l
181.241 511.841 l
181.121 511.841 l
180.521 511.481 l
180.521 511.36099 l
179.80099 511.241 l
179.681 511.241 l
179.08099 511.36099 l
178.961 511.481 l
178.36099 511.841 l
178.00101 512.44099 l
177.881 512.561 l
177.761 513.28101 l
177.761 513.401 l
177.881 514.00101 l
178.00101 514.00101 l
178.36099 514.601 l
178.36099 514.72099 l
178.961 515.08099 l
179.08099 515.08099 l
179.681 515.201 l
f 
179.681 514.72099 m
179.80099 514.72099 l
179.681 515.201 l
179.80099 515.201 l
f 
1 1 1 scn
207.041 567.041 m
207.161 565.241 l
207.761 563.561 l
208.601 562.00101 l
209.681 560.681 l
211.00101 559.601 l
212.561 558.761 l
214.241 558.28101 l
216.041 558.041 l
217.841 558.28101 l
219.521 558.761 l
221.08099 559.601 l
222.401 560.681 l
223.481 562.00101 l
224.321 563.561 l
224.80099 565.241 l
225.041 567.041 l
224.80099 568.841 l
224.321 570.521 l
223.481 572.08099 l
222.401 573.401 l
221.08099 574.481 l
219.521 575.321 l
217.841 575.92101 l
216.041 576.041 l
214.241 575.92101 l
212.561 575.321 l
211.00101 574.481 l
209.681 573.401 l
208.601 572.08099 l
207.761 570.521 l
207.161 568.841 l
207.041 567.041 l
f* 
0 0 0 scn
207.28101 567.041 m
207.401 565.241 l
207.401 565.36099 l
208.00101 563.681 l
208.841 562.121 l
208.841 562.241 l
209.92101 560.92101 l
211.241 559.841 l
211.121 559.841 l
212.681 559.00101 l
214.36099 558.521 l
216.161 558.28101 l
216.041 558.28101 l
217.841 558.521 l
219.521 559.00101 l
219.401 559.00101 l
220.961 559.841 l
222.28101 560.92101 l
223.36099 562.241 l
223.241 562.121 l
224.08099 563.681 l
224.561 565.36099 l
224.80099 567.161 l
224.80099 567.041 l
224.561 568.841 l
224.08099 570.521 l
224.08099 570.401 l
223.241 571.961 l
223.36099 571.961 l
222.28101 573.28101 l
220.961 574.36099 l
220.961 574.241 l
219.401 575.08099 l
219.521 575.08099 l
217.841 575.681 l
216.041 575.80099 l
214.241 575.681 l
214.36099 575.681 l
212.681 575.08099 l
211.121 574.241 l
211.241 574.36099 l
209.92101 573.28101 l
208.841 571.961 l
208.00101 570.401 l
208.00101 570.521 l
207.401 568.841 l
207.28101 567.041 l
206.80099 567.041 l
206.92101 568.841 l
206.92101 568.961 l
207.521 570.64101 l
208.36099 572.201 l
208.481 572.321 l
209.561 573.64101 l
210.881 574.72099 l
212.44099 575.561 l
212.561 575.561 l
214.241 576.161 l
216.041 576.28101 l
217.841 576.161 l
217.961 576.161 l
219.64101 575.561 l
221.201 574.72099 l
221.321 574.72099 l
222.64101 573.64101 l
223.72099 572.321 l
223.72099 572.201 l
224.561 570.64101 l
225.041 568.961 l
225.28101 567.161 l
225.28101 567.041 l
225.041 565.241 l
224.561 563.561 l
224.561 563.44099 l
223.72099 561.881 l
222.64101 560.561 l
221.321 559.481 l
221.201 559.36099 l
219.64101 558.521 l
217.961 558.041 l
216.161 557.80099 l
216.041 557.80099 l
214.241 558.041 l
212.561 558.521 l
212.44099 558.521 l
210.881 559.36099 l
210.881 559.481 l
209.561 560.561 l
208.481 561.881 l
208.36099 561.881 l
207.521 563.44099 l
207.521 563.561 l
206.92101 565.241 l
206.80099 567.041 l
f 
207.28101 567.041 m
206.80099 567.041 l
f 
BT
0 14.39999 -14.39999 0 221.0806 564.8806 Tm
(-)Tj 
ET
1 1 1 scn
242.561 567.041 m
242.80099 565.121 l
243.28101 563.44099 l
244.121 562.00101 l
245.201 560.561 l
246.521 559.481 l
248.08099 558.64101 l
249.761 558.161 l
251.561 558.041 l
253.36099 558.161 l
255.161 558.64101 l
256.601 559.481 l
257.92101 560.561 l
259.121 562.00101 l
259.841 563.44099 l
260.44099 565.121 l
260.561 567.041 l
260.44099 568.841 l
259.841 570.521 l
259.121 571.961 l
257.92101 573.401 l
256.601 574.481 l
255.161 575.321 l
253.36099 575.80099 l
251.561 576.041 l
249.761 575.80099 l
248.08099 575.321 l
246.521 574.481 l
245.201 573.401 l
244.121 571.961 l
243.28101 570.521 l
242.80099 568.841 l
242.561 567.041 l
f* 
0 0 0 scn
242.80099 567.041 m
243.041 565.121 l
243.041 565.241 l
243.521 563.561 l
244.36099 562.121 l
245.44099 560.681 l
245.44099 560.80099 l
246.761 559.72099 l
246.64101 559.72099 l
248.201 558.881 l
249.881 558.401 l
249.761 558.401 l
251.561 558.28101 l
253.36099 558.401 l
255.161 558.881 l
255.041 558.881 l
256.481 559.72099 l
257.80099 560.80099 l
259.00101 562.241 l
258.881 562.121 l
259.601 563.561 l
260.201 565.241 l
260.201 565.121 l
260.321 567.041 l
260.201 568.841 l
259.601 570.521 l
259.601 570.401 l
258.881 571.841 l
259.00101 571.841 l
257.80099 573.28101 l
256.481 574.36099 l
255.041 575.201 l
255.161 575.08099 l
253.36099 575.561 l
251.561 575.80099 l
251.681 575.80099 l
249.881 575.561 l
248.201 575.08099 l
246.64101 574.241 l
246.761 574.36099 l
245.44099 573.28101 l
244.36099 571.841 l
243.521 570.401 l
243.521 570.521 l
243.041 568.841 l
242.80099 567.041 l
242.321 567.161 l
242.561 568.961 l
243.041 570.64101 l
243.161 570.64101 l
244.00101 572.08099 l
245.08099 573.521 l
245.08099 573.64101 l
246.401 574.72099 l
247.961 575.561 l
248.08099 575.561 l
249.761 576.041 l
251.561 576.28101 l
251.681 576.28101 l
253.481 576.041 l
255.28101 575.561 l
256.72099 574.72099 l
256.841 574.72099 l
258.161 573.64101 l
259.36099 572.201 l
259.36099 572.08099 l
260.08099 570.64101 l
260.681 568.961 l
260.681 568.841 l
260.80099 567.041 l
260.681 565.121 l
260.08099 563.44099 l
260.08099 563.321 l
259.36099 561.881 l
258.161 560.44099 l
256.841 559.36099 l
256.72099 559.36099 l
255.28101 558.521 l
255.28101 558.401 l
253.481 557.92101 l
253.36099 557.92101 l
251.561 557.80099 l
249.761 557.92101 l
248.08099 558.401 l
247.961 558.401 l
246.401 559.241 l
246.401 559.36099 l
245.08099 560.44099 l
244.00101 561.881 l
243.161 563.321 l
243.041 563.44099 l
242.561 565.121 l
242.321 567.041 l
f 
242.80099 567.041 m
242.321 567.041 l
242.321 567.161 l
f 
BT
0 14.39999 -14.39999 0 255.5206 565.0006 Tm
(-)Tj 
ET
215.92101 514.841 m
215.321 514.72099 l
214.72099 514.36099 l
214.36099 513.761 l
214.241 513.161 l
214.36099 512.44099 l
214.72099 511.841 l
215.321 511.481 l
215.92101 511.36099 l
216.64101 511.481 l
217.241 511.841 l
217.601 512.44099 l
217.72099 513.161 l
217.601 513.761 l
217.241 514.36099 l
216.64101 514.72099 l
215.92101 514.841 l
f* 
216.041 514.601 m
215.44099 514.481 l
215.44099 514.601 l
214.841 514.241 l
214.961 514.241 l
214.601 513.64101 l
214.601 513.761 l
214.481 513.161 l
214.481 513.28101 l
214.601 512.561 l
214.961 511.961 l
214.841 512.08099 l
215.44099 511.72099 l
216.041 511.601 l
215.92101 511.601 l
216.64101 511.72099 l
216.521 511.72099 l
217.121 512.08099 l
217.121 511.961 l
217.481 512.561 l
217.36099 512.561 l
217.481 513.28101 l
217.481 513.161 l
217.36099 513.761 l
217.481 513.64101 l
217.121 514.241 l
216.521 514.601 l
216.64101 514.481 l
215.92101 514.601 l
216.041 515.08099 l
216.761 514.961 l
217.36099 514.601 l
217.481 514.481 l
217.841 513.881 l
217.961 513.28101 l
217.961 513.161 l
217.841 512.44099 l
217.841 512.321 l
217.481 511.72099 l
217.36099 511.72099 l
216.761 511.36099 l
216.761 511.241 l
216.041 511.121 l
215.92101 511.121 l
215.321 511.241 l
215.201 511.36099 l
214.601 511.72099 l
214.241 512.321 l
214.121 512.44099 l
214.00101 513.161 l
214.00101 513.28101 l
214.121 513.881 l
214.241 513.881 l
214.601 514.481 l
214.601 514.601 l
215.201 514.961 l
215.321 514.961 l
215.92101 515.08099 l
f 
215.92101 514.601 m
216.041 514.601 l
215.92101 515.08099 l
216.041 515.08099 l
f 
251.681 514.961 m
251.08099 514.841 l
250.481 514.481 l
250.121 513.881 l
250.00101 513.28101 l
250.121 512.561 l
250.481 511.961 l
251.08099 511.601 l
251.681 511.481 l
252.401 511.601 l
253.00101 511.961 l
253.36099 512.561 l
253.481 513.28101 l
253.36099 513.881 l
253.00101 514.481 l
252.401 514.841 l
251.681 514.961 l
f* 
251.80099 514.72099 m
251.201 514.601 l
251.201 514.72099 l
250.601 514.36099 l
250.72099 514.36099 l
250.36099 513.761 l
250.36099 513.881 l
250.241 513.28101 l
250.241 513.401 l
250.36099 512.681 l
250.72099 512.08099 l
250.601 512.201 l
251.201 511.841 l
251.80099 511.72099 l
251.681 511.72099 l
252.401 511.841 l
252.28101 511.841 l
252.881 512.201 l
252.881 512.08099 l
253.241 512.681 l
253.121 512.681 l
253.241 513.401 l
253.241 513.28101 l
253.121 513.881 l
253.241 513.761 l
252.881 514.36099 l
252.28101 514.72099 l
252.401 514.601 l
251.681 514.72099 l
251.80099 515.201 l
252.521 515.08099 l
253.121 514.72099 l
253.241 514.601 l
253.601 514.00101 l
253.72099 513.401 l
253.72099 513.28101 l
253.601 512.561 l
253.601 512.44099 l
253.241 511.841 l
253.121 511.841 l
252.521 511.481 l
252.521 511.36099 l
251.80099 511.241 l
251.681 511.241 l
251.08099 511.36099 l
250.961 511.481 l
250.36099 511.841 l
250.00101 512.44099 l
249.881 512.561 l
249.761 513.28101 l
249.761 513.401 l
249.881 514.00101 l
250.00101 514.00101 l
250.36099 514.601 l
250.36099 514.72099 l
250.961 515.08099 l
251.08099 515.08099 l
251.681 515.201 l
f 
251.681 514.72099 m
251.80099 514.72099 l
251.681 515.201 l
251.80099 515.201 l
f 
1 1 1 scn
279.521 567.041 m
279.64101 565.241 l
280.241 563.561 l
280.961 562.00101 l
282.161 560.681 l
283.481 559.601 l
284.92101 558.761 l
286.72099 558.28101 l
288.521 558.041 l
290.321 558.28101 l
292.00101 558.761 l
293.561 559.601 l
294.881 560.681 l
295.961 562.00101 l
296.80099 563.561 l
297.28101 565.241 l
297.521 567.041 l
297.28101 568.841 l
296.80099 570.521 l
295.961 572.08099 l
294.881 573.401 l
293.561 574.481 l
292.00101 575.321 l
290.321 575.92101 l
288.521 576.041 l
286.72099 575.92101 l
284.92101 575.321 l
283.481 574.481 l
282.161 573.401 l
280.961 572.08099 l
280.241 570.521 l
279.64101 568.841 l
279.521 567.041 l
f* 
0 0 0 scn
279.761 567.041 m
279.881 565.241 l
279.881 565.36099 l
280.481 563.681 l
281.201 562.121 l
281.201 562.241 l
282.401 560.92101 l
283.72099 559.841 l
283.601 559.841 l
285.041 559.00101 l
286.841 558.521 l
288.64101 558.28101 l
288.521 558.28101 l
290.321 558.521 l
292.00101 559.00101 l
291.881 559.00101 l
293.44099 559.841 l
294.761 560.92101 l
295.841 562.241 l
295.72099 562.121 l
296.561 563.681 l
297.041 565.36099 l
297.28101 567.161 l
297.28101 567.041 l
297.041 568.841 l
296.561 570.521 l
296.561 570.401 l
295.72099 571.961 l
295.841 571.961 l
294.761 573.28101 l
293.44099 574.36099 l
293.44099 574.241 l
291.881 575.08099 l
292.00101 575.08099 l
290.321 575.681 l
288.521 575.80099 l
286.72099 575.681 l
286.841 575.681 l
285.041 575.08099 l
285.041 575.201 l
283.601 574.36099 l
283.72099 574.36099 l
282.401 573.28101 l
281.201 571.961 l
280.481 570.401 l
280.481 570.521 l
279.881 568.841 l
279.761 567.041 l
279.28101 567.041 l
279.401 568.841 l
279.401 568.961 l
280.00101 570.64101 l
280.72099 572.201 l
280.841 572.321 l
282.041 573.64101 l
283.36099 574.72099 l
284.80099 575.561 l
284.92101 575.561 l
286.72099 576.161 l
288.521 576.28101 l
290.321 576.161 l
290.44099 576.161 l
292.121 575.561 l
293.681 574.72099 l
293.80099 574.72099 l
295.121 573.64101 l
296.201 572.321 l
296.201 572.201 l
297.041 570.64101 l
297.521 568.961 l
297.761 567.161 l
297.761 567.041 l
297.521 565.241 l
297.041 563.561 l
297.041 563.44099 l
296.201 561.881 l
295.121 560.561 l
293.80099 559.481 l
293.681 559.36099 l
292.121 558.521 l
290.44099 558.041 l
288.64101 557.80099 l
288.521 557.80099 l
286.72099 558.041 l
284.92101 558.521 l
284.80099 558.64101 l
283.36099 559.481 l
282.041 560.561 l
280.841 561.881 l
280.72099 561.881 l
280.00101 563.44099 l
280.00101 563.561 l
279.401 565.241 l
279.28101 567.041 l
f 
279.761 567.041 m
279.28101 567.041 l
f 
BT
0 14.39999 -14.39999 0 293.56059 564.8806 Tm
(-)Tj 
ET
1 1 1 scn
315.041 567.041 m
315.28101 565.121 l
315.761 563.44099 l
316.601 562.00101 l
317.681 560.561 l
319.00101 559.481 l
320.561 558.64101 l
322.241 558.161 l
324.041 558.041 l
325.841 558.161 l
327.521 558.64101 l
329.08099 559.481 l
330.401 560.561 l
331.481 562.00101 l
332.321 563.44099 l
332.80099 565.121 l
333.041 567.041 l
332.80099 568.841 l
332.321 570.521 l
331.481 571.961 l
330.401 573.401 l
329.08099 574.481 l
327.521 575.321 l
325.841 575.80099 l
324.041 576.041 l
322.241 575.80099 l
320.561 575.321 l
319.00101 574.481 l
317.681 573.401 l
316.601 571.961 l
315.761 570.521 l
315.28101 568.841 l
315.041 567.041 l
f* 
0 0 0 scn
315.28101 567.041 m
315.521 565.121 l
315.521 565.241 l
316.00101 563.561 l
316.841 562.121 l
317.92101 560.681 l
317.92101 560.80099 l
319.241 559.72099 l
319.121 559.72099 l
320.681 558.881 l
322.36099 558.401 l
322.241 558.401 l
324.041 558.28101 l
325.841 558.401 l
327.521 558.881 l
327.401 558.881 l
328.961 559.72099 l
330.28101 560.80099 l
330.28101 560.681 l
331.36099 562.121 l
332.201 563.561 l
332.08099 563.561 l
332.561 565.241 l
332.561 565.121 l
332.80099 567.041 l
332.561 568.841 l
332.08099 570.521 l
332.201 570.401 l
331.36099 571.841 l
330.28101 573.28101 l
328.961 574.36099 l
328.961 574.241 l
327.401 575.08099 l
327.521 575.08099 l
325.841 575.561 l
324.041 575.80099 l
324.161 575.80099 l
322.36099 575.561 l
320.681 575.08099 l
319.121 574.241 l
319.241 574.36099 l
317.92101 573.28101 l
316.841 571.841 l
316.00101 570.401 l
316.00101 570.521 l
315.521 568.841 l
315.28101 567.041 l
314.80099 567.161 l
315.041 568.961 l
315.521 570.64101 l
315.64101 570.64101 l
316.481 572.08099 l
317.561 573.521 l
317.561 573.64101 l
318.881 574.72099 l
320.44099 575.561 l
320.561 575.561 l
322.241 576.041 l
324.041 576.28101 l
324.161 576.28101 l
325.961 576.041 l
327.64101 575.561 l
329.201 574.72099 l
329.321 574.72099 l
330.64101 573.64101 l
330.64101 573.521 l
331.72099 572.08099 l
332.561 570.64101 l
333.041 568.961 l
333.28101 567.161 l
333.28101 567.041 l
333.041 565.121 l
332.561 563.44099 l
332.561 563.321 l
331.72099 561.881 l
330.64101 560.44099 l
329.321 559.36099 l
329.201 559.241 l
327.64101 558.401 l
325.961 557.92101 l
325.841 557.92101 l
324.041 557.80099 l
322.241 557.92101 l
320.561 558.401 l
320.44099 558.401 l
318.881 559.241 l
318.881 559.36099 l
317.561 560.44099 l
316.481 561.881 l
315.64101 563.321 l
315.521 563.44099 l
315.041 565.121 l
314.80099 567.041 l
f 
315.28101 567.041 m
314.80099 567.041 l
314.80099 567.161 l
f 
BT
0 14.39999 -14.39999 0 328.0006 565.0006 Tm
(-)Tj 
ET
288.401 514.841 m
287.681 514.72099 l
287.201 514.36099 l
286.841 513.761 l
286.72099 513.161 l
286.841 512.44099 l
287.201 511.841 l
287.681 511.481 l
288.401 511.36099 l
289.121 511.481 l
289.601 511.841 l
290.08099 512.44099 l
290.201 513.161 l
290.08099 513.761 l
289.601 514.36099 l
289.121 514.72099 l
288.401 514.841 l
f* 
288.521 514.601 m
287.80099 514.481 l
287.80099 514.601 l
287.321 514.241 l
287.44099 514.241 l
287.08099 513.64101 l
287.08099 513.761 l
286.961 513.161 l
286.961 513.28101 l
287.08099 512.561 l
287.44099 511.961 l
287.321 512.08099 l
287.80099 511.72099 l
288.521 511.601 l
288.401 511.601 l
289.121 511.72099 l
289.00101 511.72099 l
289.481 512.08099 l
289.481 511.961 l
289.961 512.561 l
289.841 512.561 l
289.961 513.28101 l
289.961 513.161 l
289.841 513.761 l
289.961 513.64101 l
289.481 514.241 l
289.00101 514.601 l
289.121 514.481 l
288.401 514.601 l
288.521 515.08099 l
289.241 514.961 l
289.72099 514.601 l
289.841 514.481 l
290.321 513.881 l
290.44099 513.28101 l
290.44099 513.161 l
290.321 512.44099 l
290.321 512.321 l
289.841 511.72099 l
289.72099 511.72099 l
289.241 511.36099 l
289.241 511.241 l
288.521 511.121 l
288.401 511.121 l
287.681 511.241 l
287.561 511.36099 l
287.08099 511.72099 l
286.72099 512.321 l
286.601 512.44099 l
286.481 513.161 l
286.481 513.28101 l
286.601 513.881 l
286.72099 513.881 l
287.08099 514.481 l
287.08099 514.601 l
287.561 514.961 l
287.681 514.961 l
288.401 515.08099 l
f 
288.401 514.601 m
288.521 514.601 l
288.401 515.08099 l
288.521 515.08099 l
f 
324.161 514.961 m
323.44099 514.841 l
322.961 514.481 l
322.601 513.881 l
322.36099 513.28101 l
322.601 512.561 l
322.961 511.961 l
323.44099 511.601 l
324.161 511.481 l
324.881 511.601 l
325.36099 511.961 l
325.72099 512.561 l
325.961 513.28101 l
325.72099 513.881 l
325.36099 514.481 l
324.881 514.841 l
324.161 514.961 l
f* 
324.28101 514.72099 m
323.561 514.601 l
323.561 514.72099 l
323.08099 514.36099 l
323.201 514.36099 l
322.841 513.761 l
322.841 513.881 l
322.601 513.28101 l
322.601 513.401 l
322.841 512.681 l
323.201 512.08099 l
323.08099 512.201 l
323.561 511.841 l
324.28101 511.72099 l
324.161 511.72099 l
324.881 511.841 l
324.761 511.841 l
325.241 512.201 l
325.241 512.08099 l
325.601 512.681 l
325.481 512.681 l
325.72099 513.401 l
325.72099 513.28101 l
325.481 513.881 l
325.601 513.761 l
325.241 514.36099 l
324.761 514.72099 l
324.881 514.601 l
324.161 514.72099 l
324.28101 515.201 l
325.00101 515.08099 l
325.481 514.72099 l
325.601 514.601 l
325.961 514.00101 l
326.201 513.401 l
326.201 513.28101 l
325.961 512.561 l
325.961 512.44099 l
325.601 511.841 l
325.481 511.841 l
325.00101 511.481 l
325.00101 511.36099 l
324.28101 511.241 l
324.161 511.241 l
323.44099 511.36099 l
323.321 511.481 l
322.841 511.841 l
322.481 512.44099 l
322.36099 512.561 l
322.121 513.28101 l
322.121 513.401 l
322.36099 514.00101 l
322.481 514.00101 l
322.841 514.601 l
322.841 514.72099 l
323.321 515.08099 l
323.44099 515.08099 l
324.161 515.201 l
f 
324.161 514.72099 m
324.28101 514.72099 l
324.161 515.201 l
324.28101 515.201 l
f 
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2212 961 a Fq(Figure)f(14:)39 b(The)29 b(m)n(ulti-stage)i
(FFT)d(algorithm)2040 1280 y Fr(to)g(the)e Ft(Booster)j
Fr(stage,)g(whic)n(h)e(can)h(b)r(e)f(activ)n(e)g(or)h(inactiv)n(e.)39
b(The)2040 1368 y(switc)n(hing)21 b(on)e(and)g(o\013)h(of)g(the)f
Ft(Booster)i Fr(stage,)h(whic)n(h)e(happ)r(ens)f(in-)2040
1455 y(frequen)n(tly)-6 b(,)29 b(is)h(accomplished)f(using)g(a)g
(reinitialization)j(message)2040 1542 y(from)c(the)f
Ft(CheckQuality)j Fr(stage.)42 b(W)-6 b(e)27 b(also)i(use)f(a)f
(message)i(from)2040 1629 y(the)g Ft(CheckFreqHop)i Fr(stage)f(to)f
(the)g Ft(RFtoIF)h Fr(stage)g(to)f(c)n(hange)g(the)2040
1716 y(baseband)d(when)f(a)h(frequency)f(hop)g(tone)h(is)g(presen)n(t.)
2040 1891 y(The)34 b Ft(RFtoIF)h Fr(stage)f(mo)r(dulates)f(the)h(input)
e(signal)j(from)e(RF)g(to)2040 1978 y(a)k(frequency)e(band)g(around)h
(the)g(curren)n(t)f(IF)h(frequency)-6 b(.)65 b(This)2040
2065 y(stage)30 b(is)g(implemen)n(ted)c(as)k(a)f(\014lter)g(that)g(m)n
(ultiplies)g(the)f(curren)n(t)2040 2152 y(signal)j(with)g(a)f(sine)h(w)
n(a)n(v)n(e)f(at)g(the)g(IF)g(frequency)-6 b(.)46 b(T)-6
b(o)31 b(supp)r(ort)e(a)2040 2239 y(c)n(hange)c(in)f(the)g(IF)g
(frequency)g(when)g(frequency)f(hopping)i(o)r(ccurs,)2040
2327 y(the)30 b(\014lter)f(con)n(tains)i(a)f Ft(set)p
2860 2327 24 4 v 29 w(freq)h Fr(metho)r(d)d(that)i(can)g(b)r(e)g(in)n
(v)n(ok)n(ed)2040 2414 y(using)c(a)g(message.)2040 2588
y(The)c(optional)h Ft(Booster)h Fr(stage)f(is)f(an)g(FIR)f(\014lter)h
(that)g(is)h(activ)l(ated)2040 2675 y(when)f(the)g(signal)i(is)f(hard)f
(to)g(detect.)33 b(During)22 b(normal)g(op)r(eration,)2040
2762 y(ho)n(w)n(ev)n(er,)33 b(it)e(is)g(deactiv)l(ated)g(to)g(conserv)n
(e)g(p)r(o)n(w)n(er.)51 b(The)31 b(turning)2040 2850
y(on)24 b(and)f(o\013)h(of)h(the)e(\014lter)h(is)g(con)n(trolled)h(b)n
(y)e(a)h(message.)35 b(The)24 b(\014lter)2040 2937 y(itself,)k(sho)n
(wn)e(in)h(Figure)f(13,)i(is)e(implemen)n(ted)e(as)j(a)f
Ft(Filter)i Fr(that)2040 3024 y(p)r(eeks)e(at)f(N)h(elemen)n(ts)f(in)g
(the)h(input)e(stream.)2040 3198 y(The)18 b Ft(FFT)h
Fr(stage)g(con)n(v)n(erts)f(the)f(program)h(from)g(the)g(time)f(domain)
g(to)2040 3285 y(the)22 b(frequency)g(domain)g(using)h(a)g(m)n
(ulti-stage)g(FFT.)g(It)f(is)i(graphi-)2040 3373 y(cally)h(presen)n
(ted)e(in)h(14.)34 b(The)24 b(FFT)h(is)f(comp)r(osed)g(of)h(a)f
(reordering)2040 3460 y(\014lter)c(and)f(a)h(m)n(ulti-stage)f
(butter\015y)f(\014lter.)33 b(The)20 b(StreaMIT)g(repre-)2040
3547 y(sen)n(tation)i(of)g(the)e(reordering)i(\014lter)f(\(a)h(bit)e
(rev)n(erse)i(order)f(\014lter\))g(is)2040 3634 y(giv)n(en)k(in)h
(Figure)g(15.)35 b(Note)25 b(that)h(the)f(complex)f(data)i(re-sh)n
(u\017ing)2040 3721 y(is)g(accomplished)f(using)h(a)f(few)h(SplitJoin)g
(constructs.)35 b(A)25 b(param-)2040 3808 y(eterized)37
b(Butter\015y)f(implemen)n(tation)f(is)i(used)f(to)h(abstract)g(the)
2040 3896 y(m)n(ulti-stage)d(butter\015y)e(in)i(the)f(FFT.)i(As)f(sho)n
(wn)g(in)g(Figure)h(16,)2040 3983 y(the)23 b(Butter\015y)g(\014lter)h
(is)g(also)h(implemen)n(ted)d(using)i(a)g(com)n(bination)2040
4070 y(of)j(SplitJoin)f(constructs.)2040 4244 y(The)38
b(StreaMIT)h(implemen)n(tation)e(of)i(the)e(FFT)i(\014lter)f(is)h
(clean)2040 4332 y(and)34 b(in)n(tuitiv)n(e.)59 b(It)34
b(already)g(has)h(a)f(large)i(amoun)n(t)d(of)i(pip)r(elined)2040
4419 y(parallelism.)f(Due)20 b(to)h(the)f(simple)g(and)g(straigh)n
(tforw)n(ard)j(mapping)2040 4506 y(from)18 b(the)f(algorithm)h(to)g
(the)f(implemen)n(tation,)h(compiler)g(analyses)2040
4593 y(should)27 b(b)r(e)g(able)h(to)f(extract)h(the)e(parallel)j
(structure)e(of)h(the)f(FFT)2040 4680 y(when)f(hardw)n(are)g(resources)
h(are)f(a)n(v)l(ailable.)2040 4855 y(The)19 b(next)e(stage,)22
b Ft(CheckFreqHop)p Fr(,)g(c)n(hec)n(ks)c(four)h(di\013eren)n(t)f
(frequen-)2040 4942 y(cies)39 b(for)g(the)f(c)n(hange)h(frequency)f
(tone.)72 b(When)38 b(the)g(stage)h(de-)2040 5029 y(tects)23
b(this)h(tone,)g(it)f(has)g(to)h(c)n(hange)f(the)g(frequency)f(within)i
(a)f(time)2040 5116 y(limit.)56 b(This)34 b(task)f(is)g(accomplished)g
(b)n(y)f(sending)h(a)h(message)f(to)2040 5203 y(the)22
b Ft(RFtoIF)i Fr(stage.)34 b(The)23 b(message)g(requires)f(the)g
Ft(RFtoIF)i Fr(stage)f(to)2040 5290 y(deliv)n(er)h(b)r(et)n(w)n(een)g
(4)p Fj(N)32 b Fr(and)24 b(6)p Fj(N)33 b Fr(items)23
b(using)h(the)g(old)g(mo)r(dulation)2040 5378 y(b)r(efore)j(c)n
(hanging)f(to)g(the)f(new)h(frequency)-6 b(.)1902 5627
y(11)p eop
%%Page: 12 12
12 11 bop -152 -69 a Fr(The)30 b Ft(CheckQuality)h Fr(stage)f(c)n(hec)n
(ks)f(if)h(the)f(signal)h(has)f(a)h(distinct)-152 19
y(frequency)d(sp)r(ectrum.)37 b(If)27 b(all)h(the)e(frequencies)i(ha)n
(v)n(e)e(similar)i(am-)-152 106 y(plitudes,)h(the)e(stage)i(assumes)f
(that)g(the)f(signal-to-noise)i(ratio)g(is)-152 193 y(lo)n(w)23
b(and)f(sends)g(a)g(message)h(to)f(activ)l(ate)h(the)e
Ft(Booster)p Fr(.)35 b(This)23 b(mes-)-152 280 y(sage)k(is)f(sen)n(t)g
(using)g(b)r(est-e\013ort)f(deliv)n(ery)-6 b(.)-152 471
y Fs(6.)100 b(RELA)-9 b(TED)26 b(W)o(ORK)-152 562 y Fr(A)g(large)i(n)n
(um)n(b)r(er)d(of)i(programming)f(languages)i(ha)n(v)n(e)e(included)g
(a)-152 649 y(concept)34 b(of)h(a)f(stream;)39 b(see)34
b([9])h(for)g(a)f(surv)n(ey)-6 b(.)59 b(Those)35 b(that)e(are)-152
737 y(p)r(erhaps)25 b(most)e(related)i(to)g(the)e(static-rate)j(v)n
(ersion)e(of)h(StreaMIT)-152 824 y(are)38 b(sync)n(hronous)f(data\015o)
n(w)h(languages)h(suc)n(h)e(as)h(LUSTRE)f([6])-152 911
y(and)31 b(ESTEREL)g([3])h(whic)n(h)f(require)g(a)g(\014xed)f(n)n(um)n
(b)r(er)f(of)i(inputs)-152 998 y(to)d(arriv)n(e)g(sim)n(ultaneously)g
(b)r(efore)h(\014ring)e(a)i(stream)e(no)r(de.)41 b(Ho)n(w-)-152
1085 y(ev)n(er,)29 b(most)f(sp)r(ecial-purp)r(ose)h(stream)f(languages)
i(are)f(functional)-152 1173 y(instead)i(of)g(imp)r(erativ)n(e,)g(and)f
(do)g(not)h(con)n(tain)f(features)h(suc)n(h)f(as)-152
1260 y(messaging)k(and)f(supp)r(ort)g(for)h(mo)r(dular)f(program)g(dev)
n(elopmen)n(t)-152 1347 y(that)39 b(are)g(essen)n(tial)h(for)f(mo)r
(dern)f(stream)g(applications.)75 b(Also,)-152 1434 y(most)34
b(of)h(these)f(languages)i(are)e(so)h(abstract)f(and)g(unstructured)
-152 1521 y(that)23 b(the)g(compiler)g(cannot)g(p)r(erform)g(enough)g
(analysis)h(and)f(opti-)-152 1608 y(mization)j(to)g(result)g(in)f(an)h
(e\016cien)n(t)g(implemen)n(tation.)-152 1783 y(A)n(t)c(an)g(abstract)h
(lev)n(el,)g(the)f(stream)g(graphs)g(of)h(StreaMIT)g(share)f(a)-152
1870 y(n)n(um)n(b)r(er)i(of)i(prop)r(erties)h(with)f(sync)n(hronous)f
(data\015o)n(w)h(\(SDF\))f(do-)-152 1957 y(main)k(as)g(considered)h(b)n
(y)e(the)h(Ptolem)n(y)f(pro)t(ject)i([7].)46 b(Eac)n(h)29
b(no)r(de)-152 2044 y(in)34 b(an)f(SDF)f(graph)i(pro)r(duces)f(and)g
(consumes)g(a)h(giv)n(en)f(n)n(um)n(b)r(er)-152 2131
y(of)j(items,)g(and)e(there)g(can)h(b)r(e)f(dela)n(ys)h(along)h(the)e
(arcs)h(b)r(et)n(w)n(een)-152 2219 y(no)r(des)i(\(corresp)r(onding)h
(lo)r(osely)g(to)f(items)g(that)f(are)i(p)r(eek)n(ed)e(in)-152
2306 y(StreaMIT\).)j(As)f(in)g(StreaMIT,)h(SDF)e(graphs)h(are)h(guaran)
n(teed)-152 2393 y(to)29 b(ha)n(v)n(e)e(a)i(static)g(sc)n(hedule,)g
(testing)g(for)g(deadlo)r(c)n(k)f(is)h(decidable,)-152
2480 y(and)h(there)f(are)h(a)g(n)n(um)n(b)r(er)e(of)j(nice)e(sc)n
(heduling)h(results)g(incorp)r(o-)-152 2567 y(rating)f(co)r(de)g(size)h
(and)e(execution)g(time)g([4].)43 b(Ho)n(w)n(ev)n(er,)30
b(previous)-152 2654 y(results)i(on)g(SDF)f(sc)n(heduling)g(do)g(not)h
(consider)g(constrain)n(ts)g(im-)-152 2742 y(p)r(osed)26
b(b)n(y)f(p)r(oin)n(t-to-p)r(oin)n(t)g(messages,)i(and)e(do)h(not)g
(include)f(a)h(no-)-152 2829 y(tion)e(of)g(StreaMIT's)h(information)f
(w)n(a)n(v)n(efron)n(ts,)h(re-initialization,)-152 2916
y(and)h(programming)f(language)i(supp)r(ort.)-152 3090
y(A)f(sp)r(eci\014cation)i(pac)n(k)l(age)f(used)f(in)g(industry)g(b)r
(earing)h(some)f(lik)n(e-)-152 3178 y(ness)34 b(to)f(StreaMIT)h(is)g
(SDL:)e(Sp)r(eci\014cacation)j(and)d(Description)-152
3265 y(Language)26 b([1].)35 b(SDL)23 b(is)i(a)f(formal,)i(ob)t
(ject-orien)n(ted)e(language)i(for)-152 3352 y(describing)21
b(the)f(structure)g(and)f(b)r(eha)n(vior)i(of)f(large,)j(real-time)d
(sys-)-152 3439 y(tems,)27 b(esp)r(ecially)h(for)g(telecomm)n
(unications)e(applications.)39 b(It)26 b(in-)-152 3526
y(cludes)f(a)f(notion)h(of)g(async)n(hronous)f(messaging)h(based)f(on)g
(queues)-152 3613 y(at)29 b(the)e(receiv)n(er,)i(but)f(do)r(es)g(not)g
(incorp)r(orate)h(w)n(a)n(v)n(efron)n(t)g(seman-)-152
3701 y(tics)21 b(as)f(do)r(es)h(StreaMIT.)g(Moreo)n(v)n(er,)h(its)e(fo)
r(cus)h(is)g(on)f(sp)r(eci\014cation)-152 3788 y(and)26
b(v)n(eri\014cation)h(whereas)g(StreaMIT)g(aims)f(to)h(pro)r(duce)f(an)
g(e\016-)-152 3875 y(cien)n(t)g(implemen)n(tation.)-152
4066 y Fs(7.)100 b(CONCLUSIONS)-152 4157 y Fr(This)34
b(pap)r(er)f(presen)n(ts)g(StreaMIT,)g(a)h(no)n(v)n(el)e(language)i
(for)g(high-)-152 4244 y(p)r(erformance)i(streaming)g(applications.)67
b(Streaming)36 b(programs)-152 4332 y(are)d(an)g(emerging)f(class)i(of)
f(v)n(ery)e(imp)r(ortan)n(t)h(applications)i(with)-152
4419 y(distinct)19 b(prop)r(erties)h(from)e(other)h(recognized)h
(application)g(classes.)-152 4593 y(StreaMIT)26 b(aims)g(to)f(raise)i
(the)e(abstraction)h(lev)n(el)g(in)f(stream)g(pro-)-152
4680 y(gramming,)20 b(thereb)n(y)e(impro)n(ving)h(programmer)f(pro)r
(ductivit)n(y)g(and)-152 4767 y(program)27 b(robustness.)38
b(This)28 b(pap)r(er)f(presen)n(ts)f(fundamen)n(tal)g(pro-)-152
4855 y(gramming)e(constructs)g(for)h(the)f(Stream)f(application)i
(domain.)33 b(It)-152 4942 y(iden)n(ti\014es)18 b(information)g(\015o)n
(w)g(as)g(the)g(natural)g(mo)r(del)f(for)i(reasoning)-152
5029 y(ab)r(out)27 b(streaming)g(applications,)i(and)d(presen)n(ts)h(a)
g(formal)h(de\014ni-)-152 5116 y(tion)21 b(of)h(the)e(language)j(using)
e(a)g(seman)n(tics)f(of)i(time)e(for)i(StreaMIT.)-152
5290 y(The)28 b(second)h(goal)g(of)g(StreaMIT)f(is)g(to)h(pro)n(vide)e
(a)h(compiler)g(that)-152 5378 y(p)r(erforms)34 b(stream-sp)r(eci\014c)
f(optimizations)h(to)g(ac)n(hiev)n(e)f(the)g(p)r(er-)2040
-69 y(formance)d(of)g(an)f(exp)r(ert)g(assem)n(bly)g(programmer.)44
b(Curren)n(tly)-6 b(,)30 b(a)2040 19 y(library-based)g(implemen)n
(tation)f(of)i(StreaMIT)f(is)h(w)n(orking.)48 b(W)-6
b(e)2040 106 y(are)21 b(starting)h(the)e(dev)n(elopmen)n(t)f(of)i(the)g
(\014rst)f(compiler)h(implemen-)2040 193 y(tation)35
b(of)g(StreaMIT.)g(Another)f(area)h(of)g(future)f(researc)n(h)h(is)f
(to)2040 280 y(dev)n(elop)c(a)h(clean)f(high-lev)n(el)h(syn)n(tax)e
(for)i(StreaMIT.)g(The)g(Ja)n(v)l(a-)2040 367 y(based)g(syn)n(tax)e
(has)i(man)n(y)e(adv)l(an)n(tages,)j(including)f(programmer)2040
454 y(familiarit)n(y)-6 b(,)24 b(a)n(v)l(ailabilit)n(y)f(of)g(compiler)
f(framew)n(orks)h(and)f(a)h(robust)2040 542 y(language)40
b(sp)r(eci\014cation.)76 b(Ho)n(w)n(ev)n(er,)43 b(the)38
b(resulting)i(StreaMIT)2040 629 y(syn)n(tax)25 b(is)h(cum)n(b)r
(ersome.)2040 828 y Fs(8.)99 b(REFERENCES)2040 915 y
Fr([1])39 b(Sp)r(eci\014cation)26 b(and)f(description)h(language.)h
(CCITT)2159 1002 y(Recommendation)c(Z.100,)28 b(ITU,)e(Genev)l(a,)f
(1992.)2040 1149 y([2])39 b(H.)25 b(Ab)r(elson)h(and)f(G.)h(Sussman.)f
(Structure)g(and)2159 1236 y(in)n(terpretation)g(of)i(computer)d
(programs.)j(MIT)f(Press,)2159 1324 y(Cam)n(bridge,)f(MA,)h(1985.)2040
1471 y([3])39 b(G.)26 b(Berry)f(and)h(G.)g(Gon)n(thier.)g(The)g
(esterel)h(sync)n(hronous)2159 1558 y(programming)d(language:)36
b(Design,)27 b(seman)n(tics,)2159 1645 y(implemen)n(tation.)d
Fp(Scienc)l(e)29 b(of)e(Computer)h(Pr)l(o)l(gr)l(amming)p
Fr(,)2159 1732 y(19\(2\):87{152,)h(1992.)2040 1879 y([4])39
b(S.)25 b(S.)h(Bhattac)n(haryy)n(a,)g(P)-6 b(.)25 b(K.)h(Murth)n(y)-6
b(,)25 b(and)g(E.)h(A.)g(Lee.)2159 1966 y Fp(Softwar)l(e)i(Synthesis)h
(fr)l(om)f(Data\015ow)g(Gr)l(aphs)p Fr(.)g(Klu)n(w)n(er)2159
2053 y(Academic)d(Publishers,)h(1996.)i(189)e(pages.)2040
2200 y([5])39 b(J.)26 b(Gosling,)i(B.)e(Jo)n(y)-6 b(,)26
b(and)f(G.)h(Steele.)g Fp(The)i(Java)h(L)l(anguage)2159
2288 y(Sp)l(e)l(ci\014c)l(ation)p Fr(.)e(Addison)e(W)-6
b(esley)g(,)26 b(1997.)2040 2434 y([6])39 b(N.)25 b(Halb)n(w)n(ac)n
(hs,)h(P)-6 b(.)26 b(Caspi,)h(P)-6 b(.)26 b(Ra)n(ymond,)e(and)h(D.)h
(Pilaud.)2159 2522 y(The)f(sync)n(hronous)h(data-\015o)n(w)g
(programming)e(language)2159 2609 y(LUSTRE.)h Fp(Pr)l(o)l(c)l(e)l(e)l
(dings)30 b(of)d(the)h(IEEE)p Fr(,)e(79\(9\):1305{1320,)2159
2696 y(Septem)n(b)r(er)d(1991.)2040 2843 y([7])39 b(E.)26
b(A.)f(Lee.)h(Ov)n(erview)g(of)g(the)g(ptolem)n(y)e(pro)t(ject.)j
(UCB/ERL)2159 2930 y(T)-6 b(ec)n(hnical)26 b(Memorandum)e(UCB/ERL)i
(M01/11,)i(Dept.)2159 3017 y(EECS,)e(Univ)n(ersit)n(y)f(of)h
(California,)j(Berk)n(eley)-6 b(,)26 b(CA,)g(Marc)n(h)2159
3104 y(2001.)2040 3251 y([8])39 b(S.)25 b(Rixner,)g(W.)h(J.)h(Dally)-6
b(,)25 b(U.)h(J.)g(Kapani,)g(B.)h(Khailan)n(y)-6 b(,)2159
3339 y(A.)25 b(Lop)r(ez-Lagunas,)i(P)-6 b(.)26 b(R.)f(Mattson,)i(and)e
(J.)i(D.)e(Ow)n(ens.)h(A)2159 3426 y(bandwidth-e\016cien)n(t)e(arc)n
(hitecture)i(for)h(media)e(pro)r(cessing.)2159 3513 y(In)g
Fp(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)e(the)i(6th)f(International)h(Symp)l
(osium)f(on)2159 3600 y(High-Performanc)l(e)h(Computer)g(A)n(r)l(chite)
l(ctur)l(e)p Fr(,)g(Dallas,)e(TX,)2159 3687 y(No)n(v)n(em)n(b)r(er)c
(1998.)2040 3834 y([9])39 b(R.)25 b(Stephens.)g(A)g(surv)n(ey)g(of)h
(stream)g(pro)r(cessing.)h Fp(A)l(cta)2159 3921 y(Informatic)l(a)p
Fr(,)f(34\(7\):491{541,)k(1997.)1902 5627 y(12)p eop
%%Page: 13 13
13 12 bop 500 1841 a @beginspecial 70 @llx 296 @lly 450
@urx 490 @ury 3456 @rwi @setspecial
%%BeginDocument: fft-pre-tape.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725101253)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 70 296 450 490
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

70 296 moveto
450 296 lineto
450 490 lineto
70 490 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font ACKLGD+TimesNewRoman
11 dict begin
/FontName /ACKLGD+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACKLGD+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 90 /Z put
dup 104 /h put
pop
%%EndResource
[/N57/ACKLGD+TimesNewRoman 1 TZ
%%BeginResource: font ACKLEB+Arial
11 dict begin
/FontName /ACKLEB+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACKLEB+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N54/ACKLEB+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
70 296 380 194 re W n
[ 0 -1 1 0 -226 560 ] concat
/N45 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N66 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N45 /ColorSpace findRes cs
0 0 0 scn
/N66 /ExtGState findRes gs
1 i
111.401 415.841 m
110.681 416.44099 l
109.36099 414.881 l
110.08099 414.28101 l
f 
156.401 374.92101 m
157.121 374.321 l
155.80099 372.761 l
155.08099 373.36099 l
f 
111.401 415.841 m
110.08099 414.28101 l
155.08099 373.36099 l
156.401 374.92101 l
f 
222.881 414.401 m
223.601 415.00101 l
222.28101 416.561 l
221.561 415.961 l
f 
174.64101 375.521 m
173.92101 374.92101 l
172.601 376.481 l
173.321 377.08099 l
f 
222.881 414.401 m
221.561 415.961 l
173.321 377.08099 l
174.64101 375.521 l
f 
110.08099 554.321 m
109.36099 553.72099 l
110.681 552.161 l
111.401 552.761 l
f 
157.00101 593.681 m
157.72099 594.28101 l
159.041 592.72099 l
158.321 592.121 l
f 
110.08099 554.321 m
111.401 552.761 l
158.321 592.121 l
157.00101 593.681 l
f 
221.561 552.761 m
222.401 552.161 l
223.601 553.841 l
222.761 554.44099 l
f 
170.44099 590.561 m
169.601 591.161 l
170.80099 592.841 l
171.64101 592.241 l
f 
221.561 552.761 m
222.761 554.44099 l
171.64101 592.241 l
170.44099 590.561 l
f 
101.681 511.601 m
102.401 512.321 l
100.961 513.761 l
100.241 513.041 l
f 
101.681 511.601 m
87.881 498.64101 l
86.201 499.36099 l
86.201 499.841 l
86.44099 500.08099 l
100.241 513.041 l
f 
88.241 499.36099 m
88.241 469.241 l
86.561 468.521 l
86.201 468.881 l
86.201 499.36099 l
f 
102.401 457.481 m
103.121 456.881 l
101.80099 455.321 l
101.08099 455.92101 l
f 
87.881 470.08099 m
86.561 468.521 l
101.08099 455.92101 l
102.401 457.481 l
f 
121.00101 512.80099 m
120.28101 513.521 l
118.841 512.08099 l
119.561 511.36099 l
f 
121.00101 512.80099 m
134.681 499.841 l
135.041 499.481 l
135.041 499.121 l
133.241 498.401 l
119.561 511.36099 l
f 
135.041 499.121 m
135.041 468.64101 l
134.681 468.28101 l
133.00101 469.00101 l
133.00101 499.121 l
f 
120.28101 455.561 m
119.561 454.961 l
118.241 456.521 l
118.961 457.121 l
f 
134.681 468.28101 m
133.36099 469.841 l
118.961 457.121 l
120.28101 455.561 l
f 
1 1 1 scn
98.08099 490.36099 8.88 -12.48 rf
0 0 0 scn
97.841 490.601 0.48 -12.72 rf
98.08099 490.601 9.12 -0.48 rf
106.72099 490.36099 0.48 -12.72 rf
97.841 478.121 9.12 -0.48 rf
BT
/N57 1 Tf
0 8.3813 -6.48 0 104.8006 482.20061 Tm
0 Tc
0 Tw
(0)Tj 
ET
1 1 1 scn
89.08099 490.36099 9 -12.48 rf
0 0 0 scn
88.841 490.601 0.48 -12.72 rf
89.08099 490.601 9.24001 -0.48 rf
97.841 490.36099 0.48 -12.72 rf
88.841 478.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 95.92059 482.20061 Tm
(2)Tj 
ET
1 1 1 scn
80.08099 490.36099 8.88 -12.48 rf
0 0 0 scn
79.841 490.601 0.48 -12.72 rf
80.08099 490.601 9.12 -0.48 rf
88.72099 490.36099 0.48 -12.72 rf
79.841 478.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 86.8006 482.20061 Tm
(8)Tj 
ET
1 1 1 scn
70.961 490.36099 8.88 -12.48 rf
0 0 0 scn
70.72099 490.601 0.48 -12.72 rf
70.961 490.601 9.12 -0.48 rf
79.601 490.36099 0.48 -12.72 rf
70.72099 478.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 77.6806 480.1606 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
141.521 490.36099 9 -12.48 rf
0 0 0 scn
141.28101 490.601 0.48 -12.72 rf
141.521 490.601 9.24001 -0.48 rf
150.28101 490.36099 0.48 -12.72 rf
141.28101 478.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 148.3606 482.20061 Tm
0 Tc
(1)Tj 
ET
1 1 1 scn
132.64101 490.36099 8.88 -12.48 rf
0 0 0 scn
132.401 490.601 0.48 -12.72 rf
132.64101 490.601 9.12 -0.48 rf
141.28101 490.36099 0.48 -12.72 rf
132.401 478.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 139.3606 482.20061 Tm
(3)Tj 
ET
1 1 1 scn
123.521 490.36099 9 -12.48 rf
0 0 0 scn
123.28101 490.601 0.48 -12.72 rf
123.521 490.601 9.24001 -0.48 rf
132.28101 490.36099 0.48 -12.72 rf
123.28101 478.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 130.3606 482.20061 Tm
(9)Tj 
ET
1 1 1 scn
114.401 490.36099 9 -12.48 rf
0 0 0 scn
114.161 490.601 0.48 -12.72 rf
114.401 490.601 9.24001 -0.48 rf
123.161 490.36099 0.48 -12.72 rf
114.161 478.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 121.2406 480.28059 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
97.241 428.561 m
97.481 425.80099 l
98.321 423.28101 l
99.521 421.00101 l
101.201 418.961 l
103.121 417.401 l
105.401 416.08099 l
108.041 415.36099 l
110.681 415.00101 l
113.44099 415.36099 l
115.961 416.08099 l
118.241 417.401 l
120.28101 418.961 l
121.841 421.00101 l
123.161 423.28101 l
123.881 425.80099 l
124.241 428.561 l
124.241 446.561 l
123.881 449.321 l
123.161 451.841 l
121.841 454.121 l
120.28101 456.161 l
118.241 457.841 l
115.961 459.041 l
113.44099 459.761 l
110.681 460.121 l
108.041 459.761 l
105.401 459.041 l
103.121 457.841 l
101.201 456.161 l
99.521 454.121 l
98.321 451.841 l
97.481 449.321 l
97.241 446.561 l
97.241 428.561 l
f* 
0 0 0 scn
97.481 428.561 m
97.72099 425.80099 l
97.72099 425.92101 l
98.561 423.401 l
99.761 421.121 l
99.761 421.241 l
101.44099 419.201 l
103.36099 417.64101 l
103.241 417.64101 l
105.521 416.321 l
108.161 415.601 l
110.80099 415.241 l
110.681 415.241 l
113.44099 415.601 l
115.961 416.321 l
115.841 416.321 l
118.121 417.64101 l
120.161 419.201 l
120.161 419.08099 l
121.72099 421.121 l
123.041 423.401 l
122.92101 423.401 l
123.64101 425.92101 l
124.00101 428.681 l
124.00101 428.561 l
124.00101 446.561 l
123.64101 449.321 l
122.92101 451.841 l
123.041 451.72099 l
121.72099 454.00101 l
120.161 456.041 l
118.121 457.72099 l
118.121 457.601 l
115.841 458.80099 l
115.961 458.80099 l
113.44099 459.521 l
110.681 459.881 l
110.80099 459.881 l
108.161 459.521 l
105.521 458.80099 l
103.241 457.601 l
103.36099 457.72099 l
101.44099 456.041 l
99.761 454.00101 l
98.561 451.72099 l
98.561 451.841 l
97.72099 449.321 l
97.481 446.561 l
97.481 428.561 l
97.00101 428.561 l
97.00101 446.561 l
97.241 449.321 l
97.241 449.44099 l
98.08099 451.961 l
99.28101 454.241 l
99.401 454.36099 l
101.08099 456.401 l
103.00101 458.08099 l
105.28101 459.28101 l
105.401 459.28101 l
108.041 460.00101 l
110.681 460.36099 l
110.80099 460.36099 l
113.561 460.00101 l
116.08099 459.28101 l
118.36099 458.08099 l
118.481 458.08099 l
120.521 456.401 l
120.521 456.28101 l
122.08099 454.241 l
123.401 451.961 l
124.121 449.44099 l
124.481 446.681 l
124.481 428.561 l
124.121 425.80099 l
123.401 423.28101 l
123.401 423.161 l
122.08099 420.881 l
120.521 418.841 l
120.401 418.841 l
118.36099 417.28101 l
116.08099 415.961 l
116.08099 415.841 l
113.561 415.121 l
110.80099 414.761 l
110.681 414.761 l
108.041 415.121 l
105.401 415.841 l
105.28101 415.961 l
103.00101 417.28101 l
101.08099 418.841 l
99.401 420.881 l
99.28101 420.881 l
98.08099 423.161 l
98.08099 423.28101 l
97.241 425.80099 l
97.00101 428.561 l
f 
97.481 428.561 m
97.00101 428.561 l
f 
1 1 1 scn
97.241 518.561 m
97.481 515.80099 l
98.321 513.28101 l
99.521 511.00101 l
101.201 508.961 l
103.121 507.401 l
105.401 506.08099 l
108.041 505.36099 l
110.681 505.00101 l
113.44099 505.36099 l
115.961 506.08099 l
118.241 507.401 l
120.28101 508.961 l
121.841 511.00101 l
123.161 513.28101 l
123.881 515.80099 l
124.241 518.561 l
124.241 539.92101 l
123.881 542.681 l
123.161 545.201 l
121.841 547.481 l
120.28101 549.521 l
118.241 551.201 l
115.961 552.401 l
113.44099 553.241 l
110.681 553.481 l
108.041 553.241 l
105.401 552.401 l
103.121 551.201 l
101.201 549.521 l
99.521 547.481 l
98.321 545.201 l
97.481 542.681 l
97.241 539.92101 l
97.241 518.561 l
f* 
0 0 0 scn
97.481 518.561 m
97.72099 515.80099 l
97.72099 515.92101 l
98.561 513.401 l
99.761 511.121 l
99.761 511.241 l
101.44099 509.201 l
103.36099 507.64101 l
103.241 507.64101 l
105.521 506.321 l
108.161 505.601 l
110.80099 505.241 l
110.681 505.241 l
113.44099 505.601 l
115.961 506.321 l
115.841 506.321 l
118.121 507.64101 l
120.161 509.201 l
120.161 509.08099 l
121.72099 511.121 l
123.041 513.401 l
122.92101 513.401 l
123.64101 515.92101 l
124.00101 518.681 l
124.00101 518.561 l
124.00101 539.92101 l
123.64101 542.681 l
122.92101 545.201 l
123.041 545.08099 l
121.72099 547.36099 l
120.161 549.401 l
118.121 551.08099 l
118.121 550.961 l
115.841 552.161 l
115.961 552.161 l
113.44099 553.00101 l
110.681 553.241 l
108.041 553.00101 l
108.161 553.00101 l
105.521 552.161 l
103.241 550.961 l
103.36099 551.08099 l
101.44099 549.401 l
99.761 547.36099 l
98.561 545.08099 l
98.561 545.201 l
97.72099 542.681 l
97.481 539.92101 l
97.481 518.561 l
97.00101 518.561 l
97.00101 539.92101 l
97.241 542.681 l
97.241 542.80099 l
98.08099 545.321 l
99.28101 547.601 l
99.401 547.72099 l
101.08099 549.761 l
103.00101 551.44099 l
105.28101 552.64101 l
105.401 552.64101 l
108.041 553.481 l
110.681 553.72099 l
113.44099 553.481 l
113.561 553.481 l
116.08099 552.64101 l
118.36099 551.44099 l
118.481 551.44099 l
120.521 549.761 l
120.521 549.64101 l
122.08099 547.601 l
123.401 545.321 l
124.121 542.80099 l
124.481 540.041 l
124.481 518.561 l
124.121 515.80099 l
123.401 513.28101 l
123.401 513.161 l
122.08099 510.881 l
120.521 508.841 l
120.401 508.841 l
118.36099 507.28101 l
116.08099 505.961 l
116.08099 505.841 l
113.561 505.121 l
110.80099 504.761 l
110.681 504.761 l
108.041 505.121 l
105.401 505.841 l
105.28101 505.961 l
103.00101 507.28101 l
101.08099 508.841 l
99.401 510.881 l
99.28101 510.881 l
98.08099 513.161 l
98.08099 513.28101 l
97.241 515.80099 l
97.00101 518.561 l
f 
97.481 518.561 m
97.00101 518.561 l
f 
BT
/N54 1 Tf
0 6.36 -6.36 0 108.64059 508.3606 Tm
0.01019 Tc
-0.0239 Tw
(we)Tj [19.2 ]TJ (i)Tj [6 ]TJ (ght)Tj [23.89999 ]TJ (ed rou)Tj [19.2 ]TJ (nd )Tj 
1 -1.2453 TD
0.008 Tc
-0.00279 Tw
(ro)Tj [17 ]TJ (bin)Tj [17 ]TJ ( \(2,)Tj [21.7 ]TJ ( 2\))Tj 
-14.22639 0.6792 TD
-0.0029 Tw
(ro)Tj [17.10001 ]TJ (und)Tj [17.10001 ]TJ ( ro)Tj [17.10001 ]TJ (bi)Tj [3.89999 ]TJ (n)Tj 
ET
1 1 1 scn
152.44099 345.401 m
152.681 342.64101 l
153.521 340.121 l
154.72099 337.841 l
156.401 335.92101 l
158.44099 334.241 l
160.72099 332.92101 l
163.241 332.201 l
166.00101 331.961 l
168.64101 332.201 l
171.161 332.92101 l
173.561 334.241 l
175.481 335.92101 l
177.161 337.841 l
178.36099 340.121 l
179.201 342.64101 l
179.44099 345.401 l
179.44099 365.321 l
179.201 368.08099 l
178.36099 370.601 l
177.161 372.881 l
175.481 374.92101 l
173.561 376.481 l
171.161 377.80099 l
168.64101 378.521 l
166.00101 378.881 l
163.241 378.521 l
160.72099 377.80099 l
158.44099 376.481 l
156.401 374.92101 l
154.72099 372.881 l
153.521 370.601 l
152.681 368.08099 l
152.44099 365.321 l
152.44099 345.401 l
f* 
0 0 0 scn
152.681 345.401 m
152.92101 342.64101 l
152.92101 342.761 l
153.761 340.241 l
154.961 337.961 l
154.961 338.08099 l
156.64101 336.161 l
158.681 334.481 l
158.561 334.481 l
160.841 333.161 l
163.36099 332.44099 l
163.241 332.44099 l
166.00101 332.201 l
168.64101 332.44099 l
171.161 333.161 l
171.041 333.161 l
173.44099 334.481 l
175.36099 336.161 l
177.041 338.08099 l
176.92101 337.961 l
178.121 340.241 l
178.961 342.761 l
178.961 342.64101 l
179.201 345.401 l
179.201 365.321 l
178.961 368.08099 l
178.121 370.601 l
178.121 370.481 l
176.92101 372.761 l
177.041 372.761 l
175.36099 374.80099 l
173.44099 376.36099 l
173.44099 376.241 l
171.041 377.561 l
171.161 377.561 l
168.64101 378.28101 l
166.00101 378.64101 l
166.121 378.64101 l
163.36099 378.28101 l
160.841 377.561 l
160.841 377.681 l
158.561 376.36099 l
156.521 374.80099 l
156.64101 374.80099 l
154.961 372.761 l
153.761 370.481 l
153.761 370.601 l
152.92101 368.08099 l
152.681 365.321 l
152.681 345.401 l
152.201 345.401 l
152.201 365.321 l
152.44099 368.08099 l
152.44099 368.201 l
153.28101 370.72099 l
154.481 373.00101 l
154.601 373.121 l
156.28101 375.161 l
158.321 376.72099 l
160.601 378.041 l
160.72099 378.041 l
163.241 378.761 l
166.00101 379.121 l
166.121 379.121 l
168.761 378.761 l
171.28101 378.041 l
173.681 376.72099 l
173.80099 376.72099 l
175.72099 375.161 l
177.401 373.121 l
177.401 373.00101 l
178.601 370.72099 l
179.44099 368.201 l
179.44099 368.08099 l
179.681 365.321 l
179.681 345.401 l
179.44099 342.64101 l
178.601 340.121 l
178.601 340.00101 l
177.401 337.72099 l
175.72099 335.80099 l
173.80099 334.121 l
173.681 334.00101 l
171.28101 332.681 l
168.761 331.961 l
168.64101 331.961 l
166.00101 331.72099 l
163.241 331.961 l
160.72099 332.681 l
160.601 332.80099 l
158.321 334.121 l
156.28101 335.80099 l
154.601 337.72099 l
154.481 337.72099 l
153.28101 340.00101 l
153.28101 340.121 l
152.44099 342.64101 l
152.201 345.401 l
f 
152.681 345.401 m
152.201 345.401 l
f 
BT
0 6.36 -6.36 0 163.84061 334.12061 Tm
0.0099 Tc
-0.0047 Tw
(we)Tj [18.89999 ]TJ (i)Tj [5.7 ]TJ (g)Tj [0 ]TJ (h)Tj [18.89999 ]TJ (t)Tj [4.7 ]TJ (ed)Tj [18.89999 ]TJ ( rou)Tj [18.89999 ]TJ (nd )Tj 
1 -1.26421 TD
0.0071 Tc
-0.00191 Tw
(ro)Tj [16.10001 ]TJ (bin)Tj [16.10001 ]TJ ( \(4)Tj [16.10001 ]TJ (, 4\))Tj 
ET
1 1 1 scn
142.601 403.241 8.88 -12.48 rf
0 0 0 scn
142.36099 403.481 0.48 -12.72 rf
142.601 403.481 9.12 -0.48 rf
151.241 403.241 0.48 -12.72 rf
142.36099 391.00101 9.12 -0.48 rf
BT
/N57 1 Tf
0 8.3813 -6.48 0 149.3206 395.0806 Tm
0 Tc
0 Tw
(0)Tj 
ET
1 1 1 scn
133.601 403.241 9 -12.48 rf
0 0 0 scn
133.36099 403.481 0.48 -12.72 rf
133.601 403.481 9.24001 -0.48 rf
142.36099 403.241 0.48 -12.72 rf
133.36099 391.00101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 140.4406 395.0806 Tm
(1)Tj 
ET
1 1 1 scn
124.601 403.241 8.88 -12.48 rf
0 0 0 scn
124.36099 403.481 0.48 -12.72 rf
124.601 403.481 9.12 -0.48 rf
133.241 403.241 0.48 -12.72 rf
124.36099 391.00101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 131.3206 395.0806 Tm
(2)Tj 
ET
1 1 1 scn
115.36099 403.241 9 -12.48 rf
0 0 0 scn
115.121 403.481 0.48 -12.72 rf
115.36099 403.481 9.24001 -0.48 rf
124.121 403.241 0.48 -12.72 rf
115.121 391.00101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 122.20061 395.0806 Tm
(3)Tj 
ET
1 1 1 scn
106.36099 403.241 8.88 -12.48 rf
0 0 0 scn
106.121 403.481 0.48 -12.72 rf
106.36099 403.481 9.12 -0.48 rf
115.00101 403.241 0.48 -12.72 rf
106.121 391.00101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 113.0806 395.0806 Tm
(8)Tj 
ET
1 1 1 scn
97.36099 403.241 9 -12.48 rf
0 0 0 scn
97.121 403.481 0.48 -12.72 rf
97.36099 403.481 9.24001 -0.48 rf
106.121 403.241 0.48 -12.72 rf
97.121 391.00101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 104.20061 395.0806 Tm
(9)Tj 
ET
1 1 1 scn
88.36099 403.241 8.88 -12.48 rf
0 0 0 scn
88.121 403.481 0.48 -12.72 rf
88.36099 403.481 9.12 -0.48 rf
97.00101 403.241 0.48 -12.72 rf
88.121 391.00101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 95.0806 393.0406 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
79.121 403.241 9 -12.48 rf
0 0 0 scn
78.881 403.481 0.48 -12.72 rf
79.121 403.481 9.24001 -0.48 rf
87.881 403.241 0.48 -12.72 rf
78.881 391.00101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 85.9606 393.1606 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
142.72099 578.201 8.88 -12.48 rf
0 0 0 scn
142.481 578.44099 0.48 -12.72 rf
142.72099 578.44099 9.12 -0.48 rf
151.36099 578.201 0.48 -12.72 rf
142.481 565.961 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 149.4406 569.92059 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
133.72099 578.201 9 -12.48 rf
0 0 0 scn
133.481 578.44099 0.48 -12.72 rf
133.72099 578.44099 9.24001 -0.48 rf
142.481 578.201 0.48 -12.72 rf
133.481 565.961 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 140.56059 569.92059 Tm
(2)Tj 
ET
1 1 1 scn
124.72099 578.201 8.88 -12.48 rf
0 0 0 scn
124.481 578.44099 0.48 -12.72 rf
124.72099 578.44099 9.12 -0.48 rf
133.36099 578.201 0.48 -12.72 rf
124.481 565.961 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 131.4406 569.92059 Tm
(1)Tj 
ET
1 1 1 scn
115.481 578.201 9 -12.48 rf
0 0 0 scn
115.241 578.44099 0.48 -12.72 rf
115.481 578.44099 9.24001 -0.48 rf
124.241 578.201 0.48 -12.72 rf
115.241 565.961 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 122.3206 569.92059 Tm
(3)Tj 
ET
1 1 1 scn
106.481 578.201 8.88 -12.48 rf
0 0 0 scn
106.241 578.44099 0.48 -12.72 rf
106.481 578.44099 9.12 -0.48 rf
115.121 578.201 0.48 -12.72 rf
106.241 565.961 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 113.20061 569.92059 Tm
(8)Tj 
ET
1 1 1 scn
97.481 578.201 9 -12.48 rf
0 0 0 scn
97.241 578.44099 0.48 -12.72 rf
97.481 578.44099 9.24001 -0.48 rf
106.241 578.201 0.48 -12.72 rf
97.241 565.961 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 104.3206 567.8806 Tm
-0.0132 Tc
(10)Tj 
ET
1 1 1 scn
88.481 578.201 8.88 -12.48 rf
0 0 0 scn
88.241 578.44099 0.48 -12.72 rf
88.481 578.44099 9.12 -0.48 rf
97.121 578.201 0.48 -12.72 rf
88.241 565.961 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 95.20061 569.92059 Tm
0 Tc
(9)Tj 
ET
1 1 1 scn
79.241 578.201 9 -12.48 rf
0 0 0 scn
79.00101 578.44099 0.48 -12.72 rf
79.241 578.44099 9.24001 -0.48 rf
88.00101 578.201 0.48 -12.72 rf
79.00101 565.961 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 86.0806 568.12061 Tm
-0.0705 Tc
(11)Tj 
ET
213.161 511.72099 m
213.881 512.44099 l
212.44099 513.881 l
211.72099 513.161 l
f 
213.161 511.72099 m
199.481 498.881 l
197.80099 499.601 l
197.80099 500.08099 l
198.041 500.321 l
211.72099 513.161 l
f 
199.841 499.601 m
199.841 469.36099 l
198.161 468.64101 l
197.80099 469.00101 l
197.80099 499.601 l
f 
213.881 457.601 m
214.601 457.00101 l
213.28101 455.44099 l
212.561 456.041 l
f 
199.481 470.201 m
198.161 468.64101 l
212.561 456.041 l
213.881 457.601 l
f 
232.481 512.92101 m
231.761 513.64101 l
230.321 512.201 l
231.041 511.481 l
f 
232.481 512.92101 m
246.28101 499.961 l
246.64101 499.601 l
246.64101 499.241 l
244.841 498.521 l
231.041 511.481 l
f 
246.64101 499.241 m
246.64101 468.761 l
246.28101 468.401 l
244.601 469.121 l
244.601 499.241 l
f 
231.761 455.681 m
231.041 455.08099 l
229.72099 456.64101 l
230.44099 457.241 l
f 
246.28101 468.401 m
244.961 469.961 l
230.44099 457.241 l
231.761 455.681 l
f 
1 1 1 scn
209.561 490.601 9 -12.60001 rf
0 0 0 scn
209.321 490.841 0.48 -12.84 rf
209.561 490.841 9.24001 -0.48 rf
218.321 490.601 0.48 -12.84 rf
209.321 478.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 216.4006 482.3206 Tm
0 Tc
(4)Tj 
ET
1 1 1 scn
200.561 490.601 9 -12.60001 rf
0 0 0 scn
200.321 490.841 0.48 -12.84 rf
200.561 490.841 9.24001 -0.48 rf
209.321 490.601 0.48 -12.84 rf
200.321 478.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 207.4006 482.3206 Tm
(6)Tj 
ET
1 1 1 scn
191.561 490.601 9 -12.60001 rf
0 0 0 scn
191.321 490.841 0.48 -12.84 rf
191.561 490.841 9.24001 -0.48 rf
200.321 490.601 0.48 -12.84 rf
191.321 478.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 198.4006 480.28059 Tm
-0.0275 Tc
(12)Tj 
ET
1 1 1 scn
182.44099 490.601 8.88 -12.60001 rf
0 0 0 scn
182.201 490.841 0.48 -12.84 rf
182.44099 490.841 9.12 -0.48 rf
191.08099 490.601 0.48 -12.84 rf
182.201 478.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 189.1606 480.28059 Tm
(14)Tj 
ET
1 1 1 scn
253.121 490.601 8.88 -12.60001 rf
0 0 0 scn
252.881 490.841 0.48 -12.84 rf
253.121 490.841 9.12 -0.48 rf
261.761 490.601 0.48 -12.84 rf
252.881 478.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 259.84061 482.3206 Tm
0 Tc
(5)Tj 
ET
1 1 1 scn
244.121 490.601 9 -12.60001 rf
0 0 0 scn
243.881 490.841 0.48 -12.84 rf
244.121 490.841 9.24001 -0.48 rf
252.881 490.601 0.48 -12.84 rf
243.881 478.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 250.9606 482.3206 Tm
(7)Tj 
ET
1 1 1 scn
235.121 490.601 8.88 -12.60001 rf
0 0 0 scn
234.881 490.841 0.48 -12.84 rf
235.121 490.841 9.12 -0.48 rf
243.761 490.601 0.48 -12.84 rf
234.881 478.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 241.84061 480.28059 Tm
-0.0275 Tc
(13)Tj 
ET
1 1 1 scn
225.881 490.601 9 -12.60001 rf
0 0 0 scn
225.64101 490.841 0.48 -12.84 rf
225.881 490.841 9.24001 -0.48 rf
234.64101 490.601 0.48 -12.84 rf
225.64101 478.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 232.7206 480.28059 Tm
(15)Tj 
ET
1 1 1 scn
208.72099 428.681 m
208.961 425.92101 l
209.80099 423.401 l
211.00101 421.121 l
212.681 419.08099 l
214.72099 417.521 l
217.00101 416.201 l
219.521 415.481 l
222.161 415.121 l
224.92101 415.481 l
227.44099 416.201 l
229.72099 417.521 l
231.761 419.08099 l
233.44099 421.121 l
234.64101 423.401 l
235.481 425.92101 l
235.72099 428.681 l
235.72099 446.681 l
235.481 449.44099 l
234.64101 451.961 l
233.44099 454.241 l
231.761 456.28101 l
229.72099 457.961 l
227.44099 459.161 l
224.92101 460.00101 l
222.161 460.241 l
219.521 460.00101 l
217.00101 459.161 l
214.72099 457.961 l
212.681 456.28101 l
211.00101 454.241 l
209.80099 451.961 l
208.961 449.44099 l
208.72099 446.681 l
208.72099 428.681 l
f* 
0 0 0 scn
208.961 428.681 m
209.201 425.92101 l
209.201 426.041 l
210.041 423.521 l
211.241 421.241 l
211.241 421.36099 l
212.92101 419.321 l
212.80099 419.321 l
214.841 417.761 l
217.121 416.44099 l
219.64101 415.72099 l
222.28101 415.36099 l
222.161 415.36099 l
224.92101 415.72099 l
227.44099 416.44099 l
227.321 416.44099 l
229.601 417.761 l
231.64101 419.321 l
233.321 421.36099 l
233.201 421.241 l
234.401 423.521 l
235.241 426.041 l
235.241 425.92101 l
235.481 428.681 l
235.481 446.681 l
235.241 449.44099 l
234.401 451.961 l
234.401 451.841 l
233.201 454.121 l
233.321 454.121 l
231.64101 456.161 l
229.601 457.841 l
229.601 457.72099 l
227.321 458.92101 l
227.44099 458.92101 l
224.92101 459.761 l
222.161 460.00101 l
219.521 459.761 l
219.64101 459.761 l
217.121 458.92101 l
214.841 457.72099 l
214.961 457.841 l
212.92101 456.161 l
211.241 454.121 l
210.041 451.841 l
210.041 451.961 l
209.201 449.44099 l
208.961 446.681 l
208.961 428.681 l
208.481 428.681 l
208.481 446.681 l
208.72099 449.44099 l
208.72099 449.561 l
209.561 452.08099 l
210.761 454.36099 l
210.881 454.481 l
212.561 456.521 l
214.601 458.201 l
216.881 459.401 l
217.00101 459.401 l
219.521 460.241 l
222.161 460.481 l
224.92101 460.241 l
225.041 460.241 l
227.561 459.401 l
229.841 458.201 l
229.961 458.201 l
232.00101 456.521 l
233.681 454.481 l
233.681 454.36099 l
234.881 452.08099 l
235.72099 449.561 l
235.72099 449.44099 l
235.961 446.681 l
235.961 428.681 l
235.72099 425.92101 l
234.881 423.401 l
234.881 423.28101 l
233.681 421.00101 l
232.00101 418.961 l
231.881 418.961 l
229.841 417.401 l
227.561 416.08099 l
227.561 415.961 l
225.041 415.241 l
222.28101 414.881 l
222.161 414.881 l
219.521 415.241 l
217.00101 415.961 l
216.881 416.08099 l
214.601 417.401 l
212.561 418.961 l
210.881 421.00101 l
210.761 421.00101 l
209.561 423.28101 l
209.561 423.401 l
208.72099 425.92101 l
208.481 428.681 l
f 
208.961 428.681 m
208.481 428.681 l
f 
1 1 1 scn
208.72099 520.961 m
208.961 518.201 l
209.80099 515.681 l
211.00101 513.401 l
212.681 511.36099 l
214.72099 509.681 l
217.00101 508.481 l
219.521 507.64101 l
222.161 507.401 l
224.92101 507.64101 l
227.44099 508.481 l
229.72099 509.681 l
231.761 511.36099 l
233.44099 513.401 l
234.64101 515.681 l
235.481 518.201 l
235.72099 520.961 l
235.72099 540.041 l
235.481 542.80099 l
234.64101 545.321 l
233.44099 547.601 l
231.761 549.64101 l
229.72099 551.321 l
227.44099 552.521 l
224.92101 553.36099 l
222.161 553.601 l
219.521 553.36099 l
217.00101 552.521 l
214.72099 551.321 l
212.681 549.64101 l
211.00101 547.601 l
209.80099 545.321 l
208.961 542.80099 l
208.72099 540.041 l
208.72099 520.961 l
f* 
0 0 0 scn
208.961 520.961 m
209.201 518.201 l
209.201 518.321 l
210.041 515.80099 l
211.241 513.521 l
211.241 513.64101 l
212.92101 511.601 l
214.961 509.92101 l
214.841 509.92101 l
217.121 508.72099 l
219.64101 507.881 l
219.521 507.881 l
222.161 507.64101 l
224.92101 507.881 l
227.44099 508.72099 l
227.321 508.72099 l
229.601 509.92101 l
231.64101 511.601 l
233.321 513.64101 l
233.201 513.521 l
234.401 515.80099 l
235.241 518.321 l
235.241 518.201 l
235.481 520.961 l
235.481 540.041 l
235.241 542.80099 l
234.401 545.321 l
234.401 545.201 l
233.201 547.481 l
233.321 547.481 l
231.64101 549.521 l
229.601 551.201 l
229.601 551.08099 l
227.321 552.28101 l
227.44099 552.28101 l
224.92101 553.121 l
222.161 553.36099 l
219.521 553.121 l
219.64101 553.121 l
217.121 552.28101 l
214.841 551.08099 l
214.961 551.201 l
212.92101 549.521 l
211.241 547.481 l
210.041 545.201 l
210.041 545.321 l
209.201 542.80099 l
208.961 540.041 l
208.961 520.961 l
208.481 520.961 l
208.481 540.041 l
208.72099 542.80099 l
208.72099 542.92101 l
209.561 545.44099 l
210.761 547.72099 l
210.881 547.841 l
212.561 549.881 l
214.601 551.561 l
216.881 552.761 l
217.00101 552.761 l
219.521 553.601 l
222.161 553.841 l
224.92101 553.601 l
225.041 553.601 l
227.561 552.761 l
229.841 551.561 l
229.961 551.561 l
232.00101 549.881 l
233.681 547.841 l
233.681 547.72099 l
234.881 545.44099 l
235.72099 542.92101 l
235.72099 542.80099 l
235.961 540.041 l
235.961 520.961 l
235.72099 518.201 l
234.881 515.681 l
234.881 515.561 l
233.681 513.28101 l
232.00101 511.241 l
229.961 509.561 l
229.841 509.44099 l
227.561 508.241 l
225.041 507.401 l
224.92101 507.401 l
222.161 507.161 l
219.521 507.401 l
217.00101 508.241 l
216.881 508.241 l
214.601 509.44099 l
214.601 509.561 l
212.561 511.241 l
210.881 513.28101 l
210.761 513.28101 l
209.561 515.561 l
209.561 515.681 l
208.72099 518.201 l
208.481 520.961 l
f 
208.961 520.961 m
208.481 520.961 l
f 
BT
/N54 1 Tf
0 6.36 -6.36 0 220.84061 509.3206 Tm
0.0087 Tc
-0.00349 Tw
(w)Tj [13.89999 ]TJ (e)Tj [-1.2 ]TJ (i)Tj [4.5 ]TJ (g)Tj [17.7 ]TJ (hte)Tj [17.7 ]TJ (d)Tj [-1.2 ]TJ ( r)Tj [21 ]TJ (oun)Tj [17.7 ]TJ (d )Tj 
0.98109 -1.26421 TD
0.0083 Tc
-0.022 Tw
(rob)Tj [17.3 ]TJ (i)Tj [4.10001 ]TJ (n \(2, 2\))Tj 
-14.3396 0.81129 TD
0.0081 Tc
-0.0029 Tw
(ro)Tj [17.10001 ]TJ (und)Tj [17.10001 ]TJ ( rob)Tj [17.10001 ]TJ (i)Tj [3.89999 ]TJ (n)Tj 
ET
1 1 1 scn
244.36099 403.36099 8.88 -12.48 rf
0 0 0 scn
244.121 403.601 0.48 -12.72 rf
244.36099 403.601 9.12 -0.48 rf
253.00101 403.36099 0.48 -12.72 rf
244.121 391.121 9.12 -0.48 rf
BT
/N57 1 Tf
0 8.3813 -6.48 0 251.0806 395.20061 Tm
0 Tc
0 Tw
(4)Tj 
ET
1 1 1 scn
235.36099 403.36099 9 -12.48 rf
0 0 0 scn
235.121 403.601 0.48 -12.72 rf
235.36099 403.601 9.24001 -0.48 rf
244.121 403.36099 0.48 -12.72 rf
235.121 391.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 242.20061 395.20061 Tm
(5)Tj 
ET
1 1 1 scn
226.36099 403.36099 8.88 -12.48 rf
0 0 0 scn
226.121 403.601 0.48 -12.72 rf
226.36099 403.601 9.12 -0.48 rf
235.00101 403.36099 0.48 -12.72 rf
226.121 391.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 233.0806 395.20061 Tm
(6)Tj 
ET
1 1 1 scn
217.121 403.36099 9 -12.48 rf
0 0 0 scn
216.881 403.601 0.48 -12.72 rf
217.121 403.601 9.24001 -0.48 rf
225.881 403.36099 0.48 -12.72 rf
216.881 391.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 223.9606 395.20061 Tm
(7)Tj 
ET
1 1 1 scn
208.00101 403.36099 9 -12.48 rf
0 0 0 scn
207.761 403.601 0.48 -12.72 rf
208.00101 403.601 9.24001 -0.48 rf
216.761 403.36099 0.48 -12.72 rf
207.761 391.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 214.84061 393.1606 Tm
-0.0275 Tc
(12)Tj 
ET
1 1 1 scn
199.121 403.36099 8.88 -12.48 rf
0 0 0 scn
198.881 403.601 0.48 -12.72 rf
199.121 403.601 9.12 -0.48 rf
207.761 403.36099 0.48 -12.72 rf
198.881 391.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 205.9606 393.1606 Tm
(13)Tj 
ET
1 1 1 scn
190.121 403.36099 8.88 -12.48 rf
0 0 0 scn
189.881 403.601 0.48 -12.72 rf
190.121 403.601 9.12 -0.48 rf
198.761 403.36099 0.48 -12.72 rf
189.881 391.121 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 196.84061 393.1606 Tm
(14)Tj 
ET
1 1 1 scn
180.881 403.36099 9 -12.48 rf
0 0 0 scn
180.64101 403.601 0.48 -12.72 rf
180.881 403.601 9.24001 -0.48 rf
189.64101 403.36099 0.48 -12.72 rf
180.64101 391.121 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 187.7206 393.1606 Tm
(15)Tj 
ET
1 1 1 scn
244.481 578.321 8.88 -12.48 rf
0 0 0 scn
244.241 578.561 0.48 -12.72 rf
244.481 578.561 9.12 -0.48 rf
253.121 578.321 0.48 -12.72 rf
244.241 566.08099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 251.20061 570.0406 Tm
0 Tc
(4)Tj 
ET
1 1 1 scn
235.481 578.321 9 -12.48 rf
0 0 0 scn
235.241 578.561 0.48 -12.72 rf
235.481 578.561 9.24001 -0.48 rf
244.241 578.321 0.48 -12.72 rf
235.241 566.08099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 242.3206 570.0406 Tm
(6)Tj 
ET
1 1 1 scn
226.481 578.321 8.88 -12.48 rf
0 0 0 scn
226.241 578.561 0.48 -12.72 rf
226.481 578.561 9.12 -0.48 rf
235.121 578.321 0.48 -12.72 rf
226.241 566.08099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 233.20061 570.0406 Tm
(5)Tj 
ET
1 1 1 scn
217.241 578.321 9 -12.48 rf
0 0 0 scn
217.00101 578.561 0.48 -12.72 rf
217.241 578.561 9.24001 -0.48 rf
226.00101 578.321 0.48 -12.72 rf
217.00101 566.08099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 224.0806 570.0406 Tm
(7)Tj 
ET
1 1 1 scn
208.241 578.321 8.88 -12.48 rf
0 0 0 scn
208.00101 578.561 0.48 -12.72 rf
208.241 578.561 9.12 -0.48 rf
216.881 578.321 0.48 -12.72 rf
208.00101 566.08099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 214.9606 568.0006 Tm
-0.0132 Tc
(12)Tj 
ET
1 1 1 scn
199.241 578.321 9 -12.48 rf
0 0 0 scn
199.00101 578.561 0.48 -12.72 rf
199.241 578.561 9.24001 -0.48 rf
208.00101 578.321 0.48 -12.72 rf
199.00101 566.08099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 206.0806 568.0006 Tm
(14)Tj 
ET
1 1 1 scn
190.241 578.321 8.88 -12.48 rf
0 0 0 scn
190.00101 578.561 0.48 -12.72 rf
190.241 578.561 9.12 -0.48 rf
198.881 578.321 0.48 -12.72 rf
190.00101 566.08099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 196.9606 568.0006 Tm
(13)Tj 
ET
1 1 1 scn
181.00101 578.321 9 -12.48 rf
0 0 0 scn
180.761 578.561 0.48 -12.72 rf
181.00101 578.561 9.24001 -0.48 rf
189.761 578.321 0.48 -12.72 rf
180.761 566.08099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 187.84061 568.0006 Tm
(15)Tj 
ET
166.36099 333.761 2.03999 0.96001 rf
166.36099 297.761 2.03999 -0.96001 rf
166.36099 297.761 2.03999 36 rf
1 1 1 scn
230.561 322.961 9 -12.60001 rf
0 0 0 scn
230.321 323.201 0.48 -12.84 rf
230.561 323.201 9.24001 -0.48 rf
239.321 322.961 0.48 -12.84 rf
230.321 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 237.4006 314.6806 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
221.561 322.961 9 -12.60001 rf
0 0 0 scn
221.321 323.201 0.48 -12.84 rf
221.561 323.201 9.24001 -0.48 rf
230.321 322.961 0.48 -12.84 rf
221.321 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 228.4006 314.6806 Tm
(1)Tj 
ET
1 1 1 scn
212.561 322.961 9 -12.60001 rf
0 0 0 scn
212.321 323.201 0.48 -12.84 rf
212.561 323.201 9.24001 -0.48 rf
221.321 322.961 0.48 -12.84 rf
212.321 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 219.4006 314.6806 Tm
(2)Tj 
ET
1 1 1 scn
203.44099 322.961 8.88 -12.60001 rf
0 0 0 scn
203.201 323.201 0.48 -12.84 rf
203.44099 323.201 9.12 -0.48 rf
212.08099 322.961 0.48 -12.84 rf
203.201 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 210.1606 314.6806 Tm
(3)Tj 
ET
1 1 1 scn
194.321 322.961 8.88 -12.60001 rf
0 0 0 scn
194.08099 323.201 0.48 -12.84 rf
194.321 323.201 9.12 -0.48 rf
202.961 322.961 0.48 -12.84 rf
194.08099 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 201.1606 314.6806 Tm
(4)Tj 
ET
1 1 1 scn
185.321 322.961 9 -12.60001 rf
0 0 0 scn
185.08099 323.201 0.48 -12.84 rf
185.321 323.201 9.24001 -0.48 rf
194.08099 322.961 0.48 -12.84 rf
185.08099 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 192.1606 314.6806 Tm
(5)Tj 
ET
1 1 1 scn
176.321 322.961 8.88 -12.60001 rf
0 0 0 scn
176.08099 323.201 0.48 -12.84 rf
176.321 323.201 9.12 -0.48 rf
184.961 322.961 0.48 -12.84 rf
176.08099 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 183.1606 314.6806 Tm
(6)Tj 
ET
1 1 1 scn
167.201 322.961 8.88 -12.60001 rf
0 0 0 scn
166.961 323.201 0.48 -12.84 rf
167.201 323.201 9.12 -0.48 rf
175.841 322.961 0.48 -12.84 rf
166.961 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 173.92059 314.6806 Tm
(7)Tj 
ET
1 1 1 scn
158.44099 322.961 9 -12.60001 rf
0 0 0 scn
158.201 323.201 0.48 -12.84 rf
158.44099 323.201 9.24001 -0.48 rf
167.201 322.961 0.48 -12.84 rf
158.201 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 165.28059 314.6806 Tm
(8)Tj 
ET
1 1 1 scn
149.44099 322.961 9 -12.60001 rf
0 0 0 scn
149.201 323.201 0.48 -12.84 rf
149.44099 323.201 9.24001 -0.48 rf
158.201 322.961 0.48 -12.84 rf
149.201 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 156.28059 314.6806 Tm
(9)Tj 
ET
1 1 1 scn
140.44099 322.961 9 -12.60001 rf
0 0 0 scn
140.201 323.201 0.48 -12.84 rf
140.44099 323.201 9.24001 -0.48 rf
149.201 322.961 0.48 -12.84 rf
140.201 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 147.28059 312.64059 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
131.321 322.961 8.88 -12.60001 rf
0 0 0 scn
131.08099 323.201 0.48 -12.84 rf
131.321 323.201 9.12 -0.48 rf
139.961 322.961 0.48 -12.84 rf
131.08099 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 138.0406 312.7606 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
122.201 322.961 8.88 -12.60001 rf
0 0 0 scn
121.961 323.201 0.48 -12.84 rf
122.201 323.201 9.12 -0.48 rf
130.841 322.961 0.48 -12.84 rf
121.961 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 128.92059 312.64059 Tm
-0.0275 Tc
(12)Tj 
ET
1 1 1 scn
113.201 322.961 9 -12.60001 rf
0 0 0 scn
112.961 323.201 0.48 -12.84 rf
113.201 323.201 9.24001 -0.48 rf
121.961 322.961 0.48 -12.84 rf
112.961 310.601 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 120.0406 312.64059 Tm
(13)Tj 
ET
1 1 1 scn
104.201 322.961 8.88 -12.60001 rf
0 0 0 scn
103.961 323.201 0.48 -12.84 rf
104.201 323.201 9.12 -0.48 rf
112.841 322.961 0.48 -12.84 rf
103.961 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 110.92059 312.64059 Tm
(14)Tj 
ET
1 1 1 scn
95.08099 322.961 8.88 -12.60001 rf
0 0 0 scn
94.841 323.201 0.48 -12.84 rf
95.08099 323.201 9.12 -0.48 rf
103.72099 322.961 0.48 -12.84 rf
94.841 310.601 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 101.8006 312.64059 Tm
(15)Tj 
ET
165.041 671.44099 2.03999 0.96001 rf
165.041 635.44099 2.03999 -0.96001 rf
165.041 635.44099 2.03999 36 rf
1 1 1 scn
229.241 660.521 8.88 -12.48 rf
0 0 0 scn
229.00101 660.761 0.48 -12.72 rf
229.241 660.761 9.12 -0.48 rf
237.881 660.521 0.48 -12.72 rf
229.00101 648.28101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 235.9606 652.3606 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
220.241 660.521 9 -12.48 rf
0 0 0 scn
220.00101 660.761 0.48 -12.72 rf
220.241 660.761 9.24001 -0.48 rf
229.00101 660.521 0.48 -12.72 rf
220.00101 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 227.0806 652.3606 Tm
(4)Tj 
ET
1 1 1 scn
211.241 660.521 8.88 -12.48 rf
0 0 0 scn
211.00101 660.761 0.48 -12.72 rf
211.241 660.761 9.12 -0.48 rf
219.881 660.521 0.48 -12.72 rf
211.00101 648.28101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 217.9606 652.3606 Tm
(2)Tj 
ET
1 1 1 scn
202.00101 660.521 9 -12.48 rf
0 0 0 scn
201.761 660.761 0.48 -12.72 rf
202.00101 660.761 9.24001 -0.48 rf
210.761 660.521 0.48 -12.72 rf
201.761 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 208.84061 652.3606 Tm
(6)Tj 
ET
1 1 1 scn
192.881 660.521 9 -12.48 rf
0 0 0 scn
192.64101 660.761 0.48 -12.72 rf
192.881 660.761 9.24001 -0.48 rf
201.64101 660.521 0.48 -12.72 rf
192.64101 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 199.7206 652.3606 Tm
(1)Tj 
ET
1 1 1 scn
184.00101 660.521 8.88 -12.48 rf
0 0 0 scn
183.761 660.761 0.48 -12.72 rf
184.00101 660.761 9.12 -0.48 rf
192.64101 660.521 0.48 -12.72 rf
183.761 648.28101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 190.7206 652.3606 Tm
(5)Tj 
ET
1 1 1 scn
174.881 660.521 9 -12.48 rf
0 0 0 scn
174.64101 660.761 0.48 -12.72 rf
174.881 660.761 9.24001 -0.48 rf
183.64101 660.521 0.48 -12.72 rf
174.64101 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 181.7206 652.3606 Tm
(3)Tj 
ET
1 1 1 scn
165.761 660.521 9 -12.48 rf
0 0 0 scn
165.521 660.761 0.48 -12.72 rf
165.761 660.761 9.24001 -0.48 rf
174.521 660.521 0.48 -12.72 rf
165.521 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 172.6006 652.3606 Tm
(7)Tj 
ET
1 1 1 scn
157.00101 660.521 9 -12.48 rf
0 0 0 scn
156.761 660.761 0.48 -12.72 rf
157.00101 660.761 9.24001 -0.48 rf
165.761 660.521 0.48 -12.72 rf
156.761 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 163.84061 652.3606 Tm
(8)Tj 
ET
1 1 1 scn
148.121 660.521 8.88 -12.48 rf
0 0 0 scn
147.881 660.761 0.48 -12.72 rf
148.121 660.761 9.12 -0.48 rf
156.761 660.521 0.48 -12.72 rf
147.881 648.28101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 154.84061 650.3206 Tm
-0.0275 Tc
(12)Tj 
ET
1 1 1 scn
139.00101 660.521 9 -12.48 rf
0 0 0 scn
138.761 660.761 0.48 -12.72 rf
139.00101 660.761 9.24001 -0.48 rf
147.761 660.521 0.48 -12.72 rf
138.761 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 145.84061 650.3206 Tm
(10)Tj 
ET
1 1 1 scn
129.881 660.521 9 -12.48 rf
0 0 0 scn
129.64101 660.761 0.48 -12.72 rf
129.881 660.761 9.24001 -0.48 rf
138.64101 660.521 0.48 -12.72 rf
129.64101 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 136.7206 650.3206 Tm
(14)Tj 
ET
1 1 1 scn
120.761 660.521 9 -12.48 rf
0 0 0 scn
120.521 660.761 0.48 -12.72 rf
120.761 660.761 9.24001 -0.48 rf
129.521 660.521 0.48 -12.72 rf
120.521 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 127.6006 652.3606 Tm
0 Tc
(9)Tj 
ET
1 1 1 scn
111.881 660.521 8.88 -12.48 rf
0 0 0 scn
111.64101 660.761 0.48 -12.72 rf
111.881 660.761 9.12 -0.48 rf
120.521 660.521 0.48 -12.72 rf
111.64101 648.28101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 118.6006 650.3206 Tm
-0.0275 Tc
(13)Tj 
ET
1 1 1 scn
102.761 660.521 9 -12.48 rf
0 0 0 scn
102.521 660.761 0.48 -12.72 rf
102.761 660.761 9.24001 -0.48 rf
111.521 660.521 0.48 -12.72 rf
102.521 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 109.6006 650.4406 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
93.64101 660.521 9 -12.48 rf
0 0 0 scn
93.401 660.761 0.48 -12.72 rf
93.64101 660.761 9.24001 -0.48 rf
102.401 660.521 0.48 -12.72 rf
93.401 648.28101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 100.48061 650.3206 Tm
-0.0275 Tc
(15)Tj 
ET
1 1 1 scn
152.08099 603.761 m
152.321 601.121 l
153.161 598.601 l
154.36099 596.201 l
156.041 594.28101 l
158.08099 592.601 l
160.36099 591.401 l
162.881 590.561 l
165.64101 590.321 l
168.28101 590.561 l
170.80099 591.401 l
173.08099 592.601 l
175.121 594.28101 l
176.80099 596.201 l
178.00101 598.601 l
178.841 601.121 l
179.08099 603.761 l
179.08099 621.881 l
178.841 624.521 l
178.00101 627.161 l
176.80099 629.44099 l
175.121 631.36099 l
173.08099 633.041 l
170.80099 634.241 l
168.28101 635.08099 l
165.64101 635.321 l
162.881 635.08099 l
160.36099 634.241 l
158.08099 633.041 l
156.041 631.36099 l
154.36099 629.44099 l
153.161 627.161 l
152.321 624.521 l
152.08099 621.881 l
152.08099 603.761 l
f* 
0 0 0 scn
152.321 603.761 m
152.561 601.121 l
152.561 601.241 l
153.401 598.72099 l
154.601 596.321 l
154.601 596.44099 l
156.28101 594.521 l
158.321 592.841 l
158.201 592.841 l
160.481 591.64101 l
163.00101 590.80099 l
162.881 590.80099 l
165.64101 590.561 l
168.28101 590.80099 l
170.80099 591.64101 l
170.681 591.64101 l
172.961 592.841 l
175.00101 594.521 l
176.681 596.44099 l
176.561 596.321 l
177.761 598.72099 l
178.601 601.241 l
178.601 601.121 l
178.841 603.761 l
178.841 621.881 l
178.601 624.521 l
177.761 627.161 l
177.761 627.041 l
176.561 629.321 l
176.681 629.321 l
175.00101 631.241 l
172.961 632.92101 l
172.961 632.80099 l
170.681 634.00101 l
170.80099 634.00101 l
168.28101 634.841 l
165.64101 635.08099 l
162.881 634.841 l
163.00101 634.841 l
160.481 634.00101 l
158.201 632.80099 l
158.321 632.92101 l
156.28101 631.241 l
154.601 629.321 l
153.401 627.041 l
153.401 627.161 l
152.561 624.521 l
152.321 621.881 l
152.321 603.761 l
151.841 603.761 l
151.841 621.881 l
152.08099 624.521 l
152.08099 624.64101 l
152.92101 627.28101 l
154.121 629.561 l
154.241 629.681 l
155.92101 631.601 l
157.961 633.28101 l
160.241 634.481 l
160.36099 634.481 l
162.881 635.321 l
165.64101 635.561 l
168.28101 635.321 l
168.401 635.321 l
170.92101 634.481 l
173.201 633.28101 l
173.321 633.28101 l
175.36099 631.601 l
177.041 629.681 l
177.041 629.561 l
178.241 627.28101 l
179.08099 624.64101 l
179.08099 624.521 l
179.321 621.881 l
179.321 603.761 l
179.08099 601.121 l
178.241 598.601 l
178.241 598.481 l
177.041 596.08099 l
175.36099 594.161 l
173.321 592.481 l
173.201 592.36099 l
170.92101 591.161 l
168.401 590.321 l
168.28101 590.321 l
165.64101 590.08099 l
162.881 590.321 l
160.36099 591.161 l
160.241 591.161 l
157.961 592.36099 l
157.961 592.481 l
155.92101 594.161 l
154.241 596.08099 l
154.121 596.08099 l
152.92101 598.481 l
152.92101 598.601 l
152.08099 601.121 l
151.841 603.761 l
f 
152.321 603.761 m
151.841 603.761 l
f 
BT
/N54 1 Tf
0 6.36 -6.36 0 167.0806 599.5605 Tm
0.0099 Tc
-0.0047 Tw
(r)Tj [22.10001 ]TJ (oun)Tj [18.89999 ]TJ (d r)Tj [22.2 ]TJ (obi)Tj [24.5 ]TJ (n)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -75 2015 a Fq(Figure)30 b(15:)39 b(The)29
b(bit)h(rev)n(erse)e(order)j(\014lter)f(in)g(the)g(FFT,)e(with)i(N=8.)
39 b(The)29 b(tap)r(es)g(illustrate)j(the)e(data)g(re-sh)n(u\017ing.)
200 4666 y @beginspecial 52 @llx 145 @lly 563 @urx 369
@ury 4176 @rwi @setspecial
%%BeginDocument: fft-butterfly-tape.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010725101253)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 52 145 563 369
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

52 145 moveto
563 145 lineto
563 369 lineto
52 369 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font ACKLGD+TimesNewRoman
11 dict begin
/FontName /ACKLGD+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc
e507fc6706f8e507090e ND 
/parenleft 100 RD 
b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108
8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808
5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e
0568a271a377a408090e ND 
/parenright 99 RD 
a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b
4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08
bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607
ac76a6729f7208090e ND 
/plus 42 RD 
9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706
6307f78706fb8807b306090e ND 
/hyphen 19 RD 
b4f7e10df75004f79106d507fb91064107090e ND 
/zero 164 RD 
aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf
96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d
6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2
a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008
8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6
80d58be6088bc38fc494c508090e ND 
/one 103 RD 
f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108
8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a
087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8
c3077b06fb363d05927c05090e ND 
/two 140 RD 
a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08
fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae
0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e
08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c
493a35fb0722087907f81b06b9f715057806090e ND 
/three 221 RD 
b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b
7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4
8008a2819f7f997e089581947d947908967391728b71088b687f6d727108
72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e
838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986
b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b
08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d
727369785e089c8305090e ND 
/four 55 RD 
9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7
4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 
/five 155 RD 
bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368
99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091
858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e
089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b
a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb
818a05090e ND 
/six 196 RD 
b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608
725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8
9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1
9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb
69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575
70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08
8ba68eae91b708a79da096989008090e ND 
/seven 50 RD 
b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc
e905c206f770f926059e07fbf7064cfb3105090e ND 
/eight 250 RD 
c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4
8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0
a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a
6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08
09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695
ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468
083ace0509f73bfba515987991768b74088b6e807376770876796f80688b
08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3
52b95fa269088a07090e ND 
/nine 181 RD 
b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd
73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b
ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778
0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199
76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78
089e779b6f966608946891688b6b088b7288698561087b7e798177840809
0e ND 
/Z 83 RD 
98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92
a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866
75790874776b83618b08fba206f847f90305fc7e06090e ND 
/h 234 RD 
91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708
90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588
087f857c88778b087907f771069d07748b7b8e829008828f859288920886
938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308
9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385
0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893
088696899e8ba708f732078bc388b185a00882a97ea17999087799769272
8b08758b768576800876806e71676308f7db07758c05090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACKLGD+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 90 /Z put
dup 104 /h put
pop
%%EndResource
[/N57/ACKLGD+TimesNewRoman 1 TZ
%%BeginResource: font ACKLEB+Arial
11 dict begin
/FontName /ACKLEB+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACKLEB+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N54/ACKLEB+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
52 145 511 224 re W n
[ 0 -1 1 0 -93 421 ] concat
/N45 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N66 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N45 /ColorSpace findRes cs
0 0 0 scn
/N66 /ExtGState findRes gs
1 i
167.44099 215.561 m
166.601 215.08099 l
167.561 213.28101 l
168.401 213.761 l
f 
227.561 250.121 m
228.401 250.601 l
229.36099 248.80099 l
228.521 248.321 l
f 
167.44099 215.561 m
168.401 213.761 l
228.521 248.321 l
227.561 250.121 l
f 
228.041 294.28101 m
228.881 293.80099 l
229.841 295.601 l
229.00101 296.08099 l
f 
167.44099 328.601 m
166.601 329.08099 l
167.561 330.881 l
168.401 330.401 l
f 
228.041 294.28101 m
229.00101 296.08099 l
168.401 330.401 l
167.44099 328.601 l
f 
156.521 368.80099 2.03999 0.96001 rf
156.521 401.08099 2.03999 -0.96001 rf
156.521 369.761 2.03999 30.36 rf
149.92101 439.121 m
150.761 438.64101 l
151.72099 440.44099 l
150.881 440.92101 l
f 
87.041 472.241 m
86.201 472.72099 l
87.161 474.521 l
88.00101 474.041 l
f 
149.92101 439.121 m
150.881 440.92101 l
88.00101 474.041 l
87.041 472.241 l
f 
165.161 442.36099 m
164.321 441.881 l
165.28101 440.08099 l
166.121 440.561 l
f 
227.561 475.00101 m
228.401 475.481 l
229.36099 473.681 l
228.521 473.201 l
f 
165.161 442.36099 m
166.121 440.561 l
228.521 473.201 l
227.561 475.00101 l
f 
86.561 523.36099 m
85.72099 522.881 l
86.80099 521.201 l
87.64101 521.681 l
f 
150.041 565.841 m
150.881 566.321 l
151.961 564.64101 l
151.121 564.161 l
f 
86.561 523.36099 m
87.64101 521.681 l
151.121 564.161 l
150.041 565.841 l
f 
227.92101 521.201 m
228.761 520.601 l
229.961 522.28101 l
229.121 522.881 l
f 
165.881 565.241 m
165.041 565.841 l
166.241 567.521 l
167.08099 566.92101 l
f 
227.92101 521.201 m
229.121 522.881 l
167.08099 566.92101 l
165.881 565.241 l
f 
149.08099 214.121 m
149.92101 213.64101 l
151.00101 215.44099 l
150.161 215.92101 l
f 
149.08099 214.121 m
86.08099 250.601 l
85.601 250.841 l
85.601 251.44099 l
87.161 252.401 l
150.161 215.92101 l
f 
85.601 251.44099 m
85.601 293.321 l
86.08099 293.561 l
87.64101 292.72099 l
87.64101 251.44099 l
f 
147.041 331.00101 m
147.881 331.481 l
148.961 329.80099 l
148.121 329.321 l
f 
86.08099 293.561 m
87.161 291.881 l
148.121 329.321 l
147.041 331.00101 l
f 
156.521 606.041 2.03999 0.96001 rf
156.521 647.561 2.03999 -0.96001 rf
156.521 607.00101 2.03999 39.60001 rf
1 1 1 scn
144.041 338.08099 m
144.28101 335.321 l
145.121 332.80099 l
146.321 330.521 l
148.00101 328.481 l
150.041 326.80099 l
152.321 325.601 l
154.841 324.761 l
157.481 324.521 l
160.241 324.761 l
162.761 325.601 l
165.041 326.80099 l
167.08099 328.481 l
168.761 330.521 l
169.961 332.80099 l
170.80099 335.321 l
171.041 338.08099 l
171.041 356.08099 l
170.80099 358.841 l
169.961 361.36099 l
168.761 363.64101 l
167.08099 365.681 l
165.041 367.241 l
162.761 368.561 l
160.241 369.28101 l
157.481 369.64101 l
154.841 369.28101 l
152.321 368.561 l
150.041 367.241 l
148.00101 365.681 l
146.321 363.64101 l
145.121 361.36099 l
144.28101 358.841 l
144.041 356.08099 l
144.041 338.08099 l
f* 
0 0 0 scn
144.28101 338.08099 m
144.521 335.321 l
144.521 335.44099 l
145.36099 332.92101 l
146.561 330.64101 l
146.561 330.761 l
148.241 328.72099 l
150.28101 327.041 l
150.161 327.041 l
152.44099 325.841 l
154.961 325.00101 l
154.841 325.00101 l
157.481 324.761 l
160.241 325.00101 l
162.761 325.841 l
162.64101 325.841 l
164.92101 327.041 l
166.961 328.72099 l
168.64101 330.761 l
168.521 330.64101 l
169.72099 332.92101 l
170.561 335.44099 l
170.561 335.321 l
170.80099 338.08099 l
170.80099 356.08099 l
170.561 358.841 l
169.72099 361.36099 l
169.72099 361.241 l
168.521 363.521 l
168.64101 363.521 l
166.961 365.561 l
164.92101 367.121 l
162.64101 368.44099 l
162.761 368.321 l
160.241 369.041 l
157.481 369.401 l
157.601 369.401 l
154.961 369.041 l
152.44099 368.321 l
152.44099 368.44099 l
150.161 367.121 l
148.121 365.561 l
148.241 365.561 l
146.561 363.521 l
145.36099 361.241 l
145.36099 361.36099 l
144.521 358.841 l
144.28101 356.08099 l
144.28101 338.08099 l
143.80099 338.08099 l
143.80099 356.08099 l
144.041 358.841 l
144.041 358.961 l
144.881 361.481 l
146.08099 363.761 l
146.201 363.881 l
147.881 365.92101 l
149.92101 367.481 l
152.201 368.80099 l
152.321 368.80099 l
154.841 369.521 l
157.481 369.881 l
157.601 369.881 l
160.36099 369.521 l
162.881 368.80099 l
165.161 367.481 l
167.201 365.92101 l
167.321 365.92101 l
169.00101 363.881 l
169.00101 363.761 l
170.201 361.481 l
171.041 358.961 l
171.041 358.841 l
171.28101 356.08099 l
171.28101 338.08099 l
171.041 335.321 l
170.201 332.80099 l
170.201 332.681 l
169.00101 330.401 l
167.321 328.36099 l
165.28101 326.681 l
165.161 326.561 l
162.881 325.36099 l
160.36099 324.521 l
160.241 324.521 l
157.481 324.28101 l
154.841 324.521 l
152.321 325.36099 l
152.201 325.36099 l
149.92101 326.561 l
149.92101 326.681 l
147.881 328.36099 l
146.201 330.401 l
146.08099 330.401 l
144.881 332.681 l
144.881 332.80099 l
144.041 335.321 l
143.80099 338.08099 l
f 
144.28101 338.08099 m
143.80099 338.08099 l
f 
1 1 1 scn
144.041 412.601 m
144.28101 409.841 l
145.121 407.321 l
146.321 405.041 l
148.00101 403.00101 l
150.041 401.321 l
152.321 400.121 l
154.841 399.28101 l
157.481 399.041 l
160.241 399.28101 l
162.761 400.121 l
165.041 401.321 l
167.08099 403.00101 l
168.761 405.041 l
169.961 407.321 l
170.80099 409.841 l
171.041 412.601 l
171.041 430.601 l
170.80099 433.36099 l
169.961 435.881 l
168.761 438.161 l
167.08099 440.08099 l
165.041 441.761 l
162.761 443.08099 l
160.241 443.80099 l
157.481 444.041 l
154.841 443.80099 l
152.321 443.08099 l
150.041 441.761 l
148.00101 440.08099 l
146.321 438.161 l
145.121 435.881 l
144.28101 433.36099 l
144.041 430.601 l
144.041 412.601 l
f* 
0 0 0 scn
144.28101 412.601 m
144.521 409.841 l
144.521 409.961 l
145.36099 407.44099 l
146.561 405.161 l
146.561 405.28101 l
148.241 403.241 l
150.28101 401.561 l
150.161 401.561 l
152.44099 400.36099 l
154.961 399.521 l
154.841 399.521 l
157.481 399.28101 l
160.241 399.521 l
162.761 400.36099 l
162.64101 400.36099 l
164.92101 401.561 l
166.961 403.241 l
168.64101 405.28101 l
168.521 405.161 l
169.72099 407.44099 l
170.561 409.961 l
170.561 409.841 l
170.80099 412.601 l
170.80099 430.601 l
170.561 433.36099 l
169.72099 435.881 l
169.72099 435.761 l
168.521 438.041 l
168.64101 438.041 l
166.961 439.961 l
164.92101 441.64101 l
162.64101 442.961 l
162.761 442.841 l
160.241 443.561 l
157.481 443.80099 l
154.841 443.561 l
154.961 443.561 l
152.44099 442.841 l
152.44099 442.961 l
150.161 441.64101 l
150.28101 441.64101 l
148.241 439.961 l
146.561 438.041 l
145.36099 435.761 l
145.36099 435.881 l
144.521 433.36099 l
144.28101 430.601 l
144.28101 412.601 l
143.80099 412.601 l
143.80099 430.601 l
144.041 433.36099 l
144.041 433.481 l
144.881 436.00101 l
146.08099 438.28101 l
146.201 438.401 l
147.881 440.321 l
149.92101 442.00101 l
152.201 443.321 l
152.321 443.321 l
154.841 444.041 l
157.481 444.28101 l
160.241 444.041 l
160.36099 444.041 l
162.881 443.321 l
165.161 442.00101 l
165.28101 442.00101 l
167.321 440.321 l
169.00101 438.401 l
169.00101 438.28101 l
170.201 436.00101 l
171.041 433.481 l
171.041 433.36099 l
171.28101 430.601 l
171.28101 412.601 l
171.041 409.841 l
170.201 407.321 l
170.201 407.201 l
169.00101 404.92101 l
167.321 402.881 l
165.28101 401.201 l
165.161 401.08099 l
162.881 399.881 l
160.36099 399.041 l
160.241 399.041 l
157.481 398.80099 l
154.841 399.041 l
152.321 399.881 l
152.201 399.881 l
149.92101 401.08099 l
149.92101 401.201 l
147.881 402.881 l
146.201 404.92101 l
146.08099 404.92101 l
144.881 407.201 l
144.881 407.321 l
144.041 409.841 l
143.80099 412.601 l
f 
144.28101 412.601 m
143.80099 412.601 l
f 
1 1 1 scn
144.041 575.561 m
144.28101 572.80099 l
145.121 570.28101 l
146.321 568.00101 l
148.00101 565.961 l
150.041 564.401 l
152.321 563.08099 l
154.841 562.36099 l
157.481 562.00101 l
160.241 562.36099 l
162.761 563.08099 l
165.041 564.401 l
167.08099 565.961 l
168.761 568.00101 l
169.961 570.28101 l
170.80099 572.80099 l
171.041 575.561 l
171.041 597.401 l
170.80099 600.041 l
169.961 602.561 l
168.761 604.841 l
167.08099 606.881 l
165.041 608.561 l
162.761 609.761 l
160.241 610.601 l
157.481 610.841 l
154.841 610.601 l
152.321 609.761 l
150.041 608.561 l
148.00101 606.881 l
146.321 604.841 l
145.121 602.561 l
144.28101 600.041 l
144.041 597.401 l
144.041 575.561 l
f* 
0 0 0 scn
144.28101 575.561 m
144.521 572.80099 l
144.521 572.92101 l
145.36099 570.401 l
146.561 568.121 l
146.561 568.241 l
148.241 566.201 l
148.121 566.201 l
150.161 564.64101 l
152.44099 563.321 l
154.961 562.601 l
157.601 562.241 l
157.481 562.241 l
160.241 562.601 l
162.761 563.321 l
162.64101 563.321 l
164.92101 564.64101 l
166.961 566.201 l
168.64101 568.241 l
168.521 568.121 l
169.72099 570.401 l
170.561 572.92101 l
170.561 572.80099 l
170.80099 575.561 l
170.80099 597.401 l
170.561 600.041 l
169.72099 602.561 l
169.72099 602.44099 l
168.521 604.72099 l
168.64101 604.72099 l
166.961 606.761 l
164.92101 608.44099 l
164.92101 608.321 l
162.64101 609.521 l
162.761 609.521 l
160.241 610.36099 l
157.481 610.601 l
154.841 610.36099 l
154.961 610.36099 l
152.44099 609.521 l
150.161 608.321 l
150.28101 608.44099 l
148.241 606.761 l
146.561 604.72099 l
145.36099 602.44099 l
145.36099 602.561 l
144.521 600.041 l
144.28101 597.401 l
144.28101 575.561 l
143.80099 575.561 l
143.80099 597.401 l
144.041 600.041 l
144.041 600.161 l
144.881 602.681 l
146.08099 604.961 l
146.201 605.08099 l
147.881 607.121 l
149.92101 608.80099 l
152.201 610.00101 l
152.321 610.00101 l
154.841 610.841 l
157.481 611.08099 l
160.241 610.841 l
160.36099 610.841 l
162.881 610.00101 l
165.161 608.80099 l
165.28101 608.80099 l
167.321 607.121 l
169.00101 605.08099 l
169.00101 604.961 l
170.201 602.681 l
171.041 600.161 l
171.041 600.041 l
171.28101 597.401 l
171.28101 575.561 l
171.041 572.80099 l
170.201 570.28101 l
170.201 570.161 l
169.00101 567.881 l
167.321 565.841 l
167.201 565.841 l
165.161 564.28101 l
162.881 562.961 l
162.881 562.841 l
160.36099 562.121 l
157.601 561.761 l
157.481 561.761 l
154.841 562.121 l
152.321 562.841 l
152.201 562.961 l
149.92101 564.28101 l
147.881 565.841 l
146.201 567.881 l
146.08099 567.881 l
144.881 570.161 l
144.881 570.28101 l
144.041 572.80099 l
143.80099 575.561 l
f 
144.28101 575.561 m
143.80099 575.561 l
f 
1 1 1 scn
214.481 262.121 m
214.841 259.481 l
215.561 256.961 l
216.881 254.561 l
218.44099 252.64101 l
220.481 250.961 l
222.761 249.761 l
225.28101 248.92101 l
228.041 248.681 l
230.80099 248.92101 l
233.321 249.761 l
235.601 250.961 l
237.64101 252.64101 l
239.201 254.561 l
240.521 256.961 l
241.241 259.481 l
241.481 262.121 l
241.481 281.681 l
241.241 284.44099 l
240.521 286.961 l
239.201 289.241 l
237.64101 291.28101 l
235.601 292.961 l
233.321 294.161 l
230.80099 294.881 l
228.041 295.241 l
225.28101 294.881 l
222.761 294.161 l
220.481 292.961 l
218.44099 291.28101 l
216.881 289.241 l
215.561 286.961 l
214.841 284.44099 l
214.481 281.681 l
214.481 262.121 l
f* 
0 0 0 scn
214.72099 262.241 m
215.08099 259.601 l
215.80099 257.08099 l
217.121 254.681 l
217.121 254.80099 l
218.681 252.881 l
220.72099 251.201 l
220.601 251.201 l
222.881 250.00101 l
225.401 249.161 l
225.28101 249.161 l
228.041 248.92101 l
230.80099 249.161 l
233.321 250.00101 l
233.201 250.00101 l
235.481 251.201 l
237.521 252.881 l
239.08099 254.80099 l
238.961 254.681 l
240.28101 257.08099 l
241.00101 259.601 l
241.00101 259.481 l
241.241 262.121 l
241.241 281.681 l
241.00101 284.44099 l
240.28101 286.961 l
240.401 286.841 l
239.08099 289.121 l
237.521 291.161 l
235.481 292.841 l
235.481 292.72099 l
233.201 293.92101 l
233.321 293.92101 l
230.80099 294.64101 l
228.041 295.00101 l
228.161 295.00101 l
225.401 294.64101 l
222.881 293.92101 l
220.601 292.72099 l
220.72099 292.841 l
218.681 291.161 l
217.121 289.121 l
215.80099 286.841 l
215.80099 286.961 l
215.08099 284.44099 l
214.72099 281.681 l
214.72099 262.121 l
214.241 262.121 l
214.241 281.80099 l
214.601 284.561 l
215.321 287.08099 l
215.44099 287.08099 l
216.761 289.36099 l
218.321 291.401 l
218.321 291.521 l
220.36099 293.201 l
222.64101 294.401 l
222.761 294.401 l
225.28101 295.121 l
228.041 295.481 l
228.161 295.481 l
230.92101 295.121 l
233.44099 294.401 l
235.72099 293.201 l
235.841 293.201 l
237.881 291.521 l
237.881 291.401 l
239.44099 289.36099 l
240.761 287.08099 l
241.481 284.561 l
241.481 284.44099 l
241.72099 281.681 l
241.72099 262.121 l
241.481 259.481 l
240.761 256.961 l
240.761 256.841 l
239.44099 254.44099 l
237.881 252.521 l
235.841 250.841 l
235.72099 250.72099 l
233.44099 249.521 l
230.92101 248.681 l
230.80099 248.681 l
228.041 248.44099 l
225.28101 248.681 l
222.761 249.521 l
222.64101 249.521 l
220.36099 250.72099 l
220.36099 250.841 l
218.321 252.521 l
216.761 254.44099 l
216.64101 254.44099 l
215.321 256.841 l
215.321 256.961 l
214.601 259.481 l
214.241 262.121 l
f 
214.72099 262.121 m
214.72099 262.241 l
214.241 262.121 l
f 
1 1 1 scn
214.481 486.521 m
214.841 483.881 l
215.561 481.241 l
216.881 478.961 l
218.44099 477.041 l
220.481 475.36099 l
222.761 474.161 l
225.28101 473.321 l
228.041 473.08099 l
230.80099 473.321 l
233.321 474.161 l
235.601 475.36099 l
237.64101 477.041 l
239.201 478.961 l
240.521 481.241 l
241.241 483.881 l
241.481 486.521 l
241.481 509.08099 l
241.241 511.841 l
240.521 514.36099 l
239.201 516.64101 l
237.64101 518.681 l
235.601 520.241 l
233.321 521.561 l
230.80099 522.28101 l
228.041 522.64101 l
225.28101 522.28101 l
222.761 521.561 l
220.481 520.241 l
218.44099 518.681 l
216.881 516.64101 l
215.561 514.36099 l
214.841 511.841 l
214.481 509.08099 l
214.481 486.521 l
f* 
0 0 0 scn
214.72099 486.64101 m
215.08099 484.00101 l
215.80099 481.36099 l
217.121 479.08099 l
217.121 479.201 l
218.681 477.28101 l
220.72099 475.601 l
220.601 475.601 l
222.881 474.401 l
225.401 473.561 l
225.28101 473.561 l
228.041 473.321 l
230.80099 473.561 l
233.321 474.401 l
233.201 474.401 l
235.481 475.601 l
237.521 477.28101 l
239.08099 479.201 l
239.08099 479.08099 l
240.401 481.36099 l
240.28101 481.36099 l
241.00101 484.00101 l
241.00101 483.881 l
241.241 486.521 l
241.241 509.08099 l
241.00101 511.841 l
240.28101 514.36099 l
240.401 514.241 l
239.08099 516.521 l
237.521 518.561 l
235.481 520.121 l
233.201 521.44099 l
233.321 521.321 l
230.80099 522.041 l
228.041 522.401 l
228.161 522.401 l
225.401 522.041 l
222.881 521.321 l
222.881 521.44099 l
220.601 520.121 l
218.561 518.561 l
218.681 518.561 l
217.121 516.521 l
215.80099 514.241 l
215.80099 514.36099 l
215.08099 511.841 l
214.72099 509.08099 l
214.72099 486.521 l
214.241 486.521 l
214.241 509.201 l
214.601 511.961 l
215.321 514.481 l
215.44099 514.481 l
216.761 516.761 l
218.321 518.80099 l
218.321 518.92101 l
220.36099 520.481 l
222.64101 521.80099 l
222.761 521.80099 l
225.28101 522.521 l
228.041 522.881 l
228.161 522.881 l
230.92101 522.521 l
233.44099 521.80099 l
235.72099 520.481 l
237.761 518.92101 l
237.881 518.80099 l
239.44099 516.761 l
240.761 514.481 l
241.481 511.961 l
241.481 511.841 l
241.72099 509.08099 l
241.72099 486.521 l
241.481 483.881 l
240.761 481.241 l
240.761 481.121 l
239.44099 478.841 l
237.881 476.92101 l
235.841 475.241 l
235.72099 475.121 l
233.44099 473.92101 l
230.92101 473.08099 l
230.80099 473.08099 l
228.041 472.841 l
225.28101 473.08099 l
222.761 473.92101 l
222.64101 473.92101 l
220.36099 475.121 l
220.36099 475.241 l
218.321 476.92101 l
216.761 478.841 l
215.44099 481.121 l
215.321 481.241 l
214.601 483.881 l
214.241 486.521 l
f 
214.72099 486.521 m
214.72099 486.64101 l
214.241 486.521 l
f 
1 1 1 scn
73.481 486.521 m
73.841 483.881 l
74.561 481.241 l
75.881 478.961 l
77.44099 477.041 l
79.481 475.36099 l
81.761 474.161 l
84.28101 473.321 l
87.041 473.08099 l
89.80099 473.321 l
92.321 474.161 l
94.601 475.36099 l
96.521 477.041 l
98.201 478.961 l
99.521 481.241 l
100.241 483.881 l
100.481 486.521 l
100.481 509.08099 l
100.241 511.841 l
99.521 514.36099 l
98.201 516.64101 l
96.521 518.681 l
94.601 520.241 l
92.321 521.561 l
89.80099 522.28101 l
87.041 522.64101 l
84.28101 522.28101 l
81.761 521.561 l
79.481 520.241 l
77.44099 518.681 l
75.881 516.64101 l
74.561 514.36099 l
73.841 511.841 l
73.481 509.08099 l
73.481 486.521 l
f* 
0 0 0 scn
73.72099 486.64101 m
74.08099 484.00101 l
74.80099 481.36099 l
76.121 479.08099 l
76.121 479.201 l
77.681 477.28101 l
79.72099 475.601 l
79.601 475.601 l
81.881 474.401 l
84.401 473.561 l
84.28101 473.561 l
87.041 473.321 l
89.80099 473.561 l
92.321 474.401 l
92.201 474.401 l
94.481 475.601 l
96.401 477.28101 l
98.08099 479.201 l
98.08099 479.08099 l
99.401 481.36099 l
99.28101 481.36099 l
100.00101 484.00101 l
100.00101 483.881 l
100.241 486.521 l
100.241 509.08099 l
100.00101 511.841 l
99.28101 514.36099 l
99.401 514.241 l
98.08099 516.521 l
96.401 518.561 l
94.481 520.121 l
92.201 521.44099 l
92.321 521.321 l
89.80099 522.041 l
87.041 522.401 l
87.161 522.401 l
84.401 522.041 l
81.881 521.321 l
81.881 521.44099 l
79.601 520.121 l
77.561 518.561 l
77.681 518.561 l
76.121 516.521 l
74.80099 514.241 l
74.80099 514.36099 l
74.08099 511.841 l
73.72099 509.08099 l
73.72099 486.521 l
73.241 486.521 l
73.241 509.201 l
73.601 511.961 l
74.321 514.481 l
74.44099 514.481 l
75.761 516.761 l
77.321 518.80099 l
77.321 518.92101 l
79.36099 520.481 l
81.64101 521.80099 l
81.761 521.80099 l
84.28101 522.521 l
87.041 522.881 l
87.161 522.881 l
89.92101 522.521 l
92.44099 521.80099 l
94.72099 520.481 l
94.841 520.481 l
96.761 518.92101 l
98.44099 516.881 l
98.44099 516.761 l
99.761 514.481 l
100.481 511.961 l
100.481 511.841 l
100.72099 509.08099 l
100.72099 486.521 l
100.481 483.881 l
99.761 481.241 l
99.761 481.121 l
98.44099 478.841 l
96.761 476.92101 l
94.841 475.241 l
94.72099 475.121 l
92.44099 473.92101 l
89.92101 473.08099 l
89.80099 473.08099 l
87.041 472.841 l
84.28101 473.08099 l
81.761 473.92101 l
81.64101 473.92101 l
79.36099 475.121 l
79.36099 475.241 l
77.321 476.92101 l
75.761 478.841 l
74.44099 481.121 l
74.321 481.241 l
73.601 483.881 l
73.241 486.521 l
f 
73.72099 486.521 m
73.72099 486.64101 l
73.241 486.521 l
f 
156.521 174.401 2.03999 0.96001 rf
156.521 145.961 2.03999 -0.96001 rf
156.521 145.961 2.03999 28.44 rf
1 1 1 scn
144.041 185.681 m
144.28101 182.92101 l
145.121 180.401 l
146.321 178.121 l
148.00101 176.08099 l
150.041 174.521 l
152.321 173.201 l
154.841 172.481 l
157.481 172.121 l
160.241 172.481 l
162.761 173.201 l
165.041 174.521 l
167.08099 176.08099 l
168.761 178.121 l
169.961 180.401 l
170.80099 182.92101 l
171.041 185.681 l
171.041 205.961 l
170.80099 208.72099 l
169.961 211.241 l
168.761 213.521 l
167.08099 215.561 l
165.041 217.121 l
162.761 218.44099 l
160.241 219.161 l
157.481 219.401 l
154.841 219.161 l
152.321 218.44099 l
150.041 217.121 l
148.00101 215.561 l
146.321 213.521 l
145.121 211.241 l
144.28101 208.72099 l
144.041 205.961 l
144.041 185.681 l
f* 
0 0 0 scn
144.28101 185.681 m
144.521 182.92101 l
144.521 183.041 l
145.36099 180.521 l
146.561 178.241 l
146.561 178.36099 l
148.241 176.321 l
148.121 176.321 l
150.161 174.761 l
152.44099 173.44099 l
154.961 172.72099 l
157.601 172.36099 l
157.481 172.36099 l
160.241 172.72099 l
162.761 173.44099 l
162.64101 173.44099 l
164.92101 174.761 l
166.961 176.321 l
168.64101 178.36099 l
168.521 178.241 l
169.72099 180.521 l
170.561 183.041 l
170.561 182.92101 l
170.80099 185.681 l
170.80099 205.961 l
170.561 208.72099 l
169.72099 211.241 l
169.72099 211.121 l
168.521 213.401 l
168.64101 213.401 l
166.961 215.44099 l
164.92101 217.00101 l
162.64101 218.321 l
162.761 218.201 l
160.241 218.92101 l
157.481 219.161 l
154.841 218.92101 l
154.961 218.92101 l
152.44099 218.201 l
152.44099 218.321 l
150.161 217.00101 l
148.121 215.44099 l
148.241 215.44099 l
146.561 213.401 l
145.36099 211.121 l
145.36099 211.241 l
144.521 208.72099 l
144.28101 205.961 l
144.28101 185.681 l
143.80099 185.681 l
143.80099 205.961 l
144.041 208.72099 l
144.041 208.841 l
144.881 211.36099 l
146.08099 213.64101 l
146.201 213.761 l
147.881 215.80099 l
149.92101 217.36099 l
152.201 218.681 l
152.321 218.681 l
154.841 219.401 l
157.481 219.64101 l
160.241 219.401 l
160.36099 219.401 l
162.881 218.681 l
165.161 217.36099 l
167.201 215.80099 l
167.321 215.80099 l
169.00101 213.761 l
169.00101 213.64101 l
170.201 211.36099 l
171.041 208.841 l
171.041 208.72099 l
171.28101 205.961 l
171.28101 185.681 l
171.041 182.92101 l
170.201 180.401 l
170.201 180.28101 l
169.00101 178.00101 l
167.321 175.961 l
167.201 175.961 l
165.161 174.401 l
162.881 173.08099 l
162.881 172.961 l
160.36099 172.241 l
157.601 171.881 l
157.481 171.881 l
154.841 172.241 l
152.321 172.961 l
152.201 173.08099 l
149.92101 174.401 l
147.881 175.961 l
146.201 178.00101 l
146.08099 178.00101 l
144.881 180.28101 l
144.881 180.401 l
144.041 182.92101 l
143.80099 185.681 l
f 
144.28101 185.681 m
143.80099 185.681 l
f 
BT
/N54 1 Tf
0 6.36 -6.36 0 156.1606 174.7606 Tm
0.00951 Tc
-0.0043 Tw
(we)Tj [18.5 ]TJ (i)Tj [5.3 ]TJ (g)Tj [-0.39999 ]TJ (h)Tj [18.5 ]TJ (t)Tj [4.3 ]TJ (ed)Tj [18.5 ]TJ ( ro)Tj [18.5 ]TJ (und)Tj [18.5 ]TJ ( )Tj 
1 -1.26421 TD
0.0081 Tc
-0.0029 Tw
(r)Tj [20.39999 ]TJ (obi)Tj [22.7 ]TJ (n \(2)Tj [17.10001 ]TJ (, 2)Tj [17.10001 ]TJ (\))Tj 
24 0.81129 TD
0.00861 Tc
-0.0034 Tw
(ro)Tj [17.60001 ]TJ (un)Tj [17.60001 ]TJ (d ro)Tj [17.60001 ]TJ (bi)Tj [4.39999 ]TJ (n)Tj 
11.9623 0.0377 TD
0.00909 Tc
0 Tw
(du)Tj [18.10001 ]TJ (pl)Tj [4.89999 ]TJ (i)Tj [23.7 ]TJ (c)Tj [-0.3 ]TJ (ate)Tj 
24.47169 0.5849 TD
0.0085 Tc
-0.0033 Tw
(w)Tj [13.7 ]TJ (e)Tj [-1.39999 ]TJ (i)Tj [4.3 ]TJ (g)Tj [-1.39999 ]TJ (h)Tj [17.5 ]TJ (t)Tj [3.3 ]TJ (ed)Tj [17.5 ]TJ ( ro)Tj [17.5 ]TJ (und)Tj [17.5 ]TJ ( )Tj 
1 -1.2453 TD
0.0081 Tc
-0.0029 Tw
(r)Tj [20.3 ]TJ (obi)Tj [22.7 ]TJ (n \(2)Tj [17.10001 ]TJ (, 2)Tj [17.10001 ]TJ (\))Tj 
-50.60381 -10.47169 TD
0.00729 Tc
0 Tw
(ou)Tj [16.3 ]TJ (t=)Tj [6.39999 ]TJ (pop)Tj [16.3 ]TJ (\(\)*)Tj [19.10001 ]TJ (W)Tj [-11.10001 ]TJ ([)Tj [21 ]TJ (..])Tj 
35.4528 0.05659 TD
0.008 Tc
(ou)Tj [17 ]TJ (t=)Tj [7.10001 ]TJ (pop)Tj [17 ]TJ (\(\)-p)Tj [17 ]TJ (op)Tj [17 ]TJ (\(\))Tj 
-0.1132 22.1698 TD
(o)Tj [17.10001 ]TJ (u)Tj [-1.8 ]TJ (t=)Tj [7.2 ]TJ (p)Tj [17.10001 ]TJ (op\()Tj [20.39999 ]TJ (\)+)Tj [7.2 ]TJ (po)Tj [17.10001 ]TJ (p\(\))Tj 
ET
1 1 1 scn
205.121 390.64101 9 -12.48 rf
0 0 0 scn
204.881 390.881 0.48 -12.72 rf
205.121 390.881 9.24001 -0.48 rf
213.881 390.64101 0.48 -12.72 rf
204.881 378.401 9.24001 -0.48 rf
BT
/N57 1 Tf
0 8.3813 -6.48 0 211.9606 382.3606 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
196.241 390.64101 8.88 -12.48 rf
0 0 0 scn
196.00101 390.881 0.48 -12.72 rf
196.241 390.881 9.12 -0.48 rf
204.881 390.64101 0.48 -12.72 rf
196.00101 378.401 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 202.9606 382.3606 Tm
(2)Tj 
ET
1 1 1 scn
187.121 390.64101 9 -12.48 rf
0 0 0 scn
186.881 390.881 0.48 -12.72 rf
187.121 390.881 9.24001 -0.48 rf
195.881 390.64101 0.48 -12.72 rf
186.881 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 193.9606 382.3606 Tm
(1)Tj 
ET
1 1 1 scn
178.00101 390.64101 9 -12.48 rf
0 0 0 scn
177.761 390.881 0.48 -12.72 rf
178.00101 390.881 9.24001 -0.48 rf
186.761 390.64101 0.48 -12.72 rf
177.761 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 184.84061 382.3606 Tm
(3)Tj 
ET
1 1 1 scn
168.881 390.64101 9 -12.48 rf
0 0 0 scn
168.64101 390.881 0.48 -12.72 rf
168.881 390.881 9.24001 -0.48 rf
177.64101 390.64101 0.48 -12.72 rf
168.64101 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 175.7206 382.3606 Tm
(4)Tj 
ET
1 1 1 scn
160.00101 390.64101 8.88 -12.48 rf
0 0 0 scn
159.761 390.881 0.48 -12.72 rf
160.00101 390.881 9.12 -0.48 rf
168.64101 390.64101 0.48 -12.72 rf
159.761 378.401 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 166.7206 382.3606 Tm
(6)Tj 
ET
1 1 1 scn
150.881 390.64101 9 -12.48 rf
0 0 0 scn
150.64101 390.881 0.48 -12.72 rf
150.881 390.881 9.24001 -0.48 rf
159.64101 390.64101 0.48 -12.72 rf
150.64101 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 157.7206 382.3606 Tm
(5)Tj 
ET
1 1 1 scn
141.761 390.64101 8.88 -12.48 rf
0 0 0 scn
141.521 390.881 0.48 -12.72 rf
141.761 390.881 9.12 -0.48 rf
150.401 390.64101 0.48 -12.72 rf
141.521 378.401 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 148.6006 382.3606 Tm
(7)Tj 
ET
1 1 1 scn
133.00101 390.64101 9 -12.48 rf
0 0 0 scn
132.761 390.881 0.48 -12.72 rf
133.00101 390.881 9.24001 -0.48 rf
141.761 390.64101 0.48 -12.72 rf
132.761 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 139.84061 382.3606 Tm
(8)Tj 
ET
1 1 1 scn
124.121 390.64101 8.88 -12.48 rf
0 0 0 scn
123.881 390.881 0.48 -12.72 rf
124.121 390.881 9.12 -0.48 rf
132.761 390.64101 0.48 -12.72 rf
123.881 378.401 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 130.84061 380.4406 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
115.00101 390.64101 9 -12.48 rf
0 0 0 scn
114.761 390.881 0.48 -12.72 rf
115.00101 390.881 9.24001 -0.48 rf
123.761 390.64101 0.48 -12.72 rf
114.761 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 121.84061 382.3606 Tm
0 Tc
(9)Tj 
ET
1 1 1 scn
105.881 390.64101 9 -12.48 rf
0 0 0 scn
105.64101 390.881 0.48 -12.72 rf
105.881 390.881 9.24001 -0.48 rf
114.64101 390.64101 0.48 -12.72 rf
105.64101 378.401 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 112.7206 380.56059 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
203.08099 166.481 8.88 -12.48 rf
0 0 0 scn
202.841 166.72099 0.48 -12.72 rf
203.08099 166.72099 9.12 -0.48 rf
211.72099 166.481 0.48 -12.72 rf
202.841 154.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 209.8006 158.3206 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
194.08099 166.481 9 -12.48 rf
0 0 0 scn
193.841 166.72099 0.48 -12.72 rf
194.08099 166.72099 9.24001 -0.48 rf
202.841 166.481 0.48 -12.72 rf
193.841 154.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 200.92059 158.3206 Tm
(1)Tj 
ET
1 1 1 scn
185.08099 166.481 8.88 -12.48 rf
0 0 0 scn
184.841 166.72099 0.48 -12.72 rf
185.08099 166.72099 9.12 -0.48 rf
193.72099 166.481 0.48 -12.72 rf
184.841 154.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 191.8006 158.3206 Tm
(2)Tj 
ET
1 1 1 scn
175.841 166.481 9 -12.48 rf
0 0 0 scn
175.601 166.72099 0.48 -12.72 rf
175.841 166.72099 9.24001 -0.48 rf
184.601 166.481 0.48 -12.72 rf
175.601 154.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 182.6806 158.3206 Tm
(3)Tj 
ET
1 1 1 scn
166.72099 166.481 9 -12.48 rf
0 0 0 scn
166.481 166.72099 0.48 -12.72 rf
166.72099 166.72099 9.24001 -0.48 rf
175.481 166.481 0.48 -12.72 rf
166.481 154.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 173.56059 158.3206 Tm
(4)Tj 
ET
1 1 1 scn
157.841 166.481 8.88 -12.48 rf
0 0 0 scn
157.601 166.72099 0.48 -12.72 rf
157.841 166.72099 9.12 -0.48 rf
166.481 166.481 0.48 -12.72 rf
157.601 154.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 164.56059 158.3206 Tm
(5)Tj 
ET
1 1 1 scn
148.72099 166.481 9 -12.48 rf
0 0 0 scn
148.481 166.72099 0.48 -12.72 rf
148.72099 166.72099 9.24001 -0.48 rf
157.481 166.481 0.48 -12.72 rf
148.481 154.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 155.56059 158.3206 Tm
(6)Tj 
ET
1 1 1 scn
139.601 166.481 9 -12.48 rf
0 0 0 scn
139.36099 166.72099 0.48 -12.72 rf
139.601 166.72099 9.24001 -0.48 rf
148.36099 166.481 0.48 -12.72 rf
139.36099 154.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 146.4406 158.3206 Tm
(7)Tj 
ET
1 1 1 scn
130.961 166.481 8.88 -12.48 rf
0 0 0 scn
130.72099 166.72099 0.48 -12.72 rf
130.961 166.72099 9.12 -0.48 rf
139.601 166.481 0.48 -12.72 rf
130.72099 154.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 137.6806 158.3206 Tm
(8)Tj 
ET
1 1 1 scn
121.961 166.481 9 -12.48 rf
0 0 0 scn
121.72099 166.72099 0.48 -12.72 rf
121.961 166.72099 9.24001 -0.48 rf
130.72099 166.481 0.48 -12.72 rf
121.72099 154.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 128.8006 158.3206 Tm
(9)Tj 
ET
1 1 1 scn
112.961 166.481 8.88 -12.48 rf
0 0 0 scn
112.72099 166.72099 0.48 -12.72 rf
112.961 166.72099 9.12 -0.48 rf
121.601 166.481 0.48 -12.72 rf
112.72099 154.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 119.6806 156.28059 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
103.841 166.481 8.88 -12.48 rf
0 0 0 scn
103.601 166.72099 0.48 -12.72 rf
103.841 166.72099 9.12 -0.48 rf
112.481 166.481 0.48 -12.72 rf
103.601 154.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 110.56059 156.4006 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
104.08099 276.881 9 -12.48 rf
0 0 0 scn
103.841 277.121 0.48 -12.72 rf
104.08099 277.121 9.24001 -0.48 rf
112.841 276.881 0.48 -12.72 rf
103.841 264.64101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 110.92059 268.7206 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
95.201 276.881 8.88 -12.48 rf
0 0 0 scn
94.961 277.121 0.48 -12.72 rf
95.201 277.121 9.12 -0.48 rf
103.841 276.881 0.48 -12.72 rf
94.961 264.64101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 101.92059 268.7206 Tm
(1)Tj 
ET
1 1 1 scn
86.08099 276.881 9 -12.48 rf
0 0 0 scn
85.841 277.121 0.48 -12.72 rf
86.08099 277.121 9.24001 -0.48 rf
94.841 276.881 0.48 -12.72 rf
85.841 264.64101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 92.92059 268.7206 Tm
(4)Tj 
ET
1 1 1 scn
76.961 276.881 9 -12.48 rf
0 0 0 scn
76.72099 277.121 0.48 -12.72 rf
76.961 277.121 9.24001 -0.48 rf
85.72099 276.881 0.48 -12.72 rf
76.72099 264.64101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 83.8006 268.7206 Tm
(5)Tj 
ET
1 1 1 scn
67.841 276.881 9 -12.48 rf
0 0 0 scn
67.601 277.121 0.48 -12.72 rf
67.841 277.121 9.24001 -0.48 rf
76.601 276.881 0.48 -12.72 rf
67.601 264.64101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 74.6806 268.7206 Tm
(8)Tj 
ET
1 1 1 scn
58.961 276.881 8.88 -12.48 rf
0 0 0 scn
58.72099 277.121 0.48 -12.72 rf
58.961 277.121 9.12 -0.48 rf
67.601 276.881 0.48 -12.72 rf
58.72099 264.64101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 65.6806 268.7206 Tm
(9)Tj 
ET
1 1 1 scn
222.401 240.28101 8.88 -12.48 rf
0 0 0 scn
222.161 240.521 0.48 -12.72 rf
222.401 240.521 9.12 -0.48 rf
231.041 240.28101 0.48 -12.72 rf
222.161 228.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 229.12061 232.0006 Tm
(2)Tj 
ET
1 1 1 scn
213.401 240.28101 9 -12.48 rf
0 0 0 scn
213.161 240.521 0.48 -12.72 rf
213.401 240.521 9.24001 -0.48 rf
222.161 240.28101 0.48 -12.72 rf
213.161 228.041 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 220.2406 232.0006 Tm
(3)Tj 
ET
1 1 1 scn
204.401 240.28101 8.88 -12.48 rf
0 0 0 scn
204.161 240.521 0.48 -12.72 rf
204.401 240.521 9.12 -0.48 rf
213.041 240.28101 0.48 -12.72 rf
204.161 228.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 211.12061 232.0006 Tm
(6)Tj 
ET
1 1 1 scn
195.161 240.28101 9 -12.48 rf
0 0 0 scn
194.92101 240.521 0.48 -12.72 rf
195.161 240.521 9.24001 -0.48 rf
203.92101 240.28101 0.48 -12.72 rf
194.92101 228.041 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 202.0006 232.0006 Tm
(7)Tj 
ET
1 1 1 scn
186.161 240.28101 8.88 -12.48 rf
0 0 0 scn
185.92101 240.521 0.48 -12.72 rf
186.161 240.521 9.12 -0.48 rf
194.80099 240.28101 0.48 -12.72 rf
185.92101 228.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 192.8806 230.0806 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
177.161 240.28101 9 -12.48 rf
0 0 0 scn
176.92101 240.521 0.48 -12.72 rf
177.161 240.521 9.24001 -0.48 rf
185.92101 240.28101 0.48 -12.72 rf
176.92101 228.041 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 184.0006 230.20061 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
220.241 316.121 9 -12.48 rf
0 0 0 scn
220.00101 316.36099 0.48 -12.72 rf
220.241 316.36099 9.24001 -0.48 rf
229.00101 316.121 0.48 -12.72 rf
220.00101 303.881 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 227.0806 307.9606 Tm
0 Tc
(2)Tj 
ET
1 1 1 scn
211.241 316.121 9 -12.48 rf
0 0 0 scn
211.00101 316.36099 0.48 -12.72 rf
211.241 316.36099 9.24001 -0.48 rf
220.00101 316.121 0.48 -12.72 rf
211.00101 303.881 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 218.0806 307.9606 Tm
(3)Tj 
ET
1 1 1 scn
202.241 316.121 9 -12.48 rf
0 0 0 scn
202.00101 316.36099 0.48 -12.72 rf
202.241 316.36099 9.24001 -0.48 rf
211.00101 316.121 0.48 -12.72 rf
202.00101 303.881 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 209.0806 307.9606 Tm
(6)Tj 
ET
1 1 1 scn
193.121 316.121 8.88 -12.48 rf
0 0 0 scn
192.881 316.36099 0.48 -12.72 rf
193.121 316.36099 9.12 -0.48 rf
201.761 316.121 0.48 -12.72 rf
192.881 303.881 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 199.84061 307.9606 Tm
(7)Tj 
ET
1 1 1 scn
184.00101 316.121 8.88 -12.48 rf
0 0 0 scn
183.761 316.36099 0.48 -12.72 rf
184.00101 316.36099 9.12 -0.48 rf
192.64101 316.121 0.48 -12.72 rf
183.761 303.881 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 190.7206 305.92059 Tm
-0.0275 Tc
(10)Tj 
ET
1 1 1 scn
175.00101 316.121 9 -12.48 rf
0 0 0 scn
174.761 316.36099 0.48 -12.72 rf
175.00101 316.36099 9.24001 -0.48 rf
183.761 316.121 0.48 -12.72 rf
174.761 303.881 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 181.84061 306.0406 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
152.44099 464.681 8.88 -12.48 rf
0 0 0 scn
152.201 464.92101 0.48 -12.72 rf
152.44099 464.92101 9.12 -0.48 rf
161.08099 464.681 0.48 -12.72 rf
152.201 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 159.1606 456.4006 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
143.44099 464.681 9 -12.48 rf
0 0 0 scn
143.201 464.92101 0.48 -12.72 rf
143.44099 464.92101 9.24001 -0.48 rf
152.201 464.681 0.48 -12.72 rf
143.201 452.44099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 150.28059 456.4006 Tm
(2)Tj 
ET
1 1 1 scn
134.44099 464.681 8.88 -12.48 rf
0 0 0 scn
134.201 464.92101 0.48 -12.72 rf
134.44099 464.92101 9.12 -0.48 rf
143.08099 464.681 0.48 -12.72 rf
134.201 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 141.1606 456.4006 Tm
(1)Tj 
ET
1 1 1 scn
125.201 464.681 9 -12.48 rf
0 0 0 scn
124.961 464.92101 0.48 -12.72 rf
125.201 464.92101 9.24001 -0.48 rf
133.961 464.681 0.48 -12.72 rf
124.961 452.44099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 132.0406 456.4006 Tm
(3)Tj 
ET
1 1 1 scn
116.201 464.681 8.88 -12.48 rf
0 0 0 scn
115.961 464.92101 0.48 -12.72 rf
116.201 464.92101 9.12 -0.48 rf
124.841 464.681 0.48 -12.72 rf
115.961 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 122.92059 456.4006 Tm
(4)Tj 
ET
1 1 1 scn
107.201 464.681 9 -12.48 rf
0 0 0 scn
106.961 464.92101 0.48 -12.72 rf
107.201 464.92101 9.24001 -0.48 rf
115.961 464.681 0.48 -12.72 rf
106.961 452.44099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 114.0406 456.4006 Tm
(6)Tj 
ET
1 1 1 scn
98.201 464.681 8.88 -12.48 rf
0 0 0 scn
97.961 464.92101 0.48 -12.72 rf
98.201 464.92101 9.12 -0.48 rf
106.841 464.681 0.48 -12.72 rf
97.961 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 104.92059 456.4006 Tm
(5)Tj 
ET
1 1 1 scn
88.961 464.681 9 -12.48 rf
0 0 0 scn
88.72099 464.92101 0.48 -12.72 rf
88.961 464.92101 9.24001 -0.48 rf
97.72099 464.681 0.48 -12.72 rf
88.72099 452.44099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 95.8006 456.4006 Tm
(7)Tj 
ET
1 1 1 scn
80.321 464.681 8.88 -12.48 rf
0 0 0 scn
80.08099 464.92101 0.48 -12.72 rf
80.321 464.92101 9.12 -0.48 rf
88.961 464.681 0.48 -12.72 rf
80.08099 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 87.0406 456.4006 Tm
(8)Tj 
ET
1 1 1 scn
71.321 464.681 9 -12.48 rf
0 0 0 scn
71.08099 464.92101 0.48 -12.72 rf
71.321 464.92101 9.24001 -0.48 rf
80.08099 464.681 0.48 -12.72 rf
71.08099 452.44099 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 78.1606 454.48061 Tm
-0.0132 Tc
(10)Tj 
ET
1 1 1 scn
62.321 464.681 8.88 -12.48 rf
0 0 0 scn
62.08099 464.92101 0.48 -12.72 rf
62.321 464.92101 9.12 -0.48 rf
70.961 464.681 0.48 -12.72 rf
62.08099 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 69.0406 456.4006 Tm
0 Tc
(9)Tj 
ET
1 1 1 scn
53.201 464.681 8.88 -12.48 rf
0 0 0 scn
52.961 464.92101 0.48 -12.72 rf
53.201 464.92101 9.12 -0.48 rf
61.841 464.681 0.48 -12.72 rf
52.961 452.44099 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 59.92059 454.6006 Tm
-0.0705 Tc
(11)Tj 
ET
1 1 1 scn
265.72099 464.80099 9 -12.48 rf
0 0 0 scn
265.481 465.041 0.48 -12.72 rf
265.72099 465.041 9.24001 -0.48 rf
274.481 464.80099 0.48 -12.72 rf
265.481 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 272.56059 456.5206 Tm
0 Tc
(0)Tj 
ET
1 1 1 scn
256.841 464.80099 8.88 -12.48 rf
0 0 0 scn
256.601 465.041 0.48 -12.72 rf
256.841 465.041 9.12 -0.48 rf
265.481 464.80099 0.48 -12.72 rf
256.601 452.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 263.6806 456.5206 Tm
(2)Tj 
ET
1 1 1 scn
247.841 464.80099 8.88 -12.48 rf
0 0 0 scn
247.601 465.041 0.48 -12.72 rf
247.841 465.041 9.12 -0.48 rf
256.481 464.80099 0.48 -12.72 rf
247.601 452.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 254.56059 456.5206 Tm
(1)Tj 
ET
1 1 1 scn
238.601 464.80099 9 -12.48 rf
0 0 0 scn
238.36099 465.041 0.48 -12.72 rf
238.601 465.041 9.24001 -0.48 rf
247.36099 464.80099 0.48 -12.72 rf
238.36099 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 245.4406 456.5206 Tm
(3)Tj 
ET
1 1 1 scn
229.481 464.80099 9 -12.48 rf
0 0 0 scn
229.241 465.041 0.48 -12.72 rf
229.481 465.041 9.24001 -0.48 rf
238.241 464.80099 0.48 -12.72 rf
229.241 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 236.3206 456.5206 Tm
(4)Tj 
ET
1 1 1 scn
220.601 464.80099 8.88 -12.48 rf
0 0 0 scn
220.36099 465.041 0.48 -12.72 rf
220.601 465.041 9.12 -0.48 rf
229.241 464.80099 0.48 -12.72 rf
220.36099 452.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 227.3206 456.5206 Tm
(6)Tj 
ET
1 1 1 scn
211.481 464.80099 9 -12.48 rf
0 0 0 scn
211.241 465.041 0.48 -12.72 rf
211.481 465.041 9.24001 -0.48 rf
220.241 464.80099 0.48 -12.72 rf
211.241 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 218.3206 456.5206 Tm
(5)Tj 
ET
1 1 1 scn
202.36099 464.80099 9 -12.48 rf
0 0 0 scn
202.121 465.041 0.48 -12.72 rf
202.36099 465.041 9.24001 -0.48 rf
211.121 464.80099 0.48 -12.72 rf
202.121 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 209.20061 456.5206 Tm
(7)Tj 
ET
1 1 1 scn
193.72099 464.80099 8.88 -12.48 rf
0 0 0 scn
193.481 465.041 0.48 -12.72 rf
193.72099 465.041 9.12 -0.48 rf
202.36099 464.80099 0.48 -12.72 rf
193.481 452.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 200.4406 456.5206 Tm
(8)Tj 
ET
1 1 1 scn
184.72099 464.80099 9 -12.48 rf
0 0 0 scn
184.481 465.041 0.48 -12.72 rf
184.72099 465.041 9.24001 -0.48 rf
193.481 464.80099 0.48 -12.72 rf
184.481 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 191.56059 454.6006 Tm
-0.0132 Tc
(10)Tj 
ET
1 1 1 scn
175.72099 464.80099 8.88 -12.48 rf
0 0 0 scn
175.481 465.041 0.48 -12.72 rf
175.72099 465.041 9.12 -0.48 rf
184.36099 464.80099 0.48 -12.72 rf
175.481 452.561 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 182.4406 456.5206 Tm
0 Tc
(9)Tj 
ET
1 1 1 scn
166.481 464.80099 9 -12.48 rf
0 0 0 scn
166.241 465.041 0.48 -12.72 rf
166.481 465.041 9.24001 -0.48 rf
175.241 464.80099 0.48 -12.72 rf
166.241 452.561 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 173.3206 454.7206 Tm
-0.0562 Tc
(11)Tj 
ET
1 1 1 scn
131.201 552.881 8.88 -22.2 rf
0 0 0 scn
130.961 553.121 0.48 -22.44 rf
131.201 553.121 9.12 -0.48 rf
139.841 552.881 0.48 -22.44 rf
130.961 530.92101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 137.92059 532.84061 Tm
-0.00369 Tc
(\(0)Tj [23.8 ]TJ (+)Tj [30.5 ]TJ (2)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
122.08099 552.881 9 -22.2 rf
0 0 0 scn
121.841 553.121 0.48 -22.44 rf
122.08099 553.121 9.24001 -0.48 rf
130.841 552.881 0.48 -22.44 rf
121.841 530.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 128.92059 532.84061 Tm
(\(1)Tj [23.8 ]TJ (+)Tj [30.5 ]TJ (3)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
112.961 552.881 9 -22.2 rf
0 0 0 scn
112.72099 553.121 0.48 -22.44 rf
112.961 553.121 9.24001 -0.48 rf
121.72099 552.881 0.48 -22.44 rf
112.72099 530.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 119.8006 532.84061 Tm
(\(4)Tj [23.8 ]TJ (+)Tj [30.5 ]TJ (6)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
103.841 552.881 9 -22.2 rf
0 0 0 scn
103.601 553.121 0.48 -22.44 rf
103.841 553.121 9.24001 -0.48 rf
112.601 552.881 0.48 -22.44 rf
103.601 530.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 110.6806 532.84061 Tm
(\(5)Tj [23.8 ]TJ (+)Tj [30.5 ]TJ (7)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
94.961 552.881 8.88 -22.2 rf
0 0 0 scn
94.72099 553.121 0.48 -22.44 rf
94.961 553.121 9.12 -0.48 rf
103.601 552.881 0.48 -22.44 rf
94.72099 530.92101 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 101.6806 530.92059 Tm
-0.0275 Tc
(\()Tj [-9.5 ]TJ (8)Tj [0 ]TJ (+)Tj [-7.60001 ]TJ (10\))Tj 
ET
1 1 1 scn
85.841 552.881 9 -22.2 rf
0 0 0 scn
85.601 553.121 0.48 -22.44 rf
85.841 553.121 9.24001 -0.48 rf
94.601 552.881 0.48 -22.44 rf
85.601 530.92101 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 92.6806 531.0406 Tm
-0.019 Tc
(\(9)Tj [8.5 ]TJ (+1)Tj [37.10001 ]TJ (1)Tj [8.5 ]TJ (\))Tj 
ET
1 1 1 scn
213.761 553.00101 9 -22.2 rf
0 0 0 scn
213.521 553.241 0.48 -22.44 rf
213.761 553.241 9.24001 -0.48 rf
222.521 553.00101 0.48 -22.44 rf
213.521 531.041 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 220.6006 533.92059 Tm
-0.01801 Tc
(\(0)Tj [9.5 ]TJ (-)Tj [-14.3 ]TJ (2)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
204.761 553.00101 8.88 -22.2 rf
0 0 0 scn
204.521 553.241 0.48 -22.44 rf
204.761 553.241 9.12 -0.48 rf
213.401 553.00101 0.48 -22.44 rf
204.521 531.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 211.48061 533.92059 Tm
(\(1)Tj [9.5 ]TJ (-)Tj [-14.3 ]TJ (3)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
195.64101 553.00101 8.88 -22.2 rf
0 0 0 scn
195.401 553.241 0.48 -22.44 rf
195.64101 553.241 9.12 -0.48 rf
204.28101 553.00101 0.48 -22.44 rf
195.401 531.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 202.3606 533.92059 Tm
(\(4)Tj [9.5 ]TJ (-)Tj [-14.3 ]TJ (6)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
186.521 553.00101 8.88 -22.2 rf
0 0 0 scn
186.28101 553.241 0.48 -22.44 rf
186.521 553.241 9.12 -0.48 rf
195.161 553.00101 0.48 -22.44 rf
186.28101 531.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 193.2406 533.92059 Tm
(\(5)Tj [9.5 ]TJ (-)Tj [-14.3 ]TJ (7)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
177.521 553.00101 9 -22.2 rf
0 0 0 scn
177.28101 553.241 0.48 -22.44 rf
177.521 553.241 9.24001 -0.48 rf
186.28101 553.00101 0.48 -22.44 rf
177.28101 531.041 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 184.3606 532.0006 Tm
-0.00369 Tc
(\(8)Tj [23.8 ]TJ (-)Tj [14.3 ]TJ (1)Tj [23.8 ]TJ (0)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
168.521 553.00101 8.88 -22.2 rf
0 0 0 scn
168.28101 553.241 0.48 -22.44 rf
168.521 553.241 9.12 -0.48 rf
177.161 553.00101 0.48 -22.44 rf
168.28101 531.041 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 175.2406 532.12061 Tm
-0.01801 Tc
(\(9)Tj [9.5 ]TJ (-1)Tj [38.2 ]TJ (1)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
203.08099 638.321 8.88 -22.32001 rf
0 0 0 scn
202.841 638.561 0.48 -22.56 rf
203.08099 638.561 9.12 -0.48 rf
211.72099 638.321 0.48 -22.56 rf
202.841 616.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 209.8006 618.28059 Tm
-0.019 Tc
(\(0)Tj [8.5 ]TJ (+2)Tj [8.5 ]TJ (\))Tj 
ET
1 1 1 scn
193.961 638.321 9 -22.32001 rf
0 0 0 scn
193.72099 638.561 0.48 -22.56 rf
193.961 638.561 9.24001 -0.48 rf
202.72099 638.321 0.48 -22.56 rf
193.72099 616.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 200.8006 618.28059 Tm
(\(1)Tj [8.5 ]TJ (+3)Tj [8.5 ]TJ (\))Tj 
ET
1 1 1 scn
184.841 638.321 8.88 -22.32001 rf
0 0 0 scn
184.601 638.561 0.48 -22.56 rf
184.841 638.561 9.12 -0.48 rf
193.481 638.321 0.48 -22.56 rf
184.601 616.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 191.6806 619.2406 Tm
-0.01801 Tc
(\(0)Tj [9.5 ]TJ (-2)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
175.72099 638.321 9 -22.32001 rf
0 0 0 scn
175.481 638.561 0.48 -22.56 rf
175.72099 638.561 9.24001 -0.48 rf
184.481 638.321 0.48 -22.56 rf
175.481 616.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 182.56059 619.2406 Tm
(\(1)Tj [9.5 ]TJ (-3)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
166.841 638.321 8.88 -22.32001 rf
0 0 0 scn
166.601 638.561 0.48 -22.56 rf
166.841 638.561 9.12 -0.48 rf
175.481 638.321 0.48 -22.56 rf
166.601 616.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 173.56059 618.28059 Tm
-0.019 Tc
(\(4)Tj [8.5 ]TJ (+6)Tj [8.5 ]TJ (\))Tj 
ET
1 1 1 scn
157.72099 638.321 9 -22.32001 rf
0 0 0 scn
157.481 638.561 0.48 -22.56 rf
157.72099 638.561 9.24001 -0.48 rf
166.481 638.321 0.48 -22.56 rf
157.481 616.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 164.56059 618.28059 Tm
(\(5)Tj [8.5 ]TJ (+7)Tj [8.5 ]TJ (\))Tj 
ET
1 1 1 scn
148.481 638.321 9 -22.32001 rf
0 0 0 scn
148.241 638.561 0.48 -22.56 rf
148.481 638.561 9.24001 -0.48 rf
157.241 638.321 0.48 -22.56 rf
148.241 616.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 155.3206 619.2406 Tm
-0.01801 Tc
(\(4)Tj [9.5 ]TJ (-6)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
139.481 638.321 9 -22.32001 rf
0 0 0 scn
139.241 638.561 0.48 -22.56 rf
139.481 638.561 9.24001 -0.48 rf
148.241 638.321 0.48 -22.56 rf
139.241 616.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 146.3206 619.2406 Tm
(\(5)Tj [9.5 ]TJ (-7)Tj [9.5 ]TJ (\))Tj 
ET
1 1 1 scn
130.36099 638.321 8.88 -22.32001 rf
0 0 0 scn
130.121 638.561 0.48 -22.56 rf
130.36099 638.561 9.12 -0.48 rf
139.00101 638.321 0.48 -22.56 rf
130.121 616.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 137.0806 616.2406 Tm
-0.0144 Tc
(\(8+)Tj [19.8 ]TJ (1)Tj [13.10001 ]TJ (0\))Tj 
ET
1 1 1 scn
121.241 638.321 8.88 -22.32001 rf
0 0 0 scn
121.00101 638.561 0.48 -22.56 rf
121.241 638.561 9.12 -0.48 rf
129.881 638.321 0.48 -22.56 rf
121.00101 616.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 127.9606 616.48061 Tm
-0.00369 Tc
(\(9)Tj [23.8 ]TJ (+)Tj [30.5 ]TJ (1)Tj [52.39999 ]TJ (1)Tj [23.8 ]TJ (\))Tj 
ET
1 1 1 scn
112.241 638.321 9 -22.32001 rf
0 0 0 scn
112.00101 638.561 0.48 -22.56 rf
112.241 638.561 9.24001 -0.48 rf
121.00101 638.321 0.48 -22.56 rf
112.00101 616.241 9.24001 -0.48 rf
BT
0 8.3813 -6.48 0 119.0806 617.20061 Tm
-0.0168 Tc
(\(8)Tj [10.7 ]TJ (-10)Tj [10.7 ]TJ (\))Tj 
ET
1 1 1 scn
103.241 638.321 8.88 -22.32001 rf
0 0 0 scn
103.00101 638.561 0.48 -22.56 rf
103.241 638.561 9.12 -0.48 rf
111.881 638.321 0.48 -22.56 rf
103.00101 616.241 9.12 -0.48 rf
BT
0 8.3813 -6.48 0 110.0806 617.3206 Tm
-0.01559 Tc
(\(9-1)Tj [54.89999 ]TJ (1\))Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 4841 a(Figure)22 b(16:)35 b(The)20
b(4x4)g(butter\015y)i(stage)f(in)g(the)g(FFT.)e(The)h(tap)r(es)h
(illustrates)j(the)c(data)i(transformation)h(and)e(computation.)1902
5627 y Fr(13)p eop
%%Page: 14 14
14 13 bop -152 -461 a Fo(class)31 b(RFtoIF)f(extends)g(Filter)g({)-59
-394 y(Channel)g(input)g(=)h(new)f(FloatChannel\(\);)-59
-328 y(Channel)g(output)g(=)h(new)f(FloatChannel\(\);)-59
-261 y(int)g(size,)h(count;)-59 -195 y(float)f(weight[];)-59
-129 y(void)g(init\(float)g(f\))h({)34 -62 y(setf\(f\);)-59
4 y(})-59 71 y(void)f(work\(\))g({)34 137 y
(output.push\(input.pop\(\)*weight[i++]\);)34 203 y(if)g
(\(count==size\))f(count)i(=)f(0;)-59 270 y(})-59 336
y(void)g(setf\(float)g(f\))h({)34 403 y(count)f(=)h(0;)34
469 y(size)f(=)h(CARRIER_FREQ/f*N;)34 536 y(weight)f(=)g(new)h
(float[size];)34 602 y(for)f(\(int)g(i=0;)h(i<size;)f(i++\))126
668 y(weight[i])g(=)h(sine\(i*PI/size\);)-59 735 y(})-152
801 y(})-152 934 y(class)g(FIR)f(extends)g(Filter)g({)-59
1000 y(Channel)g(input)g(=)h(new)f(FloatChannel\(\);)-59
1067 y(Channel)g(output)g(=)h(new)f(FloatChannel\(\);)-59
1133 y(int)g(N;)-59 1200 y(void)g(init\(int)g(N\))h({)34
1266 y(this.N)f(=)g(N;)-59 1333 y(})-59 1399 y(void)g(work\(\))g({)34
1465 y(float)g(sum)g(=)h(0;)34 1532 y(for)f(\(int)g(i=0;)h(i<N;)f
(i++\))h({)126 1598 y(sum)g(+=)f(input.peek\(i\)*FIR_COEFF[i][N];)34
1665 y(})34 1731 y(input.pop\(\);)34 1797 y(output.push\(sum\);)-59
1864 y(})-152 1930 y(})-152 2063 y(class)h(Booster)f(extends)g(Stream)g
({)-59 2130 y(void)g(init\(int)g(N,)h(boolean)f(adds\))g({)34
2196 y(if)g(\(adds\))g(add\(new)g(FIR\(N\)\);)-59 2262
y(})-152 2329 y(})-152 2462 y(class)h(Butterfly)e(extends)h(Stream)g({)
-59 2528 y(void)g(init\(int)g(N,)h(int)f(W\))h({)34 2594
y(add\(new)f(SplitJoin\(\))f({)126 2661 y(void)i(init\(\))f({)219
2727 y(setSplitter\(WEIGHTED_ROUND_ROBIN\(N,)c(N\)\);)219
2794 y(add\(new)k(Filter\(\))g({)311 2860 y(Channel)g(input)h(=)f(new)h
(FloatChannel\(\);)311 2927 y(Channel)f(output)h(=)f(new)h
(FloatChannel\(\);)311 2993 y(float)g(weights[])e(=)i(new)g(float[W];)
311 3059 y(int)g(curr;)311 3126 y(void)g(init\(\))f({)404
3192 y(for)h(\(int)f(i=0;)g(i<W;)h(i++\))497 3259 y(weights[i])e(=)i
(calcWeight\(i,)e(N,)i(W\);)404 3325 y(curr)f(=)h(0;)311
3391 y(})311 3458 y(void)g(work\(\))f({)404 3524 y
(output.push\(input.pop\(\)*weights[curr++]\);)404 3591
y(if\(curr>=)g(W\))g(curr)h(=)g(0;)311 3657 y(})219 3724
y(}\);)219 3790 y(add\(IDENTITY\(\)\);)219 3856 y
(setJoiner\(ROUND_ROBIN\);)34 3923 y(}}\);)34 3989 y(add\(new)f
(SplitJoin\(\))f({)126 4056 y(void)i(init\(\))f({)219
4122 y(setSplitter\(DUPLICATE\);)219 4188 y(add\(new)g(Filter\(\))g({)
311 4255 y(Channel)g(input)h(=)f(new)h(FloatChannel\(\);)311
4321 y(Channel)f(output)h(=)f(new)h(FloatChannel\(\);)311
4388 y(void)g(work\(\))f({)404 4454 y(output.push\(input.pop\(\))e(-)j
(input.pop\(\)\);)311 4521 y(})219 4587 y(}\);)219 4653
y(add\(new)f(Filter\(\))g({)311 4720 y(Channel)g(input)h(=)f(new)h
(FloatChannel\(\);)311 4786 y(Channel)f(output)h(=)f(new)h
(FloatChannel\(\);)311 4853 y(void)g(work\(\))f({)404
4919 y(output.push\(input.pop\(\))e(+)j(input.pop\(\)\);)311
4986 y(})219 5052 y(}\);)219 5118 y
(setJoiner\(WEIGHTED_ROUND_ROBIN\(N,)c(N\)\);)34 5185
y(}}\);)-152 5251 y(}})-110 5452 y Fq(Figure)j(17:)39
b Fn(A)27 b(T)-7 b(runk)n(ed)28 b(Radio)e(Receiv)n(er)g(in)h(StreaMIT.)
2040 -471 y Fo(class)j(FFT)h(extends)f(Stream)g({)2133
-405 y(void)g(init\(int)g(N\))h({)2225 -338 y(add\(new)f(SplitJoin\(\))
g({)2318 -272 y(void)g(init\(\))g({)2411 -206 y
(setSplitter\(WEIGHTED_ROUND_ROBIN\(N/2,)c(N/2\)\);)2411
-139 y(for)k(\(int)g(i=0;)h(i<2;)f(i++\))2503 -73 y(add\(new)g
(SplitJoin\(\))g({)2596 -6 y(void)g(init\(\))g({)2688
60 y(setSplitter\(ROUND_ROBIN\);)2688 126 y(add\(IDENTITY\(\)\);)2688
193 y(add\(IDENTITY\(\)\);)2688 259 y
(setJoiner\(WEIGHTED_ROUND_ROBIN\(N/4,)d(N/4\)\);)2503
326 y(}}\);)2411 392 y(setJoiner\(ROUND_ROBIN\);)2225
459 y(}}\);)2225 525 y(for)k(\(int)f(i=2;)h(i<N;)f(i*=2\))2287
591 y(add\(new)g(Butterfly\(i,)f(N\)\);)2040 658 y(}})2040
791 y(class)h(CheckFreqHop)g(extends)g(SplitJoin)f({)2133
857 y(RFtoIFPortal)g(freqHop;)2133 923 y(void)h(init\(RFtoIFPortal)f
(freqHop\))h({)2225 990 y(this.freqHop)g(=)g(freqHop;)2225
1056 y(setSplitter\(WEIGHTED_ROUND_ROBIN\(N/4-2,1,1,N/2,1,1,N/4-)o
(2\)\);)2225 1123 y(int)h(k)g(=)f(0;)2225 1189 y(for)h(\(int)f(i=1;)h
(i<=5;)f(i++\))g({)2318 1256 y(if)h(\(\(i==2\)||\(i==4\)\))d({)2411
1322 y(for)i(\(int)g(j=0;)h(j<2;)f(j++\))h({)2503 1388
y(add\(new)f(Filter\(\))g({)2596 1455 y(Channel)g(input)g(=)h(new)f
(FloatChannel\(\);)2596 1521 y(Channel)g(output)g(=)h(new)f
(FloatChannel\(\);)2596 1588 y(void)g(work\(\))g({)2688
1654 y(float)h(val)f(=)h(input.pop\(\);)2688 1720 y(if)g(\(val)f(>=)h
(MIN_THRESHOLD\))2781 1787 y(freqHop.setf\(FREQ[k],)d(new)j
(TimeInterval\(4*N,)e(6*N\)\);)2688 1853 y(output.push\(val\);)2596
1920 y(})2503 1986 y(}\);)2503 2053 y(k++;)2411 2119
y(})2318 2185 y(})i(else)f(add\(IDENTITY\(\)\);)2225
2252 y(})2225 2318 y
(setJoiner\(WEIGHTED_ROUND_ROBIN\(N/4-2,1,1,N/2,1,1,N/4-2\))o(\);)2133
2385 y(})2040 2451 y(})2040 2584 y(class)g(CheckQuality)g(extends)g
(Filter)g({)2133 2650 y(Channel)g(input)g(=)h(new)f(FloatChannel\(\);)
2133 2717 y(Channel)g(output)g(=)h(new)f(FloatChannel\(\);)2133
2783 y(float)g(aveHi,)g(aveLo;)2133 2850 y(BoosterPortal)f
(boosterSwitch;)2133 2916 y(boolean)h(boosterOn;)2133
2982 y(void)g(init\(BoosterPortal)f(boosterSwitch,)g(boolean)h
(boosterOn\))f({)2225 3049 y(aveHi)i(=)f(0;)h(aveLo)f(=)h(1;)2225
3115 y(this.boosterSwitch)e(=)i(boosterSwitch;)2225 3182
y(this.boosterOn)e(=)i(boosterOn;)2133 3248 y(})2133
3314 y(void)f(work\(\))g({)2225 3381 y(float)h(val)f(=)h
(input.pop\(\);)2225 3447 y(aveHi)g(=)f(max\(0.9*aveHi,)f(val\);)2225
3514 y(aveLo)i(=)f(min\(1.1*aveLo,)f(val\);)2225 3580
y(if)i(\(aveHi)f(-)h(aveLo)f(<)h(QUAL_BAD_THRESHOLD)d(&&)j
(!booosterOn\))e({)2318 3647 y(boosterSwitch.init\(true,)f
(BEST_EFFORT\);)2318 3713 y(boosterOn)i(=)g(true;)2225
3779 y(})2225 3846 y(if\(aveHi)g(-)h(aveLo)f(>)h(QUAL_GOOD_THRESHOLD)d
(&)j(boosterOn\))f({)2318 3912 y(boosterSwitch.init\(false,)e
(BEST_EFFORT\);)2318 3979 y(boosterOn)i(=)g(false;)2225
4045 y(})2225 4111 y(output.push\(val\);)2133 4178 y(})2040
4244 y(})2040 4377 y(class)g(TrunkedRadio)g(extends)g(Stream)g({)2133
4444 y(int)g(N)h(=)g(64;)2133 4510 y(RFtoIFPortal)e(freqHop)h(=)h(new)f
(RFtoIFPortal\(\);)2133 4576 y(BoosterPortal)f(onOff)h(=)h(new)f
(BoosterPortal\(\).)2133 4643 y(void)g(init\(\))g({)2225
4709 y(ReadFromAtoD)g(in)g(=)h(add\(new)f(ReadFromAtoD\(\)\);)2225
4776 y(RFtoIF)g(rf2if)h(=)f(add\(new)g(RFtoIF\(STARTFREQ\)\);)2225
4842 y(Booster)g(iss)h(=)g(add\(new)f(Booster\(N,)f(false\)\);)2225
4908 y(add\(new)h(FFT\(N\)\);)2225 4975 y(add\(new)g
(CheckFreqHop\(freqHop\)\);)2225 5041 y(add\(new)g
(CheckQuality\(onOff,)f(false\)\);)2225 5108 y(AudioBackEnd)h(out)g(=)h
(add\(new)f(AudioBackEnd\(\)\);)2225 5241 y(freqHop.register\(rf2if\);)
2225 5307 y(onOff.register\(iss\);)2225 5373 y(MAX_LATENCY\(in,)f(out,)
i(10\);)2133 5440 y(})2040 5506 y(})1902 5627 y Fr(14)p
eop
%%Page: 15 15
15 14 bop -77 -69 a Fa(APPENDIX:)35 b(Details)h(on)h(Ja)m(v)-6
b(a)38 b(Syn)m(tax)475 97 y(***DRAFT***)-152 297 y Fs(1.)100
b(J)m(A)-14 b(V)h(A)23 b(CLASSES)-152 388 y Fr(A)d(diagram)g(of)h(the)e
(Ja)n(v)l(a)i(class)g(hierarc)n(h)n(y)f(for)g(StreaMIT)h(is)g(sho)n(wn)
-152 475 y(in)k(Figure)h(18.)35 b(A)24 b(summary)f(of)j(the)e(metho)r
(ds)g(in)h(eac)n(h)g(class)i(is)e(as)-152 562 y(follo)n(ws.)-152
762 y Fs(1.1)99 b(Str)n(eaMIT)n(Object)-152 853 y Fr(A)29
b Ft(StreaMITObject)k Fr(con)n(tains)d(static)h(\014elds)e(and)g(metho)
r(ds)g(that)-152 940 y(are)34 b(useful)g(for)h(all)f(classes)h(in)f
(the)f(stream.)58 b(The)33 b(other)h(classes)-152 1027
y(extend)h(this)h(t)n(yp)r(e)f(simply)f(so)j(that)e(they)g(can)h(share)
g(the)f(same)-152 1114 y(namespace)26 b(as)g(the)f(constan)n(ts)h(and)g
(metho)r(ds)e(that)i(it)g(de\014nes.)-152 1314 y Fm(1.1.1)90
b(F)l(ields)-152 1405 y Ft(TimeInterval)42 b(BEST)p 519
1405 24 4 v 29 w(EFFORT)-152 1517 y Fr(This)18 b(pre-de\014ned)e(time)g
(in)n(terv)l(al)h(indicates)h(that)f(a)g(message)h(should)-152
1604 y(b)r(e)30 b(deliv)n(ered)g(on)f(a)i(\\b)r(est-e\013ort")f(basis,)
i(without)e(strict)g(timing)-152 1691 y(guaran)n(tees.)-152
1866 y Ft(SplitJoinType)43 b(ROUND)p 598 1866 V 29 w(ROBIN)-152
1978 y Fr(This)27 b(is)f(used)f(to)h(sp)r(ecify)g(a)g(round)f(robin)h
(splitter)g(or)g(joiner.)-152 2152 y Ft(SplitJoinType)43
b(NULL)-152 2264 y Fr(This)35 b(is)g(used)f(to)g(sp)r(ecify)h(a)f
(splitter)h(or)f(joiner)h(that)f(is)h(n)n(ull)f(\(it)-152
2351 y(pro)r(cesses)27 b(no)f(items\).)-152 2526 y Ft(SplitJoinType)43
b(DUPLICATE)-152 2638 y Fr(This)27 b(sp)r(eci\014es)f(a)g(duplicating)g
(splitter.)-152 2812 y Ft(SplitJoinType)43 b(COMBINE)-152
2924 y Fr(This)27 b(sp)r(eci\014es)f(a)g(com)n(bining)f(joiner.)-152
3124 y Fm(1.1.2)90 b(Methods)-152 3215 y Ft(SplitJoinType)43
b(WEIGHTED)p 715 3215 V 30 w(ROUND)p 940 3215 V 29 w(ROBIN\(int)e(w1,)f
(int)g(w2,)g(...\))-152 3414 y Fr(This)20 b(sp)r(eci\014es)f(a)g(w)n
(eigh)n(ted)g(round)f(robin)g(with)h(the)f(giv)n(en)h(w)n(eigh)n(ts.)
-152 3501 y(This)i(function)g(do)r(es)f(not)h(tak)n(e)f(a)g(v)l
(ariable)h(n)n(um)n(b)r(er)d(of)j(argumen)n(ts,)-152
3588 y(but)c(rather)h(is)g(de\014ned)e(for)j(all)f(n)n(um)n(b)r(ers)e
(of)i(argumen)n(ts)f(that)g(w)n(ould)-152 3676 y(b)r(e)26
b(lik)n(ely)g(to)f(o)r(ccur)i(in)e(a)h(StreaMIT)g(program.)-152
3850 y Ft(Filter)41 b(IDENTITY\(\))-152 3962 y Fr(This)31
b(returns)e(a)h Ft(Filter)h Fr(that)e(outputs)g(exactly)h(the)f(items)g
(that)-152 4049 y(it)d(inputs.)-152 4224 y Ft(MAX)p -30
4224 V 29 w(LATENCY\(Stream)43 b(a,)c(Stream)i(b,)f(int)g(n\))-152
4336 y Fr(This)19 b(directiv)n(e)e(constrains)i(the)e(sc)n(hedule)h
(suc)n(h)f(that,)i(at)f(an)n(y)f(giv)n(en)-152 4423 y(time,)22
b Fj(a)f Fr(can)g(only)g(progress)h(up)f(to)g(the)g(w)n(a)n(v)n(efron)n
(t)g(of)h(information)-152 4510 y(that)k Fj(b)f Fr(will)i(see)f(after)h
Fj(n)f Fr(in)n(v)n(o)r(cations)g(of)h(its)f(o)n(wn)g(w)n(ork)g
(function.)-152 4709 y Fs(1.2)99 b(Str)n(eam)26 b(extends)g(Str)n
(eaMIT)n(Object)-152 4801 y Fr(The)31 b Ft(Stream)h Fr(represen)n(ts)f
(a)g(p)r(ortion)h(of)f(the)g(stream)f(graph)h(that)-152
4888 y(inputs)20 b(has)g(exactly)g(one)h(input)e(c)n(hannel)h(and)f
(exactly)h(one)h(output)-152 4975 y(c)n(hannel.)-152
5174 y Fm(1.2.1)90 b(Methods)-152 5266 y Ft(void)40 b
(init\(user-defined)k(arguments\))-152 5378 y Fr(The)27
b Ft(init)g Fr(function)f(is)h(called)g(automatically)g(when)f(the)f
Ft(Stream)2040 933 y @beginspecial 104 @llx 144 @lly
426 @urx 338 @ury 2160 @rwi @setspecial
%%BeginDocument: hierarchy.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (fft.fm)
%%Version: 1 3
%%Creator: (AdobePS5.dll Version 5.1.1)
%%CreationDate: (D:20010806100653)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 104 144 426 338
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

104 144 moveto
426 144 lineto
426 338 lineto
104 338 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset spots
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Predefined (named) spot functions for PDF
21 dict dup begin
/CosineDot
{ 180 mul cos exch 180 mul cos add 2 div } bd
/Cross
{ abs exch abs 2 copy gt { exch } if pop neg } bd
/Diamond
{ abs exch abs 2 copy add .75 le
{ dup mul exch dup mul add 1 exch sub }
{ 2 copy add 1.23 le
{ .85 mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse }
ifelse } bd
/Double
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd
/DoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add } bd
/Ellipse
{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt
{ pop dup mul exch .75 div dup mul add 4 div
1 exch sub }
{ dup 1 gt
{pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub }
{ .5 exch sub exch pop exch pop }
ifelse }
ifelse } bd
/EllipseA
{ dup mul .9 mul exch dup mul add 1 exch sub } bd
/EllipseB
{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd
/EllipseC
{ dup mul exch dup mul .9 mul add 1 exch sub } bd
/InvertedDouble
{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedDoubleDot
{ 2 { 360 mul sin 2 div exch } repeat add neg } bd
/InvertedEllipseA
{ dup mul .9 mul exch dup mul add 1 sub } bd
/InvertedEllipseC
{ dup mul exch dup mul .9 mul add 1 sub } bd
/InvertedSimpleDot
{ dup mul exch dup mul add 1 sub } bd
/Line
{ exch pop abs neg } bd
/LineX
{ pop } bd
/LineY
{ exch pop } bd
/Rhomboid
{ abs exch abs 0.9 mul add 2 div } bd
/Round
{ abs exch abs 2 copy add 1 le
{ dup mul exch dup mul add 1 exch sub }
{ 1 sub dup mul exch 1 sub dup mul add 1 sub }
ifelse } bd
/SimpleDot
{ dup mul exch dup mul add 1 exch sub } bd
/Square
{ abs exch abs 2 copy lt { exch } if pop neg } bd
end
{ /Function defineRes pop } forall
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%BeginResource: font AKGNAF+Arial
11 dict begin
/FontName /AKGNAF+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/.notdef 40 RD 
f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc
e507fc6806f8e507090e ND 
/space 5 RD 
8bf7aa0d0e ND 
/parenleft 74 RD 
c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9
9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37
ac3908ad38b444bb4e08ca06090e ND 
/parenright 73 RD 
c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c
06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb
3008ca06bbc8b4d3addd08090e ND 
/asterisk 97 RD 
aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168
9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08
91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382
b583088a06090e ND 
/plus 43 RD 
c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57
063907f75706fb5807de06090e ND 
/comma 47 RD 
def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208
99a191a98bb008ef0727062707bd06090e ND 
/hyphen 21 RD 
abf7e10df7a3f76b15e307fba4063307f7a406090e ND 
/period 16 RD 
e6f7aa0def16ef0727062707ef06090e ND 
/zero 163 RD 
b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe
93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992
658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba
4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a
088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a
088bf70a9adca9b7088a07090e ND 
/one 52 RD 
f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694
aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 
/two 148 RD 
a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6
a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55
7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b
ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567
706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 
/three 207 RD 
b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8
7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa
7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050
08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b
6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e
9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b
08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 
/four 55 RD 
98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb
06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 
/five 136 RD 
b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf
76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7
0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5
6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b
ad84b8082f8405914fa35bb36608090e ND 
/six 211 RD 
b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e
088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208
9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d
7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e
a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99
b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b
08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809
0e ND 
/seven 68 RD 
baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308
e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689
3705f7f38a05090e ND 
/equal 35 RD 
c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c
06dd07090e ND 
/A 67 RD 
8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd
6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88
06daf76505090e ND 
/B 215 RD 
d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8
91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8
8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60
05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890
768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d
0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889
758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606
f78b07090e ND 
/C 157 RD 
bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808
7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b
b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d
8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0
5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f
725e676c08090e ND 
/D 147 RD 
d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5
9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d
6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4
8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379
6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 
/E 42 RD 
daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df
07fc9906fd6007f8aa06090e ND 
/F 35 RD 
ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60
07ea06090e ND 
/H 40 RD 
dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb
072c06fd6007ea06090e ND 
/I 18 RD 
e8f7aa0dea16f960072c06fd6007ea06090e ND 
/J 90 RD 
a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac
91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177
85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e
 ND 
/L 25 RD 
d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 
/M 66 RD 
d5f9d50de716f8f607f763fcf605e006f765f8eb05fceb07e606f96007fb
1306fb40fc860579587e6583710885a37fae7bba08fb3df88f05fb2206fd
6007e606090e ND 
/O 157 RD 
bbf99e0db4f73e15a653b35fc06a08c26ac77bce8b08c88bc59ac1a808c2
a9b4b6a8c408a8c49acc8bd4088bd27dcb6fc30870c562b656ab0856aa50
9b498b08248b3a694b48084b486b2e8bfb0b088b4d994fa6530809f715f8
2b15bcb9c5a2ce8b08b98bb67fb17308b173a8699f60089e6095588b5108
8b2f74445d59085d595072448b08458b51a45dbd085cbb74d08be1088bf6
a3d8bbb908090e ND 
/Q 197 RD 
b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08
56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46
994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e
be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9
78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08
bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25
6f3f53580869aa5da1549a08754705090e ND 
/R 160 RD 
daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b
9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f
977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70
a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180
a37508a676966f8b69088b7385767e77087e78787c73820874836986608b
08fb61068cf78105090e ND 
/S 246 RD 
b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e
aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a
3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b
08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462
9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708
8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d
a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85
678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97
60a46508090e ND 
/T 30 RD 
a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e
 ND 
/W 101 RD 
97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6
05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824
f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527
06f752fd6005ed8a05090e ND 
/bracketleft 31 RD 
cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609
0e ND 
/bracketright 31 RD 
9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709
0e ND 
/a 258 RD 
aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6
889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f
08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4
8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308
698670877a860874867681787e08787e7c7a7f7608807785738b72088b60
9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275
9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369
8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108
9a92a590af9008cb96bb95ab98086b07090e ND 
/b 138 RD 
ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf
86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74
665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab
7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f
b8087ba682b88bc9088bcb99bba7ac08090e ND 
/c 135 RD 
b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b
d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805
81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62
815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9
94c608359705855f7c6b747608090e ND 
/d 146 RD 
adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e
8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6
6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab
ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c
658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 
/e 144 RD 
b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8
15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08
5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8
a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b
af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 
/g 200 RD 
abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c
ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470
6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1
b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08
7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4
8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a
9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 
/h 92 RD 
cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08
ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e
a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306
090e ND 
/i 32 RD 
cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306
090e ND 
/j 83 RD 
5df7720df75bf8fa15f10734068a2505e30609fb16fdcc15bc8bae9ba0ac
089ca493b88bcb088cf8b70532068cfcb5058a59876e827f0882817e8479
8b08818b7d8d7990087b4005a185a288a38b088b06090e ND 
/k 52 RD 
cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505
fb0706fb62fb670589f82c05350689fd6005e406090e ND 
/l 18 RD 
cbf7720de316f960073306fd6007e306090e ND 
/m 157 RD 
cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08
ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4
a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07
e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2
729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689
fc9b05e406090e ND 
/n 99 RD 
cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008
9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886
a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c
06fc9b07e38a05090e ND 
/o 133 RD 
acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2
95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45
8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9
69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c
bc8bcd088bce9abca8ac08090e ND 
/p 153 RD 
cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af
a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208
6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306
09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58
6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af
08090e ND 
/q 141 RD 
aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608
6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b
a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08
b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b
6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 
/r 72 RD 
ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08
a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766
08db073c06fc9b07e306090e ND 
/s 232 RD 
aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3
93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193
828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b
08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c
97086c976891628b086f8b7288738408758378837d8108797e7d7b807708
807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d
a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94
759e08749d7ea686ae08347d059554a262ae6f08090e ND 
/t 98 RD 
9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7
c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68
927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e
8b818b088c06090e ND 
/u 106 RD 
cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873
7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307
3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786
aa8b08d08bc2a8b3c6083e07da06090e ND 
/w 74 RD 
8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0
056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7
bf052f06f731fc9b05e88c05090e ND 
/y 116 RD 
9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7
5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005
2d06f759fc9d058782888489860881688175858208848081827f84088084
7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AKGNAF+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
%%EndResource
[/N86/AKGNAF+Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
104 144 322 194 re W n
[ 0 -1 1 0 -40.032 442.008 ] concat
/N77 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop
/N98 <<
/SA false 
/OP false 
/op false 
/OPM 1 
/BG /_defaultblackgeneration load 
/UCR /_defaultundercolorremoval load 
/TR /_defaulttransfer load 
/SM 0.02 
>> /ExtGState defineRes pop
/N77 /ColorSpace findRes cs
0 0 0 scn
/N98 /ExtGState findRes gs
1 i
155.80099 304.841 m
155.92101 304.481 l
156.161 304.121 l
156.401 303.881 l
157.241 303.881 l
157.601 304.121 l
157.841 304.841 l
157.601 305.561 l
157.241 305.80099 l
156.401 305.80099 l
156.161 305.561 l
155.92101 305.201 l
155.80099 304.841 l
f* 
156.761 304.841 m
156.761 299.92101 l
156.161 300.041 l
141.28101 304.36099 l
139.601 304.841 l
141.28101 305.321 l
156.161 309.64101 l
156.761 309.761 l
156.761 309.161 l
156.401 308.681 l
141.521 304.36099 l
141.28101 305.321 l
141.521 305.321 l
156.401 301.00101 l
156.161 300.041 l
155.80099 300.521 l
155.80099 304.841 l
f 
155.80099 309.161 0.96001 -4.32001 rf
156.28101 304.841 m
156.28101 300.521 l
141.401 304.841 l
156.28101 309.161 l
f* 
155.92101 303.881 0.96001 2.03999 rf
173.80099 305.92101 0.96001 -2.03999 rf
156.881 303.881 16.92 2.03999 rf
239.08099 168.881 2.03999 0.96001 rf
239.08099 404.561 2.03999 -0.96001 rf
239.08099 169.841 2.03999 233.75999 rf
224.561 304.841 m
224.681 304.481 l
224.92101 304.121 l
225.161 303.881 l
226.00101 303.881 l
226.241 304.121 l
226.481 304.481 l
226.601 304.841 l
226.481 305.201 l
226.241 305.561 l
226.00101 305.80099 l
225.161 305.80099 l
224.92101 305.561 l
224.681 305.201 l
224.561 304.841 l
f* 
225.521 304.841 m
225.521 299.92101 l
224.92101 300.041 l
210.041 304.36099 l
208.36099 304.841 l
210.041 305.321 l
224.92101 309.64101 l
225.521 309.761 l
225.521 309.161 l
225.161 308.681 l
210.28101 304.36099 l
210.041 305.321 l
210.28101 305.321 l
225.161 301.00101 l
224.92101 300.041 l
224.561 300.521 l
224.561 304.841 l
f 
224.561 309.161 0.96001 -4.32001 rf
225.041 304.841 m
225.041 300.521 l
210.161 304.841 l
225.041 309.161 l
f* 
240.041 303.881 0.96001 2.03999 rf
224.681 305.92101 0.96001 -2.03999 rf
225.64101 303.881 14.39999 2.03999 rf
262.481 402.64101 0.96001 2.03999 rf
239.08099 404.681 0.96001 -2.03999 rf
240.041 402.64101 22.44 2.03999 rf
262.841 168.881 0.96001 2.03999 rf
239.08099 170.92101 0.96001 -2.03999 rf
240.041 168.881 22.8 2.03999 rf
263.321 269.561 0.96001 2.03999 rf
240.041 271.601 0.96001 -2.03999 rf
241.00101 269.561 22.32001 2.03999 rf
1 1 1 scn
105.041 364.841 34.44 -120 rf
0 0 0 scn
104.80099 365.08099 0.48 -120.24001 rf
105.041 365.08099 34.67999 -0.48 rf
139.241 364.841 0.48 -120.24001 rf
104.80099 245.08099 34.67999 -0.48 rf
BT
/N86 1 Tf
0 14.39999 -14.39999 0 128.3206 254.92059 Tm
-0.0002 Tc
0 Tw
(S)Tj [50.10001 ]TJ (t)Tj [-5.7 ]TJ (r)Tj [7.8 ]TJ (eaMIT)Tj [19 ]TJ (Obj)Tj [-3 ]TJ (e)Tj [6 ]TJ (ct)Tj 
ET
1 1 1 scn
173.80099 336.28101 34.44 -63 rf
0 0 0 scn
173.561 336.521 0.48 -63.24001 rf
173.80099 336.521 34.67999 -0.48 rf
208.00101 336.28101 0.48 -63.24001 rf
173.561 273.521 34.67999 -0.48 rf
BT
0 14.39999 -14.39999 0 197.0806 282.0406 Tm
-0.04201 Tc
(St)Tj [-39.2 ]TJ (r)Tj [-42.3 ]TJ (e)Tj [-44.2 ]TJ (a)Tj [-35.8 ]TJ (m)Tj 
ET
1 1 1 scn
262.241 306.761 34.56 -72 rf
0 0 0 scn
262.00101 307.00101 0.48 -72.24001 rf
262.241 307.00101 34.8 -0.48 rf
296.561 306.761 0.48 -72.24001 rf
262.00101 235.00101 34.8 -0.48 rf
BT
0 14.39999 -14.39999 0 285.5206 243.64059 Tm
0.0013 Tc
(Sp)Tj [7.5 ]TJ (li)Tj [6.8 ]TJ (t)Tj [-4.2 ]TJ (J)Tj [1.3 ]TJ (o)Tj [7.5 ]TJ (i)Tj [-1.5 ]TJ (n)Tj 
ET
1 1 1 scn
262.841 194.561 34.44 -49.56 rf
0 0 0 scn
262.601 194.80099 0.48 -49.8 rf
262.841 194.80099 34.67999 -0.48 rf
297.041 194.561 0.48 -49.8 rf
262.601 145.241 34.67999 -0.48 rf
BT
0 14.39999 -14.39999 0 286.0006 154.84061 Tm
0.0036 Tc
(Fi)Tj [9.10001 ]TJ (lt)Tj [6.39999 ]TJ (er)Tj 
ET
1 1 1 scn
262.481 464.681 34.56 -120 rf
0 0 0 scn
262.241 464.92101 0.48 -120.24001 rf
262.481 464.92101 34.8 -0.48 rf
296.80099 464.681 0.48 -120.24001 rf
262.241 344.92101 34.8 -0.48 rf
BT
0 14.39999 -14.39999 0 285.7606 357.0406 Tm
0.0015 Tc
(Fee)Tj [7.7 ]TJ (dbac)Tj [9.8 ]TJ (kLoo)Tj [7.7 ]TJ (p)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 174 x Fq(Figure)57 b(18:)95 b Fn(The)52
b(StreaMIT)g(class)f(hierarc)n(h)n(y)-7 b(.)111 b(Other)2040
1194 y(StreaMIT)70 b(classes)h(unrelated)g(to)f(this)h(hierarc)n(h)n(y)
e(are)2040 1281 y Fl(SplitJoinType)p Fn(,)31 b Fl(Channel)p
Fn(,)d Fl(Portal)p Fn(,)h(and)e Fl(TimeInterval)p Fn(.)2040
1538 y Fr(is)34 b(\014rst)g(instan)n(tiated;)k(it)c(receiv)n(es)h(as)f
(its)g(argumen)n(ts)f(the)h(same)2040 1625 y(argumen)n(ts)c(that)h(w)n
(ere)g(passed)h(to)f(the)f(constructor.)51 b(Addition-)2040
1712 y(ally)-6 b(,)31 b(the)e Ft(init)h Fr(function)g(can)f(b)r(e)h
(called)g(again)h(with)e(a)h(message)2040 1799 y(at)d(run)n(time)f(to)h
(trigger)h(a)g(re-initialization)h(of)f(this)f(stream.)38
b(The)2040 1886 y(purp)r(ose)27 b(of)h(the)f(function)g(is)h(to)f
(initialize)i(c)n(hild)e(streams)h(and)e(to)2040 1974
y(set)33 b(parameters)h(used)e(with)i(this)f(stream.)57
b(The)33 b(\014lter)g(can)g(also)2040 2061 y(push,)k(p)r(op,)g(and)e(p)
r(eek)f(items)h(from)f(its)i(c)n(hannels)f(from)f(within)2040
2148 y(the)25 b Ft(init)i Fr(function,)f(although)g(this)g(usually)g
(isn't)g(necessary)-6 b(.)2040 2322 y Ft(Stream)41 b(add\(Stream)g
(child\))2040 2434 y Fr(The)29 b Ft(add)g Fr(function)f(app)r(ends)g
Ft(child)i Fr(to)e(the)g(curren)n(t)g(pip)r(eline)h(of)2040
2522 y(blo)r(c)n(ks)36 b(comprising)h(this)f(stream)g(and)f(returns)h
Ft(child)p Fr(.)67 b(It)35 b(can)2040 2609 y(only)26
b(b)r(e)f(called)i(from)e(within)h(the)f Ft(init)i Fr(function.)2040
2783 y Ft(void)40 b(run\(\))2040 2895 y Fr(The)29 b Ft(run)h
Fr(function)f(pro)n(vides)f(an)h(outside)g(in)n(terface)h(for)g
(starting)2040 2982 y(the)25 b(stream.)35 b(No)25 b(comp)r(onen)n(t)g
(of)h(an)n(y)f(stream)h(ma)n(y)e(call)j Ft(run)p Fr(.)2040
3200 y Fs(1.3)99 b(Filter)25 b(extends)h(Str)n(eam)2040
3291 y Fr(The)33 b Ft(Filter)h Fr(is)f(the)f(most)g(basic)h(kind)f(of)h
(stream.)55 b(It)32 b(con)n(tains)2040 3378 y(no)38 b(c)n(hild)g
(streams,)k(and)37 b(th)n(us)h(calling)h Ft(add)g Fr(is)g(forbidden)f
(from)2040 3465 y(within)23 b(its)g Ft(init)g Fr(function.)34
b(Instead,)23 b(the)f Ft(Filter)i Fr(de\014nes)e(a)h
Ft(work)2040 3552 y Fr(function)g(that)f(explicitly)h(describ)r(es)h
(the)e(transfer)i(of)f(input)f(items)2040 3640 y(to)29
b(output)g(items.)44 b(A)29 b(\014lter)g(has)g(some)g(input)f(and)h
(output)f(t)n(yp)r(e,)2040 3727 y(hereafter)i(referred)g(to)f(as)h
Ft(<input-type>)i Fr(and)c Ft(<output-type>)p Fr(,)2040
3814 y(resp)r(ectiv)n(ely)-6 b(.)2040 4031 y Fm(1.3.1)90
b(F)l(ields)2040 4123 y Ft(Channel)41 b(input)2040 4235
y(Channel)g(output)2040 4347 y Fr(These)22 b(input)e(and)g(output)g(c)n
(hannels)h(m)n(ust)f(b)r(e)h(the)f(\014rst)h(t)n(w)n(o)h(\014elds)2040
4434 y(declared)29 b(in)f(the)g(class.)44 b(A)n(t)28
b(the)g(line)g(of)h(their)g(declaration,)h(they)2040
4521 y(should)23 b(b)r(e)f(initialized)i(to)f(b)r(e)f(a)h(new)g
Ft(<input-type>Channel)k Fr(and)2040 4608 y Ft(<output-type>Channel)p
Fr(,)34 b(resp)r(ectiv)n(ely)-6 b(.)44 b(These)29 b Ft(Channel)h
Fr(t)n(yp)r(es)2040 4695 y(will)d(b)r(e)f(auto-generated.)2040
4913 y Fm(1.3.2)90 b(Methods)2040 5004 y Ft(void)40 b(work\(\))2040
5116 y Fr(The)32 b Ft(work)g Fr(function)f(represen)n(ts)h(the)f(most)f
(\014ne-grained)h(execu-)2040 5203 y(tion)f(step)f(of)i(the)e
(\014lter.)46 b(It)29 b(can)h(read)f(from)h(the)f(input)f(c)n(hannel,)
2040 5290 y(write)i(to)g(the)f(output)g(c)n(hannel,)i(mo)r(dify)e(the)g
(state)h(of)g(the)f(\014lter,)2040 5378 y(and)c(send)h(messages.)1902
5627 y(15)p eop
%%Page: 16 16
16 15 bop -152 -69 a Ft(<input-type>)42 b(drain\(int)g(index\))-152
43 y Fr(The)29 b Ft(drain)g Fr(function)f(sp)r(eci\014es)h(what)f(v)l
(alues)h(should)f(b)r(e)g(output)-152 131 y(from)f(this)g(\014lter)f
(if)i(it)e(lies)i(on)f(the)f(b)r(oundary)g(of)h(a)g(region)h(that)e(is)
-152 218 y(b)r(eing)e(re-initialized.)35 b(F)-6 b(or)23
b(the)g(information)h(in)g(the)f(re-initialized)-152
305 y(region)34 b(to)g(drain)f(out,)i(do)n(wnstream)e(\014lters)g(will)
i(need)d(to)i(input)-152 392 y(data)25 b(from)f(the)f(upstream)h(edge)g
(of)h(the)f(region.)35 b(Ho)n(w)n(ev)n(er,)24 b(w)n(e)h(do)-152
479 y(not)c(w)n(an)n(t)f(to)h(pull)f(fresh)h(information)g(from)f
(outside)h(of)g(the)f(region)-152 566 y(in)n(to)30 b(the)g(drain,)h(so)
g(the)e Ft(drain)i Fr(function)f(is)h(in)n(v)n(ok)n(ed)d(instead)j(to)
-152 654 y(fabricate)39 b(data.)69 b(The)37 b Ft(drain)h
Fr(function)f(is)h(successiv)n(ely)g(called)-152 741
y(with)d(indices)g(0,)j(1,)f(2,)h Fj(:)13 b(:)g(:)48
b Fr(un)n(til)34 b(the)h(do)n(wnstream)f(region)h(has)-152
828 y(drained.)-152 1034 y Fs(1.4)99 b(SplitJ)o(oin)25
b(extends)h(Str)n(eam)-152 1154 y Fm(1.4.1)90 b(Methods)-152
1245 y Fr(A)29 b Ft(SplitJoin)h Fr(is)g(a)f(set)g(of)g(indep)r(enden)n
(t,)g(parallel)h(streams)f(that)-152 1332 y(are)e(con)n(tained)e(b)r
(et)n(w)n(een)h(a)g(splitter)g(and)f(a)h(joiner.)-152
1507 y Ft(Splitter)41 b(setSplitter\(SplitJoinType)k(splitter\))-152
1619 y Fr(This)27 b(command)c(sets)j(the)g(splitter)g(within)f(a)h
Ft(SplitJoin)i Fr(and)d(re-)-152 1706 y(turns)j(its)h(argumen)n(t.)43
b(It)28 b(m)n(ust)f(b)r(e)i(called)g(in)g(the)f Ft(init)i
Fr(function)-152 1793 y(of)d(the)e Ft(SplitJoin)p Fr(.)-152
1967 y Ft(Joiner)41 b(setJoiner\(SplitJoinType)j(joiner\))-152
2080 y Fr(This)32 b(command)d(sets)j(the)f(joiner)h(within)f(a)g
Ft(SplitJoin)i Fr(and)e(re-)-152 2167 y(turns)d(its)h(argumen)n(t.)43
b(It)28 b(m)n(ust)f(b)r(e)i(called)g(in)g(the)f Ft(init)i
Fr(function)-152 2254 y(of)d(the)e Ft(SplitJoin)p Fr(.)-152
2428 y Ft(Stream)41 b(add\(Stream)g(child\))-152 2540
y Fr(This)19 b Ft(add)g Fr(function)f(o)n(v)n(errides)h(the)e
Ft(add)i Fr(function)f(of)h Ft(Stream)h Fr(to)e(ap-)-152
2627 y(p)r(end)24 b Ft(child)i Fr(as)g(a)f(parallel)h(comp)r(onen)n(t)e
(within)h(the)g Ft(SplitJoin.)-152 2715 y Fr(The)k(\014rst)g(stream)g
(to)g(b)r(e)g(added)f(is)i(connected)e(to)h(the)g(\014rst)g(p)r(ort)
-152 2802 y(of)h(the)f(splitter)h(and)e(joiner,)k(and)c(lik)n(ewise)j
(with)e(the)g(rest)g(of)h(the)-152 2889 y(streams.)35
b(This)26 b(function)g(returns)f(its)h(argumen)n(t.)-152
3096 y Fs(1.5)99 b(F)n(eedbackLoop)27 b(extends)f(Str)n(eam)-152
3187 y Fr(The)c(F)-6 b(eedbac)n(kLo)r(op)21 b(pro)n(vides)g(the)g
(means)f(for)i(creating)g(cycles)g(in)-152 3274 y(the)k(stream)f
(graph.)-152 3481 y Fm(1.5.1)90 b(Methods)-152 3572 y
Ft(Joiner)41 b(setJoiner\(SplitJoinType)j(joiner\))-152
3684 y(Stream)d(setBody\(Stream)h(stream\))-152 3796
y(Splitter)f(setSplitter\(SplitJoinType)k(splitter\))-152
3908 y(Stream)c(setLoop\(Stream)h(stream\))-152 4020
y Fr(These)37 b(metho)r(ds)f(set)g(the)g(joiner,)41 b(b)r(o)r(dy)35
b(stream,)k(splitter,)h(and)-152 4107 y(lo)r(op)35 b(stream)f(for)h
(the)f(feedbac)n(k)g(lo)r(op;)39 b(they)33 b(eac)n(h)h(return)g(their)
-152 4195 y(argumen)n(t.)62 b(Eac)n(h)36 b(of)g(them)e(m)n(ust)f(b)r(e)
j(called)g(from)f(within)g(the)-152 4282 y Ft(init)27
b Fr(function.)-152 4456 y Ft(<varying)41 b(type>)g(initPath\(int)h
(index\))-152 4568 y Fr(The)28 b Ft(initPath)h Fr(function)e(pro)n
(vides)g(inputs)g(to)g(the)g(joiner)h(at)f(the)-152 4655
y(head)35 b(of)g(the)f(feedbac)n(k)g(lo)r(op)h(during)g(the)f
(initialization)i(p)r(erio)r(d)-152 4742 y(when)31 b(there)f(are)h(no)g
(items)f(on)h(the)f(c)n(hannels)h(around)f(the)h(lo)r(op.)-152
4830 y(The)f(function)f(is)h(called)g(with)g(the)f(n)n(um)n(b)r(er)e
(of)j(the)f(item)f(that)h(is)-152 4917 y(b)r(eing)d(requested,)g
(starting)g(from)g(0.)-152 5091 y Ft(void)40 b(setDelay\(int)i(delay\))
-152 5203 y Fr(The)18 b Ft(setDelay)h Fr(function)e(sp)r(eci\014es)h
(ho)n(w)f(man)n(y)f(times)g(the)h Ft(initPath)-152 5290
y Fr(function)35 b(is)g(in)n(v)n(ok)n(ed)e(b)r(efore)j(the)e(joiner)h
(starts)g(dra)n(wing)h(input)-152 5378 y(items)26 b(from)f(the)g
(feedbac)n(k)h(c)n(hannel.)2040 -69 y Fs(1.6)99 b(SplitJ)o(oinT)-7
b(ype)2040 23 y Fr(A)33 b Ft(SplitJoinType)j Fr(represen)n(ts)e(a)g
(compiler-de\014ned)e(con\014gura-)2040 110 y(tion)18
b(for)h(the)e(splitter)i(or)f(joiner)h(in)e(a)h(SplitJoin.)33
b(F)-6 b(or)18 b(no)n(w,)i(the)d(user)2040 197 y(cannot)33
b(de\014ne)e(custom)h Ft(SplitJoinType)p Fr('s,)38 b(and)33
b(the)f(only)g(ones)2040 284 y(a)n(v)l(ailable)18 b(are)g(those)f(that)
g(are)h(constan)n(t)f(\014elds)g(in)g Ft(StreaMITObject)p
Fr(.)2040 494 y Fs(1.7)99 b(Channel)2040 585 y Fr(Channels)22
b(are)f(of)h(a)f(giv)n(en)g(t)n(yp)r(e)f Ft(<channel-type>)p
Fr(,)25 b(and)20 b(are)i(auto-)2040 672 y(generated)c(classes.)33
b(Their)18 b(full)g(Ja)n(v)l(a)f(class)i(name)d(is)i
Ft(<channel-type>Channel)p Fr(,)2040 759 y(e.g.,)23 b
Ft(IntChannel)p Fr(.)35 b(They)20 b(pro)n(vide)g(t)n(yp)r(ed)f(FIF)n(O)
h(queues)g(comm)n(u-)2040 847 y(nicating)26 b(steady-state)g(data)g(b)r
(et)n(w)n(een)g(\014lters.)2040 1056 y Fm(1.7.1)90 b(Methods)2040
1148 y Ft(<type>)41 b(pop\(\))2040 1260 y Fr(The)20 b
Ft(pop)g Fr(function)f(remo)n(v)n(es)g(the)g(item)f(from)h(the)g(end)g
(of)h(the)f(c)n(han-)2040 1347 y(nel)26 b(and)f(returns)g(it.)2040
1521 y Ft(<type>)41 b(peek\(int)g(index\))2040 1633 y
Fr(The)24 b Ft(peek)g Fr(function)f(returns)g(the)g(v)l(alue)g(at)g
Ft(index)i Fr(slots)f(from)f(the)2040 1720 y(end)33 b(of)h(the)f(c)n
(hannel,)j(where)e Ft(peek\(0\))h Fr(=)e Ft(pop\(\))p
Fr(.)59 b(Unlik)n(e)33 b Ft(pop)p Fr(,)2040 1808 y Ft(peek)27
b Fr(do)r(es)f(not)f(remo)n(v)n(e)g(an)n(y)g(items)g(from)h(the)f(c)n
(hannel.)2040 1982 y Ft(void)40 b(push\(<type>)i(item\))2040
2094 y Fr(The)21 b Ft(push)g Fr(function)g(enqueues)e
Ft(item)j Fr(on)n(to)e(the)g(fron)n(t)h(of)g(the)f(c)n(han-)2040
2181 y(nel.)2040 2391 y Fs(1.8)99 b(P)n(ortal)2040 2482
y Fr(P)n(ortals)43 b(pro)n(vide)e(a)h(means)f(for)i(broadcast)f
(messaging)g(within)2040 2569 y(StreaMIT.)37 b(They)f(are)g(of)h(a)f
(giv)n(en)g(t)n(yp)r(e)f Ft(<portal-type>)p Fr(,)42 b(and)2040
2657 y(are)34 b(auto-generated)g(classes.)60 b(Note)33
b(that)g Ft(<portal-type>)j Fr(can)2040 2744 y(b)r(e)26
b(either)g(a)h(class)g(or)f(an)h(in)n(terface.)36 b(Their)27
b(full)g(Ja)n(v)l(a)f(class)h(name)2040 2831 y(is)f Ft
(<portal-type>Portal)p Fr(,)31 b(e.g.,)c Ft(MyFilterPortal)p
Fr(.)2040 3041 y Fm(1.8.1)90 b(Methods)2040 3132 y Ft(void)40
b(register\(<portal-type>)k(receiver\))2040 3244 y Fr(The)31
b Ft(register)i Fr(metho)r(d)d(adds)h Ft(receiver)i Fr(to)f(this)f(p)r
(ortal)h(as)g(an)2040 3331 y(ob)t(ject)d(that)e(will)i(b)r(e)e(the)h
(target)g(of)g(all)h(messages)f(passed)g(to)g(the)2040
3418 y(p)r(ortal.)2040 3593 y Ft(all)40 b(void)g(methods)h(of)f
(<portal-type>)2040 3705 y Fr(A)e(p)r(ortal)h(automatically)g
(de\014nes)f(eac)n(h)g(of)h(the)f(v)n(oid)g(metho)r(ds)2040
3792 y(that)29 b(is)g(implemen)n(ted)e(b)n(y)h Ft(<portal-type>)p
Fr(.)47 b(Since)28 b(these)h(meth-)2040 3879 y(o)r(ds)24
b(ha)n(v)n(e)f(no)h(return)f(v)l(alue,)h(their)g(in)n(v)n(o)r(cation)g
(can)g(act)g(as)h(a)f(mes-)2040 3966 y(sage)j(to)f(the)f(receiv)n(er)h
(ob)t(ject.)35 b(Ho)n(w)n(ev)n(er,)26 b(the)g(signature)g(of)g(these)
2040 4053 y(metho)r(ds)33 b(is)i(mo)r(di\014ed)e(to)h(accept)g(an)h
(extra)f(argumen)n(t)f(of)h(t)n(yp)r(e)2040 4141 y Ft(TimeInterval)p
Fr(,)25 b(whic)n(h)c(sp)r(eci\014es)h(the)f(timing)g(of)h(the)e
(message)i(de-)2040 4228 y(liv)n(ery)-6 b(.)31 b(When)18
b(a)g(metho)r(d)f(is)h(called)h(on)f(the)f(P)n(ortal,)k(it)d(is)h
(treated)f(as)2040 4315 y(a)23 b(message)g(and)f(is)h(forw)n(arded)h
(to)e(all)i(registered)f(receiv)n(ers)g(within)2040 4402
y(the)i(giv)n(en)h(time)f(in)n(terv)l(al.)2040 4612 y
Fs(1.9)99 b(T)n(imeInter)o(v)o(al)2040 4703 y Fr(The)21
b Ft(TimeInterval)i Fr(class)e(simply)f(pro)n(vides)g(a)h(wrapp)r(er)f
(for)i(sp)r(ec-)2040 4790 y(ifying)e(the)e(upp)r(er)h(and)g(lo)n(w)n
(er)h(time)e(limits)h(for)h(a)f(message)h(deliv)n(ery)-6
b(.)2040 5000 y Fm(1.9.1)90 b(Methods)2040 5091 y Ft(TimeInterval\(int)
43 b(maxTime\))2040 5203 y Fr(This)22 b(constructs)f(a)g(time)f(in)n
(terv)l(al)h(with)g(maxim)n(um)d(deliv)n(ery)i(time)2040
5290 y Ft(maxTime)p Fr(.)44 b(The)28 b(units)g(of)h(time)e(are)i
(according)g(to)f(relativ)n(e)h(infor-)2040 5378 y(mation)c(w)n(a)n(v)n
(efron)n(ts)i(as)f(describ)r(ed)g(in)f(the)h(pap)r(er.)1902
5627 y(16)p eop
%%Page: 17 17
17 16 bop -152 -69 a Ft(TimeInterval\(int)43 b(minTime,)e(int)f
(maxTime\))-152 43 y Fr(This)24 b(constructs)f(a)g(time)f(in)n(terv)l
(al)h(with)g(minim)n(um)c(deliv)n(ery)j(time)-152 131
y Ft(minTime)35 b Fr(and)e(maxim)n(um)c(deliv)n(ery)k(time)f
Ft(maxTime)p Fr(.)59 b(The)33 b(units)-152 218 y(of)d(time)e(are)h
(according)h(to)e(relativ)n(e)i(information)f(w)n(a)n(v)n(efron)n(ts)g
(as)-152 305 y(describ)r(ed)d(in)g(the)f(pap)r(er.)-152
490 y Fs(2.)100 b(SEMANTIC)25 b(CHECKING)-152 588 y(2.1)99
b(J)o(a)n(v)o(a)24 b(r)n(estrictions)-152 679 y Fr(Although)d(this)f(v)
n(ersion)h(of)h(StreaMIT)f(is)g(expressed)g(as)g(legal)h(Ja)n(v)l(a)
-152 766 y(syn)n(tax,)i(it)g(allo)n(ws)j(only)d(a)g(small)g(subset)g
(of)h(the)f(features)h(of)g(Ja)n(v)l(a.)-152 853 y(Here)31
b(w)n(e)h(list)g(some)f(of)h(the)e(syn)n(tactical)i(elemen)n(ts)f(of)h
(Ja)n(v)l(a)f(that)-152 941 y(fall)c(outside)f(the)g(domain)f(of)h
(legal)h(StreaMIT)g(programs.)-84 1138 y(1.)38 b(StreaMIT)c(disallo)n
(ws)i(an)n(y)d(instan)n(tiation,)k(sub)r(classing,)g(or)13
1225 y(metho)r(d)21 b(call)k(to)e(an)n(y)f(ob)t(ject)i(from)f(the)f(Ja)
n(v)l(a)i(class)g(libraries.)13 1312 y(The)f(only)h(exception)f(is)h
Ft(Object)h Fr(itself,)h(whic)n(h)d(ma)n(y)f(b)r(e)i(sub-)13
1399 y(classed)k(as)f(the)f(basic)i(means)e(of)i(abstraction;)g(ho)n(w)
n(ev)n(er,)g(no)13 1486 y(mem)n(b)r(er)c(functions)j(of)h
Ft(Object)f Fr(ma)n(y)f(b)r(e)g(called.)39 b(Note)26
b(that)13 1574 y(this)f(eliminates)h(threads)g(and)f(exceptions)h(from)
f(considera-)13 1661 y(tion)d(b)r(ecause)g(they)g(require)g(the)f
(instan)n(tiation)i(of)g(an)f(ob)t(ject)13 1748 y(from)j(the)g(class)j
(library)-6 b(.)-84 1852 y(2.)38 b(StreaMIT)26 b(do)r(es)g(not)g(supp)r
(ort)f(nativ)n(e)g(metho)r(d)g(calls.)-152 2037 y Fs(2.2)99
b(Str)n(eaMIT)27 b(r)n(estrictions)-152 2128 y Fr(Though)i(ev)n(ery)g
(legal)h(StreaMIT)g(program)f(is)g(a)g(legal)i(Ja)n(v)l(a)e(pro-)-152
2216 y(gram,)44 b(there)d(are)g(legal)g(Ja)n(v)l(a)g(programs{ev)n(en)f
(with)h(the)f(con-)-152 2303 y(strain)n(ts)25 b(of)g(Section)f
(2.1{that)i(violate)f(higher-lev)n(el)f(seman)n(tic)g(re-)-152
2390 y(quiremen)n(ts)19 b(of)i(StreaMIT.)g(W)-6 b(e)20
b(outline)h(these)f(constrain)n(ts)h(as)g(fol-)-152 2477
y(lo)n(ws:)-84 2684 y(1.)38 b(In)19 b(this)i(v)n(ersion)g(of)g
(StreaMIT,)g(eac)n(h)g(in)n(v)n(o)r(cation)g(of)g(a)g(\014lter's)13
2771 y(w)n(ork)37 b(function)g(m)n(ust)e(p)r(eek,)k(p)r(op,)h(and)d
(push)f(a)h(constan)n(t)13 2858 y(n)n(um)n(b)r(er)23
b(of)k(items.)35 b(Dynamic)24 b(rates)i(will)i(b)r(e)d(the)h(sub)t
(ject)g(of)13 2945 y(future)f(w)n(ork.)-84 3049 y(2.)38
b(If)33 b(t)n(w)n(o)h(\014lters)g(are)h(connected,)g(then)e(their)h
(corresp)r(onding)13 3136 y(input)d(and)h(output)g(t)n(yp)r(es)f(m)n
(ust)g(matc)n(h.)54 b(W)-6 b(e)32 b(p)r(ostp)r(one)g(a)13
3224 y(formal)26 b(treatmen)n(t)e(of)j(t)n(yp)r(es)e(un)n(til)g(a)h
(future)g(pap)r(er.)-84 3328 y(3.)38 b(A)26 b(giv)n(en)g(instance)h(of)
g(a)g(stream)f(or)h(\014lter)g(m)n(ust)e(not)h(app)r(ear)13
3415 y(more)f(than)g(once)h(in)g(the)f(stream)g(graph.)-84
3519 y(4.)38 b(A)d(message)i(handler)f(cannot)h(push,)h(p)r(op,)h(or)d
(p)r(eek)g(items)13 3606 y(from)31 b(the)f(input)g(and)h(output)f(c)n
(hannels)h(of)h(a)f(\014lter.)51 b(Ho)n(w-)13 3694 y(ev)n(er,)25
b(a)h(message)h(handler)e(can)h(send)f(another)h(message.)-84
3798 y(5.)38 b(There)17 b(m)n(ust)f(b)r(e)h(no)g(deadlo)r(c)n(k)h(or)f
(bu\013er)g(o)n(v)n(er\015o)n(w)g(in)g(the)g(pro-)13
3885 y(gram.)34 b(W)-6 b(e)26 b(ha)n(v)n(e)f(dev)n(elop)r(ed)g(a)h
(simple)g(algorithm)g(to)g(v)n(erify)13 3972 y(that)g(feedbac)n(k)h(lo)
r(ops)h(and)f(simple)g(round-robin)f(SplitJoins)13 4059
y(neither)f(deadlo)r(c)n(k)h(nor)g(o)n(v)n(er\015o)n(w.)-84
4164 y(6.)38 b(F)-6 b(or)23 b(w)n(eigh)n(ted)h(round)f(robin)h
(SplitJoins,)h(w)n(e)f(are)g(still)h(dev)n(el-)13 4251
y(oping)d(our)f(analysis.)35 b(F)-6 b(or)21 b(no)n(w,)i(w)n(e)f(can)g
(at)g(least)h(v)n(erify)e(that)13 4338 y(if)27 b(the)f(\014rst)h
(\014lter)f(on)h(a)g(branc)n(h)f(of)h(a)g(SplitJoin)g(inputs)f(zero)13
4425 y(items)h(and)h(the)g(splitter)g(is)h(a)f(w)n(eigh)n(ted)g(round)g
(robin,)g(then)13 4512 y(the)35 b(splitter)h(m)n(ust)f(ha)n(v)n(e)g(a)h
(w)n(eigh)n(t)g(of)g(0)g(assigned)h(to)f(the)13 4599
y(branc)n(h.)j(Similarly)-6 b(,)28 b(if)g(the)f(last)h(\014lter)g(on)f
(a)h(branc)n(h)f(output)13 4687 y(zero)35 b(items)g(and)f(the)h(joiner)
h(is)f(a)h(w)n(eigh)n(ted)f(round)f(robin,)13 4774 y(then)20
b(the)h(joiner)i(m)n(ust)d(assign)j(a)e(w)n(eigh)n(t)h(of)h(0)e(to)h
(the)f(branc)n(h.)-84 4878 y(7.)38 b(The)33 b(n)n(umer)e(of)i(inputs)f
(and)h(outputs)f(on)g(w)n(eigh)n(ted)h(round)13 4965
y(robin)d(joiners)i(and)f(splitters)g(m)n(ust)e(matc)n(h)h(the)g(n)n
(um)n(b)r(er)f(of)13 5052 y(parallel)e(streams)f(in)f(a)h(SplitJoin.)
-84 5156 y(8.)38 b(The)33 b(splitter)g(and)f(joiner)i(in)e(a)h(feedbac)
n(k)g(lo)r(op)g(m)n(ust)e(ha)n(v)n(e)13 5244 y(t)n(w)n(o)25
b(outputs)g(and)g(t)n(w)n(o)h(inputs,)f(resp)r(ectiv)n(ely)-6
b(,)26 b(and)f(m)n(ust)f(b)r(e)13 5331 y(something)h(other)h(than)f
(NULL.)1902 5627 y(17)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
