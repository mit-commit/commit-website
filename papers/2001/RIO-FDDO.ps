%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter -f
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.11.23:1441
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 () @start
%DVIPSBitmapFont: Fa cmtt10 10 41
/Fa 41 122 df<007FB6FCB71280A46C150021067B9B2C>45 D<121FEA3F80EA7FC0EAFF
E0A5EA7FC0EA3F80EA1F000B0B708A2C>I<1507ED0F80151FA2153F16005D157E15FE5D
14015D14035DA214075D140F5D141F5D143F92C7FC5C147E14FE5CA213015C13035C1307
5C130F5C131F5CA2133F91C8FC5B137E13FE5B12015B12035B12075BA2120F5B121F5B12
3F90C9FC5A127E12FE5AA25A127821417BB92C>I<EB03F8EB0FFE90383FFF80497F90B5
7E3901FE0FF03903F803F848486C7EEBE0004848137EA248487FA248C7EA1F80A2003E14
0F007E15C0A3007C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C6CEB3F00A26C6C
137E6D13FE00075CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90FFEC7FCEB03F823
357CB32C>I<EB0FF890387FFF8048B512E00007804814FC391FF80FFE393FE001FF9038
80007F48C7EA3F80007E141F00FE15C0150F6C15E01507A3127E123CC8FCA2150F16C015
1F1680153F16005D15FE4A5A14034A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB
3FE0EB7F8049C8FC485A4848EB03C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C02334
7CB32C>50 D<EB0FFC90387FFF8048B512E0000714F84880391FF807FEEBC0004848137F
6D7F1680151FA26C5A6CC7FCC8FC153F16005D15FE14014A5AEC1FF890381FFFF0495BA2
15F86D7F90380007FEEC00FF81ED3F80ED1FC0150FA216E01507A2123C127EB4FC150F16
C0A248141F007FEC3F806DEB7F006C6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90F
FCC7FC23357CB32C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCAE121F
EA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2470A32C>58 D<14FE497EA4497FA214
EFA2130781A214C7A2010F7FA314C390381F83F0A590383F01F8A490387E00FCA549137E
90B512FEA34880A29038F8003FA34848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB5
14FE6C15FC497E27347EB32C>65 D<007FB512E015F8B612FE6C8016C03903F0003FED0F
E0ED07F01503A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C0
9039F0001FE0ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3F
F0007FB612E016C0B712806CECFE0015F027337FB22C>I<02FF13700107EBE0F84913F9
013F13FD4913FFEBFF813901FE007F4848131FD807F0130F1507485A491303485A150148
C7FCA25A007EEC00F01600A212FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C1303
6D14F06C6C130716E0D803FC131F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13
F00100138025357DB32C>I<007FB5FCB612C015F0816C803907E003FEEC00FFED7F8015
3FED1FC0ED0FE0A2150716F0150316F81501A4ED00FCACED01F8A3150316F0A2150716E0
150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A5D15C06C91C7FC26337EB22C>I<
007FB612F0B712F8A37E3903F00001A7ED00F01600A4EC01E04A7EA490B5FCA5EBF003A4
6E5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC27337EB22C>I<D87FFCEB7FF848
6CEBFFFCA36C48EB7FF8D807C0EB1F80153FED7F00157E5D4A5A14034A5A5D4A5A4A5A14
3F4AC7FC147E5CEBC1F813C3EBC7FCA2EBCFFEEBDFBEEBFFBF141F01FE7F496C7E13F86E
7EEBF00301E07FEBC001816E7EA2157E153E153F811680ED0FC0A2ED07E0D87FFCEB1FFC
486CEB3FFEA36C48EB1FFC27337EB22C>75 D<D87FF0EB7FFC486CEBFFFEA27F007FEC7F
FCD807FEEB07C013DEA213DF13CFA2148013C714C0A213C314E0A213C114F0A213C014F8
A2147CA3143EA2141E141FA2140F1587A2140715C7A2140315E71401A215F71400A215FF
D87FFC137F487E153FA26C48EB1F8027337EB22C>78 D<387FFFFCB67E15E015F86C8039
07E007FE1401EC007F6F7E151FA26F7EA64B5AA2153F4BC7FCEC01FE140790B55A5D15E0
81819038E007FCEC01FE1400157F81A8160FEE1F80A5D87FFEEB1FBFB5ECFF00815E6C48
6D5AC8EA01F029347EB22C>82 D<90381FF80790B5EA0F804814CF000714FF5A381FF01F
383FC003497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0
EA1FFCEBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF0200138015
3FED1FC0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE
01FF90B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>I<007FB612FCB712FE
A43AFC007E007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C>I<3B
7FFF803FFFC0B56C4813E0A36C496C13C03B03F00001F800B3AF6D130300015DA26D1307
00005D6D130F017F495A6D6C485AECE0FF6DB5C7FC6D5B010313F86D5B9038003F802B34
80B22C>I<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F800000
06C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5A
A47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC2724
7CA32C>97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07F
C09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01
F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F0
3FC027337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A
49137E4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB
7F003907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7E
A380EC003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F
90C7FC007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612
FC6CECBFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F0
48B57E48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E0
15075AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB
3FC001FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0F
F8EC3FFE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7
FCA36C5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F8
0FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1C
D9C0001300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D4814
80D99FFEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3F
C0001FF848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F8013
03D83FE0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387E
A42C>I<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F
80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB2
2C>I<1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3
A8007FB512FCB612FEA36C14FC1F3479B32C>I<140EEC3F80A2EC7FC0A3EC3F80A2EC0E
0091C7FCA748B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414005CEB01
FEEBFFFC6C5B5C001F5B000790C7FC1A467CB32C>I<EA7FE0487EA3127F1201AA91381F
FFF04A13F8A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3
EBF7FE90B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A
7FFFC0FFFCB500E113FEA36C01C013FC27337EB22C>I<387FFFE0B57EA37EEA0003B3B3
A5007FB61280B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF83AFFDFFE
3FFCD87FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C0
1380B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>
I<397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC
000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1F
FF017F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C712
1F007EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D
5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397F
F01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049
EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138
801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C
5B27367FA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF
019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C
>114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F000
7F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078
147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039
701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0
ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD
2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03
FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<D87FFFEB7FFF6EB5FCB515
806C16004A7ED807C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201
F113C700005D9038F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B9038
1F007C29247FA32C>119 D<3A3FFF03FFF048018713F8A36C010313F03A00FC007E005D
90387E01F8013F5BEB1F83EC87E090380FCFC0903807EF80EB03FF6D90C7FC5C6D5A147C
14FE130180903803EF80903807CFC0EB0FC7EC83E090381F01F0013F7FEB7E00017C137C
49137E0001803A7FFF01FFFC1483B514FE6C15FC140127247EA32C>I<3A7FFF01FFFCB5
008113FE148314816C010113FC3A03E0000F806C7E151F6D140012005D6D133E137C017E
137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F7
5DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E
0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmti10 10 61
/Fb 61 123 df<EA01E0EA07F0120F13F8121FA3120FEA07B0EA0030A21370136013E013
C0120113801203EA0700120E5A5A5A5A5A0D196EB919>39 D<150C151C153815F0EC01E0
EC03C0EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2
485AA212035B12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD
1278A57EA3121C121EA2120E7EA26C7E6C7EA212001E5274BD22>I<140C140E80EC0380
A2EC01C015E0A2140015F0A21578A4157C153CAB157CA715FCA215F8A21401A215F0A214
03A215E0A21407A215C0140F1580A2141F1500A2143EA25CA25CA2495AA2495A5C130749
5A91C7FC5B133E133C5B5B485A12035B48C8FC120E5A12785A12C01E527FBD22>I<EA03
C0EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A
120E5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<1703EF07
80170FA2EF1F005F173E5FA25FA24C5A16035F4C5AA24C5AA24CC7FCA2163E167E167C5E
A24B5AA24B5A15075E4B5AA24BC8FCA2153E157E157C5DA24A5AA24A5A14075D4A5AA24A
C9FCA2143EA25C14FC5C495AA2495AA2495A130F5C49CAFCA2133EA25B13FC5B485AA248
5AA2485A120F5B48CBFCA2123EA25AA25AA2127031537FBD2A>47
D<EC03F8EC1FFEEC7C1F9138F80780D901E013C0903903C003E0EB0780010F1301D91F00
13F0A2133E137E017C130313FCA2485AA2000314075BA2120716E049130F120FA34848EB
1FC0A44848EB3F80A448C7EA7F00A3157E007E14FEA25D00FE13015DA248495AA25D007C
13075D4A5AA24AC7FC6C133E5C6C5B380F83E03807FF80C648C8FC243A77B72A>I<1518
1538157815F0140114031407EC0FE0141F147FEB03FF90383FEFC0148FEB1C1F13001580
A2143FA21500A25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25C
A2131FA25CA2133FA291C7FC497EB61280A31D3877B72A>I<EC03F8EC0FFE91383C0F80
9138F007C0903901E003E0D903C013F09038078001020013F8130E131E90391C6000FCEB
3870EC30011370A213F013E0EC70030001016013F813C014E0ECC00701C114F090388180
0F018314E09039C7001FC001FEEB3F80D80078140090C7127E5D4A5A4A5AEC07C0EC1F80
023EC7FC14FCEB01F0EB07C0495A011EC8FC137C4914C0484813015B485A4848130348C7
1380000E1407001E140F48EC1F00D83FF85B397FFFC07E39783FFFFCEA700FD8F0075BD8
E0015B6D13C0021FC7FC263A79B72A>I<EC03FCEC1FFF91387E07C09138F003E0903903
C001F0D9078013F849C7FC131E011C14FC133CEB38C0EB78E0EB7060150101F014F813E0
A2ECE003D971C013F090387F8007D91E0013E090C7EA0FC0ED1F80ED3F00157E5D49B45A
4913E092C7FC9038000FC0EC03F014016E7E81A381A5007E130100FE5CA31403485C00E0
5C14074A5A5D4A5A007049C7FC0078137E6C13F8381E07F03807FF80D801FCC8FC263A78
B72A>I<16E0ED01F01503A3150716E0A3150F16C0A2151F1680A2ED3F00A3157EA2157C
15FC5D14015D14035D14075D140F5D141F92C7FC143EA25CECF81C153E903801F07EEB03
E014C090380780FE130F49485A133EEB7C01137801F05BEA01E03803C003EA0FFE391FFF
C3F04813FB267C01FF13403AF0003FFFE000601307C71400EC0FE05DA3141F5DA3143F92
C7FCA4143E141C24487DB72A>I<010314186E13F8903907F007F091B512E016C0160049
5B15F8010E13E0020CC7FC011EC8FC131CA3133C1338A313781370A2147F9038F3FFC090
38EF83E09038FC01F0496C7E485A497F49137CC8FC157EA315FEA41401000C5C123F5A14
03485C5A4A5A12F800E05C140F4A5A5D6C49C7FC0070137E00785B387C01F8383E07F038
1FFFC06C90C8FCEA01F8253A77B72A>I<157F913803FFC0020F13E0EC3F8191387E00F0
02F81370903903F003F0903807E007EB0FC0EB1F80020013E04914C0017E90C7FC13FE5B
485AA21203485AA2380FE07E9038E1FF809038E783E0391FCE01F09038DC00F813F84848
137C5B157E5B485AA390C712FE5A5AA214015D5AA214035DA348495A5D140F5D4A5A6C49
C7FC127C147C6C485A6C485A6CB45A6C1380D801FCC8FC243A76B72A>I<D9707C130ED9
F3FE131E496C133C48B5133816784815F0EC0F019039FC0703E03A07F00307C001E0138F
3A0FC001FF80497E48C7EA0F00001E5C48141E153E48143C157C485C5A4A5AC7FC4A5AA2
4A5A140FA24A5AA24AC7FCA25C147E14FE5C1301A25C1303A2495AA3130F5CA2131F5CA2
133FA25C137FA391C8FC137E133C273A74B72A>I<EC01FCEC0FFF023F13C091387E07E0
903901F803F0903803E001D907C013F890380F8000A249C7FCA2133EA21501017E14F0A2
1503017F14E0ED07C09138800F809138C01F0090383FF03E6E5A90381FFCF0ECFFE06D13
8013036D7F497F90380F7FF890383E3FFCEB781F48486C7E3803E0073907C001FF48487E
001F8090C7FC003E80127E127CA200FC143E5AA25DA25DA24A5A6C495A007C495A007E49
5A6C013FC7FC381F80FE380FFFF8000313E0C66CC8FC253A78B72A>I<EC01FCEC0FFF02
3F138091387E07C0903901F803E0EB03F0903907E001F0EB0FC0EB1F80013F14F814005B
137E13FEA2485AA2150312035BA2ED07F012075B150FA216E00003141FA2153FED7FC012
0115FF6C6C5A90397803BF8090383C0F3FD91FFC1300903807F07F90C7FC157E15FE5D14
015D4A5AA2003E495A007F495A5D4AC7FC00FE5B48137E007013F8387803F0387C0FE038
3FFF806C48C8FCEA03F8253A78B72A>I<133C137E13FF5AA313FE13FCEA00701300B212
0EEA3F80127F12FFA31300127E123C102477A319>I<EE01C01603A21607160FA2161F83
163FA2167F16FF16EF150116CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE0
07A2EC01C014031580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F8494813
03A2495A130791C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A334
3C7BBB3E>65 D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787C
DA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813
E05B485A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA417
38A217784816707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C
6C6C495A6C6CEB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D
74BA3B>67 D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF0
3F804B141F19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA21301
19E04A151FA2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15
034D5A4A5D4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A00
7F90B548C8FCB712F016803C397CB83F>I<0107B8FCA3903A000FF000034BEB007F183E
141F181E5DA2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E4A13
3E167E49B512FEA25EECF8000107147C163C4A1338A2010F147818E04A13701701011F16
C016004A14031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A4914
070001ED7FF0B8FCA25F38397BB838>I<0107B712FEA3903A000FF000074B1300187C02
1F153CA25DA2143FA25D1838147FA292C8FCEE03804A130718004A91C7FCA201015CA24A
131E163E010314FE91B5FC5EA2903807F800167C4A1378A2130FA24A1370A2011F14F0A2
4A90C8FCA2133FA25CA2137FA291CAFCA25BA25B487EB6FCA337397BB836>I<DB03FE13
0E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF8
02FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B000317C0485A
A2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFC0307B512E0A392390007FC0070
5A16075FA36C150F5FA36C6C141FA2001F5E6D143F6C7E167F6C6C4A5A6C6CEB03EFD801
FEEB07C73A007FC03F0790273FFFFC03C7FC010F01F0C8FC01001380373D74BA40>I<01
03B5D8F80FB512E0A390260007F8C7381FE0004B5DA2020F153F615DA2021F157F96C7FC
5DA2023F5D605DA2027F14016092C7FCA24A1403605CA249B7FC60A202FCC71207010315
0F605CA20107151F605CA2010F153F605CA2011F157F95C8FC5CA2013F5D5F5CA2017F14
015F91C7FC491403007FD9FE01B512F8B55BA243397CB83E>I<0103B512F8A390390007
F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA213
03A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C
25397CB820>I<0207B512F0A391390007FC006F5AA215075EA3150F5EA3151F5EA3153F
5EA3157F93C7FCA35D5DA314015DA314035DA31407A25DA2140FA2003F5C5A141F485CA2
4A5A12FC00E049C8FC14FE00705B495A6C485A381E0FC06CB4C9FCEA01F82C3B78B82C>
I<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292C8FCA25CA2
5CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C17384A1478A201
3F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF0001020713
00B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEFF0004F5AA2
021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA20278ED0E3F97
C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC0380A20103ED
0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01C0A2011E91
3803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091C8FC01705C
A201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397AB84A>I<90
2603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307
033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082DAF003143C
70133814E0150101016E1378030014705C8201036E13F0604A1480163F010715C1041F5B
91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F1338160013
785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<ED03FE92383FFFC09238
FC07F0913903E001F891390F80007C023FC77E027E8002F815804948EC0FC0EB07E04948
EC07E0131F4A15F049C81203137E01FE16F8485AA2485AA2485AA2120F5B001F16075B12
3FA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F18005F5F16015F6C4B5A4C5AA24C
5A6C4B5A6D4A5A001F93C7FC6D147E000F5D6C6CEB03F06C6C495A6C6CEB0F806C6C013F
C8FC90383F01FC90381FFFE0010190C9FC353D74BA40>I<0107B612F817FF1880903B00
0FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A
15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FC
D907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B5
12FCA337397BB838>I<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF01707020F
EC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18E04A
EC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F8083
4A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A2017F
160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F8038
3B7CB83D>82 D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F001F7C027C
EB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0A36E90C7
FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138007FFC150F
15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A6D49C7
FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D7ABA2F>
I<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C5C003C1780
1403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA25DA2143FA2
5DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEB3FF000
7FB512F8B6FCA2333971B83B>I<B5D8F80FB590381FFFF06102F018E0D807FEC7D87FE0
903803FE00D803F8DA3F806D5AF100F0A24F5A621903621907047F92C7FC190E16FF4B5D
A2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F495A180303385D4EC8FC157003F0140E
15E0DA01C05CA2DA03805CA2DA07005CA2020E5D17C14A5DEFC3805C027802C7C9FC1470
4A14CE13FE6C6C4814DCA24A14F8A291C75B160F495D5F5B5F5B4992CAFCA249140E4C3B
6FB853>87 D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120F
EBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F1583
1680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F0
00F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EB
E0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F13
00A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F800
7C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC0
90380FC1E090381F0070017E13784913383901F801F83803F003120713E0120FD81FC013
F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB
03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA31503
16F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F
90383E03FF017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01
005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF
076C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803
FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001
EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14
F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<
ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F
5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413
035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F012
78EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E09038
07C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A215
3F1207491400A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787B
EB3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C3878
01F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F
5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F
1400485A16C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD980
01131C15F8163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE9038
01E38048903800FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB03
8090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA2
12015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A213
0E6C5AEA07F8EA01E0143879B619>I<150E153F157FA3157E151C1500ABEC1F80EC7FC0
ECF1F0EB01C090380380F813071401130F130E131EEB1C03133C013813F0A2EB0007A215
E0A2140FA215C0A2141FA21580A2143FA21500A25CA2147EA214FEA25CA21301A25CA213
035C121C387E07E0A238FE0FC05C49C7FCEAF83EEA787CEA3FF0EA0FC0204883B619>I<
EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015
F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC00
035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F8090
39801F81C0A21583003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D
5A48EB07F80038EB01E0243B7BB926>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A2
5BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA212
3FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121F
EA0F80123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E
3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018
C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001
177E495C18FE031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B
1570000F17E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C7003814
3C3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F
39383FF00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA215
0F00015D5B151F5E12034990383F8380160316070007027F130049137EA2160E000F147C
49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090
380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F
127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB
1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007
C090391FE03FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE1480
13E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F
5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FC
A25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<ECF803903807FE0790381F
871F90383E03BF017C13FEEBF80112013803F000484813FC120F5B001F130115F8EA3F80
A2007F1303010013F0A34813074814E0A3140F4814C0A3141F1580143FA2007C137FECFF
006C5AEB03BF381F0F7F3807FE7EEA01F0C7FC14FE5CA313015CA313035C130748B512C0
A3203577A426>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383F
C0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312
075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>I<14FE903807FF8090380F83
C090383E00E04913F00178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEB
FFC06C13F814FE6C7F6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB
1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC1C267AA422>I<EB0380EB07
C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035B
A312075BA3120F5BA3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03
381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D803FEEB01C0D8078FEB03E039
0E0F8007121E121C0038140F131F007815C01270013F131F00F0130000E015805BD8007E
133FA201FE14005B5D120149137EA215FE120349EBFC0EA20201131E161C15F813E0163C
D9F003133814070001ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F0027
2679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F121C123C0038143F49131F00
70140FA25BD8F07E140000E08013FEC6485B150E12015B151E0003141C5BA2153C000714
385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F83CEB7FF8EB0FC0212679A426
>I<01F01507D803FC903903801F80D8071E903907C03FC0D80E1F130F121C123C003802
1F131F49EC800F00701607A249133FD8F07E168000E0ED000313FEC64849130718000001
147E5B03FE5B0003160E495BA2171E00070101141C01E05B173C1738A217781770020314
F05F0003010713016D486C485A000190391E7C07802800FC3C3E0FC7FC90393FF81FFE90
390FE003F0322679A437>I<903907E007C090391FF81FF89039787C383C9038F03E703A
01E01EE0FE3803C01F018013C0D8070014FC481480000E1570023F1300001E91C7FC121C
A2C75AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E1401010714C0
00FEEC0380010F1307010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC02726
7CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C012
70A249131FD8F07E148012E013FEC648133F160012015B5D0003147E5BA215FE00075C5B
A214015DA314035D14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F
003F5C48133F92C7FC147E147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FC
EA03F0233679A428>I<903903C0038090380FF007D91FF81300496C5A017F130E9038FF
FE1E9038F83FFC3901F007F849C65A495B1401C7485A4A5A4AC7FC141E5C5C5C495A495A
495A49C8FC131E5B49131C5B4848133C48481338491378000714F8390FF801F0391FFF07
E0383E1FFFD83C0F5B00785CD8700790C7FC38F003FC38E000F021267BA422>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr10 10 85
/Fc 85 128 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8121C12
7FEAFF80A5EA7F00121C093C79BB17>33 D<001C131C007F137F39FF80FF80A26D13C0A3
007F137F001C131C00001300A40001130101801380A20003130301001300485B00061306
000E130E485B485B485B006013601A197DB92A>I<017C166048B416F02607C380140126
0F81C01403D900E04A5A001E01784A5A003E6D141F003C013FEC7F80007C90271BE003FF
C7FC0218B512BF007891381FFC3E00F8011CC75A020C14FC5F4C5A16035F4C5A160F5F4C
C8FC021C5B00780118133E007C5D16FC003C01385B003E90383001F0001EEB70036C01E0
5B903981C007C03907C3800F2601FF005BD8007C49C9FC90C748EB07C0033EEB1FF04BEB
3C3803FCEBF81C4B497E913A01F001E00602030103130703E0497E912607C0071480020F
15011580DA1F00018013C04A010F1300143E5C14FC5C495A13035C495A130F4A01071301
49C701C013805B013E1603490203140001FC6F5A49020113064848913800F00E0003705A
49ED3C3849ED1FF06C48ED07C03A437BBD45>37 D<121C127FEAFF80A213C0A3127F121C
1200A412011380A2120313005A1206120E5A5A5A12600A1979B917>39
D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FC
A25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E
1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F
6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0
B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7
FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078
C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3127F121C1200A412011380
A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA516057F941C>I<121C127F
EAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C157CA2157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2141E143EA2143C147CA2147814F8A2
5C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B
1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007
147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C15
80A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FC
EB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB5
12F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E
486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D
4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303
48481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF
4913C03901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC8
5A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E
7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070
ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A
>I<1538A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB
030313071306130C131C131813301370136013C01201EA038013005A120E120C5A123812
305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780
133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE903878
0F803907E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490
C71300485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F8000
01B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90
383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2
485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E
497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B
15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<123012
38123E003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5D
C712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495A
A3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901
E001F848486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C
133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13
F801F07F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F
0078EC0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C13
1ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF
017F13C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090
C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F
3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C
5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC023
3A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C09
2479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201
A412031300A25A1206A2120E5A121812385A1260093479A317>I<EB3FE03801FFFE3907
C03F80390E000FC0003CEB07F000301303007014F8007C130100FE14FC7EA4127E003CEB
03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA
90C8FCA8130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63 D<1538A3157CA315FEA34A
7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A20270
7FEC6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7
121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512
FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E70
7EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1F
E0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF848
6DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F890
3A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE
153F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FC
AD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D0000161801
7F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC02
0F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE
0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4
EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8
C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E
170EA31706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A215
00A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9
FCA333397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA217
0CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A6
92C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF80
3F03903A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848
150F48481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E93
38007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C
14EFD90FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F01300020013
80383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C7
1201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497E
B612C0A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFF
C0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F8023
3B7DB82B>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F
4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E14
0E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2
707E707EA2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101
C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FF
B8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE015
33A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C13
0CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2
ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512
F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F00
1706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E
168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3F
E6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C014
0EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049
486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848
ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150F
A3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A
5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFF
E0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0F
E0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC092
3801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F800
0190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE
3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583
A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07
F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F7484813
7F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C
7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F02
0713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C
14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190
C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F000781600
00701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A33539
7DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E
6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC
91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A300
03018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E14
0E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED800302
7F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2ED
FEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5
FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C
1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE
0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC93
38C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6
EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A20200
93C8FC4B80503B7EB855>I<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7FC
013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB801816389138
7FC0306E6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E15
DF9138019FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A6D
7E14E04A6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE82
2607FF80010713E0B500E0013FEBFF80A339397EB83E>I<B500FE91383FFFE0A3000301
E0913807FE00C649EC03F0017F6F5A606D6C5D6D6C140395C7FC6D6C1406A26D6C5C6D6C
141C17186D6C143817306D6D5B6E6C13E05F91383FE0015F91381FF003DA0FF890C8FC16
06913807FC0E160C913803FE1C913801FF185E6E13B016E0157F6F5AB3A24B7E023FB512
C0A33B397FB83E>I<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<3901800180000313033907000700000E130E485B001813180038133800301330007013
7000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80
390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1F
E0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4
147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C
13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C02627
7DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039
F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216
FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8
C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E0
01FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14
067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB
07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F8
01EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127F
A27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE
0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807
E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2
127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E0
90381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0F
F0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B
7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C0
3A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC
38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F
80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F14
07D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA
03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE
496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA5
6C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0
EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF
13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3
120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14381478
14FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680
ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487E
B512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903B
F1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3
495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3F
FCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB5
00C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48
487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15
F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890
387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E
9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA316
7FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E0
7E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE01
90387E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7
FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E07
8F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7F
C09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3
A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F
12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F
141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038
C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801
F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D8
03F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77
F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFE
A33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E13
0CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214
FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48
017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EF
C00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360
A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E
0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E13
1C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114
CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E48
6C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48
EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F
1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2147014
60A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C
>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F80
0060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A
0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>
I<B81280A2290280962A>I<BD12C0A25202809653>I<D801E01340D807F813E0390FFE01
C0391FFF8780393C3FFF0038700FFE38E003FC384000F01B0879B62A>126
D<001C131C007F137F39FF80FF80A5397F007F00001C131C190978B72A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmbx10 10.95 49
/Fd 49 122 df<EDFFF8020F13FF027F8049B612E001079038C01FF090390FFE0007D91F
F8497ED93FE0131F4948497E13FF5C5A91C7FCA2705A705AEE03C093C8FCA6EE03FCB8FC
A50001903880001F160FB3AB007FD9FE03B512F0A534407EBF3A>12
D<B612E0A91B097F9823>45 D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA
1FE0EA0FC00E0E798D1D>I<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3
A8007FB612F0A5243C78BB34>49 D<903803FF80013F13F890B512FE00036E7E4881260F
F80F7F261FC0037F4848C67F486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A00
07C7FCC8FC4B1300A25E153F5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A
5A9139FF000F80EB01FC495A4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A
5A5A5AB7FC5EA4293C7BBB34>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A
03FC007FF8D807F06D7E82D80FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B
5A5E4B5A4A5B020F5B902607FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F
7E1780A26F13C0A217E0EA0FC0487E487E487E487EA317C0A25D491580127F49491300D8
3FC0495A6C6C495A3A0FFE01FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34
>I<ED01F815031507A2150F151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C
14FCEB01F814F0EB03E01307EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48
C7FC5A127E5AB812F8A5C8387FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB
01F801FE133F90B6FC5E5E5E5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713
FC019F13FF90B67E020113E09039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780
A21207EA1FC0487E487E12FF7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE049
5A260FFC075B6CB65A6C92C7FCC614FC013F13F0010790C8FC293D7BBB34>I<EC07FF02
3F13C049B512F001078049EB03FC90383FF80090397FE001FE9038FFC0034849487E4849
5AA2485A120FA2485A6F5A003F6E5A6F5A92C8FC485AA21402EC3FFE00FF496C7E01F9B5
12E001FB809138E03FF89039FF800FFC4A6C7E825B6F13804915C0A317E05BA4127FA512
3FA26D15C0121FA2000F4A13806D150012076C6C495A6C6D485A6C9038E07FF86DB55A6D
5C6D1480010749C7FC010013F02B3D7CBB34>I<121F7F13F890B712F0A45A17E017C017
8017005E5E5A007EC7EA01F84B5A007C4A5A4B5A4B5A93C7FC485C157E5DC7485A4A5AA2
4A5A140F5D141F143F5D147FA214FF92C8FC5BA25BA3495AA3130FA5131FAA6D5A6D5A6D
5A2C3F7ABD34>I<ECFFF0010713FE011F6D7E017F14E09039FFC07FF03A01FE001FF848
486D7E48486D7E1503485A8281121FA27F7F7F6D5B02C05B14F06C6D485A9138FE0FF891
38FF9FF06CECFFE06C5D5E6C92C7FC6C816D14E0011F80498090B67E48812607FE3F7F48
486C1480381FF807D9F00114C048486C7E007F8049010F13E0150348487F81167FA2163F
A36D15C0127FEE7F807F6C6CECFF006C6C5B01FEEB07FE3A0FFFC03FFC6C90B55A000115
E06C6C5C011F49C7FC010113F02B3D7CBB34>I<16FCA24B7EA24B7EA34B7FA24B7FA34B
7FA24B7FA34B7F157C03FC7FEDF87FA2020180EDF03F0203804B7E02078115C082020F81
4B7E021F811500824A81023E7F027E81027C7FA202FC814A147F49B77EA34982A2D907E0
C7001F7F4A80010F835C83011F8391C87E4983133E83017E83017C81B500FC91B612FCA5
463F7CBE4F>65 D<922607FFC0130E92B500FC131E020702FF133E023FEDC07E91B7EAE1
FE01039138803FFB499039F80003FF4901C01300013F90C8127F4948151FD9FFF8150F48
491507485B4A1503481701485B18004890CAFC197E5A5B193E127FA349170012FFAC127F
7F193EA2123FA27F6C187E197C6C7F19FC6C6D16F86C6D150119F06C6D15036C6DED07E0
D97FFEED0FC06D6CED3F80010F01C0ECFF006D01F8EB03FE6D9039FF801FFC010091B55A
023F15E002071580020002FCC7FC030713C03F407ABE4C>67 D<BAFCA4198026003FFEC7
123F1707170183183FA2181FF00FC0A31807EE07C0A3F003E0A3160F95C7FC161F163F16
FF91B6FCA54AC6FC163F161F040F147CA2160719F8A593C71201A219F01803A21807A218
0FF01FE0183F18FF1703173FBAFCA219C0A33E3D7DBC45>69 D<B912FEA48426003FFEC7
7E170F1703170084A284F01F80A3180FA2EE07C0A2F007C0A4040F90C7FCA2161F163F16
FF91B6FCA54AC6FC163F161F160FA21607A693C9FCACB712E0A53A3D7DBC42>I<B7D880
3FB612E0A526003FFEC8000FEB8000B3A491B9FCA54AC8120FB3A7B7D8803FB612E0A54B
3E7DBD52>72 D<B71280A526003FFEC7FCB3B3B0B71280A5213E7DBD28>I<B712E0A526
003FFEC9FCB3AD183EA4187E187CA418FCA21701A2EF03F8A21707170F171F177FEE01FF
160FB9FC18F0A4373E7DBD3F>76 D<B6051FB512C06F5EA26F5EA2D8003F97C7FC6F16F7
A26E6CED01E7A26E6CED03C7A36E6CED0787A26E6CED0F07A26E6C151EA36E6D143CA26E
6D1478A26E6D14F0A26F6CEB01E0A36F6CEB03C0A26F6CEB0780A26F6CEB0F00A36F6C13
1EA26F6D5AA26F6D5AA26F6D5AA393387FF1E0A293383FFBC0A270B45AA37090C7FCA270
5AA2705AB600C0031FB612C0A2705AA2705A5A3E7CBD63>I<ED3FFF0203B512F0021F14
FE027F6E7E902701FFF80713E00107D9C00013F84990C7EA3FFCD93FFCEC0FFF49486E7F
49486E7F48496E7F4A80488448496F7EA24890C96C7E4884A249161F003F84A348487013
80A400FF19C0AD007F19806D5EA3003F1900A26D5E6C60A26C6D4B5AA26C6D4B5A6C6D4A
5BA26C6D4A5B6C6D4A5B6D6C4A5B6DB4023F90C7FC6D01C0EBFFFE0107D9F80713F80101
90B612E06D5E021F4AC8FC020314F0DA003F90C9FC42407ABE4F>79
D<B812F017FF18C018F018FC26003FFCC77FEF1FFF7113807113C07113E0A27113F0A319
F8A819F0A34D13E019C05F4D1380053F1300EFFFFE91B712F860188005FCC7FC4ACAFCB3
A4B77EA53D3E7DBD47>I<B87E17FCEFFF8018F08428003FFC000113FE9338003FFF050F
7F717F717FA2858385A761A25F61614D5B4D90C8FCEF3FFE4CB45A91B712F018C04DC9FC
717E9126FC000F7F040113F0707F717EA2717EA2717EA685A6F207C019C0A271140F07E0
1380B76DEBF01F719038FC3F007190B5FC716C5B061F13F8CB000113E04A3F7DBD4E>82
D<903A03FFC001C0011FEBF803017FEBFE0748B6128F4815DF48010013FFD80FF8130F48
481303497F4848EB007F127F49143F161F12FF160FA27F1607A27F7F01FC91C7FCEBFF80
6C13F8ECFFC06C14FCEDFF806C15E016F86C816C816C816C16806C6C15C07F010715E0EB
007F020714F0EC003F1503030013F8167F163F127800F8151FA2160FA27EA217F07E161F
6C16E06D143F01E015C001F8EC7F8001FEEB01FF9026FFE00713004890B55A486C14F8D8
F81F5CD8F00314C027E0003FFEC7FC2D407ABE3A>I<003FB912FCA5903BFE003FFE003F
D87FF0EE0FFE01C0160349160190C71500197E127EA2007C183EA400FC183F48181FA5C8
1600B3AF010FB712F8A5403D7CBC49>I<B6D8FC03B600F090B512FEA5C601FCC7000301
F0C8EA7E00017F6F177C856E6E17FC013F63856D6C037F4B5AA26F4A6C14036D634D7F6F
18076D634D806F02EF150F6D636F01076E131F6D04C793C7FC050F806F02835D6D1A3E05
1F806F0201157E027F197C6F013F6E13FC023FDA3E005D057E806F017C017F13016E6105
FC14FE7048013F13036E6104C1EDFF076E4A6D5C04C31687DCE3E06D138F6E6104E716CF
DCF7C06D13DF6E96C8FC04FF16FF6E4A6D5BA294C77E6F5FA24C80033F5FA26F486F5AA2
4C153F030F5FA24C151F03075FA26F486F5A673F7EBD6C>87 D<903807FFC0013F13F848
B6FC48812607FE037F260FF8007F6DEB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC
153F91B5FC130F137F3901FFFE0F4813E0000F1380381FFE00485A5B485A12FF5BA4151F
7F007F143F6D90387BFF806C6C01FB13FE391FFF07F36CEBFFE100031480C6EC003FD91F
F890C7FC2F2B7DA933>97 D<13FFB5FCA512077EAFEDFFE0020713FC021FEBFF80027F80
DAFF8113F09139FC003FF802F06D7E4A6D7E4A13074A80701380A218C082A318E0AA18C0
A25E1880A218005E6E5C6E495A6E495A02FCEB7FF0903AFCFF01FFE0496CB55AD9F01F91
C7FCD9E00713FCC7000113C033407DBE3A>I<EC7FF00107B5FC011F14C0017F14E09039
FFF01FF0489038800FF848EB001F4848EB3FFC120F485AA2485AA2007FEC1FF849EB0FF0
ED03C000FF91C7FCAB127F7FA3003F153E7F001F157E6C6C147C6C6C14FC91388001F86C
9038C003F0C69038F81FE06DB512C0011F14800107EBFE009038007FF0272B7DA92E>I<
EE07F8ED07FFA5ED003F161FAFEC7FF0903807FFFE011FEBFF9F017F14DF9039FFF01FFF
48EBC00348EB00014848EB007F485A001F153F5B123FA2127F5BA212FFAA127FA37F123F
A26C6C147F120F6D14FF6C6C01037F6C6D48EBFFE06CEBF03F6C6CB512BF6D143F010713
FC010001E0EBE00033407DBE3A>I<ECFFF0010713FE011F6D7E017F809039FFE07FE048
9038801FF048496C7E48486D7E48486D7E121F491301003F81A2485A6F1380A212FFA290
B7FCA401F0C9FCA5127FA27F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E6C9038E0
01FC6C9038F80FF8013FB55A6D14C0010391C7FC9038007FF8292B7DA930>I<EC07FE91
387FFF8049B512C0010714E090390FFE3FF0EB1FF090393FE07FF8EB7FC013FF1480A248
9038003FF0ED1FE0ED0FC092C7FCAAB612E0A500010180C7FCB3AC007FEBFF80A525407D
BF20>I<903A03FF8007F0013F9038F83FF8499038FCFFFC48B712FE48018313F93A07FC
007FC34848EB3FE1001FEDF1FC4990381FF0F81700003F81A7001F5DA26D133F000F5D6C
6C495A3A03FF83FF8091B5C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F13F06CB6
FC16F016FC6C15FF17806C16C06C16E01207001F16F0393FE000034848EB003F49EC1FF8
00FF150F90C81207A56C6CEC0FF06D141F003F16E001F0147FD81FFC903801FFC02707FF
800F13006C90B55AC615F8013F14E0010101FCC7FC2F3D7DA834>I<13FFB5FCA512077E
AFED1FF8EDFFFE02036D7E4A80DA0FE07F91381F007F023C805C4A6D7E5CA25CA35CB3A4
B5D8FE0FB512E0A5333F7CBE3A>I<EA01F8487E487E487E481380A66C13006C5A6C5A6C
5AC8FCA913FFB5FCA512077EB3ABB512F8A515407CBF1D>I<EC0FC0EC1FE0EC3FF0EC7F
F8ECFFFCA6EC7FF8EC3FF0EC1FE0EC0FC091C7FCA9EC03FCEB07FFA5EB001F140FB3B3A2
EA1F80EA3FC0EA7FE0EAFFF0EC1FF8A3EC3FF015E0397FE07FC0393FC1FF806CB512006C
5B6C13F8C613801E5386BF20>I<13FFB5FCA512077EB092380FFFFEA5DB01FEC7FC4B5A
ED07F0ED1FE04B5A4B5A4BC8FCEC03FC4A5A4A5A141F4A7EECFFFCA2818102E77F02C37F
148102007F826F7E6F7E151F6F7E826F7F6F7F816F7FB5D8FC07EBFFC0A5323F7DBE37>
I<13FFB5FCA512077EB3B3AFB512FCA5163F7CBE1D>I<01FFD91FF8ECFFC0B590B50107
13F80203DAC01F13FE4A6E487FDA0FE09026F07F077F91261F003FEBF8010007013EDAF9
F0806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F03FEBFF
80A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E4A80DA0FE07F91381F007F000701
3C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533297CA83A>I<EC7FF0903803FF
FE011FEBFFC0017F14F09039FFE03FF8489038800FFC3A03FE0003FE48486D7E000F1680
48486D13C0A2003F16E049147F007F16F0A400FF16F8AA007F16F0A46C6CECFFE0A2001F
16C06C6C491380A26C6C4913003A03FF800FFE6C9038E03FFC6C6CB512F0011F14C00107
91C7FC9038007FF02D2B7DA934>I<01FFEBFFE0B5000713FC021FEBFF80027F80DAFF81
13F09139FC007FF8000701F06D7E6C496D7E4A130F4A6D7E1880A27013C0A38218E0AA4C
13C0A318805E18005E6E5C6E495A6E495A02FCEBFFF0DAFF035B92B55A029F91C7FC0287
13FC028113C00280C9FCACB512FEA5333B7DA83A>I<3901FE01FE00FF903807FF804A13
E04A13F0EC3F1F91387C3FF8000713F8000313F0EBFFE0A29138C01FF0ED0FE091388007
C092C7FCA391C8FCB3A2B6FCA525297DA82B>114 D<90383FFC1E48B512BE000714FE5A
381FF00F383F800148C7FC007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF15
C06C14F06C806C806C806C80C61580131F1300020713C014000078147F00F8143F151F7E
A27E16806C143F6D140001E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7FC22
2B7DA929>I<EB07C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA40001
EBC000B3151FA96CEBE03EA2017F137EECF8FC90383FFFF86D13F0010713E00100138020
3B7EB929>I<D9FF80EB0FF8B5EB0FFFA50007EC007F6C153FB3A5167FA316FF6C5C4B7F
6C903AC007DFFFE09138F01F9F6DB5121F6D13FE010F13F8010101E0EBE000332A7CA83A
>I<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F01
3F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C15
FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA232287EA737>I<B53CFC3FFFFC03FF
FEA50003D980009039C0000F806E161F6C037F15006E496C5B6C183E836E48157E017F17
7C6E486D13FC013F02EF5C83DAFC071401011F02C75CDAFE0FEBFE03010F02835C17FFDA
FF1F14076D02015C03BF148F6DD9BE005C18CF03FE14DF6D49017F90C7FC18FF6D496D5A
A36E486D5AA26E486D5AA36E486D5AA26E486D5A47287EA74C>I<B5D8FC03B51280A5C6
9026E0007FC7FC6E13FE6D6C5B6D6C485A6D6C485A010F13076D6C485AED9FC06DEBFF80
6D91C8FC6D5B6E5AA2143F6E7E140F814A7F4A7F4A7F02FE7F903801FC7F49486C7E02F0
7F49486C7E49486C7E011F7F49486C7FD97F008001FE6D7FB5D8C007EBFFC0A532287EA7
37>I<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F
013F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C
15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA35D14075D000E130FD83F805B387F
C01FD8FFE090C9FC5C143E147E5CEBC1F8387FC3F0387E0FE06CB45A6C5B6C48CAFCEA03
F8323B7EA737>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr10 10.95 44
/Fe 44 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A120E5A1218123812300B1C798919>44 D<B512FEA617067F961E>I<121E
EA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<EB01FE90380FFFC090383F03F090
387C00F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290C7
12034815F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F
80000315006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D>
48 D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A3
1D3D78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E
6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E015
3FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A
495A495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FC
A3243D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F00
0E6D7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA2
4A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7F
C0A216E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C
4913006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<15
0E151E153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214E0EB01C0
A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5AA25A5AB8
FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<EB03FCEB1FFF90387E07C09038FC03F0
48486C7E48486C7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12FF16
E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13FF6D13DF000313013900F8039F90
387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA2
4A5A5D49485AEB8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC024
3F7CBC2D>57 D<ED7FE0913807FFFE91391F801F809139780001E0D901E0EB0078D90780
141E49C87E011E6F7E0138ED01C0496F7E4916700001177848488249D93F80131C280700
01FFF07F48902607E07C130F000E90260FC01E7F001E90263F00071480001C4990380380
03003C01FED901C013C0003849ECFE010101EC00FF267803F8027F13E000701700495AA2
00F018F000E01870495AA96D7E12F01270A26D7E007818E0263801FC5C01005C003C7F00
1C017F49EB01C0001E6DEB077F000E903B0FC01E3F8380000F903B07E07C1F87006C903A
01FFF007FE3C0380003F8001F86D90CAFC6C7E120013707F011EEE03F06D160F6D6CED3F
C0D901E0913801FE00D90078EC1FF0913A1F8003FF800207B500F8C7FC9126007FFEC8FC
3C417BBF47>64 D<15074B7EA34B7EA34B7EA34B7EA34B7E15E7A2913801C7FC15C3A291
380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA34A6D7EA34A6D7EA349486D7E91B6
FCA249819138800001A249C87EA24982010E157FA2011E82011C153FA2013C820138151F
A2017882170F13FC00034C7ED80FFF4B7EB500F0010FB512F8A33D417DC044>I<B712FC
EEFF8017F00001903980000FF86C6CC7EA03FE707E701380EF7FC0EF3FE0A2EF1FF0A218
F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C1300EE03FCEE0FF8EE7FE091B6C7FC
17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0EF1FF018F8170F18FC1707A218FEA7
18FC170FA2EF1FF818F0173FEF7FE0EFFFC00403138048486C90380FFE00B85A17E094C7
FC373E7DBD40>I<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007E03E9139
FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A91C81201
4848150012034848167E5B000F173EA24848161EA2123F5B180E127FA349160012FFAC12
7F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117706C6C16
F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600FF8013F8
91393FF007F0020FB512C0020391C7FC9138003FF037427BBF42>I<B712FCEEFF8017E0
00019039C0001FF86C6C48EB03FEEE00FF717E717EEF0FE084717E717E170184717EA219
80187F19C0A3F03FE0A519F0AB19E0A5F07FC0A21980A218FF19004D5AA24D5A6017074D
5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B85A178004FCC8FC3C3E7DBD45>I<B912E0
A300019038C000016C6C48EB001FEF0FF01703A217011700A31870A418381638A41800A2
1678A216F81501150791B5FCA3EC8007150115001678A21638A2180EA3181C93C7FCA418
3C1838A21878A318F8EF01F0A21707170F173F48486CEB03FFB912E0A3373E7DBD3E>I<
B6D8C01FB512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3
A92601FFE0EC3FFCB6D8C01FB512F8A33D3E7DBD44>72 D<B612F0A3C6EBF000EB3FC0B3
B3B2EBFFF0B612F0A31C3E7EBD21>I<B612F8A3000101E0C9FC38007F80B3B0EF0380A5
17071800A45FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>76
D<B500C093B512C0A300016D4BEBE000D8007F1880D977F0ED03BFA3D973F8ED073FA3D9
71FC150EA2D970FE151CA3027F1538A36E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB03
80A36E6CEB0700A26E6C130EA36E6C5BA3037F5BA26F6C5AA36F6C5AA392380FE1C0A392
3807F380A26FB4C7FCA36F5AA213F8486C6D5AD807FFEFFFE0B500F80178017FEBFFC0A3
4A3E7CBD53>I<B712F8EEFF8017E000019039C0003FF86C6C48EB07FCEE01FE707EEF7F
80EF3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE3F
F091B612C04CC7FC0280C9FCB3A73801FFE0B612C0A3353E7DBD3E>80
D<D907FC131890391FFF8038017FEBE0783901FC03F83A03F0007CF8D807C0133F484813
0F001F140748C7FC003E1403007E1401A2007C140012FC1678A46C1538A27EA26C6C1400
7F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB
007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27EA3163E
7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090
391FFFFE00D8E00713F839C0007FC028427BBF33>83 D<003FB91280A3903AF0007FE001
018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5C816
00B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<EB0FF8EBFFFE3903F01F8039078007E0
000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381F
F87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC
03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7D
A82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001
F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2
160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E078
0FC09026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E
4848131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5A
AB6C7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C1378
90383F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114
FF010713E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F
5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8
007C017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380F
FFC090383F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848
130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C0
6C6C13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A
7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137F
EC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C90
3903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC060000
0F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0F
C026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C81
0003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C
5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D
>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E0
01F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE
33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC
487EB512F0A3143E7DBD1A>I<EA01FC12FFA3120712031201B292B51280A392383FFC00
16E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9F
E0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C14FEB539F07F
FFE0A32B3F7EBE30>107 D<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7D
BE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01
F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF49
92C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801
FE00FF903807FFC091381E07E091387803F000079038E001F82603F9C07F0001138001FB
6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713E0
90381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB
01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0
A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7
FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A07FFC001
FC6C496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0
A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FC
EC07F891C9FCAD487EB512F8A32D3A7EA733>I<3901F807E000FFEB1FF8EC787CECE1FE
3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FEA31F287E
A724>114 D<90383FC0603901FFF8E03807C03F381F000F003E1307003C1303127C0078
130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0D800
3F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E06CEB03
C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137CA213
FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F
03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA3000714
030003140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913FC9038
1FC078903807FFE00100903880FE002E297DA733>I<B539E00FFFE0A32707FE00031300
6C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA29038
0FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E
5AA26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C486D
48EB3F806C4817006D010F141E00016F131C15076D163C00004A6C1338A2017F5E4B7E15
1DD93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F01407
01070387C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED00076D5D
A24A1303027E5CA2027C1301023C5C023813003D287EA642>I<B539E00FFFE0A32707FE
000313006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FC
A26E5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E
5AA36EC8FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD8
7E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 14.4 24
/Ff 24 123 df<BA7E19FCF1FF801AF01AFCD8000701F0C7000F13FF060014C0071F7F07
0713F807017F737F747E747F747F86747F747F8886888688A2757EA31D8087A21DC0A51D
E0A387A963A31DC0A51D80A2631D00A3515AA2646264505B6264505B505B5090C7FCF2FF
FE4F5B07075B071F5B96B512C0060F91C8FCBB5A1AF01AC007FCC9FC19805B527CD167>
68 D<BB12FEA5D8000701F8C700077FF0007F191F190785858586861B80A21A1FA31A0F
A41BC006F81307A497C7FCA31701A317031707170F177F92B6FCA59238F8007F170F1707
17031701A31700A795C9FCB3B812F8A54A517CD055>70 D<B812C0A5D8000701F8C7FCB3
B3B3B2B812C0A52A527CD132>73 D<93380FFFC00303B6FC031F15E092B712FC0203D9FC
0013FF020F01C0010F13C0023F90C7000313F0DA7FFC02007F494848ED7FFE4901E0ED1F
FF49496F7F49496F7F4990C96C7F49854948707F4948707FA24849717E48864A83481B80
4A83481BC0A2481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A2
6E5F6C1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B
5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0011F13
F0020F01FC90B512C0020390B7C8FC020016FC031F15E0030392C9FCDB001F13E0565479
D265>79 D<B700FC017FB600FE91B612F0A5D8003F01C0C8001F01E0C9EBF8006F71EE0F
C06D7161876F1C1F6D7196C7FC6F8373606D1E3E6F836D7160876F1CFC6D666F4B801F01
6D66704A806E525A88704A17076E059F5F70021F80080F160F6E6570023F806EDC3E074C
C8FC8870027E5F6EDC7C03163E7002FC804F6C167E6E1C7C700101814F6C16FC6E745B70
010317016E4C6D5D060716C00580496D14036F63DDC00F16E04F6D14076F07F05BDDE01F
170F6F92C76C5D1DF8DDF03E6E141F6F98C9FCDDF87E16FC067C6E5C6FF1FE3EDDFCFC17
7E6F4A6E147C1DFFDDFFF06E14FC6F62A24E816F62A270496F5BA24E817061A295C97E70
61A270487090CAFCA37048705AA24D1601040360A27048705A84537DD18B>87
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE0021F13FC91B6FC01
0315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F4849143F484980485B83
485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E6C6D5C6C6D49B5
FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101ECFE0FD9003F13
F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC010715C04901817F90
3A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC48
17E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14
037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0F
FFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<ED3FFC0203B5FC
020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA249
5AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA5
2E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC
0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813E04893
38FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D49
5A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFCA2120F
A37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848C70003
1480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18006C6C
4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F03FCC7
FC010115E0D9000F01FCC8FC3C4F7CB543>I<137F497E000313E0487FA2487FA76C5BA2
6C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>105
D<EB3FF0B5FCA51203C6FCB3A54CB512F8A59339003FFE00EF1FF0EF3FC04D5A4DC7FCEE
03FEEE07F84C5A4C5AEE7FC04CC8FC4B5A4B5AED0FF8ED1FE04B7E4B7EECF1FF02F37F02
F77F91B6FC83159F030F7F02FE80DAF8077F4A7E6F7F6F7F83707E82707F84707F707F82
707F84707F177F717E4D13C0B6D8F003B6FCA540537CD247>107
D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>I<D93FF0D91FFCEDFFE0B591
B500C0010713FE030302F0011F6D7E030F6E017F8092271FE07FFCD9FF037F922A3F001F
FE01F8007F0003027C9126FF03E080C602F06DD90780137FDAF1E0038FC77FDAF3C0159E
DAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FE
A567367BB570>I<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F00
1FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8
F807B612C0A542367BB54B>I<913801FFE0021F13FE91B612C0010315F0010F9038807F
FC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7E
A24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F
6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC
6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0B5010F13FE
033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C7
6C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2615F616E4A
5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F148003
1F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FEB590380FFF80
033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF1500
14EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114
D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980
127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C
816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00
F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FF
C00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414
FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE
07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B0203
13802A4D7ECB34>I<B6D8E07FB5D8C003B512C0A5000101F0C701F0C7381FF8006E027F
ED07E06C715DA26E023F150F017F705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC
6F177E6D4A6E137C03C001F315FC6D715B160303E001E114016D020702E05B03F013C06D
71485A160F03F8D9807F13076D05F85B93381F003F03FC160F027F4902FC5BDBFE3E011F
131F023F04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F
6E5FA24C7F6E5F4C147FA26E5F93C8123F6F5EA2033E6FC9FC5A367DB461>119
D<B600F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E
6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E
023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F
5AA26F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C13
7C486C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000
035BC690CBFC404D7DB447>121 D<001FB8FC1880A3912680007F130001FCC7B5FC01F0
495B495D49495B495B4B5B48C75C5D4B5B5F003E4A90C7FC92B5FC4A5B5E4A5B5CC7485B
5E4A5B5C4A5B93C8FC91B5FC495B5D4949EB0F805B495B5D495B49151F4949140092C7FC
495A485E485B5C485E485B4A5C48495B4815074849495A91C712FFB8FCA37E31357CB43C
>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 1003 256 a Ff(Design)46 b(and)e(Implemen)l(tation)j(of)f(a)535
406 y(Dynamic)f(Optimization)h(F)-11 b(ramew)l(ork)46
b(for)f(Windo)l(ws)916 869 y Fe(Derek)31 b(Bruening)563
982 y(Lab)s(oratory)f(for)h(Computer)e(Science)471 1095
y(Massac)m(h)m(usetts)j(Institute)e(of)g(T)-8 b(ec)m(hnology)781
1208 y(Cam)m(bridge,)30 b(MA)h(02139)987 1321 y(iy)m(e@mit.edu)2438
869 y(Ev)m(elyn)f(Duesterw)m(ald)2241 982 y(Hewlett-P)m(ac)m(k)-5
b(ard)33 b(Lab)s(oratories)2387 1095 y(Cam)m(bridge,)d(MA)g(02142)2436
1208 y(duester@hpl.hp.com)1542 1592 y(Saman)g(Amarasinghe)1283
1705 y(Lab)s(oratory)h(for)f(Computer)g(Science)1191
1818 y(Massac)m(h)m(usetts)j(Institute)c(of)i(T)-8 b(ec)m(hnology)1502
1931 y(Cam)m(bridge,)29 b(MA)i(02139)1573 2044 y(saman@lcs.mit.edu)0
2361 y Fd(Abstract)0 2527 y Fc(In)37 b(this)h(pap)r(er)f(w)n(e)g
(explicitly)g(address)f(the)i(c)n(hallenges)0 2610 y(of)33
b(building)f(a)h(dynamic)f(optimization)g(infrastructure.)0
2693 y(Our)37 b(goal)f(is)h(to)g(pro)n(vide)f(an)h(engineering)f(man)n
(ual)h(for)0 2776 y(researc)n(hers)e(to)i(motiv)-5 b(ate)38
b(and)f(facilitate)h(engagemen)n(t)0 2859 y(in)30 b(dynamic)g
(optimization)g(tec)n(hnology)-7 b(.)43 b(The)30 b(dynamic)0
2942 y(optimization)25 b(framew)n(ork)f(w)n(e)h(discuss)g(has)g(b)r
(een)g(imple-)0 3025 y(men)n(ted)38 b(for)e(the)i(IA-32)f(family)g(of)g
(arc)n(hitectures)f(in)i(a)0 3108 y(Windo)n(ws)g(en)n(vironmen)n(t.)69
b(W)-7 b(e)39 b(describ)r(e)g(implemen)n(ta-)0 3191 y(tion)25
b(c)n(hallenges)f(sp)r(eci\014c)i(to)f(Windo)n(ws)g(and)g(issues)g
(with)0 3274 y(m)n(ultiple)34 b(threads)e(and)h(cac)n(he)f(managemen)n
(t.)52 b(W)-7 b(e)34 b(also)0 3357 y(giv)n(e)47 b(p)r(erformance)f
(results)h(for)g(our)g(implemen)n(tation)0 3440 y(and)36
b(indicate)h(the)g(o)n(v)n(erheads)d(in)n(v)n(olv)n(ed.)62
b(This)36 b(frame-)0 3523 y(w)n(ork)21 b(op)r(ens)h(up)h(opp)r
(ortunities)f(for)f(program)g(in)n(trosp)r(ec-)0 3606
y(tion)31 b(and)g(p)r(erformance)f(enhancemen)n(t)h(as)f(all)g(program)
0 3689 y(information)d(is)g(a)n(v)-5 b(ailable)27 b(at)g(run)n(time.)0
3927 y Fd(1)105 b(In)m(tro)s(duction)0 4092 y Fc(Recen)n(t)25
b(dynamic)h(optimization)f(systems)g(ha)n(v)n(e)f(demon-)0
4175 y(strated)36 b(the)i(feasibilit)n(y)e(and)h(e\013ectiv)n(eness)f
(of)h(using)g(a)0 4258 y(soft)n(w)n(are)17 b(system)h(to)g(optimize)h
(a)f(program)e(while)j(it)g(is)f(ex-)0 4341 y(ecuting.)35
b(This)20 b(abilit)n(y)g(of)h(adapting)f(a)g(running)g(program)0
4424 y(to)36 b(its)h(c)n(hanging)f(en)n(vironmen)n(t)f(pro)n(vides)g(a)
i(promising)0 4507 y(new)25 b(approac)n(h)d(to)j(o)n(v)n(ercome)d(man)n
(y)i(of)h(the)g(obstacles)e(of)0 4590 y(traditional)k(static)g
(compilation.)112 4673 y(A)39 b(ma)5 b(jor)37 b(c)n(hallenge)g(for)h
(e\013ectiv)n(e)h(static)f(compiler)0 4756 y(optimization)f(is)g(the)h
(inabilit)n(y)f(to)g(accurately)e(predict)0 4839 y(dynamic)h(program)e
(b)r(eha)n(vior.)60 b(Enhancing)35 b(static)h(op-)0 4922
y(timization)29 b(with)h(pro\014le)e(information)h(pro)n(vides)e(only)i
(a)0 5005 y(partial)e(solution)f(since)i(pro\014les)e(do)h(not)h
(indicate)f(phase)0 5088 y(c)n(hanges)38 b(in)i(the)g(program)e(and)h
(th)n(us)h(do)f(not)h(pro)n(vide)0 5171 y(m)n(uc)n(h)46
b(help)g(if)g(the)h(program)d(b)r(eha)n(vior)g(c)n(hanges)h(fre-)0
5254 y(quen)n(tly)33 b(within)h(the)g(same)f(region)f(of)h(co)r(de.)54
b(Dynamic)0 5337 y(compilation)19 b(can)h(easily)f(handle)h(suc)n(h)g
(a)g(situation)f(b)n(y)h(al-)2050 2361 y(lo)n(wing)26
b(optimizations)h(to)h(b)r(e)g(transien)n(t)f(and)g(adaptiv)n(e.)2162
2444 y(Recen)n(t)36 b(trends)h(in)g(soft)n(w)n(are)e(tec)n(hnology)g
(only)h(add)2050 2527 y(to)61 b(the)g(c)n(hallenges)f(of)h(static)f
(compilation.)137 b(The)2050 2610 y(widespread)18 b(use)i(of)f(ob)5
b(ject-orien)n(ted)18 b(programming)g(lan-)2050 2693
y(guages)f(and)h(the)h(trend)f(to)n(w)n(ard)f(shipping)i(soft)n(w)n
(are)e(bina-)2050 2776 y(ries)30 b(as)h(collections)f(of)i(Dynamically)
f(Link)n(ed)g(Libraries)2050 2859 y(\(DLLs\))21 b(rather)f(than)h
(monolithic)g(binaries)f(has)g(resulted)2050 2942 y(in)45
b(a)h(greater)d(degree)i(of)g(run-time)h(binding.)91
b(While)2050 3025 y(run-time)39 b(binding)h(o\013ers)e(n)n(umerous)h
(engineering)f(ad-)2050 3109 y(v)-5 b(an)n(tages,)28
b(it)i(mak)n(es)f(traditional)g(static)g(compiler)g(opti-)2050
3192 y(mization)j(more)g(di\016cult,)j(if)e(not)f(imp)r(ossible.)52
b(Also,)34 b(it)2050 3275 y(is)24 b(di\016cult)h(to)f(debug)g(highly)g
(optimized)h(co)r(de.)35 b(F)-7 b(or)24 b(this)2050 3358
y(reason,)j(man)n(y)h(indep)r(enden)n(t)h(soft)n(w)n(are)e(v)n(endors)f
(are)i(re-)2050 3441 y(luctan)n(t)h(to)g(ship)h(soft)n(w)n(are)e
(binaries)g(that)i(are)e(compiled)2050 3524 y(with)39
b(high)g(lev)n(els)f(of)g(optimization,)j(in)e(spite)g(of)g(their)2050
3607 y(impro)n(v)n(ed)26 b(p)r(erformance)g(p)r(oten)n(tial.)2162
3690 y(Dynamic)19 b(optimization)f(has)h(emerged)e(as)i(a)f(resp)r
(onse)2050 3773 y(to)h(man)n(y)g(of)g(these)g(obstacles.)33
b(Although)20 b(a)f(few)g(dynamic)2050 3856 y(optimization)29
b(systems)g(ha)n(v)n(e)g(b)r(een)h(dev)n(elop)r(ed)g(and)f(de-)2050
3939 y(scrib)r(ed)g(in)h(the)f(literature)g([3,)g(4,)h(9)o(],)g
(further)g(and)f(more)2050 4022 y(widespread)e(progress)g(of)h(dynamic)
h(optimization)f(tec)n(h-)2050 4105 y(nology)36 b(has)i(b)r(een)g(slo)n
(w.)67 b(This)38 b(is)g(not)g(to)r(o)f(surprising)2050
4188 y(considering)31 b(the)i(signi\014can)n(t)e(engineering)h(o)n(v)n
(erhead)e(of)2050 4271 y(merely)22 b(building)i(the)f(basic)g(co)r(de)g
(infrastructure)f(to)h(un-)2050 4354 y(dergo)32 b(researc)n(h)g(in)i
(dynamic)g(optimization.)55 b(A)34 b(ma)5 b(jor)2050
4437 y(c)n(hallenge)24 b(in)i(engineering)e(a)i(dynamic)f(optimizer)g
(is)h(the)2050 4520 y(abilit)n(y)f(to)h(e\016cien)n(tly)f(main)n(tain)h
(complete)f(con)n(trol)g(o)n(v)n(er)2050 4603 y(the)40
b(running)g(application.)73 b(This)40 b(requires)f(in)n(tercept-)2050
4686 y(ing)d(all)g(abnormal)f(con)n(trol)g(\015o)n(w,)j(suc)n(h)e(as)g
(exceptions.)2050 4769 y(This)26 b(lev)n(el)f(of)h(con)n(trol)f(o)n(v)n
(er)f(the)j(application)e(is)h(di\016cult)2050 4852 y(to)c(ac)n(hiev)n
(e)f(without)i(sev)n(erely)e(p)r(enalizing)h(p)r(erformance.)2050
4935 y(In)37 b(this)h(pap)r(er)e(w)n(e)h(explicitly)h(address)e(the)h
(c)n(hallenges)2050 5018 y(of)32 b(building)h(a)f(dynamic)h
(optimization)f(infrastructure.)2050 5101 y(Our)21 b(goal)g(is)i(to)f
(pro)n(vide)f(an)h(engineering)f(man)n(ual)h(for)g(re-)2050
5184 y(searc)n(hers)29 b(to)i(motiv)-5 b(ate)31 b(and)g(facilitate)h
(engagemen)n(t)e(in)2050 5267 y(dynamic)d(optimization)g(tec)n(hnology)
-7 b(.)2162 5350 y(The)21 b(dynamic)g(optimization)g(framew)n(ork)e(w)n
(e)i(discuss)p eop
%%Page: 2 2
2 1 bop 0 90 a Fc(has)32 b(b)r(een)g(implemen)n(ted)h(as)f(a)g(second)g
(generation)e(sys-)0 173 y(tem)22 b(based)f(on)g(Dynamo)g([3])g(for)g
(the)h(IA-32)f(family)g(of)h(ar-)0 256 y(c)n(hitectures)f(in)h(a)f
(Windo)n(ws)g(en)n(vironmen)n(t.)33 b(\(Our)21 b(imple-)0
339 y(men)n(tation)28 b(targets)g(Windo)n(ws)g(NT)h(and)f(its)h(deriv)
-5 b(ativ)n(es)0 422 y(\(2000)19 b(and)h(XP\),)h(not)f(Windo)n(ws)g
(95,)h(98,)g(or)e(ME.\))i(In)f(this)0 505 y(pap)r(er)27
b(w)n(e)f(are)g(not)h(considering)f(sp)r(eci\014c)h(optimizations)0
588 y(that)40 b(ma)n(y)g(b)r(e)g(p)r(erformed.)75 b(Instead,)43
b(w)n(e)c(discuss)h(the)0 671 y(general)26 b(issues)h(for)g(building)h
(the)g(basic)f(infrastructure.)112 754 y(W)-7 b(e)26
b(\014rst)g(presen)n(t)f(an)h(o)n(v)n(erview)e(of)h(our)g(dynamic)h
(op-)0 837 y(timization)h(framew)n(ork)e(in)j(Section)f(2.)36
b(A)28 b(ma)5 b(jor)26 b(source)0 920 y(of)k(di\016cult)n(y)g(in)h
(engineering)d(a)i(dynamic)g(optimization)0 1003 y(system)46
b(is)f(the)i(degree)d(of)i(in)n(teraction)f(with)i(op)r(erat-)0
1086 y(ing)38 b(system)h(features.)69 b(Section)38 b(3)g(is)g(dev)n
(oted)g(to)h(dis-)0 1169 y(cussing)24 b(relev)-5 b(an)n(t)24
b(Windo)n(ws-sp)r(eci\014c)h(engineering)e(c)n(hal-)0
1253 y(lenges.)73 b(This)40 b(includes)h(the)f(construction)f(of)h(the)
h(in-)0 1336 y(jector)27 b(to)h(gain)f(con)n(trol)g(o)n(v)n(er)f(the)i
(running)g(application,)0 1419 y(and)g(the)g(managemen)n(t)f(of)h
(Windo)n(ws)g(callbac)n(ks,)e(excep-)0 1502 y(tions,)k(and)f(async)n
(hronous)e(pro)r(cedure)h(calls.)42 b(The)29 b(han-)0
1585 y(dling)36 b(of)g(m)n(ulti-threading)f(is)h(discussed)g(in)g
(Section)g(4.)0 1668 y(W)-7 b(e)36 b(mo)n(v)n(e)e(on)g(to)i(an)e(exp)r
(erimen)n(tal)h(ev)-5 b(aluation)35 b(of)g(de-)0 1751
y(sign)27 b(issues.)36 b(Section)28 b(5)f(presen)n(ts)f(general)h(p)r
(erformance)0 1834 y(results)22 b(and)h(the)g(p)r(erformance)f(impact)h
(of)f(ma)5 b(jor)22 b(design)0 1917 y(decisions)29 b(regarding)e(the)j
(co)r(de)f(cac)n(he,)g(one)g(of)h(the)g(core)0 2000 y(comp)r(onen)n(ts)
37 b(in)h(an)n(y)f(dynamic)g(optimization)h(system.)0
2083 y(W)-7 b(e)30 b(discuss)f(related)h(w)n(ork)e(in)i(Section)g(6)f
(and)h(conclude)0 2166 y(the)e(pap)r(er)f(in)h(Section)g(7.)0
2404 y Fd(2)105 b(System)34 b(Ov)m(erview)0 2569 y Fc(Our)26
b(system)h(in)n(terprets)g(the)g(input)h(program's)d(instruc-)0
2652 y(tions)39 b(b)n(y)g(cop)n(ying)f(them)h(one)g(basic)g(blo)r(c)n
(k)f(at)h(a)g(time)0 2735 y(in)n(to)34 b(a)f Fb(c)l(o)l(de)j(c)l(ache)f
Fc(and)f(executing)f(the)i(copied)e(blo)r(c)n(ks)0 2818
y(nativ)n(ely)-7 b(.)39 b(A)29 b(unit)g(of)g(co)r(de)f(in)h(the)g(co)r
(de)g(cac)n(he)e(is)i(called)0 2901 y(a)23 b Fb(fr)l(agment)p
Fc(.)35 b(When)24 b(a)f(basic)f(blo)r(c)n(k)h(is)g(copied,)g(its)h
(termi-)0 2984 y(nating)32 b(branc)n(h)g(is)g(mo)r(di\014ed)h(to)f
(return)g(con)n(trol)f(to)h(our)0 3067 y(system.)74 b(W)-7
b(e)40 b(c)n(hose)f(this)i(cop)n(y-paste)d(approac)n(h)g(o)n(v)n(er)0
3150 y(em)n(ulation)d(b)r(ecause)h(of)g(the)g(complexit)n(y)f(of)h(the)
g(IA-32)0 3233 y(instruction)27 b(set.)112 3316 y(Our)e(basic)g(blo)r
(c)n(ks)g(are)g(not)h(the)g(same)f(as)g(traditional)0
3399 y(basic)d(blo)r(c)n(ks.)35 b(W)-7 b(e)24 b(do)e(not)h(end)h(blo)r
(c)n(ks)e(at)h(direct)g(uncon-)0 3482 y(ditional)30 b(jumps,)h(and)e(w)
n(e)g(w)n(alk)g(in)n(to)h(calls,)f(eliminating)0 3565
y(the)24 b(call)f(instruction.)35 b(W)-7 b(e)24 b(do)f(end)g(a)g(basic)
g(blo)r(c)n(k)g(at)g(an)n(y)0 3648 y(other)k(con)n(trol)f(transfer)h
(instruction.)112 3731 y(The)h(system)f(iden)n(ti\014es)h(frequen)n
(tly)g(executed)g Fb(tr)l(ac)l(es)0 3814 y Fc(of)d(straigh)n(t-line)e
(co)r(de)h(b)n(y)h(\014rst)f(iden)n(tifying)h Fb(tr)l(ac)l(e)i(he)l
(ads)p Fc(.)0 3897 y(A)35 b(trace)f(head)h(is)g(a)f(basic)g(blo)r(c)n
(k)h(fragmen)n(t)f(that)h(is)g(ei-)0 3980 y(ther)f(a)g(target)g(of)g(a)
g(bac)n(kw)n(ard)f(branc)n(h)g(or)h(a)g(target)f(of)0
4063 y(an)40 b(exit)h(from)f(an)g(existing)g(trace.)74
b(Eac)n(h)39 b(trace)h(head)0 4146 y(has)34 b(a)g(coun)n(ter)g(whic)n
(h)g(is)g(incremen)n(ted)g(eac)n(h)g(time)h(the)0 4229
y(trace)h(head)g(is)g(executed.)63 b(When)37 b(the)g(coun)n(ter)f
(passes)0 4312 y(a)28 b(threshold,)f(the)h(system)g(en)n(ters)f
Fb(tr)l(ac)l(e)j(cr)l(e)l(ation)h(mo)l(de)p Fc(.)0 4395
y(In)i(this)g(mo)r(de,)h(the)g(trace)e(head)g(and)h(eac)n(h)f
(subsequen)n(t)0 4479 y(basic)f(blo)r(c)n(k)h(that)g(is)g(executed)g
(are)f(copied)g(in)n(to)h(a)f(new)0 4562 y(trace)36 b(fragmen)n(t)g(in)
i(the)f(co)r(de)g(cac)n(he.)65 b(T)-7 b(race)36 b(creation)0
4645 y(mo)r(de)28 b(terminates)f(when)h(a)g(bac)n(kw)n(ard)d(branc)n(h)
i(is)h(tak)n(en)0 4728 y(or)33 b(when)g(another)g(trace)g(is)g(reac)n
(hed.)53 b(The)34 b(newly)f(cre-)0 4811 y(ated)25 b(trace)f(consists)g
(of)g(straigh)n(t-line)g(co)r(de)g(with)h(p)r(oten-)0
4894 y(tial)i(exits)h(at)f(the)h(join)g(p)r(oin)n(ts)f(of)h(the)g
(basic)e(blo)r(c)n(ks)h(that)0 4977 y(mak)n(e)37 b(up)h(the)g(trace.)67
b(Indirect)38 b(branc)n(hes)e(are)h(inlined)0 5060 y(in)n(to)23
b(the)i(trace)d(along)h(with)h(a)f(comparison)f(that)i(ensures)0
5143 y(execution)38 b(lea)n(v)n(es)e(the)i(trace)f(if)h(the)h(target)e
(of)g(the)i(in-)0 5226 y(direct)34 b(branc)n(h)g(do)r(es)g(not)g(matc)n
(h)g(the)h(target)f(that)g(w)n(as)0 5309 y(recorded)26
b(when)i(the)g(trace)f(w)n(as)f(created.)112 5392 y(F)-7
b(ragmen)n(ts)32 b(in)h(the)h(co)r(de)e(cac)n(he)g(are)g
Fb(linke)l(d)i Fc(to)f(eac)n(h)2050 90 y(other.)j(An)27
b(exit)g(from)f(a)g(fragmen)n(t)g(whose)g(target)g(is)g(not)2050
173 y(y)n(et)32 b(in)h(the)g(co)r(de)f(cac)n(he)g(targets)g(an)g
Fb(exit)i(stub)p Fc(,)f(a)f(small)2050 256 y(piece)21
b(of)g(co)r(de)g(that)h(records)d(the)j(desired)f(target)f(prior)g(to)
2050 339 y(returning)h(to)g(our)g(system)h(via)f(a)g(con)n(text)h
(switc)n(h.)35 b(When)2050 422 y(a)27 b(fragmen)n(t)g(exit)g(is)h(link)
n(ed,)f(the)h(exit)g(jump)g(is)g(mo)r(di\014ed)2050 505
y(to)j(jump)h(directly)f(to)g(the)g(destination)g(fragmen)n(t.)47
b(Our)2050 588 y(system)26 b(p)r(erforms)g(all)h(p)r(ossible)g(links)f
(when)h(a)g(fragmen)n(t)2050 671 y(is)33 b(\014rst)h(created.)55
b(W)-7 b(e)35 b(found)f(this)g(up-fron)n(t)f(linking)h(to)2050
754 y(ha)n(v)n(e)i(lo)n(w)n(er)f(o)n(v)n(erhead)g(than)i(a)g(lazy)f
(linking)h(strategy:)2050 837 y(exiting)31 b(the)i(co)r(de)e(cac)n(he)g
(the)i(\014rst)e(time)i(an)n(y)e(fragmen)n(t)2050 920
y(exit)c(is)h(tak)n(en)f(in)h(order)e(to)h(mak)n(e)g(a)g(link.)2162
1003 y(An)d(indirect)f(branc)n(h)g(exiting)g(a)g(fragmen)n(t)g(cannot)g
(b)r(e)2050 1086 y(executed)42 b(directly)-7 b(.)80 b(In)43
b(the)f(co)r(de)g(cac)n(he)g(it)g(b)r(ecomes)2050 1169
y(a)c(jump)i(to)f(an)f Fb(indir)l(e)l(ct)j(br)l(anch)f(lo)l(okup)g
Fc(routine)f(that)2050 1253 y(translates)f(the)j(target)e(address)f
(from)i(an)g(application)2050 1336 y(address)23 b(to)h(a)g(fragmen)n
(t.)35 b(If)25 b(there)f(is)g(no)g(suc)n(h)g(fragmen)n(t,)2050
1419 y(a)j(new)g(basic)g(blo)r(c)n(k)h(fragmen)n(t)e(is)i(created.)2162
1502 y(A)20 b(\015o)n(w)g(c)n(hart)f(sho)n(wing)g(the)h(op)r(eration)f
(of)h(our)f(system)2050 1585 y(is)h(sho)n(wn)h(in)g(Figure)f(1.)34
b(The)21 b(\014gure)g(concen)n(trates)e(on)i(the)2050
1668 y(\015o)n(w)f(of)h(con)n(trol)f(in)h(and)g(out)g(of)g(the)g(co)r
(de)g(cac)n(he,)g(whic)n(h)g(is)2050 1751 y(the)k(b)r(ottom)h(p)r
(ortion)f(of)h(the)f(\014gure.)36 b(The)25 b(copied)g(appli-)2050
1834 y(cation)37 b(co)r(de)h(lo)r(oks)g(just)g(lik)n(e)g(the)h
(original)e(co)r(de)h(with)2050 1917 y(the)43 b(exception)f(of)h(its)f
(con)n(trol)g(transfer)f(instructions.)2050 2000 y(The)34
b(highest)f(o)n(v)n(erhead)f(comes)h(from)h(the)g(transforma-)2050
2083 y(tion)h(of)g(indirect)g(branc)n(hes,)h(whic)n(h)f(end)h(up)f
(executing)2050 2166 y(far)41 b(more)f(instructions)i(than)f(the)h
(original)e(single)h(in-)2050 2249 y(struction.)35 b(Th)n(us,)25
b(the)h(t)n(w)n(o)e(routines)g(that)h(handle)g(them)2050
2332 y(are)35 b(v)n(ery)h(time-critical.)64 b(In)37 b(our)f(implemen)n
(tation,)j(an)2050 2415 y(indirect)29 b(branc)n(h)f(lo)r(okup)h(tak)n
(es)f(15)h(instructions,)g(while)2050 2498 y(the)i(comparison)e(of)i
(the)h(target)e(of)h(an)f(inlined)i(indirect)2050 2581
y(branc)n(h)26 b(tak)n(es)h(6)g(instructions.)2162 2664
y(Self-mo)r(difying)i(co)r(de)g(is)g(not)h(curren)n(tly)e(handled)h(b)n
(y)2050 2747 y(our)20 b(system.)35 b(Ho)n(w)n(ev)n(er,)21
b(w)n(e)g(ha)n(v)n(e)f(y)n(et)i(to)f(encoun)n(ter)g(it)h(in)2050
2830 y(an)n(y)e(of)h(the)h(large)e(Windo)n(ws)g(applications)h(w)n(e)g
(ha)n(v)n(e)f(b)r(een)2050 2913 y(running.)51 b(Since)32
b(the)h(instruction)f(cac)n(he)g(on)g(the)h(IA-32)2050
2996 y(platform)i(is)g(k)n(ept)h(consisten)n(t)f(with)h(memory)f(in)h
(hard-)2050 3079 y(w)n(are,)42 b(the)e(mec)n(hanism)g(for)g(detecting)g
(self-mo)r(difying)2050 3162 y(co)r(de)29 b(used)g(b)n(y)h(Dynamo)f([3)
o(])h(cannot)f(b)r(e)h(used.)43 b(One)29 b(so-)2050 3245
y(lution)d(is)f(to)h(write-protect)f(ev)n(ery)f(page)h(from)h(whic)n(h)
f(w)n(e)2050 3328 y(cop)n(y)38 b(a)h(basic)f(blo)r(c)n(k.)71
b(Then)40 b(if)f(the)h(application)e(ev)n(er)2050 3411
y(mo)r(di\014es)18 b(a)g(page)g(whose)g(con)n(ten)n(ts)g(are)f(in)i
(our)f(co)r(de)g(cac)n(he)2050 3494 y(w)n(e)32 b(trap)g(the)g(page)g
(fault)h(and)f(\015ush)h(appropriate)d(frag-)2050 3577
y(men)n(ts)38 b(from)g(the)g(co)r(de)g(cac)n(he.)68 b(Note)38
b(that)h(new)f(co)r(de)2050 3660 y(generated)27 b(at)h(run)n(time,)h
(suc)n(h)f(as)g(b)n(y)g(just-in-time)h(com-)2050 3743
y(pilers)g([2,)h(17)o(,)g(10)o(,)g(14],)g(is)g(fully)h(supp)r(orted)f
(b)n(y)g(our)f(sys-)2050 3826 y(tem.)2050 4064 y Fd(3)104
b(Windo)m(ws-Sp)s(eci\014c)51 b(Engineering)g(Chal-)2206
4177 y(lenges)2050 4342 y Fc(In)32 b(this)h(section,)g(w)n(e)f(discuss)
g(a)g(n)n(um)n(b)r(er)g(of)h(implemen-)2050 4425 y(tation)38
b(issues)g(that)h(are)e(sp)r(eci\014c)i(to)f(Windo)n(ws.)69
b(First)2050 4508 y(w)n(e)24 b(men)n(tion)g(issues)g(with)h(thread-lo)r
(cal)e(state.)36 b(Then)24 b(w)n(e)2050 4591 y(describ)r(e)39
b(ho)n(w)h(w)n(e)g(inject)h(our)e(system)h(in)n(to)g(arbitrary)2050
4674 y(binaries)d(in)h(order)e(to)i(run)f(legacy)g(co)r(de.)67
b(Finally)-7 b(,)40 b(w)n(e)2050 4757 y(explain)28 b(ho)n(w)g(our)h
(system)f(handles)h(the)g(man)n(y)f(t)n(yp)r(es)h(of)2050
4840 y(abnormal)d(con)n(trol)g(\015o)n(w)h(in)h(Windo)n(ws.)2050
5070 y Fd(3.1)105 b(Thread-Lo)s(cal)35 b(State)2050 5206
y Fc(Our)17 b(system)i(needs)f(to)g(sa)n(v)n(e)f(the)i(complete)g(mac)n
(hine)f(con-)2050 5289 y(text)26 b(when)h(switc)n(hing)f(from)g(the)g
(co)r(de)h(cac)n(he)e(to)h(system)2050 5372 y(co)r(de,)g(and)h(m)n(ust)
f(restore)f(it)i(when)g(switc)n(hing)f(bac)n(k.)35 b(On)p
eop
%%Page: 3 3
3 2 bop 0 1725 a @beginspecial 0 @llx 0 @lly 471 @urx
196 @ury 4710 @rwi @setspecial
%%BeginDocument: flow.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: flow.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Fri Nov 23 00:53:57 2001
%%For: walnut@derekjr (Walnut the Cat)
%%BoundingBox: 0 0 471 196
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 196 moveto 0 0 lineto 471 0 lineto 471 196 lineto closepath clip newpath
1.0 195.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Italic /Times-Italic-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 0 1800 m 0 1500 l 7800 1500 l 7800 1800 l
 cp gs col7 0.85 shd ef gr gs col7 s gr 
% Polyline
n 0 2850 m 0 2100 l 1950 2100 l 1950 2850 l
 cp gs col7 0.30 shd ef gr gs col0 s gr 
% Polyline
n 4050 2850 m 4050 2400 l 2250 2400 l 2250 2850 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 4350 2850 m 4350 2100 l 5925 2100 l 5925 2850 l
 cp gs col7 0.30 shd ef gr gs col0 s gr 
% Polyline
n 6225 2850 m 6225 2400 l 7800 2400 l 7800 2850 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 2850 450 m 2850 0 l 4500 0 l 4500 450 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 6075 0 m 6075 450 l 4800 450 l 4800 0 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
1 slj
gs  clippath
3855 2835 m 3795 2835 l 3795 2952 l 3825 2862 l 3855 2952 l cp
eoclip
n 4575 2850 m 4575 3075 l 3825 3075 l
 3825 2850 l gs col0 s gr gr

% arrowhead
0 slj
n 3855 2952 m 3825 2862 l 3795 2952 l 3855 2952 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
5730 2835 m 5670 2835 l 5670 2952 l 5700 2862 l 5730 2952 l cp
eoclip
n 6450 2850 m 6450 3075 l 5700 3075 l
 5700 2850 l gs col0 s gr gr

% arrowhead
0 slj
n 5730 2952 m 5700 2862 l 5670 2952 l 5730 2952 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
4365 2280 m 4365 2220 l 4248 2220 l 4338 2250 l 4248 2280 l cp
eoclip
n 1950 2250 m
 4350 2250 l gs col0 s gr gr

% arrowhead
0 slj
n 4248 2280 m 4338 2250 l 4248 2220 l 4248 2280 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
3180 2835 m 3120 2835 l 3120 2952 l 3150 2862 l 3180 2952 l cp
eoclip
n 7050 2850 m 7050 3225 l 3150 3225 l
 3150 2850 l gs col0 s gr gr

% arrowhead
0 slj
n 3180 2952 m 3150 2862 l 3120 2952 l 3180 2952 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
 [60] 0 sd
gs  clippath
5760 945 m 5760 1005 l 5877 1005 l 5787 975 l 5877 945 l cp
eoclip
n 7050 2400 m 7050 975 l
 5775 975 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 5877 945 m 5787 975 l 5877 1005 l 5877 945 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
 [60] 0 sd
gs  clippath
5655 1185 m 5595 1185 l 5595 1302 l 5625 1212 l 5655 1302 l cp
eoclip
n 5625 2100 m
 5625 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 5655 1302 m 5625 1212 l 5595 1302 l 5655 1302 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
780 2835 m 720 2835 l 720 2952 l 750 2862 l 780 2952 l cp
eoclip
n 1200 2850 m 1200 3075 l 750 3075 l
 750 2850 l gs col0 s gr gr

% arrowhead
0 slj
n 780 2952 m 750 2862 l 720 2952 l 780 2952 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
4980 2835 m 4920 2835 l 4920 2952 l 4950 2862 l 4980 2952 l cp
eoclip
n 5400 2850 m 5400 3075 l 4950 3075 l
 4950 2850 l gs col0 s gr gr

% arrowhead
0 slj
n 4980 2952 m 4950 2862 l 4920 2952 l 4980 2952 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
1545 2115 m 1605 2115 l 1605 1998 l 1575 2088 l 1545 1998 l cp
eoclip
n 3000 975 m 1575 975 l
 1575 2100 l gs col0 s gr gr

% arrowhead
0 slj
n 1545 1998 m 1575 2088 l 1605 1998 l 1545 1998 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
4365 2655 m 4365 2595 l 4248 2595 l 4338 2625 l 4248 2655 l cp
eoclip
n 4050 2625 m
 4350 2625 l gs col0 s gr gr

% arrowhead
0 slj
n 4248 2655 m 4338 2625 l 4248 2595 l 4248 2655 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
2265 2655 m 2265 2595 l 2148 2595 l 2238 2625 l 2148 2655 l cp
eoclip
n 1950 2625 m
 2250 2625 l gs col0 s gr gr

% arrowhead
0 slj
n 2148 2655 m 2238 2625 l 2148 2595 l 2148 2655 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
6240 2655 m 6240 2595 l 6123 2595 l 6213 2625 l 6123 2655 l cp
eoclip
n 5925 2625 m
 6225 2625 l gs col0 s gr gr

% arrowhead
0 slj
n 6123 2655 m 6213 2625 l 6123 2595 l 6123 2655 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
5445 2115 m 5505 2115 l 5505 1998 l 5475 2088 l 5445 1998 l cp
eoclip
n 5475 1200 m
 5475 2100 l gs col0 s gr gr

% arrowhead
0 slj
n 5445 1998 m 5475 2088 l 5505 1998 l 5445 1998 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 3000 1200 m 3000 750 l 5775 750 l 5775 1200 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
1 slj
gs  clippath
3780 435 m 3720 435 l 3720 552 l 3750 462 l 3780 552 l cp
eoclip
n 3750 750 m
 3750 450 l gs col0 s gr gr

% arrowhead
0 slj
n 3780 552 m 3750 462 l 3720 552 l 3780 552 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
4020 765 m 4080 765 l 4080 648 l 4050 738 l 4020 648 l cp
eoclip
n 4050 450 m
 4050 750 l gs col0 s gr gr

% arrowhead
0 slj
n 4020 648 m 4050 738 l 4080 648 l 4020 648 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
5220 765 m 5280 765 l 5280 648 l 5250 738 l 5220 648 l cp
eoclip
n 5250 450 m
 5250 750 l gs col0 s gr gr

% arrowhead
0 slj
n 5220 648 m 5250 738 l 5280 648 l 5220 648 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
4980 435 m 4920 435 l 4920 552 l 4950 462 l 4980 552 l cp
eoclip
n 4950 750 m
 4950 450 l gs col0 s gr gr

% arrowhead
0 slj
n 4980 552 m 4950 462 l 4920 552 l 4980 552 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
gs  clippath
3015 855 m 3015 795 l 2898 795 l 2988 825 l 2898 855 l cp
eoclip
n 1875 450 m 1875 825 l
 3000 825 l gs col0 s gr gr

% arrowhead
0 slj
n 2898 855 m 2988 825 l 2898 795 l 2898 855 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
 [60] 0 sd
gs  clippath
3015 1155 m 3015 1095 l 2898 1095 l 2988 1125 l 2898 1155 l cp
eoclip
n 1875 2100 m 1875 1125 l
 3000 1125 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 2898 1155 m 2988 1125 l 2898 1095 l 2898 1155 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
1 slj
 [60] 0 sd
gs  clippath
3180 1185 m 3120 1185 l 3120 1302 l 3150 1212 l 3180 1302 l cp
eoclip
n 3150 2400 m
 3150 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
0 slj
n 3180 1302 m 3150 1212 l 3120 1302 l 3180 1302 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman-iso ff 180.00 scf sf
75 2400 m
gs 1 -1 sc (BASIC BLOCK CACHE) col7 sh gr
/Times-Roman-iso ff 180.00 scf sf
300 2550 m
gs 1 -1 sc (non-control-flow) col7 sh gr
/Times-Roman-iso ff 180.00 scf sf
525 2700 m
gs 1 -1 sc (instructions) col7 sh gr
/Times-Roman-iso ff 180.00 scf sf
4500 2400 m
gs 1 -1 sc (TRACE CACHE) col7 sh gr
/Times-Roman-iso ff 180.00 scf sf
4500 2550 m
gs 1 -1 sc (non-control-flow) col7 sh gr
/Times-Roman-iso ff 180.00 scf sf
4725 2700 m
gs 1 -1 sc (instructions) col7 sh gr
/Times-Roman-iso ff 180.00 scf sf
3225 1725 m
gs 1 -1 sc (Context Switch) col0 sh gr
/Times-Italic-iso ff 150.00 scf sf
4500 1725 m
gs 1 -1 sc (21 instructions) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
6300 2625 m
gs 1 -1 sc (trace branch taken?) col0 sh gr
/Times-Italic-iso ff 150.00 scf sf
6675 2775 m
gs 1 -1 sc (6 instructions) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
1575 375 m
gs 1 -1 sc (START) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2325 2625 m
gs 1 -1 sc (indirect branch lookup) col0 sh gr
/Times-Italic-iso ff 150.00 scf sf
2700 2775 m
gs 1 -1 sc (15 instructions) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
3000 278 m
gs 1 -1 sc (basic block builder) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
4050 1012 m
gs 1 -1 sc (dispatch) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
4950 278 m
gs 1 -1 sc (trace selector) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial 189 x Fc(Figure)30 b(1:)44 b(Flo)n(w)30
b(c)n(hart)g(of)h(our)g(system.)47 b(Dark)30 b(shading)g(indicates)h
(application)f(co)r(de;)j(the)e(rest)g(is)g(our)f(system.)47
b(The)0 1997 y(costs)30 b(of)g(the)h(most)f(time-critical)g(parts)f(of)
i(the)g(system)f(are)f(indicated.)45 b(F)-7 b(or)30 b(the)h(\\trace)e
(branc)n(h)g(tak)n(en?")45 b(test,)31 b(note)0 2080 y(that)c(w)n(e)g
(need)f(to)h(sa)n(v)n(e)e(and)i(restore)e(the)i(IA-32)f
Fa(eflags)f Fc(register)g(and)i(our)f(o)n(wn)g(scratc)n(h)f(register,)h
(accoun)n(ting)f(for)i(the)0 2163 y(p)r(erhaps)g(surprisingly)f(high)i
(o)n(v)n(erhead.)p 0 2300 3900 4 v 0 2517 a(Windo)n(ws)41
b(the)h(con)n(text)f(that)g(needs)h(to)f(b)r(e)h(sa)n(v)n(ed)e(in-)0
2600 y(cludes)f(more)e(than)i(just)g(the)h(registers.)68
b(The)39 b(op)r(erat-)0 2683 y(ing)26 b(system)f(supp)r(orts)h(nativ)n
(e)f(threads)g(and)h(k)n(eeps)f(some)0 2766 y(state)31
b(for)g(eac)n(h)f(thread.)47 b(W)-7 b(e)32 b(cannot)e(ha)n(v)n(e)g(our)
h(system)0 2849 y(corrupting)26 b(that)h(state)g(when)g(it)g(runs)g(in)
g(b)r(et)n(w)n(een)g(co)r(de)0 2932 y(cac)n(he)k(executions.)50
b(In)32 b(particular,)g(w)n(e)f(m)n(ust)h(sa)n(v)n(e)f(and)0
3015 y(restore)25 b(the)i(application's)e(curren)n(t)h(error)e(co)r
(de.)36 b(Nearly)0 3098 y(all)28 b(Windo)n(ws)g(API)f(calls)h(set)g
(the)h(error)d(co)r(de.)38 b(Our)27 b(sys-)0 3181 y(tem)d(mak)n(es)f(a)
g(few)h(Windo)n(ws)f(API)h(calls)f(in)h(its)g(o)n(wn)f(rou-)0
3264 y(tines,)f(and)f(so)f(m)n(ust)h(sa)n(v)n(e)e(and)i(restore)e(the)i
(application's)0 3347 y(curren)n(t)27 b(error)e(co)r(de)j(to)f(a)n(v)n
(oid)f(corrupting)h(it.)0 3576 y Fd(3.2)105 b(Injector)0
3713 y Fc(Our)31 b(system)g(exp)r(orts)f(a)h(n)n(um)n(b)r(er)g(of)g
(routines)g(allo)n(wing)0 3796 y(an)g(application)g(to)h(start)e(and)i
(stop)f(its)h(o)n(wn)f(execution)0 3879 y(under)h(our)g(system.)50
b(When)33 b(source)e(co)r(de)h(is)g(not)h(a)n(v)-5 b(ail-)0
3962 y(able,)30 b(w)n(e)g(use)f(our)g Fb(inje)l(ctor)p
Fc(,)j(whic)n(h)d(injects)i(our)e(system)0 4045 y(in)n(to)21
b(an)h(arbitrary)d(binary)i(in)h(order)e(to)i(run)f(legacy)g(co)r(de.)
112 4128 y(There)29 b(are)g(a)g(n)n(um)n(b)r(er)g(of)h(strategies)e
(for)h(injecting)h(a)0 4211 y(DLL)23 b(in)n(to)f(a)g(pro)r(cess)g(on)g
(Windo)n(ws)g([22)o(].)36 b(Our)21 b(approac)n(h)0 4294
y(is)33 b(to)h(create)e(a)i(pro)r(cess)e(for)h(a)g(target)g(executable)
g(suc)n(h)0 4377 y(that)h(the)h(pro)r(cess)e(b)r(egins)h(in)g(a)g(susp)
r(ended)g(state.)56 b(W)-7 b(e)0 4460 y(then)36 b(insert)f(co)r(de)g
(on)n(to)f(the)i(new)f(pro)r(cess')f(stac)n(k)g(that)0
4543 y(will)22 b(load)f(our)g(system's)h(DLL)g(and)f(call)h(its)g
(initialization)0 4626 y(and)g(startup)g(routines.)34
b(W)-7 b(e)23 b(c)n(hange)e(the)i(susp)r(ended)f(ini-)0
4709 y(tial)29 b(thread's)f(program)e(coun)n(ter)i(to)g(p)r(oin)n(t)h
(to)g(this)g(co)r(de)0 4792 y(on)20 b(the)g(stac)n(k,)h(resume)e(the)h
(pro)r(cess,)h(and)e(o\013)h(w)n(e)g(go.)33 b(The)0 4875
y(target)27 b(executable)g(is)h(no)n(w)f(running)h(under)g(the)g(con)n
(trol)0 4958 y(of)g(our)e(system.)0 5187 y Fd(3.3)105
b(Main)m(taining)35 b(Con)m(trol)0 5324 y Fc(Our)49 b(system)g(main)n
(tains)h(con)n(trol)e(of)i(all)f(application)0 5407 y(co)r(de.)58
b(By)34 b(main)n(taining)g(con)n(trol)g(w)n(e)g(mean)h(that)g(none)0
5490 y(of)28 b(the)h(original)e(application)h(co)r(de)g(is)h(ev)n(er)e
(executed)h(|)2050 2517 y(all)h(application)g(co)r(de)h(is)g(executed)g
(via)f(a)h(cop)n(y)f(of)h(itself)2050 2600 y(in)40 b(our)f(co)r(de)g
(cac)n(he.)73 b(This)40 b(requires)e(in)n(tercepting)h(all)2050
2683 y(transfers)26 b(of)i(con)n(trol.)2162 2766 y(Although)50
b(for)g(optimization)g(purp)r(oses)f(only)h(hot)2050
2849 y(co)r(de)26 b(m)n(ust)g(b)r(e)h(executed)g(b)n(y)f(a)g(dynamic)g
(optimizer,)g(w)n(e)2050 2932 y(en)n(vision)38 b(uses)h(of)g(our)g(run)
n(time)g(system)g(for)g(purp)r(oses)2050 3015 y(other)30
b(than)h(optimization)f(where)g(complete)h(con)n(trol)e(of)2050
3098 y(an)20 b(application)f(w)n(ould)h(b)r(e)h(required.)33
b(F)-7 b(or)20 b(example,)h(v)-5 b(ar-)2050 3181 y(ious)24
b(in)n(trosp)r(ectiv)n(e)g(tasks,)h(suc)n(h)g(as)f(instrumen)n(tation)h
(or)2050 3264 y(co)r(de)30 b(scanning)g(to)h(implemen)n(t)g(securit)n
(y)f(proto)r(cols,)g(re-)2050 3347 y(quire)c(that)i(all)f(co)r(de)g(b)r
(e)h(examined)f(prior)f(to)h(execution.)2050 3430 y(F)-7
b(urthermore,)42 b(the)f(bulk)f(of)h(the)f(co)r(de)h(executed)f(in)g(a)
2050 3513 y(t)n(ypical)23 b(Windo)n(ws)g(application)g(is)h(in)f
(callbac)n(k)g(routines,)2050 3596 y(whic)n(h)f(w)n(ould)g(b)r(e)g
(missed)g(if)h(only)f(normal)f(con)n(trol)g(trans-)2050
3679 y(fers)27 b(w)n(ere)f(follo)n(w)n(ed.)2162 3762
y(There)44 b(are)f(a)h(n)n(um)n(b)r(er)g(of)g(abnormal)f(transfers)g
(of)2050 3845 y(con)n(trol)26 b(in)j(Windo)n(ws)e(that)i(require)e(sp)r
(ecial)g(supp)r(ort)h(to)2050 3928 y(in)n(tercept.)65
b(The)37 b(Windo)n(ws)f(op)r(erating)g(system)h(imple-)2050
4011 y(men)n(ts)22 b(man)n(y)f(features)g(through)h(message)e(passing.)
34 b(The)2050 4094 y(system)j(deliv)n(ers)g(ev)n(en)n(ts)g(to)h
(threads)f(b)n(y)g(adding)g(mes-)2050 4177 y(sages)19
b(to)i(the)h(threads')e Fb(message)25 b(queues)p Fc(.)34
b(A)22 b(thread)e(pro-)2050 4260 y(cesses)g(its)i(messages)e(async)n
(hronously)f(via)i(callbac)n(k)f(rou-)2050 4343 y(tines.)37
b(Our)27 b(system)g(m)n(ust)h(in)n(tercept)f(these)h(callbac)n(ks.)2162
4426 y(Another)34 b(source)g(of)g(async)n(hronous)f(con)n(trol)g(\015o)
n(w)h(is)2050 4509 y(through)20 b(the)h(Async)n(hronous)e(Pro)r(cedure)
h(Call)g(API)h(that)2050 4592 y(is)39 b(pro)n(vided)g(b)n(y)h(Windo)n
(ws.)74 b(This)39 b(allo)n(ws)g(threads)g(to)2050 4675
y(comm)n(unicate)30 b(with)h(eac)n(h)f(other)h(b)n(y)f(p)r(osting)h
(messages)2050 4758 y(to)24 b(their)g(resp)r(ectiv)n(e)f(queues.)36
b(The)24 b(details)g(of)g(ho)n(w)g(these)2050 4841 y(messages)f(are)h
(handled)h(are)f(v)n(ery)g(similar)g(to)h(ev)n(en)n(t)g(call-)2050
4925 y(bac)n(ks.)35 b(Our)26 b(run)n(time)h(system)g(m)n(ust)g(follo)n
(w)f(these)h(calls.)2162 5008 y(The)i(\014nal)h(source)e(of)h(async)n
(hronous)e(con)n(trol)h(\015o)n(w)h(is)2050 5091 y(exceptions.)72
b(The)39 b(Windo)n(ws)h(op)r(erating)e(system)h(sup-)2050
5174 y(p)r(orts)25 b(Structured)i(Exception)e(Handling.)36
b(C++)26 b(excep-)2050 5257 y(tions)g(in)h(Windo)n(ws)f(are)f(built)i
(on)g(top)f(of)h(this)f(exception)2050 5340 y(mec)n(hanism.)36
b(Our)26 b(system)h(m)n(ust)f(in)n(tercept)h(the)g(con)n(trol)2050
5423 y(\015o)n(w)21 b(of)i(exceptions)f(in)g(order)f(to)i(main)n(tain)f
(con)n(trol)f(of)h(an)p eop
%%Page: 4 4
4 3 bop 0 90 a Fc(application.)112 173 y(Other)33 b(sources)g(of)g
(abnormal)g(con)n(trol)f(\015o)n(w)h(include)0 256 y
Fa(setjmp/longjmp)19 b Fc(and)24 b(the)h(abilit)n(y)f(to)g(set)g(a)g
(susp)r(ended)0 339 y(thread's)49 b(program)f(coun)n(ter)h(through)g
(the)i(Windo)n(ws)0 422 y(API)27 b(function)i Fa(SetThreadContex)o(t)p
Fc(.)112 505 y(Note)42 b(that)g(m)n(uc)n(h)f(of)h(the)g(information)f
(needed)h(to)0 588 y(handle)47 b(these)g(issues)f(is)h(not)g
(o\016cially)f(do)r(cumen)n(ted.)0 671 y(The)33 b(Windo)n(ws)g(source)f
(co)r(de)h(has)f(not)h(b)r(een)h(examined)0 754 y(b)n(y)22
b(an)n(y)g(of)g(the)h(authors.)34 b(As)22 b(suc)n(h,)h(other)f(metho)r
(ds)g(than)0 837 y(those)27 b(w)n(e)g(presen)n(t)g(here)g(for)f
(handling)h(these)h(c)n(hallenges)0 920 y(ma)n(y)42 b(exist.)84
b(All)44 b(of)f(our)f(information)h(w)n(as)f(obtained)0
1003 y(from)37 b(observ)-5 b(ation)36 b(and)i(from)f(a)g(few)h(b)r(o)r
(oks)f(and)g(arti-)0 1086 y(cles)27 b([22)o(,)h(19)o(,)g(21)o(,)g(20)o
(].)112 1169 y(Also)40 b(note)g(that)g(w)n(e)g(are)f(targeting)g(Windo)
n(ws)h(NT)0 1253 y(and)f(its)h(deriv)-5 b(ativ)n(es,)41
b(not)f(Windo)n(ws)f(95,)j(98,)f(or)e(ME.)0 1336 y(Di\013eren)n(t)f
(tec)n(hniques)f(ma)n(y)f(b)r(e)i(required)f(to)g(main)n(tain)0
1419 y(con)n(trol)26 b(in)i(these)g(other)f(v)n(ersions)f(of)h(Windo)n
(ws.)0 1648 y Fd(3.3.1)105 b(Callbac)m(ks)0 1784 y Fc(In)19
b(the)h(Windo)n(ws)e(mo)r(del)h(of)g(ev)n(en)n(t)g(deliv)n(ery)-7
b(,)20 b(eac)n(h)e(thread)0 1867 y(has)24 b(sev)n(eral)f(message)h
(queues.)35 b(Di\013eren)n(t)25 b(t)n(yp)r(es)g(of)g(mes-)0
1950 y(sages)h(are)h(placed)h(in)g(eac)n(h)f(queue,)g(but)i(the)f(mec)n
(hanism)0 2033 y(for)j(pro)r(cessing)f(all)i(messages)e(is)h(essen)n
(tially)g(the)h(same.)0 2116 y(A)n(t)21 b(certain)g(p)r(oin)n(ts)g
(during)f(program)f(execution,)k(the)e(op-)0 2199 y(erating)c(system)i
(c)n(hec)n(ks)e(for)h(p)r(ending)h(messages.)32 b(If)19
b(there)0 2282 y(are)27 b(an)n(y)-7 b(,)28 b(the)h(thread's)e(state)h
(is)g(sa)n(v)n(ed.)38 b(Then,)29 b(for)e(eac)n(h)0 2365
y(message,)k(the)h(thread)f(is)g(\\commandeered")f(for)h(use)g(in)0
2448 y(running)25 b(the)i(routine)e(that)h(is)g(registered)e(to)h
(handle)h(the)0 2531 y(message.)112 2614 y(The)34 b(left)h(side)f(of)g
(Figure)f(2)h(illustrates)f(the)i(con)n(trol)0 2698 y(\015o)n(w)22
b(of)g(a)g(callbac)n(k)f(for)h(a)g(sample)g(thread.)35
b(Eac)n(h)21 b(column)0 2781 y(indicates)34 b(a)f(separate)g(execution)
g(con)n(text.)56 b(When)34 b(the)0 2864 y(thread)27 b(en)n(ters)f(the)i
(k)n(ernel)e(via)h(the)g(IA-32)g(in)n(terrupt)g(in-)0
2947 y(struction)k Fa(int)42 b(0x2E)p Fc(,)30 b(the)h(k)n(ernel)g(c)n
(hec)n(ks)f(the)h(thread's)0 3030 y(message)39 b(queues.)76
b(In)41 b(this)g(case)f(there)g(is)h(a)f(message)0 3113
y(p)r(ending.)63 b(The)36 b(k)n(ernel)f(then)i(sa)n(v)n(es)d(the)j
(thread's)e(user)0 3196 y(con)n(text)28 b(and)h(sets)g(the)g(thread)f
(up)h(to)g(execute)g(the)g(call-)0 3279 y(bac)n(k)f(registered)e(for)i
(the)h(message's)e(t)n(yp)r(e.)39 b(The)29 b(thread)0
3362 y(returns)d(to)h(user)f(mo)r(de)h(through)f(a)g(dispatc)n(h)h
(routine)f(in)0 3445 y(the)i(system)g(library)e Fa(ntdll.dll)p
Fc(.)34 b(When)28 b(callbac)n(k)f(rou-)0 3528 y(tines)k(\014nish,)i
(they)e(do)g(not)g(normally)f(return.)48 b(Instead,)0
3611 y(they)22 b(indicate)g(that)g(they)g(are)f(\014nished)h(b)n(y)f
(either)h(calling)0 3694 y(the)i(routine)g Fa(NtCallbackRetur)o(n)18
b Fc(or)23 b(b)n(y)g(executing)h Fa(int)0 3777 y(0x2B)p
Fc(.)g(This)h(causes)g(the)h(thread)f(to)g(re-en)n(ter)f(the)i(k)n
(ernel.)0 3860 y(If)33 b(there)g(are)e(no)i(more)f(messages)f(p)r
(ending,)j(the)f(k)n(ernel)0 3943 y(restores)25 b(the)j(sa)n(v)n(ed)e
(user)h(con)n(text)g(and)g(up)r(on)g(returning)0 4026
y(to)h(user)f(mo)r(de)h(the)g(thread)f(con)n(tin)n(ues)g(with)h(its)g
(original)0 4109 y(execution.)112 4192 y(Callbac)n(ks)36
b(can)h(b)r(e)h(nested,)i(that)e(is,)i(another)c(call-)0
4275 y(bac)n(k)28 b(can)h(b)r(e)h(triggered)d(if)j(during)e(execution)h
(of)g(a)g(call-)0 4358 y(bac)n(k)38 b(the)i(k)n(ernel)e(is)h(en)n
(tered)f(and)h(there)g(are)f(p)r(ending)0 4441 y(messages.)112
4524 y(W)-7 b(e)43 b(need)g(to)g(in)n(tercept)f(the)i(callbac)n(k)d
(mec)n(hanism)0 4607 y(in)h(order)e(to)h(run)g(callbac)n(k)f(routines)g
(under)i(our)e(con-)0 4690 y(trol.)129 b(F)-7 b(ortunately)g(,)66
b(after)58 b(the)h(k)n(ernel)f(sets)g(up)h(a)0 4773 y(thread)46
b(to)g(run)h(a)f(callbac)n(k)f(it)i(re-en)n(ters)e(user)g(mo)r(de)0
4856 y(through)38 b(an)g(exp)r(orted)g(routine)g(in)g
Fa(ntdll.dll)d Fc(called)0 4939 y Fa(KiUserCallbackDi)o(spa)o(tc)o(he)o
(r)p Fc(.)71 b(This)40 b(is)h(the)g(p)r(erfect)0 5022
y(sp)r(ot)32 b(to)f(in)n(tercept)g(a)g(callbac)n(k.)48
b(W)-7 b(e)32 b(insert)f(a)g(jump)i(in-)0 5105 y(struction)21
b(at)f(the)i(top)e(of)h Fa(KiUserCallbackDis)o(pa)o(tch)o(er)0
5188 y Fc(that)32 b(targets)e(our)g(o)n(wn)h(routine.)47
b(Our)31 b(routine)g(\014nishes)0 5271 y(b)n(y)c(jumping)h(bac)n(k)f
(to)h Fa(KiUserCallbackD)o(isp)o(at)o(che)o(r)p Fc(.)2162
90 y(W)-7 b(e)36 b(also)e(need)i(to)f(in)n(tercept)h(the)g(return)f(of)
h(a)f(call-)2050 173 y(bac)n(k.)62 b(This)36 b(is)g(b)r(ecause)g(our)f
(execution)h(con)n(text)g(con-)2050 256 y(tains)23 b(a)g(few)h(extra)f
(pieces)h(of)f(information)g(that)h(w)n(e)g(k)n(eep)2050
339 y(in)31 b(our)g(o)n(wn)f(data)h(structures.)47 b(The)31
b(op)r(erating)f(system)2050 422 y(sa)n(v)n(es)19 b(and)i(restores)e
(the)j(user)e(con)n(text)h(of)g(a)g(thread)g(when)2050
505 y(it)35 b(commandeers)g(it)g(to)h(run)f(a)g(callbac)n(k.)59
b(Ho)n(w)n(ev)n(er,)36 b(it)2050 588 y(only)f(sa)n(v)n(es)f(and)i
(restores)e(the)j(con)n(text)e(that)i(it)f(kno)n(ws)2050
671 y(ab)r(out.)50 b(Our)31 b(extra)g(state)h(is)g(naturally)g(not)g
(sa)n(v)n(ed)e(and)2050 754 y(restored)d(b)n(y)i(the)h(op)r(erating)e
(system.)41 b(This)29 b(extra)f(state)2050 837 y(includes)33
b(the)h(application's)f(error)f(co)r(de)h(men)n(tioned)h(in)2050
920 y(Section)f(3.1)f(and)h(p)r(ossibly)g(the)g(real)g(v)-5
b(alue)33 b(of)g(a)f(stolen)2050 1003 y(register)e(\(see)j(Section)f
(4\).)51 b(Th)n(us)32 b(w)n(e)g(need)g(to)h(b)r(e)f(noti-)2050
1086 y(\014ed)g(b)r(oth)h(when)g(a)f(callbac)n(k)f(is)i(ab)r(out)f(to)g
(happ)r(en)h(and)2050 1169 y(when)j(a)f(callbac)n(k)f(is)i(\014nished)g
(so)f(that)h(w)n(e)f(can)h(man)n(u-)2050 1253 y(ally)d(sa)n(v)n(e)f
(and)h(restore)f(our)h(state.)55 b(W)-7 b(e)33 b(can)h(catc)n(h)f(the)
2050 1336 y(return)24 b(of)g(a)h(callbac)n(k)e(b)n(y)h(w)n(atc)n(hing)g
(for)g(b)r(oth)h Fa(int)43 b(0x2B)2050 1419 y Fc(instructions)27
b(and)g(calls)g(to)h Fa(NtCallbackRetur)o(n)p Fc(.)2162
1502 y(Note)h(that)h(it)g(is)g(p)r(ossible)f(\(but)i(not)f(o\016cially)
e(do)r(cu-)2050 1585 y(men)n(ted\))39 b(to)g(access)f(the)i(op)r
(erating)e(system's)h(thread-)2050 1668 y(lo)r(cal)53
b(data)h(structure)g(using)f(the)i(segmen)n(t)f(register)2050
1751 y Fa(fs)43 b Fc([20)o(].)87 b(If)44 b(w)n(e)g(k)n(ept)g(our)g(imp)
r(ortan)n(t)f(state)h(in)h(this)2050 1834 y(data)18 b(structure)h(\(in)
g(the)h(thread-lo)r(cal)e(storage)f(slots)h(k)n(ept)2050
1917 y(there\))27 b(the)h(op)r(erating)e(system)h Fb(would)h
Fc(sa)n(v)n(e)e(and)h(restore)2050 2000 y(our)j(state)i(for)f(us.)48
b(This)32 b(w)n(ould)f(a)n(v)n(oid)f(the)i(need)g(to)f(in-)2050
2083 y(tercept)23 b(the)g(end)h(of)f(a)f(callbac)n(k.)34
b(Ho)n(w)n(ev)n(er,)22 b(w)n(e)h(ha)n(v)n(e)f(not)2050
2166 y(tested)28 b(the)g(viabilit)n(y)f(of)g(this)h(sc)n(heme.)2162
2249 y(There)23 b(is)g(another)g(ma)5 b(jor)22 b(e\013ect)i(of)g
(callbac)n(ks)e(on)h(our)2050 2332 y(system.)67 b(If)38
b(a)f(thread)h(is)f(susp)r(ended)h(inside)g(the)g(co)r(de)2050
2415 y(cac)n(he)c(while)i(the)g(op)r(erating)e(system)h(commandeers)g
(it)2050 2498 y(to)c(run)h(callbac)n(ks,)g(w)n(e)f(m)n(ust)i(mak)n(e)e
(sure)g(not)h(to)g(delete)2050 2581 y(the)j(fragmen)n(t)e(the)i(thread)
g(is)f(susp)r(ended)h(inside.)58 b(Un-)2050 2664 y(fortunately)-7
b(,)26 b(there)g(is)h(no)f(w)n(a)n(y)f(to)i(determine)g(from)f(user)
2050 2747 y(mo)r(de)34 b(exactly)f(whic)n(h)h(instruction)g(a)g(thread)
g(w)n(as)f(exe-)2050 2830 y(cuting)19 b(when)g(it)h(w)n(as)e
(commandeered)g(to)h(run)h(a)e(callbac)n(k.)2050 2913
y(Ho)n(w)n(ev)n(er,)23 b(this)h(only)g(happ)r(ens)h(when)f(the)h
(thread)f(mak)n(es)2050 2996 y(a)f(system)h(call)f(and)h(en)n(ters)f(k)
n(ernel)g(mo)r(de)i(through)e(in)n(ter-)2050 3079 y(rupt)32
b Fa(0x2E)p Fc(.)f(This)h(means)g(w)n(e)g(cannot)f(delete)i(an)n(y)e
(frag-)2050 3162 y(men)n(ts)37 b(con)n(taining)f Fa(int)42
b(0x2E)p Fc(.)36 b(T)-7 b(o)37 b(mak)n(e)f(cac)n(he)h(man-)2050
3245 y(agemen)n(t)30 b(simpler,)i(w)n(e)f(redirect)f(all)h(suc)n(h)g
(in)n(terrupt)g(in-)2050 3328 y(structions)25 b(through)h(a)f(single)h
(p)r(oin)n(t)g(\(\014rst)g(storing)f(a)h(re-)2050 3411
y(turn)h(address)g(in)g(our)g(con)n(text)g(structure\).)37
b(This)27 b(allo)n(ws)2050 3494 y(us)f(to)g(manage)f(the)i(cac)n(he)e
(without)i(ha)n(ving)e(a)h(lot)g(of)g(un-)2050 3577 y(deletable)h
(fragmen)n(ts.)2050 3806 y Fd(3.3.2)105 b(Async)m(hronous)37
b(Pro)s(cedure)f(Calls)2050 3943 y Fc(Async)n(hronous)21
b(pro)r(cedure)i(calls)g(lo)r(ok)g(exactly)g(lik)n(e)g(call-)2050
4026 y(bac)n(ks)c(to)h(our)g(system)g(except)g(for)g(the)h(fact)f(that)
h(they)f(en-)2050 4109 y(ter)i(user)f(mo)r(de)h(in)h(the)f(routine)g
Fa(KiUserApcDispatc)o(he)o(r)2050 4192 y Fc(in)i Fa(ntdll.dll)p
Fc(.)32 b(In)24 b(all)g(other)f(resp)r(ects)h(w)n(e)g(handle)g(them)
2050 4275 y(just)k(lik)n(e)f(w)n(e)g(handle)h(callbac)n(ks.)2050
4504 y Fd(3.3.3)105 b(Exceptions)2050 4641 y Fc(There)37
b(is)h(a)f(fair)g(amoun)n(t)h(of)f(information)h(on)f(the)h(de-)2050
4724 y(tails)20 b(of)h(ho)n(w)g(Windo)n(ws)f(handles)h(exceptions)g
([21)o(].)35 b(F)-7 b(rom)2050 4807 y(the)26 b(p)r(oin)n(t)h(of)f(view)
g(of)g(our)g(system,)g(exceptions)g(op)r(erate)2050 4890
y(similarly)35 b(to)i(callbac)n(ks.)62 b(The)37 b(righ)n(t)e(side)i(of)
g(Figure)e(2)2050 4973 y(sho)n(ws)e(an)g(example)h(of)g(an)g
(exception.)56 b(A)34 b(faulting)g(in-)2050 5056 y(struction)h(causes)h
(a)f(trap)h(to)g(the)h(k)n(ernel.)62 b(The)36 b(k)n(ernel)2050
5139 y(sa)n(v)n(es)31 b(the)j(user)f(con)n(text)h(and)f(then)h
(commandeers)f(the)2050 5222 y(thread)28 b(to)g(run)h
(exception-handling)f(co)r(de.)40 b(User)28 b(mo)r(de)2050
5305 y(is)18 b(re-en)n(tered)f(through)h Fa(KiUserExceptionDi)o(sp)o
(atc)o(he)o(r)p eop
%%Page: 5 5
5 4 bop 4 1842 a @beginspecial 0 @llx 0 @lly 467 @urx
211 @ury 4670 @rwi @setspecial
%%BeginDocument: asynch.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: asynch.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Wed Nov 21 23:24:47 2001
%%For: walnut@derekjr (Walnut the Cat)
%%BoundingBox: 0 0 467 211
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 211 moveto 0 0 lineto 467 0 lineto 467 211 lineto closepath clip newpath
1.0 263.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Polyline
7.500 slw
n 900 1980 m 900 1800 l 1800 1800 l
 1800 1980 l gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 900 1980 m 945 2025 l 990 1980 l 1035 2025 l 1080 1980 l 1125 2025 l
 1170 1980 l 1215 2025 l 1260 1980 l 1305 2025 l 1350 1980 l
 1395 2025 l 1440 1980 l 1485 2025 l 1530 1980 l 1575 2025 l
 1620 1980 l 1665 2025 l 1710 1980 l 1755 2025 l
 1800 1980 l gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 1800 3420 m 1800 3600 l 900 3600 l
 900 3420 l gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 1800 3420 m 1755 3375 l 1710 3420 l 1665 3375 l 1620 3420 l 1575 3375 l
 1530 3420 l 1485 3375 l 1440 3420 l 1395 3375 l 1350 3420 l
 1305 3375 l 1260 3420 l 1215 3375 l 1170 3420 l 1125 3375 l
 1080 3420 l 1035 3375 l 990 3420 l 945 3375 l
 900 3420 l gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 4125 1755 m 4125 1575 l 5025 1575 l
 5025 1755 l gs col0 s gr 
% Polyline
n 4125 1755 m 4170 1800 l 4216 1755 l 4260 1800 l 4305 1755 l 4350 1800 l
 4396 1755 l 4440 1800 l 4485 1755 l 4530 1800 l 4576 1755 l
 4620 1800 l 4665 1755 l 4710 1800 l 4756 1755 l 4800 1800 l
 4845 1755 l 4890 1800 l 4936 1755 l 4980 1800 l
 5025 1755 l gs col0 s gr 
% Polyline
n 5025 3645 m 5025 3825 l 4125 3825 l
 4125 3645 l gs col0 s gr 
% Polyline
n 5025 3645 m 4980 3600 l 4936 3645 l 4890 3600 l 4845 3645 l 4800 3600 l
 4756 3645 l 4710 3600 l 4665 3645 l 4620 3600 l 4576 3645 l
 4530 3600 l 4485 3645 l 4440 3600 l 4396 3645 l 4350 3600 l
 4305 3645 l 4260 3600 l 4216 3645 l 4170 3600 l
 4125 3645 l gs col0 s gr 
% Polyline
n 6750 2025 m 7125 2025 l 7125 2250 l 6750 2250 l
 cp gs col0 s gr 
% Polyline
n 6750 2325 m 7125 2325 l 7125 2550 l 6750 2550 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 6750 2625 m 7125 2625 l 7125 2850 l 6750 2850 l
 cp gs col7 0.75 shd ef gr gs col0 s gr 
% Polyline
n 6750 2925 m 7125 2925 l 7125 3150 l 6750 3150 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 450.00 195.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman ff 120.00 scf sf
7200 2175 m
gs 1 -1 sc (application) col0 sh gr
/Times-Roman ff 120.00 scf sf
7200 2475 m
gs 1 -1 sc (user32.dll) col0 sh gr
/Times-Roman ff 120.00 scf sf
7200 2775 m
gs 1 -1 sc (ntdll.dll) col0 sh gr
/Times-Roman ff 120.00 scf sf
7200 3075 m
gs 1 -1 sc (kernel) col0 sh gr
/Times-Roman ff 150.00 scf sf
7050 1875 m
gs 1 -1 sc (Key) col0 sh gr
% Polyline
n 0 3150 m 900 3150 l 900 3375 l 0 3375 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 0.00 210.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 0 2025 m 900 2025 l 900 2250 l 0 2250 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 0.00 135.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 900 1575 m 1800 1575 l 1800 1800 l 900 1800 l
 cp gs col0 s gr 
% Polyline
n 900 3600 m 1800 3600 l 1800 3825 l 900 3825 l
 cp gs col0 s gr 
% Polyline
n 1800 2925 m 2775 2925 l 2775 3150 l 1800 3150 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 1800 2250 m 2775 2250 l 2775 2475 l 1800 2475 l
 cp gs col7 0.75 shd ef gr gs col0 s gr 
% Polyline
n 1800 2475 m 2775 2475 l 2775 2700 l 1800 2700 l
 cp gs col7 0.95 shd ef gr gs col0 s gr 
% Polyline
n 1800 2700 m 2775 2700 l 2775 2925 l 1800 2925 l
 cp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
2970 4365 m 3030 4365 l 3030 4180 l 3000 4330 l 2970 4180 l cp
eoclip
n 3000 900 m
 3000 4350 l gs col7 0.75 shd ef gr gs col0 s gr gr

% arrowhead
7.500 slw
n 2970 4180 m 3000 4330 l 3030 4180 l 3000 4210 l 2970 4180 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
45.000 slw
gs  clippath
3915 4005 m 3915 3795 l 3780 3795 l 3870 3900 l 3780 4005 l cp
eoclip
n 3525 3375 m 3525 3900 l
 3900 3900 l gs col0 s gr gr

% arrowhead
n 3780 4005 m 3870 3900 l 3780 3795 l 3780 4005 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
7.500 slw
n 3225 1800 m 4125 1800 l 4125 2025 l 3225 2025 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 215.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3225 3150 m 4125 3150 l 4125 3375 l 3225 3375 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 215.00 210.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4125 4125 m 5025 4125 l 5025 4350 l 4125 4350 l
 cp gs col0 s gr 
% Polyline
n 5025 2025 m 6375 2025 l 6375 2250 l 5025 2250 l
 cp gs col7 0.75 shd ef gr gs col0 s gr 
% Polyline
n 5025 2925 m 6375 2925 l 6375 3150 l 5025 3150 l
 cp gs col7 0.75 shd ef gr gs col0 s gr 
% Polyline
n 5025 2700 m 6375 2700 l 6375 2925 l 5025 2925 l
 cp gs col0 s gr 
% Polyline
n 5025 2475 m 6375 2475 l 6375 2700 l 5025 2700 l
 cp gs col7 0.75 shd ef gr gs col0 s gr 
% Polyline
n 5025 2250 m 6375 2250 l 6375 2475 l 5025 2475 l
 cp gs col0 s gr 
% Polyline
15.000 slw
gs  clippath
6570 4365 m 6630 4365 l 6630 4180 l 6600 4330 l 6570 4180 l cp
eoclip
n 6600 900 m
 6600 4350 l gs col7 0.75 shd ef gr gs col0 s gr gr

% arrowhead
7.500 slw
n 6570 4180 m 6600 4330 l 6630 4180 l 6600 4210 l 6570 4180 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 180.00 scf sf
825 1050 m
gs 1 -1 sc (Callback Example) col0 sh gr
/Times-Roman ff 120.00 scf sf
75 1350 m
gs 1 -1 sc (kernel context) col0 sh gr
/Courier ff 120.00 scf sf
975 1950 m
gs 1 -1 sc (int 0x2E) col0 sh gr
/Times-Roman ff 120.00 scf sf
1875 2400 m
gs 1 -1 sc (dispatcher) col0 sh gr
/Times-Roman ff 120.00 scf sf
1875 2850 m
gs 1 -1 sc (callback handler) col0 sh gr
/Courier ff 120.00 scf sf
1875 3075 m
gs 1 -1 sc (int 0x2B) col0 sh gr
/Times-Roman ff 120.00 scf sf
1050 1350 m
gs 1 -1 sc (user context 1) col0 sh gr
/Times-Roman ff 120.00 scf sf
1950 1350 m
gs 1 -1 sc (user context 2) col0 sh gr
/Times-Italic ff 135.00 scf sf
2925 3900 m
gs 1 -1 sc  90.0 rot (TIME) col0 sh gr
/Times-Roman ff 180.00 scf sf
4125 1050 m
gs 1 -1 sc (Exception Example) col0 sh gr
/Times-Bold ff 225.00 scf sf
3975 3825 m
gs 1 -1 sc (1) col0 sh gr
/Times-Bold ff 225.00 scf sf
3900 4050 m
gs 1 -1 sc (or) col0 sh gr
/Times-Bold ff 225.00 scf sf
3975 4275 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 120.00 scf sf
3300 1350 m
gs 1 -1 sc (kernel context) col0 sh gr
/Times-Roman ff 120.00 scf sf
4200 1725 m
gs 1 -1 sc (faulting instr.) col0 sh gr
/Times-Roman ff 120.00 scf sf
4200 3750 m
gs 1 -1 sc (faulting instr.) col0 sh gr
/Times-Roman ff 120.00 scf sf
4200 4275 m
gs 1 -1 sc (execute handler) col0 sh gr
/Times-Roman ff 120.00 scf sf
4275 1350 m
gs 1 -1 sc (user context 1) col0 sh gr
/Times-Roman ff 120.00 scf sf
5325 1350 m
gs 1 -1 sc (user context 2) col0 sh gr
/Times-Roman ff 120.00 scf sf
5100 3075 m
gs 1 -1 sc (calls NtContinue) col0 sh gr
/Times-Roman ff 120.00 scf sf
5100 2625 m
gs 1 -1 sc (unwinds stack) col0 sh gr
/Times-Roman ff 120.00 scf sf
5100 2400 m
gs 1 -1 sc (queries handler filters) col0 sh gr
/Times-Roman ff 120.00 scf sf
5100 2175 m
gs 1 -1 sc (exception dispatcher) col0 sh gr
/Times-Roman ff 120.00 scf sf
5100 2850 m
gs 1 -1 sc (executes finally clauses) col0 sh gr
/Times-Italic ff 135.00 scf sf
6525 3900 m
gs 1 -1 sc  90.0 rot (TIME) col0 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 0 2031 a Fc(Figure)26 b(2:)36 b(Example)26
b(con)n(trol)g(\015o)n(w)g(for)h(a)f(callbac)n(k)g(\(left\))i(and)f(an)
f(exception)h(\(righ)n(t\).)36 b(In)28 b(eac)n(h)e(case,)g(execution)g
(mo)n(v)n(es)0 2114 y(do)n(wn)n(w)n(ard,)e(with)i(eac)n(h)e(of)i(the)g
(three)f(columns)g(indicating)g(a)g(separate)f(execution)h(con)n(text)g
(\(all)h(for)f(the)g(same)g(thread\).)p 0 2256 3900 4
v 0 2472 a(in)33 b Fa(ntdll.dll)p Fc(.)51 b(This)33 b(user-mo)r(de)f
(co)r(de)h(examines)g(p)r(o-)0 2555 y(ten)n(tial)38 b(exception)h
(handlers.)68 b(When)39 b(an)f(appropriate)0 2638 y(handler)g(is)h
(found)g(and)g(clean)n(up)f(co)r(de)h(has)f(b)r(een)h(exe-)0
2721 y(cuted,)23 b(there)f(are)f(t)n(w)n(o)g(c)n(hoices)f(on)i(ho)n(w)f
(to)h(con)n(tin)n(ue.)34 b(Ei-)0 2804 y(ther)19 b(the)h(faulting)f
(instruction)g(is)g(re-executed)g(\(in)h(whic)n(h)0 2887
y(case)28 b(the)g(k)n(ernel)g(restores)f(the)h(sa)n(v)n(ed)f(con)n
(text,)i(just)g(lik)n(e)0 2970 y(it)c(do)r(es)e(with)i(a)f(callbac)n
(k\))f(or)g(execution)h(con)n(tin)n(ues)f(with)0 3053
y(the)34 b(handler)f(and)h(the)g(co)r(de)f(after)h(the)g(handler.)55
b(Both)0 3136 y(cases)24 b(go)g(through)h(the)g(routine)g
Fa(NtContinue)p Fc(.)32 b(Our)24 b(sys-)0 3219 y(tem)32
b(in)n(tercepts)f(this)g(routine)g(and)h(c)n(hanges)e(the)h(target)0
3302 y(program)37 b(coun)n(ter)h(to)h(p)r(oin)n(t)g(to)g(one)g(of)g
(our)f(routines.)0 3385 y(W)-7 b(e)34 b(sa)n(v)n(e)e(the)i(real)f
(target)g(and)g(use)g(it)i(as)d(our)h(starting)0 3468
y(p)r(oin)n(t)g(when)f(the)h(k)n(ernel)f(resumes)f(execution)h(with)h
(our)0 3551 y(routine.)112 3634 y(As)j(with)h(callbac)n(ks,)g(the)f(sa)
n(v)n(ed)f(user)g(con)n(text)h(that)0 3717 y(ma)n(y)f(b)r(e)g(returned)
g(to)g(p)r(oin)n(ts)g(in)n(to)g(a)g(fragmen)n(t)g(in)g(the)0
3800 y(co)r(de)21 b(cac)n(he,)h(making)f(that)h(fragmen)n(t)f(not)h
(deletable.)34 b(As)0 3884 y(opp)r(osed)25 b(to)h(callbac)n(ks,)e(for)i
(an)f(exception)h(w)n(e)f(can)g(iden-)0 3967 y(tify)20
b(this)f(undeletable)g(fragmen)n(t)f(b)r(ecause)h(the)h(op)r(erating)0
4050 y(system)32 b(mak)n(es)e(a)n(v)-5 b(ailable)31 b(the)h(con)n(text)
f(of)h(the)g(faulting)0 4133 y(instruction.)112 4216
y(In)27 b(addition)g(to)g(the)h(con)n(trol)d(\015o)n(w,)i(state)g(sa)n
(ving)f(and)0 4299 y(restoring,)50 b(and)c(cac)n(he)g(managemen)n(t)g
(problems)g(that)0 4382 y(they)29 b(share)g(with)g(callbac)n(ks,)g
(exceptions)f(ha)n(v)n(e)g(another)0 4465 y(problem.)62
b(An)37 b(exception)f(handler)f(has)h(access)f(to)h(the)0
4548 y(user)d(con)n(text)f(of)h(the)h(faulting)f(instruction.)54
b(The)33 b(han-)0 4631 y(dler)24 b(can)f(examine)h(the)g(program)e
(coun)n(ter)h(and)h(mac)n(hine)0 4714 y(registers.)89
b(The)46 b(problem)f(is)g(that)h(these)f(v)-5 b(alues)45
b(are)0 4797 y(incorrect)39 b(|)h(the)g(program)e(coun)n(ter)h(p)r(oin)
n(ts)h(in)n(to)g(the)0 4880 y(co)r(de)29 b(cac)n(he,)g(and)g(the)h
(registers)d(ma)n(y)i(not)g(b)r(e)h(what)f(the)0 4963
y(handler)i(exp)r(ects)g(due)g(to)g(optimizations.)47
b(Our)31 b(system)0 5046 y(needs)23 b(to)g(transform)g(the)g(con)n
(text)g(passed)g(to)g(the)h(excep-)0 5129 y(tion)35 b(handler)g(to)g
(mak)n(e)g(it)g(app)r(ear)g(as)f(though)h(the)h(ex-)0
5212 y(ception)c(happ)r(ened)h(in)f(the)h(original)e(application)h(co)r
(de.)0 5295 y(Note)42 b(that)h(this)g(problem)e(of)i(translating)e(a)h
(mac)n(hine)0 5378 y(con)n(text)23 b(from)h(the)g(co)r(de)g(cac)n(he)f
(to)h(the)g(original)e(applica-)0 5461 y(tion)e(co)r(de)g(is)h(not)f
(unique)g(to)h(Windo)n(ws)e(exceptions.)34 b(The)2050
2472 y(same)27 b(problem)g(o)r(ccurs)f(with)j(Unix)e(signal)g
(handlers.)2162 2555 y(Unfortunately)-7 b(,)40 b(it)e(is)g(v)n(ery)f
(di\016cult)h(to)g(p)r(erform)f(a)2050 2638 y(con)n(text)23
b(translation)g(in)h(the)h(presence)e(of)h(optimizations)2050
2721 y(that)31 b(reorder)f(instructions.)49 b(Although)31
b(w)n(e)g(do)h(not)f(y)n(et)2050 2804 y(p)r(erform)39
b(suc)n(h)h(optimizations,)j(our)c(system)h(do)r(es)g(not)2050
2887 y(curren)n(tly)28 b(attempt)h(to)g(\014x)g(up)g(exception)f(con)n
(texts.)40 b(T)-7 b(o)2050 2970 y(solv)n(e)34 b(the)h(con)n(text)g
(translation)f(problem,)i(w)n(e)f(ha)n(v)n(e)f(to)2050
3053 y(k)n(eep)26 b(a)g(mapping)h(from)f(application)g(addresses)g(to)g
(co)r(de)2050 3136 y(cac)n(he)f(addresses)g(for)i(basic)f(blo)r(c)n(ks)
g(and)g(traces,)g(and)g(w)n(e)2050 3219 y(m)n(ust)32
b(b)r(e)g(able)g(to)g(rev)n(erse)e(an)n(y)h(optimizations)h(w)n(e)f(p)r
(er-)2050 3302 y(form.)51 b(W)-7 b(e)32 b(plan)h(to)f(address)f(this)i
(issue)f(in)h(the)g(future.)2050 3385 y(W)-7 b(e)25 b(exp)r(ected)h(to)
f(ha)n(v)n(e)f(problems)h(b)r(oth)h(with)f(exception)2050
3468 y(con)n(texts)k(and)h(with)h(self-mo)r(difying)f(co)r(de,)g(but)h
(neither)2050 3551 y(ha)n(v)n(e)17 b(o)r(ccurred)g(in)i(an)n(y)f(of)g
(the)h(large)e(Windo)n(ws)h(programs)2050 3634 y(w)n(e)27
b(ha)n(v)n(e)f(b)r(een)i(running.)2050 3864 y Fd(3.3.4)105
b(Other)34 b(Abnormal)h(Con)m(trol)f(Flo)m(w)2050 4000
y Fc(F)-7 b(ortunately)g(,)35 b Fa(setjmp/longjmp)29
b Fc(on)k(Windo)n(ws)h(do)g(not)2050 4083 y(require)d(an)n(y)h(sp)r
(ecial)g(actions)g(on)g(the)h(part)f(of)g(our)g(sys-)2050
4166 y(tem.)59 b(The)34 b(un)n(winding)h(of)g(the)g(application)f(stac)
n(k)g(and)2050 4249 y(the)26 b(\014nal)f(setting)h(of)g(the)g(program)d
(coun)n(ter)i(are)g(all)g(p)r(er-)2050 4332 y(formed)39
b(in)h(user)f(mo)r(de.)74 b(Our)39 b(system)g(simply)h(sees)f(a)2050
4415 y(normal)26 b(indirect)i(branc)n(h)f(at)g(the)h(end)g(of)f(it)h
(all.)2162 4498 y(Con)n(v)n(ersely)-7 b(,)121 b(the)104
b(Windo)n(ws)g(API)g(function)2050 4581 y Fa(SetThreadContex)o(t)18
b Fc(m)n(ust)23 b(b)r(e)h(in)n(tercepted)f(b)n(y)g(our)g(sys-)2050
4664 y(tem.)40 b(W)-7 b(e)29 b(simply)g(c)n(hange)e(the)i(program)d
(coun)n(ter)i(v)-5 b(alue)2050 4747 y(that)20 b(is)g(b)r(eing)g(set)g
(for)f(the)i(target)e(thread)g(to)h(p)r(oin)n(t)g(to)g(our)2050
4830 y(o)n(wn)k(routine)g(\(w)n(e)h(sa)n(v)n(e)e(the)i(original)e(v)-5
b(alue\).)36 b(When)26 b(the)2050 4913 y(target)31 b(thread)g(is)h
(resumed)f(\()p Fa(SetThreadContext)26 b Fc(ma)n(y)2050
4996 y(only)21 b(b)r(e)h(called)g(on)f(a)g(susp)r(ended)h(thread\))g
(the)g(op)r(erating)2050 5079 y(system)27 b(sets)g(its)g(program)e
(coun)n(ter)i(to)g(our)f(routine)h(and)2050 5162 y(w)n(e)g(tak)n(e)g(o)
n(v)n(er)f(from)h(there.)p eop
%%Page: 6 6
6 5 bop 0 90 a Fd(3.3.5)105 b(Alternativ)m(e)35 b(Solutions)0
227 y Fc(W)-7 b(e)26 b(came)f(up)g(with)h(a)f(few)g(alternativ)n(e)f
(metho)r(ds)i(for)f(en-)0 310 y(suring)d(that)i(all)f(application)f(co)
r(de)h(runs)g(under)g(our)f(con-)0 393 y(trol.)34 b(W)-7
b(e)22 b(w)n(ere)f(hoping)g(to)h(\014nd)g(a)f(solution)g(that)h(w)n(as)
e(not)0 476 y(to)r(o)k(hardwired)f(to)h(the)g(particular)f(v)n(ersion)g
(of)h(Windo)n(ws)0 559 y(w)n(e)j(w)n(ere)g(running)g(on,)g(but)i(w)n(e)
e(w)n(ere)g(not)g(successful.)112 642 y(One)21 b(metho)r(d)i(is)e(to)h
(mark)f(all)g(pages)g(except)h(our)f(co)r(de)0 725 y(cac)n(he)f(and)h
(our)g(system's)f(o)n(wn)h(co)r(de)g(as)f(non-executable.)0
808 y(Then)28 b(whenev)n(er)g(con)n(trol)f(switc)n(hes)g(to)i(an)n(y)e
(application)0 891 y(co)r(de,)40 b(w)n(e)d(trap)g(the)i(page)d(fault)i
(and)g(redirect)f(con)n(trol)0 974 y(to)29 b(our)f(system.)42
b(Unfortunately)-7 b(,)30 b(IA-32)e(mak)n(es)g(no)h(dis-)0
1057 y(tinction)h(b)r(et)n(w)n(een)g(read)f(privileges)g(and)g(execute)
h(privi-)0 1140 y(leges.)36 b(Th)n(us)28 b(w)n(e)f(do)h(not)f(w)n(an)n
(t)g(to)h(mark)f(all)g(pages)g(non-)0 1223 y(executable)h(b)r(ecause)g
(that)h(mak)n(es)e(them)i(non-readable,)0 1306 y(whic)n(h)24
b(is)g(not)f(something)h(w)n(e)f(w)n(an)n(t)g(to)h(do)g(to)f(pages)g
(con-)0 1389 y(taining)35 b(data.)59 b(And)35 b(it)h(is)f(not)g(p)r
(ossible)g(in)g(general)f(to)0 1472 y(kno)n(w)39 b(all)g(p)r(ossible)g
(pages)f(that)i(migh)n(t)f(con)n(tain)g(co)r(de.)0 1555
y(The)22 b(inabilit)n(y)g(to)g(iden)n(tify)h(and)f(separate)e(all)i
(pages)f(with)0 1638 y(p)r(oten)n(tial)26 b(application)g(co)r(de)g
(made)g(us)g(reject)g(this)g(solu-)0 1721 y(tion.)112
1804 y(Another)33 b(solution)f(is)h(to)f(w)n(atc)n(h)g(for)h
(registration)d(of)0 1887 y(all)43 b(callbac)n(k)g(routines)f(and)i
(replace)e(the)i(registration)0 1970 y(with)37 b(a)f(routine)f(in)i
(our)e(o)n(wn)h(system.)63 b(Ho)n(w)n(ev)n(er,)36 b(this)0
2053 y(requires)28 b(detailed)h(kno)n(wledge)f(of)i(all)f(p)r(ossible)g
(callbac)n(k)0 2136 y(routines)k(within)i(the)f(en)n(tire)f(Windo)n(ws)
h(API,)g(whic)n(h)g(is)0 2219 y(v)n(ery)f(large.)55 b(Also,)36
b(this)e(is)h(again)e(sp)r(eci\014c)h(to)g(the)h(par-)0
2302 y(ticular)29 b(v)n(ersion)f(of)h(Windo)n(ws)g(b)r(eing)g(run.)42
b(W)-7 b(e)29 b(rejected)0 2385 y(this)f(solution)f(for)g(these)h
(reasons.)0 2623 y Fd(4)105 b(Handling)35 b(Multiple)g(Threads)0
2789 y Fc(There)28 b(w)n(ere)h(three)f(ma)5 b(jor)28
b(issues)h(w)n(e)f(confron)n(ted)g(when)0 2872 y(supp)r(orting)42
b(m)n(ultiple)g(threads.)80 b(The)42 b(\014rst)g(w)n(as)f(data)0
2955 y(structure)35 b(sync)n(hronization,)g(whic)n(h)g(is)g(relativ)n
(ely)f(sim-)0 3038 y(ple)e(to)g(deal)g(with)h(b)n(y)f(making)f(use)h
(of)g(sync)n(hronization)0 3121 y(primitiv)n(es)21 b(pro)n(vided)f(b)n
(y)g(the)i(op)r(erating)e(system.)34 b(Belo)n(w)0 3204
y(w)n(e)22 b(discuss)f(the)i(other)e(t)n(w)n(o)g(issues,)i(thread-lo)r
(cal)e(scratc)n(h)0 3287 y(space)27 b(and)g(cac)n(he)g(managemen)n(t.)0
3516 y Fd(4.1)105 b(Thread-Lo)s(cal)35 b(Scratc)m(h)g(Space)0
3653 y Fc(Thread-lo)r(cal)44 b(scratc)n(h)h(space)g(is)g(needed)h(to)g
(p)r(erform)0 3736 y(tasks)36 b(suc)n(h)f(as)h(comparing)f(the)i
(target)e(of)h(an)g(indirect)0 3819 y(branc)n(h)24 b(to)g(a)g(constan)n
(t)g(to)g(see)g(if)h(execution)f(should)g(con-)0 3902
y(tin)n(ue)34 b(along)e(a)h(trace.)53 b(Allo)r(cating)33
b(thread-lo)r(cal)f(mem-)0 3985 y(ory)j(is)h(not)g(di\016cult)g(|)g
(the)h(Windo)n(ws)e(API)h(supp)r(orts)0 4068 y(suc)n(h)31
b(memory)-7 b(.)45 b(The)31 b(c)n(hallenge)f(is)h(to)g(pro)n(vide)e
(e\016cien)n(t)0 4151 y(access)34 b(to)i(scratc)n(h)e(space)h(while)h
(in)g(the)g(middle)g(of)g(ar-)0 4234 y(bitrary)g(application)g(co)r
(de.)66 b(The)37 b(p)r(erformance)f(hit)h(of)0 4317 y(making)k(an)g
(API)g(call)g(whenev)n(er)g(space)g(is)g(needed)h(is)0
4400 y(unacceptable.)k(F)-7 b(urthermore,)31 b(the)g(pro)r(cess)e(of)i
(making)0 4483 y(that)36 b(call)f(and)g(handling)g(its)h(results)e
(requires)h(its)g(o)n(wn)0 4566 y(scratc)n(h)c(space.)50
b(W)-7 b(e)33 b(need)f(more)g(immediate)g(access)g(to)0
4649 y(thread-lo)r(cal)26 b(memory)h(than)h(an)f(API)g(call.)112
4732 y(W)-7 b(e)23 b(came)g(up)g(with)h(four)f(di\013eren)n(t)g(metho)r
(ds)g(for)g(pro-)0 4815 y(viding)h(e\016cien)n(t)g(thread-lo)r(cal)e
(scratc)n(h)h(space.)35 b(The)24 b(\014rst)0 4898 y(is)36
b(to)f(use)h(the)g(stac)n(k.)61 b(W)-7 b(e)36 b(rejected)g(this)g
(solution)f(b)r(e-)0 4981 y(cause)i(it)i(assumes)e(that)h(the)g(stac)n
(k)f(p)r(oin)n(ter)h(is)f(alw)n(a)n(ys)0 5064 y(v)-5
b(alid.)36 b(W)-7 b(e)25 b(w)n(an)n(t)e(our)h(system)g(to)h(b)r(e)f
(robust)g(and)h(handle)0 5147 y(hand-co)r(ded)j(applications)f(that)i
(do)f(not)g(ob)r(ey)g(soft)n(w)n(are)0 5230 y(con)n(v)n(en)n(tions.)112
5313 y(The)20 b(second)f(metho)r(d)h(is)f(to)h(steal)f(a)g(register)f
(and)i(ha)n(v)n(e)0 5396 y(that)31 b(register)e(alw)n(a)n(ys)g(p)r(oin)
n(t)i(to)f(the)h(thread-lo)r(cal)f(stor-)2050 90 y(age.)36
b(This)27 b(solution)g(w)n(as)g(emplo)n(y)n(ed)g(in)h(Dynamo)f([3].)37
b(It)2050 173 y(incurs)c(a)g(p)r(erformance)f(p)r(enalt)n(y)h(that)h
(on)f(an)g(arc)n(hitec-)2050 256 y(ture)27 b(with)h(few)g(registers)e
(lik)n(e)h(IA-32)g(migh)n(t)g(b)r(e)h(steep.)2162 339
y(The)22 b(third)h(metho)r(d)g(is)g(to)g(use)f(the)h(thread-lo)r(cal)e
(stor-)2050 422 y(age)38 b(slots)h(that)h(are)e(k)n(ept)i(in)f(the)h
(op)r(erating)f(system's)2050 505 y(thread)28 b(information)g(blo)r(c)n
(k)g(\(TIB\),)h(accessible)e(directly)2050 588 y(b)n(y)f(the)h(segmen)n
(t)f(register)f Fa(fs)g Fc([20)o(].)37 b(The)27 b(op)r(erating)e(sys-)
2050 671 y(tem)j(sa)n(v)n(es)d(and)j(restores)d(the)j(TIB)f(along)g
(with)h(the)g(rest)2050 754 y(of)41 b(the)g(mac)n(hine)g(con)n(text)g
(when)g(executing)g(callbac)n(ks)2050 837 y(and)36 b(other)f(con)n
(trol)g(transfers.)62 b(This)36 b(solution)g(is)g(only)2050
920 y(a)n(v)-5 b(ailable)43 b(on)h(Windo)n(ws.)86 b(It)45
b(is)f(not)g(o\016cially)f(do)r(cu-)2050 1003 y(men)n(ted)23
b(and)g(could)g(c)n(hange)f(in)i(future)f(v)n(ersions)f(of)h(Win-)2050
1086 y(do)n(ws.)36 b(W)-7 b(e)28 b(ha)n(v)n(e)e(not)i(implemen)n(ted)g
(it)g(in)g(our)f(system.)2162 1169 y(The)37 b(fourth)g(and)g(\014nal)g
(metho)r(d)h(is)f(to)g(use)g(thread-)2050 1253 y(priv)-5
b(ate)33 b(co)r(de)g(cac)n(hes.)52 b(Since)33 b(all)g(co)r(de)g(is)h
(run)f(b)n(y)f(only)2050 1336 y(one)41 b(thread,)k(an)d(absolute)f
(address)g(can)g(b)r(e)i(used)f(for)2050 1419 y(scratc)n(h)28
b(space)h(\(IA-32)f(allo)n(ws)h(addressing)f(an)h(absolute)2050
1502 y(address)i(directly\).)53 b(This)33 b(option)g(is)g(discussed)f
(further)2050 1585 y(in)27 b(Section)h(4.2.2.)2162 1668
y(W)-7 b(e)35 b(\014rst)g(implemen)n(ted)g(the)h(second)e(solution,)i
(reg-)2050 1751 y(ister)30 b(stealing.)47 b(W)-7 b(e)32
b(decided)f(to)g(steal)g Fa(edi)f Fc(as)g(it)i(is)f(not)2050
1834 y(used)38 b(for)h(an)n(y)f(sp)r(ecial)g(purp)r(oses)g(\(man)n(y)h
(IA-32)f(regis-)2050 1917 y(ters)31 b(ha)n(v)n(e)g(sp)r(ecial)g
(meanings)g(to)h(certain)f(instructions\))2050 2000 y(except)i(b)n(y)f
(the)i(string)e(instructions.)53 b(T)-7 b(o)33 b(measure)f(the)2050
2083 y(p)r(erformance)42 b(p)r(enalt)n(y)h(of)g(register)f(stealing,)k
(w)n(e)d(also)2050 2166 y(implemen)n(ted)35 b(using)g(an)f(absolute)g
(address)g(as)g(scratc)n(h)2050 2249 y(space)k(\(whic)n(h)i(assumes)f
(a)g(single)g(thread\).)73 b(Figure)38 b(3)2050 2332
y(sho)n(ws)18 b(the)i(results)g(on)f(the)h(SPEC2000)d(b)r(enc)n(hmarks)
i([24)o(])2050 2415 y(\(whic)n(h)32 b(are)f(all)g(single-threaded\).)49
b(The)31 b(a)n(v)n(erage)e(slo)n(w-)2050 2498 y(do)n(wn)40
b(is)h(ab)r(out)g(1\045)f(for)h(unoptimized)g(co)r(de)g(and)f(7\045)
2050 2581 y(for)35 b(optimized)h(co)r(de.)62 b(The)36
b(discrepancy)f(is)g(easily)h(ex-)2050 2664 y(plained:)i(optimized)29
b(co)r(de)f(uses)h(the)g(registers)d(more)i(ef-)2050
2747 y(fectiv)n(ely)d(than)g(unoptimized)h(co)r(de)f(and)g(th)n(us)g
(\\notices")2050 2830 y(if)j(y)n(ou)f(steal)h(one)g(of)g(the)g
(registers.)37 b(Note)28 b(that)g(our)f(reg-)2050 2913
y(ister)33 b(stealing)g(w)n(as)g(not)h(extremely)f(sophisticated)g(and)
2050 2996 y(that)40 b(sligh)n(tly)g(b)r(etter)g(p)r(erformance)g(could)
g(ha)n(v)n(e)f(b)r(een)2050 3079 y(ac)n(hiev)n(ed.)2162
3162 y(After)57 b(encoun)n(tering)e(cac)n(he)g(managemen)n(t)h(issues)
2050 3245 y(that)29 b(thread-priv)-5 b(ate)28 b(cac)n(hes)g(w)n(ould)g
(solv)n(e,)g(w)n(e)h(decided)2050 3328 y(to)19 b(use)g(thread-priv)-5
b(ate)19 b(cac)n(hes)f(and)h(eliminate)h(our)f(regis-)2050
3411 y(ter)26 b(stealing.)36 b(The)26 b(next)h(section)f(discusses)g
(cac)n(he)g(man-)2050 3494 y(agemen)n(t)g(in)i(more)f(detail.)2050
3723 y Fd(4.2)105 b(Cac)m(he)34 b(Managemen)m(t)2050
3860 y Fc(There)c(are)g(t)n(w)n(o)h(ma)5 b(jor)29 b(c)n(hoices)i(when)g
(it)g(comes)g(to)g(the)2050 3943 y(co)r(de)26 b(cac)n(he)g(and)h(m)n
(ultiple)h(threads:)35 b(either)27 b(ha)n(v)n(e)f(a)g(sin-)2050
4026 y(gle)35 b(thread-shared)g(co)r(de)g(cac)n(he,)j(or)d(giv)n(e)g
(eac)n(h)h(thread)2050 4109 y(its)26 b(o)n(wn)g(thread-priv)-5
b(ate)25 b(co)r(de)h(cac)n(he.)35 b(W)-7 b(e)27 b(discuss)f(eac)n(h)
2050 4192 y(of)d(these)g(b)r(elo)n(w.)36 b(F)-7 b(or)22
b(eac)n(h)h(of)g(these)h(strategies)e(on)h(Win-)2050
4275 y(do)n(ws,)j(care)g(m)n(ust)i(b)r(e)f(tak)n(en)g(to)g(not)g
(delete)h(undeletable)2050 4358 y(fragmen)n(ts,)e(whic)n(h)i(w)n(e)f
(discussed)g(in)h(Section)g(3.3.)2050 4587 y Fd(4.2.1)105
b(Thread-Shared)34 b(Co)s(de)h(Cac)m(he)2050 4724 y Fc(Multiple)22
b(threads)g(sharing)f(the)h(same)f(cac)n(he)h(complicate)2050
4807 y(the)34 b(issue)f(of)g(cac)n(he)g(managemen)n(t.)54
b(W)-7 b(e)34 b(w)n(ould)f(lik)n(e)g(to)2050 4890 y(b)r(e)26
b(able)f(to)h(delete)g(fragmen)n(ts)f(from)g(the)h(cac)n(he)f(to)h(mak)
n(e)2050 4973 y(ro)r(om)i(for)h(new)h(fragmen)n(ts.)41
b(Ho)n(w)n(ev)n(er,)28 b(there)i(is)f(no)g(e\016-)2050
5056 y(cien)n(t)c(w)n(a)n(y)f(to)h(determine)g(if)h(an)n(y)f(threads)f
(are)g(executing)2050 5139 y(inside)k(a)g(giv)n(en)f(fragmen)n(t.)38
b(The)28 b(system)g(m)n(ust)g(force)f(all)2050 5222 y(threads)h(out)i
(of)f(the)g(cac)n(he)g(whenev)n(er)f(it)i(w)n(an)n(ts)e(to)h(p)r(er-)
2050 5305 y(form)f(cac)n(he)g(managemen)n(t.)39 b(First,)29
b(all)f(fragmen)n(ts)g(m)n(ust)2050 5388 y(b)r(e)d(unlink)n(ed)h(so)f
(that)h(there)f(are)f(no)i(lo)r(ops)e(in)i(the)g(cac)n(he.)p
eop
%%Page: 7 7
7 6 bop 194 1417 a @beginspecial 191 @llx 228 @lly 609
@urx 388 @ury 4180 @rwi @setspecial
%%BeginDocument: regsteal.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 3
%%Creator: (\376\377)
%%CreationDate: (D:20011120195359)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%BoundingBox: 191 228 609 388
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

191 228 moveto
609 228 lineto
609 388 lineto
191 388 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: l2compat
%%Copyright: Copyright 1987-1993 Adobe Systems Incorporated. All Rights Reserved.
/cshow isdefined? not StartLoad {
/cshow {
exch /_cshow xdd
{ 0 0 _cshow exec } forall
} bd
} EndLoad
/setcmykcolor isdefined? not StartLoad {
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} EndLoad
/rectclip isdefined? not StartLoad {
/re 0 def
/rectclip { newpath re clip newpath } bd
} EndLoad
/execform isdefined? not StartLoad {
/execform {
gsave dup begin
Matrix concat
BBox aload pop
exch 3 index sub
exch 2 index sub
rectclip
PaintProc end grestore
} def
} EndLoad
/sethalftone isdefined? not StartLoad {
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} EndLoad
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /setcolortransfer {
settransfer pop pop pop
} bd
/_defaultcolortransfer [currenttransfer dup dup dup] dd
}
ifelse
/initialize {
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c { _sa? { pl } if curveto } bd
/setSA { /_sa? xdd } bd
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/ri/pop ld
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/_sfcs { } dd
/_sscs { } dd
/scn { sc } bd
/SCN { SC } bd
/rf {re f} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/gs
{
begin
/SA here { /_sa? xdd } if
/TR here
{
dup xcheck
{ concatandsettransfer }
{ aload pop concatandsetcolortransfer }
ifelse
} if
/HT here { tn5044sethalftone } if
/FL here { i } if
currentdict gsDI
end
} bd
/csfamily {
dup type /arraytype eq { 0 get } if
} bd
/_sfc
{
_fp null eq
{ _fcs type /arraytype eq
{_fcs 0 get /Separation eq
{
_fcs 1 get /All eq
{
_fc aload pop 1 exch sub
/setseparationgray where pop begin setseparationgray end
}
{ _fcs 2 get csfamily /DeviceCMYK eq
{
1 _fcs 3 get exec _fcs 1 get
/findcmykcustomcolor where pop begin findcmykcustomcolor end
_fc aload pop
/setcustomcolor where pop begin setcustomcolor end
}
{
_fc aload pop 1 exch sub setgray
}
ifelse
}
ifelse
}
{ _fc L1setcolor }
ifelse
}
{ _fc L1setcolor }
ifelse
}
{ _fc L1setcolor }
ifelse
} bind dd
/_ssc
{
_sp null eq
{ _scs type /arraytype eq
{_scs 0 get /Separation eq
{
_scs 1 get /All eq
{
_sc aload pop 1 exch sub
/setseparationgray where pop begin setseparationgray end
}
{ _scs 2 get csfamily /DeviceCMYK eq
{
1 _scs 3 get exec _scs 1 get
/findcmykcustomcolor where pop begin findcmykcustomcolor end
_sc aload pop
/setcustomcolor where pop begin setcustomcolor end
}
{_sc aload pop 1 exch sub setgray
}
ifelse
}
ifelse
}
{ _sc L1setcolor }
ifelse
}
{ _sc L1setcolor }
ifelse
}
{ _sc L1setcolor }
ifelse
} bind dd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {re f} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial
[/N8/Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
191 228 418 160 re W n
1 1 1 rg
36 36 720 540 rf
183 216 426.75 179.25 rf
0.75 w
1 J
2 j
1 M
0 0 0 RG
225 380.25 m
572.25 380.25 l
572.25 279.75 l
225 279.75 l
225 380.25 l
h
S 
q
225 293.25 347.25 0.75 re
h
W n 
1 j
10 M
225 294 m
572.25 294 l
S 
Q
q
225 307.5 347.25 0.75 re
h
W n 
1 j
10 M
225 308.25 m
572.25 308.25 l
S 
Q
q
225 321.75 347.25 0.75 re
h
W n 
1 j
10 M
225 322.5 m
572.25 322.5 l
S 
Q
q
225 336.75 347.25 0.75 re
h
W n 
1 j
10 M
225 337.5 m
572.25 337.5 l
S 
Q
q
225 351 347.25 0.75 re
h
W n 
1 j
10 M
225 351.75 m
572.25 351.75 l
S 
Q
q
225 365.25 347.25 0.75 re
h
W n 
1 j
10 M
225 366 m
572.25 366 l
S 
Q
q
225 379.5 347.25 0.75 re
h
W n 
1 j
10 M
225 380.25 m
572.25 380.25 l
S 
Q
1 j
10 M
225 380.25 m
572.25 380.25 l
S 
572.25 380.25 m
572.25 279.75 l
S 
572.25 279.75 m
225 279.75 l
S 
225 279.75 m
225 380.25 l
S 
q
229.5 279.75 7.5 82.5 re
h
W n 
0.60001 0.60001 1 rg
229.5 362.25 m
236.25 362.25 l
236.25 279.75 l
229.5 279.75 l
229.5 362.25 l
h
b* 
Q
q
251.25 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
251.25 351.75 m
258 351.75 l
258 279.75 l
251.25 279.75 l
251.25 351.75 l
h
b* 
Q
q
273 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
273 351.75 m
279.75 351.75 l
279.75 279.75 l
273 279.75 l
273 351.75 l
h
b* 
Q
q
294.75 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
294.75 351.75 m
301.5 351.75 l
301.5 279.75 l
294.75 279.75 l
294.75 351.75 l
h
b* 
Q
q
316.5 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
316.5 351.75 m
323.25 351.75 l
323.25 279.75 l
316.5 279.75 l
316.5 351.75 l
h
b* 
Q
q
338.25 279.75 7.5 71.25 re
h
W n 
0.60001 0.60001 1 rg
338.25 351 m
345 351 l
345 279.75 l
338.25 279.75 l
338.25 351 l
h
b* 
Q
q
360 279.75 7.5 71.25 re
h
W n 
0.60001 0.60001 1 rg
360 351 m
366.75 351 l
366.75 279.75 l
360 279.75 l
360 351 l
h
b* 
Q
q
381.75 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
381.75 351.75 m
388.5 351.75 l
388.5 279.75 l
381.75 279.75 l
381.75 351.75 l
h
b* 
Q
q
403.5 279.75 6.75 71.25 re
h
W n 
0.60001 0.60001 1 rg
403.5 351 m
409.5 351 l
409.5 279.75 l
403.5 279.75 l
403.5 351 l
h
b* 
Q
q
424.5 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
424.5 351.75 m
431.25 351.75 l
431.25 279.75 l
424.5 279.75 l
424.5 351.75 l
h
b* 
Q
q
446.25 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
446.25 351.75 m
453 351.75 l
453 279.75 l
446.25 279.75 l
446.25 351.75 l
h
b* 
Q
q
468 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
468 351.75 m
474.75 351.75 l
474.75 279.75 l
468 279.75 l
468 351.75 l
h
b* 
Q
q
489.75 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
489.75 351.75 m
496.5 351.75 l
496.5 279.75 l
489.75 279.75 l
489.75 351.75 l
h
b* 
Q
q
511.5 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
511.5 351.75 m
518.25 351.75 l
518.25 279.75 l
511.5 279.75 l
511.5 351.75 l
h
b* 
Q
q
533.25 279.75 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
533.25 351.75 m
540 351.75 l
540 279.75 l
533.25 279.75 l
533.25 351.75 l
h
b* 
Q
q
555 279.75 7.5 72.75 re
h
W n 
0.60001 0.60001 1 rg
555 352.5 m
561.75 352.5 l
561.75 279.75 l
555 279.75 l
555 352.5 l
h
b* 
Q
q
236.25 279.75 6.75 73.5 re
h
W n 
0.60001 0.2 0.39999 rg
236.25 353.25 m
242.25 353.25 l
242.25 279.75 l
236.25 279.75 l
236.25 353.25 l
h
b* 
Q
q
258 279.75 6.75 79.5 re
h
W n 
0.60001 0.2 0.39999 rg
258 359.25 m
264 359.25 l
264 279.75 l
258 279.75 l
258 359.25 l
h
b* 
Q
q
279.75 279.75 6.75 78 re
h
W n 
0.60001 0.2 0.39999 rg
279.75 357.75 m
285.75 357.75 l
285.75 279.75 l
279.75 279.75 l
279.75 357.75 l
h
b* 
Q
q
301.5 279.75 6.75 76.5 re
h
W n 
0.60001 0.2 0.39999 rg
301.5 356.25 m
307.5 356.25 l
307.5 279.75 l
301.5 279.75 l
301.5 356.25 l
h
b* 
Q
q
323.25 279.75 6.75 81.75 re
h
W n 
0.60001 0.2 0.39999 rg
323.25 361.5 m
329.25 361.5 l
329.25 279.75 l
323.25 279.75 l
323.25 361.5 l
h
b* 
Q
q
345 279.75 6.75 78.75 re
h
W n 
0.60001 0.2 0.39999 rg
345 358.5 m
351 358.5 l
351 279.75 l
345 279.75 l
345 358.5 l
h
b* 
Q
q
366.75 279.75 6.75 75 re
h
W n 
0.60001 0.2 0.39999 rg
366.75 354.75 m
372.75 354.75 l
372.75 279.75 l
366.75 279.75 l
366.75 354.75 l
h
b* 
Q
q
388.5 279.75 6.75 90 re
h
W n 
0.60001 0.2 0.39999 rg
388.5 369.75 m
394.5 369.75 l
394.5 279.75 l
388.5 279.75 l
388.5 369.75 l
h
b* 
Q
q
409.5 279.75 6.75 72 re
h
W n 
0.60001 0.2 0.39999 rg
409.5 351.75 m
415.5 351.75 l
415.5 279.75 l
409.5 279.75 l
409.5 351.75 l
h
b* 
Q
q
431.25 279.75 6.75 74.25 re
h
W n 
0.60001 0.2 0.39999 rg
431.25 354 m
437.25 354 l
437.25 279.75 l
431.25 279.75 l
431.25 354 l
h
b* 
Q
q
453 279.75 6.75 75 re
h
W n 
0.60001 0.2 0.39999 rg
453 354.75 m
459 354.75 l
459 279.75 l
453 279.75 l
453 354.75 l
h
b* 
Q
q
474.75 279.75 6.75 75 re
h
W n 
0.60001 0.2 0.39999 rg
474.75 354.75 m
480.75 354.75 l
480.75 279.75 l
474.75 279.75 l
474.75 354.75 l
h
b* 
Q
q
496.5 279.75 6.75 78 re
h
W n 
0.60001 0.2 0.39999 rg
496.5 357.75 m
502.5 357.75 l
502.5 279.75 l
496.5 279.75 l
496.5 357.75 l
h
b* 
Q
q
518.25 279.75 6.75 78.75 re
h
W n 
0.60001 0.2 0.39999 rg
518.25 358.5 m
524.25 358.5 l
524.25 279.75 l
518.25 279.75 l
518.25 358.5 l
h
b* 
Q
q
540 279.75 6.75 78.75 re
h
W n 
0.60001 0.2 0.39999 rg
540 358.5 m
546 358.5 l
546 279.75 l
540 279.75 l
540 358.5 l
h
b* 
Q
q
561.75 279.75 6.75 77.25 re
h
W n 
0.60001 0.2 0.39999 rg
561.75 357 m
567.75 357 l
567.75 279.75 l
561.75 279.75 l
561.75 357 l
h
b* 
Q
225 380.25 m
225 279.75 l
S 
222.75 279.75 m
225 279.75 l
S 
222.75 294 m
225 294 l
S 
222.75 308.25 m
225 308.25 l
S 
222.75 322.5 m
225 322.5 l
S 
222.75 337.5 m
225 337.5 l
S 
222.75 351.75 m
225 351.75 l
S 
222.75 366 m
225 366 l
S 
222.75 380.25 m
225 380.25 l
S 
225 279.75 m
572.25 279.75 l
S 
225 277.5 m
225 279.75 l
S 
246.75 277.5 m
246.75 279.75 l
S 
268.5 277.5 m
268.5 279.75 l
S 
290.25 277.5 m
290.25 279.75 l
S 
312 277.5 m
312 279.75 l
S 
333.75 277.5 m
333.75 279.75 l
S 
355.5 277.5 m
355.5 279.75 l
S 
377.25 277.5 m
377.25 279.75 l
S 
399 277.5 m
399 279.75 l
S 
420 277.5 m
420 279.75 l
S 
441.75 277.5 m
441.75 279.75 l
S 
463.5 277.5 m
463.5 279.75 l
S 
485.25 277.5 m
485.25 279.75 l
S 
507 277.5 m
507 279.75 l
S 
528.75 277.5 m
528.75 279.75 l
S 
550.5 277.5 m
550.5 279.75 l
S 
572.25 277.5 m
572.25 279.75 l
S 
BT
207.75 276.75 TD
0 0 0 rg
/N8 8.25 Tf
-0.07249 Tc
0 Tw
(0.0)Tj 
0 14.25 TD
(0.2)Tj 
T*
(0.4)Tj 
T*
(0.6)Tj 
0 15 TD
(0.8)Tj 
0 14.25 TD
(1.0)Tj 
T*
(1.2)Tj 
T*
(1.4)Tj 
ET
BT
0 1 -1 0 238.5 264 Tm
0.0408 Tc
(art)Tj 
ET
BT
0 1 -1 0 260.25 254.25 Tm
-0.0435 Tc
(bzip2)Tj 
ET
BT
0 1 -1 0 282 252 Tm
0.01311 Tc
(crafty)Tj 
ET
BT
0 1 -1 0 303.75 260.25 Tm
-0.08701 Tc
(eon)Tj 
ET
BT
0 1 -1 0 325.5 247.5 Tm
0.11501 Tc
(equake)Tj 
ET
BT
0 1 -1 0 347.25 260.25 Tm
-0.08701 Tc
(gap)Tj 
ET
BT
0 1 -1 0 369 260.25 Tm
0.22099 Tc
(gcc)Tj 
ET
BT
0 1 -1 0 390.75 258.75 Tm
-0.03259 Tc
(gzip)Tj 
ET
BT
0 1 -1 0 412.5 260.25 Tm
0.3197 Tc
(mcf)Tj 
ET
BT
0 1 -1 0 434.25 254.25 Tm
0.2072 Tc
(mesa)Tj 
ET
BT
0 1 -1 0 456 249.75 Tm
0.1032 Tc
(parser)Tj 
ET
BT
0 1 -1 0 477.75 246 Tm
-0.1196 Tc
(perlbmk)Tj 
ET
BT
0 1 -1 0 499.5 255 Tm
-0.09241 Tc
(twolf)Tj 
ET
BT
0 1 -1 0 521.25 250.5 Tm
0.00591 Tc
(vortex)Tj 
ET
BT
0 1 -1 0 543 261.75 Tm
0.18021 Tc
(vpr)Tj 
ET
BT
0 1 -1 0 564.75 242.25 Tm
-0.1046 Tc
(H_MEAN)Tj 
ET
BT
378 230.25 TD
-0.05231 Tc
(Benchmark)Tj 
ET
BT
0 1 -1 0 201.75 309 Tm
-0.10561 Tc
(Slowdown)Tj 
ET
1 1 1 rg
581.25 315.75 24.75 27.75 rf
580.5 315.75 25.5 28.5 re
S 
0.60001 0.60001 1 rg
584.25 334.5 3.75 3.75 rf
583.5 334.5 4.5 4.5 re
S 
BT
591 333.75 TD
0 0 0 rg
-0.183 Tc
(/O0)Tj 
ET
0.60001 0.2 0.39999 rg
584.25 320.25 3.75 3.75 rf
583.5 320.25 4.5 4.5 re
S 
BT
591 319.5 TD
0 0 0 rg
-0.27901 Tc
(/Ox)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 0 1523 a Fc(Figure)24 b(3:)35 b(P)n(erformance)22
b(impact)i(of)h(register)e(stealing)g(on)h(the)h(non-F)n(OR)-7
b(TRAN)24 b(SPEC2000)e(b)r(enc)n(hmarks.)35 b(H)p 3618
1523 25 4 v 30 w(MEAN)0 1606 y(is)25 b(the)g(harmonic)f(mean.)36
b(/O0)23 b(indicates)i(that)g(the)g(b)r(enc)n(hmark)g(w)n(as)e
(compiled)i(unoptimized)h(and)e(/Ox)g(indicates)h(that)0
1689 y(the)j(b)r(enc)n(hmark)f(w)n(as)f(compiled)i(with)g(full)g
(optimizations.)p 0 1826 3900 4 v 0 2043 a(Then)k(the)g(system)g(sets)f
(a)h(\015ag)f(so)g(that)h(no)f(thread)h(can)0 2126 y(en)n(ter)38
b(the)g(cac)n(he,)i(and)e(w)n(aits)g(for)g(all)g(threads)f(to)h(exit)0
2209 y(the)32 b(cac)n(he.)47 b(Due)32 b(to)f(this)h(high)f(o)n(v)n
(erhead,)f(man)n(y)h(or)g(all)0 2292 y(fragmen)n(ts)c(m)n(ust)i(b)r(e)g
(deleted)g(to)f(reduce)g(the)h(frequency)0 2375 y(of)35
b(cac)n(he)f(managemen)n(t.)59 b(Previous)33 b(systems)i(t)n(ypically)0
2458 y(\015ush)28 b(the)g(en)n(tire)f(cac)n(he)g([3)o(].)112
2541 y(Dividing)37 b(the)h(cac)n(he)e(in)n(to)h(segmen)n(ts)f(can)h
(help.)65 b(A)0 2624 y(data)23 b(structure)h(k)n(eeps)f(trac)n(k)g(of)h
(ho)n(w)f(man)n(y)g(threads)g(are)0 2707 y(in)35 b(eac)n(h)f(segmen)n
(t.)57 b(Threads)33 b(m)n(ust)i(c)n(hec)n(k)f(for)g(p)r(ermis-)0
2790 y(sion)24 b(b)r(efore)h(en)n(tering)f(a)g(segmen)n(t.)35
b(This)25 b(adds)g(o)n(v)n(erhead)0 2873 y(on)h(all)f(in)n(ter-segmen)n
(t)g(links.)36 b(When)26 b(ro)r(om)f(is)h(needed)g(in)0
2956 y(the)35 b(cac)n(he,)g(the)g(system)f(pic)n(ks)g(a)g(thread-free)f
(segmen)n(t)0 3039 y(and)i(prev)n(en)n(ts)g(other)g(threads)g(from)g
(en)n(tering)g(while)h(it)0 3122 y(deletes)k(some)g(or)g(all)g(of)h
(the)g(fragmen)n(ts)e(in)i(that)g(seg-)0 3205 y(men)n(t.)58
b(Ho)n(w)n(ev)n(er,)34 b(there)g(is)h(no)f(guaran)n(tee)f(that)h(a)h
(seg-)0 3288 y(men)n(t)25 b(can)g(b)r(e)h(found)f(that)g(has)g(no)g
(threads)f(in)h(it.)37 b(When)0 3371 y(no)h(thread-free)g(segmen)n(t)g
(can)g(b)r(e)h(found,)j(the)d(system)0 3454 y(m)n(ust)23
b(force)f(threads)g(out)h(of)f(a)h(segmen)n(t)f(using)g(the)h(strat-)0
3537 y(egy)k(for)g(single-segmen)n(t)f(cac)n(he)h(managemen)n(t.)0
3766 y Fd(4.2.2)105 b(Thread-Priv)-6 b(ate)35 b(Co)s(de)g(Cac)m(he)0
3903 y Fc(Thread-priv)-5 b(ate)29 b(cac)n(hes)g(ha)n(v)n(e)g(a)h(n)n
(um)n(b)r(er)f(of)i(attractiv)n(e)0 3986 y(adv)-5 b(an)n(tages)28
b(o)n(v)n(er)g(a)i(single)f(thread-shared)f(cac)n(he,)i(suc)n(h)0
4069 y(as)f(less)g(sync)n(hronization,)f(no)h(register)f(stealing)g
(needed)0 4152 y(for)c(thread-lo)r(cal)f(scratc)n(h)g(space)g(\(see)i
(Section)f(4.1\),)h(and)0 4235 y(m)n(uc)n(h)20 b(simpler)g(and)g(more)g
(e\016cien)n(t)g(cac)n(he)f(managemen)n(t.)0 4318 y(Their)43
b(only)g(disadv)-5 b(an)n(tage)41 b(is)i(the)h(space)e(duplication)0
4401 y(and)35 b(time)g(to)g(duplicate)g(fragmen)n(ts)f(that)i(are)e
(used)h(b)n(y)0 4484 y(m)n(ultiple)28 b(threads.)112
4567 y(Ho)n(w)40 b(m)n(uc)n(h)g(co)r(de)g(is)h(shared)e(among)g
(threads?)75 b(It)0 4650 y(dep)r(ends)31 b(on)e(the)i(application;)g
(in)f(a)g(w)n(eb)g(serv)n(er,)f(man)n(y)0 4733 y(threads)38
b(run)h(the)g(same)g(co)r(de.)70 b(Ho)n(w)n(ev)n(er,)40
b(in)g(a)e(desk-)0 4816 y(top)33 b(application,)h(threads)f(t)n
(ypically)f(p)r(erform)h(distinct)0 4899 y(tasks.)52
b(Studies)34 b(ha)n(v)n(e)e(sho)n(wn)g(that)h(nearly)f(all)h(instruc-)0
4982 y(tions)j(in)g(desktop)g(applications)f(are)g(executed)h(b)n(y)g
(one)0 5065 y(thread)h([16)o(].)65 b(W)-7 b(e)38 b(did)f(a)g(study)g
(using)g(our)f(system)h(in)0 5148 y(thread-shared)26
b(cac)n(he)h(mo)r(de.)37 b(W)-7 b(e)29 b(measured)d(the)j(n)n(um-)0
5231 y(b)r(er)37 b(of)g(fragmen)n(ts)f(that)h(are)f(executed)h(b)n(y)g
(more)f(than)0 5314 y(one)31 b(thread.)46 b(Note)31 b(that)g(it)g(do)r
(es)g(not)g(matter)g(ho)n(w)f(fre-)0 5397 y(quen)n(tly)42
b(executed)g(these)h(fragmen)n(ts)e(are.)80 b(The)42
b(only)0 5480 y(p)r(erformance)34 b(p)r(enalt)n(y)g(is)h(the)g(time)g
(and)g(space)f(to)g(du-)2050 2043 y(plicate)28 b(the)g(fragmen)n(ts.)38
b(In)29 b(fact,)f(once)g(they)h(are)e(dupli-)2050 2126
y(cated)c(there)g(are)g(more)g(opp)r(ortunities)g(for)g(optimization)
2050 2209 y(b)r(ecause)37 b(the)i(thread-priv)-5 b(ate)37
b(fragmen)n(ts)g(can)h(b)r(e)g(sp)r(e-)2050 2292 y(cialized)27
b(for)g(their)g(particular)g(thread.)2162 2375 y(Figure)47
b(4)g(sho)n(ws)f(the)i(p)r(ercen)n(tage)e(of)i(b)r(oth)g(basic)2050
2458 y(blo)r(c)n(k)29 b(fragmen)n(ts)f(and)i(trace)f(fragmen)n(ts)f
(that)i(are)f(used)2050 2541 y(b)n(y)i(more)h(than)g(one)g(thread.)49
b(The)32 b(\014gure)g(giv)n(es)f(results)2050 2624 y(for)g(the)h(four)g
(programs)d(describ)r(ed)j(in)g(Section)g(5.)49 b(The)2050
2707 y(\014rst)31 b(set)h(of)g(n)n(um)n(b)r(ers)f(are)g(for)h(the)g
(batc)n(h-st)n(yle)f(scenar-)2050 2790 y(ios.)j(These)21
b(scenarios)e(ha)n(v)n(e)i(tin)n(y)g(p)r(ercen)n(tages)f(of)h(shared)
2050 2873 y(fragmen)n(ts.)73 b(More)39 b(threads)h(are)f(created)g(and)
h(p)r(oten-)2050 2956 y(tially)31 b(more)g(co)r(de)h(shared)e(when)i
(these)g(desktop)f(appli-)2050 3039 y(cations)26 b(are)g(used)h(in)g(a)
f(more)h(in)n(teractiv)n(e)e(fashion.)37 b(Fig-)2050
3122 y(ure)25 b(4)f(giv)n(es)h(a)g(second)f(set)i(of)f(n)n(um)n(b)r
(ers)g(for)f(our)h(applica-)2050 3205 y(tions)30 b(when)g(used)g(in)g
(more)f(in)n(teractiv)n(e)g(scenarios.)43 b(F)-7 b(or)2050
3288 y(these)18 b(scenarios)f(the)i(n)n(um)n(b)r(er)g(of)f(threads)g
(created)g(b)n(y)h(the)2050 3371 y(application)30 b(increased)h(for)g
Fa(winword)e Fc(from)i(3)g(to)g(9)g(and)2050 3454 y(for)h
Fa(powerpnt)f Fc(from)i(4)f(to)i(5)f(\(the)h(others)e(remained)h(as)
2050 3537 y(listed)f(in)g(T)-7 b(able)32 b(2\).)50 b(The)32
b(p)r(ercen)n(tages)f(certainly)g(rose,)2050 3620 y(but)36
b(only)g(the)h(traces)e(in)h Fa(powerpnt)d Fc(rose)i(to)h(a)g
(signi\014-)2050 3703 y(can)n(t)20 b(p)r(ercen)n(tage.)33
b(This)21 b(matc)n(hes)f(previous)g(results)g([16)o(],)2050
3786 y(where)36 b(only)h Fa(powerpnt)c Fc(has)k(a)g(signi\014can)n(t)f
(fraction)g(of)2050 3869 y(instructions)28 b(executed)h(in)h(an)n(y)e
(thread)h(other)f(than)i(the)2050 3952 y(primary)c(thread.)2162
4035 y(W)-7 b(e)31 b(b)r(eliev)n(e)f(that)h(these)f(results)g(v)-5
b(alidate)31 b(a)f(thread-)2050 4118 y(priv)-5 b(ate)24
b(cac)n(he)f(strategy)-7 b(.)35 b(The)24 b(disadv)-5
b(an)n(tages)23 b(of)h(suc)n(h)g(a)2050 4201 y(strategy)h(are)h
(minimal)g(due)h(to)g(the)g(v)n(ery)e(small)i(amoun)n(t)2050
4284 y(of)e(co)r(de)h(shared)f(among)g(threads.)35 b(The)26
b(n)n(um)n(b)r(ers)g(in)g(the)2050 4367 y(next)d(section)f(are)f(for)i
(our)f(system)g(using)g(thread-priv)-5 b(ate)2050 4450
y(cac)n(hes.)2050 4688 y Fd(5)104 b(Exp)s(erimen)m(tal)34
b(Results)2050 4853 y Fc(W)-7 b(e)22 b(used)f(four)h(desktop)f
(applications)g(to)h(build)g(a)f(b)r(enc)n(h-)2050 4936
y(mark)32 b(suite,)k(describ)r(ed)d(in)h(T)-7 b(able)33
b(1.)55 b(These)33 b(scenarios)2050 5019 y(mo)r(del)22
b(long-running)f(batc)n(h)h(computations,)h(not)f(highly)2050
5102 y(in)n(teractiv)n(e)f(use.)36 b(Ho)n(w)n(ev)n(er,)22
b(it)h(is)g(exactly)f(in)h(these)g(long-)2050 5186 y(running)k
(computations)h(that)g(the)h(user)e(notices)h(dela)n(ys,)2050
5269 y(and)k(it)h(is)f(these)h(scenarios)d(that)j(are)f(most)g(w)n
(orth)n(while)2050 5352 y(targeting)18 b(with)i(dynamic)g
(optimization.)34 b(More)18 b(in)n(terac-)2050 5435 y(tiv)n(e)28
b(scenarios)f(are)h(hard)h(to)g(measure,)f(mask)g(our)g(slo)n(w-)p
eop
%%Page: 8 8
8 7 bop 228 1459 a @beginspecial 196 @llx 224 @lly 606
@urx 389 @ury 4100 @rwi @setspecial
%%BeginDocument: sharing.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 3
%%Creator: (\376\377)
%%CreationDate: (D:20011012142539)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 196 224 606 389
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

196 224 moveto
606 224 lineto
606 389 lineto
196 389 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial
[/N8/Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
196 224 410 165 re W n
1 1 1 rg
36 36 720 540 rf
186 211.5 420.75 187.5 rf
0.75 w
1 J
2 j
1 M
0 0 0 RG
233.25 384 m
516 384 l
516 256.5 l
233.25 256.5 l
233.25 384 l
h
S 
q
233.25 264.75 282.75 0.75 re
h
W n 
1 j
10 M
233.25 265.5 m
516 265.5 l
S 
Q
q
233.25 273.75 282.75 0.75 re
h
W n 
1 j
10 M
233.25 274.5 m
516 274.5 l
S 
Q
q
233.25 282.75 282.75 0.75 re
h
W n 
1 j
10 M
233.25 283.5 m
516 283.5 l
S 
Q
q
233.25 292.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 293.25 m
516 293.25 l
S 
Q
q
233.25 301.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 302.25 m
516 302.25 l
S 
Q
q
233.25 310.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 311.25 m
516 311.25 l
S 
Q
q
233.25 319.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 320.25 m
516 320.25 l
S 
Q
q
233.25 328.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 329.25 m
516 329.25 l
S 
Q
q
233.25 337.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 338.25 m
516 338.25 l
S 
Q
q
233.25 346.5 282.75 0.75 re
h
W n 
1 j
10 M
233.25 347.25 m
516 347.25 l
S 
Q
q
233.25 356.25 282.75 0.75 re
h
W n 
1 j
10 M
233.25 357 m
516 357 l
S 
Q
q
233.25 365.25 282.75 0.75 re
h
W n 
1 j
10 M
233.25 366 m
516 366 l
S 
Q
q
233.25 374.25 282.75 0.75 re
h
W n 
1 j
10 M
233.25 375 m
516 375 l
S 
Q
q
233.25 383.25 282.75 0.75 re
h
W n 
1 j
10 M
233.25 384 m
516 384 l
S 
Q
1 j
10 M
233.25 384 m
516 384 l
S 
516 384 m
516 256.5 l
S 
516 256.5 m
233.25 256.5 l
S 
233.25 256.5 m
233.25 384 l
S 
q
243 256.5 13.5 0.75 re
h
W n 
0.60001 0.60001 1 rg
243 257.25 m
255.75 257.25 l
255.75 256.5 l
243 256.5 l
243 257.25 l
h
b* 
Q
q
313.5 256.5 13.5 2.25 re
h
W n 
0.60001 0.60001 1 rg
313.5 258.75 m
326.25 258.75 l
326.25 256.5 l
313.5 256.5 l
313.5 258.75 l
h
b* 
Q
q
384.75 256.5 13.5 1.5 re
h
W n 
0.60001 0.60001 1 rg
384.75 258 m
397.5 258 l
397.5 256.5 l
384.75 256.5 l
384.75 258 l
h
b* 
Q
q
455.25 256.5 13.5 1.5 re
h
W n 
0.60001 0.60001 1 rg
455.25 258 m
468 258 l
468 256.5 l
455.25 256.5 l
455.25 258 l
h
b* 
Q
q
255.75 256.5 13.5 1.5 re
h
W n 
0.60001 0.2 0.39999 rg
255.75 258 m
268.5 258 l
268.5 256.5 l
255.75 256.5 l
255.75 258 l
h
b* 
Q
q
326.25 256.5 14.25 8.25 re
h
W n 
0.60001 0.2 0.39999 rg
326.25 264.75 m
339.75 264.75 l
339.75 256.5 l
326.25 256.5 l
326.25 264.75 l
h
b* 
Q
q
397.5 256.5 13.5 2.25 re
h
W n 
0.60001 0.2 0.39999 rg
397.5 258.75 m
410.25 258.75 l
410.25 256.5 l
397.5 256.5 l
397.5 258.75 l
h
b* 
Q
q
468 256.5 13.5 1.5 re
h
W n 
0.60001 0.2 0.39999 rg
468 258 m
480.75 258 l
480.75 256.5 l
468 256.5 l
468 258 l
h
b* 
Q
q
268.5 256.5 13.5 0.75 re
h
W n 
1 1 0.8 rg
268.5 257.25 m
281.25 257.25 l
281.25 256.5 l
268.5 256.5 l
268.5 257.25 l
h
b* 
Q
q
339.75 256.5 13.5 18.75 re
h
W n 
1 1 0.8 rg
339.75 275.25 m
352.5 275.25 l
352.5 256.5 l
339.75 256.5 l
339.75 275.25 l
h
b* 
Q
q
410.25 256.5 13.5 19.5 re
h
W n 
1 1 0.8 rg
410.25 276 m
423 276 l
423 256.5 l
410.25 256.5 l
410.25 276 l
h
b* 
Q
q
480.75 256.5 13.5 11.25 re
h
W n 
1 1 0.8 rg
480.75 267.75 m
493.5 267.75 l
493.5 256.5 l
480.75 256.5 l
480.75 267.75 l
h
b* 
Q
q
281.25 256.5 13.5 1.5 re
h
W n 
0 0.8 1 rg
281.25 258 m
294 258 l
294 256.5 l
281.25 256.5 l
281.25 258 l
h
b* 
Q
q
352.5 256.5 13.5 39 re
h
W n 
0 0.8 1 rg
352.5 295.5 m
365.25 295.5 l
365.25 256.5 l
352.5 256.5 l
352.5 295.5 l
h
b* 
Q
q
423 256.5 13.5 120.75 re
h
W n 
0 0.8 1 rg
423 377.25 m
435.75 377.25 l
435.75 256.5 l
423 256.5 l
423 377.25 l
h
b* 
Q
q
493.5 256.5 13.5 17.25 re
h
W n 
0 0.8 1 rg
493.5 273.75 m
506.25 273.75 l
506.25 256.5 l
493.5 256.5 l
493.5 273.75 l
h
b* 
Q
233.25 384 m
233.25 256.5 l
S 
231 256.5 m
233.25 256.5 l
S 
231 265.5 m
233.25 265.5 l
S 
231 274.5 m
233.25 274.5 l
S 
231 283.5 m
233.25 283.5 l
S 
231 293.25 m
233.25 293.25 l
S 
231 302.25 m
233.25 302.25 l
S 
231 311.25 m
233.25 311.25 l
S 
231 320.25 m
233.25 320.25 l
S 
231 329.25 m
233.25 329.25 l
S 
231 338.25 m
233.25 338.25 l
S 
231 347.25 m
233.25 347.25 l
S 
231 357 m
233.25 357 l
S 
231 366 m
233.25 366 l
S 
231 375 m
233.25 375 l
S 
231 384 m
233.25 384 l
S 
233.25 256.5 m
516 256.5 l
S 
233.25 254.25 m
233.25 256.5 l
S 
303.75 254.25 m
303.75 256.5 l
S 
375 254.25 m
375 256.5 l
S 
445.5 254.25 m
445.5 256.5 l
S 
516 254.25 m
516 256.5 l
S 
BT
215.25 253.5 TD
0 0 0 rg
/N8 8.25 Tf
0.0394 Tc
0 Tw
(0%)Tj 
0 9 TD
(2%)Tj 
T*
(4%)Tj 
T*
(6%)Tj 
0 9.75 TD
(8%)Tj 
-4.5 9 TD
-0.00279 Tc
(10%)Tj 
0 9 TD
(12%)Tj 
T*
(14%)Tj 
T*
(16%)Tj 
T*
(18%)Tj 
T*
(20%)Tj 
0 9.75 TD
(22%)Tj 
0 9 TD
(24%)Tj 
T*
(26%)Tj 
T*
(28%)Tj 
41.25 -139.5 TD
0.05569 Tc
(acrord32)Tj 
77.25 0 TD
0.0489 Tc
(excel)Tj 
63.75 0 TD
0.1647 Tc
(powerpnt)Tj 
71.25 0 TD
0.3925 Tc
(winword)Tj 
-110.25 -15.75 TD
-0.05231 Tc
(Benchmark)Tj 
ET
BT
0 1 -1 0 204.75 285 Tm
-0.05161 Tc
0.0081 Tw
(Shared Fragments)Tj 
ET
1 1 1 rg
525 291.75 78 56.25 rf
524.25 291.75 78.75 57 re
S 
0.60001 0.60001 1 rg
528 339 3.75 3.75 rf
527.25 339 4.5 4.5 re
S 
BT
534.75 338.25 TD
0 0 0 rg
-0.0988 Tc
0.05521 Tw
(Batch: Blocks)Tj 
ET
0.60001 0.2 0.39999 rg
528 324.75 3.75 3.75 rf
527.25 324.75 4.5 4.5 re
S 
BT
534.75 324 TD
0 0 0 rg
-0.05009 Tc
0.00661 Tw
(Batch: Traces)Tj 
ET
1 1 0.8 rg
528 310.5 3.75 3.75 rf
527.25 310.5 4.5 4.5 re
S 
BT
534.75 309.75 TD
0 0 0 rg
-0.09151 Tc
0.048 Tw
(Interactive: Blocks)Tj 
ET
0 0.8 1 rg
528 296.25 3.75 3.75 rf
527.25 296.25 4.5 4.5 re
S 
BT
534.75 295.5 TD
0 0 0 rg
-0.05901 Tc
0 Tw
(Interactive:Traces)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 0 1565 a Fc(Figure)33 b(4:)49 b(P)n(ercen)n(tage)31
b(of)j(b)r(oth)h(basic)e(blo)r(c)n(k)g(fragmen)n(ts)g(and)g(trace)g
(fragmen)n(ts)g(that)h(are)f(used)h(b)n(y)g(more)f(than)g(one)0
1648 y(thread,)22 b(for)f(t)n(w)n(o)g(di\013eren)n(t)h(scenarios:)32
b(a)21 b(batc)n(h)g(scenario)f(and)i(an)f(in)n(teractiv)n(e)f
(scenario.)34 b(F)-7 b(or)21 b(the)h(in)n(teractiv)n(e)e(scenarios,)0
1731 y Fa(winword)28 b Fc(increased)i(its)i(threads)e(to)h(9)g(and)g
Fa(powerpnt)d Fc(increased)i(its)h(threads)f(to)h(5.)47
b(Otherwise)31 b(the)g(threads)g(are)f(as)0 1814 y(listed)e(in)g(T)-7
b(able)27 b(2.)p 14 2030 3817 4 v 12 2154 4 125 v 59
2117 a(Program)p 439 2154 V 109 w(Benc)n(hmark)f(description)p
3829 2154 V 14 2158 3817 4 v 12 2353 4 196 v 59 2245
a(acrord32)p 439 2353 V 110 w(Adob)r(e)h(Acrobat)g(Reader)f(4.0:)36
b(loads)27 b(a)f(6.8MB)h(\(956)f(page\))h(PDF)g(do)r(cumen)n(t)h(and)f
(searc)n(hes)f(for)g(the)486 2328 y(w)n(ord)g(\\b)r(ogus")g(\(whic)n(h)
i(is)f(not)h(presen)n(t\).)p 3829 2353 V 14 2356 3817
4 v 12 2551 4 196 v 59 2443 a(excel)p 439 2551 V 249
w(Microsoft)20 b(Excel)h(9.0:)33 b(loads)20 b(a)i(2.4MB)e(spreadsheet)h
(full)h(of)f(in)n(terdep)r(enden)n(t)h(form)n(ulae)e(and)i(mo)r
(di\014es)486 2526 y(one)27 b(cell,)g(triggering)f(extensiv)n(e)h
(re-calculations.)p 3829 2551 V 14 2554 3817 4 v 12 2750
4 196 v 59 2642 a(p)r(o)n(w)n(erpn)n(t)p 439 2750 V 89
w(Microsoft)c(P)n(o)n(w)n(erP)n(oin)n(t)e(9.0:)34 b(loads)23
b(an)h(84-slide)f(\(455KB\))g(presen)n(tation)g(and)i(adds)e(text)i(to)
f(the)h(title)486 2725 y(of)i(ev)n(ery)f(slide.)p 3829
2750 V 14 2753 3817 4 v 12 2948 4 196 v 59 2840 a(win)n(w)n(ord)p
439 2948 V 121 w(Microsoft)j(W)-7 b(ord)30 b(9.0:)42
b(loads)29 b(a)h(1.6MB)g(do)r(cumen)n(t,)h(replaces)f('a')g(with)h
('o',)g(then)g(\\selects)e(all")h(and)486 2923 y(c)n(hanges)c(the)i
(fon)n(t)f(t)n(yp)r(e)h(and)g(size.)p 3829 2948 V 14
2951 3817 4 v 1045 3117 a(T)-7 b(able)28 b(1:)36 b(Descriptions)27
b(of)h(our)f(desktop)g(b)r(enc)n(hmarks.)p 0 3237 3900
4 v 0 3454 a(do)n(wns,)f(and)f(giv)n(e)g(few)n(er)g(opp)r(ortunities)h
(for)f(meaningful)0 3537 y(p)r(erformance)i(gains.)112
3620 y(T)-7 b(able)25 b(2)f(giv)n(es)g(statistics)g(for)h(eac)n(h)f(of)
g(the)i(programs,)0 3703 y(including)33 b(application)e(size,)j(n)n(um)
n(b)r(er)e(of)h(threads,)g(and)0 3786 y(the)c(n)n(um)n(b)r(er)g(of)g
(basic)f(blo)r(c)n(k)h(and)f(trace)g(fragmen)n(ts)g(our)0
3869 y(system)k(creates)f(when)h(executing)g(eac)n(h)f(program.)48
b(T)-7 b(a-)0 3952 y(ble)21 b(3)f(lists)g(statistics)g(for)g(the)h
(sizes)f(of)h(these)f(basic)g(blo)r(c)n(ks)0 4035 y(and)35
b(traces.)58 b(Note)35 b(that)g(these)g(sizes)g(include)g(the)h
Fb(exit)0 4118 y(stubs)f Fc(that)i(are)e(added)h(to)f(the)i(end)f(of)g
(eac)n(h)f(fragmen)n(t)0 4201 y(and)f(so)f(are)g(larger)f(than)i(the)g
(sizes)f(of)h(basic)f(blo)r(c)n(ks)g(in)0 4284 y(the)28
b(original)e(application)h(co)r(de.)112 4367 y(The)41
b(\014nal)h(column)f(of)g(T)-7 b(able)41 b(2)g(giv)n(es)f(the)h(p)r
(erfor-)0 4450 y(mance)19 b(of)g(eac)n(h)g(b)r(enc)n(hmark)g(with)h(an)
f(unlimited)h(thread-)0 4533 y(priv)-5 b(ate)28 b(cac)n(he)f(size.)38
b(F)-7 b(or)28 b(comparison,)e(Figure)i(5)g(sho)n(ws)0
4616 y(the)38 b(p)r(erformance)f(of)g(our)g(system)h(on)f(the)h
(SPEC2000)0 4699 y(b)r(enc)n(hmarks)27 b([24)o(],)h(also)e(with)i
(unlimited)h(cac)n(he)d(space.)112 4782 y(W)-7 b(e)37
b(used)f(program)f(coun)n(ter)g(sampling)h(to)h(analyze)0
4865 y(the)e(time)h(sp)r(en)n(t)f(in)h(the)f(v)-5 b(arious)34
b(p)r(ortions)g(of)h(our)f(sys-)0 4948 y(tem.)56 b(F)-7
b(or)33 b(the)h(SPEC2000)d(b)r(enc)n(hmarks,)j(from)f(0\045)h(to)0
5031 y(2\045)h(of)g(execution)g(time)h(is)f(sp)r(en)n(t)g(in)g(our)g
(system)g(co)r(de)0 5114 y(itself)43 b(\(the)f(part)g(of)g(the)g
(system)g(on)g(the)g(top)g(half)g(of)0 5197 y(Figure)f(1\).)79
b(Essen)n(tially)40 b(all)h(time)h(w)n(as)e(sp)r(en)n(t)i(in)g(the)0
5280 y(co)r(de)c(cac)n(he.)70 b(Of)38 b(this)h(time,)j(up)d(to)g
(17\045)f(is)g(sp)r(en)n(t)h(in)0 5363 y(the)g(indirect)f(branc)n(h)g
(lo)r(okup,)i(and)e(up)h(to)f(7\045)g(in)h(the)0 5446
y(\\trace)i(branc)n(h)h(tak)n(en")g(instructions.)81
b(According)42 b(to)2050 3454 y(these)22 b(n)n(um)n(b)r(ers,)h(w)n(e)e
(should)h(b)r(e)h(getting)f(at)g(w)n(orst)f(a)h(26\045)2050
3537 y(slo)n(wdo)n(wn,)35 b(y)n(et)h(w)n(e)f(ha)n(v)n(e)f(close)g(to)i
(a)e(160\045)h(slo)n(wdo)n(wn)2050 3620 y(for)24 b Fa(crafty)p
Fc(.)34 b(W)-7 b(e)25 b(are)f(in)h(the)g(pro)r(cess)f(of)h(examining)f
(our)2050 3703 y(cac)n(he)39 b(and)h(branc)n(h)f(prediction)h(b)r(eha)n
(vior)e(to)i(try)g(and)2050 3786 y(solv)n(e)35 b(this)j(problem.)64
b(W)-7 b(e)38 b(b)r(eliev)n(e)f(that)g(w)n(e)f(ha)n(v)n(e)g(run)2050
3869 y(in)n(to)e(a)h(di\016cult)h(c)n(hallenge)d(of)i(ac)n(hieving)f(p)
r(erformance)2050 3952 y(on)25 b(mo)r(dern)g(pro)r(cessors:)33
b(the)26 b(hardw)n(are)d(is)i(aggressiv)n(ely)2050 4035
y(tuned)19 b(to)n(w)n(ard)f(a)g(certain)h(t)n(yp)r(e)g(of)g(co)r(de.)34
b(Our)18 b(co)r(de)h(cac)n(he)2050 4118 y(lo)r(oks)31
b(di\013eren)n(t)i(from)f(the)g(co)r(de)g(that)h(the)g(hardw)n(are)d
(is)2050 4201 y(optimized)36 b(for.)60 b(F)-7 b(or)35
b(one)h(thing,)i(w)n(e)d(ha)n(v)n(e)g(eliminated)2050
4284 y(calls)30 b(and)h(turned)g(returns)g(in)n(to)g(indirect)g(jumps.)
48 b(P)n(en-)2050 4367 y(tium)26 b(I)r(I)g(and)g(later)f(pro)r(cessors)
e(ha)n(v)n(e)i(a)g(return)h(stac)n(k)f(for)2050 4450
y(predicting)18 b(targets)g(of)h(returns.)33 b(Our)18
b(exp)r(erimen)n(ts)h(sho)n(w)2050 4533 y(that)24 b(this)g(return)f
(stac)n(k)g(is)h(critical)f(in)i(pro)n(viding)d(p)r(erfor-)2050
4616 y(mance)28 b(for)g(co)r(de)g(with)h(a)f(lot)g(of)h(pro)r(cedure)e
(calls,)h(y)n(et)h(it)2050 4699 y(is)c(useless)g(inside)g(our)g(co)r
(de)g(cac)n(he.)35 b(W)-7 b(e)26 b(are)f(attempting)2050
4782 y(to)i(address)g(this)h(problem)f(b)n(y)g(mo)r(difying)h(our)f
(handling)2050 4865 y(of)37 b(calls)g(and)g(returns)g(to)g(mak)n(e)g
(use)g(of)g(the)h(hardw)n(are)2050 4948 y(return)27 b(stac)n(k.)2162
5031 y(The)32 b(Windo)n(ws)g(b)r(enc)n(hmarks)g(ha)n(v)n(e)f(similar)h
(results,)2050 5114 y(except)46 b(that)h(the)h(o)n(v)n(erhead)c(of)j
(our)f(system)h(co)r(de)f(is)2050 5197 y(higher,)24 b(up)h(to)f
(10\045.)35 b(Muc)n(h)25 b(of)f(this)h(extra)f(time)g(is)h(sp)r(en)n(t)
2050 5280 y(deco)r(ding)d(and)i(enco)r(ding)e(IA-32)h(instructions.)35
b(W)-7 b(e)23 b(plan)2050 5363 y(to)31 b(do)f(some)h(signi\014can)n(t)f
(p)r(erformance)g(tuning)i(on)f(that)2050 5446 y(part)c(of)g(our)g
(system.)p eop
%%Page: 9 9
9 8 bop 361 256 3124 4 v 359 381 4 125 v 405 343 a Fc(Program)p
785 381 V 109 w(.EXE)27 b(Size)p 1244 381 V 90 w(DLLs)p
1534 381 V 89 w(T)-7 b(otal)27 b(Size)p 1985 381 V 90
w(Threads)p 2371 381 V 101 w(Blo)r(c)n(ks)p 2710 381
V 88 w(T)-7 b(races)p 3033 381 V 89 w(Slo)n(wdo)n(wn)p
3482 381 V 361 384 3124 4 v 359 508 4 125 v 405 471 a(acrord32)p
785 508 V 373 w(2.3)p 1244 508 V 206 w(22)p 1534 508
V 303 w(12.3)p 1985 508 V 342 w(2)p 2371 508 V 131 w(85366)p
2710 508 V 155 w(6541)p 3033 508 V 300 w(1.90)p 3482
508 V 361 512 3124 4 v 359 636 4 125 v 405 599 a(excel)p
785 636 V 512 w(7.2)p 1244 636 V 247 w(9)p 1534 636 V
304 w(16.4)p 1985 636 V 342 w(3)p 2371 636 V 131 w(79741)p
2710 636 V 155 w(3108)p 3033 636 V 300 w(1.59)p 3482
636 V 361 640 3124 4 v 359 764 4 125 v 405 727 a(p)r(o)n(w)n(erpn)n(t)p
785 764 V 352 w(4.3)p 1244 764 V 206 w(10)p 1534 764
V 303 w(14.1)p 1985 764 V 342 w(4)p 2371 764 V 90 w(146579)p
2710 764 V 112 w(12057)p 3033 764 V 300 w(1.66)p 3482
764 V 361 767 3124 4 v 359 892 4 125 v 405 855 a(win)n(w)n(ord)p
785 892 V 384 w(8.8)p 1244 892 V 206 w(13)p 1534 892
V 303 w(21.3)p 1985 892 V 342 w(3)p 2371 892 V 131 w(97072)p
2710 892 V 155 w(6505)p 3033 892 V 300 w(1.61)p 3482
892 V 361 895 3124 4 v 0 1065 a(T)g(able)24 b(2:)35 b(Statistics)25
b(for)f(our)g(b)r(enc)n(hmarks:)34 b(the)25 b(static)g(size)f(of)g(the)
h(.EXE)f(\014le)h(\(in)g(MB\),)g(the)g(n)n(um)n(b)r(er)g(of)f(DLLs)h
(loaded,)0 1148 y(the)36 b(sum)f(of)g(the)h(sizes)f(of)g(the)h(.EXE)e
(and)h(all)g(DLLs)h(loaded)e(b)n(y)h(the)h(program)d(\(in)j(MB\),)g
(the)f(n)n(um)n(b)r(er)g(of)h(threads,)0 1231 y(the)f(n)n(um)n(b)r(er)g
(of)f(unique)h(basic)g(blo)r(c)n(ks)f(executed,)i(the)g(n)n(um)n(b)r
(er)e(of)h(traces)f(created,)h(and)g(the)g(slo)n(wdo)n(wn)e(vs.)59
b(nativ)n(e)0 1314 y(execution)27 b(using)h(a)f(thread-priv)-5
b(ate)26 b(cac)n(he)h(of)g(unlimited)i(size.)p 549 1815
2747 4 v 547 1939 4 125 v 594 1902 a(Program)p 974 1939
V 974 1939 V 171 w(Basic)d(Blo)r(c)n(k)h(Sizes)h(\(Bytes\))p
2113 1939 V 2113 1939 V 347 w(T)-7 b(race)26 b(Sizes)i(\(Bytes\))p
3294 1939 V 976 1943 2321 4 v 547 2064 4 125 v 974 2064
V 1020 2027 a(Min)p 1209 2064 V 95 w(Max)p 1465 2064
V 89 w(Mean)p 1755 2064 V 89 w(StdDev)p 2113 2064 V 91
w(Min)p 2348 2064 V 136 w(Max)p 2645 2064 V 89 w(Mean)p
2936 2064 V 89 w(StdDev)p 3294 2064 V 549 2067 2747 4
v 547 2192 4 125 v 594 2154 a(acrord32)p 974 2192 V 172
w(27)p 1209 2192 V 88 w(4034)p 1465 2192 V 141 w(55.3)p
1755 2192 V 209 w(30.5)p 2113 2192 V 151 w(27)p 2348
2192 V 89 w(23500)p 2645 2192 V 98 w(179.2)p 2936 2192
V 168 w(342.1)p 3294 2192 V 549 2195 2747 4 v 547 2320
4 125 v 594 2282 a(excel)p 974 2320 V 311 w(27)p 1209
2320 V 88 w(1589)p 1465 2320 V 141 w(53.1)p 1755 2320
V 209 w(22.3)p 2113 2320 V 151 w(30)p 2348 2320 V 130
w(2971)p 2645 2320 V 99 w(175.0)p 2936 2320 V 168 w(181.2)p
3294 2320 V 549 2323 2747 4 v 547 2447 4 125 v 594 2410
a(p)r(o)n(w)n(erpn)n(t)p 974 2447 V 151 w(27)p 1209 2447
V 88 w(2315)p 1465 2447 V 141 w(53.4)p 1755 2447 V 209
w(23.4)p 2113 2447 V 151 w(27)p 2348 2447 V 130 w(5881)p
2645 2447 V 99 w(172.1)p 2936 2447 V 168 w(178.6)p 3294
2447 V 549 2451 2747 4 v 547 2575 4 125 v 594 2538 a(win)n(w)n(ord)p
974 2575 V 183 w(27)p 1209 2575 V 88 w(2821)p 1465 2575
V 141 w(54.2)p 1755 2575 V 209 w(31.2)p 2113 2575 V 151
w(27)p 2348 2575 V 130 w(2873)p 2645 2575 V 99 w(160.8)p
2936 2575 V 168 w(163.0)p 3294 2575 V 549 2579 2747 4
v 0 2749 a(T)-7 b(able)27 b(3:)36 b(Statistics)27 b(for)f(the)i(sizes)e
(\(in)i(b)n(ytes\))e(of)h(basic)g(blo)r(c)n(ks)f(and)h(traces)f(in)h
(our)f(b)r(enc)n(hmarks.)36 b(These)26 b(sizes)h(include)0
2832 y(the)e(exit)g(stubs)g(that)g(are)f(added)g(to)h(the)g(end)g(of)f
(eac)n(h)g(fragmen)n(t.)35 b(Eac)n(h)24 b(exit)h(stub)g(is)g(15)e(b)n
(ytes)i(\(3)f(5-b)n(yte)g(instructions\).)190 4933 y
@beginspecial 191 @llx 211 @lly 610 @urx 403 @ury 4190
@rwi @setspecial
%%BeginDocument: spec.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 3
%%Creator: (\376\377)
%%CreationDate: (D:20011011160451)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 191 211 610 403
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

191 211 moveto
610 211 lineto
610 403 lineto
191 403 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial
[/N8/Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
191 211 419 192 re W n
1 1 1 rg
36 36 720 540 rf
181.5 198.75 429 213.75 rf
0.75 w
1 J
2 j
1 M
0 0 0 RG
223.5 397.5 m
573 397.5 l
573 262.5 l
223.5 262.5 l
223.5 397.5 l
h
S 
q
223.5 272.25 349.5 0.75 re
h
W n 
1 j
10 M
223.5 273 m
573 273 l
S 
Q
q
223.5 282.75 349.5 0.75 re
h
W n 
1 j
10 M
223.5 283.5 m
573 283.5 l
S 
Q
q
223.5 293.25 349.5 0.75 re
h
W n 
1 j
10 M
223.5 294 m
573 294 l
S 
Q
q
223.5 303 349.5 0.75 re
h
W n 
1 j
10 M
223.5 303.75 m
573 303.75 l
S 
Q
q
223.5 313.5 349.5 0.75 re
h
W n 
1 j
10 M
223.5 314.25 m
573 314.25 l
S 
Q
q
223.5 324 349.5 0.75 re
h
W n 
1 j
10 M
223.5 324.75 m
573 324.75 l
S 
Q
q
223.5 334.5 349.5 0.75 re
h
W n 
1 j
10 M
223.5 335.25 m
573 335.25 l
S 
Q
q
223.5 345 349.5 0.75 re
h
W n 
1 j
10 M
223.5 345.75 m
573 345.75 l
S 
Q
q
223.5 355.5 349.5 0.75 re
h
W n 
1 j
10 M
223.5 356.25 m
573 356.25 l
S 
Q
q
223.5 365.25 349.5 0.75 re
h
W n 
1 j
10 M
223.5 366 m
573 366 l
S 
Q
q
223.5 375.75 349.5 0.75 re
h
W n 
1 j
10 M
223.5 376.5 m
573 376.5 l
S 
Q
q
223.5 386.25 349.5 0.75 re
h
W n 
1 j
10 M
223.5 387 m
573 387 l
S 
Q
q
223.5 396.75 349.5 0.75 re
h
W n 
1 j
10 M
223.5 397.5 m
573 397.5 l
S 
Q
1 j
10 M
223.5 397.5 m
573 397.5 l
S 
573 397.5 m
573 262.5 l
S 
573 262.5 m
223.5 262.5 l
S 
223.5 262.5 m
223.5 397.5 l
S 
q
228 262.5 7.5 51.75 re
h
W n 
0.60001 0.60001 1 rg
228 314.25 m
234.75 314.25 l
234.75 262.5 l
228 262.5 l
228 314.25 l
h
b* 
Q
q
249.75 262.5 7.5 59.25 re
h
W n 
0.60001 0.60001 1 rg
249.75 321.75 m
256.5 321.75 l
256.5 262.5 l
249.75 262.5 l
249.75 321.75 l
h
b* 
Q
q
271.5 262.5 7.5 114.75 re
h
W n 
0.60001 0.60001 1 rg
271.5 377.25 m
278.25 377.25 l
278.25 262.5 l
271.5 262.5 l
271.5 377.25 l
h
b* 
Q
q
293.25 262.5 7.5 102.75 re
h
W n 
0.60001 0.60001 1 rg
293.25 365.25 m
300 365.25 l
300 262.5 l
293.25 262.5 l
293.25 365.25 l
h
b* 
Q
q
315.75 262.5 7.5 54.75 re
h
W n 
0.60001 0.60001 1 rg
315.75 317.25 m
322.5 317.25 l
322.5 262.5 l
315.75 262.5 l
315.75 317.25 l
h
b* 
Q
q
337.5 262.5 7.5 87.75 re
h
W n 
0.60001 0.60001 1 rg
337.5 350.25 m
344.25 350.25 l
344.25 262.5 l
337.5 262.5 l
337.5 350.25 l
h
b* 
Q
q
359.25 262.5 7.5 72 re
h
W n 
0.60001 0.60001 1 rg
359.25 334.5 m
366 334.5 l
366 262.5 l
359.25 262.5 l
359.25 334.5 l
h
b* 
Q
q
381 262.5 7.5 61.5 re
h
W n 
0.60001 0.60001 1 rg
381 324 m
387.75 324 l
387.75 262.5 l
381 262.5 l
381 324 l
h
b* 
Q
q
402.75 262.5 7.5 58.5 re
h
W n 
0.60001 0.60001 1 rg
402.75 321 m
409.5 321 l
409.5 262.5 l
402.75 262.5 l
402.75 321 l
h
b* 
Q
q
424.5 262.5 7.5 69.75 re
h
W n 
0.60001 0.60001 1 rg
424.5 332.25 m
431.25 332.25 l
431.25 262.5 l
424.5 262.5 l
424.5 332.25 l
h
b* 
Q
q
446.25 262.5 7.5 78 re
h
W n 
0.60001 0.60001 1 rg
446.25 340.5 m
453 340.5 l
453 262.5 l
446.25 262.5 l
446.25 340.5 l
h
b* 
Q
q
468 262.5 7.5 93.75 re
h
W n 
0.60001 0.60001 1 rg
468 356.25 m
474.75 356.25 l
474.75 262.5 l
468 262.5 l
468 356.25 l
h
b* 
Q
q
490.5 262.5 7.5 60.75 re
h
W n 
0.60001 0.60001 1 rg
490.5 323.25 m
497.25 323.25 l
497.25 262.5 l
490.5 262.5 l
490.5 323.25 l
h
b* 
Q
q
512.25 262.5 7.5 90.75 re
h
W n 
0.60001 0.60001 1 rg
512.25 353.25 m
519 353.25 l
519 262.5 l
512.25 262.5 l
512.25 353.25 l
h
b* 
Q
q
534 262.5 7.5 61.5 re
h
W n 
0.60001 0.60001 1 rg
534 324 m
540.75 324 l
540.75 262.5 l
534 262.5 l
534 324 l
h
b* 
Q
q
555.75 262.5 7.5 70.5 re
h
W n 
0.60001 0.60001 1 rg
555.75 333 m
562.5 333 l
562.5 262.5 l
555.75 262.5 l
555.75 333 l
h
b* 
Q
q
234.75 262.5 6.75 51.75 re
h
W n 
0.60001 0.2 0.39999 rg
234.75 314.25 m
240.75 314.25 l
240.75 262.5 l
234.75 262.5 l
234.75 314.25 l
h
b* 
Q
q
256.5 262.5 6.75 65.25 re
h
W n 
0.60001 0.2 0.39999 rg
256.5 327.75 m
262.5 327.75 l
262.5 262.5 l
256.5 262.5 l
256.5 327.75 l
h
b* 
Q
q
278.25 262.5 6.75 132.75 re
h
W n 
0.60001 0.2 0.39999 rg
278.25 395.25 m
284.25 395.25 l
284.25 262.5 l
278.25 262.5 l
278.25 395.25 l
h
b* 
Q
q
300 262.5 7.5 88.5 re
h
W n 
0.60001 0.2 0.39999 rg
300 351 m
306.75 351 l
306.75 262.5 l
300 262.5 l
300 351 l
h
b* 
Q
q
322.5 262.5 6.75 57 re
h
W n 
0.60001 0.2 0.39999 rg
322.5 319.5 m
328.5 319.5 l
328.5 262.5 l
322.5 262.5 l
322.5 319.5 l
h
b* 
Q
q
344.25 262.5 6.75 111.75 re
h
W n 
0.60001 0.2 0.39999 rg
344.25 374.25 m
350.25 374.25 l
350.25 262.5 l
344.25 262.5 l
344.25 374.25 l
h
b* 
Q
q
366 262.5 6.75 82.5 re
h
W n 
0.60001 0.2 0.39999 rg
366 345 m
372 345 l
372 262.5 l
366 262.5 l
366 345 l
h
b* 
Q
q
387.75 262.5 6.75 65.25 re
h
W n 
0.60001 0.2 0.39999 rg
387.75 327.75 m
393.75 327.75 l
393.75 262.5 l
387.75 262.5 l
387.75 327.75 l
h
b* 
Q
q
409.5 262.5 6.75 61.5 re
h
W n 
0.60001 0.2 0.39999 rg
409.5 324 m
415.5 324 l
415.5 262.5 l
409.5 262.5 l
409.5 324 l
h
b* 
Q
q
431.25 262.5 6.75 72 re
h
W n 
0.60001 0.2 0.39999 rg
431.25 334.5 m
437.25 334.5 l
437.25 262.5 l
431.25 262.5 l
431.25 334.5 l
h
b* 
Q
q
453 262.5 6.75 85.5 re
h
W n 
0.60001 0.2 0.39999 rg
453 348 m
459 348 l
459 262.5 l
453 262.5 l
453 348 l
h
b* 
Q
q
474.75 262.5 7.5 118.5 re
h
W n 
0.60001 0.2 0.39999 rg
474.75 381 m
481.5 381 l
481.5 262.5 l
474.75 262.5 l
474.75 381 l
h
b* 
Q
q
497.25 262.5 6.75 62.25 re
h
W n 
0.60001 0.2 0.39999 rg
497.25 324.75 m
503.25 324.75 l
503.25 262.5 l
497.25 262.5 l
497.25 324.75 l
h
b* 
Q
q
519 262.5 6.75 100.5 re
h
W n 
0.60001 0.2 0.39999 rg
519 363 m
525 363 l
525 262.5 l
519 262.5 l
519 363 l
h
b* 
Q
q
540.75 262.5 6.75 65.25 re
h
W n 
0.60001 0.2 0.39999 rg
540.75 327.75 m
546.75 327.75 l
546.75 262.5 l
540.75 262.5 l
540.75 327.75 l
h
b* 
Q
q
562.5 262.5 6.75 75 re
h
W n 
0.60001 0.2 0.39999 rg
562.5 337.5 m
568.5 337.5 l
568.5 262.5 l
562.5 262.5 l
562.5 337.5 l
h
b* 
Q
223.5 397.5 m
223.5 262.5 l
S 
221.25 262.5 m
223.5 262.5 l
S 
221.25 273 m
223.5 273 l
S 
221.25 283.5 m
223.5 283.5 l
S 
221.25 294 m
223.5 294 l
S 
221.25 303.75 m
223.5 303.75 l
S 
221.25 314.25 m
223.5 314.25 l
S 
221.25 324.75 m
223.5 324.75 l
S 
221.25 335.25 m
223.5 335.25 l
S 
221.25 345.75 m
223.5 345.75 l
S 
221.25 356.25 m
223.5 356.25 l
S 
221.25 366 m
223.5 366 l
S 
221.25 376.5 m
223.5 376.5 l
S 
221.25 387 m
223.5 387 l
S 
221.25 397.5 m
223.5 397.5 l
S 
223.5 262.5 m
573 262.5 l
S 
223.5 260.25 m
223.5 262.5 l
S 
245.25 260.25 m
245.25 262.5 l
S 
267 260.25 m
267 262.5 l
S 
288.75 260.25 m
288.75 262.5 l
S 
311.25 260.25 m
311.25 262.5 l
S 
333 260.25 m
333 262.5 l
S 
354.75 260.25 m
354.75 262.5 l
S 
376.5 260.25 m
376.5 262.5 l
S 
398.25 260.25 m
398.25 262.5 l
S 
420 260.25 m
420 262.5 l
S 
441.75 260.25 m
441.75 262.5 l
S 
463.5 260.25 m
463.5 262.5 l
S 
486 260.25 m
486 262.5 l
S 
507.75 260.25 m
507.75 262.5 l
S 
529.5 260.25 m
529.5 262.5 l
S 
551.25 260.25 m
551.25 262.5 l
S 
573 260.25 m
573 262.5 l
S 
BT
206.25 259.5 TD
0 0 0 rg
/N8 8.25 Tf
-0.07249 Tc
0 Tw
(0.0)Tj 
0 10.5 TD
(0.2)Tj 
T*
(0.4)Tj 
T*
(0.6)Tj 
0 9.75 TD
(0.8)Tj 
0 10.5 TD
(1.0)Tj 
T*
(1.2)Tj 
T*
(1.4)Tj 
T*
(1.6)Tj 
T*
(1.8)Tj 
0 9.75 TD
(2.0)Tj 
0 10.5 TD
(2.2)Tj 
T*
(2.4)Tj 
T*
(2.6)Tj 
ET
BT
0 1 -1 0 237.75 246.75 Tm
0.0408 Tc
(art)Tj 
ET
BT
0 1 -1 0 259.5 237 Tm
-0.0435 Tc
(bzip2)Tj 
ET
BT
0 1 -1 0 281.25 234.75 Tm
0.01311 Tc
(crafty)Tj 
ET
BT
0 1 -1 0 303 243 Tm
-0.08701 Tc
(eon)Tj 
ET
BT
0 1 -1 0 324.75 230.25 Tm
0.11501 Tc
(equake)Tj 
ET
BT
0 1 -1 0 346.5 243 Tm
-0.08701 Tc
(gap)Tj 
ET
BT
0 1 -1 0 368.25 243 Tm
0.22099 Tc
(gcc)Tj 
ET
BT
0 1 -1 0 390 241.5 Tm
-0.03259 Tc
(gzip)Tj 
ET
BT
0 1 -1 0 412.5 243 Tm
0.3197 Tc
(mcf)Tj 
ET
BT
0 1 -1 0 434.25 237 Tm
0.2072 Tc
(mesa)Tj 
ET
BT
0 1 -1 0 456 232.5 Tm
0.1032 Tc
(parser)Tj 
ET
BT
0 1 -1 0 477.75 228.75 Tm
-0.1196 Tc
(perlbmk)Tj 
ET
BT
0 1 -1 0 499.5 237.75 Tm
-0.09241 Tc
(twolf)Tj 
ET
BT
0 1 -1 0 521.25 233.25 Tm
0.00591 Tc
(vortex)Tj 
ET
BT
0 1 -1 0 543 244.5 Tm
0.18021 Tc
(vpr)Tj 
ET
BT
0 1 -1 0 564.75 225 Tm
-0.1046 Tc
(H_MEAN)Tj 
ET
BT
378 213 TD
-0.05231 Tc
(Benchmark)Tj 
ET
BT
0 1 -1 0 200.25 268.5 Tm
-0.019 Tc
-0.02451 Tw
(Slowdown vs. Native Execution)Tj 
ET
1 1 1 rg
582 315.75 24.75 27.75 rf
581.25 315.75 25.5 28.5 re
S 
0.60001 0.60001 1 rg
585 334.5 3.75 3.75 rf
584.25 334.5 4.5 4.5 re
S 
BT
591.75 333.75 TD
0 0 0 rg
-0.183 Tc
0 Tw
(/O0)Tj 
ET
0.60001 0.2 0.39999 rg
585 320.25 3.75 3.75 rf
584.25 320.25 4.5 4.5 re
S 
BT
591.75 319.5 TD
0 0 0 rg
-0.27901 Tc
(/Ox)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 0 5039 a(Figure)c(5:)32 b(Slo)n(wdo)n(wn)19
b(of)i(our)e(system)h(v)n(ersus)f(nativ)n(e)g(execution)h(on)g(all)g
(non-F)n(OR)-7 b(TRAN)20 b(SPEC2000)e(b)r(enc)n(hmarks)h([24)o(].)0
5123 y(H)p 67 5123 25 4 v 30 w(MEAN)35 b(is)f(the)h(harmonic)f(mean.)57
b(/O0)33 b(indicates)h(that)h(the)g(b)r(enc)n(hmark)f(w)n(as)f
(compiled)i(unoptimized)g(and)f(/Ox)0 5206 y(indicates)27
b(that)h(the)g(b)r(enc)n(hmark)f(w)n(as)g(compiled)g(with)h(full)h
(optimizations.)p eop
%%Page: 10 10
10 9 bop -12 3200 a @beginspecial 63 @llx 320 @lly 542
@urx 693 @ury 4790 @rwi @setspecial
%%BeginDocument: cache.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (\376\377)
%%Version: 1 3
%%Creator: (\376\377)
%%CreationDate: (D:20011012214036)
%%For: (\376\377)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 63 320 542 693
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments

63 320 moveto
542 320 lineto
542 693 lineto
63 693 lineto
closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 86 dict dup begin put
/_save 0 def
/_cshow 0 def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_lp /none def
/_doClip 0 def
/sfc 0 def
/_sfcs 0 def
/_sfc 0 def
/ssc 0 def
/_sscs 0 def
/_ssc 0 def
/_fcs 0 def
/_scs 0 def
/_fp 0 def
/_sp 0 def
/AGM_MAX_CS_COMPONENTS 10 def
/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def
/_fc null def
/_sc null def
/DefaultGray [/DeviceGray] def
/DefaultRGB [/DeviceRGB] def
/DefaultCMYK [/DeviceCMYK] def
/_inT false def
/_tr -1 def
/_rise 0 def
/_ax 0 def
/_cx 0 def
/_ld 0 def
/_tm matrix def
/_ctm matrix def
/_mtx matrix def
/_hy (-) def
/_fScl 0 def
/_hs 1 def
/_pdfEncodings 2 array def
/_baselineadj 0 def
/_fTzero false def
/_Tj 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_op? false def
/_OP? false def
/_opmode 0 def
/_ColorSep5044? false def
/_tmpcolr? [] def
/_tmpop? {} def
/_processColors 0 def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
/StartLoad { dup dup not { /_save save dd } if } bd
/EndLoad { if not { _save restore } if } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 4.0 3
%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs
/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ
/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"
/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl
/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 
/? /! /| /: /+ /GetGlyphDirectory
] {null def} bind forall
/v { currentpoint 6 2 roll c } bd
/y { 2 copy c } bd
/h/closepath ld
/d/setdash ld
/j/setlinejoin ld
/J/setlinecap ld
/M/setmiterlimit ld
/w/setlinewidth ld
/i {
dup 0 eq { pop _defaultflatness } if
setflat
} bd
/gsDI {
begin
/OP here { /_OP? xdd } if
/op here { /_op? xdd }
{ /OP here { /_op? xdd } if }
ifelse
/OPM here { /_opmode xdd } if
/Font here { aload pop Tf } if
/LW here { w } if
/LC here { J } if
/LJ here { j } if
/ML here { M } if
/D here { aload pop d } if
end
} bd
/ilp { /_lp /none dd } bd
/icl { /_doClip 0 dd } bd
/W { /_doClip 1 dd } bd
/W* { /_doClip 2 dd } bd
/n {
{{} {clip} {eoclip}} _doClip get exec
icl
newpath
} bd
/s { h S } bd
/B { q f Q S } bd
/B* { q f* Q S } bd
/b { h B } bd
/b* { h B* } bd
/q/save ld
/Q { restore ilp } bd
/GetCSFamily {
dup type /arraytype eq {0 get} if
} bd
/GetCompsDict
11 dict begin
/DeviceGray { pop 1 } bd
/DeviceRGB { pop 3 } bd
/DeviceCMYK { pop 4 } bd
/CIEBasedA { pop 1 } bd
/CIEBasedABC { pop 3 } bd
/CIEBasedDEF { pop 3 } bd
/CIEBasedDEFG { pop 4 } bd
/DeviceN { 1 get length } bd
/Separation { pop 1 } bd
/Indexed { pop 1 } bd
/Pattern { pop 0 } bd
currentdict
end
def
/GetComps {
GetCompsDict
1 index GetCSFamily
get exec
} bd
/cs
{
dup _fcs eq
{ pop }
{ dup /_fcs xdd
GetComps
_fillColors exch get
/_fc xdd
/_fp null dd
} ifelse
} bd
/CS
{
dup _scs eq
{ pop }
{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }
ifelse
} bd
/sc {
_fc astore pop
ilp
} bd
/SC {
_sc astore pop
ilp
} bd
/g { DefaultGray cs sc } bd
/rg { DefaultRGB cs sc } bd
/k { DefaultCMYK cs sc } bd
/G { DefaultGray CS SC } bd
/RG { DefaultRGB CS SC } bd
/K { DefaultCMYK CS SC } bd
/cm { _mtx astore concat } bd
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/RC/rectclip ld
/EF/execform ld
/PS { cvx exec } bd
/initgs {
/DefaultGray [/DeviceGray] dd
/DefaultRGB [/DeviceRGB] dd
/DefaultCMYK [/DeviceCMYK] dd
0 g 0 G
[] 0 d
0 j
0 J
10 M
1 w
true setSA
/_op? false dd
/_OP? false dd
/_opmode 0 dd
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 4.0 5
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/initialize {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
false setoverprint
<</MaxFormItem 0>> setuserparams
} bd
/terminate { } bd
/m/moveto ld
/l/lineto ld
/c/curveto ld
/setSA/setstrokeadjust ld
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/_sfcs {_fcs setcolorspace} bind dd
/_sscs {_scs setcolorspace} bind dd
/_sfc
{
_fc aload pop
_fp null eq
{ setcolor }
{ _fp setpattern }
ifelse
} bind dd
/_ssc
{
_sc aload pop
_sp null eq { setcolor} { _sp setpattern } ifelse
} bind dd
/scn {
dup type /dicttype eq
{ dup /_fp xdd
/PaintType get 1 eq
{ /_fc _fillColors 0 get dd ilp }
{ /_fc _fillColors
_fcs 1 get
GetComps get dd
sc
}
ifelse
}
{ sc }
ifelse
} bd
/SCN {
dup type /dicttype eq
{ dup /_sp xdd
/PaintType get 1 eq
{ /_sc _strokeColors 0 get dd ilp }
{ /_sc _strokeColors _scs 1 get GetComps get dd
SC
}
ifelse
}
{ SC }
ifelse
} bd
/gs
{
begin
/SA here { setstrokeadjust } if
/BG here { setblackgeneration } if
/UCR here { setundercolorremoval } if
/FL here { i } if
/RI here { ri } if
/TR here
{
dup xcheck
{ settransfer }
{ aload pop setcolortransfer }
ifelse
} if
/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if
/HT here { sethalftone } if
currentdict gsDI
end
} bd
/sfc {
_op? setoverprint
_lp /fill ne {
_sfcs
_sfc
/_lp /fill dd
} if
} dd
/ssc {
_OP? setoverprint
_lp /stroke ne {
_sscs
_ssc
/_lp /stroke dd
} if
} dd
/f {
{ { sfc fill }
{gsave sfc fill grestore clip newpath icl ilp}
{gsave sfc fill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/f* {
{ { sfc eofill }
{gsave sfc eofill grestore clip newpath icl ilp}
{gsave sfc eofill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/S {
{ { ssc stroke }
{gsave ssc stroke grestore clip newpath icl ilp}
{gsave ssc stroke grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/rf {
{ { sfc rectfill }
{gsave sfc rectfill grestore clip newpath icl ilp}
{gsave sfc rectfill grestore eoclip newpath icl ilp}
} _doClip get exec
} bd
/knownColorants? {
pop false
} bd
/makePat {
gsave
dup /Matrix get concat
matrix makepattern
grestore
/MadePattern defineRes pop
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 4.0 2
%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 75 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
/_intT false dd
0 Tr
} bd
/terminate { end } bd
/_safeput
{
Level2? not
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
FontName currentdict
end
definefont pop
}
bd
/Level2?
systemdict /languagelevel known
{systemdict /languagelevel get 2 ge}
{false}
ifelse
def
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category resourcestatus
{
pop pop
/CIDFont resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckSupplements
{
1 index _pdfTextTempString cvs
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
{
/CIDFont findresource
/CIDSystemInfo get /Supplement get
exch /CMap findresource
/CIDSystemInfo get
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ pop pop true }
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckSupplements
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_fyAdj xdd
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
_fyAdj 0 ne or
{
exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
/BaseLineAdj _fyAdj def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
/swj {
dup 4 1 roll
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
6 2 roll /_cnt 0 dd
{1 index eq {/_cnt _cnt 1 add dd} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} bd
/jss {
4 1 roll
{
pop pop
(0) exch 2 copy 0 exch put
gsave
exch false charpath currentpoint
5 index setmatrix stroke
3 -1 roll
32 eq
{
moveto
5 index 5 index rmoveto currentpoint
}
if
grestore
moveto
2 copy rmoveto
} exch cshow
6 {pop} repeat
} def
/jsfTzero {
{
pop pop
(0) exch 2 copy 0 exch put
exch show
32 eq
{
4 index 4 index rmoveto
}
if
2 copy rmoveto
} exch cshow
5 {pop} repeat
} def
/jsp
{
{
pop pop
(0) exch 2 copy 0 exch put
32 eq
dup {currentfont /Encoding get dup length 33 ge 
{32 get /space eq and}{pop}ifelse
}if
{ exch 5 index 5 index 5 index 5 -1 roll widthshow }
{ false charpath }
ifelse
2 copy rmoveto
} exch cshow
5 {pop} repeat
} bd
/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd
/pjsf { trj sfc fawidthshowProc } bd
/pjss { trj _ctm ssc jss } bd
/pjsc { trj jsp } bd
/_Tjdef [
/pjsf load
/pjss load
{
dup
currentpoint 3 2 roll
pjsf
newpath moveto
pjss
} bind
{
trj swj rmoveto
} bind
{
dup currentpoint 4 2 roll gsave
pjsf
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll
currentpoint gsave newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
pjsf
newpath moveto
pjss
grestore 3 1 roll moveto
pjsc
} bind
/pjsc load
] def
/BT
{
/_inT true dd
_ctm currentmatrix pop matrix _tm copy pop
0 _rise _baselineadj add translate _hs 1 scale
0 0 moveto
} bd
/ET
{
/_inT false dd
_tr 3 gt {clip} if
_ctm setmatrix newpath
} bd
/Tr {
_inT { _tr 3 le {currentpoint newpath moveto} if } if
dup /_tr xdd
_Tjdef exch get /_Tj xdd
} bd
/Tj {
userdict /$$copystring 2 index put
_Tj
} bd
/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd
/Tm { _tm astore pop iTm 0 0 moveto } bd
/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd
/TD { dup /_ld xdd Td } bd
/_nullProc {} bd
/Tf {
dup 1000 div /_fScl xdd
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
Level2?
{ selectfont }
{ exch findfont exch scalefont setfont}
ifelse
currentfont dup
/_nullProc exch
/WMode known
{
1 index /WMode get 1 eq
{pop /exch}
if
}
if
load /fWModeProc xdd
dup
/FontType get 0 eq dup _cx 0 ne and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
/_fTzero xdd
dup /BaseLineAdj known
{ dup /BaseLineAdj get _fScl mul }
{ 0 }
ifelse
/_baselineadj xdd
dup /_pdfT3Font known
{ 0 }
{_tr}
ifelse
_Tjdef exch get /_Tj xdd
_intT
{currentpoint iTm moveto}
if
pop
} bd
/TL { neg /_ld xdd } bd
/Tw {
/_cx xdd
_cx 0 ne _fTzero and
{ /jsfTzero }
{ /awidthshow }
ifelse
load /fawidthshowProc xdd
} bd
/Tc { /_ax xdd } bd
/Ts { /_rise xdd currentpoint iTm moveto } bd
/Tz { 100 div /_hs xdd iTm } bd
/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd
/T* { 0 _ld Td } bd
/' { T* Tj } bd
/" { exch Tc exch Tw ' } bd
/TJ {
{
dup type /stringtype eq
{ Tj }
{ 0 exch Tk }
ifelse
} forall
} bd
/T- { _hy Tj } bd
/d0/setcharwidth ld
/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap resourcestatus
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial,Bold
[/N10/Arial,Bold 1 TZ
%%IncludeResource Arial
[/N8/Arial 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
63 320 479 373 re W n
1 1 1 rg
54.12 499.44 246.72 220.44 rf
0.502 0.502 0.502 rg
96.96001 558.72 m
138.60001 590.28 l
226.67999 579.96001 l
199.8 544.08 l
96.96001 558.72 l
h
f* 
0.7529 0.7529 0.7529 rg
96.96001 558.72 m
93 664.67999 l
137.39999 679.8 l
138.60001 590.28 l
96.96001 558.72 l
h
f* 
138.60001 590.28 m
137.39999 679.8 l
229.8 674.88 l
226.67999 579.96001 l
138.60001 590.28 l
h
f* 
0.12 w
1 J
1 j
0 0 0 RG
96.96001 558.72 m
138.60001 590.28 l
S 
138.60001 590.28 m
226.67999 579.96001 l
S 
96.48 571.32001 m
138.48 600.96001 l
S 
138.48 600.96001 m
227.03999 591.36 l
S 
96 584.16 m
138.36 611.88 l
S 
138.36 611.88 m
227.39999 602.88 l
S 
95.52 597.12 m
138.12 622.8 l
S 
138.12 622.8 m
227.75999 614.52 l
S 
95.03999 610.2 m
138 633.96001 l
S 
138 633.96001 m
228.12 626.28 l
S 
94.44 623.52 m
137.88 645.24001 l
S 
137.88 645.24001 m
228.48 638.16 l
S 
93.96001 637.08 m
137.64 656.64 l
S 
137.64 656.64 m
228.96001 650.28 l
S 
93.48 650.75999 m
137.52 668.16 l
S 
137.52 668.16 m
229.32001 662.52 l
S 
93 664.67999 m
137.39999 679.8 l
S 
137.39999 679.8 m
229.8 674.88 l
S 
226.67999 579.96001 m
199.8 544.08 l
96.96001 558.72 l
138.60001 590.28 l
226.67999 579.96001 l
h
S 
q
1 0 0 1 0.5 0.75 cm

0.72 w
0.502 0.502 0.502 RG
96.96001 558.72 m
93 664.67999 l
137.39999 679.8 l
138.60001 590.28 l
96.96001 558.72 l
h
S 
Q
q
1 0 0 1 0.5 0.75 cm

0.72 w
0.502 0.502 0.502 RG
138.60001 590.28 m
137.39999 679.8 l
229.8 674.88 l
226.67999 579.96001 l
138.60001 590.28 l
h
S 
Q
96.96001 558.72 m
199.8 544.08 l
S 
96.96001 558.72 m
96.96001 556.2 l
S 
121.32001 555.24001 m
121.32001 552.72 l
S 
146.52 551.64 m
146.52 549.12 l
S 
172.67999 547.92 m
172.67999 545.39999 l
S 
199.8 544.08 m
199.8 541.56 l
S 
BT
102.72 544.44 TD
0 0 0 rg
/N8 7.56 Tf
-0.0034 Tc
0 Tw
(640)Tj 
22.67999 -3.48 TD
(1408)Tj 
25.67999 -3.72 TD
(2816)Tj 
26.64 -3.84 TD
(5504)Tj 
ET
226.67999 579.96001 m
199.8 544.08 l
S 
226.67999 579.96001 m
229.2 579.96001 l
S 
220.8 572.28 m
223.32001 572.28 l
S 
214.44 563.75999 m
216.96001 563.75999 l
S 
207.48 554.39999 m
210 554.39999 l
S 
199.8 544.08 m
202.32001 544.08 l
S 
BT
232.2 573.84 TD
(128)Tj 
-6.12 -8.16 TD
(256)Tj 
-6.60001 -8.88 TD
(512)Tj 
-7.32001 -9.84 TD
(1088)Tj 
ET
q
1 0 0 1 0.5 0.75 cm

0.302 0.302 0.502 rg
0.72 w
147.36 583.67999 m
146.52 667.32001 l
150.12 668.75999 l
150.72 586.44 l
147.36 583.67999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.60001 1 rg
0.72 w
138.72 584.75999 m
137.52 667.8 l
146.52 667.32001 l
147.36 583.67999 l
138.72 584.75999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
146.52 667.32001 m
150.12 668.75999 l
141.24001 669.24001 l
137.52 667.8 l
146.52 667.32001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.302 0.502 rg
0.72 w
169.32001 581.03999 m
169.44 627.96001 l
172.67999 630.12 l
172.44 583.92 l
169.32001 581.03999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.60001 1 rg
0.72 w
160.44 582.12 m
160.32001 628.8 l
169.44 627.96001 l
169.32001 581.03999 l
160.44 582.12 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
169.44 627.96001 m
172.67999 630.12 l
163.67999 630.84 l
160.32001 628.8 l
169.44 627.96001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.302 0.502 rg
0.72 w
192 578.28 m
192.72 623.03999 l
195.48 625.32001 l
194.88 581.28 l
192 578.28 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.60001 1 rg
0.72 w
182.88 579.36 m
183.24001 623.88 l
192.72 623.03999 l
192 578.28 l
182.88 579.36 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
192.72 623.03999 m
195.48 625.32001 l
186.24001 626.16 l
183.24001 623.88 l
192.72 623.03999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.302 0.502 rg
0.72 w
215.39999 575.52 m
216.60001 618.12 l
219.12 620.52 l
217.92 578.64 l
215.39999 575.52 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.60001 1 rg
0.72 w
206.03999 576.60001 m
206.88 618.96001 l
216.60001 618.12 l
215.39999 575.52 l
206.03999 576.60001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
216.60001 618.12 m
219.12 620.52 l
209.52 621.36 l
206.88 618.96001 l
216.60001 618.12 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
138.24001 576.24001 m
137.64 615.96001 l
141.48 618.36 l
141.96001 579.24001 l
138.24001 576.24001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
129.24001 577.32001 m
128.52 616.92 l
137.64 615.96001 l
138.24001 576.24001 l
129.24001 577.32001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.149 0.302 rg
0.72 w
137.64 615.96001 m
141.48 618.36 l
132.48 619.2 l
128.52 616.92 l
137.64 615.96001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
161.03999 573.36 m
160.92 606.72 l
164.39999 609.36 l
164.39999 576.48 l
161.03999 573.36 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
151.8 574.56 m
151.56 607.67999 l
160.92 606.72 l
161.03999 573.36 l
151.8 574.56 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.149 0.302 rg
0.72 w
160.92 606.72 m
164.39999 609.36 l
155.16 610.2 l
151.56 607.67999 l
160.92 606.72 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
184.56 570.36 m
184.92 603.36 l
188.03999 606.12 l
187.67999 573.60001 l
184.56 570.36 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
175.08 571.56 m
175.32001 604.44 l
184.92 603.36 l
184.56 570.36 l
175.08 571.56 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.149 0.302 rg
0.72 w
184.92 603.36 m
188.03999 606.12 l
178.56 607.08 l
175.32001 604.44 l
184.92 603.36 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
209.03999 567.36 m
209.75999 599.16 l
212.39999 602.03999 l
211.67999 570.72 l
209.03999 567.36 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
199.08 568.56 m
199.67999 600.24001 l
209.75999 599.16 l
209.03999 567.36 l
199.08 568.56 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.451 0.149 0.302 rg
0.72 w
209.75999 599.16 m
212.39999 602.03999 l
202.56 603 l
199.67999 600.24001 l
209.75999 599.16 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
128.28 568.08 m
127.67999 596.64 l
131.88 599.52 l
132.36 571.44 l
128.28 568.08 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

1 1 0.8 rg
0.72 w
119.03999 569.28 m
118.32001 597.72 l
127.67999 596.64 l
128.28 568.08 l
119.03999 569.28 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
127.67999 596.64 m
131.88 599.52 l
122.52 600.48 l
118.32001 597.72 l
127.67999 596.64 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
151.92 564.96001 m
151.8 591.24001 l
155.52 594.24001 l
155.64 568.44 l
151.92 564.96001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

1 1 0.8 rg
0.72 w
142.44 566.16 m
142.08 592.32001 l
151.8 591.24001 l
151.92 564.96001 l
142.44 566.16 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
151.8 591.24001 m
155.52 594.24001 l
146.03999 595.32001 l
142.08 592.32001 l
151.8 591.24001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
176.52 561.72 m
176.64 588 l
180 591.12 l
179.88 565.32001 l
176.52 561.72 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

1 1 0.8 rg
0.72 w
166.56 563.03999 m
166.56 589.2 l
176.64 588 l
176.52 561.72 l
166.56 563.03999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
176.64 588 m
180 591.12 l
170.16 592.2 l
166.56 589.2 l
176.64 588 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
201.84 558.36 m
202.44 584.88 l
205.32001 588.12 l
204.84 561.96001 l
201.84 558.36 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

1 1 0.8 rg
0.72 w
191.64 559.67999 m
192 586.08 l
202.44 584.88 l
201.84 558.36 l
191.64 559.67999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
202.44 584.88 m
205.32001 588.12 l
195.12 589.32001 l
192 586.08 l
202.44 584.88 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
117.36 559.2 m
116.64 586.08 l
121.2 589.2 l
121.8 562.8 l
117.36 559.2 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.8 1 1 rg
0.72 w
107.75999 560.52 m
106.92 587.28 l
116.64 586.08 l
117.36 559.2 l
107.75999 560.52 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
116.64 586.08 m
121.2 589.2 l
111.60001 590.39999 l
106.92 587.28 l
116.64 586.08 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
142.08 555.72 m
141.72 581.28 l
145.8 584.64 l
146.16 559.56 l
142.08 555.72 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.8 1 1 rg
0.72 w
132 557.16 m
131.64 582.48 l
141.72 581.28 l
142.08 555.72 l
132 557.16 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
141.72 581.28 m
145.8 584.64 l
135.96001 585.84 l
131.64 582.48 l
141.72 581.28 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
167.64 552.12 m
167.64 577.44 l
171.36 580.92 l
171.24001 556.08 l
167.64 552.12 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.8 1 1 rg
0.72 w
157.2 553.56 m
157.2 578.75999 l
167.64 577.44 l
167.64 552.12 l
157.2 553.56 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
167.64 577.44 m
171.36 580.92 l
161.03999 582.24001 l
157.2 578.75999 l
167.64 577.44 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
194.03999 548.39999 m
194.52 573.72 l
197.75999 577.32001 l
197.28 552.48 l
194.03999 548.39999 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.8 1 1 rg
0.72 w
183.36 549.96001 m
183.60001 575.03999 l
194.52 573.72 l
194.03999 548.39999 l
183.36 549.96001 l
h
b* 
Q
q
1 0 0 1 0.5 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
194.52 573.72 m
197.75999 577.32001 l
187.08 578.64 l
183.60001 575.03999 l
194.52 573.72 l
h
b* 
Q
96.96001 558.72 m
93 664.67999 l
S 
96.96001 558.72 m
94.44 558.72 l
S 
96.48 571.32001 m
93.96001 571.32001 l
S 
96 584.16 m
93.48 584.16 l
S 
95.52 597.12 m
93 597.12 l
S 
95.03999 610.2 m
92.52 610.2 l
S 
94.44 623.52 m
91.92 623.52 l
S 
93.96001 637.08 m
91.44 637.08 l
S 
93.48 650.75999 m
90.96001 650.75999 l
S 
93 664.67999 m
90.48 664.67999 l
S 
BT
82.8 556.32001 TD
0.05721 Tc
(0.0)Tj 
-0.48 12.60001 TD
(1.0)Tj 
-0.48 12.84 TD
(2.0)Tj 
-0.48 12.96001 TD
(3.0)Tj 
-0.48 13.08 TD
(4.0)Tj 
-0.60001 13.32001 TD
(5.0)Tj 
-0.48 13.56 TD
(6.0)Tj 
-0.48 13.67999 TD
(7.0)Tj 
-0.48 13.92 TD
(8.0)Tj 
ET
BT
0 1 -1 0 71.88 576.12 Tm
0.0343 Tc
0.02409 Tw
(Slowdown vs. Native)Tj 
ET
BT
69.72 522.12 TD
0.00169 Tc
0.05659 Tw
(Basic Block Cache Size \(KB\))Tj 
ET
q
250.32001 557.16 44.39999 8.52 re
h
W n 
BT
250.32001 558.84 TD
-0.00121 Tc
0 Tw
(Trace Cache )Tj 
ET
Q
BT
256.08 549.36 TD
-0.02299 Tc
0.0813 Tw
(Size \(KB\))Tj 
-97.2 134.64 TD
/N10 9.12 Tf
-0.0154 Tc
0 Tw
(acrord32)Tj 
ET
1 1 1 rg
300.72 499.44 246.12 220.44 rf
0.502 0.502 0.502 rg
347.75999 559.32001 m
389.03999 590.52 l
476.28 580.44 l
449.75999 544.8 l
347.75999 559.32001 l
h
f* 
0.7529 0.7529 0.7529 rg
347.75999 559.32001 m
343.8 664.2 l
387.84 679.2 l
389.03999 590.52 l
347.75999 559.32001 l
h
f* 
389.03999 590.52 m
387.84 679.2 l
479.28 674.39999 l
476.28 580.44 l
389.03999 590.52 l
h
f* 
347.75999 559.32001 m
389.03999 590.52 l
S 
389.03999 590.52 m
476.28 580.44 l
S 
347.28 573.60001 m
388.92 602.64 l
S 
388.92 602.64 m
476.64 593.28 l
S 
346.67999 588.12 m
388.67999 615 l
S 
388.67999 615 m
477.12 606.24001 l
S 
346.08 602.88 m
388.56 627.48 l
S 
388.56 627.48 m
477.48 619.56 l
S 
345.60001 617.75999 m
388.32001 640.2 l
S 
388.32001 640.2 m
477.96001 633 l
S 
345 633 m
388.2 653.03999 l
S 
388.2 653.03999 m
478.44 646.56 l
S 
344.39999 648.48 m
387.96001 666 l
S 
387.96001 666 m
478.92 660.36 l
S 
476.28 580.44 m
449.75999 544.8 l
347.75999 559.32001 l
389.03999 590.52 l
476.28 580.44 l
h
S 
q
1 0 0 1 3.925 0.75 cm

0.72 w
0.502 0.502 0.502 RG
347.75999 559.32001 m
343.8 664.2 l
387.84 679.2 l
389.03999 590.52 l
347.75999 559.32001 l
h
S 
Q
q
1 0 0 1 3.925 0.75 cm

0.72 w
0.502 0.502 0.502 RG
389.03999 590.52 m
387.84 679.2 l
479.28 674.39999 l
476.28 580.44 l
389.03999 590.52 l
h
S 
Q
347.75999 559.32001 m
449.75999 544.8 l
S 
347.75999 559.32001 m
347.75999 556.8 l
S 
371.88 555.96001 m
371.88 553.44 l
S 
396.96001 552.36 m
396.96001 549.84 l
S 
422.88 548.64 m
422.88 546.12 l
S 
449.75999 544.8 m
449.75999 542.28 l
S 
BT
353.52 545.03999 TD
0 0 0 rg
/N8 7.56 Tf
-0.0034 Tc
(640)Tj 
22.32001 -3.48 TD
(1280)Tj 
25.56 -3.60001 TD
(2688)Tj 
26.39999 -3.84 TD
(5376)Tj 
ET
476.28 580.44 m
449.75999 544.8 l
S 
476.28 580.44 m
478.8 580.44 l
S 
470.52 572.64 m
473.03999 572.64 l
S 
464.16 564.24001 m
466.67999 564.24001 l
S 
457.32001 555 m
459.84 555 l
S 
449.75999 544.8 m
452.28 544.8 l
S 
BT
481.67999 574.2 TD
(64)Tj 
-6 -8.03999 TD
(128)Tj 
-6.60001 -8.75999 TD
(256)Tj 
-7.2 -9.72 TD
(512)Tj 
ET
q
1 0 0 1 3.925 0.75 cm

0.302 0.302 0.502 rg
0.72 w
397.67999 584.03999 m
396.96001 665.03999 l
400.44 666.60001 l
401.16 586.8 l
397.67999 584.03999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.60001 1 rg
0.72 w
389.16 585 m
387.96001 665.64 l
396.96001 665.03999 l
397.67999 584.03999 l
389.16 585 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
396.96001 665.03999 m
400.44 666.60001 l
391.67999 667.08 l
387.96001 665.64 l
396.96001 665.03999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.302 0.502 rg
0.72 w
419.52 581.39999 m
419.64 647.64 l
422.88 649.44 l
422.64 584.28 l
419.52 581.39999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.60001 1 rg
0.72 w
410.75999 582.48 m
410.52 648.24001 l
419.64 647.64 l
419.52 581.39999 l
410.75999 582.48 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
419.64 647.64 m
422.88 649.44 l
413.88 650.03999 l
410.52 648.24001 l
419.64 647.64 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.302 0.502 rg
0.72 w
441.96001 578.75999 m
442.67999 625.92 l
445.44 628.2 l
444.72 581.64 l
441.96001 578.75999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.60001 1 rg
0.72 w
432.96001 579.84 m
433.32001 626.75999 l
442.67999 625.92 l
441.96001 578.75999 l
432.96001 579.84 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
442.67999 625.92 m
445.44 628.2 l
436.32001 628.92 l
433.32001 626.75999 l
442.67999 625.92 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.302 0.502 rg
0.72 w
465.12 575.88 m
466.2 614.16 l
468.60001 616.67999 l
467.52 579 l
465.12 575.88 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.60001 1 rg
0.72 w
455.75999 577.08 m
456.60001 615.12 l
466.2 614.16 l
465.12 575.88 l
455.75999 577.08 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.451 0.74899 rg
0.72 w
466.2 614.16 m
468.60001 616.67999 l
459.24001 617.52 l
456.60001 615.12 l
466.2 614.16 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
388.67999 576.60001 m
387.48 661.56 l
391.32001 663.12 l
392.39999 579.72 l
388.67999 576.60001 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
379.8 577.8 m
378.24001 662.16 l
387.48 661.56 l
388.67999 576.60001 l
379.8 577.8 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.149 0.302 rg
0.72 w
387.48 661.56 m
391.32001 663.12 l
382.2 663.72 l
378.24001 662.16 l
387.48 661.56 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
411.24001 573.84 m
411.12 647.16 l
414.60001 649.08 l
414.60001 576.96001 l
411.24001 573.84 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
402.12 574.92 m
401.64 647.88 l
411.12 647.16 l
411.24001 573.84 l
402.12 574.92 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.149 0.302 rg
0.72 w
411.12 647.16 m
414.60001 649.08 l
405.24001 649.67999 l
401.64 647.88 l
411.12 647.16 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
434.64 570.84 m
435.12 622.08 l
438.24001 624.48 l
437.64 574.08 l
434.64 570.84 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
425.16 572.03999 m
425.52 622.92 l
435.12 622.08 l
434.64 570.84 l
425.16 572.03999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.149 0.302 rg
0.72 w
435.12 622.08 m
438.24001 624.48 l
428.75999 625.32001 l
425.52 622.92 l
435.12 622.08 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.302 0.10201 0.2 rg
0.72 w
458.75999 567.84 m
459.60001 605.39999 l
462.36 608.16 l
461.39999 571.08 l
458.75999 567.84 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.2 0.39999 rg
0.72 w
449.03999 569.03999 m
449.64 606.48 l
459.60001 605.39999 l
458.75999 567.84 l
449.03999 569.03999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.451 0.149 0.302 rg
0.72 w
459.60001 605.39999 m
462.36 608.16 l
452.52 609.12 l
449.64 606.48 l
459.60001 605.39999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
378.84 568.56 m
377.03999 656.64 l
381.36 658.44 l
382.92 571.92 l
378.84 568.56 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

1 1 0.8 rg
0.72 w
369.60001 569.75999 m
367.44 657.24001 l
377.03999 656.64 l
378.84 568.56 l
369.60001 569.75999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
377.03999 656.64 m
381.36 658.44 l
371.88 659.03999 l
367.44 657.24001 l
377.03999 656.64 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
402.36 565.44 m
401.75999 642 l
405.60001 644.16 l
405.96001 568.92 l
402.36 565.44 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

1 1 0.8 rg
0.72 w
392.75999 566.75999 m
391.92 642.72 l
401.75999 642 l
402.36 565.44 l
392.75999 566.75999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
401.75999 642 m
405.60001 644.16 l
395.88 644.88 l
391.92 642.72 l
401.75999 642 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
426.60001 562.2 m
426.84 609.24001 l
430.32001 611.88 l
429.96001 565.8 l
426.60001 562.2 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

1 1 0.8 rg
0.72 w
416.75999 563.52 m
416.75999 610.2 l
426.84 609.24001 l
426.60001 562.2 l
416.75999 563.52 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
426.84 609.24001 m
430.32001 611.88 l
420.36 612.96001 l
416.75999 610.2 l
426.84 609.24001 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.502 0.502 0.39999 rg
0.72 w
451.8 558.96001 m
452.52 597.12 l
455.39999 600.12 l
454.67999 562.56 l
451.8 558.96001 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

1 1 0.8 rg
0.72 w
441.60001 560.28 m
442.08 598.2 l
452.52 597.12 l
451.8 558.96001 l
441.60001 560.28 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.74899 0.74899 0.60001 rg
0.72 w
452.52 597.12 m
455.39999 600.12 l
445.2 601.2 l
442.08 598.2 l
452.52 597.12 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
368.03999 559.8 m
365.64 649.44 l
370.32001 651.48 l
372.48 563.39999 l
368.03999 559.8 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.8 1 1 rg
0.72 w
358.44 561.12 m
355.67999 650.16 l
365.64 649.44 l
368.03999 559.8 l
358.44 561.12 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
365.64 649.44 m
370.32001 651.48 l
360.48 652.2 l
355.67999 650.16 l
365.64 649.44 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
392.39999 556.32001 m
391.56 624.36 l
395.75999 626.88 l
396.48 560.03999 l
392.39999 556.32001 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.8 1 1 rg
0.72 w
382.56 557.75999 m
381.36 625.32001 l
391.56 624.36 l
392.39999 556.32001 l
382.56 557.75999 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
391.56 624.36 m
395.75999 626.88 l
385.67999 627.84 l
381.36 625.32001 l
391.56 624.36 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
417.72 552.84 m
417.84 598.8 l
421.56 601.8 l
421.44 556.67999 l
417.72 552.84 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.8 1 1 rg
0.72 w
407.52 554.28 m
407.28 599.88 l
417.84 598.8 l
417.72 552.84 l
407.52 554.28 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
417.84 598.8 m
421.56 601.8 l
411.24001 602.88 l
407.28 599.88 l
417.84 598.8 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.39999 0.502 0.502 rg
0.72 w
444 549.12 m
444.60001 590.03999 l
447.84 593.39999 l
447.24001 553.2 l
444 549.12 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.8 1 1 rg
0.72 w
433.44 550.56 m
433.8 591.24001 l
444.60001 590.03999 l
444 549.12 l
433.44 550.56 l
h
b* 
Q
q
1 0 0 1 3.925 0.75 cm

0.60001 0.74899 0.74899 rg
0.72 w
444.60001 590.03999 m
447.84 593.39999 l
437.28 594.48 l
433.8 591.24001 l
444.60001 590.03999 l
h
b* 
Q
347.75999 559.32001 m
343.8 664.2 l
S 
347.75999 559.32001 m
345.24001 559.32001 l
S 
347.28 573.60001 m
344.75999 573.60001 l
S 
346.67999 588.12 m
344.16 588.12 l
S 
346.08 602.88 m
343.56 602.88 l
S 
345.60001 617.75999 m
343.08 617.75999 l
S 
345 633 m
342.48 633 l
S 
344.39999 648.48 m
341.88 648.48 l
S 
BT
329.39999 556.92 TD
0.0121 Tc
(1.45)Tj 
-0.48 14.28 TD
(1.50)Tj 
-0.60001 14.52 TD
(1.55)Tj 
-0.60001 14.75999 TD
(1.60)Tj 
-0.48 14.88 TD
(1.65)Tj 
-0.60001 15.24001 TD
(1.70)Tj 
-0.60001 15.48 TD
(1.75)Tj 
-0.60001 15.72 TD
(1.80)Tj 
ET
BT
0 1 -1 0 318.36 575.88 Tm
0.0343 Tc
0.02409 Tw
(Slowdown vs. Native)Tj 
ET
BT
320.16 522.84 TD
0.00169 Tc
0.05659 Tw
(Basic Block Cache Size \(KB\))Tj 
ET
q
496.2 558.24001 44.39999 8.52 re
h
W n 
BT
496.2 559.92 TD
-0.00121 Tc
0 Tw
(Trace Cache )Tj 
ET
Q
BT
501.96001 550.44 TD
-0.02299 Tc
0.0813 Tw
(Size \(KB\))Tj 
-89.52 134.16 TD
/N10 9.12 Tf
-0.0276 Tc
0 Tw
(excel)Tj 
ET
1 1 1 rg
54.12 307.08 247.32001 212.03999 rf
0.502 0.502 0.502 rg
95.39999 357.72 m
139.32001 390.84 l
231.84 380.16 l
203.64 342.36 l
95.39999 357.72 l
h
f* 
0.7529 0.7529 0.7529 rg
95.39999 357.72 m
91.2 469.08 l
137.88 485.03999 l
139.32001 390.84 l
95.39999 357.72 l
h
f* 
139.32001 390.84 m
137.88 485.03999 l
235.08 479.88 l
231.84 380.16 l
139.32001 390.84 l
h
f* 
95.39999 357.72 m
139.32001 390.84 l
S 
139.32001 390.84 m
231.84 380.16 l
S 
94.8 372.96001 m
139.08 403.8 l
S 
139.08 403.8 m
232.32001 393.84 l
S 
94.2 388.32001 m
138.96001 416.88 l
S 
138.96001 416.88 m
232.67999 407.64 l
S 
93.72 403.92 m
138.72 430.2 l
S 
138.72 430.2 m
233.16 421.67999 l
S 
93.12 419.88 m
138.48 443.64 l
S 
138.48 443.64 m
233.64 435.96001 l
S 
92.52 436.08 m
138.36 457.32001 l
S 
138.36 457.32001 m
234.12 450.36 l
S 
91.8 452.39999 m
138.12 471.12 l
S 
138.12 471.12 m
234.60001 465 l
S 
91.2 469.08 m
137.88 485.03999 l
S 
137.88 485.03999 m
235.08 479.88 l
S 
231.84 380.16 m
203.64 342.36 l
95.39999 357.72 l
139.32001 390.84 l
231.84 380.16 l
h
S 
q
1 0 0 1 0.5 3.5383 cm

0.72 w
0.502 0.502 0.502 RG
95.39999 357.72 m
91.2 469.08 l
137.88 485.03999 l
139.32001 390.84 l
95.39999 357.72 l
h
S 
Q
q
1 0 0 1 0.5 3.5383 cm

0.72 w
0.502 0.502 0.502 RG
139.32001 390.84 m
137.88 485.03999 l
235.08 479.88 l
231.84 380.16 l
139.32001 390.84 l
h
S 
Q
95.39999 357.72 m
203.64 342.36 l
S 
95.39999 357.72 m
95.39999 355.32001 l
S 
121.08 354.12 m
121.08 351.72 l
S 
147.60001 350.39999 m
147.60001 348 l
S 
175.08 346.44 m
175.08 344.03999 l
S 
203.64 342.36 m
203.64 339.96001 l
S 
BT
100.2 344.03999 TD
0 0 0 rg
/N8 7.08 Tf
0.0235 Tc
(1152)Tj 
26.03999 -3.72 TD
(2304)Tj 
27 -3.84 TD
(4608)Tj 
28.08 -3.96001 TD
(9216)Tj 
ET
231.84 380.16 m
203.64 342.36 l
S 
231.84 380.16 m
234.24001 380.16 l
S 
225.72 372 m
228.12 372 l
S 
219.12 363 m
221.52 363 l
S 
211.8 353.16 m
214.2 353.16 l
S 
203.64 342.36 m
206.03999 342.36 l
S 
BT
236.75999 373.92 TD
(256)Tj 
-6.36 -8.52 TD
(512)Tj 
-6.96001 -9.36 TD
(896)Tj 
-7.67999 -10.32001 TD
(1856)Tj 
ET
q
1 0 0 1 0.5 3.5383 cm

0.302 0.302 0.502 rg
0.72 w
148.44 384 m
147.48 477 l
151.32001 478.56 l
152.03999 386.88 l
148.44 384 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.60001 1 rg
0.72 w
139.32001 385.08 m
138 477.60001 l
147.48 477 l
148.44 384 l
139.32001 385.08 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.451 0.74899 rg
0.72 w
147.48 477 m
151.32001 478.56 l
141.96001 479.03999 l
138 477.60001 l
147.48 477 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.302 0.502 rg
0.72 w
171.60001 381.24001 m
171.72 427.08 l
175.08 429.36 l
174.84 384.24001 l
171.60001 381.24001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.60001 1 rg
0.72 w
162.24001 382.32001 m
162.12 427.92 l
171.72 427.08 l
171.60001 381.24001 l
162.24001 382.32001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.451 0.74899 rg
0.72 w
171.72 427.08 m
175.08 429.36 l
165.60001 430.2 l
162.12 427.92 l
171.72 427.08 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.302 0.502 rg
0.72 w
195.48 378.36 m
195.96001 418.08 l
198.96001 420.60001 l
198.36 381.48 l
195.48 378.36 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.60001 1 rg
0.72 w
185.75999 379.44 m
186.12 418.92 l
195.96001 418.08 l
195.48 378.36 l
185.75999 379.44 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.451 0.74899 rg
0.72 w
195.96001 418.08 m
198.96001 420.60001 l
189.36 421.44 l
186.12 418.92 l
195.96001 418.08 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.302 0.502 rg
0.72 w
220.08 375.36 m
221.03999 410.64 l
223.56 413.28 l
222.60001 378.60001 l
220.08 375.36 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.60001 1 rg
0.72 w
210.12 376.56 m
210.84 411.60001 l
221.03999 410.64 l
220.08 375.36 l
210.12 376.56 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.451 0.74899 rg
0.72 w
221.03999 410.64 m
223.56 413.28 l
213.60001 414.24001 l
210.84 411.60001 l
221.03999 410.64 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.10201 0.2 rg
0.72 w
138.84 376.2 m
137.88 439.67999 l
141.96001 441.84 l
142.8 379.32001 l
138.84 376.2 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.2 0.39999 rg
0.72 w
129.48 377.28 m
128.16 440.39999 l
137.88 439.67999 l
138.84 376.2 l
129.48 377.28 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.149 0.302 rg
0.72 w
137.88 439.67999 m
141.96001 441.84 l
132.48 442.67999 l
128.16 440.39999 l
137.88 439.67999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.10201 0.2 rg
0.72 w
162.84 373.08 m
162.72 411.60001 l
166.44 414.36 l
166.44 376.44 l
162.84 373.08 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.2 0.39999 rg
0.72 w
153.12 374.39999 m
152.88 412.56 l
162.72 411.60001 l
162.84 373.08 l
153.12 374.39999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.149 0.302 rg
0.72 w
162.72 411.60001 m
166.44 414.36 l
156.72 415.32001 l
152.88 412.56 l
162.72 411.60001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.10201 0.2 rg
0.72 w
187.67999 369.96001 m
188.03999 403.67999 l
191.28 406.56 l
190.8 373.44 l
187.67999 369.96001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.2 0.39999 rg
0.72 w
177.60001 371.28 m
177.84 404.75999 l
188.03999 403.67999 l
187.67999 369.96001 l
177.60001 371.28 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.149 0.302 rg
0.72 w
188.03999 403.67999 m
191.28 406.56 l
181.2 407.64 l
177.84 404.75999 l
188.03999 403.67999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.302 0.10201 0.2 rg
0.72 w
213.24001 366.72 m
213.96001 397.67999 l
216.84 400.67999 l
216.12 370.32001 l
213.24001 366.72 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.2 0.39999 rg
0.72 w
202.92 368.03999 m
203.52 398.75999 l
213.96001 397.67999 l
213.24001 366.72 l
202.92 368.03999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.451 0.149 0.302 rg
0.72 w
213.96001 397.67999 m
216.84 400.67999 l
206.52 401.75999 l
203.52 398.75999 l
213.96001 397.67999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.502 0.502 0.39999 rg
0.72 w
128.39999 367.56 m
127.32001 418.08 l
131.75999 420.72 l
132.72 371.16 l
128.39999 367.56 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

1 1 0.8 rg
0.72 w
118.56 368.88 m
117.36 419.03999 l
127.32001 418.08 l
128.39999 367.56 l
118.56 368.88 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.74899 0.74899 0.60001 rg
0.72 w
127.32001 418.08 m
131.75999 420.72 l
121.92 421.67999 l
117.36 419.03999 l
127.32001 418.08 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.502 0.502 0.39999 rg
0.72 w
153.36 364.32001 m
153.12 398.16 l
157.08 401.28 l
157.2 367.92 l
153.36 364.32001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

1 1 0.8 rg
0.72 w
143.28 365.64 m
142.8 399.36 l
153.12 398.16 l
153.36 364.32001 l
143.28 365.64 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.74899 0.74899 0.60001 rg
0.72 w
153.12 398.16 m
157.08 401.28 l
147 402.36 l
142.8 399.36 l
153.12 398.16 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.502 0.502 0.39999 rg
0.72 w
179.16 360.84 m
179.28 392.28 l
182.88 395.39999 l
182.64 364.56 l
179.16 360.84 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

1 1 0.8 rg
0.72 w
168.72 362.28 m
168.72 393.36 l
179.28 392.28 l
179.16 360.84 l
168.72 362.28 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.74899 0.74899 0.60001 rg
0.72 w
179.28 392.28 m
182.88 395.39999 l
172.44 396.60001 l
168.72 393.36 l
179.28 392.28 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.502 0.502 0.39999 rg
0.72 w
205.8 357.36 m
206.39999 386.03999 l
209.52 389.52 l
208.92 361.2 l
205.8 357.36 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

1 1 0.8 rg
0.72 w
195 358.8 m
195.48 387.36 l
206.39999 386.03999 l
205.8 357.36 l
195 358.8 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.74899 0.74899 0.60001 rg
0.72 w
206.39999 386.03999 m
209.52 389.52 l
198.72 390.72 l
195.48 387.36 l
206.39999 386.03999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.39999 0.502 0.502 rg
0.72 w
116.88 358.2 m
115.67999 404.88 l
120.48 407.88 l
121.56 362.03999 l
116.88 358.2 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.8 1 1 rg
0.72 w
106.8 359.64 m
105.36 405.96001 l
115.67999 404.88 l
116.88 358.2 l
106.8 359.64 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.74899 0.74899 rg
0.72 w
115.67999 404.88 m
120.48 407.88 l
110.28 408.96001 l
105.36 405.96001 l
115.67999 404.88 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.39999 0.502 0.502 rg
0.72 w
142.8 354.60001 m
142.44 386.88 l
146.88 390.36 l
147.12 358.56 l
142.8 354.60001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.8 1 1 rg
0.72 w
132.36 356.03999 m
131.75999 388.2 l
142.44 386.88 l
142.8 354.60001 l
132.36 356.03999 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.74899 0.74899 rg
0.72 w
142.44 386.88 m
146.88 390.36 l
136.32001 391.56 l
131.75999 388.2 l
142.44 386.88 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.39999 0.502 0.502 rg
0.72 w
169.8 350.88 m
169.8 379.56 l
173.64 383.16 l
173.64 354.96001 l
169.8 350.88 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.8 1 1 rg
0.72 w
158.88 352.32001 m
158.75999 380.88 l
169.8 379.56 l
169.8 350.88 l
158.88 352.32001 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.74899 0.74899 rg
0.72 w
169.8 379.56 m
173.64 383.16 l
162.84 384.48 l
158.75999 380.88 l
169.8 379.56 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.39999 0.502 0.502 rg
0.72 w
197.64 346.92 m
198 373.44 l
201.48 377.28 l
201 351.24001 l
197.64 346.92 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.8 1 1 rg
0.72 w
186.36 348.48 m
186.60001 374.88 l
198 373.44 l
197.64 346.92 l
186.36 348.48 l
h
b* 
Q
q
1 0 0 1 0.5 3.5383 cm

0.60001 0.74899 0.74899 rg
0.72 w
198 373.44 m
201.48 377.28 l
190.2 378.60001 l
186.60001 374.88 l
198 373.44 l
h
b* 
Q
95.39999 357.72 m
91.2 469.08 l
S 
95.39999 357.72 m
93 357.72 l
S 
94.8 372.96001 m
92.39999 372.96001 l
S 
94.2 388.32001 m
91.8 388.32001 l
S 
93.72 403.92 m
91.32001 403.92 l
S 
93.12 419.88 m
90.72 419.88 l
S 
92.52 436.08 m
90.12 436.08 l
S 
91.8 452.39999 m
89.39999 452.39999 l
S 
91.2 469.08 m
88.8 469.08 l
S 
BT
82.08 355.56 TD
-0.04041 Tc
(0.0)Tj 
-0.60001 15.24001 TD
(1.0)Tj 
-0.60001 15.36 TD
(2.0)Tj 
-0.48 15.60001 TD
(3.0)Tj 
-0.60001 15.96001 TD
(4.0)Tj 
-0.60001 16.2 TD
(5.0)Tj 
-0.72 16.32001 TD
(6.0)Tj 
-0.60001 16.67999 TD
(7.0)Tj 
ET
BT
0 1 -1 0 71.28 379.67999 Tm
0.0179 Tc
-0.0661 Tw
(Slowdown vs. Native)Tj 
ET
BT
75.36 322.67999 TD
0.00639 Tc
-0.0546 Tw
(Basic Block Cache Size \(KB\))Tj 
ET
q
253.08 357 41.88 7.92 re
h
W n 
BT
253.08 358.56 TD
0.0322 Tc
-0.02049 Tw
(Trace Cache )Tj 
ET
Q
BT
258.60001 349.67999 TD
-0.02631 Tc
-0.0219 Tw
(Size \(KB\))Tj 
-100.44 140.75999 TD
/N10 8.39999 Tf
0.03 Tc
0 Tw
(powerpnt)Tj 
ET
1 1 1 rg
297.72 307.67999 246.12 213.12 rf
0.502 0.502 0.502 rg
339.12 357.96001 m
383.75999 391.67999 l
478.08 380.75999 l
449.39999 342.24001 l
339.12 357.96001 l
h
f* 
0.7529 0.7529 0.7529 rg
339.12 357.96001 m
334.92 471.36 l
382.44 487.56 l
383.75999 391.67999 l
339.12 357.96001 l
h
f* 
383.75999 391.67999 m
382.44 487.56 l
481.44 482.39999 l
478.08 380.75999 l
383.75999 391.67999 l
h
f* 
339.12 357.96001 m
383.75999 391.67999 l
S 
383.75999 391.67999 m
478.08 380.75999 l
S 
338.39999 375.96001 m
383.64 407.03999 l
S 
383.64 407.03999 m
478.56 396.96001 l
S 
337.8 394.32001 m
383.39999 422.64 l
S 
383.39999 422.64 m
479.16 413.52 l
S 
337.08 413.03999 m
383.16 438.48 l
S 
383.16 438.48 m
479.64 430.32001 l
S 
336.36 432.12 m
382.92 454.56 l
S 
382.92 454.56 m
480.24001 447.36 l
S 
335.64 451.56 m
382.67999 471 l
S 
382.67999 471 m
480.84 464.64 l
S 
334.92 471.36 m
382.44 487.56 l
S 
382.44 487.56 m
481.44 482.39999 l
S 
478.08 380.75999 m
449.39999 342.24001 l
339.12 357.96001 l
383.75999 391.67999 l
478.08 380.75999 l
h
S 
q
1 0 0 1 3.8833 3.515 cm

0.72 w
0.502 0.502 0.502 RG
339.12 357.96001 m
334.92 471.36 l
382.44 487.56 l
383.75999 391.67999 l
339.12 357.96001 l
h
S 
Q
q
1 0 0 1 3.8833 3.515 cm

0.72 w
0.502 0.502 0.502 RG
383.75999 391.67999 m
382.44 487.56 l
481.44 482.39999 l
478.08 380.75999 l
383.75999 391.67999 l
h
S 
Q
339.12 357.96001 m
449.39999 342.24001 l
S 
339.12 357.96001 m
339.12 355.56 l
S 
365.16 354.24001 m
365.16 351.84 l
S 
392.28 350.39999 m
392.28 348 l
S 
420.24001 346.32001 m
420.24001 343.92 l
S 
449.39999 342.24001 m
449.39999 339.84 l
S 
BT
346.2 344.16 TD
0 0 0 rg
/N8 7.08 Tf
0.0235 Tc
(768)Tj 
24.48 -3.72 TD
(1664)Tj 
27.60001 -3.96001 TD
(3328)Tj 
28.44 -4.08 TD
(6630)Tj 
ET
478.08 380.75999 m
449.39999 342.24001 l
S 
478.08 380.75999 m
480.48 380.75999 l
S 
471.84 372.36 m
474.24001 372.36 l
S 
465 363.24001 m
467.39999 363.24001 l
S 
457.56 353.28 m
459.96001 353.28 l
S 
449.39999 342.24001 m
451.8 342.24001 l
S 
BT
482.88 374.52 TD
(128)Tj 
-6.48 -8.75999 TD
(256)Tj 
-7.08 -9.48 TD
(512)Tj 
-7.8 -10.56 TD
(960)Tj 
ET
q
1 0 0 1 3.8833 3.515 cm

0.302 0.302 0.502 rg
0.72 w
393.12 384.60001 m
392.28 474.48 l
396.12 476.03999 l
396.84 387.60001 l
393.12 384.60001 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.60001 1 rg
0.72 w
383.88 385.67999 m
382.56 475.08 l
392.28 474.48 l
393.12 384.60001 l
383.88 385.67999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.451 0.74899 rg
0.72 w
392.28 474.48 m
396.12 476.03999 l
386.64 476.64 l
382.56 475.08 l
392.28 474.48 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.302 0.502 rg
0.72 w
416.64 381.84 m
416.88 451.56 l
420.24001 453.48 l
420 384.96001 l
416.64 381.84 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.60001 1 rg
0.72 w
407.16 382.92 m
407.03999 452.28 l
416.88 451.56 l
416.64 381.84 l
407.16 382.92 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.451 0.74899 rg
0.72 w
416.88 451.56 m
420.24001 453.48 l
410.64 454.2 l
407.03999 452.28 l
416.88 451.56 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.302 0.502 rg
0.72 w
441 378.84 m
441.96001 442.56 l
444.96001 444.72 l
444 382.08 l
441 378.84 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.60001 1 rg
0.72 w
431.16 380.03999 m
431.75999 443.39999 l
441.96001 442.56 l
441 378.84 l
431.16 380.03999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.451 0.74899 rg
0.72 w
441.96001 442.56 m
444.96001 444.72 l
435 445.56 l
431.75999 443.39999 l
441.96001 442.56 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.302 0.502 rg
0.72 w
466.08 375.84 m
467.75999 438.12 l
470.39999 440.52 l
468.72 379.2 l
466.08 375.84 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.60001 1 rg
0.72 w
456 377.03999 m
457.32001 438.96001 l
467.75999 438.12 l
466.08 375.84 l
456 377.03999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.451 0.74899 rg
0.72 w
467.75999 438.12 m
470.39999 440.52 l
460.08 441.24001 l
457.32001 438.96001 l
467.75999 438.12 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.10201 0.2 rg
0.72 w
383.39999 376.67999 m
382.2 456.84 l
386.39999 458.75999 l
387.36 379.92 l
383.39999 376.67999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.2 0.39999 rg
0.72 w
373.8 377.88 m
372.24001 457.56 l
382.2 456.84 l
383.39999 376.67999 l
373.8 377.88 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.149 0.302 rg
0.72 w
382.2 456.84 m
386.39999 458.75999 l
376.56 459.48 l
372.24001 457.56 l
382.2 456.84 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.10201 0.2 rg
0.72 w
407.75999 373.56 m
407.64 441.24001 l
411.36 443.52 l
411.48 376.92 l
407.75999 373.56 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.2 0.39999 rg
0.72 w
397.92 374.75999 m
397.44 442.08 l
407.64 441.24001 l
407.75999 373.56 l
397.92 374.75999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.149 0.302 rg
0.72 w
407.64 441.24001 m
411.36 443.52 l
401.39999 444.36 l
397.44 442.08 l
407.64 441.24001 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.10201 0.2 rg
0.72 w
433.08 370.44 m
433.67999 434.39999 l
437.03999 436.8 l
436.32001 373.92 l
433.08 370.44 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.2 0.39999 rg
0.72 w
422.88 371.64 m
423.24001 435.36 l
433.67999 434.39999 l
433.08 370.44 l
422.88 371.64 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.149 0.302 rg
0.72 w
433.67999 434.39999 m
437.03999 436.8 l
426.72 437.75999 l
423.24001 435.36 l
433.67999 434.39999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.302 0.10201 0.2 rg
0.72 w
459.12 367.08 m
460.67999 429.84 l
463.56 432.36 l
462 370.67999 l
459.12 367.08 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.2 0.39999 rg
0.72 w
448.56 368.39999 m
449.75999 430.8 l
460.67999 429.84 l
459.12 367.08 l
448.56 368.39999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.451 0.149 0.302 rg
0.72 w
460.67999 429.84 m
463.56 432.36 l
452.88 433.32001 l
449.75999 430.8 l
460.67999 429.84 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.502 0.502 0.39999 rg
0.72 w
372.72 367.92 m
371.03999 450.72 l
375.60001 452.88 l
377.03999 371.52 l
372.72 367.92 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

1 1 0.8 rg
0.72 w
362.75999 369.24001 m
360.72 451.44 l
371.03999 450.72 l
372.72 367.92 l
362.75999 369.24001 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.74899 0.74899 0.60001 rg
0.72 w
371.03999 450.72 m
375.60001 452.88 l
365.39999 453.60001 l
360.72 451.44 l
371.03999 450.72 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.502 0.502 0.39999 rg
0.72 w
398.03999 364.56 m
397.56 431.39999 l
401.75999 434.03999 l
402.12 368.28 l
398.03999 364.56 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

1 1 0.8 rg
0.72 w
387.84 365.88 m
387 432.36 l
397.56 431.39999 l
398.03999 364.56 l
387.84 365.88 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.74899 0.74899 0.60001 rg
0.72 w
397.56 431.39999 m
401.75999 434.03999 l
391.32001 434.88 l
387 432.36 l
397.56 431.39999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.502 0.502 0.39999 rg
0.72 w
424.32001 361.08 m
424.8 424.44 l
428.39999 427.2 l
427.92 364.92 l
424.32001 361.08 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

1 1 0.8 rg
0.72 w
413.75999 362.52 m
413.75999 425.39999 l
424.8 424.44 l
424.32001 361.08 l
413.75999 362.52 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.74899 0.74899 0.60001 rg
0.72 w
424.8 424.44 m
428.39999 427.2 l
417.60001 428.16 l
413.75999 425.39999 l
424.8 424.44 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.502 0.502 0.39999 rg
0.72 w
451.56 357.48 m
452.75999 419.52 l
456 422.39999 l
454.67999 361.44 l
451.56 357.48 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

1 1 0.8 rg
0.72 w
440.52 358.92 m
441.48 420.60001 l
452.75999 419.52 l
451.56 357.48 l
440.52 358.92 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.74899 0.74899 0.60001 rg
0.72 w
452.75999 419.52 m
456 422.39999 l
444.84 423.36 l
441.48 420.60001 l
452.75999 419.52 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.39999 0.502 0.502 rg
0.72 w
360.96001 358.44 m
358.92 440.03999 l
363.96001 442.56 l
365.75999 362.28 l
360.96001 358.44 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.8 1 1 rg
0.72 w
350.64 359.88 m
348.12 441 l
358.92 440.03999 l
360.96001 358.44 l
350.64 359.88 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.74899 0.74899 rg
0.72 w
358.92 440.03999 m
363.96001 442.56 l
353.39999 443.39999 l
348.12 441 l
358.92 440.03999 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.39999 0.502 0.502 rg
0.72 w
387.48 354.72 m
386.64 419.64 l
391.2 422.52 l
391.8 358.8 l
387.48 354.72 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.8 1 1 rg
0.72 w
376.8 356.16 m
375.60001 420.72 l
386.64 419.64 l
387.48 354.72 l
376.8 356.16 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.74899 0.74899 rg
0.72 w
386.64 419.64 m
391.2 422.52 l
380.28 423.60001 l
375.60001 420.72 l
386.64 419.64 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.39999 0.502 0.502 rg
0.72 w
414.84 350.88 m
414.84 414 l
418.92 417 l
418.8 355.08 l
414.84 350.88 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.8 1 1 rg
0.72 w
403.8 352.44 m
403.44 415.08 l
414.84 414 l
414.84 350.88 l
403.8 352.44 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.74899 0.74899 rg
0.72 w
414.84 414 m
418.92 417 l
407.75999 418.08 l
403.44 415.08 l
414.84 414 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.39999 0.502 0.502 rg
0.72 w
443.16 346.92 m
444.24001 409.08 l
447.72 412.32001 l
446.64 351.24001 l
443.16 346.92 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.8 1 1 rg
0.72 w
431.75999 348.48 m
432.36 410.28 l
444.24001 409.08 l
443.16 346.92 l
431.75999 348.48 l
h
b* 
Q
q
1 0 0 1 3.8833 3.515 cm

0.60001 0.74899 0.74899 rg
0.72 w
444.24001 409.08 m
447.72 412.32001 l
436.08 413.52 l
432.36 410.28 l
444.24001 409.08 l
h
b* 
Q
339.12 357.96001 m
334.92 471.36 l
S 
339.12 357.96001 m
336.72 357.96001 l
S 
338.39999 375.96001 m
336 375.96001 l
S 
337.8 394.32001 m
335.39999 394.32001 l
S 
337.08 413.03999 m
334.67999 413.03999 l
S 
336.36 432.12 m
333.96001 432.12 l
S 
335.64 451.56 m
333.24001 451.56 l
S 
334.92 471.36 m
332.52 471.36 l
S 
BT
325.8 355.8 TD
-0.04041 Tc
(0.0)Tj 
-0.72 18 TD
(0.5)Tj 
-0.60001 18.36 TD
(1.0)Tj 
-0.72 18.72 TD
(1.5)Tj 
-0.72 19.08 TD
(2.0)Tj 
-0.72 19.44 TD
(2.5)Tj 
-0.72 19.8 TD
(3.0)Tj 
ET
BT
0 1 -1 0 315.12 381 Tm
0.0179 Tc
-0.0661 Tw
(Slowdown vs. Native)Tj 
ET
BT
320.03999 322.67999 TD
0.00639 Tc
-0.0546 Tw
(Basic Block Cache Size \(KB\))Tj 
ET
q
495.36 357.60001 41.88 7.92 re
h
W n 
BT
495.36 359.16 TD
0.0322 Tc
-0.02049 Tw
(Trace Cache )Tj 
ET
Q
BT
500.88 350.28 TD
-0.02631 Tc
-0.0219 Tw
(Size \(KB\))Tj 
-97.2 143.88 TD
/N10 8.39999 Tf
0.01849 Tc
0 Tw
(winword)Tj 
ET
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Arial,Bold
%%+ font Arial
%%EOF

%%EndDocument
 @endspecial 0 3389 a Fc(Figure)26 b(6:)37 b(P)n(erformance)24
b(of)j(b)r(enc)n(hmarks)f(when)h(v)-5 b(arying)26 b(the)h(cac)n(he)g
(parameters.)34 b(The)28 b(x)e(axis)h(sho)n(ws)e(four)i(v)-5
b(alues)27 b(for)0 3472 y(basic)f(blo)r(c)n(k)g(cac)n(he)f(size:)36
b(the)27 b(maxim)n(um)g(the)g(program)d(w)n(ould)i(w)n(an)n(t,)g(and)g
(one-half,)h(one-quarter,)d(and)j(one-eigh)n(th)e(of)0
3555 y(that)32 b(maxim)n(um)g(v)-5 b(alue.)49 b(The)32
b(y)f(axis)g(has)g(the)h(same)g(v)-5 b(alues)31 b(for)g(the)h(trace)f
(cac)n(he.)49 b(The)31 b(z)h(axis)f(sho)n(ws)g(the)h(resulting)0
3638 y(p)r(erformance)27 b(as)f(a)i(slo)n(wdo)n(wn)e(v)n(ersus)g(nativ)
n(e)h(execution.)p 0 3775 3900 4 v 0 3992 a Fd(5.1)105
b(Cac)m(he)35 b(P)m(arameters)0 4129 y Fc(Figure)25 b(6)h(sho)n(ws)e
(the)j(p)r(erformance)e(of)g(our)g(b)r(enc)n(hmarks)0
4212 y(when)j(v)-5 b(arying)26 b(the)i(sizes)f(of)g(the)h(basic)f(blo)r
(c)n(k)g(and)g(trace)0 4295 y(p)r(ortions)k(of)h(the)h(co)r(de)e(cac)n
(he.)50 b(These)31 b(size)h(parameters)0 4378 y(are)g(upp)r(er)i
(limits)g(on)f(the)h(sum)f(of)h(the)g(cac)n(he)e(sizes)h(for)0
4461 y(all)25 b(threads.)36 b(F)-7 b(or)25 b(eac)n(h)f(b)r(enc)n(hmark)
h(w)n(e)g(to)r(ok)g(the)h(maxi-)0 4544 y(m)n(um)d(trace)g(and)g(basic)f
(blo)r(c)n(k)h(cac)n(he)f(sizes)h(that)g(the)h(pro-)0
4627 y(gram)37 b(w)n(ould)g(w)n(an)n(t.)67 b(W)-7 b(e)38
b(then)g(set)g(the)g(sizes)f(of)h(eac)n(h)0 4710 y(cac)n(he)i(to)h
(one-eigh)n(th,)i(one-quarter,)f(and)e(one-half)g(of)0
4793 y(the)26 b(maxim)n(um)f(cac)n(he)g(size,)h(and)f(the)h(maxim)n(um)
f(size)g(it-)0 4876 y(self,)38 b(and)e(plotted)g(the)g(resulting)f(p)r
(erformance)g(v)n(ersus)0 4959 y(nativ)n(e)23 b(execution.)36
b(The)24 b(results)f(sho)n(w)g(that)h(cutting)g(the)0
5042 y(cac)n(he)d(size)h(in)h(half)g(do)r(es)f(not)g(a\013ect)g(p)r
(erformance)g(m)n(uc)n(h.)0 5125 y(Only)34 b(when)h(b)r(oth)f(cac)n
(hes)g(are)f(shrunk)h(to)g(fractions)f(of)0 5208 y(their)22
b(maxim)n(um)g(sizes)g(do)r(es)g(p)r(erformance)f(su\013er)h(signif-)0
5291 y(ican)n(tly)-7 b(.)112 5374 y(The)41 b(graphs)f(sho)n(w)h(that)h
(some)e(b)r(enc)n(hmarks)h(ha)n(v)n(e)0 5457 y(smaller)36
b(w)n(orking)f(set)i(sizes)g(than)g(others.)64 b Fa(Excel)p
Fc(,)37 b(for)2050 3992 y(example,)44 b(is)c(not)h(a\013ected)g(m)n(uc)
n(h)g(b)n(y)g(shrinking)f(b)r(oth)2050 4075 y(of)i(its)i(cac)n(hes)d
(to)i(one-eigh)n(th)f(their)h(maxim)n(um)g(sizes.)2050
4158 y Fa(Acrord32)p Fc(,)31 b(on)i(the)g(other)g(hand,)h(su\013ers)f
(o)n(v)n(er)e(a)i(sev)n(en)2050 4241 y(times)27 b(slo)n(wdo)n(wn)f
(when)i(the)g(same)e(thing)i(is)f(done)h(to)f(its)2050
4324 y(cac)n(hes.)2162 4407 y(The)20 b(graphs)g(also)f(sho)n(w)h(that)h
(for)f(a)g(cop)n(y-paste)f(in)n(ter-)2050 4490 y(preter)28
b(suc)n(h)g(as)g(ours,)h(the)g(basic)f(blo)r(c)n(k)g(cac)n(he)g(is)h
(nearly)2050 4573 y(as)j(imp)r(ortan)n(t)g(as)g(the)h(trace)e(cac)n
(he.)51 b(W)-7 b(e)33 b(ha)n(v)n(e)f(not)g(y)n(et)2050
4656 y(tuned)25 b(our)f(trace)g(selection)g(for)g(this)h(system;)g(w)n
(e)g(exp)r(ect)2050 4739 y(b)r(etter)d(and)f(more)g(imp)r(ortan)n(t)g
(traces)f(with)i(further)g(w)n(ork)2050 4822 y(on)27
b(the)h(sp)r(eci\014cs)f(of)h(building)g(them.)2162 4905
y(W)-7 b(e)30 b(are)f(fairly)g(satis\014ed)h(with)g(the)g(p)r
(erformance)f(re-)2050 4988 y(sults)34 b(in)g(this)h(pap)r(er.)56
b(There)33 b(is)h(a)g(lot)g(of)g(p)r(erformance)2050
5071 y(tuning)k(to)h(b)r(e)g(done)f(on)g(the)h(infrastructure)f(that)g
(can)2050 5154 y(bring)32 b(the)h(o)n(v)n(erheads)e(do)n(wn.)52
b(And)33 b(w)n(e)g(ha)n(v)n(e)f(not)h(ev)n(en)2050 5237
y(b)r(egun)27 b(to)h(p)r(erform)f(optimizations)g(on)g(traces.)p
eop
%%Page: 11 11
11 10 bop 0 90 a Fd(6)105 b(Related)35 b(W)-9 b(ork)0
255 y Fc(There)23 b(are)f(a)h(few)h(soft)n(w)n(are)e(dynamic)h
(optimization)g(sys-)0 338 y(tems)36 b(in)f(the)h(literature.)60
b(They)35 b(include)h(Dynamo)f([3)o(],)0 421 y(whic)n(h)63
b(our)f(system)h(is)g(deriv)n(ed)f(from,)72 b(and)63
b(Wig-)0 505 y(gins/Redstone)28 b([9)o(],)i(whic)n(h)e(emplo)n(ys)g
(program)f(coun)n(ter)0 588 y(sampling)e(to)h(form)g(traces)f(that)h
(are)f(sp)r(ecialized)h(for)f(the)0 671 y(particular)d(Alpha)h(mac)n
(hine)f(they)h(are)f(running)g(on.)35 b(The)0 754 y(Mo)5
b(jo)41 b([4)o(])h(system,)j(lik)n(e)c(ours,)j(targets)c(Windo)n(ws)h
(NT)0 837 y(running)20 b(on)h(IA-32.)33 b(Ho)n(w)n(ev)n(er,)20
b(details)h(of)f(Mo)5 b(jo,)21 b(includ-)0 920 y(ing)28
b(thread-lo)r(cal)e(state)i(and)g(in)n(terception)f(of)h(Windo)n(ws)0
1003 y(con)n(trol)h(\015o)n(w,)h(are)f(not)h(su\016cien)n(tly)g
(describ)r(ed)g(to)g(allo)n(w)0 1086 y(implemen)n(tation)j(b)n(y)g(the)
g(reader.)52 b(They)33 b(w)n(ere)f(unclear)0 1169 y(on)i(whether)h(the)
g(w)n(ork)e(could)h(b)r(e)h(duplicated)g(without)0 1252
y(access)18 b(to)h(the)g(Windo)n(ws)g(source)f(co)r(de.)34
b(Our)18 b(w)n(ork)g(sho)n(ws)0 1335 y(that)27 b(it)g(is)f(p)r(ossible)
h(to)f(build)h(a)g(Windo)n(ws)f(optimization)0 1418 y(system)h(without)
h(Windo)n(ws)g(source)e(co)r(de)h(access.)112 1501 y(Dynamic)21
b(optimization)g(of)g(the)h(pro)r(cessor's)d(instruc-)0
1584 y(tion)29 b(stream)e(is)i(p)r(erformed)f(in)g(sup)r(erscalar)f
(pro)r(cessors.)0 1667 y(The)k(T)-7 b(race)30 b(Cac)n(he)g([23)o(])h
(allo)n(ws)e(suc)n(h)h(optimizations)h(to)0 1750 y(b)r(e)d(p)r
(erformed)f(o\013)h(of)f(the)h(critical)f(path.)112 1833
y(Dynamic)35 b(translation)e(systems)h([6,)h(5)o(,)g(15)o(,)g(12)o(])g
(em-)0 1916 y(plo)n(y)j(tec)n(hniques)h(similar)f(to)h(ours.)70
b(These)38 b(are)g(in)n(ter-)0 1999 y(preters)k(that)h(cac)n(he)f(the)h
(nativ)n(e)g(translations)e(of)i(fre-)0 2082 y(quen)n(tly)37
b(executed)g(co)r(de.)66 b(They)37 b(ha)n(v)n(e)f(b)r(een)h(built)h
(for)0 2165 y(v)-5 b(arious)33 b(domains)h(including)h(em)n(ulation)e
(of)i(one)f(arc)n(hi-)0 2248 y(tecture)28 b(on)f(another.)112
2331 y(Dynamic)43 b(compilation)g(emplo)n(ys)f(n)n(umerous)g(tec)n(h-)0
2414 y(niques)35 b(relev)-5 b(an)n(t)35 b(to)g(soft)n(w)n(are)f
(dynamic)h(optimization.)0 2497 y(Dynamic)h(compilation)g(is)g(used)g
(b)r(oth)g(for)g(in)n(terpreted)0 2580 y(languages)23
b(as)i Fb(just-in-time)h(c)l(ompilation)i Fc([2)o(,)e(17)o(,)f(10)o(,)g
(14)o(])0 2663 y(and)i(for)h(compiled)f(languages)f([13)o(,)i(8)o(].)
112 2746 y(Other)33 b(related)g(\014elds)g(include)h(link-time)f
(optimiza-)0 2829 y(tion)i([18)o(,)h(7)o(],)h(whic)n(h)f(shares)d(with)
j(dynamic)f(optimiza-)0 2912 y(tion)22 b(the)h(fact)g(that)f(it)h
(optimizes)f(binary)g(co)r(de,)h(and)f(lo)n(w-)0 2995
y(o)n(v)n(erhead)29 b(pro\014ling)h([1)o(,)h(11)o(],)h(whic)n(h)f(is)f
(crucial)g(in)h(a)g(dy-)0 3078 y(namic)37 b(optimization)g(system)g
(for)g(quic)n(kly)f(iden)n(tifying)0 3161 y(imp)r(ortan)n(t)27
b(regions)f(of)i(co)r(de.)0 3399 y Fd(7)105 b(Conclusions)0
3564 y Fc(W)-7 b(e)33 b(ha)n(v)n(e)e(describ)r(ed)h(a)f(dynamic)h
(optimization)g(frame-)0 3647 y(w)n(ork)22 b(for)i(the)g(Windo)n(ws)f
(op)r(erating)g(system)g(running)h(on)0 3731 y(the)36
b(IA-32)f(arc)n(hitecture.)61 b(In)36 b(addition)g(to)g(iden)n(tifying)
0 3814 y(the)41 b(ma)5 b(jor)39 b(engineering)h(c)n(hallenges)f(in)i
(capturing)f(all)0 3897 y(program)22 b(b)r(eha)n(vior)i(on)g(Windo)n
(ws)g(and)g(handling)g(m)n(ulti-)0 3980 y(ple)h(threads,)f(w)n(e)g(ha)n
(v)n(e)g(made)g(a)g(case)g(for)g(thread-priv)-5 b(ate)0
4063 y(cac)n(hes)18 b(and)h(sho)n(wn)g(some)f(initial)i(p)r(erformance)
e(n)n(um)n(b)r(ers)0 4146 y(for)27 b(v)-5 b(arious)26
b(cac)n(he)h(sizes.)112 4229 y(This)h(framew)n(ork)e(op)r(ens)h(up)i
(opp)r(ortunities)e(for)h(pro-)0 4312 y(gram)g(in)n(trosp)r(ection)g
(and)h(p)r(erformance)g(enhancemen)n(t,)0 4395 y(as)g(all)h(program)e
(information)i(is)g(a)n(v)-5 b(ailable)28 b(at)i(run)n(time.)0
4478 y(Our)j(future)h(w)n(ork)e(includes)i(implemen)n(ting)g(an)f
(instru-)0 4561 y(men)n(tation)39 b(system)g(using)g(our)f(framew)n
(ork.)70 b(W)-7 b(e)40 b(also)0 4644 y(plan)35 b(to)f(study)i(the)f
(applicabilit)n(y)f(of)h(kno)n(wn)f(compiler)0 4727 y(optimization)48
b(metho)r(ds,)55 b(as)48 b(w)n(ell)h(as)f(disco)n(v)n(er)f(no)n(v)n(el)
0 4810 y(tec)n(hniques)22 b(for)g(optimization)g(within)h(this)f
(framew)n(ork.)0 5048 y Fd(8)105 b(Ac)m(kno)m(wledgemen)m(ts)0
5213 y Fc(W)-7 b(e)43 b(w)n(ould)f(lik)n(e)h(to)g(thank)f(V)-7
b(asan)n(th)42 b(Bala)g(and)h(Mik)n(e)0 5296 y(Smith)25
b(for)f(their)h(initial)f(dev)n(elopmen)n(t)g(w)n(ork)f(on)h(our)g(dy-)
0 5379 y(namic)j(optimization)h(infrastructure.)2050
90 y Fd(References)2091 255 y Fc([1])37 b(Jennifer)47
b(M.)h(Anderson,)k(Lance)46 b(M.)i(Berc,)j(Jef-)2216
338 y(frey)26 b(Dean,)g(Sanja)n(y)f(Ghema)n(w)n(at,)g(Monik)-5
b(a)26 b(R.)g(Hen-)2216 421 y(zinger,)35 b(Sh)n(un-T)-7
b(ak)34 b(A.)h(Leung,)h(Ric)n(hard)d(L.)i(Sites,)2216
505 y(Mark)i(T.)h(V)-7 b(andev)n(o)r(orde,)39 b(Carl)e(A.)h(W)-7
b(aldspurger,)2216 588 y(and)38 b(William)g(E.)f(W)-7
b(eihl.)67 b(Con)n(tin)n(uous)37 b(pro\014ling:)2216
671 y(Where)48 b(ha)n(v)n(e)e(all)i(the)g(cycles)f(gone?)145
b(In)48 b Fb(16th)2216 754 y(A)n(CM)40 b(Symp)l(osium)f(on)g(Op)l(er)l
(ating)g(System)g(Prin-)2216 837 y(ciples)31 b(\(SOSP)e('97\))p
Fc(,)g(Octob)r(er)e(1997.)2091 979 y([2])37 b(Matthew)30
b(Arnold,)g(Stephen)g(Fink,)g(Da)n(vid)g(Gro)n(v)n(e,)2216
1062 y(Mic)n(hael)37 b(Hind,)j(and)d(P)n(eter)f(F.)h(Sw)n(eeney)-7
b(.)65 b(Adap-)2216 1145 y(tiv)n(e)77 b(optimization)f(in)h(the)g
(Jalap)r(e)r(~)-44 b(no)75 b(JVM.)2216 1228 y(In)j Fb(2000)g(A)n(CM)e
(SIGPLAN)f(Confer)l(enc)l(e)i(on)2216 1311 y(Obje)l(ct-Oriente)l(d)48
b(Pr)l(o)l(gr)l(amming)i(Systems,)j(L)l(an-)2216 1395
y(guages,)46 b(and)c(Applic)l(ations)h(\(OOPSLA'00\))p
Fc(,)h(Oc-)2216 1478 y(tob)r(er)27 b(2000.)2091 1620
y([3])37 b(V)-7 b(asan)n(th)36 b(Bala,)i(Ev)n(elyn)d(Duesterw)n(ald,)j
(and)f(San-)2216 1703 y(jeev)j(Banerjia.)70 b(Dynamo:)60
b(A)40 b(transparen)n(t)e(run-)2216 1786 y(time)20 b(optimization)g
(system.)k(In)c Fb(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)h(the)2216
1869 y(A)n(CM)37 b(SIGPLAN)e(Confer)l(enc)l(e)i(on)f(Pr)l(o)l(gr)l
(amming)2216 1952 y(L)l(anguage)42 b(Design)f(and)h(Implementation)g
(\(PLDI)2216 2035 y('00\))p Fc(,)29 b(June)f(2000.)2091
2178 y([4])37 b(W)-7 b(en-Ke)31 b(Chen,)i(Sorin)d(Lerner,)i(Ronnie)f
(Chaik)n(en,)2216 2261 y(and)k(Da)n(vid)g(M.)h(Gillies.)60
b(Mo)5 b(jo:)51 b(A)36 b(dynamic)f(op-)2216 2344 y(timization)d
(system.)47 b(In)32 b Fb(3r)l(d)h(A)n(CM)h(Workshop)h(on)2216
2427 y(F)-6 b(e)l(e)l(db)l(ack-Dir)l(e)l(cte)l(d)41 b(and)h(Dynamic)f
(Optimization)2216 2510 y(\(FDDO-3\))p Fc(,)27 b(Decem)n(b)r(er)h
(2000.)2091 2653 y([5])37 b(An)n(ton)55 b(Cherno\013,)61
b(Mark)53 b(Herdeg,)61 b(Ra)n(y)54 b(Ho)r(ok-)2216 2736
y(w)n(a)n(y)-7 b(,)36 b(Chris)e(Reev)n(e,)j(Norman)d(Rubin,)k(T)-7
b(on)n(y)34 b(T)n(y)n(e,)2216 2819 y(S.)65 b(Bharadw)n(a)5
b(j)62 b(Y)-7 b(ada)n(v)i(alli,)73 b(and)64 b(John)g(Y)-7
b(ates.)2216 2902 y(FX!32:)76 b(A)48 b(pro\014le-directed)e(binary)h
(translator.)2216 2985 y Fb(IEEE)31 b(Micr)l(o)p Fc(,)e(18\(2\),)e
(Marc)n(h)f(1998.)2091 3128 y([6])37 b(Rob)r(ert)d(F.)h(Cmelik)g(and)f
(Da)n(vid)g(Kepp)r(el.)57 b(Shade:)2216 3211 y(A)37 b(fast)g
(instruction-set)f(sim)n(ulator)g(for)g(execution)2216
3294 y(pro\014ling.)g(In)28 b Fb(SIGMETRICS)p Fc(,)g(1994.)2091
3437 y([7])37 b(Rob)r(ert)43 b(Cohn)f(and)h(P)-7 b(.)42
b(Geo\013rey)g(Lo)n(wney)-7 b(.)81 b(Hot)2216 3520 y(cold)26
b(optimization)h(of)f(large)f(Windo)n(ws/NT)h(appli-)2216
3603 y(cations.)46 b(In)31 b Fb(29th)i(A)n(nnual)f(International)h
(Symp)l(o-)2216 3686 y(sium)j(on)f(Micr)l(o)l(ar)l(chite)l(ctur)l(e)i
(\(MICR)n(O)f('96\))p Fc(,)h(De-)2216 3769 y(cem)n(b)r(er)27
b(1996.)2091 3912 y([8])37 b(Charles)42 b(Consel)f(and)i(F.)g(N\177)-42
b(oel.)81 b(A)43 b(general)e(ap-)2216 3995 y(proac)n(h)33
b(for)g(run-time)h(sp)r(ecialization)f(and)h(its)g(ap-)2216
4078 y(plication)f(to)f(C.)53 b(In)33 b Fb(A)n(CM)h(Symp)l(osium)h(on)g
(Prin-)2216 4161 y(ciples)28 b(of)f(Pr)l(o)l(gr)l(amming)g(L)l
(anguages)g(\(POPL)g('96\))p Fc(,)2216 4244 y(Jan)n(uary)f(1996.)2091
4387 y([9])37 b(D.)j(Dea)n(v)n(er,)h(R.)f(Gorton,)i(and)d(N.)h(Rubin.)
72 b(Wig-)2216 4470 y(gins/Restone:)42 b(An)31 b(on-line)f(program)f
(sp)r(ecializer.)2216 4553 y(In)f Fb(Pr)l(o)l(c)l(e)l(e)l(dings)i(of)h
(Hot)e(Chips)j(11)p Fc(,)c(August)g(1999.)2050 4695 y([10])36
b(L.)28 b(P)n(eter)f(Deutsc)n(h)i(and)e(Allan)i(M.)f(Sc)n(hi\013man.)38
b(Ef-)2216 4778 y(\014cien)n(t)25 b(implemen)n(tation)h(of)f(the)g
(Smalltalk-80)f(sys-)2216 4862 y(tem.)93 b(In)46 b Fb(A)n(CM)h(Symp)l
(osium)g(on)g(Principles)i(of)2216 4945 y(Pr)l(o)l(gr)l(amming)28
b(L)l(anguages)g(\(POPL)f('84\))p Fc(,)g(Jan)n(uary)2216
5028 y(1984.)2050 5170 y([11])36 b(Ev)n(elyn)e(Duesterw)n(ald)g(and)h
(V)-7 b(asan)n(th)34 b(Bala.)58 b(Soft-)2216 5253 y(w)n(are)30
b(pro\014ling)g(for)h(hot)g(path)h(prediction:)44 b(Less)30
b(is)2216 5336 y(more.)37 b(In)28 b Fb(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)
g(the)f(12th)h(International)p eop
%%Page: 12 12
12 11 bop 167 90 a Fb(Confer)l(enc)l(e)39 b(on)g(A)n(r)l(chite)l(ctur)l
(al)f(Supp)l(ort)h(for)g(Pr)l(o-)167 173 y(gr)l(amming)46
b(L)l(anguages)g(and)g(Op)l(er)l(ating)g(Systems)167
256 y(\(ASPLOS)28 b('00\))p Fc(,)h(Octob)r(er)e(2000.)0
395 y([12])37 b(Kemal)19 b(Eb)r(cioglu)g(and)h(Erik)f(Altman.)25
b(D)n(AISY:)20 b(Dy-)167 478 y(namic)i(compilation)h(for)f(100\045)g
(arc)n(hitectural)f(com-)167 561 y(patibilit)n(y)-7 b(.)50
b(In)33 b Fb(24th)h(A)n(nnual)f(International)i(Sym-)167
644 y(p)l(osium)29 b(on)g(Micr)l(o)l(ar)l(chite)l(ctur)l(e)h(\(ISCA)e
('97\))p Fc(,)h(June)167 727 y(1997.)0 866 y([13])37
b(B.)f(Gran)n(t,)i(M.)f(Philip)r(ose,)h(M.)e(Mo)r(c)n(k,)i(C.)f(Cham-)
167 949 y(b)r(ers,)e(and)f(S.)h(Eggers.)55 b(An)34 b(ev)-5
b(aluation)34 b(of)g(staged)167 1032 y(run-time)24 b(optimizations)g
(in)h(DyC.)33 b(In)25 b Fb(Pr)l(o)l(c)l(e)l(e)l(dings)167
1115 y(of)49 b(the)g(A)n(CM)g(SIGPLAN)f(Confer)l(enc)l(e)h(on)g(Pr)l
(o-)167 1198 y(gr)l(amming)39 b(L)l(anguage)h(Design)f(and)h
(Implementa-)167 1281 y(tion)29 b(\(PLDI)h('99\))p Fc(,)f(Ma)n(y)e
(1999.)0 1419 y([14])37 b(Urs)78 b(H\177)-42 b(olzle.)189
b Fb(A)l(daptive)78 b(Optimization)f(for)167 1502 y(Self:)58
b(R)l(e)l(c)l(onciling)39 b(High)h(Performanc)l(e)h(with)f(Ex-)167
1585 y(plor)l(atory)35 b(Pr)l(o)l(gr)l(amming)p Fc(.)51
b(PhD)32 b(thesis,)h(Stanford)167 1669 y(Univ)n(ersit)n(y)-7
b(,)26 b(1994.)167 1752 y Fa(http://www.cs.u)o(cs)o(b.e)o(du)o(/oo)o
(cs)o(b/p)o(ap)o(er)o(s/)167 1835 y(urs-thesis.html)o
Fc(.)0 1973 y([15])37 b(Alexander)47 b(Klaib)r(er.)98
b(The)49 b(tec)n(hnology)e(b)r(ehind)167 2056 y(Cruso)r(e)f(pro)r
(cessors.)93 b(T)-7 b(ransmeta)46 b(Corp)r(oration,)167
2139 y(Jan)n(uary)25 b(2000.)167 2222 y Fa(http://www.tran)o(sm)o(eta)o
(.c)o(om/)o(cr)o(uso)o(e/)o(do)o(wnl)o(oa)o(d/)167 2305
y(pdf/crusoetechw)o(p.)o(pdf)o Fc(.)0 2444 y([16])37
b(Dennis)30 b(C.)h(Lee,)g(P)n(atric)n(k)d(J.)i(Cro)n(wley)-7
b(,)30 b(Jean-Loup)167 2527 y(Baer,)24 b(Thomas)g(E.)g(Anderson,)h(and)
g(Brian)f(N.)h(Ber-)167 2610 y(shad.)39 b(Execution)27
b(c)n(haracteristics)g(of)h(desktop)g(ap-)167 2693 y(plications)40
b(on)g(Windo)n(ws)g(NT.)76 b(In)41 b Fb(25th)h(A)n(nnual)167
2776 y(International)29 b(Symp)l(osium)f(on)h(Micr)l(o)l(ar)l(chite)l
(ctur)l(e)167 2859 y(\(ISCA)g('98\))p Fc(,)g(June)e(1998.)0
2998 y([17])37 b(P)n(eter)h(Lee)g(and)h(Mark)g(Leone.)70
b(Optimizing)39 b(ML)167 3081 y(with)28 b(run-time)h(co)r(de)f
(generation.)38 b(In)29 b Fb(Pr)l(o)l(c)l(e)l(e)l(dings)167
3164 y(of)49 b(the)g(A)n(CM)g(SIGPLAN)f(Confer)l(enc)l(e)h(on)g(Pr)l
(o-)167 3247 y(gr)l(amming)39 b(L)l(anguage)h(Design)f(and)h
(Implementa-)167 3330 y(tion)29 b(\(PLDI)h('96\))p Fc(,)f(Ma)n(y)e
(1996.)0 3469 y([18])37 b(Rob)r(ert)d(Muth,)i(Saum)n(y)n(a)d(Debra)n(y)
-7 b(,)35 b(Scott)g(W)-7 b(atter-)167 3552 y(son,)39
b(and)e(Ko)r(en)h(De)f(Bossc)n(here.)65 b(alto)37 b(:)57
b(A)38 b(link-)167 3635 y(time)f(optimizer)g(for)f(the)h(Compaq)g
(Alpha.)65 b Fb(Soft-)167 3718 y(war)l(e)30 b(Pr)l(actic)l(e)h(and)f
(Exp)l(erienc)l(e)p Fc(,)e(31:67{101,)c(Jan-)167 3801
y(uary)i(2001.)0 3939 y([19])37 b(Gary)23 b(Nebb)r(ett.)33
b Fb(Windows)28 b(NT/2000)h(Native)e(API)167 4022 y(R)l(efer)l(enc)l(e)
p Fc(.)22 b(Macmillan)d(T)-7 b(ec)n(hnical)18 b(Publishing,)j(In-)167
4105 y(dianap)r(olis,)26 b(IN,)i(2000.)0 4244 y([20])37
b(Matt)27 b(Pietrek.)35 b(Under)27 b(the)h(ho)r(o)r(d.)36
b Fb(Micr)l(osoft)31 b(Sys-)167 4327 y(tems)e(Journal)p
Fc(,)e(11\(5\),)g(Ma)n(y)g(1996.)0 4466 y([21])37 b(Matt)h(Pietrek.)66
b(A)38 b(crash)f(course)f(on)i(the)g(depths)167 4549
y(of)c(Win32)g(structured)g(exception)g(handling.)57
b Fb(Mi-)167 4632 y(cr)l(osoft)30 b(Systems)f(Journal)p
Fc(,)f(12\(1\),)f(Jan)n(uary)e(1997.)0 4770 y([22])37
b(Je\013rey)26 b(Ric)n(h)n(ter.)37 b Fb(Pr)l(o)l(gr)l(amming)30
b(Applic)l(ations)h(for)167 4853 y(Micr)l(osoft)e(Windows,)h(F)-6
b(ourth)27 b(Edition)p Fc(.)35 b(Microsoft)167 4936 y(Press,)26
b(Redmond,)h(W)-9 b(A,)29 b(1999.)0 5075 y([23])37 b(Eric)55
b(Roten)n(b)r(erg,)62 b(Stev)n(e)56 b(Bennett,)64 b(and)56
b(J.)g(E.)167 5158 y(Smith.)j(T)-7 b(race)33 b(cac)n(he:)51
b(A)35 b(lo)n(w)f(latency)g(approac)n(h)167 5241 y(to)21
b(high)g(bandwidth)h(instruction)f(fetc)n(hing.)26 b(In)21
b Fb(29th)167 5324 y(A)n(nnual)33 b(International)i(Symp)l(osium)g(on)f
(Micr)l(o)l(ar-)167 5407 y(chite)l(ctur)l(e)29 b(\(MICR)n(O)h('96\))p
Fc(,)f(Decem)n(b)r(er)e(1996.)2050 90 y([24])36 b(SPEC)j(CPU2000)f(b)r
(enc)n(hmark)i(suite.)74 b(Standard)2216 173 y(P)n(erformance)25
b(Ev)-5 b(aluation)27 b(Corp)r(oration.)2216 256 y Fa
(http://www.spec.o)o(rg)o(/o)o(sg/)o(cp)o(u20)o(00)o(/)p
Fc(.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
