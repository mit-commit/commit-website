%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: main.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman CMSY9 Helvetica Times-BoldItalic
%%+ Times-Italic CMSY7 Courier CMMI9 CMR6 CMMI6 CMR9 CMSY6 CMMI8 CMR8
%%+ CMSY8 CMMI5 CMBX9
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P cmz -t letter -o main.ps main.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.05.04:2323
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 100 /d put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 117 /u put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
/UniqueXX 5000767 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d55fd4dda249cff0b56b9f3aff
e9d0de215c02a52a6bc77155ff6b8cba5cd6646ba331254ac58ace650a967d3b
272331b87b6df06d5ab9d80fabe9f9ceac10139b61244814dd9fc295ed42d1b5
cd11c2e4beab318b20f51ca2c2930657e5343ab7bcf0e8870a0d12de4ffacb6c
b3fdbdda481c2fcb84408d3d902e9a32070b2af6cd9317a33a42a43857c114b3
f4c3005cef9401f1c2bad3e69150d7145b79f95c9cfaf7a335b277e6435ab374
f6a3e78e124ac1e4615511f743ad65c5d778403a840310ac4902985f107fd33c
0049623e4c496cd353d2ae2a4804110c6a420a38ece5d5b235c5e35886a0987d
284e6110527b653b1b2c68c636ef423536180acadb954843eff4d9a82568a713
b682c574e30f793f093aef755c650e0e7175c2e3138695212d9fea7bd4b5805c
a90985b134c6bc15a19afae0bfb3066363ca3e2568c2ac4559a69fc32feb443b
61243b4508b7524d974636855c83c8149d489b68fe18bd497116a953431251df
bd09fa1d2ef66c85b997ab2f6b7c6d9d096cb43931379ff9782fa00c5f3cbd06
04265d16891ffc4f66e4a0307765d384c32aa83a4e4f89ac79ef8e76eed08450
e3466fbaf54f85324f0a4f04bd00ccc22d32e4132c51749bea28f112c2051857
423ea203df902ae80224d75efeb59094bdc5f4b6784ebeb01c38c34b695e681e
57a93ae18b657d13770300bde28833c732010ded4c8e79078d17acc3d4b521b1
6f2cac338c4f72e2e07c667227ef142d0273e5b501f24b02e9cad75fe9d18741
b36bbb29c9cd3d46964e00d8ba318912e69a6aa7ccf823c12a917f1036664cae
81ddf0d97f71f4232b0b068c9765b7aae1684bfc89850e4521b30c48d070fd67
d7e9bf1e0be8a9e427de5e1996421e30f63f8e7a60c71f80e0b9a9d3fb877f9e
8e90b209964f19699c120fbd18cedcd94fffb09d77bd2c6d6bba42683c82dfb8
f61550b43d2f1952a69192b63e88b3b6adf9dc6f971f22d72ac28a8b93a06047
ae7ddde98f7755252bb5bc7198dcfbad04b9bdf7204ff6fc9a84bbaf6afefd4d
ce581e3efe1f5d38ccb18277838c5786482cb4a8ebc55bdcbb34236da3e18751
8241b36c5c287eda160a7bcca6f5d269e9f7244d88d0b3fe2068fd271deeb12d
fe7e7c28816e0f5a5419902c8d32c2302dd4a1a435e36359f11c38f7488290c3
2fd8fb2ac5843d67c778a36a4588762ef2848746bb08704a79da69f57ab40a3f
5c65213ef9b2354ae9d8b4189780e265b6fc0394fd771119b94386fce6edb03c
3543850c56650c8158f92d8bcd9439de62a73fc4b4a8310badce15a0fedf8f2f
a5d94b63c709cb7bda39a55bc8ac3b899cf189bdbd75799157b9f7c4787e21b6
1e420199539b0f3a4ad03a6ae000c05117d3341a739a742e038b0178aa7845bb
c5faa071536dcc4f9e83195427599ccefe95e2f0c5f5dd4c3c5b9d3e73583398
81382040167685c17a08ea2d46bcaca1657626309b20ab16ffe48fed2372cd38
34da31ff097b0a0a13408fc17ce3ec290d64aa6ffb3f92f825210c5cfcec3536
c83f5cdf14a18dbfa295539285b088cf27ff49256f548b2474ea2407f9ffa812
044769e283e87de8cdef3baad5418279a8a3c0125e13fda6653708f46af878d7
6a107debd8ea2b4e2a2271df0cf8273cf6b9a66d091adf55fd2ba5e38099bd44
6a7dc284af79192c00b0fc19ea1ac172b66a4dec06d420b59f8deb647064d8dc
1aa1e6257b90bedcd7285545a6821b868dd6e43167c90073f225b407d1e5fb86
b95b9055f56c07e77184c11d528bb20c7d61b5704438e65ca4d3c56dd12ea3b9
7b39ca8f9c8e6a59567bfd8b48d0c50bf30025cd335be8964fac8cd12d5769fa
742068a3b19f79d11b2b31589ad7e5dd12e45da4523125f81e868c6d812b500e
1c69d03101eeeb207dfc0df441c9c12ce2a34c5047f5a4ddb25b
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /m put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueXX 5087380 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311e252234d51741e18db3a68e8ad10242
29e5817a10e796a78d2c7f7c1f50961b9a57aa604c9f821dbf5a9295197bc666
31678d7d2c7e1f8f2151ce0c29efce46270570f4301c5dad1b38884732e53dad
05dfc36b020e726ca575f71f04abf2b49e1f1d6d2a08a477658ca9a48f1c8cce
14382f0a42201de56e2821ee2b0e91a818b1b753d810ec2428dae5153b66af66
9442192024becf743a8f6264a58a0b3aa823510a4957d1bab3e1b83135362888
3e392f49926471a8021fdb48637baf0abcf31204b1b214f48c99f44af7782323
69d772ae4f49be53a1bf584747bf29b94f530d59a5be5370b8dd0691e32a21ba
9d0d592cf3bb50a99a3ecd18d6c4114cb4cfecc49705da90d7edb10e3a28f9eb
a49347a09d31eec896f2a28e9607d99d42914aea16545c16e136bdd0b75fe486
61e24c7a9e9b233a76754c760822d0a88c575e08ae3e3f081d7bfb80ec4c03ac
a08b65fb6474f71fc95c7c2462f2eb3754e647c29498288f2ced0bd3a2bca5c3
2f80a61fa667802d376cacd34de1f9572d1b3ab09d6f352750db4a768f869638
a87457889aa502850427b40e1294c5ba33e6b17532b2d13b5f50e71582f93daa
231e86597872a2a968127afb0f36257a76ce1eb24e6c4f29fce2aaf6532fb5cf
df84da03f03a45b915209f67d398c7c4f7a3b0623750259087a478dca684b29e
a8b7f52060bae9394369ed1cecc645d113cca3772a8dc36c6d916b5c5e65454c
0a188a33395fd3da67ad0a31ddab6a8434dd80f0bd0ea1a2a62eecc331d88b3e
369552daa1c575a98fe84383548626b65be7c24ae7eb61159f149872cfd87cf7
6c1a7c155c7186c7600e58cb61b8cb0c5dea98268a39e928bf6fc53985eaa763
2b28c1eb3d82e4d3fe225223f4266d2b6147e344aad2d4884a9308aadc7801af
a606838925e3e50ee7aaf73f090baefcfd4e34b795cd92d83c944d91a4940f2f
c955d727ea5bd76f0c8057b12621eceb0947b0a5dd10dbcbc52957dd978d7db0
c794660afdd4e946b3d7fc1ba60907fb3f756aab0406c0e7bce5a2238fb3e12e
07e2c0a7f465e90057642d704434ae0b57bd46c8ea91ab2a386e24c6deaf9cb0
8cdaa8fc4ec3fadc06bf28659cb878453db16f4b03925b2127b83be8fc240f33
23ea950b51d70c8fe861e30c346efa0a0125137598caca5478991e35f5bbbc19
4c787488ba339830bca15f8333431902e82b66a514a41c0bff92719a6a0d9587
4cff62c622fc61a0308a69f9fb7ef51bb274ce9e059c04b64e817abdbbb39375
bb4d84ca40de5fa46b84b04f3056d74af0ee6444cebd8f6da5a604290d9e58fd
ada0ff3f16aa4928bd0eaebd6c2a9cfc92188640f97a047a4f74012a39119e1b
f20999bf7a4681774de7419b0c26d92504bf0dc494923c336cb3d601df6b1f03
610bf3ca8a68472b45a472f1382bebeae1a5b924361309cb55b44d4c1988635c
dd540c38041cbb3ba4192342e8cff16adb06fd0817648584c9868aacafa3736e
2db7e6b3dcf4f1f78ebf388130d35bab736347badbf3ed721795621b98f5791f
7ad1a9d2b4dd574f53985d21bcada4950911e25d068a3f6d75e90afa6de94b21
d4c256fdcba2c01974b9e45038e63ab4633ef2ae9f4eda443034fe0596b7dcfe
62a2d0ff964a6c87c8f7cf15160b4380ede8bcd0cd4e23882f8040db6c6597ed
962336b9eba8892cd913ba0e57e907f4c78d2e143993f6948b69126831ae4e0b
afd6bee4781c1b836df5f835ddd9109cc96c897b55ea1763224db60177f44d71
5cfc22521b8874da2a4055f5b6cc6ef12775a6d3f8fbb6851335698e75d4ed97
7d820e7f540860e804ad52ef7e68ca22aea89656b27ddff169e27094f3d59809
db943553907f4ddf084c1952763f019fa8ac6081d36c29e0b6cc882713509490
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 106 /bar put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueXX 5000818 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b66566ca5ba42b1911a
5d7f1bf343015eece988b7a93bce0c7aa61344d48aed9c92c8698d4b7c9951c8
7d103f2414b39e1437f9d2e50c4ee5f218f2e6716926a79ea978f13b1f855345
191dd7d31d8f82c2e3343c7a5894d95bdc492c28226834efcb5c12fea36ac5cc
430e0aa604961e34888adf6c1f3954cbc2498e225d953cf5685852162346f474
5a2a7087d5d7ad486de16d2ca8e15cee26e012671ba3bdc7d95cc8c98bb774f5
08625e968aee27ff7d1a06e63bcfb5aa4876c3f8f13b30ccccee73c3caf4e70d
98e6ed2f422dbb4950bf789680e064150995941a9f4dd68a575949847a7d012b
b910bf03a7a227d51386469ec9ef415f3bb849d30411890d93a520e8cbc872f7
5a1b270af78e4653c99aa3789047f53c76ff56afc6306cbdeaead1bcb2484152
b10628e1a9c2612385057a7ae1156d95f88e2027f458ae327d2a8ededcf7db80
b3dfd75653ab4fa1661d655d3b472612d657f1971ca7df759f73ce7030cbe7f3
1a7d106e017f6163a95fac4a6058a6dc1988ab70346c84db0c27686672df86d3
27f0b397e332dbb89b138ed4a863d2b05dcaed1cf2ca9a1e63259fbe20376c72
bdf0232208376a879200705834b7351794ada9fa926c176351
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /equal put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueXX 5000791 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b094541f345ec367ae85ca9bd
24568a01d3b9f8095f7420e6c423c414b3dcce6da48dd1c89a56d078e0d0e2f2
62a13640a06d17e44ee3866c3471fb58fedf5a3b77294517651c16bdd7267d39
a54e7171752dbde63ac19bb4b3021ce95eb5fe67390b09ae4d9ed4d704a67443
f55dce17acd996c1f5e023c9e5a18cbeecc3097f23763acb86cdd7cd13381ae7
4e48495ec7fa520539d87f8a8dcb3c826275469b6800876a457e7d1e5be867c7
b1ccad69742a8c9b0ad943482bf2a4ad0aed40baeb69a0233bad36b4ca2d2da7
322956c70375d152653500b2f22d2ab6990cadde2da14b4917f7515e64bc3d96
bf775258fc7dae4e42a4c9b6da8eddec4a800c8aadc8d75e48cae52137e05c03
677f5d6a82fa46d9f2fc7f56d62e5c605a1b7898b8d1401c2cac1a0122a2c8a7
aae09607f2c5f29293a09b9959399283be89051452898238b777db9830ff4318
a298b221c4a820c700ca964fc99e6b1d9eb0bafc39be9aa9dffa2fa326b2a466
1e67261bb3dbc85844e76f9313ab533ee16bcb478166de5502b68e6ec1ea6110
f53206cf1cfea419571b0243244b32ea38b828a01e62b03bcf476a32c2341cec
b8a0fa2a3f3f339315d5f3aa7704408f6617d026ffee4925aa48537a4b2e556d
225be09392546ad561cd46cf766f0ba14c6854c5af1a528c3842b0c5aeefefcf
19f19cbce5d967153c4f88e51c776cfbe10d39328466f7a3b83d85601ef4d1ce
0cc136610fa6a74d9676e4e99291d565cad27b9eb2337b0eba4148efd0eb2866
ebf0a4209ba135ad1376cf9cc2d4110f36121055caa3f2e62ddb460c33c83b70
83246b63b444a420449b61facc3205103f953809a6bd6526d31607e63a3cf827
06713bba9174b440fae925fdad0c8377043ca3ab64c71ddbb62fa81abe8626ae
bf5ac3792ef771c2ed79c110db751a702a7efa45398be4a822ef7538f436df6f
d7c86ff3eff4c4ae56e9eb3e5fadfb8a08266ecd31c3deb8ab82c69113d9fcbf
934a79d4008bdab0f584225679f5e019b0169e20f8b1e81952e9010c6e66f11b
64920b7a3a9e9d05c3a6b2468791d3506ae3db33dd4a19e9791861d3cdd78860
43f11baea4853c769f39352b5c3315a215d9f6f9c125f0bf22c879356b31d8be
f78a2979e99f40d8281114be2ce264eea07b38e0c4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueXX 5087383 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a196cf14c95a4e02f9cd2da8c
db2546c6df52e524745992e18d9ff87aa25e4e1800bbe4ebb357c6ef55ed6d03
6d3a00c1ee8073266c21d2f0ac85d656abf61d7e5a4fa87da8ec3b5329e434d0
d2adab706b42a2e5331be5295399d803ccac03f631f01f39a022fcdf63486b68
7d15ef284a77def7fde4898543e7b5f7ec267756103e477f547cfb8d2311c4b0
09deff56085f5d419697af1846c8b88c1bbbae149f0f19ca3c8dafe19cec48fe
6b38357246d8b5cef80b53bab4cbbbe8bc8318cc462a4158258f456e697f6058
86010493f252073ee4e4c9531f23485415ad6bc901bbaea659ef701f825f4b6d
5c9bed0dce7b63810f906b33ea4955531ca1ed1fc120cc56dc1e277a33222cc6
c3a97552607b865783faf0895cbeccd0df54f57bd162a88494768435eda71a39
69718c0c5912d3167bb0971546d733e735aa9bcd89f5aa154656031ab3f6fe41
94ec225ad03ab8b67a9da43ab365c4df17c23e79f685c3b6fd5b654e4a6f2603
6cec3a8641b0b57f93eb95f9e238832aeac2061f3153e0f375513c974f1c38f7
b59edcc94716f2862cf71c9a2be8430985da1cd813b1e1c1b9310564a2eb1aff
52c190f50fc981dccb64bb2c1f7a62c216f211c162c2ed1c554ef49fbaf12b31
aa3b2a80fee259dc0a2a4242869ddec7c29e2941792b28bba7f2c6f77ef69638
12b07d6843f33b51e01c8626b26edc34e1e0fffadede5fb468e8cd5de7e5a64c
366967578f415484d122834de4a647541d66989f7d8b25d1712d8d16729bd9a6
472df1ef13518758e7ab8ce8429d80f39ebd0dd390df189374e8435d893518df
39ce6dd90079232172c49246b3174c838730869681dfa47bc40fb8d9dfd73326
2e6f19e71836f2dfd24b44cbd2d2801e560aa038ca708264c38865709681cdc9
bdf52cfca4cdb0133d72d728acdca74f1d8a9300e20a27ab3da628c9a1204b90
59bffa85e3bb51a0126384414175792834291214a4604321d9309fc1ebdf00f4
99327c0ded743ca11c25da5c23fa82cef4f7d7f781bd83dcae17c8f89ef2aac5
403e4a76dde6bdd0285d491c6d1095998f91eb28e917256f67471230055c2f66
9a4decac9a6d6ecdddaacab54fd6b102d08203068e02b28e06f14411f82f137c
8047b402582e1ddd93b0b4a22c3a92bfc56211e0ba2044f010467bf3b15a6577
ecff364d325dfd34246c06ff8fbc740d6a38703fc7572853b93e7d273405f662
66e8b83f4cc9b05def370d0ef90e1926ff81ca863d4b237ef87263dfb824327e
308a5f505884dc472354fb18744ff3c19ae7ae23b1d396a91b1d99964986cda8
94d31bc6a221407577e8578e75bd87b427811c72923a763c8289
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
dup 106 /bar put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueXX 5000816 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b6a18979f258b8c6ed3
ccafbc21aca420c9c83eea371adc20e038b4d7b8ac303004b0aa205f04135140
76407216032fdd22e6219da8f16b28ca12524deb7bca073cc5eba65c102a5e85
fd48e6d062cd4283ee570a7774597e5bf0e3400b6be72db0115f3cb12db70ce0
83722870cddfadee715f10f1fcaf20e06f3c54afe5ca238539bfe2b596116e83
f5371ff18fa5003d8543226cfd4025f9940365b392a858d27f078d3abcffe4a1
54e78c7692d1a32bf935967c64f01b24788ff8325d61145e2d4a489fd986fb77
38e6b254522c77ca2797a504a9ce4676a77ebacb026eca94dde5922c936f8e90
c43e2851973f31a3280c08220536dd2c2de1ffd15fc73909020eb6a322f876e3
29a3e67f67de074a21a0a1bdaf3238715796502c367d464382f24a8ddfc6e9fa
8b578d9665860e7ea1d4d2562ea24d8d46563968c1514bfd3b8e288258e829ec
ee0ff22bf9769a7e9a4e736b225ab9071d8f64a36d76462956f145df5577da46
cd5e05e0b41255daded48d23ab6d5b2bfa127039b7754ed5667e904f53b07cef
1546774e6db741c7feaf1edac63a5bb79f7ac66492a237264b9f299c23a85a6e
2bd207e2e30b6ad714be2ffa76527f1e1fce16a0941515460f95c4829914b690
dfe860acaa2ac14c7d7761e240c9d88f69b53f0143fe5eeca5627ef8676f4d64
2c602e8f43523df86a8c63adcc0bacd5c4ff4e798e41e2f3702996ac87bf2287
f813df4144aaa6fadff878446970c577d94e8a231e
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueXX 5000792 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685bdd20eb05d5e7c2126132e33a59a7170609
dcf4871a5d023c9ef57d3362d9f2d7a440bb69bf653364105f16f4d0f03582f9
aced3d05cc76489b16e3fa8a446094d30038b06ecceda269f2eab9d19a99c7f9
39f9548f206c5a457a19270b2b82c43b091dfc5573468eaa3e7a4a32f8042891
d85e4b180fcbcb3091d2800e54c87d84ce9cad6869b5aabbbe47f40c68799893
d22b765295e1e69e33aa048b7ed98ba480ceca91f3ebf8ef85fe9a3976909626
b95ac5940d53f9b02215d84a44837ba25ed15cce0d504f1d335065594f3bc824
5405407591cccb11cfd4645da60d960c0b93f187b0cf7b105543c0b70f89af5d
264b6c026e3ae646acf145950202ec73282111e3e601cf2bcde22ce3edf6db23
516481420f26552ff4472d749811f27768150450d0d0ebe3c79f999e99b5c0f2
2eaebb12d97782b1bd91b2a1f62a76412548ad53c0dd411d4a08c0f071c2c218
63d9adb75a4621803ecb84c2bb235b620b658984b2d8e0c4637e2811bc8f0d04
6c8935afc70141e1b2d9c23bdb251d304b3378faf8928bd09686aa0340fb0cb1
dc48c996ef91530ff078666fad227a3589f50b605267212d3a65ebc1019a8eec
9a0739a00279471a01e1505c17658c10030fae32f274fdc8c8774b0d5406c384
a1d17068dcb0c2575c562fdc5a2176609bad9a2c255e426a4325a4fc3053c7b3
2f35f7bbc9aa50135f30223360fa2fbf019294b3af98224c5c05d6038db08bc1
4103010094dc215ef9ccfb96b237851332c8ed81a9184cced4edbda26b381f0c
73a2bc4a92533b0e667e82ce49ddd8ac9e34d9d40fd4b5b9910eab3b1234bbf3
af6608d66eaa424c158eddb75fbe39462708da8f5c18d92fbdb2f534598a844a
e076f96a741f8002af3b38d7e4bfa363f5f5d1193014f7187c401d018aaf7e4a
e43610fc670f5a287f179a18aa7c9c7eefd2d5358fae9f6455c11c659b6271ca
63f1ab0c875962327a91e236e06ff1221bed896886956503800cf4832453342d
4cc3ad3b40c2a73b08bbf6862f4deaf3e19e3c42886c268faa05c84889ccf316
c6578a345f8ae3555bf830308e9e3080eca7b9914ce5d5bfb52224fb1cef75fa
5e9cdc3802ddfbab3a01537efbc3b30bd125bc8b786b5b9b417e63510f0bd4d2
b121cf9e0b593bb6b59a934c2dc6252722a3f7f56ff1de25cdd53dc4ab1b9c54
52bc4066ce79ca1000db6671ae82fe7bef4bff9137a926c36269d3d1d910e02c
ea2602ddf3b4c453d82cf570c54acc36e0ffd7af9280b891e39d66d3feabf151
ab86f3c740f9de608deaab2505a2face7db597286733ad3af21fd41ec69bb777
eeb831fb53b0e232e4fb69215fa3020b2c59a785d1467dad1d553f322d1c4722
6cf7b8df8286cea3c9e36363e3b0393aec9b27442ab048fafd53223d47eb45c5
756da288c6af5c504ffd3ea497fffc7a56d263445ba0855c53bbe1f567095464
21eede3bf45fd9b348f1efcece7f2a89c6446859f237db57f8254c26343188ea
9c778a317a9faf090f1801a0058c558c4fc00c3517b83a3ebc2d097c9d7e64a2
d21dd9da9870e00a5d982924f9d6375e65d3890a522affd7e959d2b4329e087f
b0c5a4b536bd233f3e3b56b88e65c91a418dd16055e1b99a1a80c235012c0f47
bd92424be51cab10029bb0c189475a18ee7e14179ad52add81a69f8d58e70eea
ed048b50f885153f4e9b189da79e06d9145f61009facc5c4c84ad2247947f8ec
14cba633490ed6c643abbfe73c444a823ba0abe17e53afc4d85056f11597528d
5c3d1f0a9ab374a4aca43d34965389e6f936711b7fb25b73d055ecc90d8fae42
30fec24fc62f1dadc5478f5f0515f30efd48fefcd51158a2ba4f5dab0198b61d
747b7283f179252983a46944301b1bbe284a5dbbf6b8d5c05501541d0961465b
87a78b69ab365b2dbc452d2617acdb9d1bbf53c98f61d21d749a188194178f06
8268c8b55a2429b8ed77d5202a45c79ebadccccb1eb2a370fff6c92a8584501f
a33688019da444d3d9ff8283b5813160f284d42107e88f4d8f77ba5721903253
32fa7f3d766b15c698c41eb317417d78e9946413f85549a1e9c9729fe50cf834
0cec0034fafc178fce408923f47275ac63a2bfcb1078d00b53dd9b7b8ae3955a
0bda5427c652e5c5aded8115f70ed94fc3e8a3d23e6392621d2284ec490b586b
c68b409d047eef407d9de354ddfdb78deadcbf717dbaaa52701a33b34fe23b3c
e5b33ebdc65fe4300417b57e0c4a1109aba89226b573deccd2eacf3bba557389
0f67ba6fbceca6b7272615e570cd918ccb8d24c07e62797a133441e105378f23
9b26d629b730c659ce1afc1b80f910b933a8f51abcd834c87ec35f713d59924e
1bc79c415df6fa1f6db5ac7eda01f8054f32b6e4983fb7da4dee9b36ed354f6c
27ed3b443fceed84de118e327da75e8b5618423d5659c2c594538963db835922
b774f0302fbc246e6cf06e2131876a1cf6392ff2e22e8cad1b739049b127f5fd
1f5f5a4e8f1659caede5672f928308b73055244382081945cf93a36df5a2f6e1
6154f9bce158faec35d1dab88a0c97912a49ce28c474d11192c117a2f7edd91a
9aafcd796c00477a8a6235d744d3dc3a1fff8b51f636e9935d54e849eada91a2
e099a9c14bb1e53bfd587f7e45d042f1b6fe683830d009db4de0f791ae607f1f
c96c184648f0ae5a3b0209e9fe83d95ad2f3171668ef66f119cd3a296e0c6113
91b32ca73c27a4058568f424ebad7dc93b9f74a6dc951b202b6466453bb3c586
e18a838af682f94f9c547d57a8ca96d29f3982b7d8afd7d7db365b557e14420e
de0cf30456a2b549b89837429a65369ed1dfc3695a32056c5a4f30304dc1fee9
c98a424af8e61f49b51f14ce8d1e9741333cc079fa3135ced4c35a160c7febf5
0488cfe6691e09f07d946b7c227f77c7409a86762e390801683ae4fdc002d92c
54908477fe07386cb3ab8da7f0dc638e87a61033ca93b8c198101765b3cabf8b
605ffbb7da226074b2f8563377f37048a555af4da38c119efc02c562817c5642
9e8f252f0dfc03c6d2be4dfc488ffa8c5782e8464cdf0b54fa1cbd9cc81d4b18
2e04cd9344a2d602c92e8e2efb4541150678d3fc6ece91be391b0b219a79314d
9d3d4e623c16a889a891317cc0af3ab6520890dbd432e09323abcad218fbea8d
3a39dc0fd855a74a52ed91e29e7bb3d2a766e404d55f89a934b6b5452cb1a252
5d919fda2901859044bc38db41e740408648d5a3899bc6a93cc7db53882c1728
a6b87ba9d6a352c48567ab3967b9234341e26e28671db7db844b18ca64f25b19
70024b31cd7109b801c156745f2202dd86ebce7ab543a37d97c8a3e6bebe6264
3ff27187fdd73492b9eae60aa87647153a04bc7d48189ab7c95f7b098574ade1
f814fdafa151d26d369af8f7500a26aba7750587d5d2f38cdaac3d74ac183e2e
1fe1a29297af93c181b45612fd64d3572b65e8b868a6ede829ba2461e71abee1
745917bf934941b008f0cb7e4a2dd78641a16cbd5e01a3103fe01ce92d367699
8c2eb0339ca487d54df9cb9b8b243e5e4ea85d13caccdd8a00387925b2f0d45d
f858b01d206a741fb4d34efc613cfaa8fb8ac18570ce677b5b3714a9e0616c84
2c25195ccab68d0f02a89267316910e7d367726ff0d490a3925e499d0ad8d6ff
3ec911e3a9cfbaaf233c420b2d70e70c08939701435e1dccc191de5f8f43886e
9afa02a832bb1763beca131e226c1f5ee0d1f59063a3c8f7923f156f745c22fe
30bc95955e61135634f988d89e2cfc8273b7e855f5481d6691443453f91d7b0e
5216ea310702fc198ad4ecb40fe2671e41379eb07b4862b3260debd62991575b
725e4ec76f08d80803b6996452de4ee940ea2314863c9f5fbc3710d91e60fd29
7d7d4e15dd809eca90e4c474008c0bf9bddd3812a71def2f455fce7e8b44449e
3446f4b075bf11af6f6efa583a71cd690af62bed4e98a607bbb172552d6c1dae
1e71cdc47dbc6ae9fda039eac616361c10773487ed42e8d195f6a767e5d459c6
656cdcf8ec9d7bdcda63660f48f02272e325b03b162ce93e562948b0084873f3
21d81ad0e180cd611f427fddfecd4a6b4c6fe21914bef4de457158a588e726f0
410dd8c93a9057d53d66a387910b861fe7d2f0e3b2b0fcf38d78ce2ffb49b050
0b57df47d19905664184ef68082dad5677de778df7a5178dfa0c695074b21e1a
b8af742d832b71b1abd90e579d53c8e5106c3610b3dd4a081fd750c2a0f31f37
45df34d0e9521d949ec366b65a6dbaece86145c916db22097a9a8f0d434b0649
de27c79613fb80338d19ad7d01423c544b8874ae68325fd3859c5df899e1022e
e977570f002bf946f84726b3ddad8e8f37c08c26669ae17ab3452e5b23ce68b9
bc38e9ee5358d28756759c3d53c80f4f52e66621f8ac5147125d4e391448d678
4477aa336d20fffb1de9e7d954d3b8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /D put
dup 73 /I put
dup 83 /S put
dup 97 /a put
dup 105 /i put
dup 109 /m put
dup 110 /n put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueXX 5087381 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a1e67ed7e41cc25acc04702f6
8ef703e3d45722c1a91fdef7100a48631a02a6f02a08c6b1f9b4df8310385b86
8632718fd87119a233f219d9411383b7fa9f3e4780d8c27e2e89e0cae883d664
c3eac57a3aef8988a2e9f0f8c7f53e0a80bdfc4620e21287d0390e1975398544
7f3ea66401024bea75e1b4c4437b7bb188f76f96b918ac7c6ad7e8ae7f21d8c2
790f08cccec904fe48ef39e597ed4d4237c1d1f596f5906b19ea308020f7a35c
168e327ec3246b1dfabe912f6b6daac09974876d3996e57d180261110db05f15
e3e8eebba3d90b5764c03df3033a1ed678ebc679569a2fb297378b25434c0f20
5313ecb8a952f07242d3ee731b0cdc086a4481178a3d65129c47c09b22e9c431
e11b3747b94c26a757c38d06001798c6a568303d541385244b967d3b1786edea
f65bb53c4c2fe75e4b1b15c2c78d930b4296c80f08bad86012451edc8e9f0854
c3b390a16e27b11b3d45a9f72eff8baded2242dc928a61685d79e09681c97425
5b90a498614cf560fa5b1718981388268ba206a96989e6d0b5d485d9aca5594a
e67dd7b34d8a369adb06647f8aff8814d6d9cdc04a4835918e557174c5bc0f3f
bcea9907a04cf93c12727ec40db3f2f77596dca477862747435bdedacd9b2311
6cc97fa47ffdd7d897fb6bdd5572e35d34e7e1cb5e7273a4ffd86525323ace4a
84e1297028c2bd5469baa2e75d19360c2c9042139d5e7dd4390a6a3935424711
de21910126d750ae279916ceb71da3591d60dc62db333c5021e2c1cd61ade51e
939b57dea8739d3e815f5fcc82ab6ed4377bb44fcb88b7bcdddf5e2179cd7274
1eaeebdc9c09c82865f15988f2be54870a228fabbd308d4018c20146d88b2d6b
98419671e370ee0d43cabedcf24839484eefc9b07ad5ac0240eb2015da5d2dd4
e2f4bde5db3ddd3b35832829d2d96056deb1d646380e197ba633a63d830307d3
fe6dca60ad60f81405530c9efd8b8f06d125ec62ac478c2c10235acf332dae14
98e9f5c1d6a552d9b4b1e35930c5f2bb85cb65423d3dfe81b4cfcbdf06907ee2
20005f21bf03d8bdd6b7a51e0330c88d99bdadd0eef5390d828423ec24e99fae
e4d5b4078781a72566b4c3d69da05da8ccd0af3cf95316dcf0da57928a2e16bd
ca42c566f2c4ce11962dbb51ca3ab0a439ea00928442110d5e30537cdc2fced3
59b7d594ff15adf2d98b095e8a1313649d05105789f191ddd18c58815fa6a5ae
ce6f87aea22477d0d2cd2955a3259752d021a2e0a13bbbf76679b7399454fbc8
7f985114a3b205cab5ba4982e0cc3aeaaf542270ccff795c9b5a2c8f98ae6cb0
395bec8588ce0be7124806ec0876a9f201c7bc230c328fdb6392ad001ed0a1e6
72dd608fb361a934fa6f85b3bc8ecd128965e4d56ea92bb132fede88f17b0881
0e9e7a7ebcf5d66c050473b622b6dc7093ef68d92c82ce877c3122e74cef1b40
e3ce1a59b43689d3463d97edbe279bffb3afec9621024cd059075ac36ef76b70
fe6bef1f6630552592f6d67a342141b0130c8b56165fec8253fc47aacfeb8b54
a88b6359d818329a23b4164caf9499c8b089c85dc44314ca3cc857a63a2b496c
c3cba997598e36e0459732f06d215d9f946e6557379b836e23666d7fbf6983a1
29d608c1109a2b55dd8be13222a002edd64984d3748ebdf15a63106f45577265
67a665d969318f9f16798598e705c6c17a6469f5008d7bb2e105fe635172c543
3a30b9e45966df85b52a0ffeaabad808087f221a7797f5e9308be831058369b4
7e5611a28fd692c92816a13268a661dc5de0e7c0ac7bed764ea7d02e8b0807d7
aeb6d8b67fcc8f725e59525d56a6532ed5d3cfabfc7eb8c6f48ef6c8ccb9ca96
a54c795b1cf262ca9f4d1f708526dbca92949403cd46b799245df365455f2d99
95a423aae3f42d43e3151369d544ac5ddafc74e3ef1d4826f97ae97e44319b50
cb1f232311e184deae92a33f3783886486b974295765c0bc08eaef78e34fc4d2
64691d741b65cd6de933e3a713cd4e8b0cdb376ad5e05cb56ca4ffcfe431ed73
c9f59dfc0ec600a05b3705fc7e825a4cfb6ea5803a98513687db27ea6702168b
dd4a4f787fef144c643e19e3487c6fd52224732b21af6344bb75524b37a10dd1
634fdbf21f0545249e2bcc057691227abe6b46828a9525d1bc1423267cd04a59
a021157be10d68977475b991a4e01775ef6568427c9180016eabfbea58b1a2a9
b82366daff7b09a9e74646d2bcbcc1636af915ca073d21d5701d27a7b7e20b91
6d1e43719001be5556ca7470b5371f1f70535bbbbe27181739c16e98f195775a
f29a8571bcb02f19b56b792ed4ac471c129e83695bfc6dbce10acea04438b3d3
438f8fb89a6bbd29898ee32fbecf1d9929a865d96d357d2ff663f2d7a9b3fd13
a7b6029ff08463f04b8bab4a322671313148d4e57e3f88fae16a9e3fee8c1b4e
5102815dade62752a0f6469ef1d5b401d6430e3ef96127cf36dac0eb2628333d
31b57a34a65f8bced0df06606e27f7d10db101854f16a7b98fd420b6fd0eecef
5985594c5dc139b1794a14cfa14fd6939fd727aa4b94cd05669b92c1ef2fa2b7
01f6c508542d5e67d15b8c52edf0f769001dd9c1abca09fe4770abc68a03e1d1
81ee48e7719d519ef2a199848a22601e8b3436cf6be4582c09d07101ae47608c
a2c75c7ac373537f17fcf5880f42be139613867221ab5e55369f36653b553343
816f252df32502e80aba9c5905f98041add9dd88dd01772cef8f76be3a245f17
968e87560d18c77dbbb3fe93d0daa4ca8b77214e625e4f76d0035304a3c218ae
2ca4fc7091ba793707cbcf1ddd5964d146e5df32977df256d2b54d2fa3fe5e98
ac0d8728b8e15c972f87e4dab610a66c0b497ac2167f2fbc9f7848809b004ac1
09c0753275cfe814434e807d81650e75da03ed5190b43f4eeba689bae2e9356e
3cdf10bb330cd99c74a6e22560e0c18282c5d3d73aadb683a9358b1dbca0c1fa
8be21f431e068b0f9aad5d0511dbebdd1e5c6662d73c013a0e5c0179d15e1218
cc3fffa57cc18b48e452b79464f175573c2d3c74ee487c9cd206a59f35acc094
bbb1f088b997eac536a4d9e42fd43afaae862c7336ca8a697f23437452d26473
fb3da0b040bc4324ece687b2f6909eb91cf239a0559b9cd479dcf3b69ac96b4f
ca8bcdc1cc895c754267dbdded247d5343dc9e70169a371fac56b8d8287f905e
472bc100fdd83f7914abd750c9c2f8324ff582bc087a28bab04544783054
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 55 /seven put
dup 61 /equal put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueXX 5000789 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b031f3fc6c13d7da7277a94ba
018e9998b3dd888011a5d7c4204989f30f908b95533bda845746b673ab71ea57
65a0d14f4350707e47c8276305b28513cbe1bb0dbd269a53719bda46e536685d
df78ca0146b6b93e760256b74d939d4e35b5e77238f04c92298dfdd188feea30
e053eefbcbb52f2011772b3aae39f5805597bbc1e8bb75a446ce014030f4f2f0
f49f9e962ee4a1024a746fa92a3628db5270732b54e43fe5ecfa524f127e5fcc
788e77e66098336ad67fe4cccaf0253272d5df79864bf4b734cb9a5859d557d8
bc11b8e00221ebc12e97de4b1f466ead83a4c894709363bca9040410a52d592e
34ee40cc7e5efa920546b981aa659513a24b1b85c221a1875b62d0b89e57a368
321b8043a5b094e0379760a443d632892b14ad6d19dacc8c78093243ad67e6a3
08e56e6b68412ee690b10dac6e17708754a00d51fc957b500eb80175716eef4b
2ca1ef867614659bee3f2b7319e97b6fdf1efc847bf3cee3156f72f21751da8e
5fb6898919e6799820d3de0642d756e09d6fae4ff08dd3deda3173bff4bb11f7
9109c97ddc05897af709ea199a90fcee8ce4c7a3c15b18170c41c04de2d3fba8
f34296a95b8e1e8de3739b17273f8f2c85e914615e8eac5e8bd2387ba3b1edf4
7968f06e2067d836d0f9f3e085cdfd2de06a62c81d786b304326f7002e83160a
36598589228b4dddddc43c85e1d126f8fe81b828028e26317af5894aaccf4f69
6301e1a9fc45935d8a414957f08febebbc3a72ada80f101e47447d019ade56e9
f4fab969bba2b44e47399fedf5caa1bcea216d7ba713d523db6c2aa8118208aa
5a699c8678888b3be71c497987e9b990f7c2c44741a550683afe76b83cf36378
7d3e5f1b557b032dd71987d7fac95cf59323688a4e85f0e8a5f16f98131ec88c
d03ccda9f66779031b013282c73f4ed331f583f889c932fa1609ec09f0a5ea70
4affd7e290b3beffcb30077082e112774442075df317ddf585284e87943a8696
fede5df3018cd7717e7f5ad53034da1621ed7b024eb74f8df2b37a37da939c40
7e715164d078ae270727c8b814a9587690c181d08c78bf0de6a7694611e9013a
9219258939acfab8e0aec205ae3ba9b282fd64022434059c87d27c2374cd4312
462952710e06d9f7772868e8ceaf98c2360166ceddbe5bac099beb3f1396aeb2
68e6d6013928359ef31eceaa26a84bc4613576efdcd5e95564c7a2cfe0656435
b10a5336d34a743f89efb945c3356d2c8d571b3a1a9d72a48687ee2360e70071
494c29f3e3cbc23a2064fa394148f29242ce4f36dbec69bee4519f1d9aa614d4
7a49513a2962d7bc7e165ce93567384836eb11495e80e1395cf498b127b4235d
615dd92798ae51a68531270a14cb6454623d18ed3303e29008c2021589f81e81
4a37a179b6addbc31958c3a24e360539a1ac8f39160fae1750ce57f946f8d01d
6800ab386ce354f1e8c6ae5d5554874174f32b0314810525ec6c4dd03b82151b
8a9d9583a60b85c061d16ae0ce559899365434e9e24436238c196c667eb7f024
8e39c11aa8243febe0d7779cfb60a725cf437331b417bfadc831eb090f7730a3
47e246ead10d03657bfaedc267a77732dbeae669951bcfec3efdec4e741f97d0
89584a92205b044eb7aa9692b0ebaa5dc1f463bc5e2b7fde55482f2e84897fbe
1983bf134103571a19cf1bde6cb89a3fbc0ed16a44e598ffc04a6121c2b9bdb6
abbdc59ba4e325266fc57dc2b11ecf67aacb0d570ec5a011ce9fa41def9ff798
07fb77785d202c02aa55b703319f00e4568ec82295c97ec14bcd3192f1b4d780
b748ef1a6b586033c58c14420bb9897f7c029e1de9d32670633a8d33750a57ef
7694d92aedbeaa565a8eb9612f937a94c03bb36df557b019b2f02916e7a579de
55a02db81603b091f87401eec1b9cb13
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 67 /C put
dup 73 /I put
dup 77 /M put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 119 /w put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueXX 5087384 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b33ae3d31bfe98efe259f07f7950237bbaee4f7b64ffea83a
757fa717d50c3298392891bfd60e34a056b0d6021da3fd9b8b01bf78b0b23dc4
ea3b0605150d20b27ff9ea5f2524661019d982a2e47cd7c21ee5ca9ed9227821
f8d07119397de26838c11d7b35bcedc43e011626e300f8249ed846d7b5ccbd89
02550cda17ddf113df658fb13f8162681013766863784efac128e01ef997e1a4
30312afac8f3d948edecd7d5090ab5c864b91d7f6e80256f0e1fc99f1102b74c
61cc456e2e1bedf0e627d5f70f738f963a13666405c51ebf23ca077e97570a2f
1118536b92e585cf1dbd5fbf36a0a5d197538c05304e93a15f3c931168d91d42
483ef428b1a3f1b7e548fd1d23b80f5523c8b8bf450b02804fb689f915c86693
f7dfb1c43f681627c7f027021aa3a8179148f1819cd94b8890a9ac63dc1e8a68
f254b64f6f173c3d02e3ebc037da05074017c8b113e94f4e2d26b467ef9da07e
afd7ea7c86e025af52c5ceeb835951e67e02a38daf1e9e698bd21996c1071e84
ff7fbe77f6ddf9d06fa92b16ecebcbe0370b5cd9d450d0f2906a105cadf93ed0
0abc7fcf2c996e7c15e452006e35390d99b9cfc59925f1444c20d9c3e1fc2910
32cf9fa9d580eac1bc956334da391b870a757c3bee6aa3e005b20988d8587876
3ced20c6edf2ac2b22890e37ff7aedeb0986d85ae05bc84339bf2116df48c5d1
cc888bb33d409b06dd70ffd0618b2080442aac439aeb39c20a87ad74ef10629c
f1604db8611e8e4224c5b21ab0c7ebddc77fe9a283b3a8c6a2a9508f6836e3fc
3eae1366b4da4f44cb7a77fd81d278c17775d56cb28b70f18d894bfd1ec1827f
fb15f8480f3ea54447c66187dcbf2c5a459522b028e35786779ee4f8c39295bb
77ff33104525a23f540ba8666742ea1bbefb4c018c4af018a3b576fa5e2fe6dc
559a20dad2b6fe3869fc93d961ec88e5c0bde320397ecd4ed00559f1d94e6145
ff3a1be5b6a16bc7b73c5d0e235cb8128560050082324006fbb3443b2a962519
446cb8adb1991f727b88d41f001ec8e5e29a190f457c20c99683159f230ee2d7
e1bedd5a1142266523ad316ae59a7a407f0a7f4f2bfc27d3469dbb82f756dd76
4e361ead28962974b11f6c5d3a6ff533ce86b8f3763fc72081bbc90017ead555
a76953569c4da865dbdb0d54c4c274c5111bcdc733c38c74b27ae2e4012028c7
f86b1a4ed29b70ff9e22d83f42a4818ca2bf6c14a1940ca2d522fdb18a2eda21
fd4e79a8de469cb745716dcea2d2186c428d7538c4531ec674139226d6fdb2cc
7152b4d5d93341b8a5e86d8b25636cac6c33416526e69502fc46988f93e596d5
e299b03f7171e7b320a6b2b152fc9f714d97c8023714022566671a27fdea53cc
9b1ea57a0817407ac6c166e2df5ceef05cc40f4a2bb8390544bd1a46f6dfd166
3dfebe6ddae42479a38d6ffff40c09fa1de2c0668c54f72c85a4e1b6e388b2af
e352ea8578b64a3ac191b9207d3eae1285bb7a85d87d538ffa056647319b96b8
069e928eaf9479827a6d56307e71f8593ffcfab6a2dbf22bf861694aea67324f
f0708f5ad0c39155a5f78044cc0c9910e57c3d3dae4f55d5fe30f494fd5667e4
2d01a6a9aad35979262edb85abe271dbc3ea33693aace487db73fa944b309ae3
949a93b6c76fcf33a86c49db5f39b4fef506ed8522a33f3845aea4511a66f147
27aef14dc372211e485fa03927bb472b988229a9c51316410e21354325f5c7fe
000d1e0951712ba37a895711d85f99142dcc2b4acb7da8af085c95d0fc809c95
0e663b27a34db3d558f616977d2d934293edd598e61d48362dc4264144e44407
f8a45fad3aa0fb7d456e34ef004397863f303b9de6e38d9ed67e4aa86763d8c6
74410d86eb9f5324071f7ae731dc424098b6dd4fe7e83f75c8a20dab80de7e99
2ac1210d908d8b284f35a0168020dc915a968f00c585779dff3c4c320cc4bab5
009c0cd51a3c218e7fd7e7a6a3620c0fc546baea1ddbb778d2c2b34513b48f2b
a9b5db401a15a1b98264e8e873218fbc1995a4c27a448c442d3b29a9bdf1874c
1a41cce82eaed23b8633c948444233f56a1fa27c81c05ae25c9d8296809007e6
6582657776950360327dd861a550d40279ab26d857bd7c193657c4783a7f43cb
a913c5f3fa82a25f79c87ad888ed5ac34f97cca74647f060329a8d6aeda187c5
29c28fc8e6373df8b69011e03f1ef4ba9b6656cea8f84ebe5d53b4be4c70df49
478e8384167b86d149934d8baeccad76451ea8abbbb45ba45dc8ac71bbdaab68
6398d17bde725d8d5edb24d1a3880833e26d186e64fde15302c6fe8c93e52c23
45b609d00b1cf20582afee85d854bbf99f6120a2240a2548bec1d9ac8adacec5
54651fa44288a49cc68b8e8a13472034f4e1ede7ae2d0d9da645a2150b82292b
dbdde74523803a31822ab186d48ffbb962b6e1a18addb3f92459018f05f4ff30
b0ef80fd01bf0c0f75636dd4d8ccbff02ca4a0d05815d344a5836dc9e990ad7e
7f58274de1e32b346c03c9675c10690c69230105ffa57442b1ef5c8d89b6fe70
77070307463acbdf4005cdb5dd874967e561cf840dc471caef453f47a1341e21
acf62ceb9c43dd566fdcb2c4ed482f0281816ab1b53082f3ce71b9b2d7fe4f01
de58e0d32bba213853f79d587a1bad04f9673a88e15e89a041559ea17a75cb12
5aa777aff26cdcd891c273c5d282a5b7536d9c23b888622eb4dedacf17d0b08c
eb2fa493e5af1ab205519cf3784daad298bf9ad5140a5158da0fed4e3b15d491
e4f3b2a6c887ca8091f150b6fc959766133681fd8ad52f6e1087d5a4e92bf889
45b61cc545b9e3fef914cff73db2d39a9a633d77afa8c05a045ccbc6dc95eec8
1a1e26f04c4cfd06d77ec783183340cd6913aead413e82ccb8e0c3627680fe40
259e910d46c130944fe33f6d9163fc53e9f6ee02a59165d6310f457e75e36acd
7eb228d4c96241c11bfc177965d795698592a541a82aa757c5bccd7897140d67
517e3f6c2e6e7a23ec72e013e87f405888448828557b2f78483396f1ccf4c364
7dff744c718e2231e30bcfdcb6f21ec3fcafc64c365ffe7af5e9e6a463e7af01
60712504906b76a1b062d0cc67d2df5feaf847d19cf007b77658a8dd07b965ba
fbc3f3adf3682742fa7fdc829a3d265c53b14f4b3a668fb71f10b2aac608e2b4
803739f255796b1de00afb571dccd23080ab936310e66a5fa116fee7850504fd
4e17d95e66d87754e4b4381bf9abd044bc6de9799abf7311400c941a54895c60
c677ee5cf83b20d21ce81c0109481eb9a217901d60701c6d1c1eb8b549126c52
04e97c583108fc61a814180ce77a1fb65d32f8c9dd312498e5e649c86d52f4c7
82cb125ed2c2732e0b386e43c2f0661fad4beff96e28465bd99df9b56226f46d
1c14b0781dcd5979bb7f6235b8321cce5c796fc79360da02c4bf1dcf6e1812d8
b477fbd5accac3667e4bdb0d81b7b715471f2002bb06227868e6b6e1a556d129
ef4715cc79481fbe6c04c257fdc6ac8ffb52a4d3523d38ba093d959ba29aae9c
60493e6e6ed7dcfa1b33714d2398a2829247e61a2006d38e76ae32da4b791045
b7cca50e021ee2e6080779e1e4f1723f259cacf7b24ee9ed7ba0dc71ef56f55c
2427ef89a44f30d1dc020a42fc52f80d7aa794f2c78dcd6666406c14eb89c3c1
8594abf9e7fa7cfafb3b9e7f7e603657cc73919d97193994a6bd3bc0a95b3429
92a1e7918a6954362b0c13255438ef8c65db5f04d5879530b780304a5688f1a9
f965620467a379148bb9f3a2453e54c010a9a88c55132fc9e1f5d5ea4ab43904
3e227d4f0a5a952a0b4362a902825023421549617952a5730240bdcaf3725031
d937ece6c1e5d3fd17634fbc903a1ac40ea71828939414330f1f756b0cbabf94
b03edb2d60b4cbae04fac4c743a5d3dd6cc5e24f9d3aff7c2f9b1f26d022f3d3
2f191779c23d2ef2b19b8e20d50ea478ceaf9480954eec1a8711cd99a18a8441
ef71a4c746dd0052dfb5d375f8379937fa7c019df59dfd9326ca1836dad86655
46f4327b36670c050cc8a125571ec54e20dfca1b0c9a6aac7ed42f6f35d94523
2be2fbaaad90bff5732eeaed0d0029ea2f00dd9c20cb65bf86f591e41899d313
4f1b8baf74dad23d7a7e3080a5def76fa8c4e4029486f46cdc4d8ceb6b57156d
dccaca0c5e0fb5fec23421e3713fb31f3b650c721badaba73b497c069bddd70d
160be2820e30394c31dfb2fb113a7332e792f1cb380d61202b5bc8395d9405e0
73216ed6c3dc107eb9dab1170f09f67f258be862d9d8f62dc46bb2ae48b39cd2
573cccc91a1d753547d39845ea6f98315f4faaaaa963e5f96bad225a631819c2
c2198c04d1593f439dbebd7663b2466d5a324ed2888d69f2d574dcf11f5e3a6b
2313a5a6283d86488d38a024cc0bb3cb154beb0c130608a99efa67e5c7705ee9
ff18f21a36f06b1f7cc9a064683a42798229eac57b7b68118cea486251026734
b64e17ea48368a10eb77a2ce6f9e737dc9aafb7afb9dd80627dd6063920ae7f4
45a1c8e0f793d75fbc0ed07119de794265bc1fd1062395c79fda921a8049a6d0
6904e3a9a4f24c3fbbebc7026e97f9862470d12cc55127779d324e62eb9b3e11
c6f6f6f524ef403cd510055605793fed998eb0638957ca06d6d5af899c1d29f7
f0537067b74142d274baae6f4e3cdcb9111bc81680c6e226fc6f71b7e408c35d
06161b1796e948aacc39db4e27a45005c5b3d426d2cd0f04f11256394e98797f
a04232f6bca73962dc2aeccb4e2e2a0110e4fe9a69e67252dcc21e8aab7fea69
301d8bdf9c93da11afd948a454430386fccfedf41b9431aaa65d11b0244d6afe
35213c306876b8c1acd7c4086ae5478b56b7f2b9c13aa488408b5967d3d7e967
c3035e934da50489f4fc07d577e858da5472c05582e1ce7b9f69ed5b5444898c
7884fd2f13c40aebc98a8a691edc92dec259cec37df9343de76271d2c84dac56
68f6f06196b08450f0af2c6c8a99e56bc5b3a1b69878c10281a99594c6222a39
5cdd15a1ebdc53fee0c2d8470de229d490ddc41555d22c63e6e2b220bbccebe8
ed3cdff72a2b2ab06bc369ea96c3b0ee5f536443c3293e5e38d68b506221df1c
68473ab1a39a6d5a4278f8a5c7e5474b72151da56d4d202008af51e5916d803c
40634a6f7e67144b4d1d49f6c0052a04e2fdc371b923b9b1089a5aa95f62c188
1ebee87a19d5888fb4092c44e7ed57851c15e7403884b61a740dbf90f6f51866
27d9b59697a826b53d4c5d867118b9c4a0de051e83dae9156556c77d4243bbfa
954e9f36eeb0ecf25b31950f014cbb2886580ff036cee938348c89513e54eb3c
77a7e5388f1a252ec4dd884a9dcda2fdc0ab669d2ea5325d9bb5c0a6e6a553bc
de4fe3cff69183c8908b8a4c1ab0b3ac27ef56a8d33bc1053f4b5e3c0d914654
2862d8113bd17cb2bcac00d892f4d57c519b42e9fdcbab3f208fefdfe4fdb83c
cebf20162139b2900dcf216ca651b12ff78675680179e1ea2c11eb3dbaa92d62
6ee9cafc9b4fe30e3bc2d5658af386079ff640452825a8e2f0eb21498ec9e2f6
2dbfe69e3e22d2f5c367c1b38979e7c6350fbeeb896133325c658608b9e96f05
f6698597ee7562f9c1583f7b9841375918d185ebf6169d07c740d712001683d4
89bf8715e6f151d13dbe5ed7dedac9ea974539c8a0349323b09deab6a457a976
a7508a33c41f28b182748d3f97f46e4d9c31681ec3c292e1ead98e5e1c26ea7e
3a2ddaf61853aceb982fa640cc0820487af20b3818ef6351c900ff98c54b6659
056c497740b493bb44d009e446bf10696eb07eb442cc51d543385c88bbba9042
fa2fe2128f0f6710e49603a33d8c80bb6a66b688a5a94b5a2f55ce77f1bf330f
33869d5dd879fd67595717ca5aa0e5f376512bd478b2c2f177e3f5b793c0c3d0
1a64781ce18106a6a861ab460c6431e6ba77abeeb10c8ef1176c75c6a784aa82
7b7d1628a4d0d8ceba1426ec46b24ee3cb2fdc
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueXX 5000817 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f73e9b697ddc0351763500e23c4d170ea8a2d2
75ad0b6b23097f02fa803c1f46f9ac10fe0e527c431b11b1b9a50e874896cca6
17fe3e255960846bc319ca68b9b930a45d5d0fc36b352c3443ab6f7793b38d2c
7fb9c409ab7980ead55e9f8f6b83c70088d1fa6d7f2214da8928e40b96334ad2
72d1b5db9d1355a579b26a8dac21f021e393d7d837a95deb8de92ed818a8b80b
98ee9cdd8a3c57ad7d6eb7a82f43eaa6ec520eefa7302e750edc4b495f70bba2
24a2182eec37f1a1c5dc8e20973007150237daa6bf03d498826777eeebe09014
ebfe05a8731e1a421cfc513d47d673e3d94d805f5d0668ffa265e0962cb5a75a
4a93d9b872c2d3ac4391eedd46c6cae184e1af981f95ce2122b2245c0183dfda
e3052108724ec89db90fd85a92c04696032c705ec4503b29d66d081023a3d98e
3d82d6834e36cb45f2d16dedf480aa0450a173b863ca23c7e525a57abf0f95fa
3a29af1eaf7e9551dfb0e4822c89bb38d63f367299e8f8260c3d8678ae6d2204
15d6b509a0985ed4f6b8e43fa03e8105d303c27c09992df37daec441fa4f9d76
3a8e583bb696b9164216948540e8c30547f9395aa750d87054a094799cbfae42
902e578246e22e45d22ad0b88fdcf7ee0841b578c9075f6b761f581e2384c572
03cfd1b35a18376abcdc2a337823578310d97482b521b4f662384e7d7d7c6e38
d35ac02d2e74c4f2085661bdfe23c7bdd8470260626d4b8c58b360f58416
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 50 /element put
dup 98 /floorleft put
dup 99 /floorright put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueXX 5000819 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddc63eb43f34fa90ea73a234af35fd9b24eb7
4f19626e9124df7acb92629cc87b2cf81c4a89b27447806db34393ddf0402958
e2daee0b4bf315f9aa0a2650d2e11ee289ffaec940d0af160fe7f29411c1c458
69d1ac3bcfe2ae4da72422549095f1fc9fec606289316f106e719a4ae2fd45ee
868fddf07a80e9a626bb43cdfdaa9dcd208b88fd99af20b27f9d6b5cda6a3fa8
8d5acfce8b5eebb38854378cecc3bfdac526514f1be9fb28ae628918ba942a3e
05b78c3aff808cf416a5ed01be280231b75a7aee0c66b0549713bef6b3cbc188
e625ba827fa5ac3e996feb1972b61e4c4784c6f2e352074e5c1cba27453aa198
7f93e9bdf9c6ecc5310fab0e4b5eb2794cd4f1b0eeac7dfb16f8429c0fa36996
4f8a86384416f40b66489e1c1d2c8b6720c7565347d5139e315370f86e0daebb
5fc10c17875ea82bd5d2000296ececc2a9b34ee80b9ba02b6dfdce6649a983d8
2d59a97f3efadce25896ba5fad430b59d7e44a396fe7a70c23b7fa60bdce4a3f
89c9984c0c471b8e0fc9ab8b01c077519b8eb419fa2d4a59651441c1c04ca6b7
627d9fab9985235923be9d9ecd73af62007268d9367ce3b57696818c9685408e
767cfe549d507a2e28d7aeeca7d41f540fce6d1f9f9d5925b80d3026f459512f
ebb592a219ac4a5c3ec29fbcd51a07b3dda8ece2b70639d07ed2cfe6800bf061
4b351054c30803c93b8d648e43ec3d6292426e31c33dfd5f131e98d386e3c05e
4356843f5d82d91e7bf7db16ef80644ba84bc2d4894b8523c0dce14a75465cca
26934eb07c53d9c26803cbed4f685eab9887f260b7f6585e76634da8de575c5f
7e4b7fb7547f31237abe3cc2b860613f4aad1c96118cdcdf0bd290a4c0527607
34f548298a63718bf8302bfa620b2b7ca434a1bd1218fc8d56a89c9bbfbc33c3
9db943778bdc5c1a7708a28aabf1731524be5a5950f976fb7c57582e5467db56
da5b12a81b739fa5a96c997e1d53c794b72f954d91424aeaae98b8c3e037887f
c3dd2bd3ac246504804ec39a27d0cf1ad3c5e7ffa100f119c0ca87457f1570ce
5b936e3d5c55d5a7c2910e261565218d16a0efc1545570123858d037f19346f4
8fe59c176185e35708bddf9b24e02bca86f73be5d125f51abe8fa8f97bd158bf
d451948c156dcba2aca10a3eb776bbaf365d59748f53848582612bcffadb24dd
0899296450fdcff9747b15d8ff07781846e9802163f40e9aeb571a7c4c829a45
d2d4730f00392408c863dc65aa20ef666eef849f8bf35443840d2786247a4442
d3cebd6df1258bdb7935dfe01066324c7ac034a89bf3f74e81f7aa6b75291561
984d4e90dbde9674e46f89de111d3e827ec976d63f09530a3e549b190b505aae
59ae5ceddf96a0daa40448492ab089ca772ac1cf22df1e39e692f8609269eac6
8e24d45ea7cec9c04bbf1c1360d08570a013055d247dd1fa0f7fe446c990c297
c6ad685172be32a5ebb5bda269b4c8dd2aed75780ff5d21c9dbf91a6506458b5
052787990fc3daaf651ed720eaf8206c73ef62723f8260561a56690bd968fc17
0350690c04bb1328ef0cc06b5f765225e9849714c33e47615fd67c07b9da023c
e12308fb494eb2d7822d77acc2338b161af8d659c5f2f277230d3e1575177746
966630fda355b48283b83d5682852306e5ffd1266b45eac9d15df9347dd2c36c
8b7d584d28407846fb4ed312711450b43d4eaa77c4836d6b25cb2cdadd39ca13
6d0351f929eded25f626306be1511bf1942ba1eef3efb5d3be9bc7cb27c9817a
5fe6c1b5857036312ce22632b87e235c36be39f845c0e889d75cb6203bd27814
73c12fcbcc624a77b75efac27ceb174b87d6379d03ef20e4d7d738dc24134bc7
578939ebe74b6ec2cbe228050be878998a91eacd7159107c8e32c1699b686cf8
b9a15a6ba3ff126bc127f137f049536ef992ce58de6ed0a802a733d134a78c3f
e6c6a1ec55924ce0e0839fd5af1415e30e076900fea01f98868a901bc6446cee
6e798be2bcea140e9a65a6960ab68fbd391b713b6c6bc8322acfeab5ab705e25
6c7b447bc1b8d76499e692f22158689665e6e8274dc91464fd026df7d3878140
7684c86ae94df5c7da7b622c85f6f03292e2f044c3318f6bd3e2bad711328cc0
896a571a7100213c569856415f03615a9a4fb2679854e32bd23e408d7d802f0d
af3db235c5f7cb80dc507438ef7bef38233f861092f5d04df0c62f5d3e3e7ac3
129be614166e609b1e0d82b3fa82fe73b2387bc632c2b74dfabe521f4c252342
0d1a83dad01bfaa8b56cb82e1b0b1d4b7fa36a6f97e0d74046a09a7ef23779ec
e339cc71510c22b8d73580dcac12cf28dbfbedd5a05b2dbd714b2dd293b2c29f
c2acb3e209c2714b77e9777aeeb12b2c1dfabc3afb97944a0812d8a23a8c3286
df715ff24091638a9f48053e85ea1d9622cc32794b7833d1735743ee
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (main.dvi)
@start /Fa 133[26 29 1[44 1[33 18 26 26 1[33 33 33 48
18 2[18 33 33 18 29 33 29 33 33 8[41 1[41 1[37 33 41
1[41 48 1[55 37 1[29 22 48 48 1[41 48 44 41 41 7[33 4[33
2[33 1[18 17 4[22 22 36[33 33 2[{TeXBase1Encoding ReEncodeFont}48
66.4176 /Times-Italic rf /Fb 139[19 23 26 1[32 29 32
48 1[32 1[16 32 1[19 26 1[26 1[29 28[42 1[39 42 29[29
35[{TeXBase1Encoding ReEncodeFont}18 58.1154 /Times-Bold
rf /Fc 130[31 1[31 1[31 31 31 31 31 31 31 31 1[31 31
31 31 31 31 1[31 31 1[31 31 31 31 1[31 1[31 1[31 1[31
5[31 31 31 31 1[31 2[31 1[31 1[31 2[31 31 2[31 3[31 31
31 31 4[31 1[31 31 31 31 31 31 31 31 1[31 31 31 31 40[{
TeXBase1Encoding ReEncodeFont}54 51.4736 /Courier rf
/Fd 130[40 1[40 2[40 40 40 40 40 40 40 1[40 40 40 1[40
40 1[40 40 1[40 40 40 40 1[40 1[40 1[40 1[40 5[40 40
40 40 1[40 4[40 1[40 2[40 40 2[40 3[40 40 40 40 6[40
40 1[40 40 40 40 40 1[40 40 40 40 1[40 38[{
TeXBase1Encoding ReEncodeFont}50 66.4176 /Courier rf
/Fe 138[49 2[36 2[44 49 9[49 100[{}5 74.7198 /CMBX9 rf
/Ff 187[30 30 30 30 65[{TeXBase1Encoding ReEncodeFont}4
49.8132 /Courier rf /Fg 146[51 109[{}1 41.511 /CMMI5
rf /Fh 149[20 106[{}1 66.4176 /CMSY8 rf /Fi 194[55 61[{}1
66.4176 /CMR8 rf /Fj 172[43 83[{}1 66.4176 /CMMI8 rf
/Fk 104[66 33 27[29 33 1[48 33 33 18 26 22 33 33 33 33
52 18 33 18 18 33 33 22 29 33 29 33 29 3[22 1[22 3[63
48 48 41 37 44 1[37 48 48 59 41 48 26 22 48 48 37 41
48 44 44 48 6[18 33 33 33 33 33 33 33 33 33 33 18 17
22 17 2[22 22 22 35[37 37 2[{TeXBase1Encoding ReEncodeFont}71
66.4176 /Times-Roman rf /Fl 149[19 57[18 48[{}2 49.8132
/CMSY6 rf
%DVIPSBitmapFont: Fm cmex9 9 2
/Fm 2 89 df<EE0780161F167F16FF923803FE004B5AED0FF0ED3FE04B5A4B5A93C7FC4A
5A4A5A14075D140F5D141F5D143F5DA3147F5DB3B3B3AA14FF92C8FCA3495AA213035CA2
495A495AA2495A495A495A91C9FC13FEEA03FC485A485AEA1FC0EA7F8000FECAFC12F812
FEEA7F80EA1FC0EA0FF06C7E6C7EC67E137F806D7E6D7E6D7EA26D7E6D7EA2801301A26D
7EA381147FB3B3B3AA81143FA381141F81140F8114078114036E7E6E7E826F7E6F7EED0F
F0ED07FC6F7E923800FF80167F161F160729DF76823E>40 D<BE12F889A3D87FFCCB000F
806DF0000F003F08007F6C6C1A0F6C6D070313806E19006C1C3F6C6DF20FC06C6D1A076E
F203E06C1C016D6CF200F06D6C1B706E1B306D1C186D7F6D6D1A0C6F1A007F6D7F6D7F81
147F6E7E6E7E82806E7F6E7F82806E7F6F7E82153F6F7E6F7F83816F7F6F7F8381707E70
7E8382707F82A27090CCFC705A705A16014C5A4C5A4C5A5F4C5A163F4CCDFC16FE4B5A4B
5A5E4B5A150F4B5A4B5A4BCEFC157E5D14014A5A4A5A4A5A4A5A4B1A0C4ACE12185C02FE
1B3849481B3049481B704A1BF04948F201E0010F1B034948F20FC049481A1F49CE127F01
FE973801FF80491A0748481A7F00030807B5120048480607B6FC48BD5A5AA248645ABEFC
6566697C7F6F>88 D E
%EndDVIPSBitmapFont
/Fn 206[25 49[{TeXBase1Encoding ReEncodeFont}1 49.8132
/Times-Roman rf /Fo 162[21 1[21 29[60 3[38 38 38 1[38
38 38 38 38 38 4[60 1[30 30 2[64 37[{}16 74.7198 /CMR9
rf /Fp 145[38 54 3[22 7[34 13[38 9[27 4[50 68[{}7 49.8132
/CMMI6 rf /Fq 194[47 5[30 2[30 1[30 30 49[{}5 49.8132
/CMR6 rf /Fr 136[55 6[39 1[46 68 1[40 1[26 5[33 1[41
13[47 5[74 3[34 5[55 4[60 38 60 21 21 46[49 11[{}18 74.7198
/CMMI9 rf /Fs 134[37 37 54 37 42 25 29 33 1[42 37 42
62 21 2[21 42 37 25 33 42 33 42 37 12[50 42 54 4[71 3[29
2[46 50 54 54 1[54 7[37 37 37 37 37 37 37 37 37 37 1[19
25 45[{TeXBase1Encoding ReEncodeFont}44 74.7198 /Times-Bold
rf /Ft 130[35 1[35 2[35 35 35 35 35 35 35 1[35 35 35
35 35 35 1[35 35 35 35 35 35 35 35 35 1[35 1[35 1[35
35 4[35 35 35 35 1[35 1[35 35 3[35 2[35 35 2[35 3[35
35 35 35 7[35 35 35 35 2[35 35 35 35 35 35 2[35 37[{
TeXBase1Encoding ReEncodeFont}54 58.1154 /Courier rf
/Fu 135[45 45 1[45 45 45 45 1[45 45 45 45 45 45 1[45
45 45 45 45 45 45 45 45 11[45 45 1[45 1[45 1[45 45 1[45
4[45 45 45 45 45 45 13[45 45 1[45 2[45 1[45 1[45 45 40[{
TeXBase1Encoding ReEncodeFont}41 74.7198 /Courier rf
/Fv 242[66 13[{}1 58.1154 /CMSY7 rf /Fw 171[36 32 6[36
6[36 1[39 13[29 4[29 3[15 4[19 39[{
.167 SlantFont TeXBase1Encoding ReEncodeFont}9 58.1154
/Times-Roman rf /Fx 105[29 27[26 29 29 42 29 29 16 23
19 29 29 29 29 45 16 29 1[16 29 29 19 26 29 26 29 26
3[19 1[19 5[42 36 32 39 1[32 42 1[52 2[23 19 1[42 32
1[42 39 1[42 7[29 29 29 29 29 29 29 29 29 29 16 15 19
15 2[19 19 3[29 33[32 2[{TeXBase1Encoding ReEncodeFont}60
58.1154 /Times-Roman rf /Fy 134[33 33 50 1[37 21 29 29
1[37 37 37 54 21 33 21 21 37 37 21 33 37 33 37 37 13[37
46 1[46 54 1[62 42 2[25 4[54 22[25 19 2[25 25 37[37 2[{
TeXBase1Encoding ReEncodeFont}36 74.7198 /Times-Italic
rf /Fz 133[29 33 37 50 33 42 21 29 29 1[37 37 42 58 21
1[21 21 42 37 25 33 37 33 37 37 12[46 42 2[46 54 1[66
46 50 1[29 58 54 1[50 54 50 67[{TeXBase1Encoding ReEncodeFont}37
74.7198 /Times-BoldItalic rf /FA 133[41 1[46 66 46 51
30 36 41 1[51 46 51 76 25 51 1[25 51 46 30 41 51 41 51
46 9[91 3[51 66 2[71 1[86 3[36 3[61 1[66 61 66 7[46 46
46 46 46 46 46 46 46 2[23 46[{TeXBase1Encoding ReEncodeFont}43
91.3242 /Times-Bold rf /FB 138[42 21 37 25 3[42 62 17
1[17 17 42 2[42 42 37 42 42 32[76 17[21 1[21 44[{
TeXBase1Encoding ReEncodeFont}18 74.7198 /Helvetica rf
/FC 149[21 2[38 38 2[34 34 47[51 29[60 16[38 60 1[60{}10
74.7198 /CMSY9 rf /FD 104[75 2[33 33 24[33 37 37 54 37
37 21 29 25 37 37 37 37 58 21 37 21 21 37 37 25 33 37
33 37 33 3[25 1[25 3[71 54 54 46 42 50 54 42 54 54 66
46 54 29 25 54 54 42 46 54 50 50 54 1[33 1[42 1[21 21
37 37 37 37 37 37 37 37 37 37 21 19 25 19 2[25 25 25
1[62 33[42 42 2[{TeXBase1Encoding ReEncodeFont}78 74.7198
/Times-Roman rf /FE 138[46 1[36 30 2[46 46 71 25 2[25
46 46 1[41 46 41 46 41 9[86 2[56 51 61 7[36 8[66 65[{
TeXBase1Encoding ReEncodeFont}21 91.3242 /Times-Roman
rf /FF 133[66 2[108 2[50 58 66 1[83 75 83 124 3[42 83
75 50 66 1[66 1[75 13[83 2[91 116 11[108 1[108 65[{
TeXBase1Encoding ReEncodeFont}21 149.44 /Times-Bold rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 415 161 a FF(Cache)38 b(A)-13 b(war)m(e)37 b(Optimization)g(of)
g(Str)m(eam)h(Pr)m(ograms)506 460 y FE(Janis)21 b(Sermulins)155
b(W)l(illiam)25 b(Thies)154 b(Rodric)23 b(Rabbah)153
b(Saman)22 b(Amarasinghe)509 584 y FD(Computer)e(Science)f(and)g
(Arti\002cial)f(Intelligence)h(Laboratory)-5 b(,)20 b(Massachusetts)g
(Institute)f(of)g(T)-5 b(echnology)1195 684 y FC(f)p
FB(janiss)o(,)20 b(thies)o(,)f(r)o(ab)o(bah,)g(saman)p
FC(g)p FB(@csail.mit.edu)-150 1168 y FA(Abstract)-150
1284 y FD(Ef)n(fecti)n(v)o(e)34 b(use)h(of)f(the)g(memory)h(hierarchy)g
(is)f(critical)g(for)g(achie)n(ving)-150 1367 y(high)22
b(performance)h(on)f(embedded)h(systems.)e(W)-6 b(e)21
b(focus)h(on)g(the)g(class)f(of)-150 1450 y(streaming)i(applications,)h
(which)f(is)f(increasingly)i(pre)n(v)n(alent)g(in)e(the)h(em-)-150
1533 y(bedded)d(domain.)g(W)-6 b(e)18 b(e)o(xploit)h(the)f(widespread)i
(parallelism)f(and)g(re)o(gular)-150 1616 y(communication)27
b(patterns)e(in)g(stream)h(programs)g(to)f(formulate)g(a)g(set)g(of)
-150 1699 y(cache)i(a)o(w)o(are)f(optimizations)g(that)g(automatically)
g(impro)o(v)o(e)h(instruction)-150 1782 y(and)g(data)g(locality)-5
b(.)27 b(Our)f(w)o(ork)i(is)e(in)h(the)f(conte)o(xt)i(of)f(the)f
(Synchronous)-150 1865 y(Data\003o)n(w)k(model,)f(in)h(which)g(a)g
(program)g(is)g(described)g(as)g(a)g(graph)g(of)-150
1948 y(independent)25 b(actors)e(that)g(communicate)h(o)o(v)o(er)f
(channels.)h(The)e(commu-)-150 2031 y(nication)f(rates)g(between)g
(actors)g(are)g(kno)n(wn)h(at)f(compile)g(time,)f(allo)n(wing)-150
2114 y(the)f(compiler)g(to)g(statically)g(model)g(the)g(caching)h(beha)
o(vior)l(.)-50 2197 y(W)-6 b(e)20 b(present)h(three)g(cache)h(a)o(w)o
(are)f(optimizations:)g(1\))g(e)o(x)o(ecution)g(scal-)-150
2280 y(ing,)e(which)h(judiciously)g(repeats)g(actor)f(e)o(x)o(ecutions)
h(to)f(impro)o(v)o(e)h(instruc-)-150 2363 y(tion)k(locality)-5
b(,)24 b(2\))g(cache)h(a)o(w)o(are)f(fusion,)h(which)f(combines)h
(adjacent)g(ac-)-150 2446 y(tors)k(while)g(respecting)h(instruction)f
(cache)h(constraints,)f(and)h(3\))f(scalar)-150 2529
y(replacement,)f(which)g(con)m(v)o(erts)g(certain)g(data)f(b)o(uf)n
(fers)h(into)f(a)h(sequence)-150 2612 y(of)19 b(scalar)g(v)n(ariables)g
(that)g(can)g(be)g(re)o(gister)g(allocated.)g(The)g(optimizations)-150
2695 y(are)24 b(founded)i(upon)f(a)g(simple)f(and)h(intuiti)n(v)o(e)f
(model)h(that)f(quanti\002es)g(the)-150 2778 y(temporal)k(locality)g
(for)g(a)g(sequence)i(of)e(actor)g(e)o(x)o(ecutions.)h(Our)e(imple-)
-150 2861 y(mentation)g(of)f(cache)g(a)o(w)o(are)g(optimizations)h(in)f
(the)g(StreamIt)f(compiler)-150 2944 y(yields)j(a)g(249\045)h(a)o(v)o
(erage)g(speedup)h(\(o)o(v)o(er)e(unoptimized)h(code\))g(for)f(our)-150
3027 y(streaming)23 b(benchmark)i(suite)e(on)g(a)g(StrongARM)g(1110)h
(processor)l(.)f(The)-150 3110 y(optimizations)31 b(also)f(yield)g(a)g
(154\045)h(speedup)h(on)f(a)f(Pentium)f(3)i(and)f(a)-150
3193 y(152\045)20 b(speedup)h(on)e(an)g(Itanium)g(2.)-150
3317 y Fz(Categories)30 b(and)g(Subject)e(Descriptors)76
b FD(D.3.4)29 b([)p Fy(Pr)m(o)o(gr)o(amming)h(Lan-)-150
3400 y(gua)o(g)o(es)p FD(]:)35 b(Processors\227Optimization;)g(code)f
(generation;)h(compilers;)-150 3483 y(D.3.2)53 b([)p
Fy(Pr)m(o)o(gr)o(amming)g(Langua)o(g)o(es)p FD(]:)i(Language)f
(Classi\002cations\227)-150 3566 y(Concurrent,)40 b(distrib)o(uted,)f
(and)i(parallel)e(languages;)i(Data-\003o)n(w)e(lan-)-150
3649 y(guages)-150 3773 y Fz(General)19 b(T)-7 b(erms)75
b FD(Languages,)20 b(Design,)f(Performance)-150 3897
y Fz(K)n(eyw)o(ords)76 b FD(Stream)21 b(Programing,)h(StreamIt,)f
(Synchronous)j(Data\003o)n(w)-5 b(,)-150 3980 y(Cache,)19
b(Cache)g(Optimizations,)g(Fusion,)g(Embedded)-150 4162
y FA(1.)91 b(Intr)n(oduction)-150 4278 y FD(Ef)n(\002cienc)o(y)23
b(and)i(high)f(performance)h(are)e(of)h(central)f(importance)i(within)
-150 4361 y(the)h(embedded)h(domain.)g(As)e(processor)i(speeds)g
(continue)f(to)g(increase,)-150 4444 y(the)j(memory)g(bottleneck)h
(remains)f(a)g(primary)g(impediment)h(to)f(attain-)-150
4527 y(ing)22 b(performance.)h(Current)f(practices)h(for)e(hiding)i
(memory)g(latenc)o(y)f(are)-150 4944 y Fx(Permission)d(to)h(mak)o(e)f
(digital)h(or)f(hard)h(copies)e(of)i(all)f(or)g(part)h(of)f(this)g(w)o
(ork)h(for)g(personal)f(or)-150 5010 y(classroom)d(use)f(is)h(granted)h
(without)f(fee)g(pro)o(vided)h(that)g(copies)e(are)h(not)h(made)f(or)g
(distrib)o(uted)-150 5077 y(for)e(pro\002t)g(or)g(commercial)g(adv)o
(antage)e(and)h(that)h(copies)f(bear)g(this)g(notice)h(and)f(the)g
(full)h(citation)-150 5143 y(on)i(the)g(\002rst)g(page.)f(T)-5
b(o)16 b(cop)o(y)h(otherwise,)e(to)h(republish,)g(to)g(post)g(on)g
(serv)o(ers)g(or)g(to)g(redistrib)o(ute)-150 5210 y(to)f(lists,)e
(requires)i(prior)h(speci\002c)e(permission)g(and/or)h(a)g(fee.)-150
5293 y Fw(LCTES'05,)58 b Fx(June)14 b(15\22617,)g(2005,)g(Chicago,)g
(Illinois,)h(USA.)-150 5359 y(Cop)o(yright)120 5357 y(c)100
5359 y Fv(\015)f Fx(2005)h(A)n(CM)f(1-59593-018-3/05/0006.)9
b(.)g(.)g($5.00.)2042 1168 y FD(in)m(v)n(ariably)27 b(e)o(xpensi)n(v)o
(e)h(and)f(comple)o(x.)g(F)o(or)f(e)o(xample,)h(superscalar)g(pro-)2042
1251 y(cessors)18 b(resort)f(to)g(out-of-order)h(e)o(x)o(ecution)g(to)f
(hide)h(the)f(latenc)o(y)h(of)f(cache)2042 1334 y(misses.)22
b(This)g(results)h(in)g(lar)o(ge)f(po)n(wer)h(e)o(xpenditures)h
(\(un\002t)f(for)f(embed-)2042 1417 y(ded)g(systems\))h(and)g(also)f
(increases)g(the)h(cost)f(of)g(the)g(system.)g(Compilers)2042
1500 y(ha)o(v)o(e)27 b(also)h(emplo)o(yed)h(computation)g(and)f(data)g
(reordering)g(to)g(impro)o(v)o(e)2042 1583 y(locality)-5
b(,)18 b(b)o(ut)h(this)g(requires)g(a)g(heroic)g(analysis)h(due)f(to)g
(the)g(obscured)i(par)o(-)2042 1666 y(allelism)f(and)i(communication)h
(patterns)e(in)g(traditional)g(languages)h(such)2042
1749 y(as)d(C.)2141 1832 y(F)o(or)31 b(performance-critical)h
(programs,)g(the)g(comple)o(xity)g(ine)n(vitably)2042
1915 y(propagates)25 b(all)e(the)h(w)o(ay)h(to)f(the)g(application)h
(de)n(v)o(eloper)l(.)g(Programs)f(are)2042 1998 y(written)19
b(to)h(e)o(xplicitly)f(manage)i(parallelism)f(and)g(to)g(reorder)g(the)
g(compu-)2042 2081 y(tation)27 b(so)g(that)g(the)g(instruction)h(and)g
(data)f(w)o(orking)h(sets)f(\002t)f(within)h(the)2042
2164 y(cache.)18 b(F)o(or)f(e)o(xample,)h(the)f(inputs)h(and)g(outputs)
g(of)g(a)f(procedure)i(might)f(be)2042 2247 y(arrays)j(that)g(are)g
(speci\002cally)g(designed)i(to)d(\002t)h(within)f(the)h(data)h(cache)g
(on)2042 2330 y(a)f(gi)n(v)o(en)g(architecture;)h(loop)f(bodies)h(are)f
(written)f(at)h(a)g(le)n(v)o(el)g(of)g(granular)o(-)2042
2413 y(ity)e(that)g(matches)g(the)h(instruction)f(cache.)h(While)e
(manual)i(tuning)g(can)g(be)2042 2496 y(ef)n(fecti)n(v)o(e,)g(the)h
(end)g(solutions)g(are)g(not)f(portable.)h(The)o(y)g(are)f(also)h(e)o
(xceed-)2042 2579 y(ingly)e(dif)n(\002cult)g(to)f(understand,)j(modify)
-5 b(,)19 b(and)h(deb)o(ug.)2141 2662 y(The)26 b(recent)h(emer)o(gence)
g(of)f(streaming)g(applications)h(represents)g(an)2042
2745 y(opportunity)j(to)f(mitigate)f(these)h(problems)g(using)h(simple)
f(transforma-)2042 2828 y(tions)14 b(in)h(the)g(compiler)l(.)f(Stream)g
(programs)i(are)e(rich)h(with)f(parallelism)g(and)2042
2911 y(re)o(gular)22 b(communication)i(patterns)f(that)f(can)g(be)h(e)o
(xploited)g(by)f(the)h(com-)2042 2994 y(piler)d(to)g(automatically)g
(tune)h(memory)g(performance.)g(Streaming)f(codes)2042
3077 y(encompass)k(a)e(broad)i(spectrum)f(of)g(applications,)g
(including)g(embedded)2042 3160 y(communications)32 b(processing,)f
(multimedia)f(encoding)i(and)f(playback,)2042 3243 y(compression,)f
(and)g(encryption.)g(The)o(y)f(also)h(range)f(to)g(serv)o(er)h
(applica-)2042 3326 y(tions,)20 b(such)i(as)f(HDTV)f(editing)h(and)g
(hyper)o(-spectral)g(imaging.)h(It)e(is)g(nat-)2042 3409
y(ural)30 b(to)g(e)o(xpress)h(a)f(stream)g(program)h(as)f(a)g(high-le)n
(v)o(el)h(graph)g(of)f(inde-)2042 3492 y(pendent)19 b(components,)g(or)
f Fy(actor)o(s)p FD(.)g(Actors)g(communicate)h(using)f(e)o(xplicit)2042
3575 y(FIFO)26 b(channels)i(and)g(can)g(e)o(x)o(ecute)g(whene)n(v)o(er)
h(a)e(suf)n(\002cient)h(number)g(of)2042 3658 y(items)15
b(are)g(a)o(v)n(ailable)g(on)h(their)f(input)h(channels.)g(In)f(a)h
(stream)f(graph,)h(actors)2042 3741 y(can)24 b(be)h(freely)f(combined)i
(and)f(reordered)g(to)f(impro)o(v)o(e)h(caching)g(beha)o(v-)2042
3824 y(ior)16 b(as)g(long)h(as)f(there)h(are)f(suf)n(\002cient)g
(inputs)h(to)f(complete)h(each)g(e)o(x)o(ecution.)2042
3907 y(Such)e(transformations)h(can)f(serv)o(e)g(to)g(automate)h
(tedious)f(approaches)i(that)2042 3990 y(are)f(performed)i(manually)f
(using)g(today')l(s)h(languages;)g(the)o(y)e(are)h(too)g(com-)2042
4073 y(ple)o(x)f(to)f(perform)i(automatically)f(in)f(hardw)o(are)i(or)f
(in)f(the)h(most)g(aggressi)n(v)o(e)2042 4157 y(of)j(C)f(compilers.)
2141 4240 y(This)i(paper)h(presents)g(three)f(simple)h(cache)g(a)o(w)o
(are)f(optimizations)h(for)2042 4323 y(stream)c(programs:)g
Fy(\(i\))f FD(e)o(x)o(ecution)i(scaling,)f Fy(\(ii\))f
FD(cache)i(a)o(w)o(are)f(fusion,)g(and)2042 4406 y Fy(\(iii\))e
FD(scalar)h(replacement.)h(These)f(optimizations)h(represent)f(a)g
Fy(uni\002ed)i(ap-)2042 4489 y(pr)m(oac)o(h)e FD(that)e(simultaneously)
j(considers)f(the)f(instruction)g(and)g(data)h(w)o(ork-)2042
4572 y(ing)25 b(sets.)g(W)-6 b(e)25 b(also)g(de)n(v)o(elop)i(a)e
(simple)h(quantitati)n(v)o(e)g(model)g(of)f(caching)2042
4655 y(beha)o(vior)h(for)f(streaming)h(w)o(orkloads,)g(pro)o(viding)h
(a)e(foundation)i(to)e(rea-)2042 4738 y(son)e(about)h(the)f
(transformations.)g(Our)g(w)o(ork)g(is)g(done)h(in)f(the)g(conte)o(xt)g
(of)2042 4821 y(the)29 b(Synchronous)i(Data\003o)n(w)e([13)q(])g(model)
h(of)f(computation,)i(in)e(which)2042 4904 y(each)23
b(actor)g(in)g(the)f(stream)h(graph)h(has)f(a)g(kno)n(wn)h(input)f(and)
g(output)h(rate.)2042 4987 y(This)19 b(is)h(a)g(popular)h(model)f(for)g
(a)g(broad)h(range)g(of)f(signal)g(processing)h(and)2042
5070 y(embedded)g(applications.)2141 5153 y(Ex)o(ecution)i(scaling)e
(is)h(a)f(transformation)h(that)g(impro)o(v)o(es)g(instruction)2042
5236 y(locality)d(by)h(e)o(x)o(ecuting)g(each)g(actor)f(in)g(the)g
(stream)g(graph)h(multiple)f(times)2042 5319 y(before)28
b(mo)o(ving)g(on)f(to)g(the)h(ne)o(xt)f(actor)l(.)g(As)g(a)g(gi)n(v)o
(en)h(actor)f(usually)h(\002ts)2042 5402 y(within)k(the)h(cache,)g(the)
g(repeated)h(e)o(x)o(ecutions)f(serv)o(e)g(to)g(amortize)g(the)p
eop
%%Page: 2 2
2 1 bop -150 66 a FD(cost)26 b(of)f(loading)h(the)g(actor)f(from)h(of)n
(f-chip)g(memory)-5 b(.)26 b(Ho)n(we)n(v)o(er)m(,)g(as)f(our)-150
149 y(cache)c(model)g(will)f(sho)n(w)-5 b(,)21 b(actors)g(should)g(not)
g(be)g(scaled)g(e)o(xcessi)n(v)o(ely)-5 b(,)21 b(as)-150
232 y(their)f(outputs)h(will)e(e)n(v)o(entually)i(o)o(v)o(er\003o)n(w)f
(the)g(data)h(cache.)f(W)-6 b(e)20 b(present)g(a)-150
315 y(simple)i(and)g(ef)n(fecti)n(v)o(e)g(algorithm)g(for)g
(calculating)g(a)f(scaling)i(f)o(actor)e(that)-150 399
y(respects)e(both)h(instruction)f(and)h(data)f(constraints.)-50
482 y(Prior)24 b(to)h(e)o(x)o(ecution)h(scaling,)f(cache)g(a)o(w)o(are)
h(fusion)f(combines)h(adja-)-150 565 y(cent)20 b(actors)f(into)h(a)f
(single)h(function.)g(This)f(allo)n(ws)h(the)f(compiler)h(to)f(opti-)
-150 648 y(mize)g(across)h(actor)g(boundaries.)g(Our)g(algorithm)f(is)g
(cache)i(a)o(w)o(are)e(in)g(that)-150 731 y(it)i(ne)n(v)o(er)i(fuses)g
(a)f(pair)g(of)g(actors)g(that)g(will)f(result)h(in)g(an)h(o)o(v)o
(er\003o)n(w)f(of)g(the)-150 814 y(instruction)d(cache.)-50
897 y(As)g(actors)g(are)h(fused)g(together)m(,)f(ne)n(w)h(b)o(uf)n(fer)
f(management)i(strate)o(gies)-150 980 y(become)26 b(possible.)g(The)f
(most)g(aggressi)n(v)o(e)h(of)f(these,)g(termed)h(scalar)f(re-)-150
1063 y(placement,)g(serv)o(es)g(to)f(replace)h(an)f(array)h(with)f(a)g
(series)h(of)f(local)g(scalar)-150 1146 y(v)n(ariables.)30
b(Unlik)o(e)h(array)f(references,)h(scalar)f(v)n(ariables)h(can)f(be)h
(re)o(gis-)-150 1229 y(ter)21 b(allocated,)h(leading)h(to)f(lar)o(ge)f
(performance)i(gains.)f(W)-6 b(e)21 b(also)h(de)n(v)o(elop)-150
1312 y(a)30 b(ne)n(w)g(b)o(uf)n(fer)g(management)h(strate)o(gy)f
(\(called)g(\223cop)o(y-shift\224\))i(that)d(e)o(x-)-150
1395 y(tends)j(scalar)f(replacement)h(to)f(sliding-windo)n(w)h
(computations,)g(a)f(do-)-150 1478 y(main)d(where)f(comple)o(x)i(inde)o
(xing)f(e)o(xpressions)h(typically)f(hinder)g(com-)-150
1561 y(piler)19 b(analysis.)-50 1644 y(Our)37 b(cache)i(a)o(w)o(are)f
(optimizations)h(are)f(implemented)h(as)e(part)h(of)-150
1727 y(StreamIt,)27 b(a)i(language)h(and)f(compiler)g(infrastructure)g
(for)g(stream)f(pro-)-150 1810 y(gramming)g([21)q(].)e(W)-6
b(e)27 b(e)n(v)n(aluate)h(the)f(optimizations)h(on)g(three)f(architec-)
-150 1893 y(tures.)20 b(The)h(StrongARM)f(1110)i(represents)f(our)g
(primary)g(tar)o(get;)f(it)g(is)g(an)-150 1976 y(embedded)k(processor)g
(without)f(a)f(secondary)i(cache.)f(Our)g(other)g(tar)o(gets)-150
2059 y(are)f(the)g(Pentium)f(3)h(\(a)g(superscalar\))g(and)g(the)g
(Itanium)g(2)g(\(a)g(VLIW)e(pro-)-150 2142 y(cessor\).)29
b(W)-6 b(e)28 b(\002nd)h(that)g(e)o(x)o(ecution)h(scaling,)f(cache)g(a)
o(w)o(are)h(fusion,)f(and)-150 2225 y(scalar)g(replacement)h(each)f(of)
n(fer)g(signi\002cant)g(performance)h(gains,)f(and)-150
2308 y(the)24 b(most)f(consistent)h(speedups)i(result)d(when)h(all)f
(are)h(applied)g(together)l(.)-150 2391 y(Compared)g(to)e(unoptimized)i
(StreamIt)d(code,)i(our)g(cache)h(optimizations)-150
2474 y(yield)31 b(a)h(249\045)g(speedup)h(on)e(the)h(StrongARM,)f(a)g
(154\045)h(speedup)h(on)-150 2557 y(the)22 b(Pentium)f(3,)h(and)g(a)g
(152\045)h(speedup)g(on)g(Itanium)f(2.)f(These)h(numbers)-150
2640 y(represent)e(a)o(v)o(erages)f(o)o(v)o(er)g(our)g(streaming)h
(benchmark)g(suite.)-50 2723 y(This)f(paper)i(is)f(or)o(ganized)h(as)f
(follo)n(ws.)g(Section)g(2)g(gi)n(v)o(es)h(background)-150
2806 y(information)15 b(on)h(the)f(StreamIt)e(language.)j(Section)f(3)g
(lays)g(the)g(foundation)-150 2889 y(for)i(our)g(approach)i(by)f(de)n
(v)o(eloping)h(a)e(quantitati)n(v)o(e)g(model)h(of)f(caching)h(be-)-150
2972 y(ha)o(vior)28 b(for)g(an)o(y)g(sequence)h(of)f(actor)g(e)o(x)o
(ecutions.)h(Section)f(4)f(describes)-150 3055 y(e)o(x)o(ecution)21
b(scaling)g(and)g(cache)g(a)o(w)o(are)f(scheduling.)i(Section)e(5)g(e)n
(v)n(aluates)-150 3138 y(b)o(uf)n(fer)27 b(management)h(strate)o(gies,)
e(including)i(scalar)e(replacement.)i(Sec-)-150 3221
y(tion)23 b(6)f(contains)h(our)g(e)o(xperimental)g(e)n(v)n(aluation)h
(of)f(these)g(techniques)g(in)-150 3304 y(the)15 b(StreamIt)g(compiler)
l(.)g(Finally)-5 b(,)14 b(Section)h(7)h(describes)g(related)f(w)o(ork)h
(and)-150 3387 y(Section)j(8)g(concludes)h(the)f(paper)l(.)-150
3593 y FA(2.)91 b(Str)n(eamIt)-150 3709 y FD(StreamIt)24
b(is)h(an)h(architecture)f(independent)i(language)g(that)e(is)g
(designed)-150 3792 y(for)32 b(stream)h(programming.)g(In)f(StreamIt,)g
(programs)h(are)f(represented)-150 3875 y(as)22 b(graphs)h(where)g
(nodes)g(represent)f(computation)i(and)f(edges)g(represent)-150
3958 y(FIFO-ordered)c(communication)h(of)f(data)g(o)o(v)o(er)h(tapes.)
-150 4101 y Fz(Hierarc)o(hical)k(Streams)75 b FD(In)23
b(StreamIt,)g(the)g(basic)h(programmable)h(unit)-150
4184 y(\(i.e.,)d(an)j(actor\))e(is)h(a)g Fy(\002lter)p
FD(.)f(Each)h(\002lter)f(contains)i(a)e(w)o(ork)i(function)f(that)-150
4267 y(e)o(x)o(ecutes)17 b(atomically)-5 b(,)17 b(popping)h(\(i.e.,)d
(reading\))i(a)f(\002x)o(ed)h(number)g(of)g(items)-150
4350 y(from)e(the)f(\002lter')l(s)f(input)i(tape)g(and)g(pushing)h
(\(i.e.,)d(writing\))h(a)h(\002x)o(ed)f(number)-150 4433
y(of)i(items)g(to)f(the)i(\002lter')l(s)d(output)j(tape.)f(A)f
(\002lter)g(may)i(also)f Fu(peek)f FD(at)h(a)f(gi)n(v)o(en)-150
4516 y(inde)o(x)25 b(on)g(its)e(input)i(tape)f(without)g(consuming)i
(the)e(item;)g(this)g(mak)o(es)h(it)-150 4599 y(simple)17
b(to)h(represent)f(computation)i(o)o(v)o(er)f(a)f(sliding)g(windo)n(w)
-5 b(.)18 b(The)g Fu(push)p FD(,)-150 4682 y Fu(pop)p
FD(,)28 b(and)h Fu(peek)f FD(rates)h(are)g(declared)g(as)g(part)g(of)g
(the)f(w)o(ork)i(function,)-150 4765 y(thereby)35 b(enabling)h(the)e
(compiler)h(to)f(construct)h(a)g(static)f(schedule)h(of)-150
4848 y(\002lter)23 b(e)o(x)o(ecutions.)i(An)g(e)o(xample)g
(implementation)g(of)f(a)g(Finite)g(Impulse)-150 4932
y(Response)c(\(FIR\))e(\002lter)g(appears)h(in)g(Figure)g(1.)-50
5015 y(The)c(w)o(ork)i(function)f(is)g(in)m(v)o(ok)o(ed)h(\(\002red\))e
(whene)n(v)o(er)i(there)f(is)f(suf)n(\002cient)-150 5098
y(data)24 b(on)g(the)f(input)h(tape.)f(F)o(or)g(the)g(FIR)g(e)o(xample)
h(in)f(Figure)h(1,)f(the)g(\002lter)-150 5181 y(requires)i(at)e(least)h
Fu(N)g FD(elements)g(before)h(it)f(can)g(e)o(x)o(ecute.)h(The)f(v)n
(alue)h(of)f Fu(N)-150 5264 y FD(is)k(kno)n(wn)i(at)e(compile)h(time)f
(when)i(the)e(\002lter)g(is)g(constructed.)h(A)f(\002lter)-150
5347 y(is)g(akin)h(to)f(a)g(class)g(in)g(object)h(oriented)g
(programming)h(with)d(the)i(w)o(ork)-150 5430 y(function)i(serving)g
(as)g(the)f(main)h(method.)g(The)f(parameters)h(to)f(a)g(\002lter)2042
39 y Ft(float->float)j(filter)h(FIR_Filter)g(\(int)g(N,)h(float[])f
(weights\))f({)2112 105 y(work)h(push)g(1)h(pop)f(1)h(peek)g(N)f({)2181
171 y(float)g(sum)h(=)g(0;)2181 238 y(for)g(\(int)f(i)h(=)g(0;)f(i)h(<)
g(N;)f(i++\))h({)2251 304 y(sum)f(+=)h(peek\(i\))f(*)h(weights[i];)2181
371 y(})2181 437 y(pop\(\);)2181 503 y(push\(sum\);)2112
570 y(})2042 636 y(})p 2042 712 1993 3 v 2423 797 a Fs(Figur)o(e)18
b(1.)38 b FD(StreamIt)18 b(code)i(for)e(an)i(FIR)e(\002lter)2096
1935 y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 2096 1935 a @beginspecial 71 @llx 618 @lly 297
@urx 732 @ury 2260 @rwi @setspecial
%%BeginDocument: ./constructs-eg.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (main.dvi)

%%Version: 1 4

%%Creator: (dvips\(k\) 5.92b Copyright 2002 Radical Eye Software)

%%CreationDate: (D:20041213151354-05'00')

%%DocumentData: Clean7Bit

%%BoundingBox: 71 618 297 732

%%Pages: 0

%%DocumentProcessColors: Black

%%DocumentNeededResources: (atend)

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%+ procset (Adobe Acrobat - general image support) 1.2 0

%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0

%%+ procset (Adobe Acrobat - color image support) 1.2 0

%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0

%%EndComments

71 618 moveto 297 618 lineto 297 732 lineto 71 732 lineto closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: file Pscript_CFF PSVER

userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict

known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{

false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq

{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{

/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{

/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put

bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc

known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100

dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{

currentpacking true setpacking}if{systemdict/internaldict known{1183615869

systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch

maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def

dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup

/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{

exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2

exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1

exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def

/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{

c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1

c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef

/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0

exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt

or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1

def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{

1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get

/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false

PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse

def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1

yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1

c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform

flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{

c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2

sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{

pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge

and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey

floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform

exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3

y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{

/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink

{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def

/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0

c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}

if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2

transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0

dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0

lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def

erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add

def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2

sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add

def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2

curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking

known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch

restore}{systemdict/internaldict known not{1183615869 userdict/internaldict

get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get

exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict

get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict

/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get

exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}

executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{

currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{

systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict

get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck

get exec}{pop 3}ifelse}ifelse}ifelse}bind def end

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 5.0 6

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 89 dict dup begin put

/docSetupDone false def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_pdfEncodings 2 array def

/_pdf_str1 1 string def

/_pdf_i 0 def

/_pdf_na 0 def

/_pdf_showproc 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_ColorSep5044? false def

/nulldict 0 dict def

/_processColors 0 def

/overprintstack null def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

PDF begin

[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W

/applyInterpFunc/applystitchFunc/domainClip/encodeInput

/initgs/int/limit/rangeClip

/defineRes/findRes/setSA/pl

%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver

/? /! /| /: /+ /GetGlyphDirectory

/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage

/pdf_shfill /pdf_sethalftone

] {null def} bind forall

end

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level1? Level2? not def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

%%EndResource

%%BeginResource: l2compat

%%Version: 5.0 10

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 1

%%Title: Level 1 emulation of level 2 operators

/setcmykcolor isdefined? not

{

/setcmykcolor {

1 sub 4 1 roll

3 {

3 index add neg dup 0 lt { pop 0 } if

3 1 roll

} repeat

setrgbcolor

pop

} bd

} if

/rectclip isdefined? not

{

/rectclip { newpath re clip newpath } bd

} if

/rectfill isdefined? not

{

/rectfill { gsave newpath re fill grestore } bd

} if

/sethalftone isdefined? not

{

/sethalftone {

begin

HalftoneType 1 eq

{ Frequency Angle /SpotFunction load setscreen }

if

end

} bd

} if

Level1?

{

/pdf_show {show} bd

/xshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_xshow

} bd

/yshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_yshow

} bd

/xyshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_xyshow

} bd

} if

/getrampcolor {

/indx exch def

[

0 1 NumComp 1 sub {

dup

Samples exch get

dup type /stringtype eq { indx get } if

exch

Scaling exch get aload pop

3 1 roll

mul add

} for

]

L1setcolor

} bd

/sssetbackground { L1setcolor } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 5.0 7

%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

/cm { matrix astore concat } bd

/d /setdash ld

/f /fill ld

/h /closepath ld

/i {dup 0 eq {pop _defaultflatness} if setflat} bd

/j /setlinejoin ld

/J /setlinecap ld

/M /setmiterlimit ld

/n /newpath ld

/S /stroke ld

/w /setlinewidth ld

/W /clip ld

/initgs {

0 setgray

[] 0 d

0 j

0 J

10 M

1 w

false setSA

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

/pdf_flushfilters

{

aload length

{ dup status

1 index currentfile ne and

{ dup flushfile closefile }

{ pop }

ifelse

} repeat

} bd

/pdf_readstring

{

1 index dup length 1 sub get

exch readstring pop

exch pdf_flushfilters

} bind def

/pdf_dictOp

{

3 2 roll

10 dict copy

begin

_Filters dup length 1 sub get def

currentdict exch exec

_Filters pdf_flushfilters

end

} [/_Filters] bld

/pdf_image {{image} /DataSource pdf_dictOp} bd

/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd

/pdf_shfill {{sh} /DataSource pdf_dictOp} bd

/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd

/pdf_maskedImage

{

10 dict copy begin

/miDict currentdict def

/DataDict DataDict 10 dict copy def

DataDict begin

/DataSource

_Filters dup length 1 sub get

def

miDict image

_Filters pdf_flushfilters

end

end

} [/miDict /DataDict /_Filters] bld

/RadialShade {

40 dict begin

/background exch def

/ext1 exch def

/ext0 exch def

/BBox exch def

/r2 exch def

/c2y exch def

/c2x exch def

/r1 exch def

/c1y exch def

/c1x exch def

/rampdict exch def

gsave

BBox length 0 gt {

newpath

BBox 0 get BBox 1 get moveto

BBox 2 get BBox 0 get sub 0 rlineto

0 BBox 3 get BBox 1 get sub rlineto

BBox 2 get BBox 0 get sub neg 0 rlineto

closepath

clip

newpath

} if

c1x c2x eq

{

c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse

}

{

/slope c2y c1y sub c2x c1x sub div def

/theta slope 1 atan def

c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if

c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if

}

ifelse

gsave

clippath

c1x c1y translate

theta rotate

-90 rotate

{ pathbbox } stopped

{ 0 0 0 0 } if

/yMax exch def

/xMax exch def

/yMin exch def

/xMin exch def

grestore

xMax xMin eq yMax yMin eq or

{

grestore

end

}

{

rampdict begin

40 dict begin

background length 0 gt { background sssetbackground gsave clippath fill grestore } if

gsave

c1x c1y translate

theta rotate

-90 rotate

/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def

/c1y 0 def

/c1x 0 def

/c2x 0 def

ext0 {

0 getrampcolor

c2y r2 add r1 lt

{

c1x c1y r1 360 0 arcn

xMin yMin moveto

xMax yMin lineto

xMax yMax lineto

xMin yMax lineto

xMin yMin lineto

eofill

}

{

c2y r1 add r2 le

{

c1x c1y r1 0 360 arc

fill

}

{

c2x c2y r2 0 360 arc fill

r1 r2 eq

{

/p1x r1 neg def

/p1y c1y def

/p2x r1 def

/p2y c1y def

p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto

fill

}

{

/AA r2 r1 sub c2y div def

/theta AA 1 AA dup mul sub sqrt div 1 atan def

/SS1 90 theta add dup sin exch cos div def

/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def

/p1y p1x SS1 div neg def

/SS2 90 theta sub dup sin exch cos div def

/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def

/p2y p2x SS2 div neg def

r1 r2 gt

{

/L1maxX p1x yMin p1y sub SS1 div add def

/L2maxX p2x yMin p2y sub SS2 div add def

}

{

/L1maxX 0 def

/L2maxX 0 def

}ifelse

p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto

L1maxX L1maxX p1x sub SS1 mul p1y add lineto

fill

}

ifelse

}

ifelse

} ifelse

} if

c1x c2x sub dup mul

c1y c2y sub dup mul

add 0.5 exp

0 dtransform

dup mul exch dup mul add 0.5 exp 72 div

0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

1 index 1 index lt { exch } if pop

/hires exch def

hires mul

/numpix exch def

/numsteps NumSamples def

/rampIndxInc 1 def

/subsampling false def

numpix 0 ne

{

NumSamples numpix div 0.5 gt

{

/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def

/rampIndxInc NumSamples 1 sub numsteps div def

/subsampling true def

} if

} if

/xInc c2x c1x sub numsteps div def

/yInc c2y c1y sub numsteps div def

/rInc r2 r1 sub numsteps div def

/cx c1x def

/cy c1y def

/radius r1 def

newpath

xInc 0 eq yInc 0 eq rInc 0 eq and and

{

0 getrampcolor

cx cy radius 0 360 arc

stroke

NumSamples 1 sub getrampcolor

cx cy radius 72 hires div add 0 360 arc

0 setlinewidth

stroke

}

{

0

numsteps

{

dup

subsampling { round cvi } if

getrampcolor

cx cy radius 0 360 arc

/cx cx xInc add def

/cy cy yInc add def

/radius radius rInc add def

cx cy radius 360 0 arcn

eofill

rampIndxInc add

}

repeat

pop

} ifelse

ext1 {

c2y r2 add r1 lt

{

c2x c2y r2 0 360 arc

fill

}

{

c2y r1 add r2 le

{

c2x c2y r2 360 0 arcn

xMin yMin moveto

xMax yMin lineto

xMax yMax lineto

xMin yMax lineto

xMin yMin lineto

eofill

}

{

c2x c2y r2 0 360 arc fill

r1 r2 eq

{

/p1x r2 neg def

/p1y c2y def

/p2x r2 def

/p2y c2y def

p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto

fill

}

{

/AA r2 r1 sub c2y div def

/theta AA 1 AA dup mul sub sqrt div 1 atan def

/SS1 90 theta add dup sin exch cos div def

/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def

/p1y c2y p1x SS1 div sub def

/SS2 90 theta sub dup sin exch cos div def

/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def

/p2y c2y p2x SS2 div sub def

r1 r2 lt

{

/L1maxX p1x yMax p1y sub SS1 div add def

/L2maxX p2x yMax p2y sub SS2 div add def

}

{

/L1maxX 0 def

/L2maxX 0 def

}ifelse

p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto

L1maxX L1maxX p1x sub SS1 mul p1y add lineto

fill

}

ifelse

}

ifelse

} ifelse

} if

grestore

grestore

end

end

end

} ifelse

} bd

/GenStrips {

40 dict begin

/background exch def

/ext1 exch def

/ext0 exch def

/BBox exch def

/y2 exch def

/x2 exch def

/y1 exch def

/x1 exch def

/rampdict exch def

gsave

BBox length 0 gt {

newpath

BBox 0 get BBox 1 get moveto

BBox 2 get BBox 0 get sub 0 rlineto

0 BBox 3 get BBox 1 get sub rlineto

BBox 2 get BBox 0 get sub neg 0 rlineto

closepath

clip

newpath

} if

x1 x2 eq

{

y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse

}

{

/slope y2 y1 sub x2 x1 sub div def

/theta slope 1 atan def

x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if

x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if

}

ifelse

gsave

clippath

x1 y1 translate

theta rotate

{ pathbbox } stopped

{ 0 0 0 0 } if

/yMax exch def

/xMax exch def

/yMin exch def

/xMin exch def

grestore

xMax xMin eq yMax yMin eq or

{

grestore

end

}

{

rampdict begin

20 dict begin

background length 0 gt { background sssetbackground gsave clippath fill grestore } if

gsave

x1 y1 translate

theta rotate

/xStart 0 def

/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def

/ySpan yMax yMin sub def

/numsteps NumSamples def

/rampIndxInc 1 def

/subsampling false def

xStart 0 transform

xEnd 0 transform

3 -1 roll

sub dup mul

3 1 roll

sub dup mul

add 0.5 exp 72 div

0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

1 index 1 index lt { exch } if pop

mul

/numpix exch def

numpix 0 ne

{

NumSamples numpix div 0.5 gt

{

/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def

/rampIndxInc NumSamples 1 sub numsteps div def

/subsampling true def

} if

} if

ext0 {

0 getrampcolor

xMin xStart lt

{ xMin yMin xMin neg ySpan rectfill } if

} if

/xInc xEnd xStart sub numsteps div def

/x xStart def

0

numsteps

{

dup

subsampling { round cvi } if

getrampcolor

x yMin xInc ySpan rectfill

/x x xInc add def

rampIndxInc add

}

repeat

pop

ext1 {

xMax xEnd gt

{ xEnd yMin xMax xEnd sub ySpan rectfill } if

} if

grestore

grestore

end

end

end

} ifelse

} bd

%%EndResource

%%BeginResource: procset sep_ops

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044

userdict /sep_ops 50 dict dup begin put

/bdef {bind def} bind def

/xdef {exch def} bdef

/colorimagebuffer {

0 1 2 index length 1 sub {

dup 2 index exch get 255 exch sub 2 index 3 1 roll put

} for

} bdef

/addprocs {

[ 3 1 roll

/exec load

dup 3 1 roll

] cvx

} bdef

/L1? {

systemdict /languagelevel known {

systemdict /languagelevel get 2 lt

}{

true

} ifelse

} bdef

/colorexists {

statusdict /processcolors known {

statusdict /processcolors get exec

}{

/deviceinfo where {

pop deviceinfo /Colors known {

deviceinfo /Colors get

statusdict /processcolors {

deviceinfo /Colors known {

deviceinfo /Colors get

}{

1

} ifelse

} put

}{

1

} ifelse

}{

1

} ifelse

} ifelse

1 gt

} bdef

/colorplate colorexists { 0 } { 5 } ifelse def

/negativecolorplate false def

/setcmykcolor where {

pop

gsave

1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub

4 {4 copy} repeat

grestore

1 dict begin

/foureq {

4 index eq 8 1 roll

4 index eq 8 1 roll

4 index eq 8 1 roll

4 index eq 8 1 roll

pop pop pop pop and and and

} def

1 0 0 0 foureq {/colorplate 1 store} if

0 1 0 0 foureq {/colorplate 2 store} if

0 0 1 0 foureq {/colorplate 3 store} if

0 0 0 1 foureq {/colorplate 4 store} if

0 0 0 0 foureq {/colorplate 6 store} if

end

} if

0 systemdict /currenttransfer get exec exec

1 systemdict /currenttransfer get exec exec

2 copy

eq

{

/colorplate 6 store

pop

/negativecolorplate exch 0.5 lt store

}

{

gt /negativecolorplate exch store

}

ifelse

/findcmykcustomcolor where { pop }

{

/findcmykcustomcolor {

[ 6 1 roll ] readonly

} bdef

} ifelse

/setoverprint where {

pop

}{

/setoverprint {

pop

} bdef

} ifelse

/currentoverprint where {

pop

}{

/currentoverprint {

false

} bdef

} ifelse

/setcustomcolor where {

pop

}{

L1? {

/setcustomcolor {

exch

aload pop pop

4 { 4 index mul 4 1 roll } repeat

5 -1 roll pop

setcmykcolor

} bdef

}{

/setcustomcolor {

exch

[ exch /Separation exch dup 4 get exch /DeviceCMYK exch

0 4 getinterval

[ exch /dup load exch cvx {mul exch dup}

/forall load /pop load dup] cvx

] setcolorspace setcolor

} bdef

} ifelse

} ifelse

/ik 0 def

/iy 0 def

/im 0 def

/ic 0 def

/imagetint {

ic .3 mul

im .59 mul

iy .11 mul

ik add add add dup

1 gt {pop 1} if

} bdef

/setcmykcolor where {

pop

}{

/setcmykcolor {

/ik xdef /iy xdef /im xdef /ic xdef

imagetint

1 exch sub setgray

} bdef

} ifelse

/customcolorimage where {

pop

}{

L1? {

/customcolorimage{

gsave

colorexists {

aload pop pop

/ik xdef /iy xdef /im xdef /ic xdef

currentcolortransfer

{ik mul ik sub 1 add} addprocs

4 1 roll {iy mul iy sub 1 add} addprocs

4 1 roll {im mul im sub 1 add} addprocs

4 1 roll {ic mul ic sub 1 add} addprocs

4 1 roll setcolortransfer

/magentabuf 0 string def

/yellowbuf 0 string def

/blackbuf 0 string def

{

colorimagebuffer dup length magentabuf length ne

{

dup length dup dup

/magentabuf exch string def

/yellowbuf exch string def

/blackbuf exch string def

} if

dup magentabuf copy yellowbuf copy

blackbuf copy pop

} addprocs

{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage

}{

aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint

imagetint def

currenttransfer

{tint mul 1 tint sub add} addprocs settransfer image

} ifelse

grestore

} bdef

}{

/customcolorimage {

gsave

[ exch /Separation exch dup 4 get exch /DeviceCMYK exch

0 4 getinterval

[ exch /dup load exch cvx {mul exch dup}

/forall load /pop load dup] cvx

] setcolorspace

10 dict begin

/ImageType 1 def

/DataSource exch def

/ImageMatrix exch def

/BitsPerComponent exch def

/Height exch def

/Width exch def

/Decode [1 0] def

currentdict end

image

grestore

} bdef

} ifelse

} ifelse

/setseparationgray where {

pop

}{

L1? {

/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef

}{

/setseparationgray {

[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace

1 exch sub setcolor

} bdef

} ifelse

} ifelse

/separationimage where { pop }

{

/separationimage {

gsave

1 1 1 1 (All)

findcmykcustomcolor customcolorimage

grestore

} bdef

} ifelse

currentdict readonly pop end

%%EndResource

%%BeginResource: procset pdflev15044

%%Version: 5.0 13

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 1

%%Title: PDF operators, Level 1, with emulated separations (TN 5044)

/_ColorSep5044? true dd

/docinitialize {

PDF begin

/_defaulthalftone

/currenthalftone where

{ pop currenthalftone }

{ 4 dict dup begin

currentscreen

/SpotFunction exch def

/Angle exch def

/Frequency exch def

/HalftoneType 1 def

end }

ifelse

dd

/currentcolortransfer where

{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }

{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }

ifelse

end

} bd

/initialize {

/overprintstack null dd

sep_ops begin

50 dict begin

_defaulthalftone sethalftone

} bd

/terminate {

end end

} bd

/currentcolortransfer where

{ pop }

{

/setcolortransfer

{

settransfer pop pop pop

} bd

} ifelse

/pl {

transform

0.25 sub round 0.25 add exch

0.25 sub round 0.25 add exch

itransform

} bd

/m { _sa? { pl } if moveto } bd

/l { _sa? { pl } if lineto } bd

/c

{

_sa? {3 {pl 6 2 roll} repeat} if

curveto

} bd

/ri/pop ld

/setSA { /_sa? xdd } bd

/re

{

_sa?

{

8 dict begin

/:h exch def

/:w exch def

/:y exch def

/:x exch def

:x :y pl

/:ymin exch def /:xmin exch def

:x :w add :y :h add pl

/:ymax exch def /:xmax exch def

:xmin :ymin moveto

:xmax :ymin lineto

:xmax :ymax lineto

:xmin :ymax lineto

closepath

end

}

{

4 2 roll moveto

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

closepath

} ifelse

} bd

/q

{

gsave

[currentoverprint overprintstack] /overprintstack xdd

}

[/overprintstack] bld

/Q

{

overprintstack aload pop /overprintstack xdd setoverprint

grestore

}

[/overprintstack] bld

/AlmostFull?

{ dup maxlength exch length sub 2 le

} bd

/Expand

{ 1 index maxlength mul cvi dict

dup begin exch { def } forall end

} bd

/xput

{ 3 2 roll

dup 3 index known not

{ dup AlmostFull? { 1.5 Expand } if

} if

dup 4 2 roll put

} bd

/defineRes

{ _categories 1 index known not

{ /_categories _categories 2 index 10 dict xput store

} if

_categories exch 2 copy get 5 -1 roll 4 index xput put

} bd

/findRes {

_categories exch get exch get

} bd

/L1setcolor {

aload length

dup 0 eq

{ pop .5 setgray }

{ dup 1 eq

{ pop setgray }

{ 3 eq

{ setrgbcolor }

{ setcmykcolor }

ifelse }

ifelse }

ifelse

} bind dd

/concattransferfuncs {

[ 3 1 roll /exec load exch /exec load ] cvx

} bd

/concatandsettransfer {

/_defaulttransfer load concattransferfuncs settransfer

} bd

/concatandsetcolortransfer {

colorplate 0 eq

{

_defaultcolortransfer aload pop

8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll

6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll

4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll

concattransferfuncs

setcolortransfer

} if

colorplate 1 ge colorplate 4 le and

{

4 colorplate sub index 4 { exch pop } repeat

concatandsettransfer

} if

colorplate 5 ge

{

0 index 4 { exch pop } repeat

concatandsettransfer

} if

} bd

/tn5044sethalftone

{

begin

HalftoneType 5 eq

{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]

colorplate get

here not {

/Default here not { currentdict } if

} if

}

{ currentdict }

ifelse

end

begin

/TransferFunction here

{

concatandsettransfer

currentdict dup length dict

begin

{

1 index /TransferFunction ne { def } { pop pop } ifelse

} forall

currentdict

end

}

{

currentdict

} ifelse

end

sethalftone

} bd

/paintimage

{

colorplate 0 eq

{

{ {currentfile cyanstr readstring pop}

{currentfile magentastr readstring pop}

{currentfile yellowstr readstring pop}

{currentfile blackstr readstring pop

currentfile graystr readstring pop pop}

}

{ {currentfile cyanstr readhexstring pop}

{currentfile magentastr readhexstring pop}

{currentfile yellowstr readhexstring pop}

{currentfile blackstr readhexstring pop

currentfile graystr readhexstring pop pop}

} ifelse

true 4 colorimage

}

{

3 dict begin

/binaryOK exch def

[

1 1 5 {

dup

/currentfile cvx

[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]

3 -1 roll 1 sub get cvx

binaryOK { /readstring } { /readhexstring } ifelse cvx

/pop cvx

5 -1 roll

colorplate dup 5 gt { pop 5 } if

eq not { /pop cvx } if

} for

] cvx bind

end

[

colorplate 6 eq {

/pop cvx

negativecolorplate { 0 } { 1 } ifelse

} if

colorplate 4 le

{

1 /exch cvx /sub cvx

} if

colorplate 6 ne

{

systemdict /currenttransfer get exec

aload pop

} if

] cvx

gsave

systemdict /settransfer get exec

systemdict /image get exec

grestore

} ifelse

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 5.0 6

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 78 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

} bd

/terminate { end } bd

Level2?

{

/_safeput

{

3 -1 roll load 3 1 roll put

}

bd

}

{

/_safeput

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

3 -1 roll load 3 1 roll put

}

bd

}

ifelse

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

Level2? {currentglobal true setglobal} if

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

Level2? {setglobal} if

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

currentdict /PaintType known

{ PaintType 2 eq {/PaintType 0 def} if }

if

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

Level2?

{

currentdict /pdf_origFontName undef

} if

FontName currentdict

end

definefont pop

}

bd

Level2?

{

/TZG

{

currentglobal true setglobal

2 index _pdfFontStatus

{

2 index findfont

false setglobal

3 index findfont

true setglobal

ne

{

2 index findfont dup rcheck

{

dup length dict begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

currentdict end

}

if

3 index exch definefont pop

}

if

} if

setglobal

TZ

} bd

}

{

/TZG {TZ} bd

} ifelse

Level2?

{

currentglobal false setglobal

userdict /pdftext_data 5 dict put

pdftext_data

begin

/saveStacks

{

pdftext_data

begin

/vmmode currentglobal def

false setglobal

count array astore /os exch def

end

countdictstack array dictstack pdftext_data exch /ds exch put

cleardictstack pdftext_data /dscount countdictstack put

pdftext_data /vmmode get setglobal

} bind def

/restoreStacks

{

pdftext_data /vmmode currentglobal put false setglobal

clear cleardictstack

pdftext_data /ds get dup

pdftext_data /dscount get 1 2 index length 1 sub

{ get begin dup } for

pop pop

pdftext_data /os get aload pop

pdftext_data /vmmode get setglobal

} bind def

/testForClonePrinterBug

{

currentglobal true setglobal

/undefinedCategory /Generic /Category findresource

dup length dict copy /Category defineresource pop

setglobal

pdftext_data /saveStacks get exec

pdftext_data /vmmode currentglobal put false setglobal

/undefined /undefinedCategory { resourcestatus } stopped

pdftext_data exch /bugFound exch put

pdftext_data /vmmode get setglobal

pdftext_data /restoreStacks get exec

pdftext_data /bugFound get

} bind def

end

setglobal

/pdf_resourcestatus

pdftext_data /testForClonePrinterBug get exec

{

{

pdftext_data /saveStacks get exec

pdftext_data /os get dup dup length 1 sub

dup 1 sub dup 0 lt { pop 0 } if

exch 1 exch { get exch dup } for

pop pop

{ resourcestatus }

stopped

{

clear cleardictstack pdftext_data /restoreStacks get exec

{ pop pop } stopped pop false

}

{

count array astore pdftext_data exch /results exch put

pdftext_data /restoreStacks get exec pop pop

pdftext_data /results get aload pop

}

ifelse

}

}

{ { resourcestatus } }

ifelse

bd

}

if

Level2?

{

/_pdfUndefineResource

{

currentglobal 3 1 roll

_pdf_FontDirectory 2 index 2 copy known

{undef}

{pop pop}

ifelse

1 index (pdf) exch _pdfConcatNames 1 index

1 index 1 _pdfConcatNames 1 index

5 index 1 _pdfConcatNames 1 index

4

{

2 copy pdf_resourcestatus

{

pop 2 lt

{2 copy findresource gcheck setglobal undefineresource}

{pop pop}

ifelse

}

{ pop pop}

ifelse

} repeat

setglobal

} bd

}

{

/_pdfUndefineResource { pop pop} bd

}

ifelse

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font pdf_resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category pdf_resourcestatus

{

pop pop

/CIDFont pdf_resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckCIDSystemInfo

{

1 index _pdfTextTempString cvs

(Identity) anchorsearch

{

pop pop pop pop true

}

{

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

exch /CIDFont findresource

/CIDSystemInfo get

3 -1 roll /CMap findresource

/CIDSystemInfo get

exch

3 -1 roll

{

2 copy

/Supplement get

exch

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ true }

ifelse

{

dup /Registry get

2 index /Registry get eq

{

/Ordering get

exch /Ordering get

dup type /arraytype eq

{

1 index type /arraytype eq

{

true

1 index length 1 sub -1 0

{

dup 2 index exch get exch 3 index exch get ne

{ pop false exit}

if

} for

exch pop exch pop

}

{ pop pop false }

ifelse

}

{

eq

}

ifelse

}

{ pop pop false }

ifelse

}

{ pop pop false }

ifelse

}

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap pdf_resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckCIDSystemInfo

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

{

exch _wmode _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

Level2?

{

/Tf {

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

selectfont

} bd

}

{

/Tf {

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

exch findfont exch

dup type /arraytype eq

{makefont}

{scalefont}

ifelse

setfont

} bd

}

ifelse

/cshow where

{

pop /pdf_cshow /cshow load dd

/pdf_remove2 {pop pop} dd

}

{

/pdf_cshow {exch forall} dd

/pdf_remove2 {} dd

} ifelse

/pdf_xshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

_pdf_x _pdf_y moveto

0

rmoveto

}

ifelse

_pdf_i 1 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdf_yshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

_pdf_x _pdf_y moveto

0 exch

rmoveto

}

ifelse

_pdf_i 1 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdf_xyshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

{_pdf_na _pdf_i 1 add get} stopped

{ pop pop pop}

{

_pdf_x _pdf_y moveto

rmoveto

}

ifelse

}

ifelse

_pdf_i 2 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd

/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd

/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd

Level2? _ColorSep5044? not and

{

/pdfxs {{xshow} stopped {pdfl1xs} if} bd

/pdfys {{yshow} stopped {pdfl1ys} if} bd

/pdfxys {{xyshow} stopped {pdfl1xys} if} bd

}

{

/pdfxs /pdfl1xs load dd

/pdfys /pdfl1ys load dd

/pdfxys /pdfl1xys load dd

} ifelse

/pdf_charpath {false charpath} bd

/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd

/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd

/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd

/pdf_strokepath

{

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 false charpath

currentpoint S moveto

} bind

exch pdf_cshow

} bd

/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd

/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd

/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd

Level2? {currentglobal true setglobal} if

/d0/setcharwidth ld

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap PDFText /pdf_resourcestatus get exec

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

Level2? {setglobal} if

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

Level2? {currentglobal true setglobal} if

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

Level2? {setglobal} if

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%IncludeResource Courier

[/N60/Courier -1 TZ

%%IncludeResource Times-Italic

[ 2 /fi 32 /space/exclam/quotedbl/numbersign/dollar

/percent/ampersand/quoteright/parenleft/parenright/asterisk

/plus/comma/hyphen/period/slash/zero

/one/two/three/four/five/six

/seven/eight/nine/colon/semicolon/less

/equal/greater/question/at/A/B

/C/D/E/F/G/H

/I/J/K/L/M/N

/O/P/Q/R/S/T

/U/V/W/X/Y/Z

/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft

/a/b/c/d/e/f

/g/h/i/j/k/l

/m/n/o/p/q/r

/s/t/u/v/w/x

/y/z/braceleft/bar/braceright/asciitilde

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/exclamdown/cent

/sterling/fraction/yen/florin/section/currency

/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi

/fl/.notdef/endash/dagger/daggerdbl/periodcentered

/.notdef/paragraph/bullet/quotesinglbase/quotedblbase/quotedblright

/guillemotright/ellipsis/perthousand/.notdef/questiondown/.notdef

/grave/acute/circumflex/tilde/macron/breve

/dotaccent/dieresis/.notdef/ring/cedilla/.notdef

/hungarumlaut/ogonek/caron/emdash/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/AE/.notdef/ordfeminine/.notdef

/.notdef/.notdef/.notdef/Lslash/Oslash/OE

/ordmasculine/.notdef/.notdef/.notdef/.notdef/.notdef

/ae/.notdef/.notdef/.notdef/dotlessi/.notdef

/.notdef/lslash/oslash/oe/germandbls/.notdef

/.notdef/.notdef/.notdef

/N57/Times-Italic -1 TZ

%%IncludeResource Times-Bold

[/N45/Times-Bold -1 TZ

%%IncludeResource Times-Bold

[/N46/Times-Bold -1 TZ

%%IncludeResource Times-Roman

[ 2 /fi/fl 32 /space/exclam/quotedbl/numbersign

/dollar/percent/ampersand/quoteright/parenleft/parenright

/asterisk/plus/comma/hyphen/period/slash

/zero/one/two/three/four/five

/six/seven/eight/nine/colon/semicolon

/less/equal/greater/question/at/A

/B/C/D/E/F/G

/H/I/J/K/L/M

/N/O/P/Q/R/S

/T/U/V/W/X/Y

/Z/bracketleft/backslash/bracketright/asciicircum/underscore

/quoteleft/a/b/c/d/e

/f/g/h/i/j/k

/l/m/n/o/p/q

/r/s/t/u/v/w

/x/y/z/braceleft/bar/braceright

/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/quotedblleft/quotedblright/.notdef

/endash/emdash/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/exclamdown

/cent/sterling/fraction/yen/florin/section

/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright

/fi/fl/.notdef/endash/dagger/daggerdbl

/periodcentered/.notdef/paragraph/bullet/quotesinglbase/quotedblbase

/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown

/.notdef/grave/acute/circumflex/tilde/macron

/breve/dotaccent/dieresis/.notdef/ring/cedilla

/.notdef/hungarumlaut/ogonek/caron/emdash/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/AE/.notdef/ordfeminine

/.notdef/.notdef/.notdef/.notdef/Lslash/Oslash

/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef

/.notdef/ae/.notdef/.notdef/.notdef/dotlessi

/.notdef/.notdef/lslash/oslash/oe/germandbls

/.notdef/.notdef/.notdef/.notdef

/N47/Times-Roman -1 TZ

%%IncludeResource TimesNewRomanPSMT

[/N81/TimesNewRomanPSMT 1 TZ

%%IncludeResource TimesNewRomanPSMT

[/N41/TimesNewRomanPSMT 1 TZ

%%IncludeResource Times-Roman

[/N39/Times-Roman -1 TZ

%%IncludeResource ArialMT

[/N52/ArialMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

71 618 226 113 rectclip

%%BeginResource: font TWPPMU+ArialMT~47

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /TWPPMU+ArialMT~47 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D183F654CC9E516843D

39D400085ABA9646DA481FF9468E167556FF2D2521815E2A32874AB03E72C7AB

1024243EA677680BE387625F955E87713831EB3219318ED24174C839554897C7

213358F9708DABA15D2FB9C8340A6A684CCB04C1845415C81C9AF8E6861BDE41

2BF46CF45BE4D7B4D65A6D990C67FC10310576CC8DBBA7765CAB918E883BACBB

97147F7D72EA3A2E1B3AECC1CD984BBA20123B0FE78C02B6687368159B715447

9EB249424F55DD2FEBBB88CB2CB3D9E6BD1F5E41B28EA25FB4982745B9EFFDDC

58FFC60A0CDD5990D0AC927857559AC8A39DA004A9E99A94FCD78B20D94429DE

3D17CC2BDC4A3CC75392C8C38FD13BD6BF369D0E51989A9E405EFF62FA317CB6

9C49F642460F43F7896B919594E672389A0AB10BB6A0319B7DA61A23386151B2

6CD0BEBAE4A37E391BE5FCEACDFF7AFA8793CDAEF8FB4AAE31057301D2D43C3B

0BC75E9F333139988AD175E4DCA73E35F4AD723D4B6D08AA2622B36413277BAA

9C65600C5FD300866842A91675A392048FFF0F8EA0B04869B01F1BEFEE9D2543

1864509A8B7AC913BFEAACE31AC4B2245B1A474E8331D296456B3484E2AF77B2

3D0E0A705F9684A816F6F3303D2D635CD57FD9CCC01AFED57B312FECF713D2EA

4FCA1A4FCA1D0518FBEC3BA59B13EF7E015ACFA7393D0C6C32FCE02073F6457A

4A86547BD5CBB44261D74A216C4D91B11B0CD0D131CA56CC8B39E7D39E08F133

F4BE00F38E4E9B63DEEAE3B9614612C111C007FCC425B672842DB76BFC

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/TWPPMU+ArialMT~47 findfont /Encoding get

dup 0 /.notdef put

pop

end

/TWPPMU+ArialMT~47 findfont /Encoding get

dup 0 /.notdef put

dup 79 /O put

dup 112 /p put

dup 116 /t put

pop

%%EndResource

[/N48/TWPPMU+ArialMT~47 -1 TZ

%%BeginResource: font OGCUNH+ArialMT~41

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /OGCUNH+ArialMT~41 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545483BEDE3F5036AD096

95D44D3AF1F3DE68B49C231BA72A6C0F914ED70519CC4C1E28E058061A7D304D

FCA2C36D91A36B15655F225FB9DE99B3072122C81748CC079616345904F8F37C

C7F95A75EB51E927A490401ECFAD06CB01C4EB75FBAF00E3DE83EF1F35C94410

04E7B1D25AD35361E694D89ECC0A72C605EB4C9D7D88A29FC9115CE89A379FD4

C1A4E52ADB52D3C654A49B201C33A0E64899F3935FB11EC87C168D736D95D91E

CD594E4FAF03BF485818BA103ECAC3E87F72AE5856D990E4536CCAB54D452CE9

BE3C07AA91A93F489997B9845FBC29CE29CEA04959987633F2F395973D9BCC1E

F1D642C62512AC59555F83DF8FB03C9F5328563D36909495C6CAA400AF2803E9

805F933A5E8469E2F7D8CF8A58C3FDC26C3F6BC5A6A197174E29185023335B31

49C04C2065931AFBDA4267C1C0DC4D966E0D373B1FAE511F636707FDE0428D27

8CD58E604F898A821A607E115D78DC72DA764158960D53157D53BB98A4750E89

0791B4931367FA9297B8F57AB9972B85446060B224348392C259001C556CA4FF

28344533E4D528C7ED3C4AEFFFDD6E256FA0E42203430943A3FC456E777EAC14

C9BF3B7D09525AACAE4A6687834BB5FFAD6D2E1A6D254A25445F3DFEADA91B9E

B63EDC882598237FA32519923EC02D15A0D25E4ABE5A571EF333F6BF909B231C

D842ED1DC55AE14DAE113A288504DF4849AECB8CC9C823CA48BEF1F9B13A2D3F

C46539206CF0CEF63BB8F6552BE9364D67D6B39778D4BD2569B935FD862C8EA2

4E26795DE934852A7018E3B85CE303AFFA2182984F2EE5ACE4F39D970A502AFA

F9CBE6D9EBA5CE0E114C24D87E11B9E14BDFAB759A637774FAB8B429AC0A0036

EFAC9429FD3F5B15AE3B4E8C1201637BA3434279592BD2552309725ABB188F59

6B747B36D1BF0D3493FBBAD3F5EB2D7F40C818DD9ECFFB1EB8D896C481DDD06B

35EB9551DE18D5BBF26714656CD44754C6B2088C110B82B8D4B3661EAA663D32

F104CC46F44C2ACFC76FED41A0F2B05B7B41EFF4A37F7C0D5DC28C35E17F6140

019D18B7BBB5116D61F535122FC1D6E7351F19E0DB3E12A9156BD90771E21877

107BEE9A31AC1E5B36695DE9CEC2019EB79CB7271A579F459C886F87D2B10358

83BCB25720684831CCABC45EC31548BBCA6C7C3CAA7D6533D90C1E8DF8CD9C1D

768155AAC4C84085EDA4C7D6E53D50850C87EC5700B6A0096EB9EE2987951B49

D8F300EDB61DFFF0BBC71A93DEFFF6467E3B50E99ECE362A8C9C066D613026E5

A9C940B5968967BC8A6F1C9E663E4281DF5FA67C13AABF9087CB59EFC9717659

ED4B3E22F50B0A5964D490EDEA4C8912279A80D6959C1A04DCE4B59BF46537BD

3DF45737103A25DC0AB7238687BBC7D18AA8725E95880EDC87EAA210BDDD4EA3

6D0233BE65271564FF7D61537088B0874D1DF9D41C40368399A80433D3743DE1

C433

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/OGCUNH+ArialMT~41 findfont /Encoding get

dup 0 /.notdef put

pop

end

/OGCUNH+ArialMT~41 findfont /Encoding get

dup 0 /.notdef put

dup 83 /S put

dup 99 /c put

dup 101 /e put

dup 111 /o put

dup 114 /r put

dup 117 /u put

pop

%%EndResource

[/N51/OGCUNH+ArialMT~41 -1 TZ

%%BeginResource: font ZJMUMW+ArialMT~3d

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /ZJMUMW+ArialMT~3d def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5D5842D86A6C9AFDD18ECD5CAF2DE803E7A7BA868FAB984229798

ADDAAE49C9EA48A5D2DB77F25DC348952B5767EA25D6B45FB5128D1FE19A13A9

7002F975B66C9D5CC3EE3F1761A538F9022226136BFAAB026D01E0FB9845A9FE

FBF6A04BAC4A2EFBBB973EE935BFE23007877F33299A211C3D90A328B2D7C191

4958A3E05057A5E462736BEAFAB78E885644D62D94E30F82AFE894F988F779CF

9FECE9B95C4F0A5D21D3723DDEEEF96400AA484030C6D05D838398C95647491D

BC0D333156ECCE454ACFE3ED1588C866DA6139A7EB9B135E23DFA3D54FEB26E8

85DA2226E79F8E7312B94721BECB4B311B600555662D256B8CD5585E1A77D228

599954C42563DD55EA8E81E3A3B44E0C96461FA8CDB355140EFB150C899B1AF5

37A3FC4CF21D77AAC53D78C1170AC920B8BCC1F418BB5D809E8B5631E57CA8F7

75BE0997CD1D3F3B3A30C75702DCD9034E4FA07ACB4C393BAE91E3C20B4BDD4E

28A6A9CD35E53FB9F88C1B35641F104F43BDB3F882BB141DB7A2F75BF71D1459

ECBD8B040579BEDC02A93FB8415F4664B67A8144C5B87CCE66E97F06383B941C

CCBE2DB149D5EDF7F367DFCFBB082942F3D7E23805E65524D091B9F5A5584661

9F5E55E9EFCE8D71696618CADF4E39319329E4F972DD9C09FDD1028715633E72

59879F0D45B306F85B8106B92F3F1348EB73C59334DEBBF2A21F8CF93E27DB62

FD955F2BE3E29D052F407C73EE62ABE49C0C94EC1B981ED469673AA03BBED205

FFC5E80BA4A37C0DBCA8188EEFC8C7CFDFA65B91493574F1E7262FC78F0C0542

71EE9C3A061E656D4272EBB7D12365555D7204E649AF46C97A3C8FEF0A10899D

11EB37CF1E612071DD9C2942B129B3E92A213AA82860EC9D6692E3AE4CE6AC93

14BE238EBD9BDE963D77AF3597349C77140E15582FD8B52D509FFC323BE1ADA8

B51971030F7BC855D9E03B25A6A91EF9675677F85A8071DB1E6F6C6FB86355A7

DFE10ADB40E2921CA88485C759AE50713BC70F2C1D5E78CE8D79A6C7D93217AA

7773FB631E4E1DF000C771D9771919891CF147FD0CC90D7C9A0B609A32EC976A

9E9EEA77363D633A09CA6076FB8ED55FDD55EB40E56B25D0B9D4B5B8FE5015B8

6AF68FFA9FE5F12D655A6EC26BAB77154C9CD88F4084858A93E7743E07ED3F63

F6BA61D50895F12884CFE801EF1E9C987C9A1EFC11C3C5F0DDDCFBD738C80425

DAA05AB310FA7642C111A041B1766A84CFCA1679970F3BAA698B686ADDA540F1

451621FEB3A37E236BA5627BA833E2A29EA883EE9F7F683067DE7740BC114F24

83A2C5270B7ECCAAA522E8BF1CBF5749C30B2989C9A103433F3E023BD94A8BDB

49917F0B42B1DC5C4F323AEC77C18934D1233169AF3531231A9900918F8A4024

5E0F44AAB9276B3F672B215E6A462BC856028A3B19FAFD409C2853E826A43DE4

51A02050A1FEA0763EF8D4E1EEEBBCC889D066689193444F5B4A46F229055443

720765B15EC8AAA278A9D0D2A1524CD3643CE3DDF69F815CAF88623DC03039D5

E5CFC7BCBFC86598C0F062BEA4CF2C27B3C7BA0DFD4B16EAFD214A6886C41D52

D8329097BEE435D2106A74E6E51F5CB649562B97AB5BEAC905218D6BF0A79B67

4B8032EFECD6C19088EAD58CD0166F8E7A79C45362352DEA2F277F08001B1660

544395B9EC7C2D0D9AACA76851AB9AD4100AD0C567B465B5F91C0B49D33FA82A

A3A0C745BE9C2B0EC02D6177BA60BFE8042F52777EAFC54027966E18CBBC5B51

63BD1D296C9EFD52D0D73214EB1CD435396EAAD4E084E505FC17D071F11923A9

1478D795489531ECB5DAA57EB300704E23050AC45CE0AB131D477926B88A07E5

F67B6A9D5A64697E4195FBEAAF786A2724C9011FDB18D61CAC897690075DCB4A

736B7F630A15BD57254F71DFBB7D7BF090CBA999D00ED8D4807424AB5726A62F

034A8D58BB2E9464DF5D983ECF8BA2DE9A60A8B9688DE2DAAC3F9B577CEB6745

58DC45C7297575AD8E5B6EB6BF7C3AFDA0B7A853A661DD60BFEA39C62FB948AC

872CB6426305B83275016574E83C92E7C07943D0A144EBF39610F304C3868878

AB7FA0FB84C5ED9B960E3A6F8B4226C90AFD5383569C2D9E335396B5F49CF971

9A9596FD7C1B839C1890B3740DEF54192195CB0D309C263AD847B425A6ED1B5B

BB45769D4AA7B68D4F9E0558B78AD191EDC11EFABA1C21619817A0975C7B85C4

81B917B6DF02E299CE03FB28B3E3427835A46A6C6E3E42049557B2B6F0DCD638

459632CE39595EC4F4B175D029D3435A7A6DF88708B0C44AFDF87F9620A78F4D

B3572925D02DA44168BEF45D2A22C792E44DB695856B9DCE3BE8F7E84DA97097

3373B8C2C5E5AF3379573EAC8246BE7612CF5A6D307C1D1E580D09CBACD6FA96

2FBFDFB3C8353538F68B7218192407192FC89ECDB18C734007AE1C2238B0C473

32F9082ED05C7B5B8E4F51766B59493518CDFE9C179470ABA8A5EB83DE85CF9F

1AD9E27752A48966084CE2EE5A473910AA7B06FA5CD8C226BE874027E01A982C

0FF4B05039AAE1927379A2E813EC79D64A72793AF00F79CE4CE3A9E0DECFD7EB

DF19029DE1501F13BDE1FF44C42FC612034CFA9FA1EB25D9B98B18742F96C129

1DD81217052467D592FD34F518BE92EB76C816ACADE8314EE7DC962B395A0BC6

3FE384DAEA52014EF575EBD64857B497036639548F55A246F831E8B9A065A46C

C2315AAE195323A9FB246E6F6E2F3F12D307EE091F970F01DE342954091FAD25

314B02044670722C2EABF99A377EF4E167FEA22873DA59DC8AAB1154774B515F

E9F668707E971689BFC528EC480892CFFE1162B7C69EED8878BB1AF60B59FEE6

C539BBEDCEC9A8D913D734DD23C761E6D028AA850B1CD714EDD514FCE806C05B

0A073BF863CC48C54A234CE3D5E462846188D458AA7955D76F13D600A9C381E5

E6F5310370CF6B0042824F15015234A8941E0EECEA5DC233281D01CC026127F6

FBDB31059AC5708DCFE489B27DA1FFFF6543E2949814B7EF03E1C2EF480F2A58

F981F9AC424A1B8C4102E36C4A01A20F460060086D6BB45D98C723FA755155D5

C7C2350A023F797D9E6CB1D05B0EABFAD46DE2F09B01D93A3FF3EF67CC3513EE

79D6D80F4BF3F01DD011C3B84177E29DF962254ADFE27636F6340188B2ACCF4E

87895E2D78A26729BC34D8AF2CE26050E71BC005475EB201A12DB65EC44BC224

DA445D09E5BAC0656FFA332241E88B68F09089D601911778EB4EAC3364544866

35EA7C557D837A11986E0D102FC99B713D4B48C5E5D6D6072AC9374EDEB7F5D6

B42B83D55716C569A06E185684634F2B64EF1EDF3289E21058B1EFB9AA8881C5

1CD2DC040F0E44DAEC8B0341E96EBB16469FB3D27901237ADFC5BD531A973588

77BF5B676D0691CF5BB9BA388DEB865F64B4F0F4707D794344C2C80988F7CF47

F9F64E84396549A4B8FAB47235A51CF6C12A3CC6B7B1F37F5BD55B83AEA14034

87C6B347A870F8036F57ED14E02382A9B5870CAB82B9A8F6714425D76B352A27

48907A4A985E23CCE50B97D6458B0190C84B801314A1A00944BDD2C66C42EF78

4F2332A91CD9E90AD99B90FB4F5D270CC32221820EE05E7E065F6254A9F49057

89F3B8A2A09CF9B14941859299EC4BAA9B4B5D96C9AE103490106CE5EBE0558D

2A0C5EF7897D597AE945881A020178DF88A1F63B9A7F5749978A19C055C61164

0C793B008BCDFF36AB34E048D452B712AAD28077AC5968C1B69D596D2B3806CB

8A9916062723F9D5BD43149139ADEC44E5E89CEDAA0377F69CA33B9759C2CE1C

3FC6B883DF939E457480C8DEDABB35806E42EF26B6B0ED4383DE3D74B3D746DD

D00D49C8EBF0A6652F9B13150A96ECE8838E75F4D1112421CC327FCF79EF422A

DD8AEF7AC64316EE0F2F6CEF56F2C8494A862AAFB5C545AE4D83F8DB042E7770

52F93AB726CE0B823394A22ED0B3379482E96F9C90A64C349173226EBBF4D9D0

6C3D205DE96D299BBC31780906AAEEBD7D3B1702D8B3924F7BCDF168D132BF4C

F5A1880C72CC23D5D90DF01BB07DE8839E0A9EFFD9AE64BDD5444D50E6E2451C

42649A6B0DCD9CF4ABBB3B9CB0465728FEBEC98EE1DDFC840B3EDC41DC49714F

76D2D4AD4E92CB2498FF6BC40863FB2A51A3E5D92BA7F023E595F54155BE3501

559E2412BAF8D1145CF5D50BF972D9D39340E935A7912CF31EB3362BB226D477

A95FE2733C29427C49F2315347235B5B63ECAB17E55E5E78DEEFD339437CD5D3

7F1E2F9EDC6219FE4C8B79665654F1C541BCA64DBEAC4E0CF6D7960D25D9C5C6

C3A83FA3A95397EB32C17A0D370DDF841BF0AACE574AB95B4D4BD13DC93F92F5

186D9D693B3CF21FC0AE8AC128CBF505D21753692D4D56B64C0CAE92DEE58B38

1272C1C610E19F18975C46BD2032DE17BB733F8D4C14CD779BE0CBCE441017D1

9089521DF299E2D347C74D22E5627D7C1184D2007C23A68726DCD75C4F9D3A90

D3543492D836B47DE2F2DEE582784A756EADBDA009DDB2C8EEDD4397340144D6

DE09FFAB597F8E74A95142356568C36170AC576D90DBFC95A803DEB787AA2627

E5F4118A1FD1E23A566168BA9428177DD9AF7BF7448550E653DAF214C7E26D0E

F8A35D67F7B4C88BCF80E214CCB3DDAC500F770937EFDED41EDAE04AC523C6DE

6D34B29F5BF480CE5FBF16E6D42FBD1923E90B37E1AA50D1FEF0603CEE6356D7

821C343C42526EE2CDEE8B0C572E717F121C29D5CA45EACB9EC293ECF0D13C34

306BD4E1FA566ED1040D5AE89947EEFA9121BF4F7E71B466DBEA1FDC7DA24F2E

1F7BC63389583687AF8D3FE1D0B8E79B4BD6EA99133141BFFF3015CA97F6BC42

926639AB0C23CC04029CB7514E97FD9C33A8D6DC50F904B2CD43BB91117A1AC7

BCC9A6F9897C1CFE2B7DA2C1E06C7FAB265A4F86BF92B875FC69791F1AA74A3D

8883E0C5EB7D6EF2E19FDEE63E67CB80F482B6AD3FA0F00A7B42BE8889ECBEA8

64D79CB9C31823C41E77FC401341339050944D7463AE34D5A13A20E11A5F2400

37DA6C7A15CC7C21FEF312FB742FAA4D0A7B7D87999E6BD21EDFB185AB09207B

25AC54CD36403BEF3BA0552DE8F7F1CAD140C8327636634943C60E4199E417BF

8A6FCB745A07B484A2B0BEE550C4828B5157E0A4F40B67A98ADBDA8B21A45909

D7AA6EF52972E6BAE7F3DFA432FB6EA12889899EECAC223F6E11692310EF59EB

105341CADE92F4D8EF95EF042D33A18FFB22D46DE27F89EB273E098B7E0AC4D2

AC4FCF74225E6E9A6F6B3CB2B9FF1F97F4140B310E02049CAE392373D5B03CCD

C00489C4493D3FB62ADA16A62F7B4519ED2C9FAD29557B6980E5DD0821A81A11

2B60591CC10BF67D29BC7826F3082C3D36939C8DD26B053D9ABBBA351A00D89E

C684133984EAEAA33C6FDD99229ACDC6972CB8F8B29E949732766E0C8B80346A

D7E3B426FF64981FB86C85276671BECD88D08FCE30F3AEF6B0B4A897216E4672

092EF65FF2EE3E14F972503805712540029088A77FDE93BD32887D80C1677BDD

03ED24C7A7DB72A6921BD56FA1232F7DFAE46579DD11F88B7EFD0ACDC1912170

840806652BBE0CF48830971D9CDD5EDA6139482F8F2113E69739FE03E3EB7B40

E49C35CABEE2B4091D2CC00FA2DC221F4D0C58DC87841743E6D4533BFEC8A821

7AEC889671BF0F69E662B05BB7F80CB0

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/ZJMUMW+ArialMT~3d findfont /Encoding get

dup 0 /.notdef put

pop

end

/ZJMUMW+ArialMT~3d findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 45 /hyphen put

dup 47 /slash put

dup 59 /semicolon put

dup 62 /greater put

dup 73 /I put

dup 77 /M put

dup 79 /O put

dup 82 /R put

dup 83 /S put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 123 /braceleft put

dup 125 /braceright put

pop

%%EndResource

[/N35/ZJMUMW+ArialMT~3d -1 TZ

%%BeginResource: font HCLPKB+ArialMT~37

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /HCLPKB+ArialMT~37 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1

B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1

756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42453A43F319A023AA37C

F4C2DBD26BEF155A2AE1A880A254FA8518170FE7B76A5120CBB49ADCA57CF20A

5502FF35F5488673A03F11BF1E2CDAD7A1AACCCF7C7B8C675A403D9FD5A91866

C8734B5BF8B99A08AABB8F8BE438653FFD4546A739EDE655ADC8879321A48918

747722A92947A50FFE4166290F65482F2E1F537BD1FF45615BC89138EFBB97B5

18206D6A14E8BA71991D8108E7FD66A5AA3187AA0E3ED0D01111C2658D4401E5

7CF7C0CEB595C755F2288DC8B956839AB45B82A9FA6FC65E12F789DC971375C5

59E78953B748AAF161932139ABF91185E985FD840D0E94BB747D02F2D869B2B9

7679D51D6FC355BE7639CF23DA069EB6972666AC0910F99A6213751D65A79D78

53808C86826FBB367C74E196FD5A8F8ACF13FB23F581F788E2961D2795

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/HCLPKB+ArialMT~37 findfont /Encoding get

dup 0 /.notdef put

pop

end

/HCLPKB+ArialMT~37 findfont /Encoding get

dup 0 /.notdef put

dup 108 /l put

dup 112 /p put

pop

%%EndResource

[/N30/HCLPKB+ArialMT~37 -1 TZ

%%BeginResource: font MMCJHH+ArialMT~34

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /MMCJHH+ArialMT~34 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A367D85BFE7DCF51A4B1428D17CCFBB38855B20F264AED104C7F38

0432D121C51BCA5B423A43BE147BE85241E84318442F2F0386B31CBCF75E8A7F

E1CA92CAED009304155349E29FFF3AF4467E81183A43F1761371EFE7737293B8

358D800562B41E3621FDD577A69DECCD8D0530A8DF883DFD5D67645B9BEC58D3

502AF80CD62D1D9FD8CE8A1247ED876FAFD508DE5585EC27F7E12FB08A7E7B54

7927081BEC6D2D40DF6A5C5F4EC8157CA160480C1335517C6D996921616AB728

62B9120577C3B434E4F8D9D12D32C45B3EB2529D380566BF6B104F36CB5C2044

629CCCB40C98D5A293B50825C29AEBD6B3811270B24D5545C4EFF656E0B04F07

7888E86FEC1C5D2C17633DC251D04B1108A681D971B0E499860873AD0824A075

CEEEA405C6AD57F3CD6B70CEE8A2883DEFF36FBDA1C30491A54424A4F4BBE58E

49487DE6042DB85A5A460EEBFDD0CA09A5FAB3EB284F3BDF09B4DD5B6F9A1014

C8CBB593BFFC0EC32FD35E731EA7D45878BC90EC90223B8B26026ABF5C0660C5

65824FC595F60775A5F5283B91C1A53A42624A63CCF36F92112C7394A37D59CA

F70BB7023E0CDE5857C62A104B20E5CD9961DF84AA5470800CD224C2BDE69A48

4D3A51CF1B2C8A47CD84D0DE91BF0B7A2F14D106D15CA95AD2C7B55AF66C1BD2

0A378FAA84A369135296C0AC81CA4FBC98A3179B748D7517418B14A52C138997

D09F7FE4FA0E079836C72BF9E4D5D0A352E7267049FE9956D7EF7B7E8BBF8BD8

E4A3FFE12AEF054D8CEFDC0DB6EB732BF81CD9D7D46C937E5FE28E03526E731A

22C444CDC18BD7E7CE950EF1314846288FF371D289E8DDF3A5C9ED328811516A

21019740849CA9C5404CEE3F03F530FBE0981E2F48E6D7AE998A3467D3E2B630

31818C37C24FF6C70323A35090C6C2940952F35ADCACADFE59CA8E964019E251

03EE3957A63256B87854847C1B7A557EBC6A29F469E75156646647E28E6D439B

092A6B0A084C1AFB4F658713954CC7B063C9C78100C87441EC7B651FE7AF9B4C

309A1D7993BA383BDDF41BEA7D233C6CECE1316FF277B1A1315D9608AD5D5D4E

AE521F6B548DF8073BC2C934E7A77F8A5FBF79AFCE6044CE7E4BA3785AB9E70F

CEB938955F8DBC72F66C92EAAAB284EF3C75CF6B91B9AE809ECF5CBD3F52800D

C9E155E147DE889B57BC2DA0C3FD3E58AAB00A81BE3340B48C9720B527F48774

E5C3520217C9B8C60A46E56AA2CB940A6CC0A108850E5CC61542F5903E4690E4

22642811DB0402900ADAEB14507B6C15979156DA031E7BC192E22AF79086D405

36251C43A35299C9D14D5CF81343F92371D4140B53965767CD8B06C820573CA3

3554234A2D01DCA5948CE41084019EFE6B4CDC1FFD09A527FD345A3E7A3C6A2B

49

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/MMCJHH+ArialMT~34 findfont /Encoding get

dup 0 /.notdef put

pop

end

/MMCJHH+ArialMT~34 findfont /Encoding get

dup 0 /.notdef put

dup 97 /a put

dup 109 /m put

dup 115 /s put

dup 116 /t put

pop

%%EndResource

[/N31/MMCJHH+ArialMT~34 -1 TZ

%%BeginResource: font XSJKPF+ArialMT~31

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /XSJKPF+ArialMT~31 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545458FF8936FE9391A64

D5A8A1448880D50715145534E59E9430613005EEE7550C409CE0503BF1650BE2

AC03F7B38C2F3285304B4579EFA5B3CBAED6250C9F4DAAB3FA6B1299E9AEEA4D

89055CD9A2356AA207C739E3FCE13B5376C7FC9655A96F77B53B5395FB2D1D5C

A6E537CCB83F391C30C5C1E35A28DC8E05B1CAE62C372B995DFDC8D9352128B8

0332D44F401A72524C8529754BC7EB888F7DD93AE1BA8F7CFDBCA8CAC8D46E33

C3E360213B048E8C336A64593C0DB302F64BCD36B9D4202D62559E89CF92116A

9E4AD7B511A3B3A99802350257C4FB11BA65A93DE9F2DBDD14B2EFBC02FFE11C

BE40569379BB56F037476787964F569781CBDE85B006DBDBE83F4C751FE1C84E

C59FB946A9DFF2F34F66E93DC0F2A4B50973BD4E8D4F8EE8C58587576EAE51AA

6E05B48F6193A0C0207A91C0DDC6A66A271A15B0FBFB1C5E2A16C33223C49DF4

DCA79D03F41A25C0008ECA85745010FB9369D716CA1183878B7B056B67A1BFEA

A16CB0E0DD34FF661D09A734DEA1EDA628A258425BDE9EFFFB47A6188FA620D9

90E61FC284890A03B53F3B93B1001E2AD219890A32A288E56A2D1F8630179D1C

BDE8DDA5D1A0A6FEE9B2CA73C1B46049A28CA22B01F593F62F1F37DFDD2E98BC

7F5DEE60B7758E6FBC084657A4F4F9B6FD1D2FC5529454B74E410DD11BA015A5

F46B45AF40754189BCDC6E97F56FD759E085B5051A7252F6188DC15907A180DA

FC336FA0407579581ABDDD82F170F156058D16BE7E00D8C20971C98CBFC4D9DC

1638C7E38683846D351E56D7F5AC39DF7EEA520D08C9636F7279835087EC393F

C8959A3A91DFCB8426BBA2FE13D9DFC5A15C285D52A2B30F55A256522BEB5A5E

B2A17654E0A187C375F3704CF3BF62FBBB6EF10E90752DC77005FE35B9781DC4

419D8D436789EAA572C4C4B6DEEBB2DC731238A56CC448F095B8CB6159B9AD80

EE7A7E28E479715C42C9C98933215B1BB6599DD1C0B8ABC83DEDDA0C4ECABA6C

404BBA756A7EEC6AC8053FD25FFF91671FF50AFD4F92A1C9143A20B54D05621E

392D86DA33F7F91757F5FFFA4CA1357BB5

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/XSJKPF+ArialMT~31 findfont /Encoding get

dup 0 /.notdef put

pop

end

/XSJKPF+ArialMT~31 findfont /Encoding get

dup 0 /.notdef put

dup 101 /e put

dup 105 /i put

dup 106 /j put

dup 110 /n put

dup 111 /o put

dup 114 /r put

pop

%%EndResource

[/N22/XSJKPF+ArialMT~31 -1 TZ

%%BeginResource: font EJJJJY+ArialMT~2b

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /EJJJJY+ArialMT~2b def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D06BB445313C1AE65B5

055AA6C2F10ACF37CD93A18D299BC54BAC72233B536005468912FE2EDF704209

3AD85F2CCA921758866AA49E3391AEAB38B488FAB48502A5D59AA8E116A63C5C

E16B261FC70D20F99994A05A9E4F68E13797C960FE85CE505538DC81E566874A

DD22D8AB5A0B41F9133B0C14297F848195D257DAEEF3AAA7C690A83288BD36AB

BA90578795D7A69444A6349248FF73BACC549CBE9624844EF53A411F846B483B

8F9C2F7CEFD97134C14818AD0F56951B266C90AF15360BEB94E9FA1335EDD738

BFFC1FA4EA624DFE346C68137FF7231A277C1F682A1BA7BB409963FD73F7FA59

9E159AD9D118B4A0C2049390DC206A6029129B53C03137C52BEEDE577B724C9B

08BC47F19CA319547465D2C2CCA901B156A8A2D4FCD1061374CC93E9D8149F84

3262CC1BD8296C5F80F3855D36805393862268ED0A0FCDF216A33D4D6F20F41E

7B7769246455A14737859F61DECE8FE760FCF7184E2312FC210532A79DDF0232

7B2A275E043BB90EC83CA9947BE41882A69361905CEF78666AA2A11E487E739C

254598C6CC7416F1010540F1533262B5FFF2F2B7AE592EF6E9A7E369FE560BF4

9EB4664C976372B5A91FE8C0C2D8F3DB27D6707DA400F934A9E5BAB9CD83C1

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/EJJJJY+ArialMT~2b findfont /Encoding get

dup 0 /.notdef put

pop

end

/EJJJJY+ArialMT~2b findfont /Encoding get

dup 0 /.notdef put

dup 106 /j put

dup 110 /n put

dup 111 /o put

pop

%%EndResource

[/N25/EJJJJY+ArialMT~2b -1 TZ

%%BeginResource: font UKEUSF+ArialMT~28

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /UKEUSF+ArialMT~28 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1

B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1

756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42442EF75F21F39891C8B

A70C0530EDA7B6EE6158617516D4BD56DA39F92E5D3910BFD5E78B2873E2A362

3C5D0B72D7F91C0BF8ED3A4BEDDEB61B4803889554E9F574B27F18D6F6043CED

187AB1E1FB29E62C0BDBB27C95B28F01513D918C23D0898A86125A8833E01E95

90D7B7A8E66A3DDE45E4BA8946929A0301895EEB31A1451BC8C529D8A7C1F218

41C4EC16177C67F72529C8773B7ABA6A9D252D50BEA83F17BAB783DF30B61E5F

4D95AAE12D93C10172975BABD5DEFC456EABF928E66D8E67989A1214133FADEC

FC8CA966567DB6FABA54C6A15117808BF88D6437944511BA4D1D8A1FF025165D

10C59E3BB0DC4C7445238CFF643D10CD8E0DC2ECE931F902E67289B101B23BE4

3BF42448455214E6548D72735128C4F70843AE421C2F1F7C6E19D132902F94FA

B732D2E97DB8EBD6D50B1B5D6AC6F2B2C471E6A4C609D2605E27F4137163468E

443559DFC474EB21C75B28F2D092E0A4D0DE9D2370FE1845434303BAA9E51F0A

6448239471F42272931D0BE8816DACA5456D0D3D188C498EEA0FA232CE25344E

A7B05B17038A0898CADE06699C5448D8C5EF0F83F78D0244B7D873EF7036DFE8

96F74DF438EC0433FDA9B74F58152C491525CF57F960E366FA9B5E63A6914774

2B4DBB41D65CC5F0A329384537BD9CA65B60D1A5928594A31DD7CB747E831C05

4095F937EBE5DFD79515C455B4298EB94A61F2D6EA299FDC30C175511BBCD7A2

6A44F7450DD1B1F22A2D6060E34D490187

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/UKEUSF+ArialMT~28 findfont /Encoding get

dup 0 /.notdef put

pop

end

/UKEUSF+ArialMT~28 findfont /Encoding get

dup 0 /.notdef put

dup 97 /a put

dup 109 /m put

pop

%%EndResource

[/N15/UKEUSF+ArialMT~28 -1 TZ

%%BeginResource: font ZCXVXN+ArialMT~25

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /ZCXVXN+ArialMT~25 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69AE06434ED40772B6ED119BDFC5AB0F936AB651C8D4814E518C158C

7718948C0ABBBA27C52DC58DC45A8973C9D632CD4EE579DEFF0C423553562E82

3403D332EA07F8778AE77033ABB687FB865B70DEC32AFE39DCC06FABC17D9F43

D753287663EBA22D0DAC42A026E48F70E11DE02158E802FD7C03B8B9C6857C8A

1303E6C9967D0EF4B0314CF24F523A8613CDF2FD64C9B184667B1B3875DFFFEE

EC92480310DC697A16D5213FA2BC675D76882B0E99F3558B48AF0555B5BC5E42

08A62047312393248CE0DDA42A7D909EE72024D667B07BF05228DA08931AA36B

C3F0CA2C04401ED41D4F303251A65F174785D613878BD5B21E78EF3D8251366E

8D6451F4F0642D015A327B08DEB0D437AB9E8D779E1F370DBA5F713090C4DCCF

2AB7BEE450463F5DA2AF0AACAD2043F404EB970E9E664D61A6D488C615EE95F8

8EECF31C773E465FBB0D4664D3A5ED7B301A8F71C04F973AAC25F779B2759A5D

EEF87A7B341F5E839E65A9B9649FE77663BC1C7CF630A27C4FB14D42C15CE1C5

AD1AEA2332136D745768F95BFED8AF6FB40C4CF2208FA3975360510F90A993A3

62696388803B0CD8FC5C05961CA8138C6A833CD3F5052D3B1F8A99CEEA41D869

D7F96C5CCB9E44CDA3634D26E3B344F1A360810FD4DD3E26214E14CAE4AF2CDF

B52D721394BA2F6CBA09B5A83DC682A7582FFE2AFEC0411FB3BEDDE2393F96EA

717D12FCD7B0418DEDDFE8AD772D723986A2D441804FE584BEF0FDBCC6CCC0B7

73C003A248714158C821F3A68D84742546DF0E898FFDF8C2FADEDC10AA3FD3E7

0CA76EB7EB516D0CE4DF7CC748686723BA2A93D24405B4BC46809C722319FDCC

86E267D47526082EE1FA6F2655E1A1D73038518FC88DC26D97496EBF28C7C4A3

9924B65AB7E2597B7D87E02006FB9C16355E672F49AA82003EA63ABF2A4119E1

EF7F2BD6092D85DDEB66DFA985EA5681F41D94451E6BA8DDAF86FB58F6D31936

8CE8A1555345631B843C298CEF712B2CF2C9FECC5CBD3C4DA21A18B64204042A

89025302C560AEB8B86FFB921C48F61AACD908A82053A9393508BFB1D2380282

74CB0CFCB0D05A228B155AA7C5E32F81197D3D9AED2352B76A4C18297D1DFBFF

C8D2CBDABBD14ED268E39499CB546469ADB9FCB86C3B243B96317E42C7D6110A

D960FCC279C401E7C882D15AD9D6DF451FB17061E0A5A715EC682FDE6B655ACB

2A0617DEFCC4A8C666313ADB0D0EFE48807C5316135E0E073392E36E98281F94

7A1B40CD4BAE404E52BBF7C0D29E5DB983B8342EEFCB1713D2F06C50E2042A21

DFEC8FC5D0EF1F2C43A22E80B81B6965A679A050461F0DEFCA41702F42F823F3

FCEEEA125259A4B861723458811FD12703E55174DFB1E00AE6AB9E6962098D47

ADA41ABE730CB5F014522D7AE9CE8483B1134C6C735DAC1528FE1F7FE1A5241B

56489DF0B20F281006429AF012560157B91EA8F657C17D9F0886FAD0225254

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/ZCXVXN+ArialMT~25 findfont /Encoding get

dup 0 /.notdef put

pop

end

/ZCXVXN+ArialMT~25 findfont /Encoding get

dup 0 /.notdef put

dup 101 /e put

dup 105 /i put

dup 108 /l put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

pop

%%EndResource

[/N10/ZCXVXN+ArialMT~25 -1 TZ

%%BeginResource: font JZYFAL+ArialMT

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /JZYFAL+ArialMT def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C25454ED15E53C2441C7231

1EF68C9867B0ACDDBFA3E2DD56A038DD3C8AE91DB0346212B7222BA5DA1FB9C8

FF5798B34471E9A6032BEA5FAED9106462D5864132BEC9E58895050FFF88FA46

C6A0DCE4F54F27C00FADD7FB86F5A0BAB252841FE8860F278CF57A56C83AE01E

682DE23E2530839CBCD0AE1726D33386D1676CB0077AC9A14F7BB546D1415AFF

5A47F9BDB61F4BA3D9E41F64C6FF2F38A048290DDABEA363458B780F0131F662

A4138AED0DAF7350358C98B600EE7209D28A6D9CEB550D01647EF6DEB82F150D

B27D7E9E80721EA69A8DB573A3CFAE4BE135A0D6EFE01D2102525BFE4FFE835E

7C1AAE631CB155E9023050408D7C50FDE32B5BDF51D7B336045F8E98BF5AC5E4

3EEC3903963418DED2780B0B73AB743BB148EBCB1EE6FA5DD63E400E2B6D648F

4BC175BE360B324868807600753727F50A25D6D15738BA7064658973F10DB372

49ABDEE0FC2B3827952F46306843D68D5E5DE8FC4A57242D756D06CFE1DF22A3

B706249CB0BCF18CEF4A17464FCA0AFBFCEB0052E655E42B7FAC1B11838730C3

627D4EA20259513732468D99F027FC9AE569D7AEFE18DD3DD92A7CA229E481CB

E759125FE87D308DDFC34BCB3490819DB2788DDD5BF20672F2EF0AB044D85C0D

E8A2FF135B2854E3635DA5E212DE2EEE9242E9FBFE9604A85C8477C390A2C275

A83CE1A180F6125CCEB7763CBF72603D5CC24D6A31B6FDF9C2B31D3A2CF755F9

A6BF5A5C8FA28FCE19ABD07D27BD7ADB476B90CB79FA00D1F53702D92ED17DD5

69D2D4808DAC05CF1433983058C7152F1441D77F7AFE2D7FFD9B914BDC7690C0

DFBD0D38C052FACD4969E9DB47AA717DD78E1AA110A028240880F601E8CAA9E5

600E1DE6FBBD26752370E97EFB67FFE04BE8B3E4CAC83B78857472F51EA3E7A4

80B7FC4687057F713EAB1B4C536ED0C0918D5ED4F0FCB11F8F505F9799915D7C

81F2EE0130722D8FCB7E0B8A7EF94542471475705635635C75A05C2C73848264

1D72DEBDEA70C283547071074BA3CBDC3056CF0F9916464EA359F51ED8F7B951

F1A661B6EB3D0434E765DA44EEA2ED67DB4287AA4368A96F214ED2CA94AC9815

82E9DB02DBFD3C307269B158521E7F3389C26FE1D70401B6BA3683CCEF780F16

E841456F69B6D777E81BDF100F709489C21B1BCD54CB6E8CB19F5BB0B4832B64

9D993C9331904BB09C2FE1D8CDC0A4D9D2E41140E959CB5B848871A4818AB81C

8FD2A5CF8EA076D9566AB4150E5E2C033238F78F78D22A4133C7093FC96DD57E

C11B959538125BC06023CD18A46DE510E9994BFE48336968C298C2BDA2923913

3BF7E5CA9F5F7E8ACC5324CE8261FCFCCBD5917E6FA417441192A485895C45C5

843A9E984EAE0B2CF70BB797602876B5F8ECBA62344F154A0472D8B5D7F57377

EE95779533CBA56671A81E40E637993B85A22DC9633EBF6AD4480C985675FA95

C95E8C917CB4494E4980E19B7E802F34B355FEBBB2AE46BA2CAE712873D78264

23DC6EDC5AE5760D330A788E094EAB06B957B52A339236BB0230CBCAED587FEA

90D0204AEE120070CA8B8EB56A14DEE9B9B6FF01F6DB6222086C76337883DB76

3A811FE7EAE5EEB76A6ABDBD510E7215B0D18E6D78B21EA59BDA7CB53199B8A4



0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/JZYFAL+ArialMT findfont /Encoding get

dup 0 /.notdef put

pop

end

/JZYFAL+ArialMT findfont /Encoding get

dup 0 /.notdef put

dup 97 /a put

dup 101 /e put

dup 109 /m put

dup 114 /r put

dup 115 /s put

dup 116 /t put

pop

%%EndResource

[/N9/JZYFAL+ArialMT -1 TZ

70.776 618.485 226.483 113.035 re

W

n

q

0.100006 0 0 0.100006 0 0 cm

n

798 7298.59 m

798 6475.2 l

1129 6475.2 l

1129 7298.59 l

W

n

2.10831 w

4 M

n

1127.95 7134.85 m

1127.95 7120.87 1121.68 7109.55 1113.95 7109.55 c

813.048 7109.55 l

805.321 7109.55 799.054 7120.87 799.054 7134.85 c

799.054 7208.64 l

799.054 7222.61 805.321 7233.94 813.048 7233.94 c

1113.95 7233.94 l

1121.68 7233.94 1127.95 7222.61 1127.95 7208.64 c

1127.95 7134.85 l

h

0 setgray

S

9.9994 0 0 9.9994 0 0 cm

85.7903 715.22 m

/N9 6.98335 Tf

(stream) show

0.100006 0 0 0.100006 0 0 cm

n

963.5 7110.95 m

963.5 7064.57 l

f

n

963.5 7058.21 m

962.388 7061.2 960.494 7064.92 958.488 7067.22 c

963.5 7065.4 l

968.511 7067.22 l

966.506 7064.92 964.609 7061.2 963.5 7058.21 c

f

6.3248 w

n

963.5 7110.95 m

963.5 7064.57 l

S

n

963.5 7045.48 m

960.168 7054.46 954.482 7065.61 948.463 7072.51 c

963.5 7067.07 l

978.538 7072.51 l

972.517 7065.61 966.831 7054.46 963.5 7045.48 c

f

n

963.5 6919.1 m

963.5 6872.72 l

f

n

963.5 6866.35 m

962.388 6869.35 960.494 6873.06 958.488 6875.36 c

963.5 6873.55 l

968.511 6875.36 l

966.506 6873.06 964.609 6869.35 963.5 6866.35 c

f

n

963.5 6919.1 m

963.5 6872.72 l

S

n

963.5 6853.63 m

960.168 6862.61 954.482 6873.75 948.463 6880.66 c

963.5 6875.22 l

978.538 6880.66 l

972.517 6873.75 966.831 6862.61 963.5 6853.63 c

f

n

963.5 6731.46 m

963.5 6685.08 l

f

n

963.5 6678.72 m

962.388 6681.71 960.494 6685.43 958.488 6687.73 c

963.5 6685.91 l

968.511 6687.73 l

966.506 6685.43 964.609 6681.71 963.5 6678.72 c

f

n

963.5 6731.46 m

963.5 6685.08 l

S

n

963.5 6665.99 m

960.168 6674.97 954.482 6686.12 948.463 6693.02 c

963.5 6687.58 l

978.538 6693.02 l

972.517 6686.12 966.831 6674.97 963.5 6665.99 c

f

n

963.5 7298.59 m

963.5 7252.21 l

f

n

963.5 7245.84 m

962.388 7248.84 960.494 7252.55 958.488 7254.85 c

963.5 7253.04 l

968.511 7254.85 l

966.506 7252.55 964.609 7248.84 963.5 7245.84 c

f

n

963.5 7298.59 m

963.5 7252.21 l

S

n

963.5 7233.12 m

960.168 7242.1 954.482 7253.24 948.463 7260.15 c

963.5 7254.71 l

978.538 7260.15 l

972.517 7253.24 966.831 7242.1 963.5 7233.12 c

f

2.10831 w

n

1127.95 6944.29 m

1127.95 6930.32 1121.68 6918.99 1113.95 6918.99 c

813.048 6918.99 l

805.321 6918.99 799.054 6930.32 799.054 6944.29 c

799.054 7018.08 l

799.054 7032.05 805.321 7043.38 813.048 7043.38 c

1113.95 7043.38 l

1121.68 7043.38 1127.95 7032.05 1127.95 7018.08 c

1127.95 6944.29 l

h

S

9.9994 0 0 9.9994 0 0 cm

85.7905 696.253 m

(stream) show

0.100006 0 0 0.100006 0 0 cm

n

1127.95 6758.4 m

1127.95 6744.42 1121.68 6733.1 1113.95 6733.1 c

813.048 6733.1 l

805.321 6733.1 799.054 6744.42 799.054 6758.4 c

799.054 6832.19 l

799.054 6846.16 805.321 6857.49 813.048 6857.49 c

1113.95 6857.49 l

1121.68 6857.49 1127.95 6846.16 1127.95 6832.19 c

1127.95 6758.4 l

h

S

9.9994 0 0 9.9994 0 0 cm

85.7906 677.286 m

(stream) show

0.100006 0 0 0.100006 0 0 cm

n

963.5 6540.67 m

963.5 6494.28 l

f

n

963.5 6487.92 m

962.388 6490.92 960.494 6494.63 958.488 6496.93 c

963.5 6495.12 l

968.511 6496.93 l

966.506 6494.63 964.609 6490.92 963.5 6487.92 c

f

6.3248 w

n

963.5 6540.67 m

963.5 6494.28 l

S

n

963.5 6475.2 m

960.168 6484.18 954.482 6495.32 948.463 6502.23 c

963.5 6496.79 l

978.538 6502.23 l

972.517 6495.32 966.831 6484.18 963.5 6475.2 c

f

2.10831 w

n

1127.95 6565.86 m

1127.95 6551.89 1121.68 6540.57 1113.95 6540.57 c

813.048 6540.57 l

805.321 6540.57 799.054 6551.89 799.054 6565.86 c

799.054 6639.65 l

799.054 6653.63 805.321 6664.95 813.048 6664.95 c

1113.95 6664.95 l

1121.68 6664.95 1127.95 6653.63 1127.95 6639.65 c

1127.95 6565.86 l

h

S

9.9994 0 0 9.9994 0 0 cm

85.7907 658.32 m

(stream) show

Q

q

0.100006 0 0 0.100006 0 0 cm

n

1207.2 7325.09 m

1207.2 6450 l

2142.67 6450 l

2142.67 7325.09 l

W

n

9.9994 0 0 9.9994 0 0 cm

0 setgray

157.068 717.664 m

/N10 7.04625 Tf

(splitter) show

0.100006 0 0 0.100006 0 0 cm

2.1273 w

4 M

n

1811.21 7161.09 m

1811.21 7147 1806.11 7135.57 1799.81 7135.57 c

1554.58 7135.57 l

1548.28 7135.57 1543.18 7147 1543.18 7161.09 c

1543.18 7235.55 l

1543.18 7249.65 1548.28 7261.08 1554.58 7261.08 c

1799.81 7261.08 l

1806.11 7261.08 1811.21 7249.65 1811.21 7235.55 c

1811.21 7161.09 l

h

S

n

1677.29 7134.41 m

1357.58 6949.8 l

f

n

1352.02 6946.59 m

1354.08 6949.07 1356.37 6952.6 1357.37 6955.52 c

1358.31 6950.22 l

1362.42 6946.76 l

1359.4 6947.35 1355.2 6947.13 1352.02 6946.59 c

f

6.38181 w

n

1677.29 7134.41 m

1357.58 6949.8 l

S

n

1340.9 6940.17 m

1347.07 6947.61 1353.94 6958.2 1356.93 6966.95 c

1359.77 6951.06 l

1372.11 6940.67 l

1363.04 6942.44 1350.43 6941.79 1340.9 6940.17 c

f

n

1674.93 7131.07 m

1570.37 6947.78 l

f

n

1567.19 6942.21 m

1567.72 6945.38 1567.91 6949.59 1567.3 6952.61 c

1570.79 6948.51 l

1576.09 6947.6 l

1573.18 6946.58 1569.66 6944.27 1567.19 6942.21 c

f

n

1674.93 7131.07 m

1570.37 6947.78 l

S

n

1560.83 6931.05 m

1562.4 6940.59 1562.99 6953.2 1561.17 6962.26 c

1571.63 6949.98 l

1587.52 6947.22 l

1578.8 6944.18 1568.24 6937.26 1560.83 6931.05 c

f

n

1671.48 6516.06 m

1671.48 6469.26 l

f

n

1671.48 6462.84 m

1670.35 6465.86 1668.44 6469.61 1666.42 6471.93 c

1671.48 6470.1 l

1676.53 6471.93 l

1674.51 6469.61 1672.6 6465.86 1671.48 6462.84 c

f

n

1671.48 6516.06 m

1671.48 6469.26 l

S

n

1671.48 6450 m

1668.11 6459.06 1662.38 6470.3 1656.3 6477.27 c

1671.48 6471.78 l

1686.65 6477.27 l

1680.58 6470.3 1674.84 6459.06 1671.48 6450 c

f

n

1675.2 7325.09 m

1675.2 7278.29 l

f

n

1675.2 7271.87 m

1674.08 7274.9 1672.17 7278.64 1670.14 7280.97 c

1675.2 7279.14 l

1680.25 7280.97 l

1678.23 7278.64 1676.32 7274.9 1675.2 7271.87 c

f

n

1675.2 7325.09 m

1675.2 7278.29 l

S

n

1675.2 7259.04 m

1671.84 7268.1 1666.1 7279.34 1660.03 7286.31 c

1675.2 7280.82 l

1690.37 7286.31 l

1684.3 7279.34 1678.56 7268.1 1675.2 7259.04 c

f

9.9994 0 0 9.9994 0 0 cm

123.044 685.855 m

(stre) show

134.79 685.855 m

/N15 7.04625 Tf

(am) show

0.100006 0 0 0.100006 0 0 cm

2.1273 w

n

1476.3 6838.76 m

1476.3 6824.66 1471.19 6813.24 1464.89 6813.24 c

1219.67 6813.24 l

1213.37 6813.24 1208.26 6824.66 1208.26 6838.76 c

1208.26 6913.22 l

1208.26 6927.32 1213.37 6938.75 1219.67 6938.75 c

1464.89 6938.75 l

1471.19 6938.75 1476.3 6927.32 1476.3 6913.22 c

1476.3 6838.76 l

h

S

n

1675.25 7133.16 m

1994.96 6948.55 l

f

n

2000.52 6945.34 m

1997.34 6945.88 1993.14 6946.1 1990.12 6945.51 c

1994.23 6948.97 l

1995.18 6954.26 l

1996.18 6951.35 1998.46 6947.82 2000.52 6945.34 c

f

6.38181 w

n

1675.25 7133.16 m

1994.96 6948.55 l

S

n

2011.64 6938.92 m

2002.11 6940.54 1989.5 6941.19 1980.43 6939.42 c

1992.77 6949.81 l

1995.61 6965.7 l

1998.6 6956.95 2005.47 6946.36 2011.64 6938.92 c

f

n

1674.5 7132.35 m

1779.06 6949.06 l

f

n

1782.24 6943.49 m

1779.77 6945.56 1776.26 6947.86 1773.35 6948.88 c

1778.64 6949.79 l

1782.13 6953.89 l

1781.53 6950.87 1781.72 6946.66 1782.24 6943.49 c

f

n

1674.5 7132.35 m

1779.06 6949.06 l

S

n

1788.6 6932.34 m

1781.2 6938.54 1770.64 6945.46 1761.91 6948.51 c

1777.81 6951.26 l

1788.27 6963.54 l

1786.45 6954.48 1787.03 6941.87 1788.6 6932.34 c

f

n

1604.04 6887.87 m

1604.04 6884.34 1601.18 6881.49 1597.66 6881.49 c

1594.14 6881.49 1591.28 6884.34 1591.28 6887.87 c

1591.28 6891.39 1594.14 6894.25 1597.66 6894.25 c

1601.18 6894.25 1604.04 6891.39 1604.04 6887.87 c

f

n

1550.21 6887.5 m

1550.01 6883.98 1546.99 6881.29 1543.47 6881.5 c

1539.95 6881.7 1537.27 6884.72 1537.47 6888.24 c

1537.67 6891.76 1540.69 6894.44 1544.21 6894.24 c

1547.73 6894.03 1550.41 6891.02 1550.21 6887.5 c

f

n

1819.32 6887.87 m

1819.32 6884.34 1816.46 6881.49 1812.94 6881.49 c

1809.42 6881.49 1806.56 6884.34 1806.56 6887.87 c

1806.56 6891.39 1809.42 6894.25 1812.94 6894.25 c

1816.46 6894.25 1819.32 6891.39 1819.32 6887.87 c

f

n

1765.5 6887.87 m

1765.5 6884.34 1762.64 6881.49 1759.12 6881.49 c

1755.6 6881.49 1752.74 6884.34 1752.74 6887.87 c

1752.74 6891.39 1755.6 6894.25 1759.12 6894.25 c

1762.64 6894.25 1765.5 6891.39 1765.5 6887.87 c

f

n

1711.68 6887.87 m

1711.68 6884.34 1708.82 6881.49 1705.3 6881.49 c

1701.78 6881.49 1698.92 6884.34 1698.92 6887.87 c

1698.92 6891.39 1701.78 6894.25 1705.3 6894.25 c

1708.82 6894.25 1711.68 6891.39 1711.68 6887.87 c

f

n

1657.86 6887.87 m

1657.86 6884.34 1655 6881.49 1651.48 6881.49 c

1647.96 6881.49 1645.1 6884.34 1645.1 6887.87 c

1645.1 6891.39 1647.96 6894.25 1651.48 6894.25 c

1655 6894.25 1657.86 6891.39 1657.86 6887.87 c

f

n

1784.94 6818.09 m

1697.37 6658.7 l

f

n

1694.28 6653.07 m

1694.76 6656.26 1694.88 6660.46 1694.23 6663.47 c

1697.78 6659.44 l

1703.09 6658.6 l

1700.2 6657.54 1696.72 6655.18 1694.28 6653.07 c

f

n

1784.94 6818.09 m

1697.37 6658.7 l

S

n

1688.1 6641.82 m

1689.52 6651.38 1689.91 6664 1687.94 6673.03 c

1698.59 6660.91 l

1714.53 6658.42 l

1705.86 6655.23 1695.41 6648.14 1688.1 6641.82 c

f

9.9994 0 0 9.9994 0 0 cm

189.792 685.77 m

/N10 7.04625 Tf

(stre) show

201.539 685.77 m

/N15 7.04625 Tf

(am) show

0.100006 0 0 0.100006 0 0 cm

2.1273 w

n

2141.6 6837.9 m

2141.6 6823.8 2136.5 6812.37 2130.2 6812.37 c

1884.97 6812.37 l

1878.68 6812.37 1873.57 6823.8 1873.57 6837.9 c

1873.57 6912.36 l

1873.57 6926.45 1878.68 6937.88 1884.97 6937.88 c

2130.2 6937.88 l

2136.5 6937.88 2141.6 6926.45 2141.6 6912.36 c

2141.6 6837.9 l

h

S

n

1339.48 6811.94 m

1615.08 6652.8 l

f

n

1620.64 6649.59 m

1617.47 6650.13 1613.26 6650.35 1610.24 6649.76 c

1614.35 6653.22 l

1615.3 6658.51 l

1616.3 6655.6 1618.59 6652.07 1620.64 6649.59 c

f

6.38181 w

n

1339.48 6811.94 m

1615.08 6652.8 l

S

n

1631.76 6643.17 m

1622.23 6644.79 1609.63 6645.44 1600.56 6643.67 c

1612.89 6654.06 l

1615.73 6669.95 l

1618.73 6661.2 1625.59 6650.61 1631.76 6643.17 c

f

n

1561.76 6819.65 m

1653.59 6658.66 l

f

n

1656.77 6653.09 m

1654.3 6655.16 1650.79 6657.46 1647.88 6658.48 c

1653.17 6659.39 l

1656.66 6663.49 l

1656.05 6660.47 1656.25 6656.27 1656.77 6653.09 c

f

n

1561.76 6819.65 m

1653.59 6658.66 l

S

n

1663.13 6641.94 m

1655.72 6648.14 1645.17 6655.06 1636.44 6658.11 c

1652.34 6660.86 l

1662.8 6673.14 l

1660.98 6664.08 1661.56 6651.47 1663.13 6641.94 c

f

n

2011.98 6811.94 m

1735.96 6652.56 l

f

n

1730.4 6649.35 m

1732.46 6651.83 1734.75 6655.36 1735.75 6658.27 c

1736.69 6652.98 l

1740.8 6649.52 l

1737.78 6650.11 1733.58 6649.89 1730.4 6649.35 c

f

n

2011.98 6811.94 m

1735.96 6652.56 l

S

n

1719.29 6642.93 m

1725.45 6650.37 1732.32 6660.96 1735.32 6669.71 c

1738.15 6653.82 l

1750.49 6643.43 l

1741.42 6645.2 1728.82 6644.55 1719.29 6642.93 c

f

9.9994 0 0 9.9994 0 0 cm

158.825 655.793 m

/N25 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf

(jo) show

164.309 655.78 m

/N10 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf

(i) show

165.874 655.777 m

/N25 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf

(n) show

169.793 655.768 m

/N10 [7.04615 -0.0162331 0.0162331 7.04615 0 0] Tf

(er) show

0.100006 0 0 0.100006 0 0 cm

2.1273 w

n

1805.41 6541.9 m

1805.37 6527.8 1800.24 6516.38 1793.94 6516.4 c

1548.72 6516.97 l

1542.42 6516.98 1537.34 6528.42 1537.37 6542.52 c

1537.55 6616.98 l

1537.58 6631.08 1542.71 6642.49 1549.01 6642.48 c

1794.24 6641.91 l

1800.53 6641.89 1805.61 6630.45 1805.58 6616.35 c

1805.41 6541.9 l

h

S

Q

q

0.100006 0 0 0.100006 0 0 cm

n

2220 7201.65 m

2220 6572.4 l

2952.64 6572.4 l

2952.64 7201.65 l

W

n

2.09711 w

4 M

n

2548.2 7038.78 m

2548.2 7024.88 2541.97 7013.61 2534.28 7013.61 c

2234.97 7013.61 l

2227.28 7013.61 2221.05 7024.88 2221.05 7038.78 c

2221.05 7112.18 l

2221.05 7126.08 2227.28 7137.34 2234.97 7137.34 c

2534.28 7137.34 l

2541.97 7137.34 2548.2 7126.08 2548.2 7112.18 c

2548.2 7038.78 l

h

0 setgray

S

9.9994 0 0 9.9994 0 0 cm

230.402 705.393 m

/N22 6.94644 Tf

(joiner) show

0.100006 0 0 0.100006 0 0 cm

n

2386.72 7015.01 m

2386.72 6968.87 l

f

n

2386.72 6962.54 m

2385.62 6965.52 2383.73 6969.22 2381.74 6971.5 c

2386.72 6969.7 l

2391.71 6971.5 l

2389.71 6969.22 2387.83 6965.52 2386.72 6962.54 c

f

6.2914 w

n

2386.72 7015.01 m

2386.72 6968.87 l

S

n

2386.72 6949.89 m

2383.41 6958.82 2377.75 6969.9 2371.76 6976.77 c

2386.72 6971.36 l

2401.68 6976.77 l

2395.69 6969.9 2390.03 6958.82 2386.72 6949.89 c

f

n

2386.72 6824.17 m

2386.72 6778.03 l

f

n

2386.72 6771.7 m

2385.62 6774.68 2383.73 6778.38 2381.74 6780.66 c

2386.72 6778.86 l

2391.71 6780.66 l

2389.71 6778.38 2387.83 6774.68 2386.72 6771.7 c

f

n

2386.72 6824.17 m

2386.72 6778.03 l

S

n

2386.72 6759.05 m

2383.41 6767.98 2377.75 6779.06 2371.76 6785.93 c

2386.72 6780.52 l

2401.68 6785.93 l

2395.69 6779.06 2390.03 6767.98 2386.72 6759.05 c

f

n

2386.72 6637.52 m

2386.72 6591.39 l

f

n

2386.72 6585.06 m

2385.62 6588.03 2383.73 6591.73 2381.74 6594.02 c

2386.72 6592.21 l

2391.71 6594.02 l

2389.71 6591.73 2387.83 6588.03 2386.72 6585.06 c

f

n

2386.72 6637.52 m

2386.72 6591.39 l

S

n

2386.72 6572.4 m

2383.41 6581.33 2377.75 6592.42 2371.76 6599.29 c

2386.72 6593.88 l

2401.68 6599.29 l

2395.69 6592.42 2390.03 6581.33 2386.72 6572.4 c

f

n

2386.72 7201.65 m

2386.72 7155.52 l

f

n

2386.72 7149.19 m

2385.62 7152.17 2383.73 7155.86 2381.74 7158.15 c

2386.72 7156.35 l

2391.71 7158.15 l

2389.71 7155.86 2387.83 7152.17 2386.72 7149.19 c

f

n

2386.72 7201.65 m

2386.72 7155.52 l

S

n

2386.72 7136.53 m

2383.41 7145.46 2377.75 7156.55 2371.76 7163.42 c

2386.72 7158.01 l

2401.68 7163.42 l

2395.69 7156.55 2390.03 7145.46 2386.72 7136.53 c

f

2.09711 w

n

2548.2 6849.23 m

2548.2 6835.33 2541.97 6824.06 2534.28 6824.06 c

2234.97 6824.06 l

2227.28 6824.06 2221.05 6835.33 2221.05 6849.23 c

2221.05 6922.63 l

2221.05 6936.53 2227.28 6947.8 2234.97 6947.8 c

2534.28 6947.8 l

2541.97 6947.8 2548.2 6936.53 2548.2 6922.63 c

2548.2 6849.23 l

h

S

9.9994 0 0 9.9994 0 0 cm

228.283 686.438 m

/N31 6.94644 Tf

(st) show

233.686 686.438 m

/N22 6.94644 Tf

(re) show

239.862 686.438 m

/N31 6.94644 Tf

(am) show

0.100006 0 0 0.100006 0 0 cm

n

2548.2 6664.32 m

2548.2 6650.42 2541.97 6639.15 2534.28 6639.15 c

2234.97 6639.15 l

2227.28 6639.15 2221.05 6650.42 2221.05 6664.32 c

2221.05 6737.72 l

2221.05 6751.61 2227.28 6762.88 2234.97 6762.88 c

2534.28 6762.88 l

2541.97 6762.88 2548.2 6751.61 2548.2 6737.72 c

2548.2 6664.32 l

h

S

9.9994 0 0 9.9994 0 0 cm

228.668 667.947 m

(s) show

232.141 667.947 m

/N30 6.94644 Tf

(pl) show

237.548 667.947 m

/N22 6.94644 Tf

(i) show

239.091 667.947 m

/N31 6.94644 Tf

(tt) show

242.951 667.947 m

/N22 6.94644 Tf

(er) show

0.100006 0 0 0.100006 0 0 cm

n

2951.59 6849.23 m

2951.59 6835.33 2945.35 6824.06 2937.67 6824.06 c

2638.35 6824.06 l

2630.67 6824.06 2624.43 6835.33 2624.43 6849.23 c

2624.43 6922.63 l

2624.43 6936.53 2630.67 6947.8 2638.35 6947.8 c

2937.67 6947.8 l

2945.35 6947.8 2951.59 6936.53 2951.59 6922.63 c

2951.59 6849.23 l

h

S

9.9994 0 0 9.9994 0 0 cm

268.625 686.44 m

/N31 6.94644 Tf

(st) show

274.028 686.44 m

/N22 6.94644 Tf

(re) show

280.205 686.44 m

/N31 6.94644 Tf

(am) show

0.100006 0 0 0.100006 0 0 cm

6.2914 w

n

2554.49 6698.28 m

2783.08 6698.28 l

S

n

2785.18 6694.09 m

2785.18 6811.59 l

f

n

2785.18 6817.92 m

2786.28 6814.94 2788.17 6811.24 2790.16 6808.96 c

2785.18 6810.76 l

2780.19 6808.96 l

2782.19 6811.24 2784.07 6814.94 2785.18 6817.92 c

f

n

2785.18 6694.09 m

2785.18 6811.59 l

S

n

2785.18 6830.57 m

2788.49 6821.64 2794.15 6810.56 2800.14 6803.69 c

2785.18 6809.1 l

2770.22 6803.69 l

2776.21 6810.56 2781.86 6821.64 2785.18 6830.57 c

f

n

2554.46 7079.96 m

2557.43 7081.07 2561.13 7082.95 2563.42 7084.95 c

2561.61 7079.96 l

2563.42 7074.98 l

2561.13 7076.97 2557.43 7078.86 2554.46 7079.96 c

1  setgray

f

n

2787.28 6943.65 m

2787.28 7079.96 l

2560.79 7079.96 l

0  setgray

S

n

2541.8 7079.96 m

2550.73 7083.28 2561.82 7088.93 2568.69 7094.92 c

2563.27 7079.96 l

2568.69 7065.01 l

2561.82 7070.99 2550.73 7076.65 2541.8 7079.96 c

f

Q

q

0.100006 0 0 0.100006 0 0 cm

n

3240 7006.14 m

3240 6397.2 l

4908.56 6397.2 l

4908.56 7006.14 l

W

n

9.9994 0 0 9.9994 0 0 cm

Q

q

0.100006 0 0 0.100006 0 0 cm

n

5068.8 7018.95 m

5068.8 6516 l

5399.8 6516 l

5399.8 7018.95 l

W

n

2.10831 w

4 M

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

6.3248 w

2.10831 w

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

9.9994 0 0 9.9994 0 0 cm

Q

0 setgray

72.0044 625.238 m

/N39 9.96367 Tf

(\(a)

[3.35766 4.43375 ] pdfxs

79.7958 625.238 m

(\)) show

85.5537 625.238 m

(pipelin)

[5.03155 2.75986 5.03155 4.43375 2.75986 2.75986 5.03155 ] pdfxs

113.362 625.238 m

/N41 9.96367 Tf

(e) show

146.17 625.238 m

/N39 9.96367 Tf

(\(b)

[3.35766 5.03155 ] pdfxs

154.559 625.238 m

/N41 9.96367 Tf

(\)) show

160.277 625.238 m

/N39 9.96367 Tf

(splitjoin)

[3.83596 5.03155 2.75986 2.75986 2.75986 2.75986 5.03155 2.75986 5.03155 ] pdfxs

217.916 625.238 m

(\(c)

[3.35766 4.43375 ] pdfxs

225.707 625.238 m

(\)) show

231.345 625.238 m

(feedback)

[3.35766 4.43375 4.43375 5.03155 5.03155 4.43375 4.43375 5.03155 ] pdfxs

270.024 625.238 m

(loop)

[2.75986 5.03155 5.03155 5.03155 ] pdfxs

q

468.149 0 0 -0.479996 71.9924 592.944 cm

Q

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentNeededResources:

%%+ font ArialMT

%%+ font TimesNewRomanPSMT

%%+ font Times-Roman

%%+ font Courier

%%+ font Times-Italic

%%+ font Times-Bold

%%+ font TimesNewRomanPSMT

%%+ font Times-Bold

%%+ font Times-Roman

%%EOF


%%EndDocument
 @endspecial 3980 1935 a
 currentpoint grestore moveto
 3980 1935 a 2042 1971 1993 3
v 2383 2056 a Fs(Figur)o(e)g(2.)37 b FD(Hierarchical)19
b(streams)g(in)g(StreamIt.)2113 2670 y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 2113 2670 a @beginspecial
320 @llx 648 @lly 542 @urx 704 @ury 2220 @rwi @setspecial
%%BeginDocument: ./pipeline-eg.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (main.dvi)

%%Version: 1 4

%%Creator: (dvips\(k\) 5.92b Copyright 2002 Radical Eye Software)

%%CreationDate: (D:20041213151454-05'00')

%%DocumentData: Clean7Bit

%%BoundingBox: 320 648 542 704

%%Pages: 0

%%DocumentProcessColors: Black

%%DocumentNeededResources: (atend)

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%+ procset (Adobe Acrobat - general image support) 1.2 0

%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0

%%+ procset (Adobe Acrobat - color image support) 1.2 0

%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0

%%EndComments

320 648 moveto 542 648 lineto 542 704 lineto 320 704 lineto closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: file Pscript_CFF PSVER

userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict

known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{

false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq

{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{

/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{

/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put

bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc

known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100

dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{

currentpacking true setpacking}if{systemdict/internaldict known{1183615869

systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch

maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def

dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup

/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{

exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2

exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1

exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def

/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{

c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1

c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef

/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0

exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt

or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1

def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{

1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get

/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false

PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse

def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1

yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1

c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform

flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{

c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2

sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{

pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge

and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey

floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform

exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3

y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{

/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink

{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def

/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0

c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}

if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2

transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0

dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0

lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def

erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add

def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2

sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add

def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2

curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking

known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch

restore}{systemdict/internaldict known not{1183615869 userdict/internaldict

get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get

exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict

get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict

/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get

exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}

executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{

currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{

systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict

get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck

get exec}{pop 3}ifelse}ifelse}ifelse}bind def end

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 5.0 6

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 89 dict dup begin put

/docSetupDone false def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_pdfEncodings 2 array def

/_pdf_str1 1 string def

/_pdf_i 0 def

/_pdf_na 0 def

/_pdf_showproc 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_ColorSep5044? false def

/nulldict 0 dict def

/_processColors 0 def

/overprintstack null def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

PDF begin

[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W

/applyInterpFunc/applystitchFunc/domainClip/encodeInput

/initgs/int/limit/rangeClip

/defineRes/findRes/setSA/pl

%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver

/? /! /| /: /+ /GetGlyphDirectory

/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage

/pdf_shfill /pdf_sethalftone

] {null def} bind forall

end

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level1? Level2? not def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

%%EndResource

%%BeginResource: l2compat

%%Version: 5.0 10

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 1

%%Title: Level 1 emulation of level 2 operators

/setcmykcolor isdefined? not

{

/setcmykcolor {

1 sub 4 1 roll

3 {

3 index add neg dup 0 lt { pop 0 } if

3 1 roll

} repeat

setrgbcolor

pop

} bd

} if

/rectclip isdefined? not

{

/rectclip { newpath re clip newpath } bd

} if

/rectfill isdefined? not

{

/rectfill { gsave newpath re fill grestore } bd

} if

/sethalftone isdefined? not

{

/sethalftone {

begin

HalftoneType 1 eq

{ Frequency Angle /SpotFunction load setscreen }

if

end

} bd

} if

Level1?

{

/pdf_show {show} bd

/xshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_xshow

} bd

/yshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_yshow

} bd

/xyshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_xyshow

} bd

} if

/getrampcolor {

/indx exch def

[

0 1 NumComp 1 sub {

dup

Samples exch get

dup type /stringtype eq { indx get } if

exch

Scaling exch get aload pop

3 1 roll

mul add

} for

]

L1setcolor

} bd

/sssetbackground { L1setcolor } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 5.0 7

%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

/cm { matrix astore concat } bd

/d /setdash ld

/f /fill ld

/h /closepath ld

/i {dup 0 eq {pop _defaultflatness} if setflat} bd

/j /setlinejoin ld

/J /setlinecap ld

/M /setmiterlimit ld

/n /newpath ld

/S /stroke ld

/w /setlinewidth ld

/W /clip ld

/initgs {

0 setgray

[] 0 d

0 j

0 J

10 M

1 w

false setSA

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

/pdf_flushfilters

{

aload length

{ dup status

1 index currentfile ne and

{ dup flushfile closefile }

{ pop }

ifelse

} repeat

} bd

/pdf_readstring

{

1 index dup length 1 sub get

exch readstring pop

exch pdf_flushfilters

} bind def

/pdf_dictOp

{

3 2 roll

10 dict copy

begin

_Filters dup length 1 sub get def

currentdict exch exec

_Filters pdf_flushfilters

end

} [/_Filters] bld

/pdf_image {{image} /DataSource pdf_dictOp} bd

/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd

/pdf_shfill {{sh} /DataSource pdf_dictOp} bd

/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd

/pdf_maskedImage

{

10 dict copy begin

/miDict currentdict def

/DataDict DataDict 10 dict copy def

DataDict begin

/DataSource

_Filters dup length 1 sub get

def

miDict image

_Filters pdf_flushfilters

end

end

} [/miDict /DataDict /_Filters] bld

/RadialShade {

40 dict begin

/background exch def

/ext1 exch def

/ext0 exch def

/BBox exch def

/r2 exch def

/c2y exch def

/c2x exch def

/r1 exch def

/c1y exch def

/c1x exch def

/rampdict exch def

gsave

BBox length 0 gt {

newpath

BBox 0 get BBox 1 get moveto

BBox 2 get BBox 0 get sub 0 rlineto

0 BBox 3 get BBox 1 get sub rlineto

BBox 2 get BBox 0 get sub neg 0 rlineto

closepath

clip

newpath

} if

c1x c2x eq

{

c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse

}

{

/slope c2y c1y sub c2x c1x sub div def

/theta slope 1 atan def

c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if

c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if

}

ifelse

gsave

clippath

c1x c1y translate

theta rotate

-90 rotate

{ pathbbox } stopped

{ 0 0 0 0 } if

/yMax exch def

/xMax exch def

/yMin exch def

/xMin exch def

grestore

xMax xMin eq yMax yMin eq or

{

grestore

end

}

{

rampdict begin

40 dict begin

background length 0 gt { background sssetbackground gsave clippath fill grestore } if

gsave

c1x c1y translate

theta rotate

-90 rotate

/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def

/c1y 0 def

/c1x 0 def

/c2x 0 def

ext0 {

0 getrampcolor

c2y r2 add r1 lt

{

c1x c1y r1 360 0 arcn

xMin yMin moveto

xMax yMin lineto

xMax yMax lineto

xMin yMax lineto

xMin yMin lineto

eofill

}

{

c2y r1 add r2 le

{

c1x c1y r1 0 360 arc

fill

}

{

c2x c2y r2 0 360 arc fill

r1 r2 eq

{

/p1x r1 neg def

/p1y c1y def

/p2x r1 def

/p2y c1y def

p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto

fill

}

{

/AA r2 r1 sub c2y div def

/theta AA 1 AA dup mul sub sqrt div 1 atan def

/SS1 90 theta add dup sin exch cos div def

/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def

/p1y p1x SS1 div neg def

/SS2 90 theta sub dup sin exch cos div def

/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def

/p2y p2x SS2 div neg def

r1 r2 gt

{

/L1maxX p1x yMin p1y sub SS1 div add def

/L2maxX p2x yMin p2y sub SS2 div add def

}

{

/L1maxX 0 def

/L2maxX 0 def

}ifelse

p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto

L1maxX L1maxX p1x sub SS1 mul p1y add lineto

fill

}

ifelse

}

ifelse

} ifelse

} if

c1x c2x sub dup mul

c1y c2y sub dup mul

add 0.5 exp

0 dtransform

dup mul exch dup mul add 0.5 exp 72 div

0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

1 index 1 index lt { exch } if pop

/hires exch def

hires mul

/numpix exch def

/numsteps NumSamples def

/rampIndxInc 1 def

/subsampling false def

numpix 0 ne

{

NumSamples numpix div 0.5 gt

{

/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def

/rampIndxInc NumSamples 1 sub numsteps div def

/subsampling true def

} if

} if

/xInc c2x c1x sub numsteps div def

/yInc c2y c1y sub numsteps div def

/rInc r2 r1 sub numsteps div def

/cx c1x def

/cy c1y def

/radius r1 def

newpath

xInc 0 eq yInc 0 eq rInc 0 eq and and

{

0 getrampcolor

cx cy radius 0 360 arc

stroke

NumSamples 1 sub getrampcolor

cx cy radius 72 hires div add 0 360 arc

0 setlinewidth

stroke

}

{

0

numsteps

{

dup

subsampling { round cvi } if

getrampcolor

cx cy radius 0 360 arc

/cx cx xInc add def

/cy cy yInc add def

/radius radius rInc add def

cx cy radius 360 0 arcn

eofill

rampIndxInc add

}

repeat

pop

} ifelse

ext1 {

c2y r2 add r1 lt

{

c2x c2y r2 0 360 arc

fill

}

{

c2y r1 add r2 le

{

c2x c2y r2 360 0 arcn

xMin yMin moveto

xMax yMin lineto

xMax yMax lineto

xMin yMax lineto

xMin yMin lineto

eofill

}

{

c2x c2y r2 0 360 arc fill

r1 r2 eq

{

/p1x r2 neg def

/p1y c2y def

/p2x r2 def

/p2y c2y def

p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto

fill

}

{

/AA r2 r1 sub c2y div def

/theta AA 1 AA dup mul sub sqrt div 1 atan def

/SS1 90 theta add dup sin exch cos div def

/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def

/p1y c2y p1x SS1 div sub def

/SS2 90 theta sub dup sin exch cos div def

/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def

/p2y c2y p2x SS2 div sub def

r1 r2 lt

{

/L1maxX p1x yMax p1y sub SS1 div add def

/L2maxX p2x yMax p2y sub SS2 div add def

}

{

/L1maxX 0 def

/L2maxX 0 def

}ifelse

p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto

L1maxX L1maxX p1x sub SS1 mul p1y add lineto

fill

}

ifelse

}

ifelse

} ifelse

} if

grestore

grestore

end

end

end

} ifelse

} bd

/GenStrips {

40 dict begin

/background exch def

/ext1 exch def

/ext0 exch def

/BBox exch def

/y2 exch def

/x2 exch def

/y1 exch def

/x1 exch def

/rampdict exch def

gsave

BBox length 0 gt {

newpath

BBox 0 get BBox 1 get moveto

BBox 2 get BBox 0 get sub 0 rlineto

0 BBox 3 get BBox 1 get sub rlineto

BBox 2 get BBox 0 get sub neg 0 rlineto

closepath

clip

newpath

} if

x1 x2 eq

{

y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse

}

{

/slope y2 y1 sub x2 x1 sub div def

/theta slope 1 atan def

x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if

x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if

}

ifelse

gsave

clippath

x1 y1 translate

theta rotate

{ pathbbox } stopped

{ 0 0 0 0 } if

/yMax exch def

/xMax exch def

/yMin exch def

/xMin exch def

grestore

xMax xMin eq yMax yMin eq or

{

grestore

end

}

{

rampdict begin

20 dict begin

background length 0 gt { background sssetbackground gsave clippath fill grestore } if

gsave

x1 y1 translate

theta rotate

/xStart 0 def

/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def

/ySpan yMax yMin sub def

/numsteps NumSamples def

/rampIndxInc 1 def

/subsampling false def

xStart 0 transform

xEnd 0 transform

3 -1 roll

sub dup mul

3 1 roll

sub dup mul

add 0.5 exp 72 div

0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

1 index 1 index lt { exch } if pop

mul

/numpix exch def

numpix 0 ne

{

NumSamples numpix div 0.5 gt

{

/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def

/rampIndxInc NumSamples 1 sub numsteps div def

/subsampling true def

} if

} if

ext0 {

0 getrampcolor

xMin xStart lt

{ xMin yMin xMin neg ySpan rectfill } if

} if

/xInc xEnd xStart sub numsteps div def

/x xStart def

0

numsteps

{

dup

subsampling { round cvi } if

getrampcolor

x yMin xInc ySpan rectfill

/x x xInc add def

rampIndxInc add

}

repeat

pop

ext1 {

xMax xEnd gt

{ xEnd yMin xMax xEnd sub ySpan rectfill } if

} if

grestore

grestore

end

end

end

} ifelse

} bd

%%EndResource

%%BeginResource: procset sep_ops

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044

userdict /sep_ops 50 dict dup begin put

/bdef {bind def} bind def

/xdef {exch def} bdef

/colorimagebuffer {

0 1 2 index length 1 sub {

dup 2 index exch get 255 exch sub 2 index 3 1 roll put

} for

} bdef

/addprocs {

[ 3 1 roll

/exec load

dup 3 1 roll

] cvx

} bdef

/L1? {

systemdict /languagelevel known {

systemdict /languagelevel get 2 lt

}{

true

} ifelse

} bdef

/colorexists {

statusdict /processcolors known {

statusdict /processcolors get exec

}{

/deviceinfo where {

pop deviceinfo /Colors known {

deviceinfo /Colors get

statusdict /processcolors {

deviceinfo /Colors known {

deviceinfo /Colors get

}{

1

} ifelse

} put

}{

1

} ifelse

}{

1

} ifelse

} ifelse

1 gt

} bdef

/colorplate colorexists { 0 } { 5 } ifelse def

/negativecolorplate false def

/setcmykcolor where {

pop

gsave

1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub

4 {4 copy} repeat

grestore

1 dict begin

/foureq {

4 index eq 8 1 roll

4 index eq 8 1 roll

4 index eq 8 1 roll

4 index eq 8 1 roll

pop pop pop pop and and and

} def

1 0 0 0 foureq {/colorplate 1 store} if

0 1 0 0 foureq {/colorplate 2 store} if

0 0 1 0 foureq {/colorplate 3 store} if

0 0 0 1 foureq {/colorplate 4 store} if

0 0 0 0 foureq {/colorplate 6 store} if

end

} if

0 systemdict /currenttransfer get exec exec

1 systemdict /currenttransfer get exec exec

2 copy

eq

{

/colorplate 6 store

pop

/negativecolorplate exch 0.5 lt store

}

{

gt /negativecolorplate exch store

}

ifelse

/findcmykcustomcolor where { pop }

{

/findcmykcustomcolor {

[ 6 1 roll ] readonly

} bdef

} ifelse

/setoverprint where {

pop

}{

/setoverprint {

pop

} bdef

} ifelse

/currentoverprint where {

pop

}{

/currentoverprint {

false

} bdef

} ifelse

/setcustomcolor where {

pop

}{

L1? {

/setcustomcolor {

exch

aload pop pop

4 { 4 index mul 4 1 roll } repeat

5 -1 roll pop

setcmykcolor

} bdef

}{

/setcustomcolor {

exch

[ exch /Separation exch dup 4 get exch /DeviceCMYK exch

0 4 getinterval

[ exch /dup load exch cvx {mul exch dup}

/forall load /pop load dup] cvx

] setcolorspace setcolor

} bdef

} ifelse

} ifelse

/ik 0 def

/iy 0 def

/im 0 def

/ic 0 def

/imagetint {

ic .3 mul

im .59 mul

iy .11 mul

ik add add add dup

1 gt {pop 1} if

} bdef

/setcmykcolor where {

pop

}{

/setcmykcolor {

/ik xdef /iy xdef /im xdef /ic xdef

imagetint

1 exch sub setgray

} bdef

} ifelse

/customcolorimage where {

pop

}{

L1? {

/customcolorimage{

gsave

colorexists {

aload pop pop

/ik xdef /iy xdef /im xdef /ic xdef

currentcolortransfer

{ik mul ik sub 1 add} addprocs

4 1 roll {iy mul iy sub 1 add} addprocs

4 1 roll {im mul im sub 1 add} addprocs

4 1 roll {ic mul ic sub 1 add} addprocs

4 1 roll setcolortransfer

/magentabuf 0 string def

/yellowbuf 0 string def

/blackbuf 0 string def

{

colorimagebuffer dup length magentabuf length ne

{

dup length dup dup

/magentabuf exch string def

/yellowbuf exch string def

/blackbuf exch string def

} if

dup magentabuf copy yellowbuf copy

blackbuf copy pop

} addprocs

{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage

}{

aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint

imagetint def

currenttransfer

{tint mul 1 tint sub add} addprocs settransfer image

} ifelse

grestore

} bdef

}{

/customcolorimage {

gsave

[ exch /Separation exch dup 4 get exch /DeviceCMYK exch

0 4 getinterval

[ exch /dup load exch cvx {mul exch dup}

/forall load /pop load dup] cvx

] setcolorspace

10 dict begin

/ImageType 1 def

/DataSource exch def

/ImageMatrix exch def

/BitsPerComponent exch def

/Height exch def

/Width exch def

/Decode [1 0] def

currentdict end

image

grestore

} bdef

} ifelse

} ifelse

/setseparationgray where {

pop

}{

L1? {

/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef

}{

/setseparationgray {

[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace

1 exch sub setcolor

} bdef

} ifelse

} ifelse

/separationimage where { pop }

{

/separationimage {

gsave

1 1 1 1 (All)

findcmykcustomcolor customcolorimage

grestore

} bdef

} ifelse

currentdict readonly pop end

%%EndResource

%%BeginResource: procset pdflev15044

%%Version: 5.0 13

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 1

%%Title: PDF operators, Level 1, with emulated separations (TN 5044)

/_ColorSep5044? true dd

/docinitialize {

PDF begin

/_defaulthalftone

/currenthalftone where

{ pop currenthalftone }

{ 4 dict dup begin

currentscreen

/SpotFunction exch def

/Angle exch def

/Frequency exch def

/HalftoneType 1 def

end }

ifelse

dd

/currentcolortransfer where

{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }

{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }

ifelse

end

} bd

/initialize {

/overprintstack null dd

sep_ops begin

50 dict begin

_defaulthalftone sethalftone

} bd

/terminate {

end end

} bd

/currentcolortransfer where

{ pop }

{

/setcolortransfer

{

settransfer pop pop pop

} bd

} ifelse

/pl {

transform

0.25 sub round 0.25 add exch

0.25 sub round 0.25 add exch

itransform

} bd

/m { _sa? { pl } if moveto } bd

/l { _sa? { pl } if lineto } bd

/c

{

_sa? {3 {pl 6 2 roll} repeat} if

curveto

} bd

/ri/pop ld

/setSA { /_sa? xdd } bd

/re

{

_sa?

{

8 dict begin

/:h exch def

/:w exch def

/:y exch def

/:x exch def

:x :y pl

/:ymin exch def /:xmin exch def

:x :w add :y :h add pl

/:ymax exch def /:xmax exch def

:xmin :ymin moveto

:xmax :ymin lineto

:xmax :ymax lineto

:xmin :ymax lineto

closepath

end

}

{

4 2 roll moveto

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

closepath

} ifelse

} bd

/q

{

gsave

[currentoverprint overprintstack] /overprintstack xdd

}

[/overprintstack] bld

/Q

{

overprintstack aload pop /overprintstack xdd setoverprint

grestore

}

[/overprintstack] bld

/AlmostFull?

{ dup maxlength exch length sub 2 le

} bd

/Expand

{ 1 index maxlength mul cvi dict

dup begin exch { def } forall end

} bd

/xput

{ 3 2 roll

dup 3 index known not

{ dup AlmostFull? { 1.5 Expand } if

} if

dup 4 2 roll put

} bd

/defineRes

{ _categories 1 index known not

{ /_categories _categories 2 index 10 dict xput store

} if

_categories exch 2 copy get 5 -1 roll 4 index xput put

} bd

/findRes {

_categories exch get exch get

} bd

/L1setcolor {

aload length

dup 0 eq

{ pop .5 setgray }

{ dup 1 eq

{ pop setgray }

{ 3 eq

{ setrgbcolor }

{ setcmykcolor }

ifelse }

ifelse }

ifelse

} bind dd

/concattransferfuncs {

[ 3 1 roll /exec load exch /exec load ] cvx

} bd

/concatandsettransfer {

/_defaulttransfer load concattransferfuncs settransfer

} bd

/concatandsetcolortransfer {

colorplate 0 eq

{

_defaultcolortransfer aload pop

8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll

6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll

4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll

concattransferfuncs

setcolortransfer

} if

colorplate 1 ge colorplate 4 le and

{

4 colorplate sub index 4 { exch pop } repeat

concatandsettransfer

} if

colorplate 5 ge

{

0 index 4 { exch pop } repeat

concatandsettransfer

} if

} bd

/tn5044sethalftone

{

begin

HalftoneType 5 eq

{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]

colorplate get

here not {

/Default here not { currentdict } if

} if

}

{ currentdict }

ifelse

end

begin

/TransferFunction here

{

concatandsettransfer

currentdict dup length dict

begin

{

1 index /TransferFunction ne { def } { pop pop } ifelse

} forall

currentdict

end

}

{

currentdict

} ifelse

end

sethalftone

} bd

/paintimage

{

colorplate 0 eq

{

{ {currentfile cyanstr readstring pop}

{currentfile magentastr readstring pop}

{currentfile yellowstr readstring pop}

{currentfile blackstr readstring pop

currentfile graystr readstring pop pop}

}

{ {currentfile cyanstr readhexstring pop}

{currentfile magentastr readhexstring pop}

{currentfile yellowstr readhexstring pop}

{currentfile blackstr readhexstring pop

currentfile graystr readhexstring pop pop}

} ifelse

true 4 colorimage

}

{

3 dict begin

/binaryOK exch def

[

1 1 5 {

dup

/currentfile cvx

[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]

3 -1 roll 1 sub get cvx

binaryOK { /readstring } { /readhexstring } ifelse cvx

/pop cvx

5 -1 roll

colorplate dup 5 gt { pop 5 } if

eq not { /pop cvx } if

} for

] cvx bind

end

[

colorplate 6 eq {

/pop cvx

negativecolorplate { 0 } { 1 } ifelse

} if

colorplate 4 le

{

1 /exch cvx /sub cvx

} if

colorplate 6 ne

{

systemdict /currenttransfer get exec

aload pop

} if

] cvx

gsave

systemdict /settransfer get exec

systemdict /image get exec

grestore

} ifelse

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 5.0 6

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 78 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

} bd

/terminate { end } bd

Level2?

{

/_safeput

{

3 -1 roll load 3 1 roll put

}

bd

}

{

/_safeput

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

3 -1 roll load 3 1 roll put

}

bd

}

ifelse

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

Level2? {currentglobal true setglobal} if

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

Level2? {setglobal} if

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

currentdict /PaintType known

{ PaintType 2 eq {/PaintType 0 def} if }

if

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

Level2?

{

currentdict /pdf_origFontName undef

} if

FontName currentdict

end

definefont pop

}

bd

Level2?

{

/TZG

{

currentglobal true setglobal

2 index _pdfFontStatus

{

2 index findfont

false setglobal

3 index findfont

true setglobal

ne

{

2 index findfont dup rcheck

{

dup length dict begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

currentdict end

}

if

3 index exch definefont pop

}

if

} if

setglobal

TZ

} bd

}

{

/TZG {TZ} bd

} ifelse

Level2?

{

currentglobal false setglobal

userdict /pdftext_data 5 dict put

pdftext_data

begin

/saveStacks

{

pdftext_data

begin

/vmmode currentglobal def

false setglobal

count array astore /os exch def

end

countdictstack array dictstack pdftext_data exch /ds exch put

cleardictstack pdftext_data /dscount countdictstack put

pdftext_data /vmmode get setglobal

} bind def

/restoreStacks

{

pdftext_data /vmmode currentglobal put false setglobal

clear cleardictstack

pdftext_data /ds get dup

pdftext_data /dscount get 1 2 index length 1 sub

{ get begin dup } for

pop pop

pdftext_data /os get aload pop

pdftext_data /vmmode get setglobal

} bind def

/testForClonePrinterBug

{

currentglobal true setglobal

/undefinedCategory /Generic /Category findresource

dup length dict copy /Category defineresource pop

setglobal

pdftext_data /saveStacks get exec

pdftext_data /vmmode currentglobal put false setglobal

/undefined /undefinedCategory { resourcestatus } stopped

pdftext_data exch /bugFound exch put

pdftext_data /vmmode get setglobal

pdftext_data /restoreStacks get exec

pdftext_data /bugFound get

} bind def

end

setglobal

/pdf_resourcestatus

pdftext_data /testForClonePrinterBug get exec

{

{

pdftext_data /saveStacks get exec

pdftext_data /os get dup dup length 1 sub

dup 1 sub dup 0 lt { pop 0 } if

exch 1 exch { get exch dup } for

pop pop

{ resourcestatus }

stopped

{

clear cleardictstack pdftext_data /restoreStacks get exec

{ pop pop } stopped pop false

}

{

count array astore pdftext_data exch /results exch put

pdftext_data /restoreStacks get exec pop pop

pdftext_data /results get aload pop

}

ifelse

}

}

{ { resourcestatus } }

ifelse

bd

}

if

Level2?

{

/_pdfUndefineResource

{

currentglobal 3 1 roll

_pdf_FontDirectory 2 index 2 copy known

{undef}

{pop pop}

ifelse

1 index (pdf) exch _pdfConcatNames 1 index

1 index 1 _pdfConcatNames 1 index

5 index 1 _pdfConcatNames 1 index

4

{

2 copy pdf_resourcestatus

{

pop 2 lt

{2 copy findresource gcheck setglobal undefineresource}

{pop pop}

ifelse

}

{ pop pop}

ifelse

} repeat

setglobal

} bd

}

{

/_pdfUndefineResource { pop pop} bd

}

ifelse

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font pdf_resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category pdf_resourcestatus

{

pop pop

/CIDFont pdf_resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckCIDSystemInfo

{

1 index _pdfTextTempString cvs

(Identity) anchorsearch

{

pop pop pop pop true

}

{

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

exch /CIDFont findresource

/CIDSystemInfo get

3 -1 roll /CMap findresource

/CIDSystemInfo get

exch

3 -1 roll

{

2 copy

/Supplement get

exch

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ true }

ifelse

{

dup /Registry get

2 index /Registry get eq

{

/Ordering get

exch /Ordering get

dup type /arraytype eq

{

1 index type /arraytype eq

{

true

1 index length 1 sub -1 0

{

dup 2 index exch get exch 3 index exch get ne

{ pop false exit}

if

} for

exch pop exch pop

}

{ pop pop false }

ifelse

}

{

eq

}

ifelse

}

{ pop pop false }

ifelse

}

{ pop pop false }

ifelse

}

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap pdf_resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckCIDSystemInfo

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

{

exch _wmode _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

Level2?

{

/Tf {

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

selectfont

} bd

}

{

/Tf {

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

exch findfont exch

dup type /arraytype eq

{makefont}

{scalefont}

ifelse

setfont

} bd

}

ifelse

/cshow where

{

pop /pdf_cshow /cshow load dd

/pdf_remove2 {pop pop} dd

}

{

/pdf_cshow {exch forall} dd

/pdf_remove2 {} dd

} ifelse

/pdf_xshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

_pdf_x _pdf_y moveto

0

rmoveto

}

ifelse

_pdf_i 1 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdf_yshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

_pdf_x _pdf_y moveto

0 exch

rmoveto

}

ifelse

_pdf_i 1 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdf_xyshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

{_pdf_na _pdf_i 1 add get} stopped

{ pop pop pop}

{

_pdf_x _pdf_y moveto

rmoveto

}

ifelse

}

ifelse

_pdf_i 2 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd

/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd

/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd

Level2? _ColorSep5044? not and

{

/pdfxs {{xshow} stopped {pdfl1xs} if} bd

/pdfys {{yshow} stopped {pdfl1ys} if} bd

/pdfxys {{xyshow} stopped {pdfl1xys} if} bd

}

{

/pdfxs /pdfl1xs load dd

/pdfys /pdfl1ys load dd

/pdfxys /pdfl1xys load dd

} ifelse

/pdf_charpath {false charpath} bd

/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd

/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd

/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd

/pdf_strokepath

{

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 false charpath

currentpoint S moveto

} bind

exch pdf_cshow

} bd

/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd

/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd

/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd

Level2? {currentglobal true setglobal} if

/d0/setcharwidth ld

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap PDFText /pdf_resourcestatus get exec

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

Level2? {setglobal} if

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

Level2? {currentglobal true setglobal} if

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

Level2? {setglobal} if

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%IncludeResource Courier

[/N60/Courier -1 TZ

%%IncludeResource Times-Italic

[ 2 /fi 32 /space/exclam/quotedbl/numbersign/dollar

/percent/ampersand/quoteright/parenleft/parenright/asterisk

/plus/comma/hyphen/period/slash/zero

/one/two/three/four/five/six

/seven/eight/nine/colon/semicolon/less

/equal/greater/question/at/A/B

/C/D/E/F/G/H

/I/J/K/L/M/N

/O/P/Q/R/S/T

/U/V/W/X/Y/Z

/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft

/a/b/c/d/e/f

/g/h/i/j/k/l

/m/n/o/p/q/r

/s/t/u/v/w/x

/y/z/braceleft/bar/braceright/asciitilde

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/exclamdown/cent

/sterling/fraction/yen/florin/section/currency

/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi

/fl/.notdef/endash/dagger/daggerdbl/periodcentered

/.notdef/paragraph/bullet/quotesinglbase/quotedblbase/quotedblright

/guillemotright/ellipsis/perthousand/.notdef/questiondown/.notdef

/grave/acute/circumflex/tilde/macron/breve

/dotaccent/dieresis/.notdef/ring/cedilla/.notdef

/hungarumlaut/ogonek/caron/emdash/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/AE/.notdef/ordfeminine/.notdef

/.notdef/.notdef/.notdef/Lslash/Oslash/OE

/ordmasculine/.notdef/.notdef/.notdef/.notdef/.notdef

/ae/.notdef/.notdef/.notdef/dotlessi/.notdef

/.notdef/lslash/oslash/oe/germandbls/.notdef

/.notdef/.notdef/.notdef

/N57/Times-Italic -1 TZ

%%IncludeResource Times-Bold

[/N45/Times-Bold -1 TZ

%%IncludeResource Times-Bold

[/N46/Times-Bold -1 TZ

%%IncludeResource Times-Roman

[ 2 /fi/fl 32 /space/exclam/quotedbl/numbersign

/dollar/percent/ampersand/quoteright/parenleft/parenright

/asterisk/plus/comma/hyphen/period/slash

/zero/one/two/three/four/five

/six/seven/eight/nine/colon/semicolon

/less/equal/greater/question/at/A

/B/C/D/E/F/G

/H/I/J/K/L/M

/N/O/P/Q/R/S

/T/U/V/W/X/Y

/Z/bracketleft/backslash/bracketright/asciicircum/underscore

/quoteleft/a/b/c/d/e

/f/g/h/i/j/k

/l/m/n/o/p/q

/r/s/t/u/v/w

/x/y/z/braceleft/bar/braceright

/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/quotedblleft/quotedblright/.notdef

/endash/emdash/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/exclamdown

/cent/sterling/fraction/yen/florin/section

/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright

/fi/fl/.notdef/endash/dagger/daggerdbl

/periodcentered/.notdef/paragraph/bullet/quotesinglbase/quotedblbase

/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown

/.notdef/grave/acute/circumflex/tilde/macron

/breve/dotaccent/dieresis/.notdef/ring/cedilla

/.notdef/hungarumlaut/ogonek/caron/emdash/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef

/.notdef/.notdef/.notdef/AE/.notdef/ordfeminine

/.notdef/.notdef/.notdef/.notdef/Lslash/Oslash

/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef

/.notdef/ae/.notdef/.notdef/.notdef/dotlessi

/.notdef/.notdef/lslash/oslash/oe/germandbls

/.notdef/.notdef/.notdef/.notdef

/N47/Times-Roman -1 TZ

%%IncludeResource TimesNewRomanPSMT

[/N41/TimesNewRomanPSMT 1 TZ

%%IncludeResource Times-Roman

[/N39/Times-Roman -1 TZ

%%IncludeResource ArialMT

[/N52/ArialMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

320 648 221 56 rectclip

%%BeginResource: font TWPPMU+ArialMT~47

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /TWPPMU+ArialMT~47 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D183F654CC9E516843D

39D400085ABA9646DA481FF9468E167556FF2D2521815E2A32874AB03E72C7AB

1024243EA677680BE387625F955E87713831EB3219318ED24174C839554897C7

213358F9708DABA15D2FB9C8340A6A684CCB04C1845415C81C9AF8E6861BDE41

2BF46CF45BE4D7B4D65A6D990C67FC10310576CC8DBBA7765CAB918E883BACBB

97147F7D72EA3A2E1B3AECC1CD984BBA20123B0FE78C02B6687368159B715447

9EB249424F55DD2FEBBB88CB2CB3D9E6BD1F5E41B28EA25FB4982745B9EFFDDC

58FFC60A0CDD5990D0AC927857559AC8A39DA004A9E99A94FCD78B20D94429DE

3D17CC2BDC4A3CC75392C8C38FD13BD6BF369D0E51989A9E405EFF62FA317CB6

9C49F642460F43F7896B919594E672389A0AB10BB6A0319B7DA61A23386151B2

6CD0BEBAE4A37E391BE5FCEACDFF7AFA8793CDAEF8FB4AAE31057301D2D43C3B

0BC75E9F333139988AD175E4DCA73E35F4AD723D4B6D08AA2622B36413277BAA

9C65600C5FD300866842A91675A392048FFF0F8EA0B04869B01F1BEFEE9D2543

1864509A8B7AC913BFEAACE31AC4B2245B1A474E8331D296456B3484E2AF77B2

3D0E0A705F9684A816F6F3303D2D635CD57FD9CCC01AFED57B312FECF713D2EA

4FCA1A4FCA1D0518FBEC3BA59B13EF7E015ACFA7393D0C6C32FCE02073F6457A

4A86547BD5CBB44261D74A216C4D91B11B0CD0D131CA56CC8B39E7D39E08F133

F4BE00F38E4E9B63DEEAE3B9614612C111C007FCC425B672842DB76BFC

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/TWPPMU+ArialMT~47 findfont /Encoding get

dup 0 /.notdef put

pop

end

/TWPPMU+ArialMT~47 findfont /Encoding get

dup 0 /.notdef put

dup 79 /O put

dup 112 /p put

dup 116 /t put

pop

%%EndResource

[/N48/TWPPMU+ArialMT~47 -1 TZ

%%BeginResource: font OGCUNH+ArialMT~41

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /OGCUNH+ArialMT~41 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545483BEDE3F5036AD096

95D44D3AF1F3DE68B49C231BA72A6C0F914ED70519CC4C1E28E058061A7D304D

FCA2C36D91A36B15655F225FB9DE99B3072122C81748CC079616345904F8F37C

C7F95A75EB51E927A490401ECFAD06CB01C4EB75FBAF00E3DE83EF1F35C94410

04E7B1D25AD35361E694D89ECC0A72C605EB4C9D7D88A29FC9115CE89A379FD4

C1A4E52ADB52D3C654A49B201C33A0E64899F3935FB11EC87C168D736D95D91E

CD594E4FAF03BF485818BA103ECAC3E87F72AE5856D990E4536CCAB54D452CE9

BE3C07AA91A93F489997B9845FBC29CE29CEA04959987633F2F395973D9BCC1E

F1D642C62512AC59555F83DF8FB03C9F5328563D36909495C6CAA400AF2803E9

805F933A5E8469E2F7D8CF8A58C3FDC26C3F6BC5A6A197174E29185023335B31

49C04C2065931AFBDA4267C1C0DC4D966E0D373B1FAE511F636707FDE0428D27

8CD58E604F898A821A607E115D78DC72DA764158960D53157D53BB98A4750E89

0791B4931367FA9297B8F57AB9972B85446060B224348392C259001C556CA4FF

28344533E4D528C7ED3C4AEFFFDD6E256FA0E42203430943A3FC456E777EAC14

C9BF3B7D09525AACAE4A6687834BB5FFAD6D2E1A6D254A25445F3DFEADA91B9E

B63EDC882598237FA32519923EC02D15A0D25E4ABE5A571EF333F6BF909B231C

D842ED1DC55AE14DAE113A288504DF4849AECB8CC9C823CA48BEF1F9B13A2D3F

C46539206CF0CEF63BB8F6552BE9364D67D6B39778D4BD2569B935FD862C8EA2

4E26795DE934852A7018E3B85CE303AFFA2182984F2EE5ACE4F39D970A502AFA

F9CBE6D9EBA5CE0E114C24D87E11B9E14BDFAB759A637774FAB8B429AC0A0036

EFAC9429FD3F5B15AE3B4E8C1201637BA3434279592BD2552309725ABB188F59

6B747B36D1BF0D3493FBBAD3F5EB2D7F40C818DD9ECFFB1EB8D896C481DDD06B

35EB9551DE18D5BBF26714656CD44754C6B2088C110B82B8D4B3661EAA663D32

F104CC46F44C2ACFC76FED41A0F2B05B7B41EFF4A37F7C0D5DC28C35E17F6140

019D18B7BBB5116D61F535122FC1D6E7351F19E0DB3E12A9156BD90771E21877

107BEE9A31AC1E5B36695DE9CEC2019EB79CB7271A579F459C886F87D2B10358

83BCB25720684831CCABC45EC31548BBCA6C7C3CAA7D6533D90C1E8DF8CD9C1D

768155AAC4C84085EDA4C7D6E53D50850C87EC5700B6A0096EB9EE2987951B49

D8F300EDB61DFFF0BBC71A93DEFFF6467E3B50E99ECE362A8C9C066D613026E5

A9C940B5968967BC8A6F1C9E663E4281DF5FA67C13AABF9087CB59EFC9717659

ED4B3E22F50B0A5964D490EDEA4C8912279A80D6959C1A04DCE4B59BF46537BD

3DF45737103A25DC0AB7238687BBC7D18AA8725E95880EDC87EAA210BDDD4EA3

6D0233BE65271564FF7D61537088B0874D1DF9D41C40368399A80433D3743DE1

C433

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/OGCUNH+ArialMT~41 findfont /Encoding get

dup 0 /.notdef put

pop

end

/OGCUNH+ArialMT~41 findfont /Encoding get

dup 0 /.notdef put

dup 83 /S put

dup 99 /c put

dup 101 /e put

dup 111 /o put

dup 114 /r put

dup 117 /u put

pop

%%EndResource

[/N51/OGCUNH+ArialMT~41 -1 TZ

%%BeginResource: font ZJMUMW+ArialMT~3d

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /ZJMUMW+ArialMT~3d def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5D5842D86A6C9AFDD18ECD5CAF2DE803E7A7BA868FAB984229798

ADDAAE49C9EA48A5D2DB77F25DC348952B5767EA25D6B45FB5128D1FE19A13A9

7002F975B66C9D5CC3EE3F1761A538F9022226136BFAAB026D01E0FB9845A9FE

FBF6A04BAC4A2EFBBB973EE935BFE23007877F33299A211C3D90A328B2D7C191

4958A3E05057A5E462736BEAFAB78E885644D62D94E30F82AFE894F988F779CF

9FECE9B95C4F0A5D21D3723DDEEEF96400AA484030C6D05D838398C95647491D

BC0D333156ECCE454ACFE3ED1588C866DA6139A7EB9B135E23DFA3D54FEB26E8

85DA2226E79F8E7312B94721BECB4B311B600555662D256B8CD5585E1A77D228

599954C42563DD55EA8E81E3A3B44E0C96461FA8CDB355140EFB150C899B1AF5

37A3FC4CF21D77AAC53D78C1170AC920B8BCC1F418BB5D809E8B5631E57CA8F7

75BE0997CD1D3F3B3A30C75702DCD9034E4FA07ACB4C393BAE91E3C20B4BDD4E

28A6A9CD35E53FB9F88C1B35641F104F43BDB3F882BB141DB7A2F75BF71D1459

ECBD8B040579BEDC02A93FB8415F4664B67A8144C5B87CCE66E97F06383B941C

CCBE2DB149D5EDF7F367DFCFBB082942F3D7E23805E65524D091B9F5A5584661

9F5E55E9EFCE8D71696618CADF4E39319329E4F972DD9C09FDD1028715633E72

59879F0D45B306F85B8106B92F3F1348EB73C59334DEBBF2A21F8CF93E27DB62

FD955F2BE3E29D052F407C73EE62ABE49C0C94EC1B981ED469673AA03BBED205

FFC5E80BA4A37C0DBCA8188EEFC8C7CFDFA65B91493574F1E7262FC78F0C0542

71EE9C3A061E656D4272EBB7D12365555D7204E649AF46C97A3C8FEF0A10899D

11EB37CF1E612071DD9C2942B129B3E92A213AA82860EC9D6692E3AE4CE6AC93

14BE238EBD9BDE963D77AF3597349C77140E15582FD8B52D509FFC323BE1ADA8

B51971030F7BC855D9E03B25A6A91EF9675677F85A8071DB1E6F6C6FB86355A7

DFE10ADB40E2921CA88485C759AE50713BC70F2C1D5E78CE8D79A6C7D93217AA

7773FB631E4E1DF000C771D9771919891CF147FD0CC90D7C9A0B609A32EC976A

9E9EEA77363D633A09CA6076FB8ED55FDD55EB40E56B25D0B9D4B5B8FE5015B8

6AF68FFA9FE5F12D655A6EC26BAB77154C9CD88F4084858A93E7743E07ED3F63

F6BA61D50895F12884CFE801EF1E9C987C9A1EFC11C3C5F0DDDCFBD738C80425

DAA05AB310FA7642C111A041B1766A84CFCA1679970F3BAA698B686ADDA540F1

451621FEB3A37E236BA5627BA833E2A29EA883EE9F7F683067DE7740BC114F24

83A2C5270B7ECCAAA522E8BF1CBF5749C30B2989C9A103433F3E023BD94A8BDB

49917F0B42B1DC5C4F323AEC77C18934D1233169AF3531231A9900918F8A4024

5E0F44AAB9276B3F672B215E6A462BC856028A3B19FAFD409C2853E826A43DE4

51A02050A1FEA0763EF8D4E1EEEBBCC889D066689193444F5B4A46F229055443

720765B15EC8AAA278A9D0D2A1524CD3643CE3DDF69F815CAF88623DC03039D5

E5CFC7BCBFC86598C0F062BEA4CF2C27B3C7BA0DFD4B16EAFD214A6886C41D52

D8329097BEE435D2106A74E6E51F5CB649562B97AB5BEAC905218D6BF0A79B67

4B8032EFECD6C19088EAD58CD0166F8E7A79C45362352DEA2F277F08001B1660

544395B9EC7C2D0D9AACA76851AB9AD4100AD0C567B465B5F91C0B49D33FA82A

A3A0C745BE9C2B0EC02D6177BA60BFE8042F52777EAFC54027966E18CBBC5B51

63BD1D296C9EFD52D0D73214EB1CD435396EAAD4E084E505FC17D071F11923A9

1478D795489531ECB5DAA57EB300704E23050AC45CE0AB131D477926B88A07E5

F67B6A9D5A64697E4195FBEAAF786A2724C9011FDB18D61CAC897690075DCB4A

736B7F630A15BD57254F71DFBB7D7BF090CBA999D00ED8D4807424AB5726A62F

034A8D58BB2E9464DF5D983ECF8BA2DE9A60A8B9688DE2DAAC3F9B577CEB6745

58DC45C7297575AD8E5B6EB6BF7C3AFDA0B7A853A661DD60BFEA39C62FB948AC

872CB6426305B83275016574E83C92E7C07943D0A144EBF39610F304C3868878

AB7FA0FB84C5ED9B960E3A6F8B4226C90AFD5383569C2D9E335396B5F49CF971

9A9596FD7C1B839C1890B3740DEF54192195CB0D309C263AD847B425A6ED1B5B

BB45769D4AA7B68D4F9E0558B78AD191EDC11EFABA1C21619817A0975C7B85C4

81B917B6DF02E299CE03FB28B3E3427835A46A6C6E3E42049557B2B6F0DCD638

459632CE39595EC4F4B175D029D3435A7A6DF88708B0C44AFDF87F9620A78F4D

B3572925D02DA44168BEF45D2A22C792E44DB695856B9DCE3BE8F7E84DA97097

3373B8C2C5E5AF3379573EAC8246BE7612CF5A6D307C1D1E580D09CBACD6FA96

2FBFDFB3C8353538F68B7218192407192FC89ECDB18C734007AE1C2238B0C473

32F9082ED05C7B5B8E4F51766B59493518CDFE9C179470ABA8A5EB83DE85CF9F

1AD9E27752A48966084CE2EE5A473910AA7B06FA5CD8C226BE874027E01A982C

0FF4B05039AAE1927379A2E813EC79D64A72793AF00F79CE4CE3A9E0DECFD7EB

DF19029DE1501F13BDE1FF44C42FC612034CFA9FA1EB25D9B98B18742F96C129

1DD81217052467D592FD34F518BE92EB76C816ACADE8314EE7DC962B395A0BC6

3FE384DAEA52014EF575EBD64857B497036639548F55A246F831E8B9A065A46C

C2315AAE195323A9FB246E6F6E2F3F12D307EE091F970F01DE342954091FAD25

314B02044670722C2EABF99A377EF4E167FEA22873DA59DC8AAB1154774B515F

E9F668707E971689BFC528EC480892CFFE1162B7C69EED8878BB1AF60B59FEE6

C539BBEDCEC9A8D913D734DD23C761E6D028AA850B1CD714EDD514FCE806C05B

0A073BF863CC48C54A234CE3D5E462846188D458AA7955D76F13D600A9C381E5

E6F5310370CF6B0042824F15015234A8941E0EECEA5DC233281D01CC026127F6

FBDB31059AC5708DCFE489B27DA1FFFF6543E2949814B7EF03E1C2EF480F2A58

F981F9AC424A1B8C4102E36C4A01A20F460060086D6BB45D98C723FA755155D5

C7C2350A023F797D9E6CB1D05B0EABFAD46DE2F09B01D93A3FF3EF67CC3513EE

79D6D80F4BF3F01DD011C3B84177E29DF962254ADFE27636F6340188B2ACCF4E

87895E2D78A26729BC34D8AF2CE26050E71BC005475EB201A12DB65EC44BC224

DA445D09E5BAC0656FFA332241E88B68F09089D601911778EB4EAC3364544866

35EA7C557D837A11986E0D102FC99B713D4B48C5E5D6D6072AC9374EDEB7F5D6

B42B83D55716C569A06E185684634F2B64EF1EDF3289E21058B1EFB9AA8881C5

1CD2DC040F0E44DAEC8B0341E96EBB16469FB3D27901237ADFC5BD531A973588

77BF5B676D0691CF5BB9BA388DEB865F64B4F0F4707D794344C2C80988F7CF47

F9F64E84396549A4B8FAB47235A51CF6C12A3CC6B7B1F37F5BD55B83AEA14034

87C6B347A870F8036F57ED14E02382A9B5870CAB82B9A8F6714425D76B352A27

48907A4A985E23CCE50B97D6458B0190C84B801314A1A00944BDD2C66C42EF78

4F2332A91CD9E90AD99B90FB4F5D270CC32221820EE05E7E065F6254A9F49057

89F3B8A2A09CF9B14941859299EC4BAA9B4B5D96C9AE103490106CE5EBE0558D

2A0C5EF7897D597AE945881A020178DF88A1F63B9A7F5749978A19C055C61164

0C793B008BCDFF36AB34E048D452B712AAD28077AC5968C1B69D596D2B3806CB

8A9916062723F9D5BD43149139ADEC44E5E89CEDAA0377F69CA33B9759C2CE1C

3FC6B883DF939E457480C8DEDABB35806E42EF26B6B0ED4383DE3D74B3D746DD

D00D49C8EBF0A6652F9B13150A96ECE8838E75F4D1112421CC327FCF79EF422A

DD8AEF7AC64316EE0F2F6CEF56F2C8494A862AAFB5C545AE4D83F8DB042E7770

52F93AB726CE0B823394A22ED0B3379482E96F9C90A64C349173226EBBF4D9D0

6C3D205DE96D299BBC31780906AAEEBD7D3B1702D8B3924F7BCDF168D132BF4C

F5A1880C72CC23D5D90DF01BB07DE8839E0A9EFFD9AE64BDD5444D50E6E2451C

42649A6B0DCD9CF4ABBB3B9CB0465728FEBEC98EE1DDFC840B3EDC41DC49714F

76D2D4AD4E92CB2498FF6BC40863FB2A51A3E5D92BA7F023E595F54155BE3501

559E2412BAF8D1145CF5D50BF972D9D39340E935A7912CF31EB3362BB226D477

A95FE2733C29427C49F2315347235B5B63ECAB17E55E5E78DEEFD339437CD5D3

7F1E2F9EDC6219FE4C8B79665654F1C541BCA64DBEAC4E0CF6D7960D25D9C5C6

C3A83FA3A95397EB32C17A0D370DDF841BF0AACE574AB95B4D4BD13DC93F92F5

186D9D693B3CF21FC0AE8AC128CBF505D21753692D4D56B64C0CAE92DEE58B38

1272C1C610E19F18975C46BD2032DE17BB733F8D4C14CD779BE0CBCE441017D1

9089521DF299E2D347C74D22E5627D7C1184D2007C23A68726DCD75C4F9D3A90

D3543492D836B47DE2F2DEE582784A756EADBDA009DDB2C8EEDD4397340144D6

DE09FFAB597F8E74A95142356568C36170AC576D90DBFC95A803DEB787AA2627

E5F4118A1FD1E23A566168BA9428177DD9AF7BF7448550E653DAF214C7E26D0E

F8A35D67F7B4C88BCF80E214CCB3DDAC500F770937EFDED41EDAE04AC523C6DE

6D34B29F5BF480CE5FBF16E6D42FBD1923E90B37E1AA50D1FEF0603CEE6356D7

821C343C42526EE2CDEE8B0C572E717F121C29D5CA45EACB9EC293ECF0D13C34

306BD4E1FA566ED1040D5AE89947EEFA9121BF4F7E71B466DBEA1FDC7DA24F2E

1F7BC63389583687AF8D3FE1D0B8E79B4BD6EA99133141BFFF3015CA97F6BC42

926639AB0C23CC04029CB7514E97FD9C33A8D6DC50F904B2CD43BB91117A1AC7

BCC9A6F9897C1CFE2B7DA2C1E06C7FAB265A4F86BF92B875FC69791F1AA74A3D

8883E0C5EB7D6EF2E19FDEE63E67CB80F482B6AD3FA0F00A7B42BE8889ECBEA8

64D79CB9C31823C41E77FC401341339050944D7463AE34D5A13A20E11A5F2400

37DA6C7A15CC7C21FEF312FB742FAA4D0A7B7D87999E6BD21EDFB185AB09207B

25AC54CD36403BEF3BA0552DE8F7F1CAD140C8327636634943C60E4199E417BF

8A6FCB745A07B484A2B0BEE550C4828B5157E0A4F40B67A98ADBDA8B21A45909

D7AA6EF52972E6BAE7F3DFA432FB6EA12889899EECAC223F6E11692310EF59EB

105341CADE92F4D8EF95EF042D33A18FFB22D46DE27F89EB273E098B7E0AC4D2

AC4FCF74225E6E9A6F6B3CB2B9FF1F97F4140B310E02049CAE392373D5B03CCD

C00489C4493D3FB62ADA16A62F7B4519ED2C9FAD29557B6980E5DD0821A81A11

2B60591CC10BF67D29BC7826F3082C3D36939C8DD26B053D9ABBBA351A00D89E

C684133984EAEAA33C6FDD99229ACDC6972CB8F8B29E949732766E0C8B80346A

D7E3B426FF64981FB86C85276671BECD88D08FCE30F3AEF6B0B4A897216E4672

092EF65FF2EE3E14F972503805712540029088A77FDE93BD32887D80C1677BDD

03ED24C7A7DB72A6921BD56FA1232F7DFAE46579DD11F88B7EFD0ACDC1912170

840806652BBE0CF48830971D9CDD5EDA6139482F8F2113E69739FE03E3EB7B40

E49C35CABEE2B4091D2CC00FA2DC221F4D0C58DC87841743E6D4533BFEC8A821

7AEC889671BF0F69E662B05BB7F80CB0

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/ZJMUMW+ArialMT~3d findfont /Encoding get

dup 0 /.notdef put

pop

end

/ZJMUMW+ArialMT~3d findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 45 /hyphen put

dup 47 /slash put

dup 59 /semicolon put

dup 62 /greater put

dup 73 /I put

dup 77 /M put

dup 79 /O put

dup 82 /R put

dup 83 /S put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 123 /braceleft put

dup 125 /braceright put

pop

%%EndResource

[/N35/ZJMUMW+ArialMT~3d -1 TZ

%%BeginResource: font HCLPKB+ArialMT~37

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /HCLPKB+ArialMT~37 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1

B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1

756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42453A43F319A023AA37C

F4C2DBD26BEF155A2AE1A880A254FA8518170FE7B76A5120CBB49ADCA57CF20A

5502FF35F5488673A03F11BF1E2CDAD7A1AACCCF7C7B8C675A403D9FD5A91866

C8734B5BF8B99A08AABB8F8BE438653FFD4546A739EDE655ADC8879321A48918

747722A92947A50FFE4166290F65482F2E1F537BD1FF45615BC89138EFBB97B5

18206D6A14E8BA71991D8108E7FD66A5AA3187AA0E3ED0D01111C2658D4401E5

7CF7C0CEB595C755F2288DC8B956839AB45B82A9FA6FC65E12F789DC971375C5

59E78953B748AAF161932139ABF91185E985FD840D0E94BB747D02F2D869B2B9

7679D51D6FC355BE7639CF23DA069EB6972666AC0910F99A6213751D65A79D78

53808C86826FBB367C74E196FD5A8F8ACF13FB23F581F788E2961D2795

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/HCLPKB+ArialMT~37 findfont /Encoding get

dup 0 /.notdef put

pop

end

/HCLPKB+ArialMT~37 findfont /Encoding get

dup 0 /.notdef put

dup 108 /l put

dup 112 /p put

pop

%%EndResource

[/N30/HCLPKB+ArialMT~37 -1 TZ

%%BeginResource: font MMCJHH+ArialMT~34

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /MMCJHH+ArialMT~34 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A367D85BFE7DCF51A4B1428D17CCFBB38855B20F264AED104C7F38

0432D121C51BCA5B423A43BE147BE85241E84318442F2F0386B31CBCF75E8A7F

E1CA92CAED009304155349E29FFF3AF4467E81183A43F1761371EFE7737293B8

358D800562B41E3621FDD577A69DECCD8D0530A8DF883DFD5D67645B9BEC58D3

502AF80CD62D1D9FD8CE8A1247ED876FAFD508DE5585EC27F7E12FB08A7E7B54

7927081BEC6D2D40DF6A5C5F4EC8157CA160480C1335517C6D996921616AB728

62B9120577C3B434E4F8D9D12D32C45B3EB2529D380566BF6B104F36CB5C2044

629CCCB40C98D5A293B50825C29AEBD6B3811270B24D5545C4EFF656E0B04F07

7888E86FEC1C5D2C17633DC251D04B1108A681D971B0E499860873AD0824A075

CEEEA405C6AD57F3CD6B70CEE8A2883DEFF36FBDA1C30491A54424A4F4BBE58E

49487DE6042DB85A5A460EEBFDD0CA09A5FAB3EB284F3BDF09B4DD5B6F9A1014

C8CBB593BFFC0EC32FD35E731EA7D45878BC90EC90223B8B26026ABF5C0660C5

65824FC595F60775A5F5283B91C1A53A42624A63CCF36F92112C7394A37D59CA

F70BB7023E0CDE5857C62A104B20E5CD9961DF84AA5470800CD224C2BDE69A48

4D3A51CF1B2C8A47CD84D0DE91BF0B7A2F14D106D15CA95AD2C7B55AF66C1BD2

0A378FAA84A369135296C0AC81CA4FBC98A3179B748D7517418B14A52C138997

D09F7FE4FA0E079836C72BF9E4D5D0A352E7267049FE9956D7EF7B7E8BBF8BD8

E4A3FFE12AEF054D8CEFDC0DB6EB732BF81CD9D7D46C937E5FE28E03526E731A

22C444CDC18BD7E7CE950EF1314846288FF371D289E8DDF3A5C9ED328811516A

21019740849CA9C5404CEE3F03F530FBE0981E2F48E6D7AE998A3467D3E2B630

31818C37C24FF6C70323A35090C6C2940952F35ADCACADFE59CA8E964019E251

03EE3957A63256B87854847C1B7A557EBC6A29F469E75156646647E28E6D439B

092A6B0A084C1AFB4F658713954CC7B063C9C78100C87441EC7B651FE7AF9B4C

309A1D7993BA383BDDF41BEA7D233C6CECE1316FF277B1A1315D9608AD5D5D4E

AE521F6B548DF8073BC2C934E7A77F8A5FBF79AFCE6044CE7E4BA3785AB9E70F

CEB938955F8DBC72F66C92EAAAB284EF3C75CF6B91B9AE809ECF5CBD3F52800D

C9E155E147DE889B57BC2DA0C3FD3E58AAB00A81BE3340B48C9720B527F48774

E5C3520217C9B8C60A46E56AA2CB940A6CC0A108850E5CC61542F5903E4690E4

22642811DB0402900ADAEB14507B6C15979156DA031E7BC192E22AF79086D405

36251C43A35299C9D14D5CF81343F92371D4140B53965767CD8B06C820573CA3

3554234A2D01DCA5948CE41084019EFE6B4CDC1FFD09A527FD345A3E7A3C6A2B

49

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/MMCJHH+ArialMT~34 findfont /Encoding get

dup 0 /.notdef put

pop

end

/MMCJHH+ArialMT~34 findfont /Encoding get

dup 0 /.notdef put

dup 97 /a put

dup 109 /m put

dup 115 /s put

dup 116 /t put

pop

%%EndResource

[/N31/MMCJHH+ArialMT~34 -1 TZ

%%BeginResource: font XSJKPF+ArialMT~31

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /XSJKPF+ArialMT~31 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545458FF8936FE9391A64

D5A8A1448880D50715145534E59E9430613005EEE7550C409CE0503BF1650BE2

AC03F7B38C2F3285304B4579EFA5B3CBAED6250C9F4DAAB3FA6B1299E9AEEA4D

89055CD9A2356AA207C739E3FCE13B5376C7FC9655A96F77B53B5395FB2D1D5C

A6E537CCB83F391C30C5C1E35A28DC8E05B1CAE62C372B995DFDC8D9352128B8

0332D44F401A72524C8529754BC7EB888F7DD93AE1BA8F7CFDBCA8CAC8D46E33

C3E360213B048E8C336A64593C0DB302F64BCD36B9D4202D62559E89CF92116A

9E4AD7B511A3B3A99802350257C4FB11BA65A93DE9F2DBDD14B2EFBC02FFE11C

BE40569379BB56F037476787964F569781CBDE85B006DBDBE83F4C751FE1C84E

C59FB946A9DFF2F34F66E93DC0F2A4B50973BD4E8D4F8EE8C58587576EAE51AA

6E05B48F6193A0C0207A91C0DDC6A66A271A15B0FBFB1C5E2A16C33223C49DF4

DCA79D03F41A25C0008ECA85745010FB9369D716CA1183878B7B056B67A1BFEA

A16CB0E0DD34FF661D09A734DEA1EDA628A258425BDE9EFFFB47A6188FA620D9

90E61FC284890A03B53F3B93B1001E2AD219890A32A288E56A2D1F8630179D1C

BDE8DDA5D1A0A6FEE9B2CA73C1B46049A28CA22B01F593F62F1F37DFDD2E98BC

7F5DEE60B7758E6FBC084657A4F4F9B6FD1D2FC5529454B74E410DD11BA015A5

F46B45AF40754189BCDC6E97F56FD759E085B5051A7252F6188DC15907A180DA

FC336FA0407579581ABDDD82F170F156058D16BE7E00D8C20971C98CBFC4D9DC

1638C7E38683846D351E56D7F5AC39DF7EEA520D08C9636F7279835087EC393F

C8959A3A91DFCB8426BBA2FE13D9DFC5A15C285D52A2B30F55A256522BEB5A5E

B2A17654E0A187C375F3704CF3BF62FBBB6EF10E90752DC77005FE35B9781DC4

419D8D436789EAA572C4C4B6DEEBB2DC731238A56CC448F095B8CB6159B9AD80

EE7A7E28E479715C42C9C98933215B1BB6599DD1C0B8ABC83DEDDA0C4ECABA6C

404BBA756A7EEC6AC8053FD25FFF91671FF50AFD4F92A1C9143A20B54D05621E

392D86DA33F7F91757F5FFFA4CA1357BB5

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/XSJKPF+ArialMT~31 findfont /Encoding get

dup 0 /.notdef put

pop

end

/XSJKPF+ArialMT~31 findfont /Encoding get

dup 0 /.notdef put

dup 101 /e put

dup 105 /i put

dup 106 /j put

dup 110 /n put

dup 111 /o put

dup 114 /r put

pop

%%EndResource

[/N22/XSJKPF+ArialMT~31 -1 TZ

%%BeginResource: font EJJJJY+ArialMT~2b

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /EJJJJY+ArialMT~2b def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D06BB445313C1AE65B5

055AA6C2F10ACF37CD93A18D299BC54BAC72233B536005468912FE2EDF704209

3AD85F2CCA921758866AA49E3391AEAB38B488FAB48502A5D59AA8E116A63C5C

E16B261FC70D20F99994A05A9E4F68E13797C960FE85CE505538DC81E566874A

DD22D8AB5A0B41F9133B0C14297F848195D257DAEEF3AAA7C690A83288BD36AB

BA90578795D7A69444A6349248FF73BACC549CBE9624844EF53A411F846B483B

8F9C2F7CEFD97134C14818AD0F56951B266C90AF15360BEB94E9FA1335EDD738

BFFC1FA4EA624DFE346C68137FF7231A277C1F682A1BA7BB409963FD73F7FA59

9E159AD9D118B4A0C2049390DC206A6029129B53C03137C52BEEDE577B724C9B

08BC47F19CA319547465D2C2CCA901B156A8A2D4FCD1061374CC93E9D8149F84

3262CC1BD8296C5F80F3855D36805393862268ED0A0FCDF216A33D4D6F20F41E

7B7769246455A14737859F61DECE8FE760FCF7184E2312FC210532A79DDF0232

7B2A275E043BB90EC83CA9947BE41882A69361905CEF78666AA2A11E487E739C

254598C6CC7416F1010540F1533262B5FFF2F2B7AE592EF6E9A7E369FE560BF4

9EB4664C976372B5A91FE8C0C2D8F3DB27D6707DA400F934A9E5BAB9CD83C1

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/EJJJJY+ArialMT~2b findfont /Encoding get

dup 0 /.notdef put

pop

end

/EJJJJY+ArialMT~2b findfont /Encoding get

dup 0 /.notdef put

dup 106 /j put

dup 110 /n put

dup 111 /o put

pop

%%EndResource

[/N25/EJJJJY+ArialMT~2b -1 TZ

%%BeginResource: font UKEUSF+ArialMT~28

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /UKEUSF+ArialMT~28 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1

B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1

756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42442EF75F21F39891C8B

A70C0530EDA7B6EE6158617516D4BD56DA39F92E5D3910BFD5E78B2873E2A362

3C5D0B72D7F91C0BF8ED3A4BEDDEB61B4803889554E9F574B27F18D6F6043CED

187AB1E1FB29E62C0BDBB27C95B28F01513D918C23D0898A86125A8833E01E95

90D7B7A8E66A3DDE45E4BA8946929A0301895EEB31A1451BC8C529D8A7C1F218

41C4EC16177C67F72529C8773B7ABA6A9D252D50BEA83F17BAB783DF30B61E5F

4D95AAE12D93C10172975BABD5DEFC456EABF928E66D8E67989A1214133FADEC

FC8CA966567DB6FABA54C6A15117808BF88D6437944511BA4D1D8A1FF025165D

10C59E3BB0DC4C7445238CFF643D10CD8E0DC2ECE931F902E67289B101B23BE4

3BF42448455214E6548D72735128C4F70843AE421C2F1F7C6E19D132902F94FA

B732D2E97DB8EBD6D50B1B5D6AC6F2B2C471E6A4C609D2605E27F4137163468E

443559DFC474EB21C75B28F2D092E0A4D0DE9D2370FE1845434303BAA9E51F0A

6448239471F42272931D0BE8816DACA5456D0D3D188C498EEA0FA232CE25344E

A7B05B17038A0898CADE06699C5448D8C5EF0F83F78D0244B7D873EF7036DFE8

96F74DF438EC0433FDA9B74F58152C491525CF57F960E366FA9B5E63A6914774

2B4DBB41D65CC5F0A329384537BD9CA65B60D1A5928594A31DD7CB747E831C05

4095F937EBE5DFD79515C455B4298EB94A61F2D6EA299FDC30C175511BBCD7A2

6A44F7450DD1B1F22A2D6060E34D490187

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/UKEUSF+ArialMT~28 findfont /Encoding get

dup 0 /.notdef put

pop

end

/UKEUSF+ArialMT~28 findfont /Encoding get

dup 0 /.notdef put

dup 97 /a put

dup 109 /m put

pop

%%EndResource

[/N15/UKEUSF+ArialMT~28 -1 TZ

%%BeginResource: font ZCXVXN+ArialMT~25

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /ZCXVXN+ArialMT~25 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69AE06434ED40772B6ED119BDFC5AB0F936AB651C8D4814E518C158C

7718948C0ABBBA27C52DC58DC45A8973C9D632CD4EE579DEFF0C423553562E82

3403D332EA07F8778AE77033ABB687FB865B70DEC32AFE39DCC06FABC17D9F43

D753287663EBA22D0DAC42A026E48F70E11DE02158E802FD7C03B8B9C6857C8A

1303E6C9967D0EF4B0314CF24F523A8613CDF2FD64C9B184667B1B3875DFFFEE

EC92480310DC697A16D5213FA2BC675D76882B0E99F3558B48AF0555B5BC5E42

08A62047312393248CE0DDA42A7D909EE72024D667B07BF05228DA08931AA36B

C3F0CA2C04401ED41D4F303251A65F174785D613878BD5B21E78EF3D8251366E

8D6451F4F0642D015A327B08DEB0D437AB9E8D779E1F370DBA5F713090C4DCCF

2AB7BEE450463F5DA2AF0AACAD2043F404EB970E9E664D61A6D488C615EE95F8

8EECF31C773E465FBB0D4664D3A5ED7B301A8F71C04F973AAC25F779B2759A5D

EEF87A7B341F5E839E65A9B9649FE77663BC1C7CF630A27C4FB14D42C15CE1C5

AD1AEA2332136D745768F95BFED8AF6FB40C4CF2208FA3975360510F90A993A3

62696388803B0CD8FC5C05961CA8138C6A833CD3F5052D3B1F8A99CEEA41D869

D7F96C5CCB9E44CDA3634D26E3B344F1A360810FD4DD3E26214E14CAE4AF2CDF

B52D721394BA2F6CBA09B5A83DC682A7582FFE2AFEC0411FB3BEDDE2393F96EA

717D12FCD7B0418DEDDFE8AD772D723986A2D441804FE584BEF0FDBCC6CCC0B7

73C003A248714158C821F3A68D84742546DF0E898FFDF8C2FADEDC10AA3FD3E7

0CA76EB7EB516D0CE4DF7CC748686723BA2A93D24405B4BC46809C722319FDCC

86E267D47526082EE1FA6F2655E1A1D73038518FC88DC26D97496EBF28C7C4A3

9924B65AB7E2597B7D87E02006FB9C16355E672F49AA82003EA63ABF2A4119E1

EF7F2BD6092D85DDEB66DFA985EA5681F41D94451E6BA8DDAF86FB58F6D31936

8CE8A1555345631B843C298CEF712B2CF2C9FECC5CBD3C4DA21A18B64204042A

89025302C560AEB8B86FFB921C48F61AACD908A82053A9393508BFB1D2380282

74CB0CFCB0D05A228B155AA7C5E32F81197D3D9AED2352B76A4C18297D1DFBFF

C8D2CBDABBD14ED268E39499CB546469ADB9FCB86C3B243B96317E42C7D6110A

D960FCC279C401E7C882D15AD9D6DF451FB17061E0A5A715EC682FDE6B655ACB

2A0617DEFCC4A8C666313ADB0D0EFE48807C5316135E0E073392E36E98281F94

7A1B40CD4BAE404E52BBF7C0D29E5DB983B8342EEFCB1713D2F06C50E2042A21

DFEC8FC5D0EF1F2C43A22E80B81B6965A679A050461F0DEFCA41702F42F823F3

FCEEEA125259A4B861723458811FD12703E55174DFB1E00AE6AB9E6962098D47

ADA41ABE730CB5F014522D7AE9CE8483B1134C6C735DAC1528FE1F7FE1A5241B

56489DF0B20F281006429AF012560157B91EA8F657C17D9F0886FAD0225254

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/ZCXVXN+ArialMT~25 findfont /Encoding get

dup 0 /.notdef put

pop

end

/ZCXVXN+ArialMT~25 findfont /Encoding get

dup 0 /.notdef put

dup 101 /e put

dup 105 /i put

dup 108 /l put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

pop

%%EndResource

[/N10/ZCXVXN+ArialMT~25 -1 TZ

%%BeginResource: font JZYFAL+ArialMT

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /JZYFAL+ArialMT def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C25454ED15E53C2441C7231

1EF68C9867B0ACDDBFA3E2DD56A038DD3C8AE91DB0346212B7222BA5DA1FB9C8

FF5798B34471E9A6032BEA5FAED9106462D5864132BEC9E58895050FFF88FA46

C6A0DCE4F54F27C00FADD7FB86F5A0BAB252841FE8860F278CF57A56C83AE01E

682DE23E2530839CBCD0AE1726D33386D1676CB0077AC9A14F7BB546D1415AFF

5A47F9BDB61F4BA3D9E41F64C6FF2F38A048290DDABEA363458B780F0131F662

A4138AED0DAF7350358C98B600EE7209D28A6D9CEB550D01647EF6DEB82F150D

B27D7E9E80721EA69A8DB573A3CFAE4BE135A0D6EFE01D2102525BFE4FFE835E

7C1AAE631CB155E9023050408D7C50FDE32B5BDF51D7B336045F8E98BF5AC5E4

3EEC3903963418DED2780B0B73AB743BB148EBCB1EE6FA5DD63E400E2B6D648F

4BC175BE360B324868807600753727F50A25D6D15738BA7064658973F10DB372

49ABDEE0FC2B3827952F46306843D68D5E5DE8FC4A57242D756D06CFE1DF22A3

B706249CB0BCF18CEF4A17464FCA0AFBFCEB0052E655E42B7FAC1B11838730C3

627D4EA20259513732468D99F027FC9AE569D7AEFE18DD3DD92A7CA229E481CB

E759125FE87D308DDFC34BCB3490819DB2788DDD5BF20672F2EF0AB044D85C0D

E8A2FF135B2854E3635DA5E212DE2EEE9242E9FBFE9604A85C8477C390A2C275

A83CE1A180F6125CCEB7763CBF72603D5CC24D6A31B6FDF9C2B31D3A2CF755F9

A6BF5A5C8FA28FCE19ABD07D27BD7ADB476B90CB79FA00D1F53702D92ED17DD5

69D2D4808DAC05CF1433983058C7152F1441D77F7AFE2D7FFD9B914BDC7690C0

DFBD0D38C052FACD4969E9DB47AA717DD78E1AA110A028240880F601E8CAA9E5

600E1DE6FBBD26752370E97EFB67FFE04BE8B3E4CAC83B78857472F51EA3E7A4

80B7FC4687057F713EAB1B4C536ED0C0918D5ED4F0FCB11F8F505F9799915D7C

81F2EE0130722D8FCB7E0B8A7EF94542471475705635635C75A05C2C73848264

1D72DEBDEA70C283547071074BA3CBDC3056CF0F9916464EA359F51ED8F7B951

F1A661B6EB3D0434E765DA44EEA2ED67DB4287AA4368A96F214ED2CA94AC9815

82E9DB02DBFD3C307269B158521E7F3389C26FE1D70401B6BA3683CCEF780F16

E841456F69B6D777E81BDF100F709489C21B1BCD54CB6E8CB19F5BB0B4832B64

9D993C9331904BB09C2FE1D8CDC0A4D9D2E41140E959CB5B848871A4818AB81C

8FD2A5CF8EA076D9566AB4150E5E2C033238F78F78D22A4133C7093FC96DD57E

C11B959538125BC06023CD18A46DE510E9994BFE48336968C298C2BDA2923913

3BF7E5CA9F5F7E8ACC5324CE8261FCFCCBD5917E6FA417441192A485895C45C5

843A9E984EAE0B2CF70BB797602876B5F8ECBA62344F154A0472D8B5D7F57377

EE95779533CBA56671A81E40E637993B85A22DC9633EBF6AD4480C985675FA95

C95E8C917CB4494E4980E19B7E802F34B355FEBBB2AE46BA2CAE712873D78264

23DC6EDC5AE5760D330A788E094EAB06B957B52A339236BB0230CBCAED587FEA

90D0204AEE120070CA8B8EB56A14DEE9B9B6FF01F6DB6222086C76337883DB76

3A811FE7EAE5EEB76A6ABDBD510E7215B0D18E6D78B21EA59BDA7CB53199B8A4



0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/JZYFAL+ArialMT findfont /Encoding get

dup 0 /.notdef put

pop

end

/JZYFAL+ArialMT findfont /Encoding get

dup 0 /.notdef put

dup 97 /a put

dup 101 /e put

dup 109 /m put

dup 114 /r put

dup 115 /s put

dup 116 /t put

pop

%%EndResource

[/N9/JZYFAL+ArialMT -1 TZ

320.09 648.165 221.46 55.9951 re

W

n

q

0.100006 0 0 0.100006 0 0 cm

n

798 7298.59 m

798 6475.2 l

1129 6475.2 l

1129 7298.59 l

W

n

2.10831 w

4 M

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

6.3248 w

2.10831 w

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

6.3248 w

2.10831 w

9.9994 0 0 9.9994 0 0 cm

Q

q

0.100006 0 0 0.100006 0 0 cm

n

1207.2 7325.09 m

1207.2 6450 l

2142.67 6450 l

2142.67 7325.09 l

W

n

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

2.1273 w

4 M

6.38181 w

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

2.1273 w

6.38181 w

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

2.1273 w

6.38181 w

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

2.1273 w

Q

q

0.100006 0 0 0.100006 0 0 cm

n

2220 7201.65 m

2220 6572.4 l

2952.64 6572.4 l

2952.64 7201.65 l

W

n

2.09711 w

4 M

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

6.2914 w

2.09711 w

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

9.9994 0 0 9.9994 0 0 cm

0.100006 0 0 0.100006 0 0 cm

6.2914 w

Q

q

0.100006 0 0 0.100006 0 0 cm

n

3240 7006.14 m

3240 6397.2 l

4908.56 6397.2 l

4908.56 7006.14 l

W

n

9.9994 0 0 9.9994 0 0 cm

0 setgray

324.02 692.271 m

/N35 8.38589 Tf

(float -> float pipeline Main\(\) {) show

324.02 682.313 m

(  add Source\(\);  // code for Source not shown) show

324.02 672.355 m

(  add ) show

345.001 672.355 m

/N52 8.38589 Tf

(FIR\(\);)

[5.12372 2.33128 6.05449 2.79244 2.79244 2.33128 ] pdfxs

324.02 662.397 m

/N35 8.38589 Tf

(  add Output\(\);  // code for Output not shown) show

324.02 652.438 m

(}) show

Q

q

0.100006 0 0 0.100006 0 0 cm

n

5068.8 7018.95 m

5068.8 6516 l

5399.8 6516 l

5399.8 7018.95 l

W

n

2.10831 w

4 M

n

5398.75 6918.8 m

5398.75 6904.83 5392.48 6893.5 5384.75 6893.5 c

5083.85 6893.5 l

5076.12 6893.5 5069.85 6904.83 5069.85 6918.8 c

5069.85 6992.59 l

5069.85 7006.57 5076.12 7017.89 5083.85 7017.89 c

5384.75 7017.89 l

5392.48 7017.89 5398.75 7006.57 5398.75 6992.59 c

5398.75 6918.8 l

h

0 setgray

S

9.9994 0 0 9.9994 0 0 cm

512.504 693.612 m

/N51 6.98335 Tf

(Source) show

0.100006 0 0 0.100006 0 0 cm

n

5234.3 6894.91 m

5234.3 6848.53 l

f

n

5234.3 6842.16 m

5233.19 6845.16 5231.29 6848.87 5229.29 6851.17 c

5234.3 6849.36 l

5239.31 6851.17 l

5237.31 6848.87 5235.41 6845.16 5234.3 6842.16 c

f

6.3248 w

n

5234.3 6894.91 m

5234.3 6848.53 l

S

n

5234.3 6829.44 m

5230.97 6838.42 5225.28 6849.56 5219.26 6856.47 c

5234.3 6851.03 l

5249.34 6856.47 l

5243.32 6849.56 5237.63 6838.42 5234.3 6829.44 c

f

n

5234.3 6703.06 m

5234.3 6656.67 l

f

n

5234.3 6650.31 m

5233.19 6653.3 5231.29 6657.02 5229.29 6659.32 c

5234.3 6657.51 l

5239.31 6659.32 l

5237.31 6657.02 5235.41 6653.3 5234.3 6650.31 c

f

n

5234.3 6703.06 m

5234.3 6656.67 l

S

n

5234.3 6637.59 m

5230.97 6646.57 5225.28 6657.71 5219.26 6664.61 c

5234.3 6659.18 l

5249.34 6664.61 l

5243.32 6657.71 5237.63 6646.57 5234.3 6637.59 c

f

2.10831 w

n

5398.75 6728.25 m

5398.75 6714.28 5392.48 6702.95 5384.75 6702.95 c

5083.85 6702.95 l

5076.12 6702.95 5069.85 6714.28 5069.85 6728.25 c

5069.85 6802.04 l

5069.85 6816.01 5076.12 6827.34 5083.85 6827.34 c

5384.75 6827.34 l

5392.48 6827.34 5398.75 6816.01 5398.75 6802.04 c

5398.75 6728.25 l

h

S

9.9994 0 0 9.9994 0 0 cm

519.106 674.645 m

/N52 6.98335 Tf

(FIR)

[4.26677 1.94137 5.04187 ] pdfxs

0.100006 0 0 0.100006 0 0 cm

n

5398.75 6542.35 m

5398.75 6528.38 5392.48 6517.05 5384.75 6517.05 c

5083.85 6517.05 l

5076.12 6517.05 5069.85 6528.38 5069.85 6542.35 c

5069.85 6616.14 l

5069.85 6630.12 5076.12 6641.44 5083.85 6641.44 c

5384.75 6641.44 l

5392.48 6641.44 5398.75 6630.12 5398.75 6616.14 c

5398.75 6542.35 l

h

S

9.9994 0 0 9.9994 0 0 cm

513.085 655.678 m

/N48 6.98335 Tf

(O) show

518.517 655.678 m

/N51 6.98335 Tf

(u) show

522.401 655.678 m

/N48 6.98335 Tf

(tp) show

528.225 655.678 m

/N51 6.98335 Tf

(u) show

532.109 655.678 m

/N48 6.98335 Tf

(t) show

Q

q

468.149 0 0 -0.479996 71.9924 592.944 cm

Q

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentNeededResources:

%%+ font Times-Roman

%%+ font Courier

%%+ font Times-Bold

%%+ font Times-Bold

%%+ font Times-Roman

%%+ font ArialMT

%%+ font TimesNewRomanPSMT

%%+ font Times-Italic

%%EOF


%%EndDocument
 @endspecial 3963 2670 a
 currentpoint grestore moveto
 3963 2670 a 2042 2706 1993 3
v 2384 2791 a Fs(Figur)o(e)f(3.)37 b FD(Example)20 b(pipeline)f(with)g
(FIR)e(\002lter)l(.)2042 3105 y(\(e.g.,)27 b Fu(N)g FD(and)h
Fu(weights)p FD(\))e(are)i(equi)n(v)n(alent)h(to)f(parameters)g(passed)
h(to)e(a)2042 3188 y(class)19 b(constructor)l(.)2141
3271 y(In)i(StreamIt,)d(the)j(application)g(de)n(v)o(eloper)g(focuses)g
(on)g(the)f(hierarchi-)2042 3354 y(cal)g(assembly)h(of)g(the)f(stream)h
(graph)g(and)g(its)f(communication)i(topology)-5 b(,)2042
3437 y(rather)18 b(than)h(on)g(the)g(e)o(xplicit)g(management)h(of)e
(the)h(data)g(b)o(uf)n(fers)f(between)2042 3520 y(\002lters.)j
(StreamIt)g(pro)o(vides)i(three)f(hierarchical)h(structures)f(for)g
(compos-)2042 3603 y(ing)29 b(\002lters)f(into)h(lar)o(ger)f(stream)h
(graphs)h(\(see)f(Figure)f(2\).)h(The)g Fy(pipeline)2042
3686 y FD(construct)h(composes)g(streams)f(in)g(sequence,)i(with)d(the)
h(output)h(of)f(one)2042 3769 y(connected)f(to)e(the)g(input)h(of)f
(the)g(ne)o(xt.)g(An)h(e)o(xample)g(of)f(a)g(pipeline)h(ap-)2042
3852 y(pears)19 b(in)g(Figure)g(3.)2141 3935 y(The)41
b Fy(splitjoin)f FD(construct)h(distrib)o(utes)g(data)f(to)h(a)f(set)h
(of)f(parallel)2042 4018 y(streams,)d(which)i(are)f(then)g(joined)h
(together)f(in)g(a)g(roundrobin)i(f)o(ash-)2042 4101
y(ion.)31 b(In)h(a)f(splitjoin,)g(the)h Fy(splitter)f
FD(performs)h(the)g(data)g(scattering,)f(and)2042 4184
y(the)f Fy(joiner)g FD(performs)h(the)f(gathering.)g(A)g(splitter)f(is)
g(a)h(specialized)h(\002l-)2042 4267 y(ter)i(with)g(a)h(single)f(input)
h(and)h(multiple)e(output)h(channels.)h(On)e(e)n(v)o(ery)2042
4350 y(e)o(x)o(ecution)c(step,)f(it)f(can)i(distrib)o(ute)f(its)f
(output)i(to)f(an)o(y)h(one)g(of)f(its)f(chil-)2042 4433
y(dren)32 b(in)g(either)g(a)g Fy(duplicate)g FD(or)g(a)g
Fy(r)m(oundr)m(obin)h FD(manner)l(.)g(F)o(or)e(the)h(for)o(-)2042
4516 y(mer)m(,)f(incoming)i(data)f(are)f(replicated)h(to)g(e)n(v)o(ery)
g(sibling)g(connected)h(to)2042 4599 y(the)24 b(splitter)l(.)e(F)o(or)h
(the)h(latter)m(,)f(data)g(are)h(scattered)g(in)g(a)f(roundrobin)j
(man-)2042 4682 y(ner)m(,)c(with)g(each)h(item)e(sent)i(to)f(e)o
(xactly)h(one)f(child)h(stream,)f(in)g(order)l(.)g(The)2042
4765 y(splitter)h(type)h(and)g(the)g(weights)g(for)f(distrib)o(uting)h
(data)g(to)f(child)h(streams)2042 4848 y(are)i(declared)h(as)g(part)f
(of)g(the)h(syntax)g(\(e.g.,)e Fu(split)44 b(duplicate)25
b FD(or)2042 4932 y Fu(split)44 b(roundrobin\()p Fr(w)2861
4940 y Fq(1)2894 4932 y Fr(;)13 b(:)g(:)g(:)g(;)g(w)3119
4940 y Fp(n)3162 4932 y Fu(\))p FD(\).)k(The)g(splitter)h(counterpart)g
(is)2042 5015 y(the)i(joiner)l(.)g(It)g(is)f(a)h(specialized)h
(\002lter)e(with)h(multiple)g(input)h(channels)g(b)o(ut)2042
5098 y(only)28 b(one)g(output)g(channel.)h(The)e(joiner)h(gathers)f
(data)h(from)g(its)e(prede-)2042 5181 y(cessors)d(in)f(a)g(roundrobin)i
(manner)f(\(declared)g(as)f(part)g(of)g(the)g(syntax\))h(to)2042
5264 y(produce)d(a)f(single)g(output)h(stream.)2141 5347
y(StreamIt)15 b(also)h(pro)o(vides)h(a)e Fy(feedbac)o(k)i(loop)f
FD(construct)g(for)g(introducing)2042 5430 y(c)o(ycles)j(in)g(the)g
(graph.)p eop
%%Page: 3 3
3 2 bop 63 225 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 63 225 a @beginspecial 80 @llx 711 @lly
268 @urx 738 @ury 1880 @rwi @setspecial
%%BeginDocument: ./pipe-with-rates.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (pipe-with-rates.pdf)

%%Version: 1 4

%%CreationDate: (D:20050129103609-05'00')

%%DocumentData: Clean7Bit

%%BoundingBox: 80 711 268 738

%%Pages: 0

%%DocumentProcessColors: Black

%%DocumentNeededResources: (atend)

%%DocumentSuppliedResources: (atend)

%%EndComments

80 711 moveto 268 711 lineto 268 738 lineto 80 738 lineto closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: file Pscript_CFF PSVER

userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict

known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{

false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq

{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{

/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{

/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put

bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc

known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100

dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{

currentpacking true setpacking}if{systemdict/internaldict known{1183615869

systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch

maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def

dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup

/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{

exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2

exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1

exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def

/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{

c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1

c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef

/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0

exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt

or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1

def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{

1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get

/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false

PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse

def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1

yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1

c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform

flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{

c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2

sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{

pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge

and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey

floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform

exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3

y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{

/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink

{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def

/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0

c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}

if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2

transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0

dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0

lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def

erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add

def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2

sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add

def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2

curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking

known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch

restore}{systemdict/internaldict known not{1183615869 userdict/internaldict

get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get

exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict

get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict

/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get

exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}

executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{

currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{

systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict

get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck

get exec}{pop 3}ifelse}ifelse}ifelse}bind def end

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 5.0 6

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 89 dict dup begin put

/docSetupDone false def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_pdfEncodings 2 array def

/_pdf_str1 1 string def

/_pdf_i 0 def

/_pdf_na 0 def

/_pdf_showproc 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_ColorSep5044? false def

/nulldict 0 dict def

/_processColors 0 def

/overprintstack null def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

PDF begin

[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W

/applyInterpFunc/applystitchFunc/domainClip/encodeInput

/initgs/int/limit/rangeClip

/defineRes/findRes/setSA/pl

%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver

/? /! /| /: /+ /GetGlyphDirectory

/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage

/pdf_shfill /pdf_sethalftone

] {null def} bind forall

end

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level1? Level2? not def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

%%EndResource

%%BeginResource: l2compat

%%Version: 5.0 10

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 1

%%Title: Level 1 emulation of level 2 operators

/setcmykcolor isdefined? not

{

/setcmykcolor {

1 sub 4 1 roll

3 {

3 index add neg dup 0 lt { pop 0 } if

3 1 roll

} repeat

setrgbcolor

pop

} bd

} if

/rectclip isdefined? not

{

/rectclip { newpath re clip newpath } bd

} if

/rectfill isdefined? not

{

/rectfill { gsave newpath re fill grestore } bd

} if

/sethalftone isdefined? not

{

/sethalftone {

begin

HalftoneType 1 eq

{ Frequency Angle /SpotFunction load setscreen }

if

end

} bd

} if

Level1?

{

/pdf_show {show} bd

/xshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_xshow

} bd

/yshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_yshow

} bd

/xyshow

{

PDFVars /_pdf_showproc /pdf_show load put

pdf_xyshow

} bd

} if

/getrampcolor {

/indx exch def

[

0 1 NumComp 1 sub {

dup

Samples exch get

dup type /stringtype eq { indx get } if

exch

Scaling exch get aload pop

3 1 roll

mul add

} for

]

L1setcolor

} bd

/sssetbackground { L1setcolor } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 5.0 7

%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

/cm { matrix astore concat } bd

/d /setdash ld

/f /fill ld

/h /closepath ld

/i {dup 0 eq {pop _defaultflatness} if setflat} bd

/j /setlinejoin ld

/J /setlinecap ld

/M /setmiterlimit ld

/n /newpath ld

/S /stroke ld

/w /setlinewidth ld

/W /clip ld

/initgs {

0 setgray

[] 0 d

0 j

0 J

10 M

1 w

false setSA

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

/pdf_flushfilters

{

aload length

{ dup status

1 index currentfile ne and

{ dup flushfile closefile }

{ pop }

ifelse

} repeat

} bd

/pdf_readstring

{

1 index dup length 1 sub get

exch readstring pop

exch pdf_flushfilters

} bind def

/pdf_dictOp

{

3 2 roll

10 dict copy

begin

_Filters dup length 1 sub get def

currentdict exch exec

_Filters pdf_flushfilters

end

} [/_Filters] bld

/pdf_image {{image} /DataSource pdf_dictOp} bd

/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd

/pdf_shfill {{sh} /DataSource pdf_dictOp} bd

/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd

/pdf_maskedImage

{

10 dict copy begin

/miDict currentdict def

/DataDict DataDict 10 dict copy def

DataDict begin

/DataSource

_Filters dup length 1 sub get

def

miDict image

_Filters pdf_flushfilters

end

end

} [/miDict /DataDict /_Filters] bld

/RadialShade {

40 dict begin

/background exch def

/ext1 exch def

/ext0 exch def

/BBox exch def

/r2 exch def

/c2y exch def

/c2x exch def

/r1 exch def

/c1y exch def

/c1x exch def

/rampdict exch def

gsave

BBox length 0 gt {

newpath

BBox 0 get BBox 1 get moveto

BBox 2 get BBox 0 get sub 0 rlineto

0 BBox 3 get BBox 1 get sub rlineto

BBox 2 get BBox 0 get sub neg 0 rlineto

closepath

clip

newpath

} if

c1x c2x eq

{

c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse

}

{

/slope c2y c1y sub c2x c1x sub div def

/theta slope 1 atan def

c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if

c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if

}

ifelse

gsave

clippath

c1x c1y translate

theta rotate

-90 rotate

{ pathbbox } stopped

{ 0 0 0 0 } if

/yMax exch def

/xMax exch def

/yMin exch def

/xMin exch def

grestore

xMax xMin eq yMax yMin eq or

{

grestore

end

}

{

rampdict begin

40 dict begin

background length 0 gt { background sssetbackground gsave clippath fill grestore } if

gsave

c1x c1y translate

theta rotate

-90 rotate

/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def

/c1y 0 def

/c1x 0 def

/c2x 0 def

ext0 {

0 getrampcolor

c2y r2 add r1 lt

{

c1x c1y r1 360 0 arcn

xMin yMin moveto

xMax yMin lineto

xMax yMax lineto

xMin yMax lineto

xMin yMin lineto

eofill

}

{

c2y r1 add r2 le

{

c1x c1y r1 0 360 arc

fill

}

{

c2x c2y r2 0 360 arc fill

r1 r2 eq

{

/p1x r1 neg def

/p1y c1y def

/p2x r1 def

/p2y c1y def

p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto

fill

}

{

/AA r2 r1 sub c2y div def

/theta AA 1 AA dup mul sub sqrt div 1 atan def

/SS1 90 theta add dup sin exch cos div def

/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def

/p1y p1x SS1 div neg def

/SS2 90 theta sub dup sin exch cos div def

/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def

/p2y p2x SS2 div neg def

r1 r2 gt

{

/L1maxX p1x yMin p1y sub SS1 div add def

/L2maxX p2x yMin p2y sub SS2 div add def

}

{

/L1maxX 0 def

/L2maxX 0 def

}ifelse

p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto

L1maxX L1maxX p1x sub SS1 mul p1y add lineto

fill

}

ifelse

}

ifelse

} ifelse

} if

c1x c2x sub dup mul

c1y c2y sub dup mul

add 0.5 exp

0 dtransform

dup mul exch dup mul add 0.5 exp 72 div

0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

1 index 1 index lt { exch } if pop

/hires exch def

hires mul

/numpix exch def

/numsteps NumSamples def

/rampIndxInc 1 def

/subsampling false def

numpix 0 ne

{

NumSamples numpix div 0.5 gt

{

/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def

/rampIndxInc NumSamples 1 sub numsteps div def

/subsampling true def

} if

} if

/xInc c2x c1x sub numsteps div def

/yInc c2y c1y sub numsteps div def

/rInc r2 r1 sub numsteps div def

/cx c1x def

/cy c1y def

/radius r1 def

newpath

xInc 0 eq yInc 0 eq rInc 0 eq and and

{

0 getrampcolor

cx cy radius 0 360 arc

stroke

NumSamples 1 sub getrampcolor

cx cy radius 72 hires div add 0 360 arc

0 setlinewidth

stroke

}

{

0

numsteps

{

dup

subsampling { round cvi } if

getrampcolor

cx cy radius 0 360 arc

/cx cx xInc add def

/cy cy yInc add def

/radius radius rInc add def

cx cy radius 360 0 arcn

eofill

rampIndxInc add

}

repeat

pop

} ifelse

ext1 {

c2y r2 add r1 lt

{

c2x c2y r2 0 360 arc

fill

}

{

c2y r1 add r2 le

{

c2x c2y r2 360 0 arcn

xMin yMin moveto

xMax yMin lineto

xMax yMax lineto

xMin yMax lineto

xMin yMin lineto

eofill

}

{

c2x c2y r2 0 360 arc fill

r1 r2 eq

{

/p1x r2 neg def

/p1y c2y def

/p2x r2 def

/p2y c2y def

p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto

fill

}

{

/AA r2 r1 sub c2y div def

/theta AA 1 AA dup mul sub sqrt div 1 atan def

/SS1 90 theta add dup sin exch cos div def

/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def

/p1y c2y p1x SS1 div sub def

/SS2 90 theta sub dup sin exch cos div def

/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def

/p2y c2y p2x SS2 div sub def

r1 r2 lt

{

/L1maxX p1x yMax p1y sub SS1 div add def

/L2maxX p2x yMax p2y sub SS2 div add def

}

{

/L1maxX 0 def

/L2maxX 0 def

}ifelse

p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto

L1maxX L1maxX p1x sub SS1 mul p1y add lineto

fill

}

ifelse

}

ifelse

} ifelse

} if

grestore

grestore

end

end

end

} ifelse

} bd

/GenStrips {

40 dict begin

/background exch def

/ext1 exch def

/ext0 exch def

/BBox exch def

/y2 exch def

/x2 exch def

/y1 exch def

/x1 exch def

/rampdict exch def

gsave

BBox length 0 gt {

newpath

BBox 0 get BBox 1 get moveto

BBox 2 get BBox 0 get sub 0 rlineto

0 BBox 3 get BBox 1 get sub rlineto

BBox 2 get BBox 0 get sub neg 0 rlineto

closepath

clip

newpath

} if

x1 x2 eq

{

y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse

}

{

/slope y2 y1 sub x2 x1 sub div def

/theta slope 1 atan def

x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if

x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if

}

ifelse

gsave

clippath

x1 y1 translate

theta rotate

{ pathbbox } stopped

{ 0 0 0 0 } if

/yMax exch def

/xMax exch def

/yMin exch def

/xMin exch def

grestore

xMax xMin eq yMax yMin eq or

{

grestore

end

}

{

rampdict begin

20 dict begin

background length 0 gt { background sssetbackground gsave clippath fill grestore } if

gsave

x1 y1 translate

theta rotate

/xStart 0 def

/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def

/ySpan yMax yMin sub def

/numsteps NumSamples def

/rampIndxInc 1 def

/subsampling false def

xStart 0 transform

xEnd 0 transform

3 -1 roll

sub dup mul

3 1 roll

sub dup mul

add 0.5 exp 72 div

0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt

1 index 1 index lt { exch } if pop

mul

/numpix exch def

numpix 0 ne

{

NumSamples numpix div 0.5 gt

{

/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def

/rampIndxInc NumSamples 1 sub numsteps div def

/subsampling true def

} if

} if

ext0 {

0 getrampcolor

xMin xStart lt

{ xMin yMin xMin neg ySpan rectfill } if

} if

/xInc xEnd xStart sub numsteps div def

/x xStart def

0

numsteps

{

dup

subsampling { round cvi } if

getrampcolor

x yMin xInc ySpan rectfill

/x x xInc add def

rampIndxInc add

}

repeat

pop

ext1 {

xMax xEnd gt

{ xEnd yMin xMax xEnd sub ySpan rectfill } if

} if

grestore

grestore

end

end

end

} ifelse

} bd

%%EndResource

%%BeginResource: procset sep_ops

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044

userdict /sep_ops 50 dict dup begin put

/bdef {bind def} bind def

/xdef {exch def} bdef

/colorimagebuffer {

0 1 2 index length 1 sub {

dup 2 index exch get 255 exch sub 2 index 3 1 roll put

} for

} bdef

/addprocs {

[ 3 1 roll

/exec load

dup 3 1 roll

] cvx

} bdef

/L1? {

systemdict /languagelevel known {

systemdict /languagelevel get 2 lt

}{

true

} ifelse

} bdef

/colorexists {

statusdict /processcolors known {

statusdict /processcolors get exec

}{

/deviceinfo where {

pop deviceinfo /Colors known {

deviceinfo /Colors get

statusdict /processcolors {

deviceinfo /Colors known {

deviceinfo /Colors get

}{

1

} ifelse

} put

}{

1

} ifelse

}{

1

} ifelse

} ifelse

1 gt

} bdef

/colorplate colorexists { 0 } { 5 } ifelse def

/negativecolorplate false def

/setcmykcolor where {

pop

gsave

1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub

0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub

4 {4 copy} repeat

grestore

1 dict begin

/foureq {

4 index eq 8 1 roll

4 index eq 8 1 roll

4 index eq 8 1 roll

4 index eq 8 1 roll

pop pop pop pop and and and

} def

1 0 0 0 foureq {/colorplate 1 store} if

0 1 0 0 foureq {/colorplate 2 store} if

0 0 1 0 foureq {/colorplate 3 store} if

0 0 0 1 foureq {/colorplate 4 store} if

0 0 0 0 foureq {/colorplate 6 store} if

end

} if

0 systemdict /currenttransfer get exec exec

1 systemdict /currenttransfer get exec exec

2 copy

eq

{

/colorplate 6 store

pop

/negativecolorplate exch 0.5 lt store

}

{

gt /negativecolorplate exch store

}

ifelse

/findcmykcustomcolor where { pop }

{

/findcmykcustomcolor {

[ 6 1 roll ] readonly

} bdef

} ifelse

/setoverprint where {

pop

}{

/setoverprint {

pop

} bdef

} ifelse

/currentoverprint where {

pop

}{

/currentoverprint {

false

} bdef

} ifelse

/setcustomcolor where {

pop

}{

L1? {

/setcustomcolor {

exch

aload pop pop

4 { 4 index mul 4 1 roll } repeat

5 -1 roll pop

setcmykcolor

} bdef

}{

/setcustomcolor {

exch

[ exch /Separation exch dup 4 get exch /DeviceCMYK exch

0 4 getinterval

[ exch /dup load exch cvx {mul exch dup}

/forall load /pop load dup] cvx

] setcolorspace setcolor

} bdef

} ifelse

} ifelse

/ik 0 def

/iy 0 def

/im 0 def

/ic 0 def

/imagetint {

ic .3 mul

im .59 mul

iy .11 mul

ik add add add dup

1 gt {pop 1} if

} bdef

/setcmykcolor where {

pop

}{

/setcmykcolor {

/ik xdef /iy xdef /im xdef /ic xdef

imagetint

1 exch sub setgray

} bdef

} ifelse

/customcolorimage where {

pop

}{

L1? {

/customcolorimage{

gsave

colorexists {

aload pop pop

/ik xdef /iy xdef /im xdef /ic xdef

currentcolortransfer

{ik mul ik sub 1 add} addprocs

4 1 roll {iy mul iy sub 1 add} addprocs

4 1 roll {im mul im sub 1 add} addprocs

4 1 roll {ic mul ic sub 1 add} addprocs

4 1 roll setcolortransfer

/magentabuf 0 string def

/yellowbuf 0 string def

/blackbuf 0 string def

{

colorimagebuffer dup length magentabuf length ne

{

dup length dup dup

/magentabuf exch string def

/yellowbuf exch string def

/blackbuf exch string def

} if

dup magentabuf copy yellowbuf copy

blackbuf copy pop

} addprocs

{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage

}{

aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint

imagetint def

currenttransfer

{tint mul 1 tint sub add} addprocs settransfer image

} ifelse

grestore

} bdef

}{

/customcolorimage {

gsave

[ exch /Separation exch dup 4 get exch /DeviceCMYK exch

0 4 getinterval

[ exch /dup load exch cvx {mul exch dup}

/forall load /pop load dup] cvx

] setcolorspace

10 dict begin

/ImageType 1 def

/DataSource exch def

/ImageMatrix exch def

/BitsPerComponent exch def

/Height exch def

/Width exch def

/Decode [1 0] def

currentdict end

image

grestore

} bdef

} ifelse

} ifelse

/setseparationgray where {

pop

}{

L1? {

/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef

}{

/setseparationgray {

[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace

1 exch sub setcolor

} bdef

} ifelse

} ifelse

/separationimage where { pop }

{

/separationimage {

gsave

1 1 1 1 (All)

findcmykcustomcolor customcolorimage

grestore

} bdef

} ifelse

currentdict readonly pop end

%%EndResource

%%BeginResource: procset pdflev15044

%%Version: 5.0 13

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 1

%%Title: PDF operators, Level 1, with emulated separations (TN 5044)

/_ColorSep5044? true dd

/docinitialize {

PDF begin

/_defaulthalftone

/currenthalftone where

{ pop currenthalftone }

{ 4 dict dup begin

currentscreen

/SpotFunction exch def

/Angle exch def

/Frequency exch def

/HalftoneType 1 def

end }

ifelse

dd

/currentcolortransfer where

{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }

{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }

ifelse

end

} bd

/initialize {

/overprintstack null dd

sep_ops begin

50 dict begin

_defaulthalftone sethalftone

} bd

/terminate {

end end

} bd

/currentcolortransfer where

{ pop }

{

/setcolortransfer

{

settransfer pop pop pop

} bd

} ifelse

/pl {

transform

0.25 sub round 0.25 add exch

0.25 sub round 0.25 add exch

itransform

} bd

/m { _sa? { pl } if moveto } bd

/l { _sa? { pl } if lineto } bd

/c

{

_sa? {3 {pl 6 2 roll} repeat} if

curveto

} bd

/ri/pop ld

/setSA { /_sa? xdd } bd

/re

{

_sa?

{

8 dict begin

/:h exch def

/:w exch def

/:y exch def

/:x exch def

:x :y pl

/:ymin exch def /:xmin exch def

:x :w add :y :h add pl

/:ymax exch def /:xmax exch def

:xmin :ymin moveto

:xmax :ymin lineto

:xmax :ymax lineto

:xmin :ymax lineto

closepath

end

}

{

4 2 roll moveto

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

closepath

} ifelse

} bd

/q

{

gsave

[currentoverprint overprintstack] /overprintstack xdd

}

[/overprintstack] bld

/Q

{

overprintstack aload pop /overprintstack xdd setoverprint

grestore

}

[/overprintstack] bld

/AlmostFull?

{ dup maxlength exch length sub 2 le

} bd

/Expand

{ 1 index maxlength mul cvi dict

dup begin exch { def } forall end

} bd

/xput

{ 3 2 roll

dup 3 index known not

{ dup AlmostFull? { 1.5 Expand } if

} if

dup 4 2 roll put

} bd

/defineRes

{ _categories 1 index known not

{ /_categories _categories 2 index 10 dict xput store

} if

_categories exch 2 copy get 5 -1 roll 4 index xput put

} bd

/findRes {

_categories exch get exch get

} bd

/L1setcolor {

aload length

dup 0 eq

{ pop .5 setgray }

{ dup 1 eq

{ pop setgray }

{ 3 eq

{ setrgbcolor }

{ setcmykcolor }

ifelse }

ifelse }

ifelse

} bind dd

/concattransferfuncs {

[ 3 1 roll /exec load exch /exec load ] cvx

} bd

/concatandsettransfer {

/_defaulttransfer load concattransferfuncs settransfer

} bd

/concatandsetcolortransfer {

colorplate 0 eq

{

_defaultcolortransfer aload pop

8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll

6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll

4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll

concattransferfuncs

setcolortransfer

} if

colorplate 1 ge colorplate 4 le and

{

4 colorplate sub index 4 { exch pop } repeat

concatandsettransfer

} if

colorplate 5 ge

{

0 index 4 { exch pop } repeat

concatandsettransfer

} if

} bd

/tn5044sethalftone

{

begin

HalftoneType 5 eq

{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]

colorplate get

here not {

/Default here not { currentdict } if

} if

}

{ currentdict }

ifelse

end

begin

/TransferFunction here

{

concatandsettransfer

currentdict dup length dict

begin

{

1 index /TransferFunction ne { def } { pop pop } ifelse

} forall

currentdict

end

}

{

currentdict

} ifelse

end

sethalftone

} bd

/paintimage

{

colorplate 0 eq

{

{ {currentfile cyanstr readstring pop}

{currentfile magentastr readstring pop}

{currentfile yellowstr readstring pop}

{currentfile blackstr readstring pop

currentfile graystr readstring pop pop}

}

{ {currentfile cyanstr readhexstring pop}

{currentfile magentastr readhexstring pop}

{currentfile yellowstr readhexstring pop}

{currentfile blackstr readhexstring pop

currentfile graystr readhexstring pop pop}

} ifelse

true 4 colorimage

}

{

3 dict begin

/binaryOK exch def

[

1 1 5 {

dup

/currentfile cvx

[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]

3 -1 roll 1 sub get cvx

binaryOK { /readstring } { /readhexstring } ifelse cvx

/pop cvx

5 -1 roll

colorplate dup 5 gt { pop 5 } if

eq not { /pop cvx } if

} for

] cvx bind

end

[

colorplate 6 eq {

/pop cvx

negativecolorplate { 0 } { 1 } ifelse

} if

colorplate 4 le

{

1 /exch cvx /sub cvx

} if

colorplate 6 ne

{

systemdict /currenttransfer get exec

aload pop

} if

] cvx

gsave

systemdict /settransfer get exec

systemdict /image get exec

grestore

} ifelse

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 5.0 6

%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 78 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

} bd

/terminate { end } bd

Level2?

{

/_safeput

{

3 -1 roll load 3 1 roll put

}

bd

}

{

/_safeput

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

3 -1 roll load 3 1 roll put

}

bd

}

ifelse

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

Level2? {currentglobal true setglobal} if

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

Level2? {setglobal} if

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

currentdict /PaintType known

{ PaintType 2 eq {/PaintType 0 def} if }

if

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

Level2?

{

currentdict /pdf_origFontName undef

} if

FontName currentdict

end

definefont pop

}

bd

Level2?

{

/TZG

{

currentglobal true setglobal

2 index _pdfFontStatus

{

2 index findfont

false setglobal

3 index findfont

true setglobal

ne

{

2 index findfont dup rcheck

{

dup length dict begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

currentdict end

}

if

3 index exch definefont pop

}

if

} if

setglobal

TZ

} bd

}

{

/TZG {TZ} bd

} ifelse

Level2?

{

currentglobal false setglobal

userdict /pdftext_data 5 dict put

pdftext_data

begin

/saveStacks

{

pdftext_data

begin

/vmmode currentglobal def

false setglobal

count array astore /os exch def

end

countdictstack array dictstack pdftext_data exch /ds exch put

cleardictstack pdftext_data /dscount countdictstack put

pdftext_data /vmmode get setglobal

} bind def

/restoreStacks

{

pdftext_data /vmmode currentglobal put false setglobal

clear cleardictstack

pdftext_data /ds get dup

pdftext_data /dscount get 1 2 index length 1 sub

{ get begin dup } for

pop pop

pdftext_data /os get aload pop

pdftext_data /vmmode get setglobal

} bind def

/testForClonePrinterBug

{

currentglobal true setglobal

/undefinedCategory /Generic /Category findresource

dup length dict copy /Category defineresource pop

setglobal

pdftext_data /saveStacks get exec

pdftext_data /vmmode currentglobal put false setglobal

/undefined /undefinedCategory { resourcestatus } stopped

pdftext_data exch /bugFound exch put

pdftext_data /vmmode get setglobal

pdftext_data /restoreStacks get exec

pdftext_data /bugFound get

} bind def

end

setglobal

/pdf_resourcestatus

pdftext_data /testForClonePrinterBug get exec

{

{

pdftext_data /saveStacks get exec

pdftext_data /os get dup dup length 1 sub

dup 1 sub dup 0 lt { pop 0 } if

exch 1 exch { get exch dup } for

pop pop

{ resourcestatus }

stopped

{

clear cleardictstack pdftext_data /restoreStacks get exec

{ pop pop } stopped pop false

}

{

count array astore pdftext_data exch /results exch put

pdftext_data /restoreStacks get exec pop pop

pdftext_data /results get aload pop

}

ifelse

}

}

{ { resourcestatus } }

ifelse

bd

}

if

Level2?

{

/_pdfUndefineResource

{

currentglobal 3 1 roll

_pdf_FontDirectory 2 index 2 copy known

{undef}

{pop pop}

ifelse

1 index (pdf) exch _pdfConcatNames 1 index

1 index 1 _pdfConcatNames 1 index

5 index 1 _pdfConcatNames 1 index

4

{

2 copy pdf_resourcestatus

{

pop 2 lt

{2 copy findresource gcheck setglobal undefineresource}

{pop pop}

ifelse

}

{ pop pop}

ifelse

} repeat

setglobal

} bd

}

{

/_pdfUndefineResource { pop pop} bd

}

ifelse

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font pdf_resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category pdf_resourcestatus

{

pop pop

/CIDFont pdf_resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckCIDSystemInfo

{

1 index _pdfTextTempString cvs

(Identity) anchorsearch

{

pop pop pop pop true

}

{

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

exch /CIDFont findresource

/CIDSystemInfo get

3 -1 roll /CMap findresource

/CIDSystemInfo get

exch

3 -1 roll

{

2 copy

/Supplement get

exch

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ true }

ifelse

{

dup /Registry get

2 index /Registry get eq

{

/Ordering get

exch /Ordering get

dup type /arraytype eq

{

1 index type /arraytype eq

{

true

1 index length 1 sub -1 0

{

dup 2 index exch get exch 3 index exch get ne

{ pop false exit}

if

} for

exch pop exch pop

}

{ pop pop false }

ifelse

}

{

eq

}

ifelse

}

{ pop pop false }

ifelse

}

{ pop pop false }

ifelse

}

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap pdf_resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckCIDSystemInfo

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

{

exch _wmode _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

Level2?

{

/Tf {

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

selectfont

} bd

}

{

/Tf {

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

exch findfont exch

dup type /arraytype eq

{makefont}

{scalefont}

ifelse

setfont

} bd

}

ifelse

/cshow where

{

pop /pdf_cshow /cshow load dd

/pdf_remove2 {pop pop} dd

}

{

/pdf_cshow {exch forall} dd

/pdf_remove2 {} dd

} ifelse

/pdf_xshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

_pdf_x _pdf_y moveto

0

rmoveto

}

ifelse

_pdf_i 1 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdf_yshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

_pdf_x _pdf_y moveto

0 exch

rmoveto

}

ifelse

_pdf_i 1 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdf_xyshow

{

/_pdf_na xdd

/_pdf_i 0 dd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 /_pdf_showproc load exec

{_pdf_na _pdf_i get} stopped

{ pop pop }

{

{_pdf_na _pdf_i 1 add get} stopped

{ pop pop pop}

{

_pdf_x _pdf_y moveto

rmoveto

}

ifelse

}

ifelse

_pdf_i 2 add /_pdf_i xdd

currentpoint

/_pdf_y xdd

/_pdf_x xdd

}

exch

pdf_cshow

} bd

/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd

/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd

/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd

Level2? _ColorSep5044? not and

{

/pdfxs {{xshow} stopped {pdfl1xs} if} bd

/pdfys {{yshow} stopped {pdfl1ys} if} bd

/pdfxys {{xyshow} stopped {pdfl1xys} if} bd

}

{

/pdfxs /pdfl1xs load dd

/pdfys /pdfl1ys load dd

/pdfxys /pdfl1xys load dd

} ifelse

/pdf_charpath {false charpath} bd

/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd

/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd

/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd

/pdf_strokepath

{

{

pdf_remove2

_pdf_str1 exch 0 exch put

_pdf_str1 false charpath

currentpoint S moveto

} bind

exch pdf_cshow

} bd

/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd

/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd

/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd

Level2? {currentglobal true setglobal} if

/d0/setcharwidth ld

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap PDFText /pdf_resourcestatus get exec

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

Level2? {setglobal} if

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

Level2? {currentglobal true setglobal} if

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

Level2? {setglobal} if

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%IncludeResource Times-Italic

[/N95/Times-Italic -1 TZ

%%IncludeResource Times-Bold

[/N86/Times-Bold -1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

80 711 188 27 rectclip

%%BeginResource: font LBAAAA+ArialMT~49

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /LBAAAA+ArialMT~49 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE28CAFC5834F2BDD4F5

7890771F2626955E8E31B9B102DFE0DE3D5BC8643999629E92145B0B3C8DD59A

193E13C8D5D508CCCBF4F180AE63C67D875C22A12E8BEC2E5E9C9F4C84B63DB1

D75BEA59FE029A426DA507D81938E1889DA8CDB07AC8F1B3680EB9D882C72869

6AB1EFE6B842A5ECED535D63C02523B3ACC0ADB6F41145BC3336E8EE7EB81177

EF9CE325AFFAC2D425D8C4FF80333E9E4DC5DE29329F0BC2DEBDA9D27BCC9720

3EC628AC5B14594E7512BF6F96A4547DDDEF79FCAA9E631FB2F3F7734DDC0948

2D4BB662A211D4A364A714DA671EDA517FE4A9F782E22346F2DE6A72DDDF8DA8

F350BB16E528EEFF086916A7FF1F10AB39E44BD5A4DD5979A6A0461C9DA74D6A

FEA53B6078C4001133778A3E39CE3A312A9FE81A5780F301D7E58DE90E825FF2

98BA61CD69AB128B3060BFA05B758CF4D641300BF6

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/LBAAAA+ArialMT~49 findfont /Encoding get

dup 0 /.notdef put

pop

end

/LBAAAA+ArialMT~49 findfont /Encoding get

dup 0 /.notdef put

dup 66 /B put

pop

%%EndResource

[/N37/LBAAAA+ArialMT~49 -1 TZ

%%BeginResource: font PBAAAA+ArialMT~46

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /PBAAAA+ArialMT~46 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE2B76D6E07D762F301E

4419ED13B4046212BF00D22BE740ED10DCEEE60DBA7B0603C0F2EE58890DD193

C668D0808428F6CB6DDB769CC9B96678E1A2D591B6237A100E6EF88E44D71305

17EDE896F3A76874C5B144FAD388FB6BDA65554F2C7771FB67B2B179EADD3029

12AC1E90AF49A9BD7EC813AD7C0D649C7410ACC355438AF16FAFE33245657408

0B623499ABD2648B24AEB18AA8FE5BAA06F58B33C1D01DD5F008ABFD16866654



0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/PBAAAA+ArialMT~46 findfont /Encoding get

dup 0 /.notdef put

pop

end

/PBAAAA+ArialMT~46 findfont /Encoding get

dup 0 /.notdef put

dup 65 /A put

pop

%%EndResource

[/N41/PBAAAA+ArialMT~46 -1 TZ

%%BeginResource: font XDAAAA+ArialMT~90

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /XDAAAA+ArialMT~90 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69AFD5C814A372AF455C4A99B19E1FF14974149A341EA4612524B39A

FB1720582B4081668B4FC51F42F7515D851BE9C2DD7C10755A5E80CCE6E6AAAA

9A8EE3041BB386820E0F33336E657973EB0CF6DAFD87C2B7AB3E245FDFB7ACAB

70C63C787126E613AD5B19F74493D525C332EE0DCD0C537D908ADE8717741338

181D1BA952BBB1055B42D4CC9D78C7B85CDF2361ED2DE8C961A2085E464D94C1

F59FC21DABE670E3CE1C2ED76F345A9E878F7DFA3535A6CC4A9353E15F7DC580

1CE9B3B3E599101B4F29D04236AB7E1FB86D110ADD563E193C4C1616FBC13F31

48BF378BB55902D798AC5CC2153321FE2B0600A7340FF81934DE752647951605

7744EB48B461E787620E29C7D6F40AB6F1F666206933ACDCC4BD19B43AD298B4

1FCE37FE21385F61AB01EC238BE7C5B136D96D61DC3246F65EFBD8E109E83E96

7FB892CFE66D1A1D80F15FC558D512857BCD5C84E7AFDEB6E35E6156CFBA7FBE

84D7F94D9A6D21705BA302BDF470D035A9D7C8A998CA489D1B12C7A001A6DF5A

5172FB611CDEB4BB18FF78219BC0097B344316CD5B72361C3D5C1EB9E6424B4B

A9EEA131BB41BE2EA84EFD0D6B7020C098161A9B7333A25C921950EC23DBABC0

E90C1A49DBEC16ADC6AF804D02D94522D71D28103771EB5D0B1E6EBEC0A566E7

091DFE5173BF32ADD31CB2443CBC189C3418A88F6D53723A381D9ECC5021ACD2

C6D89C6FA73FE32CC5867747F26CF3FCAA95B450FDFBE197C3171CC129C44DD0

A780D378852301C30A628428B1432782BDAE90C5937B7B4174AD5AAA3A0C1996

6B0BBEF50D3DEE3E332FD6F84FB8D677CBBC540A08BFB64E07E9726C1EFBFA3D

CD84D67872126FA22F8BDA972BFF5CA5AF6D033414131A422883A1878F35BA65

B8C3F33BA08329A2078E7B3A07F56C20B65AEE88A6D1F13FF3093047D8F74E08

D8EEAA1E6E33ECFCB0745E2FE5CCD1FB0832F393F4F45EC22D7FD84EC3ED864E

5222FA97AA7D7594AA93C8B2EAC6CE6CFE9E52F58E1D74C009DA042F2E346D77

4D71D4341812C1B8BFF3B06C8152FC83B1A6B82A321A1D72AAC61DE029FB3B60

8525D05CF0007BE224E47829217A3E6FAFFD4BC2BBB6D69FA5339BBFCF32084D

55F106EFF26C1674C93B43C78112CF3C1168AA179BA2A65C69E48995E939086F

0C617454B6F2B5B6EE5534CCD526B7456E30DE19FBF389DDFA0D757C5F73D9B9

F2ACF33CFD71E7C3FAD4710875408B2EEBF4059AE0DB2B7C28D2C9A6F6EEC5A3

E33AB31A435BCEB5D05BC1EE6B6B8FC047BEA701AAAC78A2AECA377A529A50B7

14C1AE717CCA54E95EC77B8FA7C55449EFDB554D01BEA01DEEE5AF590A44489F

E8D7CA0824F3D21CF35F3AAC528CD6E16157058DD484502EAA916994F5BF504B

9A9AE2618C876440D1445DC83A6B26C9E7659A02E6E3C4C97A28D424B0941FB8

F75B91DA2227AE65942AF5A9E387378D3E82AE5A2D1254E31A0ADCEF161839E1

62550990169B6CD6AE2D70DD2ACA0973F10EC18E54955BE58A57D6D40114567D

A54235FECA51B87D820CC89DA38F9EC265A7893B7D91100D03400246EC805D91

A5EDD13CEDD011E926CAEE3455F0DF74F8BF347FBD7FE1869A90191E1471446A

A269541B770AF8797CFE5C03B7B78BCE9492D8107EBE4CE53FB16DCBC1932F4D

F964913698DCCF7F588ECB386BFE30653C33A2B334C08CA6DB7B05F6EF3DFB3F

0A25B8CD4704D5EA6894B1D914E6206804FBCD383F619882E841074199700E8D

F9AFA8E9F54A8FED9668CEB7763FB6E71E74578CCACF5B6E015F33697D539166

2A25E8E91DE38ABA911BA3BBD8EDD5D925B420E2E995C4440D06E4E98289E8CA

5BEEC53826172386D6D78F6E3F1AB7

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/XDAAAA+ArialMT~90 findfont /Encoding get

dup 0 /.notdef put

pop

end

/XDAAAA+ArialMT~90 findfont /Encoding get

dup 0 /.notdef put

dup 65 /A put

dup 97 /a put

dup 99 /c put

dup 103 /g put

dup 108 /l put

dup 110 /n put

dup 112 /p put

dup 114 /r put

pop

%%EndResource

[/N101/XDAAAA+ArialMT~90 -1 TZ

%%BeginResource: font VTTDMA+CMR9

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 13 dict dup begin

/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def

/FullName (CMR9) def

/FamilyName (Computer Modern) def

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /VTTDMA+CMR9 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { -39 -250 1036 750 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323

00A152553EC9C9C51591C81C6325A8F1E39454C5C5CD7DD32FFDCAA0C98A471D

864F21BA3C1B9AB1A487DF489FCED13A759AC6D527220B09E5C662269D43162B

1C47D4A5CBFB0633655E0B882B6CB0B8386CBC5142ED5E3581051D6952C2D60E

CC016F88AA5C2C88A02AD3E7621E87AFA4B88E9149CBFC744342E35BF29B4E2D

48E22FB32FF8C291AD36157A0297D947D6968BAADE6D12889CFE94CA20EEB67D

929271B1BCD34B14DCBB9EACF17A4E9F396DD185CFCBA17A152CA58F58C95B2F

4FB0CDD5B374314B231A26B704ED77D5395B854D9B97B43B0D727A263EE297F2

AED166F14D1CBB97ED2121684A869046C73340CC7A3772394DB3BE2B7B5183D2

263E473D05DB21D6EB090441E61E7F3B43CF4B4D77E5D081509813D8F4635A8B

F1D13980FA3B1033D66534369AEB655E51DD9889225463CF2588752E30A4583A

EB8E1C94CE4DBD5A717AE12476A2915D4C3F3821D6E7509EFA0AE8CF477B99B0

2E1DF9BCA01158EFC8A000A15829F41C460FA96204A4AAE49C4BAEF9EC2DB864

20127593D5734BC3D8EB48AECB09F8C435B8009447431704B1EC56B1787433D9

5AC7D1CE78C15F290B8464DA36B276BD93AD64CBD0E8D883A45CB4FED7D390FF

2EEB3E297E183D1D1B261DD39C39F8EF6B4837D76877B603AD5CCEAC0ACD6971

76290ED011246C46F83D7387DCFC07DA68F1E24B3714714D805E4666B04EC09E

DB630AC9BC8341E3585F8B5931BB7A296C2BFCBA66CD6D8FBD1893FA5CF8AB81

BFB1C91FB884C4D1C09E8057146FEC94B6C5F9D67C25DD5A91A02730A9777C5B

5FC37F416B559E568AF7A513D2E5CBE66166E21AACDFEA21AEA0C0A8FC4ECDEB

F9EA823693B1EA7A227AD938C588EC266C44F8E39571EC48A1E6439AE189C361

91EAE542781515762095E0384A1E533460C2F35EADC4447C126463BAB799AF47

CCE8B6918A97999B1593C29FA5CB3657B34E1F8F2E9259F1326AFEEA92A94FA4

2ACFEB128512ADFD36A58AB73C0716203E9051B0EC66D977DE79405DA286B31D

6841978EDB690C09AE20057C8641257837026026CAEE208E9DB1B7CFC2C62BC4

A4B44815ACF6BD53C47FE4167F68BA59165B24AFF8B24A7C6A2ABA81CCE12045

A9494AEE81373E63C78CB27CE4C7F3A161C781AEAA9A6704C355EBC7846A3BBA

09A7E163A9C7AAC14D0BEA691B21EB1C51C34540AFE142645169BE5AC55756BE

77666363246DCF80408FABE14467A9CEA376DF14713082C430965555F17DF666

7A69871787CD976801571FAE4FF0609795203559AFCD64A2F09D9E65A1A2E535

83715360B00F9224AA7E50EE43435C0F7ADD01957E4B7A68359259582DFB6FA2

94D297DCD7C7E85593633FEAECDAC9E8B5456424BCB743ACF6DDA8516CBDC03A

E13AD87A3EAD00C700312A43212B235B3C4C35625A097BEC439021F2DFAD26B8

495D8F237AA8EF4C8A94359A231C6C4BA16AA8B3311935650820109755A9707A

B4E327E8DC8D91DB1F9943C1D15833D6859108EC951CD4548CD185B287C23135

593558B55D540FA1A9B16C979CDB6DC2DE681378D0E5945D75D7A25DC3624337

1A80DF908D587AAB21753A0C7AEDADCCCC32CD4A795C333611F682B997893708

98BC9700BBCB98F52C5F5C89BAC07749E3D2072152215E6EFF9289AD7DDAE403

ACF6B13D9C930AEF0EB68ED57D95F452BCC7BBD849D0B76C85AFBCF776B6560F

38101D0A933CECD0D93D47E5E911CA838910FD92F9AFCD3B78D6835B8D431E2C

F8AAA3EA87A9800833B1E72B7350A2D0A4EB155B6FEFF1D400F499D5191F7E34

B9E846B3CC8DF4AE349C75E4319EA302440872A49CB58971EB16837B17E05911

9E8F5EBBA5D1B31438CABE39291154E7CEF6DA8B891AEDFF9951D41650B30DE6

BA23DF89D5019CB1BF0C974DA7CF0CE8CA16A2B8723CCB407480BF6ECE45E806

A05B97F8A3ECD9431A36584E293AE677C2F2A1E631795D7D8BD5BAB2D858DCB9

176AAFDC8D2407915A5C50D8BD67A69EC4932FFE91020E4EE8C2041F19E5E3AB

972F5811B7473C68F1EAFD5085DB19AEBA9260F3F5A034F7C72B42F14BCDEF9F

4E34B4BFE1F4D2E521013D38B29392E4B8A6D9E62B332D5E89EF93FA9D223329

2C15EAE427D9CE1946C2752F5C7C9FFE6590DDF045A5200B8DF73D76BE97A06C

3D44794BF92F15C0AC1608E180F714492B94A302AD876885D03D09F9F84714C9

873A7BD26723F492E7BF9D0F68D6FF122D9C6608A093106400CD501F05F44193

1BDB3A36CC55723F102BC1564B518BDEF6ACB6F145BCD4032387893CC7B59164

12C45BE13410B603BE4EB3FA18D7F7A890CD27E16E153FC7CC6467714561575E

BC1F6ADA39B95546DD644F4A9D51EF749D693D0A9280C8578C8CAB01F2414D76

6FC1BFA8265E397BE99FD652DEC5F0B27EB67D712874132C9CC8AE49A0F6D5BE

79F4497A1783A6CFBDCAAD56562492F2A9A13B38992DB73FCF43294AF0FB6D55

0E860DE4CC29B3B1EB860D12A0752A991D7B430B78EB33B6C289558E6992059D

469C366706E195A520CFB90CA329F60119C0DD29B8687B5B0E8306A13A8E0CC2

E80AB8A2BB310DAEB4D7BF0A91CE8ED72ABA538C619E6B4F9D67CD206755C6CF

F645D5732A54F8E0634FF379D5612A4DAC3ABC81D4FE61942B4B3F8EBF3D7FA9

E8329E84E274E82F712FA6B8C222397F0802A3BF8B588DE3F5FD9EAF491A84B6

111C7D9A1EB3FFB3B59311904A829CFBF91C7C2339170CC07529BD574B7A5B81

936E82346F4713434216E2D8BD53E39156BE48C5A1C40CBB61C054AD60C6B866

7DBF59DD7A796304BB96F62F3A0D8283A1D2B38391BCD7B7D8BBD02D7065B271

441DD74260ECFD558C1EC3460BCE1D4CD5DE512036FFD0F7240613301006D1CB

5747A9875EF11C47879E75E17FA74AE67B2629EB761D0EA626FC2DE49D996605

97B527FB7F224636AE5448315C506C82A26F3405A2D7020A199584E3A2280F9F

AF27F8790998DF9517C54DD4C1C9A53C0CD97097435A93F93DD2C297A538252F

C12F52B9CB80967CE91178D07984EFEC4D17EAB6BE87BA823502978281648F45

3DBFC2FB7D478CFF030302928D33576E6BA80F47FE8651276322E6A733F8B5EE

B71A3C255EE6FE16CBF872545FDB782D816155CF2712DD92D279711DE326BC8B

0707BE99810F756EED925843DDF266C59BB6DC4D5F289B7E5812DB45A08264EA

A891312A0039CF1CD839C1B847BB7BE6D180242A6499F73BEAC30E870960D3A0

1EDDFE8D1C689F2074F12CC6E5283138BA423549E6E4E82D018EEE52199D1858

80F6C385958231F14610FEC9903266E682564BCEFCD55527175DD971CC330B10

1996811F5B47A6F711E89FEA973157F0712641FAF12D5F5CBC4C44B9C172D8E4

A8CE4DF7A4D92926EB0063C306E2EB0738B316273FD78857FF5E408800E1AD27

A15FAF5BCCC4BB7A9A7185E8410136DCC14E57EE1589F1653D104FC67D864C6B

B45E9A658CD6D54DC1A48EDAEE97E724239D0687582C63F638A75B2C3EE8E40B

C9FA18F1A77691253450B3929DD063BE4D7B689BE140C63D934B02C1EF5E569F

56531260F83061A3940F6AD426C8A2EFAF386211C922B22C58F561F291A2DC10

D28D14C3C3C974E18238D26B31B62B27ABE4FB30C2C9CD50F436E663B8083642

63CB02C1AFAAB06E3ECA6BC86B8C800C3AB71870C5AED84C2CD77F83654E0443

37CE8DBD187E69B4E1263EC67936C656C0950CAFBC5628494C493B7B0C19FDD6

79171B96BB5810FD82C037B3C7174241D9CBB8AB08ECB61D33C9DC0776F475F6

D03FFF832F027FD54824FDD06E72C8C5FEE4F104AB9D20318D218C8BD1C28EAB

3029C1CA01843C7CFF4560B0FFCB943B06A4A83C07F0361CECC6B0F5562F02CA

F8559017F0F3640627E51255DCA0D4821E0A90EC1F689527D6268FA4544434FB

78434A0E8B0A8314A0EC44DC1AB918CCE39EEF60D347215998DBF798D8767D93

6571E366AFBFA4069EEA83362BA1113E115873C4D53D22A33D7BBEA91773E76B

E1EA89D50D58E923D69457E9344C50480827DE1FFAFD3AD5FB1BFD65C1B07A12

6BAF6A2720678009355F4AFAE410E2649DAF8DC79BC8EE2B543F79B7681FC7C4

92A8967CAE72D04E18F6ED739023C9ABCC264CD7E4358C7512F0BF78E594C3B7

CD0DED56D33A0D1F4AC6CB79C2E186ACA2602A9D4C24B1F92856FDF971215701

45D6C0129373BB2A937843C936ADB72329F1C160AE63A412280F5A4639036C27

7A922359B99188E5D9BAC5CDBDE4C7EC6744767DA5C24D579E6A06DE2EA7CA46

7682EE71D16D176E5E12E9E1CAAB0E8E4B1CF6065E74DC1A3DD144284207C7D6

C866BC31223B0C78AFA37B149CF30E8CEBD296E156D62F3B62F18C4B203B5677

A8009253F863BE3E1CC7B4D3C73A52B4ADA336BF93B3FAC43F91DFF01A669D35

3386FD7F3EEFA823A6EADF9AC08BA7634AEA1FAF8632F3E538E2A33723B5752D

03E50DEEA19B24AB24ACF7F995C1A1486A8BD1BADF1A3E9EF256EA204CEA099B

1DD459A260889167A43E7F67B7E1E8A6A52AABBCD2BD00DA99DC06AD75D841ED

7E09901B0D5E9011E47C2153F806C435095B938D1A4C0F238294DAA88F970C94

F28856F1564FAB97095F81B9D85BB947F9D300900E0DDC228110FD231A8DBD73

426C7817035DD6EF887F89C50A9A977AFE346FB6C2081BDCD523D316035DFD26

B92BB226E5B653DD58777D3B603FA1D5FB853C364AF070603F9DE1AE09B36F72

23781A107C9EDB86895E695F77F5CE9B0E4C2247A09D3BDC486573C34F5C9339

272873448891B47C3C000702A2B2833220A437A5841C18EE2D0961B68B419CA9

BF198C9FDA37AFB1E8C5848816678B35A7DF84C7D494C61BEEBC0A7E18ECC030

8C5A33B4A9FE905117F3B4500CC0F3B1BEEE55EB8F020AC9FEFF46011D5C4465

36AD08104C029F59A82C773199AD0B63BB8A78DCFA63F33850EC25E79B7E4324

F7E716264939D4B5296327C8BCCAD1E16E72E0BEBCAF34836D5E8BC72C696637

4BF4386550A0B2AF711593D1E4732ED26D7C743E26ADCDB65B55AD1BE9359F3B

477E1D929488B0671A260722098330486A85B4CCC7A60927CCFC28C152538EB9

B4EF4FB6426F276E2FE5D4CD1C5F7B1FA6DC0FA3D380A3963A1942F22BA729B6

F201F7C352B409393A943C392D0ADB0FE7AC3DF328300CEA5BBCDB23334F6579

45A548945791FA39CFCA8A3082A11496DA46AEC7A0401FB1D910E9ED32D0CD37

D7F11111170312287BC8D6497100C90EDD22C3F56E4650E11749EBC3D9A3C7E4

E448552B07F15F351B48E828E1D010CA6760CB08C1D5F6A197C8231E52194615

DE2FB02A20FA97C6A8505E128453C9CF39856F1C7B22E10F0A8829B1F2006BB5

52F456779F1DA9FF55AC34B28727A439E390EBDB0A028A4DBC0EAF85DD924F79

FFEEA17D4670779CA8CD099E4895032E1557BEBA1237662F4A1944BD7660F1E3

153C5B79E68A86FBDFBCD5F285D0BE080027875680B365F58B0D19CE530D2B4A

F34B182F86F9F5179055F6CA931AB292F5A6484D6C36E52C18038FBA4BEB2C86

C4AADACA0475B41EDE0BD5C26D052D4DCA8EF9DB469BD6D4BDF4F0D0B9BA6A74

044963BC792BF2B6F0390518773A000CA6B90A4E32D0158B24E136CADFDDC4A2

8636EFAAEA8FB45693C1084ED43D830BFF4413B7A39431726FDDCBAC7D9B62FC

294346BB0E1D41E297384C7C026E2C8372BEFA9F70FE45EF6063E6C7320655A9

3702992E36B7E7FE1C6C5A421AFDF7D01DA850D57432DD7F180FA08A1AA36F11

F060EC05038004459D5B3DD62837D479703D610A65FB9C621B9F16AE7D9B39C2

B550B2CAD621EFB719F2E65B3AC345BA8007A7D2BFF7638DDE8EF59427264605

6D581034BAB51028575A73B7B34C17114183D08079C41D7338F152710DA1780C

AFF3E5D7A61064D4161AD79607BE7ACD910FC3723C28D51E63A2236079B60730

E7B63688B113CEF79C181E54DA2D9A93A9238A2D2DD6C7B942451FF3E0CD704E

132CEE39A6DA43E02312C2E82534037EBE8C4F401D09060B3DAA300D9E020EBF

CEFDD4C14820BFCBBB5C8940483A0630B4F17047457FD1A3B01EF0B219F4310F

60233CB5EE7FFED48E34B40B96290CFFA8DB1A46FE1F10C9FE0C2902AA2335D6

D2CA41F5E19EEC53A2325A5F8DC4E24E39565FA8B695B1C05D45C0ECCFF1BCF4

AE08485EB123175A7DF42D541F7F9B57B867433181634658FBF3B933F79EBA9E

057CE26C9D2F88B94DD04302843C31D130D5481144ECDCE051C057BC75B9E718

A65A5A1674A7CDBA2D301DE2DADE657C4488DF1DA3FD69BDC67F9E48B1B88868

BFBC5009F4E842261E0475CA834D689095F4C99834D3658A0600778852167191

616E2C3A059845CD219C7FC4C19D72078CF50E913DACC97D66FEF7197076BE89

5E0EA91024BC4EC9D1CFB24FCA1EAA3F7BD1C54518F46FEF833C451009A04427

46F0524AED60974AA60AA75026F1ABDB8C367994EEB5E10AFA91D1D31DC2D8E0

406D703BF52E94E18BEB403705D8066425C9779B86B82361190638EFF3C9F43F

BBA51AC0BF811AE37D1DE0EFC9B85498E1294C01B44D2A981325718B7B302D77

1C643FF1B08DFC5C607ADE16171153495EFB7FE38EA635B84EF5715A210C4A3D

3685CD5DBBF32865CEA0D51B87CA2D9A7B32181F6D2F0540F04CCB7B3B6BB891

A97CB9F4C6746CD502B763E2BDE7B6F352B196465283ECB6EA553A859AB4550B

E16493C2C84C8071EB024A80BA305B01E1C7FD2BE2111FDFE69743EB6A547AD4

A451805F55011C5B0F14C5CE211F4DE6C9B8C3B9AD5C0CD505F1237B2DD78E35

4DA154E04B9DC8835F93AD5FBE578710F72D92A7A282FCD5B516568CA2FAE6CE

1EE2D6F654396AE5051FB0C84144816179DD24A5802A8DDBD008F2BE6AE9ED0C

2D8B2B734EA5F6F70339C1A3169A749583FC3FE28DA42CDDBA67B8A27DA2857D

BA419F3537A4902A64E003F5A61129C1DD78787E6A102DD0228AE45240E7D19F

7D7C16798CD0DFE529D5F4BBED61E0E6C340D5B030842228FE9F57C142A7018C

2F0030EC1E14B8599DB5F42D1407DBB9C1AA3EA06C2666FA6304F2A1A55BEBF2

23AF5DB95536712AEEC657F239DC5A38B7C704F59F65CA1298379B3AB2DE4EE4

26D4A41CAA1C34CA3DFA832216A499E0201C2C13712DD8AC5E2A36F77A127FB9

F538EB6BFCCA11E51F92854A4AAF05B0BF67BDCF5ECB66248196A1844EDD10EE

3DBA055F7C5FE51BB090AE2CCE09C083D81FD407D31FCCE3F3541DB330564B04

C446CF656BC9C14A4826A13A4B636AC9B0DB73D493459ACBFA1218A1CC89AC01

C8EADAF2CA1384EA48B6ED9ECC3E1571EEC005FEC4A275D9C130ECDD21C3AFF7

DD4AFC65C184F0E213DE1D87485D6DBFA39FC0786AE66F5891C128316D7781C0

8633AEF48F31CBAF28B5EEECF6E85727E86610EC0B08939B26088E20B215FA20

22EF39E181BFE1237505FE017F7F634D16F7001386BFE674633BDF9654DB8632

2DC3AB1BECE9F1FB224420EE3429578368BF243EA9146EB919C23F0142C408AD

6DD9C073EF76C233FC6B5BABC3245C9FC33D3DD40483C51901022BE8C869722C

99677EDA47C65CB64DF0C0422C08B00DE3E7030F4145759F8917C821348E77CB

1E79ABA1124B3BADF528F1BD9505BF6019DEF502BB0C36FE533FC484B3526DEA

2BE172A377C0FF81CAF14BCF29E36B4BC47957A53C82651D56DF9F46DDF9F5D5

821B810A301FED6A840BD4560134B36EA750E3D4303C22F6C628C6FCCC7740AA

7F92F27D4F395D9EDDD20DF08829D792E4695A4B21BE5566AF24E5575EF8D078

4287A2FBA82CECE4E1E2FD4718ADDE7A9C80484091DDB1E6331D7F3A6242313F

97C4079C4B024E0218A3159BAE03B3C49B471D96B8C425A60BF25B5B0788A0AB

A6C9543F2067E57ED21B7A41B9F8C572CC808F91935A5BCDAF239E89384A3E88

8AE5E424E389E97155FD22555067912E77F5B4CAE4140F288E5D420C610F9490

9BDFF0FC39C66A58564222A8B471C16D65A2532ED5E3A57E641105FCD14AE227

F20B0FE6210D84542D5A01EEA93EBA25339DE24740F695158C6A4AEF611C261E

16B11BF888ECAEA374ABED90BF366F6F15205DA561261949C3A438632724DE17

55A4EF4B825CC364260EB4B7FB1029D2F993E228E9D79346A612378F36E9E2F9

214E5720604B5F530D28D8BB1587D4854D15286786117541259A5ADED3A615B9

7A0E67D6B2463D6C81121924FEB4DD09F824DA0D7EBDDBAE70BFBD430E8973EA

A505E499EE2232FA69E5AEDA6F2E8969E6E6D0EA8EBF9F2BAE5E93C859E5EB84

C9D147DB409337DBCA8EB16CA684B1BC212C0809F18A4BB6621FD8351CC59722

719330BEFA0696EE5396E44D42E8D174328D91638744C66E051C1B4FDDF01D7F

115E88ADB02E753E781F6D6AC51BA9EFB41D9FE136DA0C7AABF775F18A343092

3946A077F2B9E4AFE739A7899CE272C80DB9FA53FCDFBD610B408313B7B61BF1

5344C7A8E6553B88BC17F90E0AD568D6F049E52429AAF9A71B667990081360F5

3E94E671CC7CBCEDC937E0A76FF7DDEABD108A5355D9E676F38EF713FB09A2EC

D32744399A502AB872A7CADBA1BB06BA6CAAC6B7B92C04276EAA35CF5D36C4F9

E8F405F3359F97F6870ACC74B6BC8BA4FE3770B6F1A27DC59202D11B015D78FD

5B3CE833C3FBC851CFB8CD0AD70F95AACE1691CC0135E0D0C8E01E49D27F4891

F1267391733532ED5ECBAE6085F9FF6154B891AA1F328BB9CBD4BAF568529D0F

981EE7C011E95C69DAD4C69C3AFBE26C49958F389F6B60F52FFCD07DB380A00D

48CC6BD3C903BFDA7610AE86F9ACD98B3186F04598838613B5EFBF9FBF9F6951

CC654822963F44DAFBAA38CA23E1C5F40CA41558F61119C86565ABD50526F321

18A7CCEA536A643F14691418C748E508AD53EB1FADB683735A4835E7FC44335A

EEAB581F3F0299D98061693C32CD6982E2D9E82A04D77EE3EC3434E62DC20DD5

FA7AE5EAF5CA2F7C12D46915381A963017E9DAD71DA5BC4D096A12799F580B9C

118909EDB3869CC2CDABF17D740C61AA8B6715CA89FD42ECFCC37F7AB7F4BDA7

B4F46E14133E58B4FA2B4981C91872C061A78AE36327EC85F2AD7170312C77A4

FCE0DBA0985249D20A7FFD284D3F731EE756B52BA3575DD637C91C968C4C605D

E4948C348D7FB679B16B76ECF6CD5A40B26DA4C341D913A1EF86173A4B970B80

D08F249BC1E47A0C634BA4D0B6FBAC5D282AF9EC9E6444CE1613817DCC5542A8

C474546AD1880055EEC308F5EC0AF5E3AC79BE17D3C8582696583FA0E7255C45

FE4F031A9949254A2E1E7D132C7A38C713D956F8A2CAAB4ABF080C43ADD777FC

8687E8B3F06EC4472C5F0ED63C717C7C67F74CF05EBD17A57A72AD01C99A1786

3F554FAEC262705A9CC443BE8D6A25EB4212857E9B9CB294686D2F181C606D85

507CE26743607B2B8E9F3E185B6A642F76AC01D18DDF871C397C511E712BE246

AD3FF2AB7BC71897E8FD514D95C65C4B12CF665D840B48B9FD71B264BC22C883

F5E684C7F0828DCF950AE059C023D137CE3F847EDC7E19A356BA0A1C6121D0F1

FF31B5B01E910503A1D6FB4FA84998F196434BABFF29CCB88D2BA4222E462540

6DB080C6E7D2E049678A5E6C5EBCC3C0D6620C4FF37E615840324F102F1BC205

1E1A2EA2F4B2B27709B67CE03799E60FE1FBD74C3107B0B9CC3200AD3485BFB4

A4A12B968DEE731356F612254EC3AA0386800044A6D77A6258D138EC1D45235B

B1B92E1A76ACCAABD639EA81271B0DC89DE67ABA60AD9A17E982A104ED2FD27F

24CE30D8E5D41B472275A892437F84801DDD487224BB0AB94F1F9103B03421CE

4B3C496A120F80B2C06062F1B727CF0DB05B38168252862B41A60ACE43D2888E

0604156DCFD61A133B0C61B4B69D28D943F874650AD7A1AA6E235DDFAF5C4EC2

77A20860FE2F84F7D880A8FD8551CE08DBBE47018B5DD45D272D3867B3713E53

4D479AB8D052D599FC1A0E7E554E01050C49EFBB8409F62A9EE13A5AEDCD3647

148514B87CB8E98F3A8557F85E1D4ED8AF90D2F7024805A4EF1301F5A93576F6

FF86364A77C2A1436B303D7F1FDFD33995BBED292EECC3DB2524D05746FAC76F

EAEAACCDAAA090482581F2172F2A19F5634C2D96CB9B4577A732DBCCB3DD29DA

D55FBF584D64488C26DA2595E5E102904779968D2722B0F7AE688C953F77F54F

C2F61DCA294A5CAF12E819AF0749DA0C85FC75D1740018D4263A4C8427A648C1

318242DCA7D1B2CE53D3604124B529CF1C1AFC3FCA09BF4389E2F4B411193789

58D0C4563E8B3F9965F0BC9182FD3BD34E1BCD783F24A1E584C61418EE88EDE2

1B9F4E186B4B783E9333CB398A3454C3509057BEA8C406CF921248107B3075CC

142C434FA999C241210CB3AF8D8A2E5428E83354FBC1D047BD54CA91915E979C

9678A826EFA81D5F1972B5B18910A5B9DC3CE7800845C70A2C0B53FCAE184A74

B615DADCBEE72410F07B037912A1EB3E405122480DBD5B6213DE7E0151C1857F

4D676D27DFF10BDF0F20DE9159AC418571DAAF978CC48872C8706F3F50EE7605

3C09AD87ABB32D22E34E8623B08994F014DD7AD2475130EBDF25B2BD11B9DC3A

A8673CDE930270744D48A037651A8613628CAA814B75F4DAA2F6CCF0B156608B

E22F5E277A648497FAAF9F4F600ED85C8B4B3EAB7D0AE7245C299EFBFF80D59F

B98AC4344003E93E1BE8313DC75CDB72E2B5451FD024D958D25F84811DE6EF1C

F32B6633C9118C99B461CB350D590A07A45D70BF07B873F4F66B7E73C94B6D2B

4044913A2EEBC57A90E718FBD344027BB50C55A0B6C5C35BE12C6F8F2863397F

222F69A03202E2DC565FA47D3D2133C7648FF568AEA872085B76BC686F342537

A556C218DFDFA3DFF5A39B6539D7191859A9ADDAC82A3E7625F206390ECDE9EB

E78488B9DA890290270A745EA6F899589F218DD510BA59BAEFEAC512761AA6A9

E895D8010620257FB2580E1D53D51E102D2781C86D29A25B372CC3955813E2C7

DE1150D7C3CCB91284582DFE0C0B468D32DF60D56AC2F7A5437BD96250F30910

8BC47B1DDD0B53A6950D701068B7B087CABE8B01D3E372BB384B1187F676B5B4

62DC828ECFCE4B676C3B6F62E526FB3B1E9779A074402145691FC95EC4119FD9

1CE47E08909F7BF29062496284169710F05D1264CAB0F9599EDF9D8244471EEA

E3A2CF8453D252047DC902A10828D2368040D9ED0D1BA0B08A0C7CB4BCFF5572

0D1EB90F9D8491DB47D88ABD0FFD345CD667C30EEC385B51438AC4405BFAF733

52FB7C93920CA509A971439A4D2788CDAEFFD8FE8A0DD7233CE501E3B6A0A70D

5A03E4F5BA384A3BD7CBC84D1ABC1653FB01177F486A70E8C9E7D0DF3F18F283

345D7EA5B8C8F1D5A4C17CA15BFE4D5F95159A274CE612123FC552D63611BC66

81FB4A7D78D0129A9243472E2A6658508F6087A934727606896267A62F0FF471

5E0B64DC2342F75ADA12380CEC1EF69AF56A7E67116CFE6E2857283779EF6B7F

3428E9191CD9AADCF27CB18E416AD68DE6FF1AA86A94B237B55E95C13199278F

7A27CD93C5F1DABDEEF74F227AB41113FED946BBB71D398C9B84E0842327EA7F

C6FA07D3C6F6BCF8E33F50F9AA6D9B23F54A9DBAB9A20448937403683D81E497

FC4696351CF13FD07D43687D7D303D4A1D212A88E2E26F124954BFF07DB2210E

408F4CDED9D45853D3D987AE9B0E084ED7F3552D0F93FCD96930F6B34108B2F7

7E73F9205E15519F6B738DBBD5ACEC7CAA6C5D4E5F184C4811E04D6F0E878E14

F7A3D3B1F2E973131A147F7C3D6334D1B69614A2D17F02DCC21C975FD4CB7754

7ACFF78C09F20EB5B78D03AF52ECBD94F1D5AEC078CA4FB998BD7BA620E5C11A

0296A2A41076881640A416872062411C44A7437F8B9FD76222324A8115F7CD8B

6A501DBF11CDCF948DF3CC2A718627ACA5AEAE67D64DE557EDCB6A32504C7399

2550222C8AE4D4569F51C7F55E35D152A1A3A698DE63D70494084D9886AEAD55

A3DCA770B9C13A21B8E49F7EF89C5D17F5C2F2DAF8ED1CBB4091FC477CE734B1

A1FC322FFD07B0831CC146D073A73B92E474C989E1695BD6050B1CD88C5FE76C

2CC5C325311FB9FBA2B9545CE5C6D8D3A349BF6F6F0AE11FE5E0318A51AD0FAC

9B8B7835065ED7F2FF252CF251141379CECD989655E4B36B13F0D96A284448E0

088A9DE8DAFB105D2BE722619560D6D0FE01596D9EBCC61AEB5E0D90EE583185

9A3531082B7167C146E3FA8711149759ED39FC10BC50A0BC2CB4DCA68F2AF98E

11C9B6615A4C5325FE6BBF87DFDAC7E503D751A3BE03E3E1EEA726F2C9B2C4EE

7B5CAB0A53359638F9D25F0445245138FA4EBD03E0B21C5A1D5EC0F66ADF5230

E023703C4FF6025E9086EFDE35F232AEDA9B041F93D5D1652045808AAC6B29B1

9588487385560C9093B9B6035697D78C41EF1A40088F7A545A6C0FD23B7A03B1

D87F76CE088AF1BE5418AA73432682A0C73FF5347BF394C06BD3E92B8812CF78

192B435DEC992D542288A195E067D059725ED86BD2088E63AF04F7FED6EF1463

6AFD405572A64DDADDA8146160DF7D3A4FAF30130648798B4718E91D599F0043

4CB6CC4FE93BB5022AEB74DAC812BD88C3A726C5D20BB854ACACD1B45154C660

F967ACD660EAD6C7E81EF8551759D2098D3B483D885498CEA882A23A3B1B8616

E29CF286DFEFF70D0D7B972CF1FE259FA8599168B8CD5DBA8B615420F4C186D9

411FEC7D960B8E80114C07612575AABCDD62DC3E98053D1B29A81BC9F7742262

D3B121E6C10715DD47D5769D8FB25E9FE9CD6179E7C611AA629F50D542D141BF

D5010749A02CDE9D94433B03DA518BA2CEBCA78D386BB8A5FCF05BEAEA4C5DE5

748F28A039235D42E70E969BCF0C68D13B4B50236E7A743BBAEC0C87B2F8A99A

D95A4DBA6E61E28C768FE6A090E904EC18F4DF848362ADF7D3E897235E22A970

D82E9A238B14A3DABF63E4C85F106ED913109389E15597B75CDAF95DF2AF0927

DC6DA6941C363224B2D0615A3795C5B7FBC2600B433BCF8B3858C6063B8708D9

F629A17FD7DFC1F0A8C7EEF70AAF9A9EAA9445A8F6130F936E5C38CA21DAB282

1747A01194C4AF122347202380718581604C9736BB5BD0ED01A56C86C774527C

404B20F65B7EB3A75324AEBDE60A983E295925F73C3A70525D12FACF690B6AAD

531EE0E1EC6303DDC031492D31E3B6FA639D25AD93430BD4B021FB64BA36BE5B

ABAB0057FAD2741AACE1365C596D69F9AFAA29D666FD2A180F0A5423AB8515D5

3F70B5F36D5EE1F64E3E61E20BEEC73EDD428DF69AEC57B432D0AF21AC7C4B11

BCCD2DDE934581E4BC66724ABA40D1A83DCF4C452F9E5FB7CF886A02DC6130C7

54BC8C0913F12FE69C0AFDBB08C1A3211657705C04C923F48D0BA048F300AB99

EBB6A7FC5C775032462315C0779752C903A053FD14255797B3D8268BE05AF1A3

F362ECFF000E3BDA2D0D860494D894390193AA23072B1B57AF4B2C034E3A17F0

48134D93C6638EBE7EC46357FE0B8E97830C5FBDEB05B808A07742D61AA0C655

3C23DF9829803B7B1C6C047BE7753334297953158389FA739B2A381CFD05C972

24F19E283CDA61A975FC03C191414C106E18312EBA9DD69E67717549A13FCFD4

88E654F93CC9D4CC079356A88A51140124B4212BF6B9F9603E2C48D64F052DE1

7A0C7FB755F72BD8D9CB188CF8FD898EC24C1188FDFC62D373F274FA5F2894D9

40BB26F33057778518DC53FA715AC0511E80AFB4BB3FBB7244A661DD4B57D1EE

BFDF779AABA9C8113F2D27D417A12420BCC5CBB9E5328F26A8439195BB157D7D

00C3A144E9589CB626C5982CCDCBE22FCE5162D1B5B0FA49605DEC14620818E4

525A1DEC33FEFB5919FEB05BC27C218237CAF169948B53CB66924580F454806E

AD5D0ED48B5B5DE1C51872471C3D6D68DABDF4886010E1BBDE7FC69BAEAC29AB

630D3A9293A4BFD50E1DDBCAFAA00123D0B27F895D83C8C7AC7F8FE730C56345

40A89A502669DEBDABC8D496D30E6339980CB7E47CDA9CA9A65B24BF254246B4

09042522DAC7BB3998B6930B01FFEC51070807FAF6FB6758C1AD4B256F7EA1A7

A0D3F00BA08A824D485A03523B3624BEE482506E0A576EF46EDD09F4C8F65D75

3CE097448FB0579D896A3D498D257CDDBF3109359317F5994DEE8CB758150181

0F378D77860F0906C81B9A84E1585C4705BCE844FB7A55FFFF92FBD9CBCB326E

CA101FFA15048717DBEE1D77BD46ED4EAC7DFB7C0B5DE86AAF2968A62C931EA5

B2E6E5F92B4D5E313CBCA23B4EE1DA1DF597AB6B1A11ED3C6A620507F4FC3AF2

C093DC6F03BFD45FF110C21A3030FD4A781360E08667471B59FDFFC63DB69D68

F0DF0425067DD81F6B7A8C8354474A0D6EB511447494EFA021E66F6FFE1311B8

6D9948A0E650F8C9BCA45183FB07F9143889943749CA8B3C2D2C0558A8991A46

E6D86FD28A094A4CBA6D9976BB86FB9F3E848FD91C9339920B730BB6670629CC

8972B0A5947CA6DE1706F7DC8399CBE22A6134241B77B230A20E6C33CF8E593A

3C6013AFE418E74396B6DE68AF2F0489C61F7D910F07FC692E96BF0B0AC2F080

51D3C48E7051091416FF818CA4D5A46A41FD019D5ED77B31193418FD08C160C0

2C05E9E1E380496A42755061D66E621B0418053991A8D6356C3BBE4D22A9F90A

6905591A8BDD58AF0C1E72F6DFDE64769EDB5154BD916F6E9A60064BBB222E0C

C847A0A591119434F7D289464239BAA3E0F93C09F0F2C5D921478AC655A51EFE

0E6E1E2390F94C4F553F01D0900FA4EC03BE30746308067B3247D553C15B3ADA

6A9F2DBBA5316A5BC12ED82852404496334E61B3E04D3F4D5D1C1DEDBAF1DDB1

C39C1681CD178FA8D46A6C067A9102369A73F8358FB1C18B91B6A6442E554129

4AAA8A2C12EBD4760637D41799BC297EE82B2733D3E5D5E63F5B8C96E48FEB04

B95DF6DBE90653B8DD27EE3E396E220B3351CD9619FF0D654D2F6E5410FD41DF

9A57ADE96CCB4913FE6104ACCAF9038E9CA602999CA02AB6D9846D4A4AC4FABF

F57A0E810D009DD3CAB8F2450A314AF51B3E71B881F3FB217C22DCC34C63E696

CFAEAD27013C8BE9FF0DA08D76D546F3448EE45A1F99B8A4375C7618798A5FF8

58BD23183A051C1971C848802D2931C8C1AB49AE2D53D968386BC0A968DA87B9

196466A3A217A973EF54D494734BD59847889E8CC55A8D7F1F4A0764D46D6D4F

C5CDB1B74E265C0F67DC6B232480C70959412F24FA34A6D84D1595F8BCD51817

FEAF9684C8EB8D3FC9191E6E1524AEBB1D53A08E31764D90F7ED789BD1D0A7C3

5D9CFEF0858D0233D9F6243280357BFE484A7D902FDB2FEE2E601CD856FAC562

14BC4CF6AC87DEAD0BE2AA21686C69ABA65C1B107048206E40C9FD0B17931F70

310F47E5B4A4A7DD586C359E8459CDDD8EA0D8BEB0BF49A489A477A3D966C613

F1CAC8FDC61DD21AB0633CF2A689E49879196D0D86D370280F95FAEBE6532FFD

6E1DD53B532F1CD5FCD75490CE993C278DFF79EA9FA9A56277826FFF850A495A

2BC43937A89781A06326929E92D460FCE9D67E0BC7F1E684F15025E5E8A785A3

1BD4820625D06F796D8FE33D640742AFB428F19CA4E8066D22E61AA9D3DB0014

0CD14D6CD7E64EAC714BC11C4D2AAE243F9C3C0B0E2EF922DD1D32CDC4AC413A

D3DB286DF713ED0499763332BFC8D28F4FF38702B1DB1A8670B2841E5809CC75

D3A550660768BE5BB22AC458DE5812FA8FDDEA40E0B7110940C866AD5DBAAE80

7989347D02D09BC40E5AF409639235AB4C36D70FB0B464EB449347DBD7D2532E

87D0215D206C0F6E85F735A8429F449CFAB20320FE52C2F2931F5D2F71FE412E

2B8C684311B06DE98BB1A292AB7C104E27DF53606800A817F0C291157535A3D0

B81139296CB375BC663820D2EB7ECAE5E7DC982254BC080E930F2AC180C9ABD9

A1925F3F8D091344DA76EF0002C41015B2502BA9A3945DBB63DD239F9B5F4B32

EBB0D74A702A6B59C9BC5788D7D5F306DEF21B69A740B2AB5993CEDED97B3D3A

FE0C7AD407BC2404E00132908C435E927DB605CEF01D4C4F02F62C24FA48AC4B

C7DB98FB95218893E15AF32BFACAF14B640DD1A719813396016B3D2D9504E077

7ED88128BA2612E7049AC1CC4796D76AE7B410EA5E383E5CA795F4FA16A25837

CA77D296AAA2F9327A2B196AB7053A692E5639D1064E390E6B5DA303D78F2987

95C56B5F98A27DCB7A322D0FCEE33238F43F374228EF5DE61FBB70E9147B02B5

51CE9072408992191371D34A2949DDC4CFE612C2D780532B8BA7F2B3D6C57894

033E72F28851572717DCC78D74CFA6BAD4AA6A157203517854B16F041D084601

85EF8AE7798D6ABC2E5AC7370AB1F97B48C388F27E12793E0C6149EE9A087680

09D4DED7F2B1D1DB525321D9215672818C1B139B7A3B0DFA62E61BA063FE967D

383134508B52465035D8273AFA12AC5B1A577586CBC8F8D45DFE7D95AC2CB8E1

45CBD2E1FDC15A307EE55166EA19E9F564B7E3044B84F6B0DDFF2ABB18F6887E

127461D195140F066EA43DD14D70AD1703A127CA03200339680D22187E92157E

43E2934662FCBC86A568DDE6D8E91D421FD4A856D1FC6A75325EF215B9B75ABA

4DCDB60DF1579557CAC79344FF64531843BECDC7F92F7E85A4C9F491A7C9E996

AFF0D5A32C4D83CC75DCB746FBF98A63BE1BE3414FE0B529EA7F829782DE0C6F

867E2DD63068FA4D7D7C1AD8664A5FE2B663C8E75D8A28B750D53DB7C3C13342

D19EEE77D94FE0DBD2445C9CF953D94DE4B10FB1F59CDA61AB5BD37581994E6E

A05124F05B92B672C7213FBAAB5DC661D4136EC07529C763BF8A187643445465

16BD1A5F0B1D01BD4867F26D3A2BA621F79E30B9068EA3DD7E526E4C0C6847E3

0847F70DEDE48699CFA6B7363467FE714B88B57082F7EC55242B1FBB6707A2C2

4D88C897F6D383CBFCDE4CA2C833DF5B214BC7917FD3045822E5835D80F7C753

96DAE1F1FD5D982B51DC2E32E2389BCD9515198A064D08AD4BF618850A44BE25

737741A2883EF395F61FA306CD3025671330CF5A5EFB6CD3C78175D4EEB7D601

1A4BE4104F7588694460ED14DA61652F00B12350B3D444812F5E396A5D9F84F0

1BB4FA52F9573161E4EFD3EAC1AAC770ABEFEC06A6D4A237AE497D8AC5602064

235EF826E4424A8537A584B47E1703E736D15A1B8D6141F747D35FDF9015F83A

384DBF5D78B612110395C6357622D9080305BD2A1DEB2645A2435CBFDB3FC773

302EB41266A13675CDF69D88821DF40D0E748996900E2F22ED21C3AB5F7FD0F6

BBBE25B7B457296459B9B99962E95A702F6B3E464AA9F23D64DD217A454B4D80

B695BA3C381A6AA72BBA311492B6B3A3F8358E5B0D6E9BEEAE7B264165ED0AEC

BD5FB5050B8FDEF8408A8C299DE0C8527DD7A072A2C53F6C935CDB652A35A9E3

75385BFD6CB1D59F36CEEA467D21864F1A2819AA541901BA7405F0D26B126032

C4164686B651178278E245C96D4A7B4F7ACF19E02CD292E1D6CBD67EF921EF60

CBE657631FDD9457754899A015C95FF9F648AD91DF1E46A2D890E917B1146784

CA306ECCAEED84A39A0D49013BAE6B1DB07BA6C939846D66AE92E2B8A31F4E28

72E3C66E74CD096FED17BB61EBA6F0E98CD88ADF0F17EFFC326661AB0497F79C

3260C300F91F2630793B6391B65E311AF2544431F5DC2F335851B4BC9527A1CB

F957F11DC6BAC034E46BE4F152401DCC7EE9EBF7B8476D6E5A2F0CFB5A894E05

BBEA5C8A0A0FF07A020D1F20EAF1D24EA4C7746DE43F274E4144047D1330D7B5

EFBE9726DB08C0F9EB64E5B45E0EFCD29C63170154F32460B9C65DD4DDE355F7

0CBE29FB86ECD249EABB3FE4B243F08ED0953D0D96928961DAECDF28BDC7F3AA

15FCD4C73BCF2097C66C7811A77303FC61D9CB83DA65A945FEBCF76C866D733A

75541AA5D784DE2B0BB81A2A56177BBA7E161D42B651C8CDC8EA0605745E9DD3

7964C5D714B49CDFF408C40D302EDA8A22C523FDCA0E0AD0A3FFD95DE26A927D

52D7CB64101037B3B766392D9261742309AA16E5819D0D3D76222E772EB6B7F7

12FC576C9460750E86296B415277B5B8437F025946E73ED459D18151A7395C11

9881AFBB21431256B8E60FF22C208259512851D64A1BAB61E50E80A52876ADD9

02CBD7E5CCC980CF6DBE55F0E41928957C506BBEE4A0B3648FD6BC395B458744

67E5BD661D7DD9C87C204D5218C8A0B43985371A93C83281A7EEEE1848124017

AE014AA7AFEDBFFB676EC7DA0D24A1DFC783CF03DA7DA96E093D10A357BBC2DF

71DDE845062A76BD97B7779E23C660219D32CB732BE64AAAA6D26C9E5980B058

9CF2BA7B6E184EDD26893AD81C11A0BF8DC3E7933106B956A08477C5E9F08BC6

04FBD466E3FAAA8C719EA1BD391AAF3179C26C62B53CC31F3319A250B5FF0F38

5262F4DF259644A5C5F11ECCDAF769369A67F28EDED1B73CCFF127AE42D86BB3

791FB741ECF2F1BA3443EFB5BAB4F2CB3C7FE7A86853553B761C0D7797A657CB

D15ECBE0B3F4061A8F9E3F5F50E93D23564A59CC2ED1974D74F5BC92E7DAA307

858B75EF3F97CAFD65D685CC9EEC52E7E4E309CF9AEED9F1262F025A65C01FB3

A5FD4988D37F80D6AE73891DC237A41EFBE963E8C2CABE36D74B0036D61BBB2F

10C49998F66F01EE8B92A7A14037B31D0E28ABE15F33ACFEE68DFDC66573C386

B9B65AD5FC7AF9E10E09DA3B1257EB59100AF82638400A59D7975ED2442B375C

9D48DB287220D4DEF0E2FB9101A2668294CDADB8F0163E64B0226D276B519C58

1C697FD590D6695A1C55A0A8225FC8AE2A1E1E43077E96545789FFE01A3B8A23

B71309FC77C877B3D1CA6FFD4ACF0F6E82C07C7CE0555F7A2F1C8B4F8FF80DA9

D584BC6292312ADDAB73D1029639B8B2F153D9921967FC99498C152E282550CF

85A35637C02FD67BC01C73F8C307509E1F1DCFEF69B3C2E3CC3C8B861B0207C5

8D6969F50CA9C412CF9153E055D55F3A58962D6BC9C50907008AC1E70232C2A2

8437C693A56B008E4EF1F16BD3E28BCA59CC4F4EA4E6541D142CDBE8C1D18813

337F0F0BCBC0492D12140CA9686C73D25E50F03353C79410BA389FE18E87EEA8

D17335FB2244474A2BA06FAF1FB42D61126979B1658172037337FC2A11284EA8

F5F7B058CBFD27270509BF90DBF528F6A3AEDD461D8C7600D895C0743266A58A

A6675CEC62F0BEC5BE5D8B7A10BE473B655C17744A2B4F56095EF57E92F1D52B

62E89FF658B372E13AA5F446AEF192EE3FFED2990934F5DF4725171212086F87

93FD40F55011557730BBAD6870B57CC448276F5D6C6151C7FA513FBFEED1F5D8

02508E7E72FD15BBD77D48F4A8FD5F93DF1607B7050D41C57DD3A7B73754053A

36A60CCF4CD26899D47DC9DFE3E980D6CAB48032A7C4879E258D45D60F658ABF

C798173AEC415AD8B849D84484DDC6FAB846FDC32CF5E554E1C2F7347FC71927

C2B840191FB5C8F6352DE448E7F8ABC35759D81A1CA910E515CFFCCE1B6EB587

B1751772070755A779B1BD248DEBAE654BAD8A7D72943170423390F578B5352D

C07E147648675DD6E730B839E3797B53BE372A951EDC47CF0B510C0C406F63E6

59BE1A3F90A6A793882EAD64248CB53D33EFD7B646DAB80FEC89D0797E7647AB

F991920545990FB82AA0FD19582D6B879873A3D23A41737F3946D56438F14653

D198235C7A3B00165177CB2AB21A2539A8EDC1DE6582B78B0E44A9C187FD4F6E

4222D6C36D11C1C8BBC610F5F6957E5FAC1E09526CC3761239C5E94FE3CB3796

C9C8455A220E01ECB4FF48137F34C9CE85E4FF3F9E7DD832BF9568BF1A1C58FD

ABF9C951969DE8395299201C1878345D6815558B8EAB897FF3A4E32F4762682D

44ED3FDA9EF055610FF92DE12E59F86729F5F939C1F09901B59C3CFBBD167F09

8B752E7EF74CE004E926BEEAC72C1CB9007E2AD0D2326F2EC6211673BC0DF74C

5582D7037E42B69AC95497B88BF0D51C6DBE36FBB023DC98074EC60989D767C3

D0EC73CD22BF53929F89F8B286F99E5A890D136E4A338CC7A5A23438448D11CC

6A074D31212D181420292C42559632849FD3EDDC25F2E3468A652FD2C6B380BF

9EEFF8822714D6BB476EC85A2002A67EA7042F62F764D2E9676EB622C133FC34

B5A5439941A9C7D3DA4A24EC3E85A72C181A8A7546

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/VTTDMA+CMR9 findfont /Encoding get

dup 0 /.notdef put

pop

end

/VTTDMA+CMR9 findfont /Encoding get

dup 0 /.notdef put

dup 11 /ff put

dup 12 /fi put

dup 13 /fl put

dup 14 /ffi put

dup 15 /ffl put

dup 34 /quotedblright put

dup 36 /dollar put

dup 37 /percent put

dup 39 /quoteright put

dup 40 /parenleft put

dup 41 /parenright put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 47 /slash put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 58 /colon put

dup 59 /semicolon put

dup 61 /equal put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 71 /G put

dup 72 /H put

dup 73 /I put

dup 74 /J put

dup 76 /L put

dup 77 /M put

dup 78 /N put

dup 79 /O put

dup 80 /P put

dup 81 /Q put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 85 /U put

dup 86 /V put

dup 87 /W put

dup 89 /Y put

dup 91 /bracketleft put

dup 92 /quotedblleft put

dup 93 /bracketright put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 106 /j put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 120 /x put

dup 121 /y put

dup 122 /z put

dup 123 /endash put

dup 124 /emdash put

pop

%%EndResource

[/N82/VTTDMA+CMR9 -1 TZ

%%BeginResource: font UDAAAA+ArialMT~8d

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /UDAAAA+ArialMT~8d def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69AFD5C814A372AF455C4A99B19E1FF14974149A341EA4612524B39A

FB1720582B4081668B4FC51F42F7515D851BE9C2DD7C10755A5E80CCE6E6AAAA

9A8EE3041BB386820E0F33336E657973EB0CF6DAFD87C28CFFE01C7608C1AC0E

0DECCA7DF9EF34C753462D61920949E250ED5A4B1D1E50206A8838FFB984B097

F5360F5F5F026B1DB66728605D362A3C043F5AAAD1FB12DEF1439EF72F585242

9DB05F7F0FD43722137DD680A7AD2A3DEAC8E30029A757CA04FD13662A3BB631

FF03F4C0BC4BEAD7DE0CAF81EDEA10C7DAD5DD27A134E89CD86DA8764052FD72

68910D348D13DECBFC295ED27A04EA471CC789D2D9D2C55FF0F55F0BAAE1D8EE

B664075C18E64AF45E3ECD43146B2034FC0FD30C97BD303B3ED8EF563BEBD476

E9951CF7F95FE5C4E26D8C2E6FA772D0ED5018CAF9E1C497A1473AC37CA1AE21

E5123CB685BFC817C23F8F2C2077C89750D43E9C10DA3891E8C5F76B699DCF8A

E2F7A1C44748F7497FD201BBF3BA5B2023C823677F70902D7D443A09AFC521EB

AB769D63BB6B2BFB6B1444436C43803A8ABAC3335404FCD53890EEFE0D1CF18A

DBBEBD64C9C8BA7F1FD85A8D641DF4DDB8CEC444698E755DA3893A1D1B85B567

8B0E44B74006F13E25FC23E74A8C8A317F250059926512E76D6D931BC22174B1

1417F48A44EC4393D46D85EA7A6F67F04FE93A4867DE4C5BCE414EB1C30FC543

C3D2683DF530C487215D2CD86D757F88856C7826B35FA421533659230CFF76AC

CF49530952F17088AB645FD193769CF8F0A5A6EEBD43C16CB0069FDD125A3151

E47E517947A6D25EBC89F86E8487151BF68E2F063FAF8DAF60DFE4363A4760E2

5D6805009F8E57E81036B7D0E4E135B8EFE840C604A0DC1A5AA21AFD0CC23C9F

B8A29E8928F5C1C8882CCE48D84E3FE94989B933A66B08222DE9BF1B3163AD61

1339111061DD19A23E6A53F0451A638D678DAC44D4FC504EB4AA569DE81DA206

8D05BEE087644DF93A1475A8A29B84D9D925C99AB6ED26D5B64F4341E5F00C8D

3F4BB729C4F753098D1B802BB6B579E729D070C0A03817C7A9BFE328D479517B

D99695C34EB14EC3C6C5E59F5E95CBC39C6BF032020BB4E69661CD76D9B59175

373F990D459774C225C7A3FB4E3708BC09E1A7865FBE4B36E110C745E97142F7

B143A6E580E230FFF4EE5E83B348ECED3FA4E0E5AF2AE41968BA320879C3D7E6

157D367F966352575D89D223846163E0646EAB77E352502B8DE3B25F909F6AC7

29820242008C1A3FECC1C30573C93C56BE987CA5B68CDF73E4B165592D76551C

8C7763CED26D52FEAB3A6AE50A96B07F0B0EBBEBFCC73C3138AA077BA6F77078

73AB4D05F8EFC9098229B0DBB0CF3B43151702BB42592EFB6D80B577781E6FDF

A9608E581CE53DB02D1D50E7E9E8F926A5596839D22DA361CA21DB6847269600

1D038B9A9FFC6C5326A7780D01ACC6EAEC990B8487C1839546CC64184FD729D5

F35441930ACFE6C7D5317AE1B5164CC2B1EAEAAC63777B2CBC7C46351D01BCAA

31C7666CCAB69DFF8EF25A663C839B3357627C15786745C7D96EB0E41E632E71

EF21371D46C2AA32DA0CA8AEB63D13248D55795F6C19648FCDAE28478A7753D1

D042A2A536EB2C04667CF5879F48A43AAA47160E9397F129F5E93DC7AD5BB56D

90A21186494A24E7B3DF08C29EB180716E4AB479645FAC1C6F5144916E900B44

3BC1D7329E8F8831035F9E54D226C55A7FCD27C4A2029999A0B7763C36

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/UDAAAA+ArialMT~8d findfont /Encoding get

dup 0 /.notdef put

pop

end

/UDAAAA+ArialMT~8d findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 67 /C put

dup 83 /S put

dup 100 /d put

dup 101 /e put

dup 105 /i put

dup 111 /o put

dup 122 /z put

pop

%%EndResource

[/N98/UDAAAA+ArialMT~8d -1 TZ

%%BeginResource: font UBVZVP+CMBX9

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 13 dict dup begin

/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def

/FullName (CMBX9) def

/FamilyName (Computer Modern) def

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /UBVZVP+CMBX9 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { -58 -250 1195 750 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E

2825687306A156DACC32FBF07CD53FCFA5F8BEB4C85C022641C2817904D210EE

C1B9CB391931A7DA79E981F6D449067CB22BBBC1C7E17F31494A030C64C3D168

01AD7EA9844289C5FBF13E87EB38D47EFECDFD90987CE63AEE2F73A41DE9D88E

47972B7D71DFE3C0971C15A0A2EA71DB75E8BDC8C575FCE75767F0757BD4C3C5

8EF2FE5165B8546C92942535A1EDA618A56D879C164EC4F0F96C67E96588F918

16F50B3873DA54718335E5332999DA5564B78C9F5FAF96DCF3DC75E7271FF8EA

D6C359C5A3C8AE5EC9D39ED3FF31964A8359373324AF62817E412610D5DB18A2

3A5754794235BB25D3DDD26A8A1F71C1EC1F62C191EE0A5B5B0875851A957AB9

BD03120DD0D9705888E9CF10F8FCB5581D6179B1D31E44182CA35A1D8CB6260E

CBE86555CFCBD182CBC246B7D452702B4A6E952F09D5935FD82011E71B31C885

1CAF835A753CD158B0A5888C211C87D508586BCC4524F4A7CF1D0C008BE732E0

73CFFD7D44544F60D67B70C142F2D5D81671D0BDE43ECA08AEA748CCF1B6B09E

33E213818A814579645E94904CA7E1102600A372764A124F46ED4820F4D79783

9DA6863AF0ADB1D2F6AAEB6E0404E4F8138BE049052C8E0F0A7FA925C62F8781

422A2A4FD4C5BC3B52C66F3016A4464848CF3423E9BA758D53E68B4209848178

BAFEBCDBC462399C19FDD222DF4F95047982D0337CE9E418DC6AB1BFDD84BA54

7BA7FF1713E6B4F6BBC29BCC1C1D0246802E9F035E7DA3C1B18D4A4490852BFF

BA0D2252FCECDD1199F60B61880B7A42B565AA5F45BC0E2890F25C4818CA754F

B17FAF1A59590DDB0F43D066746299C4063401479375F5A189E1AA75D7BEF5AB

FD7F9725E09DD099C3DBC5160B64F67D7AD15EC424152963006D1366C7E4E6B0

E864FD88E2ED764892B5DB7C7BF61B11BC064687E0CDE4A3E87EA0ED471FA087

E56CE6F8D71A1B19961ADB3EE7B4A4FB7374A7C833695E74EFE5C7F9E25D50AE

A4E32BE349DB9A157BA4BAF018725B628B9E4A7708DB549A970810816F06A1C4

370F3483CFEB73D10CB27F7E6DB5891C62E2DA8C1E63B6205BC6C1694D1CBA7D

7A1F894C979CF813914BA29009F6BFCBCB401FA1ACFE38CA73027CF6BA0C7432

AF31A66B810FF3E509EC5A5E654917572F36EAB8575B978CB36914381DBC5A89

725386AB910F8D81887A3C975792D753DB52D6A9ADFF85B335931023871F688D

6B8B8F83C59C614EC19180E69E15EE526112B53F63D8F0A84D080798968CDDC9

9C2AEA08CA3FF896483930B88F2085DC6D333D90A0BA54E1CDA14AD2AF916C9B

8BC0353695AD5017575701C4D62A8EE4663BDF468C4578108C1D3CDB8FE28FB6

8E97F5C15C2443A565428D10FDF65322E3077937B8DC12E75826706C99F96494

F2B2D379074FF81045C7DC42332300A152553EC9C9C51591C81C6325AB97BA31

D338051996F3266E2189F14991CADD2DF109A6E80D4FA3B570ECB30FAB18532C

0EAA528BE133B2B2032DA7A1D3D2DD9B596E71A086CB9936445E679A87D5AA7A

1CA9393CB0AA405BF58AB5A552D2B07DFD7F761A33F31C999014B1EBB1F6ECAE

0CB4E14E2A61182A949FBF38464A233AD83A4C8A2C72AE44BE300C5BF5731459

FB3FD44B70B46503F69FAF43DA2537BDBFFFB650F34C768DFA9A0822C0CE3223

F9A3F27D713E0FA7477F39FBA49E65DD05EBBB25166D96B067AEF135AD9EBA23

59D8C23BBAF66E94788AB2BF757CCA7E381FB9B85DAAA711305B653FE3D9746C

C5E004FBFF343EFD40A8CE1FF6CE433363DF17CA5B720627BF93B50C6C8D148B

1F4D177B67113E0A4278B84B79AB19D25A7B72BAA75D0BE65926AC34B2B76A33

535042932DD80CF47258DCAD899FB26E0CD61D9C8F6CC99BE46E238CC49A9A7B

852B24A34F1F5D85784058DF9B9CA3E1659AB4E097F6F9A51B039F5C387F7B73

419D7F5EE46C3E452A1D2B42401C8ECF02F9FFF3D579641C2E6D3E0844E9A386

91D68C1BBE85340F9F2612D1057D8517C734C5788BDD29C5E046670753A1EF8F

096A579CFA7827E9DCB093799E18A1A7620ED1DA3A628853E7E2496D7E20A8BF

81A7D9DDEE7CADF60CB4C4A0A427E75E58E030707392EB95E7C422E8CBA79A61

BF44EC8B4B8DC8348EF7C82669AD8C9401A9F081D57253E410119FE5615DC7B9

6F773313B66B683F692392F456CCA08AAA6CBA6E305A8100684BF410113B17EB

7BB94D3914CB8A5DB8335E2CEFADBC72267DB83AC0972902295D20281CE95FC1

9A6A2CAEA1E4174D9599C6DF01E8A1BC6954EE7E49A0779EDAD190D7D60FDF79

8BD827D7B9F270FFC8E54CEB54D35DE1D789B063887C132B9FCE9A6D80C59377

65D81D92F661ADEAA20316E0DD03CFE24EF6D77A51B6BDA686846F673E15A4EC

A25CFA301F7EE1648315084430B68033EE23C9F647F43277A656A3B6F8FC1060

5C765587D50BEE4A768C8FB1B3F6AD74EDA47FE320858FACA40B81319D46977C

A0E969077F8A22625689B6478C83ABB64EB88C909CE9AF6F25A97C8310F0FB92

75F8D2ECD765154735C276DE7195D2FC4BC485CD5214FFFE63ED6B9AE32E7D9D

6DE3FF8E60BB5FA8442617464AF000C2878045C2C9AA0F5F33188F139D45F49E

32AC5A24A55870263532069B99B876F29658611D5ABBA3952A15F7A140DF45F1

CBBD94FDF9C4B71135BDF38D38CED302A70F8EA977E191A3CF085D7C8BAECF66

A026C5DFD8F8DDC1988C0051744C9A669E048CAFAE679F6D2970CCA9A83193B1

B623FCA0D7C967DBFE12C9BC2D042B870D5A5E7EF6C67171C773209D59DF763B

3F0D0649FC39B999EB28F9A373E6218E21D6C25DD070033DF260FAF6735FEB13

60D9FBF21FB20F8094EDFB8DEA9BC2E2BC25D6ED7763AD4B489DF3DF452EC520

C95AC54730188D047FCF3849307760B4EDDE1FFBFD5163240E2ABC9FC2E42BA7

9D2CE29114BCEA865A0146322C7702AB8C0A76D9FD28F169BA5FEBC6CE44BE51

956DB6FF477BC7DB01BD7D16CEC16237E8BB1304A5BC82550B84CB9F36EBE7A9

8D665DD94503D6F33C6592B53BE5B7B8D97A4DAECF2C98C3B69EC45F9451145F

913E2CC699B9257A2294003A82A4E6263FF250499BFC83403B6A387D77A5645B

6CAFA5573C95F019576A29C34CA4841F34D84E3763BA5868081A3380839D6469

C0269C9146A7FBC94775D28A82564FE053FB9D918A3F1C7F99BF119ECC9F092A

4B89BD697EF45FF17FAB785BB730D141909183972E56FF9BB768FBDE760E00B6

A7B9F41BBC6CD41CE697A12EE5DC412AABB30FAD9D6547C5AB43DC0472521725

E59713228481D89FCFE598A5F860303669D23B72A45AD9E7EA016A8C96DB8D13

797B9C8BB2AB585AB047617C0545AE2F96551751E66F9E3075526B35638CAAB0

A1D172027B7CDEE82CACF1006D7A49991F13F0872877D667604246106566F113

CCA633EDF4BC9F45285FA6F32A23CB80BBBAD38BFE141AC1C892C72853B5A547

B16E2DF5BC3B1E776A6694304131298E54FF3DC1EF432506DEA8DBF7C0F56F49

7DB15C6E46935197E7A8A16185E295142A006B482B7660669E9EEA77363D633A

09CD0D854EE5C15BD84B8CA86868F23C25D63D142AE67749429B9CC38A5D2952

2276D205EBB0FCA7CB92924B3707448FF0DC4DDE87E5D93983D8819A4CFAD258

C5E6A3E6AF7A2705BB416D5F65646FF2B7C6C03E89F30169D76A400F358F09A5

2E92D1038803D856BEA015A5DB002BB584AF1FB1202BC191524C558084BC95EB

66796AD00D189D2150333D962C6240611E1F73B757B658692CE060F1E5C4F31E

EEBF340507BB7E4A62980F8AF62C438C8A46ED60FBD8C97DA6BC832391955B23

4E8EEAE587F8A5E5ED03951D2C2BED6BFAF9B416A70489DC62AE3F89DBE161CA

49902B2CAFC96BE0D1CFA5CA0500D585E548878DEE5214537DCE0DA4C8130F50

D35E057BDA16E4D108B625EC1999A3EB7730028A7A11BCC04C0E6BC9B452B1CA

D3C796B157C91AC22677DB97FA0C88E82258E23E0F19DDE4C22A0BFD430D32A6

CDE2E26C576DAB7CF32537DDA33E72D9341208B5149E196EA17F3B5DFACC378F

BC0B4E7DDF1AC0B4084C0D380185DED64168E9092699D5AED9880B8CDF4B8723

3F243707F8FFC8FAA15B8408C6E93C0A95315C1A1DBB6F263FDF82A8D69A3768

0B23B5A4F2609557BBE37CBBE2FCDF62772D8690F5D6FEB6BC2F100E1D87F154

41D98EB99D26DD20A679814BD4B7A11FA2882C5287DF7B2E7992025AED175D55

86DF6C5E3BBAB31CF585CB9A8DB3AA017CBB619F83747AE5E4F236317458D44D

8732C40CDA072235A859D18A97F8D4D8F7172BCBD494521688EB26827A399D61

26B7DEC91991DC9BFB87A4BD39D9FBE8D5ECC07DE982BA6565C3E8BE24F361F4

FC3B1CA26D090662C562FD9FE11FC2F4B510DF13D54FEC359F0B34306A8CAB97

8F63E9E4C8FF767BD23892ECF3A20318195BC0A1E88A8CC97747CDCEA33446DF

05485D560AA19EB314C8D01D43EDDC857EA8AC7B1C0577E9C2954CC0A64E6FBD

A17A6E50807749D09C9893D30A6E969226032718D703D1F6AEB8B7F2A5F832C7

AFCF4B8951D4581B8885871420EE51C779688082C6FB053FC5794209F629BC91

018E39E514AE01F29E6288E8115D2586EA53D7D460927FB2968CE34681269E0D

0809B6433D147C2D337C6CA20581BA6FA433054A3965712C64902463DA294662

7AB26F1469D00EC655649500086ECF63A936729BA19F0EE46D31B8F4CA8F409C

4D4CF1F1E9D2F98918272D2BD066672A8CCAFD1216E08F9C18020BDFBCF7AAB2

3DA36ACE0908C8CBBA8A8D685389EF61D12B56FCBCC665586619F379DF649D09

4406DA031975E968D623BA4B5471AAFB88CFAE874413387DEA2DED330EAFFFC9

1EFB3541FCC3D767B54508AE075ED24CB755D5E92636B03011A267FF33BC9439

1D229EF6BB33017064F3453CE9C0AA657F9D85A9439FC2CEDD76B116FCEE572F

3AFD4EFD14A1590097082B98B0FDFE05AAAE9169F2DE5EF6C8E27F969F83D61E

A5DA30E37C272B08D43FA03753DBBA7CB6CF15E432E904EF349A6E279E4DC681

BBE817DBE395B61FE717DC14BE7BAA50F227D4CF261CE0C18D49B1AE76F3837D

AF48A688DEEE0930CC72DC8E1E98734FCFBDBD9FFBB09B61FED76717E68C56F1

3418F87FFBF34E3DF07558C3198F450ACC180CA973602AF79817A251431C6D8A

BB9EC0F5D55EA3F012B2B4510EFB91B2D60865F1A9D01998507E0943A5CD8CF3

31FDF10F8499FBF09FD0D19618DBC5DAF1471B9E87FED69D996773474D305493

79B3B26FA33CBC82FF74ECA43796DB8366D09A89715DC28CB424CDD7EDB8C0F7

F5E7CAD7982CC919C16759CD34756AE050D6B081849BD7802B78F1C453C2D8DD

86155E9862F97FAD4C465DF51F730D94F536F9055CE7810212F901A58EE4AFE6

17E0C3E23A768EA33C04BC2DF0C0202D6064A2792060DDADD0F8755749AC0AB8

58FAE8649155D154A714720F8D60D549FCE691E5269858C717E8AEFB49D24C78

46B9F3EDF3374DA0CB4E9951F5C24A36622E3AADBE0DFC6535F98746857E77CE

5D2BFA0EE8E03FDE99A440074B153B1217592FE1A27532DAF96EEC291A9599F3

C9697B7FF53B1898220FE5362E75B3BD7891CE871BECA39EEB0669772421301C

F1D1F7E31F9E2ABA1C22E774846EF9832AA561064ECE1536329FB57241FD7FEA

272D67676F563E240DB90AC8C0505452EFD3DC2AD6F908379F4E5297640B4DE3

5F98F86A3B3847483DB9E64CBEBCA05E5F352D53C0C99285AD39DB60873D3E4D

521FBA708B69B7A4C4408EAD260451C9F5C25D228D24FD0F21F6F3BB06EC69F2

341DDA2CAF50016C9C47A20784F65A565E5F1513E745AD7907B54F29ECF9C9ED

635A74E1E8587983067EF273F95A4C18DEC0D43127441B62E092AAC588E0F349

6D1B40BA66C48F75715748D0ECE4E36AC176369BDA9C2F7B05A4A7BECCA65583

CAE330819E9243959385F1F3F3D2773AD4FD78169552E0907B9415BE6A2BEF3C

724C4ECA02BE7F79DFF9C709914F7D5923BEFF43D6AF4501F67D2B7A5111723C

F7278B4E5B70B6D8C3B46E57A2151105E493006AF492827287D2367E2A3A3C09

6AB7A11EB88B7F26BD6DB508AA677C155ED94C43401F27343AECBBEAA1275E16

C01FEFFEA591BEE9A53E80BF8B136B648C07DB40854930E49FD8DF6077F41170

EDA63FEC9E80620E1858602E30A0741AD1AF14CCA9061C02BB71B68E14C6A4EC

2C1587F8B15D65A110BCC562E181CDFECFA33AAE19C872E8A0F1EDBF373D2DAE

431E66CAC25A189E93FC2FA826F73BE016599CE42610A13C16A3324A3DF20A69

3364D10C34E28D63832745F0518F55FDD9357C49263D30B584DD3611E0D3E831

84F6DD8130ADB2B0DE4E78F207B4B40869A014A1A586441E919E771A6C0EAAD0

18FAA7FD1F9E83CD086271AF3C5D6FF13D556868135D005C9BB1AEE883A66E6C

CDB5BDE696BFCFE248A563457A0E42E15EA3612930102E80277EF9BF82905AA7

B28CF8A939B5E6BEB1C0A40F45AE34A65320DEEF645E3C03566ECC2C8ED9FB28

4ACA64F03E997156D07670CC7305CD16AE2F184D278D12DAD8F73AA540DEC0C1

8F81A2A075123B27B4E724A1C087AD2A675ABCFA95966FEADE9F13F3E6F0B377

ACF0C08C4F60915F61B0754BC00E0CCF7D984BEDFFDC33C8B5ED1F051608FA4E

96430C0852FE55F0FC50F82FD3C0878452E957BF154F01830D856AE4372CAD88

4FCDC0C10670EA0F2B78E6D6425C6334F552D8118B2CA35C4D5810547640CAE7

D65023733AB412C09F3F8AD99D87466BDB0BA2F769FA7ACAE5BD428750BAB43D

3E1294F4B7CA127930834E15C0EB787ABD2C141ABE92E3C18A5AA58D5952C38D

73C2ABA78C76225817878DF1FB457856A16AC64BC489D498FB77A777EC87898F

431C7D9429CB23E8CC6C1082F1EE0102707FA57C27C7FD32D27EBAD52F617831

2EB25DAAC7613A3DFB3A97DDA4D68C87C24450530C4B8245688408D96F217AE4

77E17174418AAEBEC368A7CBA45064C17556D80220DDA7E71EA7F798D306E16D

628D81A2E6603A69725AF14A00545704A3E4CFA2787CC834C690303DD349994C

AAD6118DBC0F78CADE72AB3889246B014709D5D3F107B4417A7CE5A1BEBA961C

BEBDA9B154A13DADC5E5B1EDF5849093B93281B01D9A5A692FFDE32B5EE79055

D0F420806276E108665C7CCB1B8333AD6E142B6D10BF37E594F69DDB27820E77

37F8D4D155752E887C31C8D0CE64F5543F34908FEEA1405938F1199C7C3229DA

D4AEDD1FB3B28A229F1F4BBBA1674B9A370FE9F0A555F4FFD29888B18526D4B7

30FDD7337B4404ADE10ED236F2FA3EDCCA4D3458FB20AA7BE8EAF2A0AED79A03

8ACD94438411A66AE6DF46895021933C38950474CFE95664F02DAEA5B4

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/UBVZVP+CMBX9 findfont /Encoding get

dup 0 /.notdef put

pop

end

/UBVZVP+CMBX9 findfont /Encoding get

dup 0 /.notdef put

dup 45 /hyphen put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 58 /colon put

dup 70 /F put

dup 76 /L put

dup 80 /P put

dup 84 /T put

dup 97 /a put

dup 98 /b put

dup 101 /e put

dup 103 /g put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 117 /u put

pop

%%EndResource

[/N87/UBVZVP+CMBX9 -1 TZ

%%BeginResource: font SBAAAA+ArialMT~43

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /SBAAAA+ArialMT~43 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D1BAA593F238F5F7C4D

A902C921AF1E663785239DC5F977BF27B99101158EE091ADD8F2146377731ED9

E1A8D9C74A6B10A5568975CC1B892338644DEDD4AA569F74A49C616EBA62F176

D2E024DAC244D31618FECE087B712815C518E7AC3E95A9C1722E2E5CF57DA7DE

62198CD1859A9CB41F056A56D9255A4B0AAF7BDBB2C6078BE2DF1C3865FAEAFD

F002B33ED7D96B42CED06B7C78F83E66DA5C62D3009A15E0FC0B1CFBFCC9EC36

C327504E82971FD5101957D6F0E850A803C0DF4CC0A4D91CF610B362E60AEBFF

5B2F8899ACEC9A617FCAD9D2348CC07E10D1BDA6CD0CFB4FAFB144D2E3F8E03B

BEAE6B4E758C024BC020DFB6AE00B67447295F9F2FA573DF16A969733447D961

0188CACE355600A4AA63FD4F77928272403294F667411050193888A14D57384B

71DC566AB619960FB2656B78944F84A4E5FF109C7888816E247412832329FE34

C8CD2260EF9EF23F8A72617D9AA3B8B3F1FA85EAA915726CB0A44843261E9407

B4656DEB6DB72788F99EAB00810EB61E168264D481DF8E8468027084BBD33473

7AA6EB23DE636E5427BD80ECC160790CCE1FD19DF3EEE559BE2AB44CB6429049

6CB6CBE6EDF13D4507C92AE595B91C60515D4482F36A8E89F29A57AFE26DDFEC

8236725341F1E31DF4A51FE4BD674CF57D570FE066DA9B11A7554A5D9487EB87

C777FC219B6609499EFB6F2D56A85287CDCE2CA7D2B8D62951719F91C9D9D835

6BE6D21E68B33659C857D3566545B3D714AFE521C404B91944562FC3DCF5CE92

E5E5279DEAEE90DDF73D115CACE4275E5913

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/SBAAAA+ArialMT~43 findfont /Encoding get

dup 0 /.notdef put

pop

end

/SBAAAA+ArialMT~43 findfont /Encoding get

dup 0 /.notdef put

dup 104 /h put

dup 115 /s put

dup 117 /u put

pop

%%EndResource

[/N44/SBAAAA+ArialMT~43 -1 TZ

%%BeginResource: font JEAAAA+ArialMT~8a

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /JEAAAA+ArialMT~8a def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE1EAD0C2613D954761C

1857F9289EABBFA2D2B32FEAF156618E9E844BE46A3E449050314AEB8D1D7D72

078F4EC983205B45CDF2C1E2EA14A6D61180E245DF3DCF7808B806F97648F76B

4D242E29332703E53ECD06106B072B983863D53ED567795A2E41D901F8D0A342

47C30DF92BBFC6090B5B1016374D5B9D7CA52708D32D7DF4CA80FC4D8EE8F7A7

4EB51F9B2506C6E8CF9CE4C4C68C3D9E785390BFBF1D9D4A601CBA3633584653

40E48BF8C77FE88022D97860493B27C9011E85C49E1049B27AEEFA39A3CE250A

78B8652525E1AD8749CF35A11B5A35FD38E0A4C9F4EA80F529207D16A41A20FD

CCFE5D2B7678B7B27E3929115BB92D6088BAB38F

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/JEAAAA+ArialMT~8a findfont /Encoding get

dup 0 /.notdef put

pop

end

/JEAAAA+ArialMT~8a findfont /Encoding get

dup 0 /.notdef put

dup 50 /two put

pop

%%EndResource

[/N113/JEAAAA+ArialMT~8a -1 TZ

%%BeginResource: font CCAAAA+ArialMT~40

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /CCAAAA+ArialMT~40 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D074AC3D39C7D84ED67

D7557D2B6E4B32AA87CEE8ECB77AC0AD6FF0020B4583FD366432531E0A697B31

D4E2F4BF2D1F1B99C8133250CFB3EB64EFCA14DEF92B4AC0877A50707C200037

6C1BA3677A7E877427CA7C51C22CC68A91DAD24615CBDD65E868BA39EC83C9C2

86BF519E742B4E6156C60A6C0D4D8EAD3061060D52FD8859D1EBA3462F127578

51CF63A25DFBEE73F9684B271F48E56F0A58B4E4409303DFF7F7B96A03C1963E

5B76619E62453696016130A7CC53C1298F105AC48BC4979E30F9A120DBB87FC3

F2FBB1B83F3CBCA0C4C77D65D8726A4F82E9D3A057C24FB2288E2622F8F72B4A

294F9C7E714ABBE4B8436DADA0A05CAC3338EAC2781757339082B53644D9E51D

D3CD4F20A9F6709610312C1C04999E1F33AEC938643EBB0A8A4441470DD4FF7C

6BFA3AFF5D4FC60E7FB6C2DBC26C723CF29A77E864CA58A16A4F77EA702C5D4A

93B19A64A1014DA403C91C0AA3931AD5CA3E154FE66B54D9410E76193737F653

AB41C68BD2058F333E56951F5FE8AAA8BA2155B1A82096D05DAA0B10162A99E2

4BDB9D32973271953AE7D541E6CF4AB55AC2615A4AE88FD46581AC352FFB8533

32700C42A1330787399626C525CFE65F3ED20434AE545B7E5CFB1BC409B0239C

03DF700773C1600871

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/CCAAAA+ArialMT~40 findfont /Encoding get

dup 0 /.notdef put

pop

end

/CCAAAA+ArialMT~40 findfont /Encoding get

dup 0 /.notdef put

dup 61 /equal put

dup 111 /o put

dup 112 /p put

pop

%%EndResource

[/N54/CCAAAA+ArialMT~40 -1 TZ

%%BeginResource: font KEAAAA+ArialMT~87

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /KEAAAA+ArialMT~87 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE05DC5067784DE4D984

2114F41526B9E556799FA437219B291EF62340113D2F021A9EFE034B66C8D5E2

9E783FAAE7CF92172FCAEA926F8BBF05236F988542A1251147FF12D955D7A01F

B7B42707883C682F3149D422B0C8B02F1F1B68A3AA5B69AE1E7740C710F1228B

A42C86A88B83952B7056064338B87553F3910373C9DD4B11580E4B87C5AA443A

35C8A05C11654AEAAD6C960DE57BBEA1068C

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/KEAAAA+ArialMT~87 findfont /Encoding get

dup 0 /.notdef put

pop

end

/KEAAAA+ArialMT~87 findfont /Encoding get

dup 0 /.notdef put

dup 49 /one put

pop

%%EndResource

[/N114/KEAAAA+ArialMT~87 -1 TZ

%%BeginResource: font JAAAAA+ArialMT~3d

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /JAAAAA+ArialMT~3d def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE19A2E0458FA3DEE10D

B82465F9B999F5A60CF6F1112713FF27FA6956A04FE1C887723E16B546A68B48

DFAD8F1406751D22B95FC94DFC93281E38354A90C2E4C3D7B3BFC944067F9FA0

838BAFA5342A38A5C5967DC7EBDBFE32CD0C377D891D53F057650258CE71BB96

337A398878

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/JAAAAA+ArialMT~3d findfont /Encoding get

dup 0 /.notdef put

pop

end

/JAAAAA+ArialMT~3d findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

pop

%%EndResource

[/N9/JAAAAA+ArialMT~3d -1 TZ

%%BeginResource: font SEAAAA+ArialMT~84

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /SEAAAA+ArialMT~84 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE0C3E715A9ADDB5FEA3

00D214F2BF13A085B167F51127DD3229D768E4E26AEE9865147E65F616C7A0FB

375CA79DD823C3DC1BC02C3C1FEB6CB239BD3393BFA10CE6C460968E071A643C

9BB33DC03D69D2CBD587BE9F881042B04F646D079CCB6A30C5037AFCFBABE577

7E1F51DD37147DC632BDD0167988C868A80C66C055F509CA968832324D073218

8AE4F5AC0B32D60C9F30DB43A45F6BAE9518B67D37D28EF34A060ED6A3211093

DDA9C198CE572D133AEC89CE8BCF0C9CCB69CDF8C3C78D1D9AD8A43306209954

3A06B82A7160BEC9BC67BCC9BBA32677915EC61AB80800D01F65BC0E7001E4AE

82B83D4B610A77B3942D

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/SEAAAA+ArialMT~84 findfont /Encoding get

dup 0 /.notdef put

pop

end

/SEAAAA+ArialMT~84 findfont /Encoding get

dup 0 /.notdef put

dup 53 /five put

pop

%%EndResource

[/N122/SEAAAA+ArialMT~84 -1 TZ

%%BeginResource: font WCAAAA+ArialMT~67

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /WCAAAA+ArialMT~67 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE0FABDDA230D03C5DDE

281DB363D757F0C95BCB2A43FB2A0FEEE74474FB0E4DACC1DB908174036A4B49

F9A63C7D73FD591ED0050EAD769ABAC5A1127C07DB8633ACDAAB77EA14F33BC2

A694D22AF34FD938424FF939C787D37E120580069304F35A58EF28888F07BBB2

F7EA035E168D72C3E84394CBA7E5B532A9258895DB08A704B39AB39EA196BF89

7097FA78750B0C40D84AB425C905CDCE0E9ABC89E996B40B39771EA03E80FA9A

AC7E40C5C65228D8F04717935D2D86A48D6A9398ADD691E81C043E59F0435506

0CBB7003FCAC306C1C312F9D6712EFD2ACC73F2AE6639267A9FE312378B3CD5A

87B91F11EEEA3F45CFD0A5232528E8A6776B7CE0D9CC83A363873B1780BF963E

B3ACF57E37FE237F34F2840BC1192FCB929110DEFDF8ACEA1FFBEAF8D59C7196

119C234E74CED4202A0A1CA7AFE2BBDCF3BB89A20D2A95C1DEEA09D7473847D1

6AAA3A63260CA39CCA016DB8440B4EC9809DAD688B081936FEAE3B519393

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/WCAAAA+ArialMT~67 findfont /Encoding get

dup 0 /.notdef put

pop

end

/WCAAAA+ArialMT~67 findfont /Encoding get

dup 0 /.notdef put

dup 56 /eight put

pop

%%EndResource

[/N74/WCAAAA+ArialMT~67 -1 TZ

%%BeginResource: font TAAAAA+ArialMT~3a

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /TAAAAA+ArialMT~3a def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE0C384554CEE7C32100

ABF656EEFA4EAC13217DC505C78BFFE8F3739CF372274171243D2C9D4E794F19

8DF28F80DDBA52C5DB78E12A76BE2543882A3E50308E562954483FF3C9735F61

E1E55F849919A23E2DDC3796FD3A097D8C164C0C0F2AF7CC179E7EFB9508C1B3

F6BD52539DE3498DCFD307018F0B18B32BB8A5952E5BAC931DA6E7BA3BD7D16B

E8E7D401563E034847277CA72CE565E47F025D7D6A84E0

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/TAAAAA+ArialMT~3a findfont /Encoding get

dup 0 /.notdef put

pop

end

/TAAAAA+ArialMT~3a findfont /Encoding get

dup 0 /.notdef put

dup 52 /four put

pop

%%EndResource

[/N19/TAAAAA+ArialMT~3a -1 TZ

%%BeginResource: font OEAAAA+ArialMT~81

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /OEAAAA+ArialMT~81 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE10F5720E4ECEB90DAC

BE3FDB4E9AC75AC8AB296338C4CD0504F9EB1FFD8ABF991752BDFE7210644F10

5BC22C81A8A8D3D722C162E90284B193F0BA05B5B64046209ED1E2A88B37996E

31AADAAE25830EC759036F7BF642874ADDA6B57FC3259E611CDFFC02F9073655

364B65719A43E2FBEB5E873F3C2D4F0E32AFF675A8DA4272CA3A11EF255B362E

1239314C99DA230BE5107898010450C13AE2F959E9496FC44E3CAD35C33D3E3D

BA6277A3B74AE6512899538A656AF2EEF9847A7F939C58461329708DD5069BE7

A497C54C0899949E52E8019C303F89F9CAF713F62CA9E08A9023D0349564624F

D5D19BEC671D47B8397D4E2BB4A3F681CF44E63E85BB2B5FE1F90791488433B9

2E46924322

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/OEAAAA+ArialMT~81 findfont /Encoding get

dup 0 /.notdef put

pop

end

/OEAAAA+ArialMT~81 findfont /Encoding get

dup 0 /.notdef put

dup 48 /zero put

pop

%%EndResource

[/N118/OEAAAA+ArialMT~81 -1 TZ

%%BeginResource: font RCAAAA+ArialMT~64

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /RCAAAA+ArialMT~64 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE19B7193F688DE983BF

D371139840AA7D95A4668B9F297CD479CE06BE335CFDFF3BAF8D3CE8E5952285

514BC5C0ED51DA133539D7977FCD6E2BDB33875313541A9A611F11C11DE185D8

DF453332D0EE5E337BAC7891973BAD3E79BBAC7EAB3389B21F3858784F05B706

124BC8E5B2047453459A88ECA536D47A8E65E0731B0EB20117DAA3F21616E76F

812491DE6CEEAB13593C22CD3432AD01B6F4C87B41E787E5A8FB4B7815B6C7C9

B9220B5DD5

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/RCAAAA+ArialMT~64 findfont /Encoding get

dup 0 /.notdef put

pop

end

/RCAAAA+ArialMT~64 findfont /Encoding get

dup 0 /.notdef put

dup 55 /seven put

pop

%%EndResource

[/N69/RCAAAA+ArialMT~64 -1 TZ

%%BeginResource: font SAAAAA+ArialMT~37

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /SAAAAA+ArialMT~37 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE1EAD0C2613D954761C

1857F9289EABBFA2D2B32FEAF156618E9E844BE46A3E449050314AEB8D1D7D72

078F4EC983205B45CDF2C1E2EA14A6D61180E245DF3DCF7808B806F97648F76B

4D242E29332703E53ECD06106B072B983863D53ED567795A2E41D901F8D0A342

47C30DF92BBFC6090B5B1016374D5B9D7CA52708D32D7DF4CA80FC4D8EE8F7A7

4EB51F9B2506C6E8CF9CE4C4C68C3D9E785390BFBF1D9D4A601CBA3633584653

40E48BF8C77FE88022D97860493B27C9011E85C49E1049B27AEEFA39A3CE250A

78B8652525E1AD8749CF35A11B5A35FD38E0A4C9F4EA80F529207D16A41A20FD

CCFE5D2B7678B7B27E3929115BB92D6088BAB38F

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/SAAAAA+ArialMT~37 findfont /Encoding get

dup 0 /.notdef put

pop

end

/SAAAAA+ArialMT~37 findfont /Encoding get

dup 0 /.notdef put

dup 50 /two put

pop

%%EndResource

[/N18/SAAAAA+ArialMT~37 -1 TZ

%%BeginResource: font UIYUQW+CMSY9

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 13 dict dup begin

/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def

/FullName (CMSY9) def

/FamilyName (Computer Modern) def

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /UIYUQW+CMSY9 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { -30 -958 1146 777 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECB48FA43E4

4BE895991CB9C373C80EADFE8BB0FE77BBE5D8323BD9F747D696811F9ACF96FC

D5E030F7E76EC0067CA05F844ABAB91222E3F6A227ECE22D2EA7C02B71DA2171

CAAA5270E53357FA407C66B2E4A26D78F0CE4D48C44684DD2DFEFD5FCE7BEE40

4D9A1364243D9B109B0CB67A65F0EA2D9DE80178F28197E87C556B40FF5269DF

7BF01C2BC217638423153490020E4905F2BAB6BA385426BD622471305AFF9351

07F89CB8B737314CA73C576C9543469723020BA048964B4AFADF68108E60986E

72A1C612B45724FB920F1D3D49C91CC09BB153F37C58B5508294A071A17F1029

B27B8EA58498994FE47966E50F9865AC4716576FE37F6AF013E6306708EC104D

66749601968B97B409B6E981AA4A71D289AE6AF0534B8427B6B6C676AFE6D340

1AAA05A9491F1B1CFE0B74BCBF69B49FC836919BCFEAD960CF9308D08B8CEA10

65311988343213BCA6570B37850E294A0DDB22765474624A8F384D24CC84403B

8DDA8265D7CFC3C766938225E5AAF51D1469B73D857CEC2633B35452DBF2A1FC

7FC6D8346E6829D1482B85B3D5D8C25FB7CE55242812B3330E88CE9B182BB072

EC9045BAF36DAABAB83CF7FF6BF266827189B55EA8927E704A4035AA331F8392

837EEBB04E19D3A25A98B6D4BF9C9CACEEAFCAC041049DEB8597E4DE72B10300

762A07106B8C104082948F77A70C27C4E95A3D4F3199558A7AA00A62E9A186A1

3BCDBD4980C9C2A38C82CEFFA480A1C9EE1470D40789F876DB5ACDC7EF32A19A

6FA0E604929DF1D89F2BC6D0464EEE4F261F9CC7C8502DA50F8AD9B59DCB59AE

0EDE30F00F3AB6560BCF551AC17922A1CE720C7B6E13EB3999591D16E66C5248

FEE4783EB4624166A8FD69227F18527F079F8421F96E92D0D06F90B04D20B6CF

A3B1631FA2D08FE75D2B8B235D7E4A5A62E00F5C2950E3F5E6AB56ED63EADD49

C2C833C1B27056ECC108D0609E17FD8F430CE0FF38AF9DA81FA172958C75F616

D9065C11F9A3C931CA780F2A48F8B9BE8301AF214898173056EE88C411935D33

05B634810C1CD8E60949EED97527479F73E07FB72A36613D3C1C92AE9A796C4A

E0FE9C87E4BCDC41DF4373D1924CA502396227EEFC996C34C24FD223E79E9098

F973E44EE9C276508E6EF277706256258E6C64AE5843A3AFB7AC68B84D6C95B2

F088840CAA741A57ED1F3A99488B876F69A8F4D5F19B135F98BD0202C8FB9F45

B1D5B29044BE568E60FE45D6A6A77156ECFCF5B59B1AA8540F2A52E426AFDE06

93B36C94CFBB02CA6E33AC9A2B0FA889845A7DDACD3BEC71BD597FE73D7F10DF

ACF8E85E68D4B562B1013C3ACF2F2723995A1D5C5C5130F0BD614C0C9F4D77B7

7B46D402ADBD6C6F3D6694C0EB1AF12F173FE33FECE09700D691B0C077164F92

1E271D0086297D2F260377FD3A95B8A229589C4FFFECABE56D66827B54CAB57A

A168BAC95CF70B65F81717650CD8FB5E879B1EE9060E26764579907F23E7AE1D

0BE9EBDAB69EEB9F0087CCC13DE9374B5A6AF6229179AB25A4DCEFC8001477CA

00345856EF236C243268E87F3F5410511E41000BD687CF6DA704E96F4DFC91FE

75E87169A849001C298C3A6030A9B4C39777E38029EC349F7F506DA5DBF8F323

352D9F3300529077237DDA4DAFF8AE3950500414BA0E3A253B6392A1C8AE87EC

590106B82872ABC6FA00609696041FDE95226C2ED88BC063BDB70983E5CC4214

A20C5E921A416D78429ABEC4DB62D5266A921C5395741007DE6C2D584BD00FFB

BE21BEB9D77AF0A675E289822D2FCB0F5CFA4099D32DE119809789106747B211

81418247E71AC68D03A6578D9F055796FD0A1B6F55332817512D2BDBB6CF5CE2

41707534A7F7DB1D5DEA9735A58BE4D8033D9FB0D70CEC2E74CB45D6273EFCE2

C856B511141D32403245A75B989C8A2733ECCE454DD09F0451259D73A0507868

DDEBB7EB5B9E6CB275F25F22EF8523259320A77859B56B3198176A803C9831CD

BC89F92690D37307FEA4F6637A31C73871BC461750DCE680EC9E96FB1FD3C1DC

5FA849534932B435B85EF807DEEB267D039EC7B0B4D72A8CDB89554172E59E73

485D30892DE270BBDC9E0C67C31F54CC69A0D27090B40A384D0FAFD2EDBDC8C7

0B6A8C217326663D34739EF3BF144E2110AA037165A8E43BBA1F915E3F8A68AC

926C596B6A7DBE3F25F8E43ABDE342C274EF99D1C7FCA1DA12C7276F934DE558

06FF3033A08EFF783A44F4BC7B86197D2E477125ECC9613DCA3A183E5B6F5E6E

8C75B94067A1D61A61C970DCCAEAC3ADB63B711F781BDC2F6D2CB52FEDB28AE5

CEED75A3643FE565B9009174803701383DDFC13AF2A814E48D1BEAB585813734

BD2035AF2379194E0C94BC68E8F91F6F364AFB22A2FA90FF562D3D269AFE1204

18EAB92B158B0DE0F5AE8C2BEDDECDA0A827438C14C4DA9625DC3149794907A4

B2D28632424C0A4441304649F227684EBD4399AF76

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/UIYUQW+CMSY9 findfont /Encoding get

dup 0 /.notdef put

pop

end

/UIYUQW+CMSY9 findfont /Encoding get

dup 0 /minus put

dup 1 /.notdef put

dup 15 /bullet put

dup 33 /arrowright put

dup 102 /braceleft put

dup 103 /braceright put

pop

%%EndResource

[/N90/UIYUQW+CMSY9 -1 TZ

%%BeginResource: font NCAAAA+ArialMT~61

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /NCAAAA+ArialMT~61 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE0C3E715A9ADDB5FEA3

00D214F2BF13A085B167F51127DD3229D768E4E26AEE9865147E65F616C7A0FB

375CA79DD823C3DC1BC02C3C1FEB6CB239BD3393BFA10CE6C460968E071A643C

9BB33DC03D69D2CBD587BE9F881042B04F646D079CCB6A30C5037AFCFBABE577

7E1F51DD37147DC632BDD0167988C868A80C66C055F509CA968832324D073218

8AE4F5AC0B32D60C9F30DB43A45F6BAE9518B67D37D28EF34A060ED6A3211093

DDA9C198CE572D133AEC89CE8BCF0C9CCB69CDF8C3C78D1D9AD8A43306209954

3A06B82A7160BEC9BC67BCC9BBA32677915EC61AB80800D01F65BC0E7001E4AE

82B83D4B610A77B3942D

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/NCAAAA+ArialMT~61 findfont /Encoding get

dup 0 /.notdef put

pop

end

/NCAAAA+ArialMT~61 findfont /Encoding get

dup 0 /.notdef put

dup 53 /five put

pop

%%EndResource

[/N65/NCAAAA+ArialMT~61 -1 TZ

%%BeginResource: font XAAAAA+ArialMT~34

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /XAAAAA+ArialMT~34 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE05DC5067784DE4D984

2114F41526B9E556799FA437219B291EF62340113D2F021A9EFE034B66C8D5E2

9E783FAAE7CF92172FCAEA926F8BBF05236F988542A1251147FF12D955D7A01F

B7B42707883C682F3149D422B0C8B02F1F1B68A3AA5B69AE1E7740C710F1228B

A42C86A88B83952B7056064338B87553F3910373C9DD4B11580E4B87C5AA443A

35C8A05C11654AEAAD6C960DE57BBEA1068C

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/XAAAAA+ArialMT~34 findfont /Encoding get

dup 0 /.notdef put

pop

end

/XAAAAA+ArialMT~34 findfont /Encoding get

dup 0 /.notdef put

dup 49 /one put

pop

%%EndResource

[/N23/XAAAAA+ArialMT~34 -1 TZ

%%BeginResource: font BCYNDJ+CMBX8

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 13 dict dup begin

/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def

/FullName (CMBX8) def

/FamilyName (Computer Modern) def

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /BCYNDJ+CMBX8 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { -59 -250 1235 750 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E

2825687306A156DACC32FBF07CD53FCFA5F8BEB4C85C022641C2817904D210EE

C1B9CB391931A7DA79E981F6D449067CB22BBBC1C7E17F31494A030C64C3D168

01AD7EA9844289C5FBF13E87EB38D47EFECDFD90987CE63AEE2F73A41DE9D88E

47972B7D71DFE3C0971C15A0A2EA71DB75E8BDC8C575FCE75767F0757BD4C3C5

8EF2FE5165B8546C92942358A58A42B033964534D0C76E2CDB1E37C5F1BC8186

B645497D6E729179C71B60AC52AEE43C00CDBFC37940E4BC6B6D05B631BB7C49

E2D65CF9FBEBB9630526D1A82715F412115479EB78B4B343B6DE35BC405BF4F2

4C3E0C02E88B6477D997D4ECB63CEF210C4DA7BB89CA6710185B343DC7B6EE6F

A9B69CB9D103C3947848F9E1BFF0027781DB415A4C919C3F2E5DEF1B5711D073

BB39468F447727EC3CFC136166A897C1491F4FF2A617FCD2A0B1C9F46BF1B372

DD1577E2CD89468CC85121DA52E91723FFA3110CDD954A127CA1417A31FD2336

96BD105A36AB813850EA85F7AAE495F4332FDA7D212B85E3B0F33F5FE81FA7DC

DB8B0496F54FA21B3F6987C6A6FC98DFD511D5DA9A43F112171C23DD5562E273

058A04082EEEE3C0E671B3988AF2B4857068C78624023236C41672EAA89B3C1F

168801AB64E5D76E4B93BD0647A3FDF3BE49F7AEFFB82EFFC701A7A7D20E9374

18CEE26BBEDA484B689C86A94B11171F8285EBE1EA1AB01A60EB4AD7FFF37CB5

8EA3F7033D76F5BD5CEE6A45B16161933269CBCF264CF146DB6D434045BBD7CB

D347ED680D3D419D5DD690FB7D66A75658E3D3BCBBEA84F8DBFC478D0ECCCBBE

05F4ECFCD5E0F48C239F7A254C4451F58E565CC0595645DBDF62F4F31394CC82

E270E76BD2E4B2C7D1B181E483401A787A9FBD6C23683D589368ABAC8308485A

41B084E7607BD9F56E75EAA9FF1B71CEF781F659EF489C542EF9F4160ACD8BE7

69809BB1533C11BA183762E9CCA9A187427B92A896609AA38925229E4901F9C9

34865216F652FD8350E0563C2DA2C51D90A1A3BBEE0D84C9B59CFDD9D822EF19

B7A1B2848FAD13256F7B1AAED1CC6C4CD3FBB209BA0E74879B5B64E7422835C8

839EC80DD0D3A716ADFFB3D6714D6BDF3DFC2B9919BEB088877DFA262497D374

92808EC56E1A6D295E613CE61050DD61DE3E89278B43C6D09AC9F2E3AF13708D

345EBEAA08F8C2B416C6D1AD6F9B698729A6369EADDAB48CBCB5C2252AE8F1C7

9AC4A1F1501A0094F45FBD450A0FAE0EB699D173E4CF84883674A1DC47C5A785

3A9052237A36B5AA4F741998673720FD199F0E9B69D9686E50EF24C4351299E0

C9FA6C603FD617724D7CAC03AB4E7EF8B97FF0861844547FF849DA47AB4E46E4

B607827EBFF1241059ABC79BD6E2C1FDB24380BDACA2B343BBF17472D12FC0BB

93154E1FF7387C28B669FE426BD54690DF1FA07F3B5C22464803352A351AB8E4

01674FC9FAE44785B86167E8DD078D61E09AF80C635258B6489CE153C4912D22

50388761BE755242099D05EFD874A92F1858001B676400530419549AEBC3FE8D

AD981C6296DE370E5DE2253B67D170636B9AB1E19E21C59EAB867C474F5F916E

1C5049F1A213EC22848B82C5D0EB19DEA770839EBEDAF22945F7A7A0CA1823AF

CFC00D18102B9208D790D5246F10FD2035367FDEF2CD146D73609D363A366BBA

71D104750D5A6905ACE6783937FF88D5B18F766BF42DCA078BAD3ABDAB275317

599E0661A0C1DED7C86F375C184CDFD8CDA214676FF90A4DF0A3327C61EB5A08

80A37342B3599AFAAC938CE5FCA1B6C13B39BE2B2789A3AECB3D93F205476620

DE2C6DEEBD2435F18C037EEDA3A9A00A30E878D91FC6654313E0001C9F752883

6F628798FE5E9190F177D9EF62791BCDAB4AFEA99AB1477BB823CBC632301F5D

DF21C6B500B4FD1F6A96DD53144A60739F8421E4A4FB97CC6C84744D7939CAFA

FD50886AD22D195EC47E01F9394B33B01716D0FF16E96F8DF0B79372A4A5BBCE

519CFF01E25D4F6051A21D91F791F877A8F6A8FECAB9D5432FB75B5C6F7E8F35

2FB5587863A6FC3E4D8419D06E4C7CF003F6E12848C0DF419960427290FC744A

A844D097754C19341C9C9586730C7F459517AFB3933DF9C60DD6D00E6FF8BF66

8000144CD1B95EB2B7220A4C67D430F4CE9236534ADA782C9D77B1A4428DA15E

6766CD0D191CFC1894179C7923805FB925FD14EB1ABE73A5351AE78D056F6F96

6D3C90C6290DE58AB542A52EF94185E9F4850A21C060FA7E29AD7ED675633DFE

DEA0A3D612379FE3ABBECD35A08DA1CDE790327A0EF747F01C7822E28440FB4B

00593B9DD528D90496CD65A98D05397FE38EA7C50AF7A1A31A2B6A34E5E4B9A8

C23A7B9992D18504A8CF373CEA7312D1C76DBFA9C562C8FACBC62AA5A6F97B27

5F64E46EF6B385F09312EAE4510D9395BB414755C5A988F3A8B2EB896614731B

BDD194A829CC75F838F64E7E7566072B50CCEB5DB1972FDB2BCFA1A554856D86

31A5049CC5C9BA75A7A12B5EEB44B15F2BB38130BD76871957944C29F01BB602

D2E4EBD907011B510FC91A0F447D4684536394550F652C00DDBDC122AF765755

AC3ACCD8C11E11C949B256D82B818910BE1570EA482B6781CDD7023CE0246357

270DB29FE965CD2B09C19482CE32ECC51962949C71F23F7F1E4BA202C19C8AF9

3784267C893FA6E556C91F781C05B1814CFD52842FCF74829966A0B63EB8A829

29E0751140388DF222C02449363E15345D464BFBD3C22E6C3AB0AD4BD31FBE7A

31B65D4875E672A6A8343510B4A58C102FD1079C71C233D454518E7EE489A714

9624C7504A1700BB11247FCE1829B497ED9610E156AA212304AF1476C08AF317

8C0A7B0ED11EE7B9C2F9F388A3CC031DE193468BAD6D3DFE95FD77ACA3B40465

176B5A22F2C7BAA1E284CEAA255A90BF5EF7E61526163F1C74D5AC801E8FAE0A

4D1803230D1AEDDB864D0882962C573FFBC36CA55A0A7662134B01E28298C433

3B80FB5E6080EFA30740CAF954706DC73B367921BBF46177DBB9C1EDFD98E675

845B5A0F299551F2E89D36F83FFCB07C3A328C726A2BF72A9AC2723886A4D6C7

D55FDC689AD546D3AFFE25F0335CC5E3739922CD0E07438C80F74F1367F020CF

35553CA7287F8CB96526556BFC5FDD863FC5D94D933E34C2B3B0E21E0F094624

F71A48E3AAD564400CC68C74FFBB0E1FE86316A74EC6EAF866E00E9553B541CA

F92D8099A69B03D55A1A2E50392CC5A9CC6BA8BC64B336305B8D934079D0F797

D4794EC8283C42FB6D586B5F380DED1F3873A8BDCD8E3164AC5C6155C9BAC429

B764F4AFC3F039284A787BC7F07F5F7ABAC73DDA7D97D351CF68E7C2C08335C4

50BE3CFA548CDE5522B35066D9D9F24FBE9C61503F4D285A7D765ADB7C0CF4BB

FAB58F420C375EA58279B5A6FB8C29C5CF3C5CBF44B0E57915F42D40EB330C8C

EC555BADB35076F24975B91FB99325AB08E53A4161974154B785EC2A6F896198

312FD240960CD8C5CDDB529BAF021066CBF197BA6DD30C9C3D9580505432DC7B

2D07E88D5225F0193A21FE6E1266FAB6C7AF43D00DFA45FF0464B7687780FB5C

548F48E625F7BAF75B1438FEF53DD206ABBE6D67E56F61ECDD072BB2103DC432

A184085CBB368A3F3D43B3D5B00D6637F30E89954BAA43C66DDF71B48BD4DFE5

B26518DA4E94F76F4E41CB8533D7760F53F47B59F7CB691142ADA41E2468F554

8C4D3B6975F7F2EE6AA30A72C23BBF7A68BA65818AEE72769AC9269C4C3D066B

B251B4D44223FE791AED0C6044B1953AB1D98BEFAAEF3672518DD8F86F605165

06E9AE75116ECDEA514971F792D1AA3FB1B98372A1FE3084DA0FA59A56AD1AA0

E32841728600041E6387D2182A7B11C4396C7674C6CCCF32C0BB07EA75B65F62

0EE90C34599E9524A5BCF2747077301B613DD07AB764479E8B6056E8DB684DAC

DC7F1B25DFDF738DD7D1C8CE7CA4A446DC9AA759DB7063EA54671241CE8D0FCE

236AF8D8782A09437E800A8B7C68294B918AF0535A7AAB2E33222115582C6DED

3B74B43FF0AEABB436BE835936C980D435ED9482E4A23C3535032C9C3E25B896

EC93825A4AFE43FC3C328DAE139180F12E8C5E356EF589946A6B8D8ACEE86856

DBBE2417E4609A053FB403ADF70931111130F8892A611F7BF0785362387B9EC0

06E642A448D0941ECE90CCD3949862F92541B8015B8567C035E544A911242D62

405FAB81A94DD369DB6873FD6CDE357A486C2B12A91C3C5FF7B6383E652EBB2F

F7FFC5D807A4A39CC67A5FD7E4A170A2C9E6CD72C92D4F87973F8297F5CD0075

E404E6E14FC3545C37014CB2F14F30DD9F661B0A375A3B499DDE574CB1C31007

E9BBCBA5031E32047F5E8D9BC40F2F6010B8D25EB220821A36C4A34B7C338591

C7B145D5CF55D78381B24878DB8CE0D4CF635DEE69991DA268889980726D4F67

467CC97254F3D41CAD6DCBDE6CAE7194F9AC04CC5C2E8AE94B08B5265E34FD49

1F6D6B92238903B0D271C26177C763A20746902E051F710CEB6FAD19C1C6070C

5DA2D5E13AB1B3215FC2B6C9AA25874237E4F626B234B993BDBF08DDB5476B04

7AA8A135B71F1966ADD2D5599B4634FD5EE4CF6842A462534B93F76BA4986F6A

DC2CF9E4219FD41EFD0D78043B5536F6A4629B9713A36B0158B09C76C63A7A80

D117244649797EF2BB53B2FA7EA6743F1116A0126551E508B01944E4D1742E7E

195E479608E42570A620722B65672111313EE174DE0061560844B5A96558892D

FB6A0C0CFB4BF763732856CE581E076AAABFF6C6C227A814B4FEECEB50503E34

BBDD26A51DBF1017E09ADDBF544F84CEE65C61B089DE8D2A02AE26EFCE49CA52

955270693D731AC48C03BF025D88B3EB467E2F44375F24B643E2DB30434798A7

34560F695AB4EF2AB27195538C3DB2625846BFDBDDD0F96A512B39FA50879626

257A0503F29CFBA1F2BB218A9557D6997AF4484310DE4376FE60AA2E7368273F

38256796F1BD1235AD650FFB5A6F7D5B3216C560A5C6E6F0E7520DF41C3419C2

59B4CC2A7A414ECE37C441712AC543AEFD86F37538E1B27A3385A92C77B245D4

07E0FE906990486E6DD2519EC26E8E8CE343F3520A430224E067A485FD448E70

4DCB1CDF15B4D9CF8852E6FD6FCC682D596B902509A6B7E0FE9F8E17E260106C

7D50E7381C59516C149DFFC64BDB7C814FC27CD9ED76AA9C0E819798D3620EC5

A87D9193A357E0B3AC681A889D5694D4A5FAB23A58DB4B4C476855756D7EC2A7

B09522ACF37034A275B8334D3B050F29B2FA7E258776CE97590C292FBCA5CAA5

3391FF503425354A2BCCE7802F7698D67D66A8BE32CC51DAC86EDFF8E57E4300

2CA6163604157AB7F393B75D199844C76C90AE83B5C8B8D6D8F77532C33F8C5C

C2B234E2E8E00577AF1C4642377ABBE99BA43BABD1918D72DEB05ECC177AA181

F9232F24CEDE0FF5A18E3E2D3E40F9179898CE499B64439AF50215EA8052D4A2

DED05CEE991B3FCB5FEA7CBD9D314C24B8174FAAE5063E3629F4EA9DD24289E1

457942FAC0573C048C379549DE3147682E0A5974CDFA27E339738D0E72140343

2A358740CA7FD29B6205A7A6267FDA9473DE757DB6CEF00FB5B3A7C28722A6E1

C1A588801E2A519201777F4CC2CF0448938D571780934BB14371AD9E85C44F8F

AD179958121ECEC8E84C307E6A5CB3DCFCA55D39A45C98F4B3E1FC2E336E07AA

E8A1FC42527FC37C35CA44D49244C498E74FD64C2CA85CA94DDAAC4E28DF98FA

E84F8DF33111F2451FB3F217DF915025C95BF3849C30859938BB0CCC85FB5102

00417549BC20DFDE201FD0C605F362B6DBBA82B32C02315C5ABDF74B153266D9

004E860AD226DC08EA8A3D6D26217390DEB151C76CA8FAC76A4A002E69F75F58

9B1256020ADDC89AFEFEF2A8A107CC78443742AE4C539CA18848935014DCE756

96EE2DF18F4C8C73C04BD95C16D3D5E6CDB34B4919AE32426DE3185777B04411

4C29A49EB2D980D73A81B7283B769AE667FB6EC62721D1BEE1F81C81E2A27E25

753C9AFBD463B76787E96E244AD0F7669B21C4BB6D231A5078FA495910457AED

218A8D5F8BA47F2AEF73E1787741BCDDA4A2DFAA5870B565D76432D2C795FC07

41A12E56ED74C867D4B8AD45A9452D2BAFA113FD6DDCF3967D259507BD3653E0

451F3270C5174F3EEF4EE134D3958AECBB5FEAD3E9BD0411E345726ADCBEF60D

6CA80E9FE339FB12E7E9B420388B149AFE027BB6B4EAFE52DD2EB57FF064E142

B6E451124E365C017738062288BE52926CBDD89A8E5B0310F13049901A8FB665

A743FB2F7DC7E21B3903A593E9D49ECF0D5FF1F1586063992C4256251073F617

2FC533DE237F25A25ACED1E969126754672AFB831323D8896D4FD42EEF33B727

C9AFE1918579D2A4A268432F5D39BEE292DDF1E397BB1BA6C48DE16D853C6452

C52D9ED3A56906768F6E18CB84A85E0C3F8F59202B3E95ACE22D36269C0502DB

2AD97D8C736876438ADED9D5DA4359CAA6D1AB91A7571DD8C351DC90916B5A0D

AD336822A48E7336BF1E3E88F9801A2A908A6BC4F8CBE69102085B10DD85A531

D9CB5C3370BAC9110DADE461017C6232611011896228DA98D8D5ECCE0F24490E

63A7409F956FECC5168013B91FA633082F9F97902AFD563E49E5DF2C25519AA8

AB9A9F8791574696C85E1DAD7CE23B3886CFB238896EFDFD278D512F5D7C73B1

8A176E48D29A6A2EC8153C30B95B921DD386CB1944FF4A8F75F400CDC0F4209F

9D53DEA618FBBB71081447117CCE3BB2F00265990A95791E40078299277AB9C5

5A41EF66FA17976F3E1268CBE8A2894289148948A6D7954CAE48705C15E50266

FB12D605E79F8AB69827CD8B5A25F871DA951F44BE1B12D3469F58A66DCC9092

B3CB19A53EFFC6CE18987B5A540D19580ABB467692DF7D8A5E8EEAA077647535

70F9C62D1DE26BFF330D8F289AE486DD5307F0DF0F2FA20C5BD39C538FF9A044

417ACCA077A3A53F467BD99B0DEC2D5108E77C5D5FBFB28D723BDA41F3F3D229

84B06B37A1E0AE1E849F6A51A127862CFAA79536F27EC1762DD8AF598E179D7A

27756C49CE6E3CF32FA0AD9B1779E62A34901DD54CE9F3345A3F1314517CAEF0

1CBF9194A15ECA3D51D756005B19F487D75C6EC2E334BA3EE129D07FFD77DF4B

E8CD777CD7635902EE3F999434C0F13C4EB2A2366AE563FF67CD33E8AB59357C

42F67371EE02E218D9DA448430D558AB3E166FE977DEB000CA9DEDDB70BCAEB0

55D8EBA93E8F047A5AB20530ED6D217843714E9D979DD0CDB721E70B38F872B9

6B0B4D32E782A5F41A503C3345FFCFB193BCD0C080B37B29296A6239E4CCAF74

544F6B925FF229B4B67E3B5340A4F54F4C46F583A5524E266C0F5CF2D7187F5A

D84924EE3FDF4A615FE5D8B5B42A5199AB2675E9869E61035E2C0BE12E1B6DAE

B11D1C36050ECD492DC020A2B4FCF044E7636A3E74537D08A9E37E6CA762DA62

322DC70D223F5D543804C8C7B9CFF7D88580EB68DCA9C8642658275C7F75F482

126CAB7324B86C36BD3BB6F3C1B54C6FECA434768284B39FB456BDFB5F1EEE27

0120021BE9E0947E81F710A9D9D207D12334A1B4CA25EA0465B120CB8129CB23

0B3350A76AC05CE9FC695F321689B41393208EED4B3756CAFF428D77DE2986D7

BB6983F5A586190A160FC90C3457093A977802010094A88CAD42230C23E2FC43

A40E10B65E9A9799D4104CE201630A130DE5186E1B3D2623779F29BEB9C4A1FC

90ADB1FC35377B69CFA0893DB8513A8B98960C31FA15CDBC782075D39E185C6D

C002DD3F6A0405357CE9352A83CD7FAE1797D323BBDF58F2F225A2FA3D5DF188

ED934F2D39FB7886F7D1C5595F7C409C91F626CD0D1D145327A93871EC14BAA1

E125CEA839CE44EC826DE9BA86FD1A4C0FE168ABF1AD23317627FFEBFC7BF552

FFFDBCE275A570EF2B4C9B32523622050E5C35CA9F7F2E7342064E7B55464F46

FD66D48EFA01BF7B9904559D3F2094ADF90E7020F4035186FE37019B8E597CCF

71B2496F33EDB0E427244303C2ADB9E5A9782C314546345AF05E92C75DCA7F15

5B6CA403685967144A060EA0E3E90B65182AB8018F3590F41F8594890D8C945B

4FC31D7286F32BD349D36F13B4E049A7840C4E04DC3CEF0AE67B0E35A7DDE1BC

159D6A1343D090E095CB962CB2D9069BF2BB13BC9F612DE0C14AAA22A0B3F32D

B57DC478DDBD719254A298224A24EF4871A9F0D0B648EE8E80727D471E0101A7

8B08E0ACB05D3104D1B5301AC3060EC9F96A5D9641188EB27D5BC8200D2FF0D6

051224C06E52C8118C0F5F5B6BC4CB2C2DCD125825D29270CA8D38815B474D77

530FF23E90D1D5F9211E80A934B510FF2D9442BBDC4C13B7AEB5949C9D0B5E13

BC80691F51BC0888E4DC34B794BBD554BE2D3B9B8F9C17A88955190C73053395

0EBCE777960B69D57A8AFA5AFF9AF36F8BE03EE8C2F23A7BD361BFD0EFA5F002

1D3407DF7BF26E1D94D1C5DD9E9DD9FB1576AAA843704EE6E346C408B96439E1

6B83A2EA05AFE968602ECD4E6F7814FD2C18952953BD7134E9C2CAB55E1F8968

2F0B915ED8F5F1DF5152258B59E5E48208DFC4A7429AB1D75BE50D1952ACC252

B16E08BDC3304C367CFB611610CCF1DE7C16FCB192A36B2B667C5FAB42494A8B

0DDFBC19B78753731F209402C50762A10F95BA7ED268C8C1BE041E93F4B253F2

C8E7531F92B1C72550B2ABAEEA1E4A2CE826D39ED70EE0DE4E5942694BC2D7D7

6AD3AC5B26A3A5E0998B248A2907C14C0D1EB0973FC617B69DBEB3B8AD50F411

885D9AA9A5F9EF2683C00DCA8BA0DB10F378CAF42AF4F349600789F359023CBE

8377210EE8752F3A52C5EE9101655E8595415E45C04C9D1C2A2A0CFAF592A29D

28F28ECBC31B1D8632800AB90E6F27D63857B7A555F448602387260EC9700ED8

332E225086C1CC30667E57F7E0390B5C975CA63ECF7A4CE6754FAC798CF2282C

5AA1A4427D284E53BB8B1BA740C4AE63F4BA7725188F5225B0946DECB0DBB21F

CA350105A1D243ADE4615E7C195FD2D763C5ADD47CEE075FC35EF11E8859C66E

22D41FCF7AD25E401AA454F247CB19FAD874BE9A0C84A8657AFBE013B5AA5347

44D49E2CAF2B85727DD48586145DD4C8347AEABAE5B3075EC8E329FF7BFAB9ED

3C368DB24E5862ECDD33E33A1A988A9AE33274B2AF1836F8560C3A0964F35F97

1525FEF69B68AAA9B41D08A7F675E1893CEF94A5220459621589EE663CF25B7E

8BB4DF971822F2758F67E7BA90CBF52D173591C29489AFBCB2ADE8E494EA1CB6

B7E5D00E4D2D2A3CDCD8D081A3F6A08C60EE43726BD1EFB0CB2CAF1E12033F35

A437C667CAD0067135448D9306426CF39E87FBBF9C8FCBCDAE0B5C92542A26FD

E40B2CAC7741949A77D37A75239A20D21693CFBB11AA3D563D16DCB8D4CC7298

0C8D7C690BDF8E74AA8ED63C3E46E1722C7C7759ACB2605B8D1037195FF7B655

FDB1CA62AC3BF1E96A30C71C2DD0CD121231758B060E7EBAB75139DAACB5CB73

0F4D6D86F1207934291089F33D586D81BC5C102BBF9AE609154AD2050AE70D3A

132F2A0027BC519EC4AC9C1D05E0CF9913B73FDA9B2B4F984853D34620E86B66

092B2A8F56D0DE16A334BC8627B83910C793E9DC2CFB610791DE8576CF3AA148

1E9393201E1FD4D33D6EFDB785FB75808B52F0890C5E33D976FB13BD612EDC34

7DE0AE2DF6866F8DC927162AA7477149494294C7D1A57DAC2F8974BFB0EFBB54

C8DF6664D0CBB960C04707EBE100F8D54C0BEB2C7295FB617ABC09823FF01F3C

2DA74AB9C0A69179B33E543828AF9469F43A147A6B8869F018C551CB06E8B9CE

0285393330B4631E35FAB9D76581521158D66E200E39ECE847FFB8B3064BDED0

C284E54475BABAC6E8F9FA3FC01B1B77CC7B915393FDBE3668F1FD3C4BA8BD0A

1B9E7E59CCF064971A5CFFCEAA8D4F065944EEF3856763704A061514EFB3569E

FB9711F98208561A1624119622CA57DB93A81FE272DC3E65D4371EDF38B13958

CB48ED8B5C361B4A90E9773D310662402D663089412FCE6FF35FE822EF7CE8C2

F378335FA9CAF1146538A3A52B5046DE843EFD5F2658E770DF6156657DD46C61

22E775969D37BAC859CFD2F4639F5B9DDB9BB9B5CCA594DE576E5CC6D40125F6

2E7750BD8C6F6B0D9427FEC510687FE8E5025BA3552B82E918D0D672270EEBD9

B60C142636332670EC8FAA0A8DB701E16B01DE88AD61D7342A59DAF104933793

C236A387B036E09161BC11B45FD75B846B362AAA57A4946DC4CD1ECCBE4CB529

1FCA14A47815513D4A2D285C723F08B028E2D535901297D53A28FDAA6BB5B0FF

42B12A673F3CCEBB0B9E612F31239655248594F6798DCA824231EF86DCC9902B

AE9C4AC8150F87BC3E9FC0FFC522F895989228D480594C0AE90BC8BD707CCD93

3F57848578BE4C4DF3D3E08072B9A02F00A2AFA21E902AC48E6833E6F2B76FD1

D1FA1D19568FB7EB25168B86BE3D4D71432D9C709D1A13E713D7329564F9525C

900430E20C74345C34414F7611D7B33FE5632ED23A105C57F51654D9A70631FA

E0F6FFDCF49F2D6E9E9AC79F8797EA9E84CAC2669DE22A8A22E7321FED3C3A36

DF05E3D8F7B1433F2B46EF2CFA15771C18B5FA5686710C504B1A2D09EC612113

B7B7257B8CDA8A0756937508EF27709CF803F26F3C5BBC69A6EAA14D9696B2B6

39935B23A5B25F4C782A3571870012752FFF1E690EE00F01C5858721386CC1CF

151C41EC5D24C9565A2715FBFDE78DFF626CDBF1D3A503371F7A8207FBD7929E

8826CC0A01009B6559F922BF951A44DB79357239A9D86F88A6ABF2D479AA06F3

1E6EBFD24BAF22426092FCDCDED638D513851EE11F82CF3D787E0A987C5688FF

8D0DE5F364A7D54CD2C2F11CACB7CB60C5884631ABF85723EE451E31D4204CB2

A312EA1FA9081E5FE581E8267DEDDA3238C9C300F7D1FEF253B0D59EA9F954B2

2595C79830F232F3C170E7EE59EF9FF9E8285CE11A190D6CD0F36FA7A0D58141

16CA2B9B25B1CF21D459A48374AFEDF8678514D515D6835DB41B64844E028459

48F0A87936164F98D801B67AD6D5C0C2F78682D301D215DE5FB250BE8FF9AC62

2F0322E084DD9F798333CC7CED8418A08E5888BE4DB757D34A72E5054D8D09CA

D844BB890F85F543C33792D13F6B004EACA7935B89BF97371AE8CBED0BE0FFE1

005D90E6644C3D290AB332BD87ABFB297FBA8ACC48FF61FAE40B4B5653404651

D55134F9536C254A890D9788019700C8AE3D0469F0EEA589C16B7E5D51869ADA

65AD69EF853945BAB41D1DDFE2C38524A9BDBACAEDB53EB4AD5EEF0057A8468E

DD3DBC5F5BED8F16FD0134DD14770D3C09D344205F0C74A4767B17ABE32C405A

E93B069D43D129D41B5CAB9813F64187D4F3BC4072918A26A0C22B09734AB1A6

8E6276EB343C736DB17C02A46B8C996927956CD8A300BBE965415402753FA081

E271370036270DCEAC3066F67E93EFE211DE67E6CF5956B3DC3B73037E0D23A1

AC11AEDA7BF9686D6955980F9A935EFDAC28194EB596E62074BE71468CA0ED7A

5DA66F24E931CC8D44FDFEF2FFCAE6F989666335B1F68C2938BD2A05C60D1E0C

626C3317E2B47B270D11C5DFB1E2F7E6992B3B2B1CF49BD871BC38E190EA7B34

00B5E9155A632F7319BA1C37D9F82B6518ACF33381E22D142257FBBC158D8852

A628E48BCA2B4430180A10BD6315EBECC99D0C8F689FDE740416A74E3B553F96

386034B6CD8A2C45A32BEFF5F7AA637CEF4D723722CC39697867F8064A5C9F7D

2475CB77529E7992CAFAF6AD933AFF54AF56302CAC4D70D13FFB8E08040EB4D2

78F2F4669D7AE1598305A991227DB67F8B8C9899F223C5BDDD0A1361BE1EA002

7E754BC82F2614EF3E87B6DAA980E30C54AC519612242E79300C25B5B5EE2B19

49DC80E61426EB7E107B8B123FF45ED5BDD4751571B0FEEF745D301883AF5B27

AB5B59A8F33378901F3F728AD640100A58569E142B8356AE3F1ACF8C71D8C9FF

FC2BE02F3CA1AA857D9F3C06DE2452679004A724D665B9CB5A81FA0532D4911D

8B08190B6DB9CFA9226FDAF70310BA8A8A0D5A612AF49618B0366D5A52D365FE

0EC6C0ACF620CD50632ED6885E6F3449BEA295AEC70A67E5D79FB9543173C355

729F4F12564A1177AA63F599CC5C7F2E42FB84B80D7C394A99520EC075DD8588

7C99F6FEC8D9D86768AB2DB5AFC8503645759B44E8B5514073151B855E5B5468

6836D6975DAA807336655601045907552D5476D3B58796DB5E4BBD523C3BB7EB

2A5FAEB34A0D5A6AAFB3F2A92440A7D56DE2BB421CBBC48B6E93F619E9D3E664

8029E1AD2D79FFC48791910E13630D914E67A3394E1192D3DE291929360FEC46

E428B92E8C0C1D6E5D4F07783F9AF0FF594A23074C9412D8DC0079E6B4722F7F

98097CED87B27D056BFCA55F3BBDF58446D415D38C543276D8AF8E244BBC45B9

C34699BA747219EEE082262944ABDBE4145AF9A24B8200C9F8F49951F9172D6B

5A3F8F173715EEDAE19A8D914EE345AD53CFC215DE68002D5EDD130EDDF25A11

77A5504F19E170CB9A05B7C7AA3E7FF59979E54B2866450A52F6D689449F7148

B4CE81B06AC1052A17305829449D486DC6B08F2F990014FCA2C2C612377654B9

F7A87E614FED7B4C6E12716C1DACAFAE36642378E762B99F4E0F11E4C60B7B00

CA45BA3EC6A97DF1F104546590B84678523933069549706F119711916D5452B2

B3A7C0955CE0B50DC8D9275EB32F40613EF7F8C22188B91E615BAAC700FD173E

6F4B145A75E934DC576F382A5A250E8B18EB059BEEC4302178132AF2B0C45D7D

3663A68FDB717BCBE223EA0F87868AAE68FDA83DE40779182C38D600357917AD

D82FC1C2858A72229E16369B4603E6AEC86ABD2F87A9C15ACC06F07DCC2FB165

1DBF7F3F5E5C04874C3D8B225F76513ABAB0975A7BBC1CFE2D68A131AE82593B

16152F86F854B73F8A88C4E75CEEAEE9CF0872873852FFB02465487965495E23

419D5EB77696CF6D29657B6662744A849E00A84B21C48DD02865C16AB0F841DD

FDF9DF8119E4F26CC80F844CEAEB3DA912683610D901AF4EAB3423E7B7DF6CE0

5F8E20275FF9101C2D7CC17E5D8322CD7D5D6A72C4410EDFBB6CF71242868693

029CED524A95CF556B78AC7B39E72502CF641A8119650A99959A0BB10C9E17CC

2ADEF0FAF1E64AD1F9ECB78875E5FFC9ACAF068F9AAE713300EABFC81EEEB85E

4E33A416

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/BCYNDJ+CMBX8 findfont /Encoding get

dup 0 /.notdef put

pop

end

/BCYNDJ+CMBX8 findfont /Encoding get

dup 0 /.notdef put

dup 11 /ff put

dup 12 /fi put

dup 13 /fl put

dup 40 /parenleft put

dup 41 /parenright put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 49 /one put

dup 55 /seven put

dup 57 /nine put

dup 59 /semicolon put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 71 /G put

dup 73 /I put

dup 76 /L put

dup 77 /M put

dup 78 /N put

dup 80 /P put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 87 /W put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 106 /j put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 120 /x put

dup 121 /y put

dup 122 /z put

pop

%%EndResource

[/N84/BCYNDJ+CMBX8 -1 TZ

%%BeginResource: font JCAAAA+ArialMT~5e

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /JCAAAA+ArialMT~5e def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE19BBD102F7E1EC94F4

13C4E277A1DE905E983FA6CC94CACA24BDCD3E4E00410078FB7F6BFD7E9CCAE0

1E22ABB69564A760675E59671787B653806CACFB65597B5F18F637C45B2F93F9

63FA4AC15420B5FBB0F09E9CB1E107C76E309C38E178E4252D762EF01881C7F4

1059A1683E8BB0FA14B49B6C6281092CC3FF076A889E0D2CC5C1221E522B4336

40D5CE03FFD21AD83B1AAA31221600817C48CA1D68BF80D966A32E82ECB6A8EF

73F541674E46DD63DB85F62555B021AAB479F5139C0E9D951A54D020406BAE97

3DCEE2D00D0FF47145872ECCA37FE5D50FCDD832C86DDDAAAD7B00A1C2C4EDC6

B9BF96DD13F91446B70A2517E720363B3EB17E62CF3C636F4658AABA3B7DAF4A

DDC552E73B050E7D5B282E9314C7803087BA5FA70DFAFC35E01A8AC58A1F26A3

8A419B1F70ED2D51DE7D85176A97F87A4DA4A4

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/JCAAAA+ArialMT~5e findfont /Encoding get

dup 0 /.notdef put

pop

end

/JCAAAA+ArialMT~5e findfont /Encoding get

dup 0 /.notdef put

dup 54 /six put

pop

%%EndResource

[/N61/JCAAAA+ArialMT~5e -1 TZ

%%BeginResource: font MAAAAA+ArialMT~31

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /MAAAAA+ArialMT~31 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE10F5720E4ECEB90DAC

BE3FDB4E9AC75AC8AB296338C4CD0504F9EB1FFD8ABF991752BDFE7210644F10

5BC22C81A8A8D3D722C162E90284B193F0BA05B5B64046209ED1E2A88B37996E

31AADAAE25830EC759036F7BF642874ADDA6B57FC3259E611CDFFC02F9073655

364B65719A43E2FBEB5E873F3C2D4F0E32AFF675A8DA4272CA3A11EF255B362E

1239314C99DA230BE5107898010450C13AE2F959E9496FC44E3CAD35C33D3E3D

BA6277A3B74AE6512899538A656AF2EEF9847A7F939C58461329708DD5069BE7

A497C54C0899949E52E8019C303F89F9CAF713F62CA9E08A9023D0349564624F

D5D19BEC671D47B8397D4E2BB4A3F681CF44E63E85BB2B5FE1F90791488433B9

2E46924322

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/MAAAAA+ArialMT~31 findfont /Encoding get

dup 0 /.notdef put

pop

end

/MAAAAA+ArialMT~31 findfont /Encoding get

dup 0 /.notdef put

dup 48 /zero put

pop

%%EndResource

[/N12/MAAAAA+ArialMT~31 -1 TZ

%%BeginResource: font VEAAAA+ArialMT~9c

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /VEAAAA+ArialMT~9c def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1

B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1

756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C42461EE1E6CF406CA5376

190770B7B2F25951557F14C69C806EE4DAA36BCC86C4AD8CFC2E4E0CCCCD3939

545571D391821AA1B51C7C927D1BF86CB5D14A5246D5AADA9553A94527B6D948

47AD0D312C61578310D59A332309CBA05E59342D517E715973D178ADD8B28CB4

BA5787275277EEA2C8DB8F5CA7BC7E3A80A8C68B015469E179CC26C4179AFA96

BC8FDAA176B7DC0A59EEC2265B956484FAF33196598C9A5231EB7ED87D7B08F7

B26B11D32CE4CC0CBCA0D409B7BAF4CE976E3C90CC14FD60668B22C11E06B054

8575CD3339DECC04641C4C5D9F2F66DB764D4036456020E89715BD346483251D

562368FB1B87881D331B5466B2E3FA4C9DD352AFA0CC02E10FF88116523DF132

75CDE135E2A095CE9674F431C8C66EFFEED46FF42D6D24A26729217EC40E2CDD

08548877CB996005DFCD60F4E4800BC532ECCEA0795ACD05A8CF3BF98C76BFAF

1F5259BE45CE85EF1DCA249F6FFF5EA769D529D76EF526E5B5EF1F76617F0D30

77016893EAECDCD507B5F89BB406142C1E1E78DBE1CF0D83D0BC9A4C8EC7A947

4BCA031ACC440F3C3ADBC891B863BCE0386E6F7DD095634CF0B1F3F6

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/VEAAAA+ArialMT~9c findfont /Encoding get

dup 0 /.notdef put

pop

end

/VEAAAA+ArialMT~9c findfont /Encoding get

dup 0 /.notdef put

dup 66 /B put

dup 102 /f put

pop

%%EndResource

[/N125/VEAAAA+ArialMT~9c -1 TZ

%%BeginResource: font BCAAAA+ArialMT~5b

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /BCAAAA+ArialMT~5b def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D2D2E7DBB708F2729A0

1AC4B89E20E429B23A2BBADE7D79EC75DA438BFAF81EDF6DF91679CBB448EB14

80D961EBEFA87CC11FD53CCA5637AE4AD480257C747FD0226F9EBE9B36BC1B2E

FF8E355E4FE1E6420FAE7AC6209BC54F8B3D1F1FA29810E61386B2C8EFC0E4F9

91BD31E54EE3A4D65537BAD5A5776DE3546CAF14F453482267615D92D10B11CA

D7F0F6BD9F04A45C75DCF820D72ECEA9A9C4008178CFCE5F1AB7E96C83B69BC0

6FDF271D8AF9ACBF1CD74B6FFD52F2CA953529620A73836FDB75F3F8DC3B450E

D4EE8E3C0083428651B55565805D47273D0461727392F6E43DF6CFA2594E84F2

FA3887CA1E84A51A5D79D14929699FC3979C23518BA5CAFC928B5FEA5A158349

B6E945

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/BCAAAA+ArialMT~5b findfont /Encoding get

dup 0 /.notdef put

pop

end

/BCAAAA+ArialMT~5b findfont /Encoding get

dup 0 /.notdef put

dup 44 /comma put

dup 69 /E put

dup 70 /F put

pop

%%EndResource

[/N53/BCAAAA+ArialMT~5b -1 TZ

%%BeginResource: font ABAAAA+ArialMT

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /ABAAAA+ArialMT def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE1EB219E3F599783FC8

59D554366FFAD4EAA4AAF6ABA12F8BE697A254531B030FB063DF68EEB87D9D18

85C66A17936CD96031BFC434AB83F105023EF2FCC7A04B262559D53F632B6068

111A29C4267891B9B4A89AD4606494F154ADB1FE12635D569A2EA9386D8BBEDB

05AF534E75E84D444D66E46666F4F95FC8EF3B523F4AE4028BDD498A88B1DEDC

BE4BCC9E75F15CC3E4AEC5B9DF03099B81B683AF9AAB78E28EEB1FEF4ADC5FDD

8D10A773AF75CF577C3209A884EDB643E6EE9F3E770DC23C498EE4768BA39987

61BA886B05AB38328B36DCF0FB2D74BB16EFDAB8E46FDC84D09D9683F90EC1E3

4ABBF208F20C144CE749E29C5E546BB9C1858E9DC25FE15F5D2A2C5B366FAEB0

579052B4BB8FA50AF449B9091478C5B4008FE53DBAC3B7D5DEC9937C34EF1DFA

D19B98FDED7B0FB8E460D8D545555D22042D

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/ABAAAA+ArialMT findfont /Encoding get

dup 0 /.notdef put

pop

end

/ABAAAA+ArialMT findfont /Encoding get

dup 0 /.notdef put

dup 51 /three put

pop

%%EndResource

[/N26/ABAAAA+ArialMT -1 TZ

%%BeginResource: font XBAAAA+ArialMT~58

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /XBAAAA+ArialMT~58 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A18BEBA8D67DD8AD36B7F2459BDD5018192B26B1196D9822275B7E

7116DA2B71C1A0BD3FF9F3FCBFA20466CF1F99EF43F07D8EEBE6D20CD1F74810

527EF849CA7D3A47A075C579CABC23DFA76068EB6C2545673AF2A19E31E574D4

9A16FB9D1507131CFCD8CDE99EA9BDE4201B2A538AA74A9A1A5B863BF0281EE7

29DFC7817502F7E7704F393B9E2E5D8B13A5F25C68E703F4FBA1CC6B811090BA

5CAA6D05B8A3C47A45ED9417CF1887EE89685A8A227F6D5E0F2FE4FD3041CAD5

F253AA7C6339A7ACA3EADADC44C0315FFFE2B2B64DBC849330108AA09E40F20C

029BE131262C7419A717E11E432DDBF20A2CE1FDAEFBADE93319D0C9D057231D

59E6A2166251BE12667B4DF0987BED0AC759E2219CF39BB1221FAA37866EC121

A0F6E561F865D9D887E9ABD3A80F1ECBA6A06BE31A9634179F25AFE64BE8F08E

0E2CDD929F5683613FE956CB1B9FF09CA62224CB8FEB957C51D74EF395C3F1AA

8867B48512EE33C5870CCB0932F9ECBFBC2885E224993E67CD8D1381F3FFC8A8

ACF53F8A5D8C03599E6BB4E5E504E6A3C1C1BAAE1CCC45DF20263D27A6651264

DEAC37A3BD2C967A4F980E66D899B6249BE0088E2DDBB5D55F426CB3A9EFBCDF

C2E30852FF885C15305A5D777D5A7DE4898ADDC72A728FAD90626FE71D492690

AC3F3309BBDA03EFC39AE566FF2F90EBDBBE0A7D5E476BB1FDE20FA3F0FDEA09

4EE73DA5386F6171953E147EBA2DD4D49802FB485C18DF406F9D6288D68FFAE2

B0DE7FC1D02FFE12368137C9B61BE467CC00B6E9C60C1A5BB798A86901E22595

903327934CEC173A1B57105B09DC3F99EA3CCEAE9FEAC6AE6C85BD3C2CE577B4

2BD839F505A9378F9E469EC4B54C2F7E76DA4CF5E21A9EA9A36368857C80C598

2A826F262DE4AEEFB799124B024E6DB89BA1D62F957658C06BC39EA339A8B5CA

C05BBE0EAB119AC6EB4174153743249E7E893C05AD6131AFD9F61414B32B5169

D91B59FBB6DA1884A78D0B8A2B8AFF477BA0D75A220BFCDE942F7498F4F27038

4E73FD89F4D90D99609287A7CC6A3092D4062327EC5AC055E2255A78DBBD8C5D

7B9918C05835780281D94DF82E0710B002C9C151906AEDA638A867E810104EB0

7CB0DF05CB9A787AFDF44A54B6C8B4D7B24FB33AE37886D7ED30BA1E31FE34C5

89DDB7E6E82CF1E8581E245D1FC01048B48B6649938E797337AD339D0D54C83C

5E2150B305F344D3FC96165913614EED77EAD3E4428588

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/XBAAAA+ArialMT~58 findfont /Encoding get

dup 0 /.notdef put

pop

end

/XBAAAA+ArialMT~58 findfont /Encoding get

dup 0 /.notdef put

dup 76 /L put

dup 77 /M put

dup 98 /b put

dup 109 /m put

dup 116 /t put

dup 121 /y put

pop

%%EndResource

[/N49/XBAAAA+ArialMT~58 -1 TZ

%%BeginResource: font VBAAAA+ArialMT~55

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /VBAAAA+ArialMT~55 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE3A4E9D7821EEAF3D3C

387C93D4651A08B19735A97B02CA65B265A8975134A161291DA717897E20808F

3810C3BA34F00C1DD3E0ACBE86FF788F962B1EE87BA4482A1CB0C24C8B92D7A1

A5B1764AF3C7BB89CEA1A495FF91AF37D527DEB2DEB52DAF49170D9BFC7397BC

B229D12527A9E405D9A5DD454D5530E3D97A00D6CF7D68E1618FE3F9CD2617D8

737B9040AF6CD93E2681EA10DD772C1BA77ADC04B35569AF62C1FB345B27C4E1

FB6909E563A4C1905C42D0F013E19B0E8FD7B697A3BD765E775F205B5FB02D97

237E047B48C25B0A0430ABF2CD40F7

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/VBAAAA+ArialMT~55 findfont /Encoding get

dup 0 /.notdef put

pop

end

/VBAAAA+ArialMT~55 findfont /Encoding get

dup 0 /.notdef put

dup 80 /P put

pop

%%EndResource

[/N47/VBAAAA+ArialMT~55 -1 TZ

%%BeginResource: font ECAAAA+ArialMT~52

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /ECAAAA+ArialMT~52 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A7B28008087AA44EAF37894E83891F552626F1F40A8D11DBB30B43

8761529A8C0E724815A65778B6E81032E2FB2FDC71F71554A6B9276E731970D4

E3FF70C22D1874DC68CC10AFE8028598F2A8FF154C313D4D26B1F2C9D5B0A422

C01C3D88107D5A3246543F0666103437EAF694286C898B013EADA4507889E4BE

E0EA9E8B4414F52C0B2655D710FC4504AC1942ACAAAE0A14D4589B68CBE19F38

62F747365B86C04A15EAFF79E90B693EB0386DEC31676EEA63279F25FDEE4E11

F517A6FF1D211A4910359C7E941A0E95107704F21C35574DBE8B892814A93F06

4210519187B0C789BB7ACEB77E80BB6F3D50A1A9D2AE237BA12F3044FFC45A3D

F11DB7F1F8B746A00FFD4F6D75B10181A5386ED8079DA3FE2C0D9010C17C4092

00A0512B0A7B1C0C04CC575C5F134EC3B162FE53AED1EF56EF536074F6E83FAF

036119D07296E12A4BEC64BF1E5EAE8D5BCAE257AEC0C17B84DFB06F4F3E84F5

5229764214FD4556E7BF85340832C8556B06684F8C211FD2DFE9B1C03A7BD0A8

BD7D8F13D498B929AB912EFE96A501E60C2D8BA5C01E690C8222788A06EB93DB

23BA391B06E266BD521E50F72032F3F80AE900C85D22F91FC8A306D5D65B537D

D5978467D21162C09BD3F31D275585CE437B1875D9DB18A9DE7BCFD72BC5BE3D

1899C5BAE76C503F3CFA9ADBCA850949AF43DED11ED188738D219C933EE02D29

31C08BB51774C5617C3D9B3A2B92CCE2FF454A839C772BED2F6D6091FAF71F60

4EB7AE32ECFD267AFF8CBF6B79C7E3467235DB18E436F24030F7B65DD909677B

E84574D61F325EE17731A66BEA68254704ADC0EB3472B1AEA1C04DFCB1A77B95

ECB3E21D4D1A26180099AB27D4BF54415CEB0E7CE0295C6225D89A157625D6D6

01DCAE0CA86736E476572C6D02BBF6C5A4F7876B00D52B25AD6CB3B7581557E0

40DD26E3C94E1E1A992B2336C5B6EA7D24DF8D2B5036EC6DE072D6880A2CA89D

65C9238FD5AED6F8FEE5E494B868C2BC4AC5FA67B4409E3F47064809C91C94BB

864A62AACF70DE83C942F752DFA194AD020F05A26774AB3B67AC9D78043199FD

6FD74657685A7331952F6788D4893A3714628502E7C5D29E0C1F3E8D90BEA4C5

C802D66173B9B5F61E41377CC54DE5A95B470A127A8CC1663EE242C738321C5F

B27E2C7CD7D489B307087D2A83B03B68A10125EE4DED7DE4D32DA979B69A5462

7F99ABABF6D2B79F65F0CF7986B1F2A60B54DEE27C6F02EADE4FA0039463FB2E

721F277CEC9537853AB83F1F1E231E1BEF4173A00984115160EE66BFB58BD64C

7B177429D3D4B21880746AAC6E66D1D5C69EEC867CCB07A84A4842095D7F81DF

50EFCBB02139AEFB5CC349927D99FFD5E8B130F14BA9EEA1D8BDC8655552DF11

7E0FF3269CFCFB6E02ECF17AACB6A8228C5996209A11114D3658F7726E6980DE

F16DA43D7DC0F0E60F1CCF4851F51835E6CFFA179BADEDA350AD29F9E07A8B85

280D51FE12334822F6F037C4B4BBD8DA65C1D6EDAAA9B81F2543436B0E0BACC6

5C11BCF8BFCC95E21EF1AD1955A62DB43A992B86493B7CE8846C94209E369C0C

22A2CEEA6353B625E234E1895EF6DB8241820FD5620446D73CAB2B9DC696C1BD

426DACE11F82EED296776E1BF649F80968E04DD00D0F778DD19CED8DAD9A5CD8

55530D7F66CB114E0A48036BD3586A80897B5EA1F2AE268359066B9979E8CF5B

FB9F6D80B131111B61681207D58878F41A71773FABD7EA7606A64BEE9D83385A

C576503B1E82805989126C595E325929444BDCB214BB9BC55E2F0940DECC9515

B5EAC893B75D3F5B34C19D54CA623157012D0E57DD92B1E9617D96273ADF8DB3

462E1522853E23B4A3EBA3B509548E91BDA439B2D34EC8B38360E410699D3866

10C12168DC0729A1FF63BE9BBF19CC6714E75271ACA60D781AD0898937B5CE2A

770E130DF58D61C54A796801694BD8527012AA2DAA577CB9E06B5EC52A65A00B

5DCE5939BE8FE7E0E4E1A935A8432EFCC5ADCBC23959987F5DA1444D9CB7FA35

061B26B9CE729CEF80B130711272F8D6FCD3F9791BBA003B42BA04C9B33A90A8

3F74FB4AE8184F1639D80B2197201B87583567BF90B389CB641D5A82AEB1EE81

8AA177D5E29A3CD13229F206A1005C5DFA201C8FA28908D9D76077EA42F70791

4D97C098439C34B8FBB8A1D579F943E193894C2B15CD3448C4584012BA820718

C94945F21CAF9635528F7032D463DEA1A75C0C811356A179018989E490E09D88

2656DFD4BDB14CF967A71E49DA49F595BEA82E837F13BFA3A4BA716578228B85

86A768125793D4D1AB5AC3E9B70C411F7929130183381F0B2868E16E1D049EB7

355FF98DF55E61FC8EDE86BC0925AE18D252DCA7A6D78BC23FEA70572EA5BB5E

830B1BC7D32DA4A55B1F71599011B87B116C3FB7BABEDCF54E4D26C382BEE66C

21D4083B5EAFE476483A74098D3CFF4FC1AA6E5FEB12C93984EC1F2A69480E64

61071085C50EC4D92E4B1290DA7F4DC873AF736C2963727EE7BC1C8DED0EC333

0EC790FAEDF2349860693757E1D195B20606BE659D4C37091427D242B75958E7

246F4F73D6009CD9DBB42213B6F7E5E6AF60399AE2D8A9763771D04D1A07A754

2E0D8DEB4C529B8F1AB70CC068862923069B409C64E11E8BE7E81A0FCF203218

1A825DEBF47EDAA4682EFD3C3C1856E824147041A2EEA0254BB2

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/ECAAAA+ArialMT~52 findfont /Encoding get

dup 0 /.notdef put

pop

end

/ECAAAA+ArialMT~52 findfont /Encoding get

dup 0 /.notdef put

dup 40 /parenleft put

dup 41 /parenright put

dup 83 /S put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 103 /g put

dup 105 /i put

dup 108 /l put

dup 110 /n put

dup 114 /r put

pop

%%EndResource

[/N56/ECAAAA+ArialMT~52 -1 TZ

%%BeginResource: font IEAAAA+ArialMT~99

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /IEAAAA+ArialMT~99 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A259BC9984DB874CFBF432DC23D7457637070526912FD9815BE031

9519877F20C9609B5B58AAB0EFD1AB99AE9E6EBBFFF6479EB9E420D146762F01

59B41831A5312789C775520554EB9FEF7F7C5A0B69609D24EC234B6E498349D1

C2D1C6D3C26F5C6B75308FBB50D3895BD1473FDB2E62883240DB08723F67D48E

59B0B88988D8D14042DCAF69A2F2153A79C28D8B91DAAFBC72D840949A724984

2BC4FEB46E914D68EBF45801E233AABC95D35C9191CBD37A3B8C24AE5045B6FB

1FC65E8026A8A3E914E1434BE464FE533BE80A7C0557A2FDC0767183372402FE

91B3879011BBA4C48FC7E7965F642000D209F68A607CABBBD37FBD2FD54CA261

C329D609B7C8220C9D8B50B5FA11CAA760F68D0004C584FB43E6F0EA8C046627

FB1BB1DDAE90B9FFDC496D7E5ECCCBA29D563A37A067871AD2286A0DBDB314B4

FC246CCE72E820E392F9684BE669DB58BC43D661382DDD427DE7DC5C396AB9E4

AFB91D22E2AA30EEF6187B1E588D532744CBAFC433939A88AE3C65E9D4A51750

4F53353F9B1C73EDAD069D9A3AC39C41E360E0FE5C11B0C1D1E72C7E48FCADA9

3DD1568591D4D09B57D4D32B2CF182D82CB6157FB76875FC6C96E7625BBAEBAE

A8B26FDF0047E8278A9852214CEE4C0612671B

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/IEAAAA+ArialMT~99 findfont /Encoding get

dup 0 /.notdef put

pop

end

/IEAAAA+ArialMT~99 findfont /Encoding get

dup 0 /.notdef put

dup 76 /L put

dup 116 /t put

dup 121 /y put

pop

%%EndResource

[/N112/IEAAAA+ArialMT~99 -1 TZ

%%BeginResource: font QBAAAA+ArialMT~4f

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /QBAAAA+ArialMT~4f def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE2EE1C9A0F93D6D1F58

C4A4BF86636855DC4FEC898F29C5BE52D5B664E97B56751DF94AC6271163F2E6

135ED3F22D5AB0757730CA3227E0960F032BED269629539CA11D79DD3CA4242C

4CA99DA3CDE73EFC573D91C6AD3F2272EF46AB45B8DA4E19E7BD1A67C96D2029

7F422640EAF438C6047E2D2F58F77EF86BDB8EFC2F1597B5885467A1686DFAFE

168B5CEF3503889CD2627C553ADB40552D87091342F5A7C96C25258159E3516F

BE5B1B865EC1CF8909FA6BCFAAF81BA54A7D53A9F7DC845CAE8258AE96004D84

2DD03288442755F71F7C2E53E474F80614AFADA2FB502EE9EFDFB7E7362F81F2

BCFE909EC621000D45AAC7C4F822248F8F

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/QBAAAA+ArialMT~4f findfont /Encoding get

dup 0 /.notdef put

pop

end

/QBAAAA+ArialMT~4f findfont /Encoding get

dup 0 /.notdef put

dup 68 /D put

pop

%%EndResource

[/N42/QBAAAA+ArialMT~4f -1 TZ

%%BeginResource: font VDAAAA+ArialMT~96

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /VDAAAA+ArialMT~96 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A367D85BFE7DCF51A4B1428D17CCFBB38855B20F264AED104C7F38

0432D121C51BCA5B423A43BE147BE85241E84318442F2F0386B31CBCF75E8A7F

E1CA92CAED009304155349E29FFF3AF4467E81183A43F1483CA4FF7FB909F569

1A3109EAC7A7E192BC77BC149DA2CC6E56CFFD522B4C42132E6148AB75949C07

F1803A72895B24C7C417A5D06626DF77D81F30B88697040FB6B8FB2855D851BE

A469754DA82439F0822FB751C8E61ED5B14A84403CC86459C8F8031FF483E0BB

7C43823887FAF5767896EDE02778AF811361CDED2AA3DD4A79915EE9794811DC

9C580BBC74B9FFDE72BF1B7C89BAB9223A9DBE691080FC8D0B2EE4CD3CD21CC0

F99525BA094602BC13EE34CF646DF16B6F0CA9E0AB6CAFF43B8134BE36259240

39AEF45A9CDB933E2076972A9D7857D8329854A628AE23AC16BC9C81384AAA8F

5AC0F5B26180613370B7D15C44264D7124B44D3EB104362CE3A37AC48DC791C0

0FA078FC5170779C54DAFD6B30C5D70E4C68BB524C3729182C2628D5BB6F23B3

C378F1FB3DC6D7A34BD3FCF724CEBE53E9E5B7F65EAAECE91368AE1517FE2BE0

B54C0DC8813CCD7AD3C85D14CA52E8A853A93FCCEBCF5217F5C9565DF70043CE

9C50490CD1CA598FB3E82E34AEF071AA8EC9EE7D9A045CC233102D852BD54BA3

2727A6D78F819AC3EABC0B8672AAE309E3254E1AE4DA7E5DE3FE486FFF577E87

2C3E3E3B2A62A9901E41E7C1D63F81DFA1D6A3890478F8D3CECAE3F402C484F8

1518A22287D1A07BBE4FAFBE4B1848164BDD47FCF74BE27B3E62DB9CA8411833

6EEEFBF2FA3CB19A81D33D57FCD991F659648E581AEF062DEEB4756C297B5EA7

FE050EFA3D708112B864BD46AC03CE90D4B65B44BD808BAE63AA25ACA574DB63

D8530F80476ACABD00C91497F28F13BD6BE65F87BB10CD55C277E7C33AB8D2F6

45F0D9354B5FC21DE997BADB7123B7F7D447EBA63A4D5FF9F202AD5D84F57946

83080ABF6E388471C759947ED60AC9706EB58A3976C7E7BAEB47ED7EA8DF6990

1BC883C5FCB94A6C8E52B9144C23170AB42F9A9505732E736EBD8EAB390E45EC

61E68ACF871F6D601D4BACB01F40FFA4AED4FE2C45E3EF870DE31C505D501A97

52F7E9C34BF77E691C79883C1CDB84DE

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/VDAAAA+ArialMT~96 findfont /Encoding get

dup 0 /.notdef put

pop

end

/VDAAAA+ArialMT~96 findfont /Encoding get

dup 0 /.notdef put

dup 77 /M put

dup 80 /P put

dup 109 /m put

dup 115 /s put

pop

%%EndResource

[/N99/VDAAAA+ArialMT~96 -1 TZ

%%BeginResource: font EBAAAA+ArialMT~4c

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /EBAAAA+ArialMT~4c def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A436B0C96CD5349EE2E997A2C271A852FB7C63600614C83F78605E

4F6AE30F86BA28257C54120FE5FE2910EEF98796A9BFF5FF33C2D943AC1D8FC7

D2D2F580ED2CA924B9747E4A1D93C62124F1F537CACABE2999D4E1775414D07B

4C39DCD6F087F4E714D55CA386D5BD41DA75B1A95D25656AE6E2382BDBE76E74

5A582DDAB417302DA706C540A5E71AA11020897980F8B6DA0560D60EE1E1E069

8D830087043C24C4E77FB57AB18330AF08C9E3BBB103D1FECABE2E3D37104404

E8B477660435620248F114877B46D2C4D708D560C55B84533890A94F9FE6B580

F7B46A16221D9D0DFAA7AB8207ABF3FDFF765226833D831C827883AC32B5066B

8524B187186B1281790BFE5FF7B9041DB2ECF192AA3FAB363AAC5C0B20EAF222

82D511AFA388BDE45C1091DAABB7B13FB508D816F15AFA430100C00E296B958F

859D704668D913AE6EE5263C215DCBE36C5B57B1CC8FD76FA43BC9

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/EBAAAA+ArialMT~4c findfont /Encoding get

dup 0 /.notdef put

pop

end

/EBAAAA+ArialMT~4c findfont /Encoding get

dup 0 /.notdef put

dup 67 /C put

pop

%%EndResource

[/N30/EBAAAA+ArialMT~4c -1 TZ

%%BeginResource: font WDAAAA+ArialMT~93

ct_CffDict begin

%!FontType1

14 dict begin

/FontInfo 10 dict dup begin

/ItalicAngle 0 def

/isFixedPitch false  def

/UnderlinePosition -100 def

/UnderlineThickness 50 def

end def

/FontName /WDAAAA+ArialMT~93 def

/Encoding 256 array

0 1 255 {1 index exch /.notdef put} for

dup 0 /.notdef put

 def

/PaintType 0 def

/FontType 1 def

/FontMatrix [0.001 0 0 0.001 0 0 ] def

/FontBBox { 0 0 0 0 } def

/StrokeWidth 0 def

currentdict end

currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECF819A7C75

B3A4FF765ECEAE82CC64CA61DE54080C8964DF03EF823879B60EC03BF1FDC918

86BF63F0CE2AB32DEEE658D8FB7FCB5C8E14F11E3058A819B4C319B4581DFB97

FE149270A36B8C514400F45D18806F3C06738530371A7500372324935225D1BC

99DB107DBC1E1F80BCC26D5F2CCF70399303742E794CA0C3A148D7FA3E38EC54

7CA7CF480FB1899C7B81D4886411B1FE036E9CE9298849B874D1AFCEBBEF4D34

68448D9D5CAE773C0D3A8121F6AAB4FC9F1F60FCB177C85740CE2A9352698289

78C2D33E0581BCABFD1F53245882884528C67B4E79E8CD54E13E1CD38A3AAC65

FE8054C4829E321AD93BB2EE9D00C376D70BD9979DAAC7A4EA05D7CE1710A130

53BBEC8188FE602C94C2A216A007CC9AC869DF66CDCE79F2996E8708757A957E

F5600C5A2E370EA8C2528D3641BFD63ED62BE4B0583B4BE7108562874EA939C5

79EF9C082593BF0D86A586BBB56BD099E36DAD16CB1B0EAB2BF2A76A792A0A96

BFA560F6A077B3BA21815D96B203897604ACA9E9254B6CC2ED140E8FF941608C

326856FDB8387C4D0A1F4D7FB03911B17771715EC68DE99464ADC92D31E41F6C

9A01B0317E6B344D35C1C675040A063A575985DDCCEB9DD1B94F8D28A5B9A4A2

9FC40DFD5E7E50091DD1510B9F0F113B428988C622D4D803588CC266F32811D3

B8F41CDD7B17014A2A75D2AAD831F41AA22ADB59FF3EB29A83152254B8D13EE1

186FE73DBFAD76FFDDDAFDC253D156265737ECAA4FFB0A7C1780E42470968436

A128BF0290A5BDA98DB38A11486C27E7A52AB7D8189A3ADE159C341C6C95C01D

E9CC615BDCBF3B58059296D31847CA3400BE29553046F4CCF16444BD83E2EC40

73DB8EDC59CD6CB3EA3A0E9D581D182F35ECB41CED8EA2F7136790E15DCA6A82

9FC0EC75DFCBB2B04C498BD029D675347408FE2E6A223C3342AC75AD59A2FC07

B3F636FA69A5C48AB7AF79B79D736D42CDE21F0363666AFD1B2E8230C07E3DD1

B4503AAD5E63ED2314400EEB16531F7335B34CD2BD4FD38F90ECA74DA87497C1

756F7178A45C7EC0ED25E0AE233807F0EAF3DDE653C4244B31B9154636ED3124

630EE58EEFBEE7C2CE46449AF38F41DD0DC13E8FE687BB01BD7F372C709C6A34

0A5473808CE42554CBB3DB2AD07304F7746C3A2283E1E4CD887F3B65FA1E185A

B6D0F6EC2DB4F9819B813A4D8452C503C5A2565DBF7C0DD40FC1D3F525EB5BAC

71D2C5F7F04E78DACCBE0FE7FB4414065CE80626871E23B0F7A099191EE80528

FE39FB234642A54E2418C62236EF8D8E7ACF244C936F8474614A331731A0455E

99EE1D84959709A71678F7E3A533AE05DE477E5578D698D4D74037755FF3EDCF

4EF6F57F58FD8700C39FA35F7F95278EB9D2F298089F82D05555DA7CA3653513

953024B7A794843C6AD52E3063B7850429D8373189F48B74CC466956A6C9C35E

A40FA1ED49995772B4B7111749114C0F018065FD53C644678E77E5800B39E959

6A8CEE6F4299415FFABD9CC733BCEB763411826B70B52B

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark

/WDAAAA+ArialMT~93 findfont /Encoding get

dup 0 /.notdef put

pop

end

/WDAAAA+ArialMT~93 findfont /Encoding get

dup 0 /.notdef put

dup 104 /h put

dup 117 /u put

pop

%%EndResource

[/N100/WDAAAA+ArialMT~93 -1 TZ

%%BeginResource: font A

10 dict begin

T3Defs

/FontType 3 def

/FontName /N104 def

/FontMatrix [1 

0 

0 

1 

0 

0 ]def

/FontBBox [0 

-1 

27 

36 ]def

/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 

/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 

/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 

/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 

/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 

/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 

/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 

/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 

/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 

/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 

/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 

/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 

/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 

/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 

/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 

/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 

/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 

/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 

/a254 /a255 ] def

/GlyphProcs 4 dict begin

/.notdef {250 0 d0} bind def

/a0 {{

0 0 0 0 27 36 setcachedevice

27 0 0 36 0 0 cm

q

n

0 0 1 1 re

10 dict dup begin

/ImageType 1 def

/Width 27 def

/Height 36 def

/ImageMatrix [27 0 0 -36 0 36]  def

/BitsPerComponent 1 def

/Decode [0 1 ]  def

/DataSource

1 dict begin /_i 0 def currentdict end mark exch { begin {

<FFF8FFE0FF0007E0FC0001E0F00000E0E0070060C07FF020C1FFF82083FFFC00
83FFFE0007FFFE0007FFFE0007FFFE00FFFFFC00FFFFFC00FFFFF020FFFF8020
FFFC0060FFC000E0FE0003E0F8000FE0F000FFE0E00FFFE0C07FFFE0C1FFFFE0
C3FFFFE083FFFC2083FFFC20C3FFF820C3FFF820C1FFF060E0FFE060E00E00E0
F00001E0F80003E0FE000FE0FFF1FFE0>

} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse

end } bind aload pop ] cvx

 def end

27 36 false 4 -1 roll dup /ImageMatrix get exch /DataSource get

imagemask

Q

} exec } bind def

/a1 {{

0 0 0 1 4 35 setcachedevice

4 0 0 34 0 1 cm

q

n

0 0 1 1 re

10 dict dup begin

/ImageType 1 def

/Width 4 def

/Height 34 def

/ImageMatrix [4 0 0 -34 0 34]  def

/BitsPerComponent 1 def

/Decode [0 1 ]  def

/DataSource

1 dict begin /_i 0 def currentdict end mark exch { begin {

<00000000000000000000000000000000000000000000000000F0F0F0F0000000
0000>

} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse

end } bind aload pop ] cvx

 def end

4 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get

imagemask

Q

} exec } bind def

/a2 {{

33 0 0 0 0 0 setcachedevice

} exec } bind def

currentdict end def

FontName currentdict end

definefont pop

%%EndResource

[/A/N104 -1 TZ

79.5915 710.99 188.228 27.01 re

W

n

0.100006 0 0 0.100006 0 0 cm

q

Q

q

n

537.6 7375.78 m

537.6 4742.4 l

2942.58 4742.4 l

2942.58 7375.78 l

W

n

true setSA

6 w

4 M

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

18 w

n

1238.27 7246.81 m

1340.63 7246.81 l

0 setgray

S

n

1333.99 7228.8 m

1373.27 7246.75 l

1333.99 7264.71 l

1333.99 7228.8 l

f

q

10 0 0 10 0 0 cm

96.827 729.471 m

/N54 6 Tf

(pop=) show

110.342 729.471 m

/N23 6 Tf

(1) show

Q

n

1670.27 7246.81 m

1772.64 7246.81 l

S

n

1765.99 7228.8 m

1805.28 7246.75 l

1765.99 7264.71 l

1765.99 7228.8 l

f

q

10 0 0 10 0 0 cm

102.36 715.671 m

/N54 6 Tf

(p) show

105.697 715.671 m

/N44 6 Tf

(ush) show

115.371 715.671 m

/N54 6 Tf

(=) show

118.875 715.671 m

/N26 6 Tf

(3) show

140.028 729.471 m

/N54 6 Tf

(pop=) show

153.542 729.471 m

/N18 6 Tf

(2) show

Q

n

2103.6 7246.81 m

2205.96 7246.81 l

S

n

2199.32 7228.8 m

2238.6 7246.75 l

2199.32 7264.71 l

2199.32 7228.8 l

f

q

10 0 0 10 0 0 cm

145.56 715.671 m

/N54 6 Tf

(p) show

148.897 715.671 m

/N44 6 Tf

(ush) show

158.571 715.671 m

/N54 6 Tf

(=) show

162.075 715.671 m

/N26 6 Tf

(3) show

183.36 729.471 m

/N54 6 Tf

(pop=) show

196.874 729.471 m

/N18 6 Tf

(2) show

Q

n

2535.6 7246.81 m

2637.96 7246.81 l

S

n

2631.32 7228.8 m

2670.6 7246.75 l

2631.32 7264.71 l

2631.32 7228.8 l

f

q

10 0 0 10 0 0 cm

188.892 715.671 m

/N54 6 Tf

(p) show

192.229 715.671 m

/N44 6 Tf

(ush) show

201.904 715.671 m

/N54 6 Tf

(=) show

205.408 715.671 m

/N23 6 Tf

(1) show

226.56 729.471 m

/N54 6 Tf

(pop=) show

240.074 729.471 m

/N26 6 Tf

(3) show

Q

n

807.6 7246.81 m

909.957 7246.81 l

S

n

903.319 7228.8 m

942.6 7246.75 l

903.319 7264.71 l

903.319 7228.8 l

f

q

10 0 0 10 0 0 cm

232.092 715.671 m

/N54 6 Tf

(p) show

235.429 715.671 m

/N44 6 Tf

(ush) show

245.104 715.671 m

/N54 6 Tf

(=) show

248.608 715.671 m

/N23 6 Tf

(1) show

105.06 721.071 m

/N41 10.8 Tf

(A) show

148.26 721.071 m

/N37 10.8 Tf

(B) show

191.46 721.071 m

/N30 10.8 Tf

(C) show

234.66 721.071 m

/N42 10.8 Tf

(D) show

Q

12 w

n

1178.24 7360.63 m

1212.12 7360.62 1239.58 7356.03 1239.59 7350.39 c

1239.49 7130.82 l

1239.5 7125.18 1212.02 7120.62 1178.15 7120.63 c

999.207 7120.7 l

965.334 7120.72 937.866 7125.29 937.86 7130.94 c

937.947 7350.52 l

937.953 7356.15 965.427 7360.72 999.307 7360.7 c

1178.24 7360.63 l

h

S

n

1610.25 7369.71 m

1644.13 7369.7 1671.6 7365.11 1671.6 7359.47 c

1671.51 7139.9 l

1671.51 7134.26 1644.04 7129.69 1610.16 7129.7 c

1431.23 7129.78 l

1397.35 7129.79 1369.88 7134.37 1369.87 7140.02 c

1369.96 7359.59 l

1369.96 7365.23 1397.44 7369.8 1431.32 7369.78 c

1610.25 7369.71 l

h

S

n

2042.26 7369.71 m

2076.13 7369.7 2103.6 7365.11 2103.6 7359.47 c

2103.5 7139.9 l

2103.5 7134.26 2076.04 7129.69 2042.16 7129.7 c

1863.23 7129.78 l

1829.35 7129.79 1801.87 7134.37 1801.86 7140.02 c

1801.96 7359.59 l

1801.96 7365.23 1829.44 7369.8 1863.32 7369.78 c

2042.26 7369.71 l

h

S

n

2474.26 7369.71 m

2508.13 7369.7 2535.6 7365.11 2535.6 7359.47 c

2535.5 7139.9 l

2535.5 7134.26 2508.04 7129.69 2474.16 7129.7 c

2295.23 7129.78 l

2261.35 7129.79 2233.87 7134.37 2233.86 7140.02 c

2233.96 7359.59 l

2233.96 7365.23 2261.44 7369.8 2295.32 7369.78 c

2474.26 7369.71 l

h

S

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

6 w

9 w

q

10 0 0 10 0 0 cm

Q

Q

q

q

10 0 0 10 0 0 cm

Q

Q

q

n

3168 7379.83 m

3168 5880 l

5577.67 5880 l

5577.67 7379.83 l

W

n

Q

q

n

3296.23 6254.47 m

4942.14 6254.47 l

4942.14 6255.25 l

3296.23 6255.25 l

3296.23 6254.47 l

W

n

0.392731 w

1 J

1 j

Q

q

n

3296.23 6513.67 m

4942.14 6513.67 l

4942.14 6514.45 l

3296.23 6514.45 l

3296.23 6513.67 l

W

n

0.392731 w

1 J

1 j

Q

q

n

3296.23 6772.47 m

4942.14 6772.47 l

4942.14 6773.26 l

3296.23 6773.26 l

3296.23 6772.47 l

W

n

0.392731 w

1 J

1 j

Q

q

n

3296.23 7031.67 m

4942.14 7031.67 l

4942.14 7032.46 l

3296.23 7032.46 l

3296.23 7031.67 l

W

n

0.392731 w

1 J

1 j

Q

q

n

3296.23 7290.48 m

4942.14 7290.48 l

4942.14 7291.26 l

3296.23 7291.26 l

3296.23 7290.48 l

W

n

0.392731 w

1 J

1 j

Q

q

n

4221.58 5998.61 m

4443.86 5998.61 l

4443.86 6225.61 l

4221.58 6225.61 l

4221.58 5998.61 l

W

n

3.14182 w

1 j

Q

q

n

4404.58 5998.61 m

4626.87 5998.61 l

4626.87 6536.26 l

4404.58 6536.26 l

4404.58 5998.61 l

W

n

3.14182 w

1 j

Q

q

n

4587.59 5998.61 m

4809.88 5998.61 l

4809.88 6691.39 l

4587.59 6691.39 l

4587.59 5998.61 l

W

n

2.45454 w

2 J

Q

q

n

3168 7379.83 m

3168 5880 l

5577.67 5880 l

5577.67 7379.83 l

W

n

0.392731 w

1 J

1 j

q

10 0 0 10 0 0 cm

Q

3.14182 w

0 J

q

10 0 0 10 0 0 cm

Q

q

10 0 0 10 0 0 cm

Q

2.45454 w

2 J

0 j

0.392731 w

1 J

1 j

q

10 0 0 10 0 0 cm

Q

Q

q

n

3422.97 5996.05 m

3645.25 5996.05 l

3645.25 7103.15 l

3422.97 7103.15 l

3422.97 5996.05 l

W

n

3.14182 w

1 j

Q

q

n

3605.98 5996.05 m

3827.87 5996.05 l

3827.87 6792.5 l

3605.98 6792.5 l

3605.98 5996.05 l

W

n

3.14182 w

1 j

Q

q

n

3788.6 5996.05 m

4010.88 5996.05 l

4010.88 6585.53 l

3788.6 6585.53 l

3788.6 5996.05 l

W

n

2.45454 w

2 J

Q

q

n

3168 7379.83 m

3168 5880 l

5577.67 5880 l

5577.67 7379.83 l

W

n

q

10 0 0 10 0 0 cm

Q

Q

q

q

10 0 0 10 0 0 cm

Q

Q

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentNeededResources:

%%+ font Times-Bold

%%+ font Times-Italic

%%DocumentSuppliedResources:

%%+ font A

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EOF


%%EndDocument
 @endspecial 1630 225 a
 currentpoint grestore moveto
 1630 225 a -150 261 1993 3 v
413 346 a Fs(Figur)o(e)18 b(4.)38 b FD(Example)19 b(pipeline.)-150
643 y Fz(Ex)o(ecution)h(Model)76 b FD(As)21 b(noted)g(earlier)m(,)f(an)
h(actor)g(\(i.e.,)e(a)i(\002lter)m(,)e(splitter)m(,)-150
726 y(or)30 b(joiner\))g(e)o(x)o(ecutes)g(whene)n(v)o(er)h(there)f(are)
g(enough)i(data)e(items)g(on)g(its)-150 809 y(input)25
b(tape.)f(In)h(StreamIt,)e(actors)i(ha)o(v)o(e)f(tw)o(o)h(epochs)h(of)e
(e)o(x)o(ecution:)i(one)-150 892 y(for)k(initialization,)g(and)g(one)h
(for)g(the)f Fy(steady)h(state)p FD(.)f(The)g(initialization)-150
975 y(primes)23 b(the)h(input)f(tapes)h(to)f(allo)n(w)g(\002lters)g
(with)f(peeking)j(to)e(e)o(x)o(ecute)h(the)-150 1058
y(v)o(ery)32 b(\002rst)f(instance)i(of)f(their)g(w)o(ork)g(functions.)h
(A)e(steady)i(state)e(is)h(an)-150 1141 y(e)o(x)o(ecution)27
b(that)f(does)h(not)f(change)i(the)e(b)o(uf)n(fering)h(in)f(the)g
(channels:)h(the)-150 1224 y(number)g(of)f(items)g(on)h(each)g(channel)
g(after)f(the)g(e)o(x)o(ecution)h(is)f(the)g(same)-150
1307 y(as)33 b(it)f(w)o(as)h(before)g(the)g(e)o(x)o(ecution.)g(Ev)o
(ery)g(v)n(alid)g(stream)g(graph)g(has)g(a)-150 1390
y(steady)27 b(state)e([13)q(],)g(and)i(within)f(a)g(steady)h(state,)e
(there)h(are)g(often)h(man)o(y)-150 1473 y(possibilities)34
b(for)f(interlea)o(ving)h(actor)g(e)o(x)o(ecutions.)h(An)f(e)o(xample)h
(of)e(a)-150 1556 y(steady)27 b(state)e(for)h(the)g(pipeline)g(in)g
(Figure)g(4)g(requires)g(\002lter)f Fu(A)g FD(to)h(\002re)f(4)-150
1639 y(times,)18 b Fu(B)h FD(6)g(times,)f Fu(C)h FD(9)g(times,)f(and)i
Fu(D)e FD(3)h(times.)-150 1776 y Fz(Compilation)26 b(Process)75
b FD(The)27 b(StreamIt)e(compiler)i(deri)n(v)o(es)g(the)f(initial-)-150
1859 y(ization)15 b(and)h(steady)f(state)g(schedules)h([10)q(])f(and)g
(outputs)h(a)f(C)g(program)g(that)-150 1942 y(includes)27
b(the)e(initialization)h(and)g(w)o(ork)g(functions,)h(as)e(well)h(as)f
(a)h(dri)n(v)o(er)-150 2025 y(to)c(e)o(x)o(ecute)h(each)g(of)g(the)f
(tw)o(o)h(schedules.)g(Our)f(compilation)h(process)h(al-)-150
2108 y(lo)n(ws)j(the)h(StreamIt)e(compiler)i(to)f(focus)h(on)g(high)g
(le)n(v)o(el)f(optimizations,)-150 2191 y(and)h(relies)e(on)h(e)o
(xisting)h(compilers)f(to)g(perform)g(machine-speci\002c)h(op-)-150
2274 y(timizations)22 b(such)h(as)g(re)o(gister)f(allocation,)g
(instruction)h(scheduling,)h(and)-150 2357 y(code)d(generation\227this)
g(tw)o(o-step)f(approach)h(af)n(fords)g(us)f(a)g(great)g(deal)g(of)-150
2440 y(portability)15 b(\(e.g.,)g(code)h(generated)g(from)g(the)f
(StreamIt)f(compiler)i(is)f(com-)-150 2523 y(piled)k(and)g(run)f(on)h
(three)g(dif)n(ferent)f(machines)i(as)e(reported)h(in)f(Section)h(6\).)
-150 2719 y FA(3.)91 b(Cache)21 b(Model)i(f)n(or)f(Str)n(eaming)-150
2836 y FD(From)f(a)g(caching)i(point)e(of)h(vie)n(w)-5
b(,)21 b(it)f(is)h(intuiti)n(v)o(ely)h(clear)f(that)g(once)h(a)f(ac-)
-150 2919 y(tor')l(s)16 b(instruction)h(w)o(orking)g(set)f(is)g
(fetched)h(into)g(the)f(cache,)h(we)f(can)h(maxi-)-150
3002 y(mize)f(instruction)h(locality)f(by)h(running)g(the)f(actor)h(as)
f(man)o(y)h(times)f(as)g(pos-)-150 3085 y(sible.)21 b(This)h(of)g
(course)h(assumes)f(that)g(the)g(total)f(code)i(size)f(for)g(all)f
(actors)-150 3168 y(in)16 b(the)g(steady)h(state)f(e)o(xceeds)h(the)f
(capacity)h(of)f(the)h(instruction)f(cache.)h(F)o(or)-150
3251 y(our)23 b(benchmarks,)h(the)e(total)g(code)h(size)f(for)h(a)f
(steady)h(state)f(ranges)h(from)-150 3334 y(2)d(Kb)h(to)f(o)o(v)o(er)g
(135)i(Kb)e(\(and)h(commonly)g(e)o(xceeds)h(16)e(Kb\).)g(Thus,)h(while)
-150 3417 y(indi)n(vidual)26 b(actors)g(may)g(ha)o(v)o(e)f(a)h(small)f
(instruction)h(footprint,)f(the)h(total)-150 3500 y(footprint)18
b(of)f(the)g(actors)h(in)f(a)h(steady)g(state)f(e)o(xceeds)h(a)f
(typical)h(instruction)-150 3583 y(cache)f(size.)e(From)g(these)h
(observ)n(ations,)h(it)e(is)h(e)n(vident)g(that)g(we)f(must)h
Fy(scale)-150 3666 y FD(the)k(e)o(x)o(ecution)h(of)f(actors)g(in)g(the)
g(steady)h(state)f(in)g(order)g(to)g(impro)o(v)o(e)h(tem-)-150
3749 y(poral)j(locality)-5 b(.)24 b(In)f(other)h(w)o(ords,)g(rather)g
(than)g(running)h(a)f(actor)g Fr(n)g FD(times)-150 3832
y(per)h(steady)h(state,)f(we)g(scale)g(it)f(to)h(run)h
Fr(m)21 b FC(\002)h Fr(n)j FD(times.)f(W)-6 b(e)25 b(term)g
Fr(m)f FD(the)-150 3915 y Fy(scaling)c(factor)p FD(.)-50
3998 y(The)25 b(ob)o(vious)h(question)g(is:)f(to)g(what)g(e)o(xtent)h
(can)f(we)h(scale)f(the)g(e)o(x)o(e-)-150 4081 y(cution)g(of)g(actors)g
(in)f(the)h(steady)g(state?)f(The)h(answer)g(is)f(non-tri)n(vial)h(be-)
-150 4164 y(cause)k(scaling,)g(while)f(bene\002cial)g(to)h(the)f
(instruction)h(cache)g(beha)o(vior)m(,)-150 4247 y(may)23
b(o)o(v)o(erb)o(urden)h(the)f(data)f(cache)i(as)e(the)h(b)o(uf)n(fers)g
(between)g(actors)g(may)-150 4330 y(gro)n(w)28 b(to)g(prohibiti)n(v)o
(ely)h(lar)o(ge)f(sizes)g(that)g(de)o(grade)h(the)f(data)g(cache)h(be-)
-150 4413 y(ha)o(vior)l(.)20 b(Speci\002cally)-5 b(,)19
b(if)g(a)h(b)o(uf)n(fer)f(o)o(v)o(er\003o)n(ws)h(the)g(cache,)g(then)h
(producer)o(-)-150 4496 y(consumer)f(locality)f(is)g(lost.)-50
4579 y(In)k(this)g(section)h(we)f(describe)h(a)g(simple)f(and)h
(intuiti)n(v)o(e)g(cache)g(model)-150 4662 y(to)i(estimate)g(the)g
(instruction)g(and)g(data)h(cache)f(miss)g(rates)g(for)g(a)g(steady)
-150 4745 y(state)f(sequence)i(of)f(actor)f(\002rings.)g(The)h(model)g
(serv)o(es)g(as)f(a)h(foundation)-150 4828 y(for)i(reasoning)i(about)g
(the)e(cache)i(a)o(w)o(are)e(optimizations)i(introduced)f(in)-150
4911 y(this)17 b(paper)l(.)g(W)-6 b(e)16 b(de)n(v)o(elop)j(the)e(model)
g(\002rst)f(for)h(the)g(instruction)g(cache,)h(and)-150
4994 y(then)h(generalize)h(it)e(to)h(account)h(for)f(the)g(data)g
(cache.)-150 5147 y Fs(3.1)75 b(Instruction)18 b(Cache)-150
5264 y FD(A)39 b(steady)h(state)f(e)o(x)o(ecution)i(is)e(a)g(sequence)i
(of)f(actor)f(\002rings)g Fr(S)65 b Fo(=)-150 5347 y(\()p
Fr(a)-79 5355 y Fq(1)-45 5347 y Fr(;)13 b(:)g(:)h(:)f(;)g(a)167
5355 y Fp(n)209 5347 y Fo(\))p FD(,)k(and)i(a)f Fy(pr)m(o)o(gr)o(am)h
(e)o(xecution)g FD(corresponds)g(to)f(one)h(or)f(more)-150
5430 y(repetitions)23 b(of)f(the)h(steady)g(state.)e(W)-6
b(e)22 b(use)h(the)g(notation)g Fr(S)t Fo([)p Fr(i)p
Fo(])g FD(to)f(refer)g(to)2042 66 y(the)16 b(actor)g
Fr(a)g FD(that)g(is)g(\002red)g(at)g(logical)g(time)g
Fr(i)p FD(,)g(and)h FC(j)p Fr(S)t FC(j)g FD(to)f(denote)h(the)g(length)
2042 149 y(of)i(the)g(sequence.)2141 232 y(Our)31 b(cache)g(model)g(is)
f(simple)h(in)f(that)g(it)g(considers)h(each)h(actor)e(in)2042
315 y(the)h(steady)h(state)g(sequence,)g(and)g(determines)g(whether)g
(one)g(or)g(more)2042 399 y(misses)f(are)h(bound)h(to)f(occur)l(.)g
(The)f(miss)g(determination)i(is)e(based)i(on)2042 482
y(the)21 b Fy(instruction)g(r)m(euse)g(distance)h FD(\()p
Fy(IRD)o FD(\),)e(which)h(is)f(equal)i(to)e(the)h(number)2042
565 y(of)i(unique)h(instructions)f(that)g(are)g(referenced)h(between)g
(tw)o(o)f(e)o(x)o(ecutions)2042 648 y(of)i(the)g(actor)g(under)h
(consideration)h(\(as)e(the)o(y)g(appear)h(in)f(the)g(schedule\).)2042
731 y(The)20 b(steady)h(state)f(is)g(a)g(compact)h(representation)g(of)
f(the)h(whole)f(program)2042 814 y(e)o(x)o(ecution,)32
b(and)g(thus,)f(we)g(simply)g(account)i(for)e(the)g(misses)g(within)g
(a)2042 897 y(steady)17 b(state,)f(and)i(generalize)f(the)g(result)g
(to)f(the)h(whole)g(program.)h(W)m(ithin)2042 980 y(a)j(steady)h
(state,)f(an)g(actor)h(is)e(char)o(ged)j(a)e(miss)g(penalty)h(if)f(and)
g(only)h(if)f(the)2042 1063 y(number)26 b(of)f(referenced)h
(instructions)f(since)h(the)f(last)f(e)o(x)o(ecution)i(\(of)f(the)2042
1146 y(same)19 b(actor\))g(is)f(greater)i(than)f(the)g(instruction)g
(cache)h(capacity)-5 b(.)2141 1229 y(F)o(ormally)g(,)26
b(let)g Fy(phase)r Fo(\()p Fr(S;)13 b(i)p Fo(\))26 b
FD(for)g Fo(1)37 b FC(\024)e Fr(i)h FC(\024)g(j)p Fr(S)t
FC(j)27 b FD(represent)g(a)f(subse-)2042 1312 y(quence)20
b(of)f Fr(k)i FD(elements)e(of)g Fr(S)t FD(:)2303 1441
y Fy(phase)r Fo(\()p Fr(S;)13 b(i)p Fo(\))21 b(=)g(\()p
Fr(S)t Fo([)p Fr(i)p Fo(])p Fr(;)14 b(S)t Fo([)p Fr(i)k
Fo(+)f(1])p Fr(;)d(:)f(:)g(:)g(;)g(S)t Fo([)p Fr(i)18
b Fo(+)f Fr(k)i FC(\000)e Fo(1]\))2042 1571 y FD(where)h
Fr(k)23 b FC(2)f Fo([1)p Fr(;)13 b FC(j)p Fr(S)t FC(j)p
Fo(])19 b FD(is)e(the)g(smallest)g(inte)o(ger)h(such)g(that)f
Fr(S)t Fo([)p Fr(i)11 b Fo(+)g Fr(k)r Fo(])23 b(=)f Fr(S)t
Fo([)p Fr(i)p Fo(])p FD(.)2042 1654 y(In)h(other)h(w)o(ords,)g(a)g
(phase)h(is)e(a)h(subsequence)i(of)d Fr(S)28 b FD(that)c(starts)f(with)
g(the)2042 1737 y(speci\002ed)28 b(actor)f(\()p Fr(S)t
Fo([)p Fr(i)p Fo(])p FD(\))h(and)g(ends)g(before)g(the)g(ne)o(xt)g
(occurrence)h(of)e(the)2042 1820 y(same)k(actor)f(\(i.e.,)f(there)i
(are)g(no)g(interv)o(ening)g(occurrences)h(of)f Fr(S)t
Fo([)p Fr(i)p Fo(])g FD(in)2042 1903 y(the)24 b(phase\).)h(Note)f(that)
g(because)i(the)e(steady)h(state)f(e)o(x)o(ecution)h(is)f(c)o(yclic,)
2042 1986 y(the)d(construction)h(of)g(the)f(subsequence)j(is)c(allo)n
(wed)i(to)f(wrap)h(around)g(the)2042 2072 y(steady)32
b(state)2401 2040 y Fn(1)2430 2072 y FD(.)g(F)o(or)f(e)o(xample,)h(the)
g(steady)g(state)g Fr(S)3478 2080 y Fq(1)3558 2072 y
Fo(=)46 b(\()p Fu(AABB)o Fo(\))32 b FD(has)2042 2155
y Fy(phase)q Fo(\()p Fr(S)2293 2163 y Fq(1)2327 2155
y Fr(;)14 b Fo(1\))25 b(=)f(\()p Fu(A)p Fo(\))p FD(,)c
Fy(phase)q Fo(\()p Fr(S)2934 2163 y Fq(1)2969 2155 y
Fr(;)13 b Fo(2\))25 b(=)f(\()p Fu(ABB)p Fo(\))p FD(,)c
Fy(phase)q Fo(\()p Fr(S)3665 2163 y Fq(1)3699 2155 y
Fr(;)14 b Fo(3\))25 b(=)f(\()p Fu(B)p Fo(\))p FD(,)2042
2238 y(and)19 b Fy(phase)r Fo(\()p Fr(S)2420 2246 y Fq(1)2454
2238 y Fr(;)13 b Fo(4\))22 b(=)f(\()p Fu(BAA)o Fo(\))p
FD(,)2141 2321 y(Let)g Fr(I)6 b Fo(\()p Fr(a)p Fo(\))20
b FD(denote)j(the)e(code)h(size)g(of)f(the)h(w)o(ork)g(function)g(for)f
(actor)h Fr(a)p FD(.)2042 2404 y(Then)d(the)g(instruction)g(reuse)h
(distance)f(is)2709 2534 y Fy(IRD)p Fo(\()p Fr(S;)13
b(i)p Fo(\))21 b(=)3103 2463 y Fm(X)3142 2620 y Fp(a)3227
2534 y Fr(I)6 b Fo(\()p Fr(a)p Fo(\))2042 2735 y FD(where)18
b(the)g(sum)g(is)g(o)o(v)o(er)g(all)g(distinct)g(actors)g
Fr(a)f FD(occurring)i(in)f Fy(phase)r Fo(\()p Fr(S;)12
b(i)p Fo(\))p FD(.)2042 2818 y(W)-6 b(e)14 b(can)i(then)f(determine)h
(if)e(a)h(speci\002c)g(actor)g(will)f(result)h(in)f(an)i(instruction)
2042 2901 y(cache)33 b(miss)f(\(on)g(its)f(ne)o(xt)i(\002ring\))e(by)i
(e)n(v)n(aluating)g(the)f(follo)n(wing)h(step)2042 2984
y(function:)2100 3166 y Fy(IMISS)q Fo(\()p Fr(S;)12 b(i)p
Fo(\))22 b(=)2556 3038 y Fm(\()2618 3117 y Fo(0)75 b
FD(if)18 b Fy(IRD)p Fo(\()p Fr(S;)13 b(i)p Fo(\))21 b
FC(\024)g Fr(C)3244 3125 y Fp(I)3279 3117 y FD(;)e(hit:)f(no)i(cache)f
(re\002ll,)2618 3217 y Fo(1)75 b FD(otherwise;)19 b(miss:)f(\(some\))i
(cache)f(re\002ll.)3947 3166 y(\(1\))2042 3361 y(In)g(the)g(equation,)g
Fr(C)2582 3369 y Fp(I)2636 3361 y FD(represents)h(the)f(instruction)g
(cache)h(size.)2141 3444 y(Using)33 b(Equation)g(1,)f(we)g(can)h
(estimate)f(the)g(instruction)h(miss)f(rate)2042 3527
y(\()p Fy(IMR)o FD(\))19 b(of)g(a)g(steady)g(state)g(as:)2552
3739 y Fy(IMR)p Fo(\()p Fr(S)t Fo(\))i(=)2936 3690 y(1)p
2908 3722 94 4 v 2908 3789 a FC(j)p Fr(S)t FC(j)3041
3639 y Fl(j)p Fp(S)s Fl(j)3025 3668 y Fm(X)3031 3825
y Fp(i)p Fq(=1)3149 3739 y Fy(IMISS)p Fo(\()p Fr(S;)13
b(i)p Fo(\))p Fr(:)424 b FD(\(2\))2141 3935 y(The)23
b(cache)h(model)f(allo)n(ws)g(us)g(to)g(rank)h(the)f(quality)g(of)g(an)
g(e)o(x)o(ecution)2042 4018 y(ordering:)c(schedules)g(that)f(boost)h
(temporal)g(locality)f(result)g(in)g(miss)g(rates)2042
4101 y(closer)23 b(to)h(zero,)f(and)h(schedules)h(that)e(do)h(not)g(e)o
(xploit)f(temporal)h(locality)2042 4184 y(result)18 b(in)h(miss)g
(rates)g(closer)g(to)g(one.)2141 4267 y(F)o(or)g(e)o(xample,)i(in)e
(the)h(steady)g(state)f Fr(S)3155 4275 y Fq(1)3213 4267
y Fo(=)j(\()p Fu(AABB)o Fo(\))p FD(,)d(assume)i(that)e(the)2042
4350 y(combined)32 b(instruction)f(w)o(orking)g(sets)g(e)o(xceed)g(the)
g(instruction)g(cache,)2042 4433 y(i.e.,)h Fr(I)6 b Fo(\()p
Fu(A)o Fo(\))29 b(+)f Fr(I)6 b Fo(\()p Fu(B)o Fo(\))50
b Fr(>)f(C)2804 4441 y Fp(I)2839 4433 y FD(.)33 b(Then,)h(we)g(e)o
(xpect)g(to)g(suf)n(fer)g(a)g(miss)f(at)2042 4516 y(the)i(start)f(of)h
(e)n(v)o(ery)h(steady)g(state)f(because)h(the)f(phase)h(that)f
(precedes)2042 4599 y(the)28 b(e)o(x)o(ecution)h(of)f
Fu(A)g FD(\(at)g Fr(S)2794 4607 y Fq(1)2828 4599 y Fo([1])p
FD(\))h(is)f Fy(phase)q Fo(\()p Fr(S)3291 4607 y Fq(1)3325
4599 y Fr(;)13 b Fo(2\))29 b FD(with)e(an)i(instruction)2042
4682 y(reuse)k(distance)g(greater)f(than)h(the)g(cache)g(size)g(\()p
Fy(IRD)o Fo(\()p Fr(S)3610 4690 y Fq(1)3644 4682 y Fr(;)13
b Fo(2\))48 b Fr(>)f(C)3956 4690 y Fp(I)3991 4682 y FD(\).)2042
4765 y(Similarly)-5 b(,)19 b(there)h(is)g(a)g(miss)g(predicted)h(for)f
(the)g(\002rst)f(occurrence)j(of)e(actor)2042 4848 y
Fu(B)33 b FD(since)i Fy(phase)q Fo(\()p Fr(S)2559 4856
y Fq(1)2593 4848 y Fr(;)14 b Fo(4\))50 b(=)g(\()p Fu(BAA)o
Fo(\))34 b FD(and)g Fy(IRD)p Fo(\()p Fr(S)3427 4856 y
Fq(1)3461 4848 y Fr(;)13 b Fo(4\))51 b Fr(>)f(C)3779
4856 y Fp(I)3814 4848 y FD(.)33 b(Thus,)2042 4931 y Fy(IMR)p
Fo(\()p Fr(S)2252 4939 y Fq(1)2286 4931 y Fo(\))25 b(=)g(2)p
Fr(=)p Fo(4)e FD(whereas)e(for)g(the)g(follo)n(wing)h(v)n(ariant)f
Fr(S)3631 4939 y Fq(2)3691 4931 y Fo(=)26 b(\()p Fu(ABAB)o
Fo(\))p FD(,)2042 5014 y Fy(IMR)p Fo(\()p Fr(S)2252 5022
y Fq(2)2286 5014 y Fo(\))c(=)g(1)p FD(.)d(In)g(the)h(case)f(of)h
Fr(S)2964 5022 y Fq(2)2998 5014 y FD(,)f(we)g(kno)n(w)h(that)g(since)f
(the)h(combined)2042 5097 y(instruction)i(w)o(orking)h(sets)f(of)g(the)
f(actors)h(e)o(xceed)h(the)f(cache)h(size,)e(when)2042
5180 y(actor)k Fu(B)h FD(is)f(\002red)g(follo)n(wing)h
Fu(A)p FD(,)f(it)f(e)n(victs)i(part)g(of)f(actor)h Fu(A)p
FD(')l(s)f(instruction)p 2042 5280 997 3 v 2042 5331
a Fn(1)2079 5355 y Fk(In)14 b(other)g(w)o(ords,)g(the)g(subsequence)i
(is)e(formed)g(from)f(a)h(ne)n(w)g(sequence)h Fj(S)3805
5331 y Fl(0)3847 5355 y Fi(=)k Fj(S)t Fh(j)p Fj(S)2042
5430 y Fk(where)f Fh(j)e Fk(represents)j(concatenation.)p
eop
%%Page: 4 4
4 3 bop -150 66 a FD(w)o(orking)17 b(set.)e(Hence)h(when)g(we)f
(transition)h(back)g(to)f(\002re)g(actor)h Fu(A)p FD(,)f(we)g(ha)o(v)o
(e)-150 149 y(to)22 b(refetch)h(certain)f(instructions,)h(b)o(ut)f(in)h
(the)f(process,)h(we)f(replace)h(parts)-150 232 y(of)e(actor)h
Fu(B)p FD(')l(s)f(w)o(orking)i(set.)d(In)i(terms)f(of)h(our)f(model,)h
Fy(IRD)p Fo(\()p Fr(S)1516 240 y Fq(2)1550 232 y Fr(;)13
b(i)p Fo(\))27 b Fr(>)e(C)1807 240 y Fp(I)-150 315 y
FD(for)19 b(e)n(v)o(ery)g(actor)g(in)g(the)g(sequence,)h(i.e.,)e
Fo(1)k FC(\024)f Fr(i)h FC(\024)f(j)p Fr(S)1270 323 y
Fq(2)1304 315 y FC(j)p FD(.)-50 399 y(Note)i(that)h(the)f(amount)i(of)f
(re\002ll)e(is)i(proportional)g(to)g(the)g(number)g(of)-150
482 y(cache)j(lines)e(that)h(are)f(replaced)i(when)f(sw)o(apping)h
(actors,)f(and)g(as)g(such,)-150 565 y(we)c(may)h(wish)f(to)h(adjust)f
(our)h(cache)g(miss)f(step)h(function)g(\()p Fy(IMISS)p
FD(\).)f(One)-150 648 y(simple)k(v)n(ariation)g(is)f(to)g(allo)n(w)h
(for)f(some)h(partial)g(replacement)g(without)-150 731
y(unduly)d(penalizing)f(the)g(o)o(v)o(erall)g(v)n(alue)g(of)f(the)h
(metric.)f(Namely)-5 b(,)21 b(we)h(can)-150 814 y(allo)n(w)j(the)g
(constant)h Fr(C)484 822 y Fp(I)544 814 y FD(to)f(be)g(some)h(fraction)
f(greater)g(than)h(the)f(actual)-150 897 y(cache)35 b(size.)e
(Alternati)n(v)o(ely)-5 b(,)34 b(we)g(can)g(use)h(a)e(more)i
(complicated)f(miss)-150 980 y(function)20 b(with)e(a)h(more)g(uniform)
h(probability)f(distrib)o(ution.)-150 1109 y Fz(T)-7
b(emporal)23 b(Locality)75 b FD(In)22 b(our)h(model,)f(the)h(concept)g
(of)f(impro)o(ving)i(tem-)-150 1192 y(poral)17 b(instruction)g
(locality)f(translates)g(to)g(deri)n(ving)i(a)e(steady)h(state)f
(where,)-150 1275 y(in)21 b(the)g(best)g(case,)h(e)n(v)o(ery)f(actor)h
(has)f(only)h(one)f(phase)h(that)f(is)g(longer)h(than)-150
1358 y(unit-length.)f(F)o(or)e(e)o(xample,)i(a)f(permutation)h(of)f
(the)g(actors)h(in)f Fr(S)1581 1366 y Fq(2)1635 1358
y FD(\(where)-150 1441 y(all)25 b(phases)h(are)f(of)g(length)g(tw)o
(o\))g(that)g(impro)o(v)o(es)h(temporal)f(locality)g(will)-150
1524 y(result)18 b(in)h Fr(S)158 1532 y Fq(1)192 1524
y FD(,)f(which)h(we)f(ha)o(v)o(e)h(sho)n(wn)g(has)g(a)g(relati)n(v)o
(ely)f(lo)n(wer)h(miss)f(rate.)-150 1653 y Fz(Ex)o(ecution)k(Scaling)74
b FD(Another)24 b(approach)g(to)f(impro)o(ving)g(temporal)h(lo-)-150
1736 y(cality)16 b(is)g(to)g(scale)g(the)h(e)o(x)o(ecution)g(of)f(the)h
(actors)f(in)g(the)g(steady)h(state.)f(Scal-)-150 1819
y(ing)23 b(increases)h(the)g(number)g(of)f(consecuti)n(v)o(e)i
(\002rings)e(of)g(the)g(same)h(actor)l(.)-150 1902 y(In)i(our)g(model,)
g(a)f(scaled)i(steady)f(state)f(has)h(a)g(greater)g(number)h(of)e
(unit-)-150 1985 y(length)d(phases)h(\(i.e.,)d(a)h(phase)i(of)f(length)
g(one)g(and)g(the)g(shortest)g(possible)-150 2068 y(reuse)d
(distance\).)-50 2151 y(W)-6 b(e)26 b(represent)h(a)g(scaled)g(e)o(x)o
(ecution)g(of)g(the)g(steady)g(state)f(as)h Fr(S)1688
2119 y Fp(m)1783 2151 y Fo(=)-150 2234 y(\()p Fr(a)-79
2202 y Fp(m)-79 2247 y Fq(1)-21 2234 y Fr(;)13 b(:)g(:)h(:)f(;)g(a)191
2202 y Fp(m)191 2247 y(n)249 2234 y Fo(\))p FD(:)21 b(the)g(steady)h
(state)f Fr(S)k FD(is)c(scaled)h(by)f Fr(m)p FD(,)g(which)g(translates)
-150 2317 y(to)29 b Fr(m)24 b FC(\000)g Fo(1)29 b FD(additional)g
(\002rings)f(of)h(e)n(v)o(ery)g(actor)l(.)g(F)o(or)f(e)o(xample,)h
(scaling)-150 2401 y Fr(S)-103 2409 y Fq(1)-34 2401 y
Fo(=)34 b(\()p Fu(AABB)o Fo(\))25 b FD(by)h(a)g(f)o(actor)g(of)f(tw)o
(o)h(results)g(in)f Fr(S)1261 2369 y Fq(2)1257 2414 y(1)1330
2401 y Fo(=)34 b(\()p Fu(AAAABBBB)o Fo(\))-150 2488 y
FD(and)28 b(scaling)f Fr(S)270 2496 y Fq(2)341 2488 y
Fo(=)36 b(\()p Fu(ABAB)p Fo(\))26 b FD(by)i(the)f(same)g(amount)h
(results)f(in)f Fr(S)1711 2456 y Fq(2)1707 2501 y(2)1783
2488 y Fo(=)-150 2571 y(\()p Fu(AABBAABB)o Fo(\))p FD(;)-50
2654 y(From)19 b(Equation)h(1,)g(we)f(observ)o(e)i(that)e(unit-length)i
(phases)f(do)h(not)f(in-)-150 2737 y(crease)g(the)f(instruction)g(miss)
g(rate)g(as)g(long)h(as)f(the)g(size)g(of)g(the)g(actor')l(s)h(in-)-150
2820 y(struction)e(w)o(orking)g(set)f(is)g(smaller)g(than)h(the)f
(cache)h(size;)f(we)h(assume)g(this)-150 2903 y(is)23
b(al)o(w)o(ays)i(the)f(case.)g(Therefore,)g(scaling)g(has)g(the)g(ef)n
(fect)g(of)g(preserving)-150 2986 y(the)g(pattern)h(of)f(miss)g
(occurrences)i(while)e(also)g(lengthening)i(the)f(steady)-150
3069 y(state.)18 b(Mathematically)-5 b(,)20 b(we)f(can)g(substitute)g
(into)g(Equation)h(2:)157 3276 y Fy(IMR)p Fo(\()p Fr(S)371
3240 y Fp(m)429 3276 y Fo(\))83 b(=)752 3228 y(1)p 695
3259 153 4 v 695 3327 a FC(j)p Fr(S)767 3305 y Fp(m)826
3327 y FC(j)870 3177 y Fl(j)p Fp(S)930 3156 y Fg(m)984
3177 y Fl(j)881 3205 y Fm(X)887 3363 y Fp(i)p Fq(=1)1016
3276 y Fy(IMISS)q Fo(\()p Fr(S)1284 3240 y Fp(m)1343
3276 y Fr(;)13 b(i)p Fo(\))542 3546 y(=)803 3498 y(1)p
695 3529 256 4 v 695 3597 a Fr(m)k FC(\002)f(j)p Fr(S)t
FC(j)973 3447 y Fl(j)p Fp(S)1033 3426 y Fg(m)1087 3447
y Fl(j)984 3475 y Fm(X)990 3633 y Fp(i)p Fq(=1)1119 3546
y Fy(IMISS)q Fo(\()p Fr(S)1387 3510 y Fp(m)1445 3546
y Fr(;)e(i)p Fo(\))542 3815 y(=)803 3767 y(1)p 695 3798
V 695 3866 a Fr(m)j FC(\002)f(j)p Fr(S)t FC(j)989 3716
y Fl(j)p Fp(S)s Fl(j)973 3744 y Fm(X)979 3902 y Fp(i)p
Fq(=1)1097 3815 y Fy(IMISS)p Fo(\()p Fr(S;)d(i)p Fo(\))p
Fr(:)284 b FD(\(3\))-150 4006 y(The)19 b(last)f(step)h(is)g(possible)h
(because)g Fy(IMISS)f FD(is)g(zero)g(for)g Fr(m)e FC(\000)g
Fo(1)i FD(out)g(of)g Fr(m)-150 4089 y FD(e)o(x)o(ecutions)k(of)g(e)n(v)
o(ery)g(scaled)g(actor)l(.)f(The)g(result)g(is)g(that)g(the)g(miss)h
(rate)f(is)-150 4172 y(in)m(v)o(ersely)d(proportional)i(to)d(the)h
(scaling)h(f)o(actor)l(.)-50 4255 y(In)h(Figure)g(5)g(we)g(sho)n(w)h(a)
f(representati)n(v)o(e)h(curv)o(e)g(relating)g(the)f(scaling)-150
4338 y(f)o(actor)28 b(to)g(o)o(v)o(erall)g(performance.)i(The)e(data)g
(corresponds)i(to)e(a)g(coarse-)-150 4421 y(grained)18
b(implementation)h(of)e(a)h(F)o(ast)e(F)o(ourier)h(T)m(ransform)h
(\(FFT\))e(running)-150 4504 y(on)21 b(a)g(Pentium)g(3)g(architecture.)
g(The)g(x-axis)g(represents)h(the)f(scaling)g(f)o(ac-)-150
4587 y(tors)26 b(\(with)g(increasing)h(v)n(alues)h(from)e(left)g(to)g
(right\).)g(The)g(y-axis)h(repre-)-150 4670 y(sents)18
b(the)f(e)o(x)o(ecution)h(time)g(and)g(is)f(an)g(indirect)h(indicator)f
(of)h(the)f(miss)h(rate)-150 4753 y(\(the)28 b(tw)o(o)h(measures)g(are)
f(positi)n(v)o(ely)h(correlated\).)f(The)g(e)o(x)o(ecution)i(time)-150
4836 y(impro)o(v)o(es)23 b(in)f(accord)i(with)e(our)h(model:)g(the)f
(running)i(time)e(is)g(shortened)-150 4919 y(as)29 b(the)g(scaling)h(f)
o(actor)f(gro)n(ws)h(lar)o(ger)l(.)e(There)h(is)g(ho)n(we)n(v)o(er)h
(an)f(e)n(v)o(entual)-150 5002 y(de)o(gradation,)21 b(and)f(as)g(the)g
(sequel)g(will)f(sho)n(w)-5 b(,)20 b(it)f(is)g(attrib)o(uted)h(to)f
(the)h(data)-150 5085 y(cache)g(performance.)-150 5230
y Fs(3.2)75 b(Data)19 b(Cache)-150 5347 y FD(The)26 b(results)g(in)g
(Figure)g(5)g(sho)n(w)h(that)f(scaling)g(can)h(reduce)g(the)f(running)
-150 5430 y(time)21 b(of)g(a)g(program,)h(b)o(ut)f(ultimately)-5
b(,)20 b(it)h(de)o(grades)h(performance.)g(In)g(this)2042
1333 y @beginspecial 0 @llx 0 @lly 656 @urx 439 @ury
2391 @rwi @setspecial
%%BeginDocument: fftc-mult2.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: fftc-mult2.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/19/2005
%%CropBox: 0.000000 0.000000 655.055664 438.105469
%%BoundingBox: 0 0 656 439 
%%HiResBoundingBox: 0.000000 0.000000 655.055664 438.105469
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -438.105 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 438.105 ln
655.056 438.105 ln
655.056 0 ln
clp
gsave
64.2603 340.684 mo
64.2603 340.743 ln
647.34 340.743 ln
647.34 340.684 ln
64.2603 340.684 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 340.684 mo
647.34 340.684 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 299.283 mo
64.2603 299.343 ln
647.34 299.343 ln
647.34 299.283 ln
64.2603 299.283 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 299.283 mo
647.34 299.283 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 257.823 mo
64.2603 257.883 ln
647.34 257.883 ln
647.34 257.823 ln
64.2603 257.823 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 257.823 mo
647.34 257.823 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 216.423 mo
64.2603 216.483 ln
647.34 216.483 ln
647.34 216.423 ln
64.2603 216.423 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 216.423 mo
647.34 216.423 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 174.963 mo
64.2603 175.023 ln
647.34 175.023 ln
647.34 174.963 ln
64.2603 174.963 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 174.963 mo
647.34 174.963 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 133.563 mo
64.2603 133.623 ln
647.34 133.623 ln
647.34 133.563 ln
64.2603 133.563 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 133.563 mo
647.34 133.563 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 92.103 mo
64.2603 92.1631 ln
647.34 92.1631 ln
647.34 92.103 ln
64.2603 92.103 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 92.103 mo
647.34 92.103 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 50.7031 mo
64.2603 50.7632 ln
647.34 50.7632 ln
647.34 50.7031 ln
64.2603 50.7031 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 50.7031 mo
647.34 50.7031 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
64.2603 9.24316 mo
64.2603 9.30322 ln
647.34 9.30322 ln
647.34 9.24316 ln
64.2603 9.24316 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 9.24316 mo
647.34 9.24316 ln
false op
0 0 0 1 cmyk
s
grestore
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2603 9.24316 mo
64.2603 382.144 ln
59.8203 382.144 mo
64.2603 382.144 ln
59.8203 340.684 mo
64.2603 340.684 ln
59.8203 299.283 mo
64.2603 299.283 ln
59.8203 257.823 mo
64.2603 257.823 ln
59.8203 216.423 mo
64.2603 216.423 ln
59.8203 174.963 mo
64.2603 174.963 ln
59.8203 133.563 mo
64.2603 133.563 ln
59.8203 92.103 mo
64.2603 92.103 ln
59.8203 50.7031 mo
64.2603 50.7031 ln
59.8203 9.24316 mo
64.2603 9.24316 ln
64.2603 382.144 mo
647.34 382.144 ln
64.2603 386.583 mo
64.2603 382.144 ln
137.16 386.583 mo
137.16 382.144 ln
210.06 386.583 mo
210.06 382.144 ln
282.9 386.583 mo
282.9 382.144 ln
355.801 386.583 mo
355.801 382.144 ln
428.699 386.583 mo
428.699 382.144 ln
501.6 386.583 mo
501.6 382.144 ln
574.439 386.583 mo
574.439 382.144 ln
647.34 386.583 mo
647.34 382.144 ln
false op
0 0 0 1 cmyk
s
2.88 lw
78.8403 34.083 mo
93.4204 228.003 ln
108 269.463 ln
122.58 303.423 ln
137.16 317.523 ln
151.74 329.104 ln
166.32 343.203 ln
180.9 348.184 ln
195.48 344.043 ln
210.06 334.083 ln
355.801 171.663 ln
501.6 41.583 ln
647.34 33.3032 ln
0.984314 0.980392 0.0196078 0.00392157 cmyk
s
78.8403 29.583 mo
83.3403 34.083 ln
78.8403 38.583 ln
74.3403 34.083 ln
78.8403 29.583 ln
ef
0.960007 lw
78.8403 29.583 mo
83.3403 34.083 ln
78.8403 38.583 ln
74.3403 34.083 ln
78.8403 29.583 ln
cp
s
93.4204 223.503 mo
97.9204 228.003 ln
93.4204 232.503 ln
88.9204 228.003 ln
93.4204 223.503 ln
ef
93.4204 223.503 mo
97.9204 228.003 ln
93.4204 232.503 ln
88.9204 228.003 ln
93.4204 223.503 ln
cp
s
108 264.963 mo
112.5 269.463 ln
108 273.963 ln
103.5 269.463 ln
108 264.963 ln
ef
108 264.963 mo
112.5 269.463 ln
108 273.963 ln
103.5 269.463 ln
108 264.963 ln
cp
s
122.58 298.923 mo
127.08 303.423 ln
122.58 307.923 ln
118.08 303.423 ln
122.58 298.923 ln
ef
122.58 298.923 mo
127.08 303.423 ln
122.58 307.923 ln
118.08 303.423 ln
122.58 298.923 ln
cp
s
137.16 313.023 mo
141.66 317.523 ln
137.16 322.023 ln
132.66 317.523 ln
137.16 313.023 ln
ef
137.16 313.023 mo
141.66 317.523 ln
137.16 322.023 ln
132.66 317.523 ln
137.16 313.023 ln
cp
s
151.74 324.604 mo
156.24 329.104 ln
151.74 333.604 ln
147.24 329.104 ln
151.74 324.604 ln
ef
151.74 324.604 mo
156.24 329.104 ln
151.74 333.604 ln
147.24 329.104 ln
151.74 324.604 ln
cp
s
166.32 338.703 mo
170.82 343.203 ln
166.32 347.703 ln
161.82 343.203 ln
166.32 338.703 ln
ef
166.32 338.703 mo
170.82 343.203 ln
166.32 347.703 ln
161.82 343.203 ln
166.32 338.703 ln
cp
s
180.9 343.684 mo
185.4 348.184 ln
180.9 352.684 ln
176.4 348.184 ln
180.9 343.684 ln
ef
180.9 343.684 mo
185.4 348.184 ln
180.9 352.684 ln
176.4 348.184 ln
180.9 343.684 ln
cp
s
195.48 339.543 mo
199.98 344.043 ln
195.48 348.543 ln
190.98 344.043 ln
195.48 339.543 ln
ef
195.48 339.543 mo
199.98 344.043 ln
195.48 348.543 ln
190.98 344.043 ln
195.48 339.543 ln
cp
s
210.06 329.583 mo
214.56 334.083 ln
210.06 338.583 ln
205.56 334.083 ln
210.06 329.583 ln
ef
210.06 329.583 mo
214.56 334.083 ln
210.06 338.583 ln
205.56 334.083 ln
210.06 329.583 ln
cp
s
355.801 167.163 mo
360.301 171.663 ln
355.801 176.163 ln
351.301 171.663 ln
355.801 167.163 ln
ef
355.801 167.163 mo
360.301 171.663 ln
355.801 176.163 ln
351.301 171.663 ln
355.801 167.163 ln
cp
s
501.6 37.083 mo
506.1 41.583 ln
501.6 46.083 ln
497.1 41.583 ln
501.6 37.083 ln
ef
501.6 37.083 mo
506.1 41.583 ln
501.6 46.083 ln
497.1 41.583 ln
501.6 37.083 ln
cp
s
647.34 28.8032 mo
651.84 33.3032 ln
647.34 37.8032 ln
642.84 33.3032 ln
647.34 28.8032 ln
ef
647.34 28.8032 mo
651.84 33.3032 ln
647.34 37.8032 ln
642.84 33.3032 ln
647.34 28.8032 ln
cp
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
37.8003 386.883 mov
(10) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
26.1006 345.423 mov
(10) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 209{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
41.6506 345.423 mov
(.) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f72e955f0050b5472
6b68794743aa9e2640fbbbe965e5c7462a0da2fe3396d6994552b6fd7b9f
c3a7f776be319813ddb449d1a761c2a25379bcdbddb59583b40898699b48
1611e523f8146fbaea058eb8237d1f8ef6c080ecb39f96cb6c0db3e3c586
248bc7c61f659dbd2f8aadac81a2448e7137d524> ND 
end end
end
/ArialMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5303 345.423 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
37.8003 304.022 mov
(11) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
26.1006 262.563 mov
(11) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
41.6506 262.563 mov
(.) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5303 262.563 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
37.8003 221.162 mov
(1) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
50{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5753 221.162 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
26.1006 179.701 mov
(1) sh
/ArialMT*4 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
33.8756 179.701 mov
(2) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
41.6506 179.701 mov
(.) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5303 179.701 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
37.8003 138.301 mov
(1) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5753 138.301 mov
(3) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
26.1006 96.8403 mov
(1) sh
/ArialMT*5 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
33.8756 96.8403 mov
(3) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
41.6506 96.8403 mov
(.) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5303 96.8403 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
37.8003 55.4404 mov
(1) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5753 55.4404 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
26.1006 13.98 mov
(1) sh
/ArialMT*6 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
33.8756 13.98 mov
(4) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
41.6506 13.98 mov
(.) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.5303 13.98 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
60.3604 407.459 mov
(0) sh
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
133.254 407.459 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
202.256 407.459 mov
(10) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
275.091 407.459 mov
(1) sh
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
282.866 407.459 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*4 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
347.986 407.459 mov
(2) sh
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
355.761 407.459 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*4 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
420.881 407.459 mov
(2) sh
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
428.656 407.459 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*5 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
493.775 407.459 mov
(3) sh
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
501.55 407.459 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*5 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
566.609 407.459 mov
(3) sh
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
574.384 407.459 mov
(5) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
639.506 407.459 mov
(4) sh
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
647.281 407.459 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 97 /a put
dup 99 /c put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
32{/.notdef}repeat /space 64{/.notdef}repeat /a /.notdef /c 2{/.notdef}repeat /f 
/g /.notdef /i 2{/.notdef}repeat /l /.notdef /n /o 
2{/.notdef}repeat /r /s /t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
303.84 432.903 mov
(scaling factor) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cfff7245123ea6b2
d3214893f78b8e97a902c5375a62b28f195ef7bcf7433d165aabe00f6ab5
df5c1416686a683684fa8149e3bf05c7b6218afab10e5daaa2762eacaf31
125a4410c16cee824d27ee8e4170fe84de9bb1d3f9bb831995b6> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 70 /F put
dup 80 /P put
dup 84 /T put
dup 101 /e put
dup 109 /m put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
70{/.notdef}repeat /F 9{/.notdef}repeat /P 3{/.notdef}repeat /T 16{/.notdef}repeat /e 
7{/.notdef}repeat /m 7{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
489.84 325.903 mov
(FFT) sh
/ArialMT*7 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
519.197 325.903 mov
( on a ) sh
/ArialMT*8 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
559.278 325.903 mov
(Pe) sh
/ArialMT*7 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
578.873 325.903 mov
(nti) sh
/ArialMT*8 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
595.792 325.903 mov
(um) sh
/ArialMT*7 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
618.047 325.903 mov
( ) sh
/ArialMT*5 findfont [16.02 0 0 -16.02 0 0 ]mfnt sfnt
BuildWidthShowArray
622.498 325.903 mov
(3) sh
restore_ctm
/ArialMT*8 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 291.663 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 100 /d put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
40{/.notdef}repeat /parenleft /parenright 58{/.notdef}repeat /d 19{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 282.738 mov
(x) sh
/ArialMT*8 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 274.711 mov
(e) sh
/ArialMT*7 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 265.786 mov
(c) sh
/ArialMT*8 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 257.76 mov
(u) sh
/ArialMT*7 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 248.834 mov
0 -0.0160217 (tion ti) ash
/ArialMT*8 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 210.432 mov
0 -0.0160217 (me) ash
/ArialMT*7 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 188.146 mov
( ) sh
/ArialMT*9 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 183.679 mov
(\() sh
/ArialMT*7 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 178.328 mov
(s) sh
/ArialMT*8 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 170.302 mov
(e) sh
/ArialMT*7 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 161.376 mov
0 -0.0160217 (con) ash
/ArialMT*9 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 135.499 mov
(d) sh
/ArialMT*7 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 126.574 mov
(s) sh
/ArialMT*9 findfont [0 -16.02 -16.02 0 0 0 ]mfnt sfnt
BuildWidthShowArray
16.02 118.548 mov
(\)) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (fftc-mult2.eps)
%%CreationDate: 4/19/2005 10:56 PM
%AI9_DataStream
%Gb"-6HZ(0"Osg&!$)m<Ss"r)N2oQ,R8+[6+a@qc/]i4l[>(&2JNIa@".#C#rZ'N@,O*357rTn/-GE7P*M_%kHCCXmRP`_:"*r[k&
%[p/di(V?.IDr4g6rGHiNDnk/AoO6cPg#N]&g#X#Wr8JOmmIJGYpPVB;W468&aeS29Q1d]k7]PV!;$fTV^#PUR&(_V9n,@9QF+3ZY
%rVksEk4\bW2u=]ChJRdhp)X*P[e]*EX/h`)Cj&lmkPs8f3PB]b7qK0=QY0C7rMonZO!!5l]=PY"oC3ICl^JEoo]TY#hGG*G?efM,
%Df3;"q"j:8LPm\_p%C=Yj,X%L5ir#];<I;eG;nF8T"Y%#7kHZ9gnNSRrU&5:p%Ias,s@E@5M-I,qD["_>\YWb\T#(6Dm$6,]YD'A
%]=YW(#MrDKh:^W?`U2F6X+Q,Ohg\G.lKRL%d*M0q5JpZ&)e3`;gACa=o'56,k4\Z<DNg(`(h<c!H;>cY[DT\pJ+NC3lGK*L5L@ha
%]\sI:k?lB`r8itUGB`ZfRXC^9rGV`3+*p?Mok*.*D1;<D0/(&OjKW(K]`"1(TeoK/4SOmQn'9u!C6+fMH-G==`OBJ%Y3r)QRoYDa
%ms_[,1&q4n+RcjAk"!NXHSAf:"k`LriP/E0I><0a$(E?hq84;7nI.&So!!t-IeHs]XWE#YQeY/+j&[&Kn#jt(/pLl[+WmOTQkKDU
%m]@lh%i=9h356o+f:Uc']D1@Ui\/('r*_5lpsj:X:N^fh[s*>7r*QggIF[u_QQN@_DZBA&'"^_CP>qMJc'sVA=[&s:H?I48g's#@
%Y9gnD]D_0W%bpF:"/c(LRrP[iIeVgtp">BB\*pH8l0I6A]6O5'c2Y];I2PZ0Ua]_D65_]qk"li<\P4^4P$*^ANloph_.rn!0^nbF
%Qeu)_rO$MPbg%<UhHeocH#\:'5T2UX5lL5^e8$L>LJheq?bU4k>l82us7(&h`pV_ps)_3s8$kS>.b^N-IC$]!`l_\1r*i0`rg("/
%e]i=7C\tu`d5+#"dkt^PQ^;VCBZHZn\@n_.h@Z0O/oC#o5?r#<5O8%[?bB8t\G?-jLPp)-1iD1,ghm&([L6j'&^+8KcDAdTbO`?j
%Rh+sGhk27nLr-ng]=uqI<o7/0X73<AI!7lThZ1DS]=YcS\':OZ$AMuVMCd<EbJ//<\*qY2?4K/Bd,PK7^C6fSqiBpLQga@@Ka-8Y
%#/J,70,#o]2oG[%B:QUt^B&3+plm^M\$p!7o$DX)VR60nc)W(X)(N7DpH_:I+.I2*KY4pBV_).j?<pjN]st]->htp`;;h-0eb./t
%$fLjC's5Xl])-Glok+7&fe'*$s#<R*^]*3YpAO.5hp0!o]__JobIagEDgo@2&--k=Z.4)i+'4<BIt,S$)5K5lkakK_12a$/VXF?e
%We%.[\p4,.h=mCGrkkqNY>c$>,,cb1n($Rebo<_ZW,DY$`K,GNq:=Ke2t)4V[?q[;oiY8Unh'CH+3q$rs#^Uk0]0XYTMD#lh[g63
%mJZO?^SAhn5i#M#'=c#Vs!Ju.)6Y'P8K6smm/6a=2ag$Z0/ihr-2sHI$Xd`K0:-Tj0)f@%q<c/Oqhs"Rs2[!8purUpG&dN@MuVFW
%F88kA,e3NUqhHaWVD%W-+-+qq59,35JC/jb0E+9>!j*'V?mMVsWa<I8_W.5rK;/n6L<,uNVp.615Hu'*m4pE'ag(%G;rF:fEKc-]
%nPg_Zg--eFV5`B#+3%%KKcA-5!tQn:o1sAa>?W'`,H4s=K2"b_h;C22MC;KQ-5+)36]'1=LX03EV<PHED<Ts(`=8/WESS2HBa[_p
%cI=p<KEl_X%@!H/IWb8]6H9$I3pGO.?<s[FCKf#L:S&V]W>Z-c*AC,4nY^O>\*0ok=[M"#FrcPQ8Hq.L119*H3ZZo(fbfP6'NtWc
%HDU`rHC@S]KZR#H``FkST%f+O,;bCXd]blS6*(_`Fm3kgX%CXQlJb1o"<F^,_(]EJSBR^dp&+?dFg@Mh2h<blbDd_\TfQ-9mKS+o
%Q[8S0KOONn)F4l2+CK-GdD$s4mmk]r=I,'E2IL'b8F2;>NSlOJ-q62[#5X!d+a=I1iJ5';=MuDU+`h/'NIfFse<&aE7(AK`cSh(-
%CE2SG#%Ao_`lR`g#odq/&@tMe%O3R?p5\uTB\<GE>c=Ra3'OTpKEo#0A#(<Uk`HdRAEQheR21(d/u)bYHErb6;:h`W,^MrZd!jH7
%Vh-0@3SL8iD<H$CkA0"S&".Mu-4GS5Jc1f>J,JO*'0R^+&@Wf[-_fWej[#J-h+RCu8-=dFHj6R(>>M(m"F,c,cKeGg)_0)!apLbu
%;*<$ZN1RM/o1hj*^hl'T>Ehp3$uYTG7q=&[HB\p(]T)=cGir,7;ci3%dh)?K$3Yli5gTTqJV6<b':4Oenh.oB7&H[bHe`$sHW^E=
%+BhESL^8C(oqBNjW!I!"3Lp;Q&?&=)2>/M]Y6]-A>M_j5<P?dD4a)X1[C$8pM:>sLA_FsVo,t?$Vj`B0)Ldj3\e2WMeb)&a5\Pk.
%Lf>W2cG`%R+>IrQBYt,*+>C$bGX`B^R&G*XfO'J<$\&B:Q/F7sPLLR!AjX%eJo<JPL\A&lU0KX>P?UO]]f<5)g-d/].@:W/2*n@;
%rBaHMQ'ou5'7/qq,c^*,A5_cML1Kc=MT2pU)6rRfeEmY_5(8['0cM"[`aei:1WWA%`D;.UO\chc.XL&)an(0oH9ohAW4d"l7p?mb
%_@a+sP@mdJZ!r*fA@*+/53b0%:_7XQZ9U;2E<3@(:TY7=gsDd&e`D8^#),F_3G'G[Zn\N26Ba]5NAf7ej#.B40j`:m":p731sq0`
%R<pUBM()\;rg(@gBLbMVAWX<[)>&r.a\P$)TIjSM$mC:DTSeTjG6E&OBo40/`%c=#=EaZXCuegubTu"aN?"cq`#bg/'AA!c#K$K"
%"rS-&D-DrbcXUcBTj_G/C]jj%<QcWe"B#_gVZ3%V=<CWP#f86o@I/80fTD"I39jiDP;GrrK*W5\_!iZ@-]98P$4t=B@g\WVoQ8%#
%BVN;RLpHVbPjOB5l:BjldjNd>&o=?e8)@g.&_(;cI5Y!J+HTt0":g>X8<a49>bMk>`tE"C4bBeg:Ye(A%=)>a.U[DTBM:i_.mg(3
%jAVilgbR-M).t9M6K]l)F_Jdo4`(#2W$g>M[k3[K_C3Z>g5+\0queM`JU*>+!g@'OTl+=#:$^^=aSlAS&i>*N\3r1j4!h1DkZVk/
%@D\R#C"oacbct9QCpt]En&@96>O4$=*QkS8&&IqJK@O;N?4akKq-(plfP2.:Ei?I.*G\hW"i?QR<2%O7_GmL$*eZ".Fb`4N""cj;
%#*rU/#TdCr5(/rS/53^tM:O-jX9ao/W-]U;#P'kD$!P=s84blQ[ijgq&.%V_7ORia1\8<naf`6-??cS2[bfGs?jV(9&h4,pk"-C&
%CC.e]Bju2H]`=3cMi(4t*VRjZ'ORh.g]gfg4H&o!:_r's9YQ5Zo;?[G\"Er`VVD@'&"F;F7%M4"n17=CQ?*ch!!)?'2!9;i!;Br3
%dd(T)IMh>S#^$5/h>fBHZD*E;!45sr829B6^eGA6:*9`-(5mGa"hNG>WY:21GH6&kEc\pp<M#q)Up\3>9XCE3n71gH*:5Y9*D^(S
%OEq,n*kH_:W!o@CN1q9<B+dLrD\HA*fQ@[A'j;RPM3&HO)rs!m-?6:^F:fEq)((Z5$9\dC/jb>E_hB"eK1l;E5nTmGo['.&8m/3'
%J7W0Gke>>Z*(4=h/-i:"&q1Z^`!QK)$-P&$Ok)pt$^_1?E<HIR_l#82bQVca5U!+D]=%_8Ms(YGls>(29BU8@eb])p-!aAT$uf=-
%1m;7th<Kspf\Pf<;#\(2+dk>Q$-i$5_2,p#T9?CP))9?dko1n"!?Ejc$.92)SV'nc'"H9r8;gI@8oGl3@mZa-d*[d*$:-d?mf9*f
%(1j8$YV6'f,1$s-%Ka1[o:YCeGYLJb!e2t6.0>+l&qi!/A0"(1!GOk:=R9WVLN:Va5o-DT.RWW3l,U&"a7L)@S60r$O$L!MCLH]B
%)4]EAH"8C[:SXh0$SiQ_c9b>>#KR[6geL;[XruUEapNV2b492lOaGYl^ha)'"N&BE9aD,CSH1l%gf(B`Hh=D)J?hKI@88:o@0FW*
%I=SoTiidR/;Hmm4g;/R21qK/UCOu7(`XL4%c[nCQ;HJ.C:JhQF,\^nWV6UE,%atFnS@.l<CC]=Kn[sBh1)c`'50bmO3EKVS$Z;XR
%7Z8D"$T&IS$!9a]A7haV'R`rk2"RAk8JA.%8OV6_!RN`5Y+TN>S\f)MJW'ahHj[m`D$'\E[P@)G;?78^Xb!;c@"<kK:6:TMd6jEJ
%cKJE.Ug=1B8-@-EQP58_e5\Bsfq=tA\Q=Yc+FGG#&el^F[a;$b0mP`gc60>FH$Jgr8.`qg@H_7L1di*KnYn[h/JK?BJbB2oW3d6s
%_PgM_Qt_pa]^mDc]\E_jBjg<.]$7cf&Kl[6Da9<!jth&k1`hc-,AR;nZSZK1?qqV>]uVb!"enX`&Op,a"EcOUL.=.;5h&Oi6t"ro
%p>*g6Nj4cs*Bb&=JrO=R)b:ZUa"rq^bP_,_L]i=GQFppC&r_I3"GqG]PtJ9N('^!/fZW!YB/,UBd=d!3"FWQb#E'8!k2XFQ]U&Ss
%^<$=QjY_%Fh1@JiAS5Jq:rqSl=>j$:GpU:11[@RogM*[o%;(RPAub6dOsIGiTl$/i7Q)Z)p#QFe*CB4)R_`['AF>gM_;LM[>ubAS
%oO$s,TFj<e\f\E-&f6cs?@s6_)UPSW)Sl=Ze#9;]aA`kFQ%`HEp"iDP>)qBLfUJ8lkHPZu60Nf+)$Toi1LK,>40YjtS-mV<TiJ*q
%$78=mQnY4%cb&)&9!;Eo=<^Bq9a8%+6F=ekBoSXA%X\YJ+D.%YTB8t$Bn0.c/-9$?F\#:nTTrE/]h#Y\/Z,7o*>5o\;l(m>-joV&
%OmQ7gBY/r/_A$QT/D#57)t81/?Kj$\@PA:qT>aD+quf^a@TH@/%V'heT1g^IN4GXXciTTi+Uhi7.S7c,iBt1Ir8H2--Bo)<#q.f<
%<+Q3(pULsm_O(eQP#q6Q5VNC=>';\1["5]:@q/.gRi)SL7:[`3(oF9rPgVQU?^St<duS;7[R@@gR$>\C&V].saC]GH0K"!<hhESZ
%M;0o-%It0:17ZEL6.?0"itsrPYtr0'[Ecb^s0^WIH@c8-P2C.UE$AggZeKK(>8Y>01m%XO:NI5j'D-sBRB<bP.TL6uba&Zh]aOam
%MlQ(.b\HMmQt8CT>(K>+pgK;nZ(#]jD,YrtfU>EJ]I61`V*)!`0aj!cU4WRiGi,IDLbUT2X97d+F99J]Y)`9K@XVD(q#I-j`+&u*
%-TF6L'DBE@c9W8&)"B`lf9[%f_Z[<F(^km@03Jk+Y:TFS;0@]7SR9600OQ7fr[ad!d[cC3VLn4O@R'W\JV6cHl"-cE@+QEg4!rsO
%M2[FNYZH"a7(b49+Q>01dga.K1dR5n:]j\Nk7[.;*-giU_[E^J@DftY"F&J.R*r8$##&Oc4oS@/!UQ_N7;S;D-Qt]-S^)#$4H'aZ
%QpR)_SD9Wm@>=5Z9'9Y9:UMfgeP#UhcnrBT""RV0`@+>XoOS_H&6Ks38#Q\][5D;f%^7JDA6Cl0p^sP[6fhir:em=0Ej-?Wjq^>o
%3fk$2"J<DQ,:Y89%:VMV[cUO]+KU4n!8DU)-UNqI$Yrf&<Ip@+*JGtd%h]WXF7,]n76+L_fhOLEAG,JlS8@;"LE$ij[!<*K!m:II
%<blr[\,E\2EDpX'Icp^5epYtAhB-d!%H_oD^@c]&Gu:1*SE'9`MERlAk%L&L0?uu,lX3h0=_.+@1i2B^E#2u!.oD%S%r46XUEi2$
%;9YcI_o)]r@,!u[#Bm=r[FpiQTD9>B%"h>i&@Wj^Q0ouTCR&i.,cDXJa;^(J_-bKZ*mcRYLB(8L,D[%G&8XXO[\T#h3;g]A!b*3\
%jG#qXUTf#eWIt(UYCjUJ;nA#omTLL?Riq-"gqjCrMTFD*_ghmtp'=Jb4Jdkp!r&86_3BT_1+e3!_3P7I$;Fu"J\bk.[oSY$!H0"`
%%MoCcA"&@\(88"[3)KhTWR_-]LBRlC2&%Y3N%!Ho[t`H3h-_)j,eR>OE:j%K:Nb:)3Q&!8ppo(?.8%4=W#uW0&'-VNa;#E"@]*X0
%AfH7T#-&C07^gAH@[7)9K*2?(#E?#.3>g^V"eiO7^=:mg5%QY;5YD[e&P?VnC?]4-+"U\9$_k("=C@e]YZ.!lO,8;:K.NN3S#&c>
%K&`Ms4CIuKHL7TU8:=7bEWdA+,"51H-+>=*6'^4,<lTL*lX1lDo?`DgYpq?ICVU&Ya,i.75`d$r.AZ`)D.]/"'CrI:q'n.YS]Dpp
%`DI/M.)C^!7MG>IX2LN905<dPOUW,+W%oGoaIh._*BQ;A4N0%'5e%\Q:<:Cdp_+3cI?O@`:$.1-"(VO4Fc]BP[;bHa/f8l?6'Q=`
%3+lh(#OQ,kB[Ztc!$M_2TX,!P+Wo27K;b4-+mP.1cT01"J;kGE(b;M'=ZAi*:*I<g/jMf3kU<NqOQ".U"fk`ncqb4qk0muXc6F_\
%M4##GfXr-Pd?H1u!mhXM<OeA>UZd-1;.EfbSr"as[ZQANYY)N0M*GlB)mLpZ8;.'W&^MK/Ug\r98[[A2LfOh7pWLKk`i0d^>G7M$
%fSHZaK$YEN*_0XLq%VPu\#^Q]G/&mt-_r>MR`tmR'ZLHH-;lOEQ5gQ(6o:WV5snMbT36T7f\d;-??n@HA$PNb*FVs%:Hbb_9q)6n
%J=um.m"@["VaS[\S-q?m23JETCh.W07EYkZP6U!cB.]Gp-(L?(@^S)r9nKALilpp^HEfCp];)l_0FOPKCeZ>.m)gT%N/T".lkOB1
%*\\q#;;#VbftCM6U[_k<C?K'!5m(rd_[[PRNcu&2&/l8D%1*hIRZ==;`&/6@-qkW1;oLR%E]1u6Z*&_&#5/*l'/(O,ek0Hmn#=ML
%ZWAa1lX1:;M=CTT!C)F3QPkoq]cWC?jE(<Z`InU(U':]6i^)f0+qJ,lTK#[4p;KL%U?1#I"PoX)h>pNh8c.jccXKZ4J-;Qq?k+*#
%+G:W,gICq_'.DJTr/&M5;Tskn8u8?t#?[oE1lCrI_.OZ9bigG^QK)hJjATb^$.Y=BnYt>F>=RgpMjR[5f-MV]Cd7+NcAVgu]>MqF
%4!KUhbK8tHDAgZ[k?qlp>EH^;=R]4_R9p`d:G4RbJF>U9Pi=6'0Qhc-+V6B()=W2i9dfDB:?)uniQ@/t/T*LBFiZ*A[9G;8%XcGD
%Y%W_5)D8W34sbGeYfV1W[+,j0*V;<$?3'?p!p.Qko1!3^Qrf05"$B0Wg'A@#,_WHJc3a4=nA!3.)P:=uFR2Xs(=D$5]5kpm<$R/*
%!W.T@daV./&B$VLka=IV5k;nI1pW6?3[W]?FI;kl*%RXXf,LdG,=hZ8N++\Rok?Hq=[hbr6c,l,Bc@JFc#nlb)n<(7!#A`-)JIV@
%5J<NY6:5_<^:Rp!5E7U3fkFpq<tI+hH'cE06-0`+aZeZmQ5aV?4oc6+;ZTiLA_$2tXSRNdAg\u$W5h9',Q:qM`^\UU7-`/a4nhm9
%r=F*=;*J08itIKR'/h8=F\#^41Zl:jelrof/^C2or4)PY2?@8W@FUK>"!sgU]niggBra0U[[u5mBrcGerSpFqM8Aqe8pS<C[1Y3O
%59h@p5^4\2(f=oljAiU-_hG4]ZYGO!2M&8nFffAqAZ_9-=ro.uP-E#=V1e*+U/i_EH5I,m_e`.XWtoI]@8N1sKiKEM)&9POC%X$I
%mu+5]5R]-DeS%_XS2k&2,E=SrBj%EC>Z=ZQd4kTjfp9MKA]-JKW&15HWq/u+JNh1G5#W@1<f.hKWg.U1XAHhj/8!aM2'Th@fW&B>
%H1I[IPf(=P=QE^751bX(S#b;BGB:G@0so_^=m$j3pAMZ-DrK,F03>MN?**XDX+3EU;6*[]_h.50[d+oZ)O?hL>=I89?>'P,%l%+f
%CS_K,[9EH2MpJP`nShbARuGKn/YZ-Q$MLPVNe_u&o3]U=5-^f$/_DuleREil.il^/McBj65?NtZs4$<G,;ip6)UI-qTj#7Q;YP:4
%W5Teea*Q1MHC2`NEJoK@?#-ZPM'=)DDI!]>Y#Nn#'t&'_P[k)/>n9#i<7E*5XPLgp1&;ujj=uiea`h<&G3H.b0DaqP(Nals<Y"-'
%]6U;eI;s]N4ReM+onRbeZnMB\B79dg-NE@\I^lr#GYc(]?#6D9lFYfW+"i@J%G_QPS@u[^p$L9=Ytoqbq*na.='(aWhI"!p_7_l+
%m^nB]rLi%TSR:6FJ%5LOlJg]-]t:efqu5`qqm3bM?N'Elm.TT/X7&5W??+_$(Z4)_qY^_"8nf4EC6.h%0>ID`Y!/#,g)'SLRh#Y8
%HUUkQpAXqj(YAS)GBrlDimllPfpdocZeKu+`ni?i.[=p)?G3n[]=N7erXq96X+,S>H#ZJ%I_U1$T&pGo<T>Si&:OO&@Xh^4F*mM^
%(N7&K]4K%+.kCW,Vb+;@gGe"r>[P4A7=glfe^_ogQfi!_Df>&MIK/?>mk<P3]&b1?<:S56la(YSlW-b]^Us@3Sn`_!s6B#*2t&uX
%Ug;j4^:O4@p>Vfq4$3I]GOatp"&ud3%"!WubhUqJ`>atgcD[S/\#fjWkkaZEq1gKgd5^.+s7tX?QKmE%qm3>AjV\DQ&#[sY/Y`?l
%Dp&g'h.gh=I^aIl>7BH?p>jb1]C>*=X1p^SauCs.<BmJUINt\<,EMUo=6;HLbfS]8YC=M&Uh5'/'n.eNIc"0#^%CR`[GLS3X1QQ!
%=$OFqrVJ,'`1Lj2J!.s(l72h5f(s%TnZ2+sD@'N"DQa@V^U\[jl:`7HB&bo;C7iVCcY=\;4<8&NYKguG/u8>t[!pCP;c=L?hPHIJ
%PZ!k(,;*c"$_!*bo"Z1nIUdf;kpkJ%O]q4ujU[[XaCK[[WZU:n+(kKI;!\$-5Mu!Ar+P")?[Qu?M%S0cs8&ej+0I8G^%iZl;P-Ut
%B\BRJ?e`ErRKqcsY7+GBrJUIJec5N`kYn=3?ep1@pkk,/F!_*/r+gW4+)$Q#Gh;l]*IR7d[s\QUQLa@d00.q5heiA_qocU0c'JPs
%]DC'90+NRof>d4fPJtB;qg82>e,J.9Q^<V6oWp&i=.EQq]<Ya3YE?!p(UZ43>J53-mHH[ol\)E>>hfY]o5k/IU*Geg[,LA-l+,29
%FD^9r&UE-A]fW+W`1:p-SbG=p'g9Z9^<ea#!l"=h^\>eJ`1Ks%*>Ji'L.(<4+k:H;gTV(_E#]-p_C5qNeF"/_N%*mkiY\T'NVdr?
%:Z<f4P*Em!;beWuBhH"E:WM^a#46KQ.H`hU.IZgkT?m^#S4kH4j>*$<fpC`>3YG:0doaV(gl9A7.1IXuBe%STg.s(Q3FSDcA\6dd
%\#2<sMn?9aG5L+[hXAq-m'eX^TF&f^4.<I"17miHdemfAc)9ZF3o->J,JhKO@@T;?4[#M-H\-/"[uj;DdmRaLeSqG(am$phammLP
%A9Y=BRAd6.P"u^u)G^3e3uO&SO&(dsO8$],j6cAY4OTE$4ZOP'j)F@!g5#Xkra^MkhsYddm=*cMeA"\jN;GlRFo,Tk\i\Rc;t"qB
%/WF58Z/f2b0nl0rYn?8=:U__+@iFZn7QbNX)L84M8"'TWM`a\2e&c]*1UEkPRAQ,/.FW*%RPR_q2iOZp$-hJ$k&O*N8q!M'br!1t
%B%bX<&*:0gd(JhjN`KP^FXXU8WK?I8ki'[G:\..AVY/[)/Zmfq$a!j[O]KpEdSV+8Bf_qFhU>YHBuNSGq4&)V5Tj<NBo&[?)97CR
%42R2<n>-]Q,f60=Gi[iq:;[BHf:K3_9@u/>]LfW"#R:Ij,"XNgP]65]E-+U[3YBXQ_VR[_*!i0.e8hI?iQ$W;42UlOp->>-OD&80
%g*7lmdb^_[UjYX0::lF]L%\iMrC@HsD;gS#jr#P<ET.i`SoNa%3"\*apj+<ff/u87_Sk[HrVB"sA\LA'j6jV2Z<Uc7!t6:CHE3Z8
%F*F]@&d_Ye+l+A#rU/g'1PeX#8Z`/[M]`Lh.Y*=7P&uLQ+m+m-Ep1Zq@V\J;RL;W*e_^6VnupiC[C<g:';t889j::5\agtkf<s:k
%qCu(NGl-"MU=\3.fl^stm[KnL8%ia/P:msLiTmai1$^F!pm<cV^;?S%>$O@HR+Jl&nU"/b>D2AW's^QHN\"@l=Ns/i$e-@qZS9X$
%%&jo9=cApYdW893gVi?10F`#jKP@/6>9\VJ:pW^[Ld4ERQ'j9;XLBZ_*tqM*GjSVK%Rb7ZA/?#f-R-OA9I,6]o-koM,@V[LBI=S,
%$^#Gg"@UU\/:8,o+p!'6E_jRr_B4U8:d`/.7Uc_C<JWg)M+pg)`%FeVCOrqQM2;eW-?bR"(bqA6R*:juc(8%_0eo7uenQ20+rVB)
%V+g6T:ie%n-'gu)O'($hZ*4lSlCn)7@Vdkq`8YHt`9aFT`:g-$@Y"7.'0@HWT,?T;/K?>L0hRm6@[T&%`'!X_fE8D,M41<Y`*A@[
%`=`\oIEE/Vou);(9crmV@`O0,L!ERDd-rdh:5En^6LuBJmYI-ldRPiO&7`aLdnX^CA'0VhO2UgkPHA.Q^?C+n(<D3E;nGd0]1BGN
%p%%b_X"-Bn9":h=1qsn!LSMtF_V26kksEVqZ%dq#nUOa5OC3.%BVWER0fp+g=L_Lk2[]Y!+l^_"*#3O$I%c-e0C"Y'US:L2lu_5^
%'6ote@mU^U<tfsToJ,=F`#fYC8-EB&a@%-aJj^#&5q)4'GGjG^#t,sMM,5I,OU+E#)R47WifOL;+sK<D1,2?'V8Ujh_@jd5&XX[r
%M9lC18H^Ds:*Z55Z3jEjbm'cY.*(1L&Z/=U]Wc%2C<%$/@_lei@g!=3bnH4nXM@e8rZFq+ZFE=>+m(M;?$d@#G%q4i_h]4&QL[XO
%E<)1\fLA1ZMSZ1haZaCdgYXfN&8!@"5qFb-%)hF?p6K<)ad!l?aps(J0MC>\l"qubPss>X=B^"t+`'Ir/moC1.RmaW/M/$r`Jtc-
%Ql#O^f`i:Kj2DPQ5)b'.+sZfK'4r5g`/#GrKUG4nd"C%[NgV&@*InkuSH["hkm,o!1;O3ppIsR4hM&<E=nc-8ObpX\F:`L;jHYB+
%nJ8FT"M8DK6CoBbSA8[U.j5V>0QLlWa5+.1?UUFO^6.37Nnatu2.DGUB=8/pJE\9C6%mT;5_rT!;9[`ilXSPi<?LD;>kM+o\6E4m
%K@dKA`mmM+A-QQ\_cBjIbN?OIfJBV[c^d6?28SR6gk-=SYm5'7Ls1KoHJ5Q1X#jq$@(DD5#RL8]XYj4'+nco_$O1QM_MjUKG+a6m
%6G4U;!dP9__a0B.KP_8Y,"OC"el0FSE.a9D/h#@;"!D-K,)JnV5_PAj,Ou^<120UH<I:7':hJPrPsiK4=UF/L$090\d>4N,)?Or8
%*SLd-,D&VgGk")jBQ"Le!20LG")/F3B%l:d'VuK1s3'11IBRM`,8TBp9#9N^b*r6i(&=L3\YF"hEhnQ(qg7_N\Ve()rdR.6_Cc%a
%/L'YK8^*Si;W_AG_-"RZ14jA`!6/@DR]0W1"Ie&TRb;=HcJQp1ZblU#A,[,<%s_/CC&F?]I9=l<=',"/Ztk$Hg9%OVl8igLMD_^2
%k1Akg3oFgXs*5S#=Bo9W7D$.AQW\4s:/Q:Lq[n+oeDF-b*EI]i(FN2h(7GdN1r6gsqh7B'4%[KRS1VoEU(j)#Cl5LnREX,:WH'QT
%nVO9d:;'Ds,X]0aObo"l_d#nO7G4`9Co[')W\XKMa36#/=Z-n8=VPJB3@g@tPigG[dS+EIb#3I@i#FCuE2m-na4*!Q)daGCBJt9W
%4a_&L[O>$&`sLmj_lkRq/Vk\nH!9^Oq+'"tp.;>RWPP?"#dH\Dp&LI]?pU=;;*s:7[7Ts'lT`eZq;m+^D8&-EI/D15?XW`s^N-t^
%Z[f($][jGW-g:6_?56/7f[gLY]kD&qRgET816FR9;'o0YLp7J!*Y>?)GqeP\`Z].cQptK2$LC*HKs1n<$<KZtD&'?iQAH?H12?l"
%&>m5o5oG9Z"(MPT$A8us)c.ls%"QD`D6baWIj+e6rBg:QX,?_ENV@2!(W3rMU27,:K=qOpCoh8r>,]I;V7GFkp1CW!7>BhtGF[0-
%^U?k?ogN6,ijJ:TPHIE`q!d2*r1Xs>p7kBj3FkYN+1EB_:.PVm4M+40NI";(0>^pjT2^*Y[Dhs%>OJY&Z+E')MFRR/Iu>2GG.6SW
%/S<8/"[cdm_ELmU'c>snW>=Nj]m+*?[_N7\Xa`[q`P#[reP==#rl,/kb"CIDLjKO"[^*QpR<=l6*R7(!Cr=9RbV!^4@Bg-.4]nf%
%@LErEYh4M&-L.@0JO?gHO4=;ZXL;Ij)alP'N+tE+Mt)=7]jC*=Gu&i6&R0(aHa3(?FZ679=7!N&l0cNbbLTqE<ntXEgQC%E*LdL5
%Yeq;.4R\ZUQp7lj?jG^H&EnX0qcWn^TuHoHPiam.cZ]7<>?n*:X3dr?I!rXr`X+T1/OJNg+eUk1oFgG=bhD-L2+kEfooecj79h$g
%1ZZg2j^8/1>hhkd\P[p17?2\n91.JPM7:9\*cT88+&sD+6nFD0mA9'^?*];`?X4`&@W0RRA@^tW<G$fncO)!NlGfXVKl07e45u]r
%bs^+>:K2g^2E%lH<`U=oFQSDD/VEXB*6XYOIptJnl[^fO+rP/S[pZLk'9]WW,'-KTJ/c0_TUW*#N:)@$>Ti`@LpcW+Xdp(t$gRRf
%a6*IM#0dW/$k1?9o;_LuRVYL\.THlL?J1Ps.Bk3S.'P'Q-a/Ya?qeG')H1B%Bk!"n$+$@&mF>T0C98i6,E,.F%Po-R0g)c^YuHA/
%S2-jr*)egHK)p<2k$gEaB.U4?'3X_.9,qk.f&MI7nae!+Iu>*B])1GN8W1pGb3-:@K5kOF!TT7TCuni(ZIK1^16X81'r?5q`>)F?
%^[Im4n,85;j[7E0bq5d9H`"9S[9hSt[NTH[2#BqP^iUb4D$grpQD.Knp*teg<6-gI,ZJW4ongu-[W^U%ef`iVB>$!4@NYp%&<dth
%[R.-%YLG17-:0RRle_drRM]UfV+>,YQ&rFd&Eo&R/0D.=+Xe']5AIrT1/[dC1,56B-lHLnl-VuBKT:V@\a#/*lA:2!Cs/Ek8/)DC
%ZFq0u,"uO#HYaa53X#$k.*r8t+4-UrSk.2!8C3ht9k)?i#5SDddMp(h<J[Mk()YC4:_Y^?NTu!M;]$ngk_JsQ5s'a?(u:QXN<a/e
%$[MMmBWF@Q(B6/r6%APCNL;mJ[[mq49>adP*H`bmp2E])mibZSpt=WG_jKsJDB-NP8)OQTJoKbLGbJ4o_hlh2JT0W\7eAZK=E2cj
%4]P<5;5Fr7<+MDPYKeuU=nqVVU$021^,M/lnbHB#rT=sr.P7ftal_1UCYf])('2iuUP"8<-K<?W=^A7QF]7,ZRaQFEU4'Z,[9m1Z
%#HhX+fgRJVq"mRbeao_.2:!>V5-O&HM16UcENY*[RkLAX(Gk[%.fB-NB\,D`NZUF)o\dier#j`TC_6&f/+5Jup?4;>b7e2XC$FYj
%`o_+X*nc1JoI\Sa=?R%!T*bGjRCaB-\N#YXDIo>lKf@W*4>bif!tO"0o%`><0fDEWjp$I0EZ!X->ZBaIBZ<Rnpdm=&*f9uE5u_>c
%0na-YVAT'V$`4c6(WbiF:QI?$d4!"EksZ'QXlbOiNS1QZhhm2E:+d"%.dOF`g8h<m1<sng*71'4T-/nG$HsNJ970EIM1D*ojq(!-
%aD=AY\^9!<pi&6-CCH`MNA$-@X@L3Mhq#^,ZsSWV[)bsSd@5.,V>H-`m-$ffVFXP]kbqH0r4%R4i<ccf:Q>SVj5%\neRj#K]D9]i
%&.1JqNYHQ\=b<6O"?gB(H<+OI1Vu97`%t.Nj2>:V92I9LS0EW*f**`9KFf@O_*H28WPpG@C8.;jdP?^/g<lY2AR4TK=ZEJjTBU<@
%U1;7,3S7W^a(F;5Q?+$dMSn6",>Y`fSitUq[OILKL+Ic,S`0A-oR;1.nPZF@Thngs#9<%dpR)-[US7GC%+#/;;6e/^#4/?tA4QDq
%a$s-RQ=U8hqqN!'8&kE%7.^5\55VG-*]RBnN"aMsnVe.-3:ZN8NLGUk;\BEYaAEe0UR3)p@OMEJ8S%VS;kIsIq=++Oo)/_rE:e<n
%OLH7H?!MHsZCU]VqicA6Z?hZol\f#ISguhO-QEUH4VSUb/eTdOn8*F/MQ:]#$a4]20[W&J#4ks<U>_cl'`oaAZcdLCd/DiBf;of`
%Hs=N37a6-tb]u8WB/pRarET1Vq,`bNZIS8+XN.7=rESA/\j/;T%Mf@EG4W&]?+Q2qN4G#rJ$)0<r%62(8+l#nhFsBh*lCFPS*_aM
%LF(h;=VsSSZ`'Lmb=L/K.OJ%"BbNk5QqFi(.c"f:SA"?b'1mnO!H3Uf`,K&^Jf7O^V?<"r).HPsIUjKNkqXNDNhcrE`#3pX_\+SO
%W_##O9c>A#1cTWFc/<(kl;RIlQf[`^6#MbFVaUD(_,6iA:H<n(UE&s+I\[bXfT9lUZ_YfT+J0iqrA9'5ao<D,DJ`,'U9OclK>p,f
%c#eP"-c_"h"#%Cc]E6]C0:mn@&#';,HhQG7-hV!hJ7lS$%Tm?,d0-VG40$[<CN043/Ga?-T;E7>,5SPTlKH,.ep2rPL[<p`>%AU.
%UW(9[&D=f^%h\i:((Xt#>3$\*S#YOGnC[_oqG/bVD6a(U='FFVHKBI<H5S_3I^+aS4^6_sp2@\gXc9j]I^4H>5VaP,s6uaKrKBD-
%/,;>U(V6,*Oiam(\Km@VOa94=\n>O(BdL?^,pgW*kp+T:pEtTa9;B3_H(7k5CtT*k8B&KEC6hFLf"j/LJd560XA[*aU+,t!b*Ei@
%j!Q^UEZN?5N`VaC&6_P'ep,D=4QW8mbep]JT,ap,eA"LC5Q90M2F!Bm+qOLW+-@i-?s;t'XomX-pSJ*ip#!fAmgb-EX[C\M;sku=
%c:,r0n(T&(>Kc,/IIGM]TkFDPK0I0dV2L>I[hFrW6Z*?aXGN'CSr9%TX<-=p?,Ej1"%[p_e;foVoiPqf]WOQj$'kYX.:^m7b?B6f
%V7osr!e(H1!QSA9Do&eZAp_>%4XY('E^j.t$rR+VGF9,V7o&XC"ogQMR:%.V:p=o^8`D>\[pW_,/Gbr\17DUlR*9T3'fT=un<"C4
%"%QQ6E6fHY^^SLdJHKCd3cN!kQ4uH#DEgc&/i_XLK5Wap+E/4Ngerf@P&LsL;U/&5d#B=YDlLT2=nj-TjIs*;:PeRI71(]CI%MD=
%qkAR5a-*+Q)rj#@<W20EWgl1l]C8=*9&EF&;q3^oLD&%l(T7-(H8aS"34,tH10+FV(ZACDA5mMP,b:N<8=M!!DX"(N)$*hVmDROt
%124A##[>99O8(aX-cFdbI!h)B[&j3_OfL:mIC^lfYbk%bnusS'P8sb4A3\>#;6qd;C)<!:k8>K+)(U%<i]?5,f80:j8)Et/O9d%H
%TbB`Y9b.X%A"&;tSa\@6_Cd+i"HPa@^9#857]_q:/l.`\2h<2q'^AdV?1."JI\T\*U&(SF]s,o5W'4["X:b+pWFkU0:n#qkb-8(k
%aJXCAarnh\,32O"A[]++?2$emUMobF$86B6rS&0(>Qr=XlaVgY5V>cul/*%L@m'*=WRpD2lLY;4XJ`)JY:Z]d*HcgrmM`]1k)Qm5
%g/uVBC3J1bg3R!;PdGOo`mgGW7(Ym'-nfKEqPG?+D4Kml*9;5PEfGB>H>VuUdqd:BCp/\WO7e2;qU,UCM`f3irZEYQqc?%if0C&?
%ck8(#q!B4Y*K'CVfTIWJqh56^gNYV'asG/oPJ21<85a$5VOC[kdOXe=^FRp@VHT;O<)YF(e_,Z=$V)t'cXCh4rq]hGZT,#ehljel
%m^68S?[+K\07,e<19^I8Qh\63`4IYInqGtb-![d/YO$FRgYLY6<u/QXb=G69>@Aa,CVk*i"1DC[eo"TFClP",\d[?ipf[3DK!ZS-
%q=lIq>l59X^ae]&2YTdk79JdFT0F0;nURBjA*jdgM[k"7%f$2B*W_G0<_fEDXL4;$H?j9YEO!_V!eX$L]n`9&>tsm)DPSV/2$qK;
%Y`W:"2=hYa=j2(2K;AQ*92/E'\K^B5<lk9r11i6u4/U[=LSOe!1D'L!'@Frn7+6$lj6DUl+#=Qn?mm3ZXZHbJ1DLoc(*,.H/IY+e
%8QJ<UKq>h3)ter\\[KWN*,REmk^'B&^^8-.Lt'X>c&f;LdMn="O%$r]1O76@[JTNcM^,4Q8W>hN0cUrpaa`3G61+<cj-)jp;h<t]
%VMCE]11n7=GR?B^lYps:d'[R,]rkd88/Ae7C9-sE&_eomfKAUBLY2s\k.'ZOl+RX=a7kOda-ucr,H4o4Y7;'\#DjS3m.a#EWf[Dm
%=LYD(^auM^Ude>d^B20;kbMh/#:@h^@OqQbD%B$2S%V.i'n%ELOa]JW5jtqlQrTVCI,^?B$#!O-_-=RrD9.Jl7m:6-d:5\\SM$ES
%hL)8d*fd&L_JaIh'5s:pM+^>hS&u?1Ph;UoHutq"*M6$i.(f!U7jtcs[Os5V+NfPMA5(DHFqg0c7m5(aO"uibr[CXDW!?8#*;rK8
%C?J>J#QE*jq!i$j"mZu_0u[uU;!+^t;:M9lg$1-P7g_F7K()QShk"+\]\.\1TT'>8-9MFnBDhC3Tg)Q5GfnoBgj+CM5!HINgu<C5
%qPQ[[-bY3-UI%2%r2\VOpUl6)+o'qBq@fi&]oTZ:rsul'GPsSZKc351TW&!m$rhAb4NF0+b[8OTIkbmAC>LQ*K/_nbImL7Shcocd
%mCQHlp+PZIYNaRRos0pp]r]glf@sWagY>c*5g3ThH_Tu'gp>+>MmqWDJTt_3S@tE?e-[oGgM;12_6@#:[[6ebC-6Crj7ZC.TLR%8
%6uF[P4mlYGCW_IHk-peD8M/&!>`H'krcTXEC=G*sZb??^h\hsO0]0g2?=nNOD+LYZN9[HpS)q^mqiu0(C?OTP0ti^\[jURTpl%CC
%DH^203ZD"?Zeh$"l7n\:B6L4Req]=?Ucueq+%N=p1",-NW]X4FB<(Mr<?@kaX.s:o4I@3l8%oa'4t[f$+tM+e9)hjZcl^a>4k.:H
%JD#"0_FM',S>G^89AsrX_WNJ(c_n/mICec*\,LGdrTDu4cRg1dnXNh`3Of!n`,fhpkJK]KbcUpCG/3:M"$XI?nG2I%cYj&96Apm^
%VLEQ!nUH9/TAL.RCrCS:gB"q]BmGl]:$ZpW@p4k/DX5i?-aQN^Z0u8,mnRff\nBYO1TI]q(%P?T-WV1b*6,Rb#FoN/X,+lXF1PLF
%C!Um66)@al2(WLI(RcBVQYJ5?4RdKi[BZAO-i4nVWm/3@;(Yd%KUDSGmlmq2l?Au]<Q1hl67pAOrrg`+g0ZpshJm.fA7$?PmB=j!
%pYp0<qCoIOT?4Xi;0'a_d4!]TdBZ#ZX:Piq&cFa:g(fE]8QH[=K/kqWXgWUbl^0,dB.?pR9a?K`F[VQ]Q0]Lr-hSJb@P\*4!Z_=W
%o(nB!_ObDeT0kLl:nBhDekk7K0_.:9NnGU'1e&mPckiQ30>8Ro!npP>Y(3OB1.<q`QV\=A&YUDWZ[3&=\il0Y*@NEXmq`M?f^duG
%`;f'=j(E&qYIbnUPI1+T&`q]%EM!i<'/8Q?XB(\VY"m<8AOu$+,4*i,Ep*p(e%-?E=]HgYW=5V&OX)YT&;nk,O\&A@&1QC]#0!if
%H-BqX1<T)HG0T4-T0m$D;'ag84M?3<a>%ic;,$)i\b.PL7%1*GFrggC^hBB3+=JAUhbq=[#F1XHKQo&\/c0SID<^)5-^J@I;)KPl
%cUb?\E`@,Tn`RS,e`+Jr$X9om?aI)LCMQn1]8%'*c%N.C,i;sSG*VK!Rd0(fa=68kdrk5kq2S\IY$nTI]%eO#LA=dJQIbh>B$7f1
%eeS>,Z`<l'Wie/?s)/Zi<e!==U%<3[ikq_s5K!0a((VHAr;:I]r+iu=nYa.^n[#rLnh[udo<7bocCY^c)Ton3:]g@r"Gsj3g:O.0
%#=.\C.f?L"n#7YUKBa%*iJaf\nfg(lQSi(*[\h4uI$Ro11OG.75#lk@''25T51`VV$^O#VWUUIp`CjLP]HtNYW?Lk[I]J]ebY'jj
%a@CUQFFG#[O%rGr2EKG4q4WP`>G=2V>7_GX@8Bjg/SC8]U$icpcAKdpn6NrggY)KnaL_Yidk7hTmksmr!oQjhDB0+;[nq;WLEC;l
%VIHN<33I3A(>hI=>BkN;,2[E#[6XP9%@#aB/u"sMVeU]sl5_]>efnR]VQAHBfU<a9eP+Kb0dE17,a#FH;H.ZrA^/FUH.#ACl]S)G
%Q:snB1FA*M+_diWOA9TBUL(em)65&N3RMY4?DT2-^"&A2RX%HJDl(TX-=$e@Xth*sQjWMk1W+K-Mo:Gq7m9bTj1TJ2V5i$:<P)D4
%R[N;/HfCSWEdk?sVE-_L\On+t1"7LEOZ>030^7kiUMCDmka@<YRS_U=$S<*WQA3au!k#s6(3[4"-_Yt8Ud1IJLR9Esqc7:i^#\[O
%8]s\HDr!'"a*p`C>@Wkb#L-_3Islp<-9GGsJgNWbDCUdB8'OQ3CQc%O^,L>KV7j,Jp_.Ge4-cpB\i0AQ-jY7HP8oC3I=/gQ47Z$X
%p\Yq5_1]o#[7StdSCL%&SmP1GYQ"pDT[m0HmE"V,X$MWOc:+SnSL2%*><Abt/P0d&$"M!/aR0RqR[=l\&go4(!*pjQqpY&@Ue)*+
%Gb;@R4LoJ,UdCF3R9FERUY?gFrg:Gqfn+96QS`Qbm1@Thn`#b8TSK>seIG5lQG5&Y?99di1B+\j.8Da]bWLI.ih2O5m<[]h<-MGZ
%I8K4E@4B;;=C3`rC1b+`1Z;%coA.,m\i];"gU3PpQHd^R4c[5C3neQ$jfn?_gi^/>Xda(.]"QMtb>-*gk\C+-a9VGj6'b?)Xmuam
%'TH-QQ?4[r3O/K\KQj@.7s+>c#Np%-/YsPLcc?9d,JmA)R?hOQ>>@`%B<&h;qZmNQWO3_hCI,@QE1G/CgrT+Wo_BLLOZ[7TA*LEi
%ZhH$77--jo\PZcuhe5n\_0*tNb1"M(KMD^%rYq2eUg2-E3&-cHYJ'KXO<*@cQDU_QY9l1EG!npMY)/?9EtcLJpA=g*A^HqOc#(fI
%#O?',H_[Y"FLINN*I+8Y98;7EGAZc$YtKU!/d7ulZRi#dcF%'*"`l?(>[#0RZKqMJ/%Z[4Q!AGhS9-3_9p3h&P5!Mk?uCaJQe'kg
%>17r(7pk*=kj(tqbgYq2CR<+gFm)hd][HdnLL0AhX6&/Pa'IYqR-IQ#1s<YaNk)HsYBtY$o;\7d+8bE)ojDR!kBeZ7Z?!5"c?/8g
%R?%<(mO-^]lWe5eM%6JP$]<O6:o:YZ,>P37h,#AD0$eX=,O1@@lB!f:jc6'X^\;j%J[8X'[oDg`Widf1DS;C23N*FXp6qQFR]<-_
%AQ7^M(2ORe+,i>ab>>MOX;%,3Lm&urNht\_bqhXK\r%=t*-"<@7N.%aXWU,$$o!<m>l!;lg*]mIUA<jl^V@Fnpq+f=lKnFU@5jU&
%kB;?$7\u/L(0C4Eqd1rGd#$:*.4]&\RjVcakud-;P\[7!Hc[u-998H,EBAVrgg4?'A6Q7im)H$=JER;'#GPo+Go^)*2pn#:gE7Dt
%"ed3mLF1E!+jk9"cc#[`BKW2olQk&&G-'Y)fEq2=':Kp)1PI\(kV82e9_QEn4bo>>&U[5nECWqCM2L_8dTRF&*DtbDkAYt7E.ET"
%!7*XpN"aMsnVe,'_hl.ZHa)s7C\!iTPQ^gYG;jI?E-qESmdfah044GD;ub%!07NYUIgbi%+3s<B/oKR0BXReG+)W_i?W*<dOKA;^
%)t/iNr%F'+5P4Tc$hRK4J&CE@I[&^hGImer"T?LjDLT4no=k^'2dGdC^;TKBWU'DG)h!^L[JB5@(O80Ib?s.IZX5oWrVNLpoZ:-"
%qWNr3gAHY>a2&h;S`-c7^*]#,K0P65Qo5B6L[s7]2aCa!j9-+-9$uAQ@ec6ZC<"5P<@QUij#\l+O(&C(Bsh+L\_qi#F.5Gob)Q.D
%Y$GB,=FjMJQE2+h2S'A?)ZOVkpjZ>FQ(E2es49:OL3\R/b-nn4JN=@C'PDjQ.3I]#DKsXmc5sq9RFe.uF))>8DKpD3n^,jSX3Ck+
%:!Bi11p+1L%=bcc[T[PH)fF<W(rGsJ<pSeYgC6+:X0$L2G4"t&doP/%//Ep-CnYJd?-L0%L:@mtX*&C<kCt$UI$jZ=TjOj9*GD"N
%=pnl+R31SIm]^)(G.UJMeS:pr\(c4J[q4fGXa,V4j6t?;>g8bcNd5R*FC=GhKZc1\Z)9=0s(A`Cl$9`WL@A8Kmb7'^lW'jbc]rn%
%f47V`qN3CB@5^L.$*2T;3:Cq+&1KfeqqSV]f:0#m+?eC\i9QmON#dX(p6\"FXanr:IB;9(du+n$[)AN#cQ6]3];lGYS$1,O\[jc8
%]".\ZluraKIcfn0:M%1Pi**[b(C&%Le_<CX#.kK@qYLNNle*HT8ulDsb1<FQ-[0e2j0s8n,n:I'1tKn-P20=`6IiHn=u"njOM9P=
%/6,mmXJK@QQWC^maQ*,`g[s'Rb_t%nhrNhF@t/ZMoASH)ZgTMs);R4m<!aMV8*/3]!Y&DX%CO*%j7_c?e(Lsp),aiHS7Hrt2!XZ`
%n/274.$F!c'n5NBlj<'Q>u+YuA2U)lJe)<q<#[&')<I".''\_Fdsd9rC(Je^qOj4:ar('ICOLH.h0$Pn,9H%c+c`ECZ'j(;U1V]5
%IjCt9_,3.BVqM7O)NTcNc;-qO_0Q#n**ode6rHS)&V?`"8#$KDLt%P_M_F%&/>:3SJ<V:gqbR]U^"%>qNeWArSHrF(N(5uDGTjo5
%r'p:>;lg]6,I/>E6IbQSq&ulSk+a(4i=P^_Yj&(pSsJ-Y?tjl/mkN1pApoKOb0c;khTuN`\AnFsd9tBLFeT9[#o-pBNZdt1ol[&7
%U:5S+/3C+ta.o/W>CB4&Gse-/JPAXp1u+(m-%-;AN:f9kbFSm!6?JFfBD>uoXZZ-OJQ1=V?N&_FZN@OAZl$,ug@s:I.Stohdud9P
%XM=KcBL&%uC1O+l]`-b>Peh/jWOInPm.L)o+Y$<N`b-J80s/19n?)fr2<c@^33L!h\8=Lc!1jH$Y\NjEha/'VRuA9-6V=EJr?aCh
%DIZm`h;e4Z$!&m7ck2Pb3tPCFA7Pc#Zo<T``sAsdjYun=#\f.&98MpaA^PF@-ti_-jd:sJBrk\=?5ou/'9Zh%Gi8IX_AH,4OIhmJ
%U##;:C`t9)(5i_Pa"aa2no?7@(f5/q"//tnrOr'a,?=t'p2Qdhiqe"__%ihL*YZf@PZQaT>GVCD5=HppC&Pa&PQn3'L)?a/VtKd%
%aYBI:#[M!d+o9_;:7;Gm;WD0YSVfr+M#IQl\klHT>%7B#o20\\DkW'noS=7.GYcP>S[\MlN>'$0,m+df+$@P"J-R^AdSRt]BAS.a
%Ge8bT_?h+.qE&C5DU@QG+PmH(d"f`0ZMYW`OWQ*E2dda/T3,/=8s6MfIJ4E&ZHBN_8GH2jN*l]?>^e&J$q@!#8:j2MBo=?7F9*A,
%q)skUPdOBm\te2_AX]n;ZWhi2KEsTgfk+>GR``.F<K=@rm&SR(8gQYi!kl2@bM1;8mS;T@ZgYh3\_BA9%lWsW_Pjk`?,$r%H*)L%
%I<.H4e:3nP/B]gVpW0#hLmQ,^IOX0R=^k.=7%llpJBa2K%,C@=O%3.B;'EKNP\Yo'%a[hIcU<=C>/pkb:2WJPd7<G>V5r-hn[pT7
%"32(T3^WU4KgRtC^0+V?Tb]!qZ_5R)M"X\GC)hr?@_<rEEJfm.nZBI5`mcmOMG$PbohEUC!>V:AL#e.+eL(YoH_GRp^$J74s7$mC
%?5V%qCh'6DZtkNg0_[iJ27P6_,&L7">H+r&ZTF.dZJW1p[B<5$p.afRKN<c\e@HeDeY`0!A0?=V6dS-$eb\!\nG]aR\q#?Y(<u-<
%h`VS@YlHLVJVZ$7Y"\'*cnMG4.JYjc8/\;^RUJ2?4E5_U-KCQ%gX*)ePsO+KXkEBV)s0M""-I]k&nX7DJ9X<m(HiHI2>!Ohe_3IX
%`e>8HO0`S-m?b5ir&mVU<m?]ZU/r+J&&Spg(9`/P`aT:ILhPgRgFK#gnlsmk!FtNlFn_G;SJ[`$9LEEc9"'#.>MCnYScs\d[^USZ
%X\OY#-WWh*E)S8^XjsDWK?>DdRCTJ,f@OoUrSaj'IKHChdQcC+FbA$F:Z,j#HVY<23@+-j@(TLbK)$F9EC[,8J'eHNU4N>k05JG4
%'"`"f8blgGaNkN]p.jr!qRS#E[/4)c?>MG`abDh@`b8=@+LGQbje-OE#9r[oS_Qel1-N:k0BoF9Tk'p]!W`jLpHfOi(9aYoff!2c
%T):3hZ+>?jB69B[9@@6L3m-n,<4g'ol@N+"VdCIdW.I/b()F51l[j!M`CLG#\@$j/TiTdK.Y6-R&CQqI8DV'hD*50ke>I'_l`+!h
%4b!h%&8k4+=;dl#1.cnF`@hk@A^OW7$cTiY+bnNdJW."jBMF@p^apd.1KloFd9IRtc&J[J$>NHTo]CJ+DY=5+YY5^_n0q?<jVsJV
%=;/lle?(_#<9gr6h7_KsDQdeDg]bT/+R_Q.]G;!_P1j+'&5OCG+RP$8XdshH+*9fR_MF0QW:2bN//Km`d2gSN%5mN@'GAKg?Iu39
%OM;G06t9CP[PhW2e".s12ll/.c-C.GU<]7qR#-gVN[s/$Y$[$^?tr6,KMKTF4&fN>6rHa2!4Z4Koo.)!0ZiH#2)&bq^.o4ummV]5
%_KjEtFesIn.th`CCs,5B7-S:4anBkV.`bW7C\445qi!sZ\)sE-"m,)p-du8bg\3%I<tMXZiq_ie"ECf!7u)D+bX/mK^KVMVrbN9E
%6.@kG&6/agE3LQD7#c2;WO-Mg<1R"udh5f]*pKb@lrriHeK1eVc`8[&IN6'k5=\iOXp>=#XJ+u;a&s<e6eY@O-/:D3_`("QX5L+^
%Nm8L,b2]lrf=.Z]*cqHJ><S^6TNjO5Sq!(UQM]@p#q5F'6e?4bG/O_#3ajmOhm2R;egF[QH0o2'O-&,=8o0tiD1aQp@4nkq.^F10
%>?M5JeAmumVQ,>,k8F`97gV_4@<MHB5+PE4-'suT$")qBgYJh\h57C)g2$V;kIpBjf@oPl!qn=U(sFJ@7B6sio[:)<dW+n9A*>Fl
%mWs%?=J_]HhSJulS$DN!-VllM0-).DNie^:e8kficKC(1,UOe8-(,Nh<!,o"-B]*pJ>8!EOefjF0k&5O!qj1I.RSa[B8&li/n<Lh
%IFfiHH!Gn[]XFf!'YO.MH]ih:8nC>h'P_->7M]L6POWmug)kdV4hJFU_r5e3?<l$Ekd@$&A_6a#\ZOJ\<j'/#jPR'X0=5pooSrm[
%J+ksH\U!GW@,B&5\XIa'W[iGHcm^J+NB))&irAN@?WCL6mpl;AqPAOLrs\Q@HPl\d&0I3UE\>nMO+7"bLE=g'UOPP!Gf#%PLC)t`
%nNt'$rRVS>@l&:Ip7@"[?XCCur:04Knf>a`FPjlc*W*@q-Y&](TtH*5WG_Y%Q3t9BA_1pl%k2IQK/lF3jUBen8h1!]H#ioZd,]RH
%f^($$m;>/$s1Yr7bMQV'AY\.=g&)0X^=:aF0BR[G4FJu10?Zo=NO-/4"+;-dd82/;T[sRu&E+(?$Km9O5Z7.>$hWKRbA_%N*>KjQ
%D[<[-jmbaqU79L:6kl*MAJ\g=MQ`AciGp!P_HZVS'KBi^!m@=nja!n4dCp:[4qmkK(Op`cD1;;]bs20eM_G)%JsV@\GJ6n7>!QFY
%D#m:)7n>(\mV4GFbiRK0?8p55jBG^U!2usni)6:A,W,m.Lc^WraQ#o?:,S"nMh,N'@"m7H$_tr@k_O9]3!s"<+DffV#RNW15O:i?
%a5A_qNYt+a$65^!&TH0+3,,cgD."PBQ2UoV>XAPQ5^X9>FPNoG#4u:K2Eo-V6V))ed_\Q)/e6<K,_][Ddg0BBEWh>_Dhr:0BA.*[
%KM8.:dRPAcOU,(Kd0RjFJRtdq&Fq*^ELO8t@jZI`-PV<i[n%lT8'Ti\,^)W@3"7YDk)X2B'Q&BoMp=+90Z&s.q/Ah`nURN'L_q"3
%+G<.S:e2R$>EG,-6/YN#R9$\>fb`@^=akOTngqDpg$Aem>`jjdp(KqJ*+JQKj':6\EK2A[(isI9ph6]`-7]JM[r`c@^H%+$kP&BH
%'fPFF(Rhf>\@'9.7(Rln$`$MaR13j:QqJ?!=IUG\%r%'3..!Lo@kHL05)_#!,rc3tBo]XOiA`h^7pEidTnnbUL:.4t7p_7b[%;!%
%`eq6)L.L=66=+ta)(.@5hF),sV`F/X/B6)@EL0W*+8d+&Z^7rBO>jcr*+3+u0?AL/j),bq!,RD$$'P"D<iAYSbJd1sgr3"h0$J:$
%-D=hF/o_]s*6K7F0k5oMVSh5CTT57;\4^cW_Dk%l@%Br[K:'0e?%]>#2a`MtEJ;"1;@mm#iGPfZCoEg04a^KJg^J>;KK8<1d,eu1
%UFo_%7WpiBc+Jd>Nk1$B&;&RhQXJK<T[!se#sJ]MBp_Q:9OfLdF6Ojc<6>PhWM^o(Bo]_,/>Q_#;3ueHS.nWGc%W*ni-n&L6?6K@
%H%EQU&]rd9Kt:ELF,%:e9+]DXH0M:bm]]#aoYqDQNkAKb^jYF.Qfc,F2MW=D&j3si5=8`Y3a\aEnkugC&Anj#Yr\Z+F6#b3ZCa#[
%EH-iK#%(kYdEp2Sp.e*M3p\HcR14QNaNSX\^;Z"T2FCgcG2kPPhr6\?hk;^>8N:\toURJjD"robVED$.[g^,mHM"$;c-!L5IAmWQ
%nZ:*H+Smp]3Vq0k67c].^'*L&i?e=9&t&SN/^S\SVqhc0Bej0R]%<W/c4r=4HOYB2Tthe8Z_9%S;926*47oA`dA!KAqU06^2U'OW
%^iW\U(&A!'Rtr3NMb,FqbgDc-0a5$Qhh"\AqD^q$15MXj+>PRsfAHn\G9guAg^8IDAsDk/kW?4c2Y8;'nA_gsoGn1FJBb<b?p9o>
%a'Q,V\UKUQ1uF>H?AH5d>U,g\p5W,C&GhF*F+i%CoVKt1O@)CmM8[(A<p32iMSohakW97eT/T-p&b0T_pN5UlO(;JH%"1X7\&-eE
%U$oK,GgVZ?(IH#1&p$s>;DFLZ595i0$-]Z61W77I#O`Ib4%TS@$?75t%"<c;=Iu$!Lc_kQF+q*1/7f.r]L@4J?O.*qKe'f9psi0j
%:c1W,B<a&8e;o^s=LI](Je'%X[.6)qC^W5M]Y2;UTp?`CO+04q,3M2CF>q##<JkFq*c,5!J"YW;;OLAC6MR371SPVDVnu</0NXtS
%<aJ5S&Q,m;Ld9,DH>a6Di3*T-RRLWm\\NHP=AU=21+P%>mkuZ.&"tknJCfOhBRltXEDc23_rEFB];lP4JK&Q]kn+iB7#h<4G[N7j
%kjL'$LfCj+mT)KMF2oHICge38;2b[]qD-`=MW1oAdLtj_d2UJs&:l7A*P2Ub&'lZY]X9".3CZA>V]T0q_ArR/escj\KeL"'C^lfB
%$b^VV_FWDSJnfGj)lPZMUilg&mjuB,mkcaF`*"TRW4$.E#NKRS<-1a)Qo?P"'IC=CebNC#CV+Da@%(rp!s6n)=akun<Y`D;89#2I
%Oc?b-_(="$(]g0O?qffk,R1QZ:f0/di`o3IC9uLH9umE9Ofb7aCBK^Gf$AJ1<hc?&q^'e>ehD3;nM8aM:Pjoj:UkV@1u[8Z+c]%H
%oi'8g<G?K1(mpLa%[@L9o>$l@L@blnqrh^f`$9jERi#8ldkmP]!Edu_-#p416N@!=\F$L_[O[O"aZq>@C`h_[qNO.a)gTk[>c-4E
%i;#p"2tu8Sno0t^N$P%*/1n@S]=>,22"k3Z_mO:0,?8AHhoJRTjWdbX"J]1)*@aOIEpM?Zrjo8[&60o-Gqb,Ci&PF\n\q?LE]#@R
%n>=RFAeT1YQI&<#s$^oH\MtI-X9Vj10+i:I+p(P?Oe>QaQ\6X&Ylk4WhRO2tSIpN$['"(cU)LtMXofNH(K"u]3n(pV3GY;>MeQ.<
%`GjkeJ"KH`&l`)/A^J]c<TWD/@()#Z:m9O1QP1bJ"+[%4Rc7q13`5a!&GmT)I@BN1kr_%;Q$])HKmAjI7>QsZGkLaF:(fYXlT*V8
%Jf/&CEn\Zan?/1g&,CZF6Q0JSNtTiZD/`DNeMJ@Qiot#i3A2?l&ju2Y+/CUT!5uMVc>I`$FpU-nUqhYVJ6LSO(;<*LT=[3<H3#@U
%onZsIi<1dP6?HU,T=7Do@:l5N+]$PE[BPk46JT6t-LM)%1,2\QqTLj/F'aqd`;>P?hj@o(PnYfDH;%f,"C;3Yl4=AmUKP>Ds/BR$
%>9AHCbrD.nJ46n/_I<UaGqE9o#^RAG$R-TL@*g.5[;_S%Zf.]a&t+c1,Z7Dn6[A710G0.u25:.3JIPlbNl$I$P67C[GS8aU_$:;G
%(LV3`)^::f9X]Hh,!pI)HR(@fb:jO*dNe#fVFW%R(?,I/@)p(hS)D(ti^s'!),^ih3A&)'i1T]mK6pJoW8$I<@=oJnQ^=J<[1*9e
%#oj]taf8Ko;^Q+ZAYC3MO;qXL(LE:Gq_o?MV:(6YFP8<]CDM[DQd<^78n][U,AcT[=c5TY%aqCT9+in3%=hm6\?.0rUrFN5;^Ro_
%9XDh*/7=PAZn-(YN2Q2k#9?c0J3*i>gWNQC$h6%;Z=Qj&OA'<X3K?G!RM:Ld_31n-!>sl*-TD0?KJkp6JIl--oCgFZCf@9\:`b0I
%UM5gH(hms,.+H/R\e?k6X$O49.7;OO:a$)&`JE$k_UQo)+pp!qCaQ*34:\31g%4eZ(nDSHBt;.lJ^^D+Cigkk\Ep`G->"&bDhDC?
%=e.DoGBo(_fBL]$[f?i0AVRjn,*7m>ZcNmr0N(CK]@Casr*WDj&e,A,=^mN1KG0'K+bEj&X?B<Ll8kg_"n>Jg<p./>,,_BLDAil`
%#<-d=X_$bEP;l9VkZ=:[Ci:n3J-G)A3c0=<k4?gWUf.j/K;e8R@ouJp8"L*KR0e\W:b>hjgat;_-Z@jNm#iGaFE3#-c_UC@jJ`hN
%`.0m^)[Wr;U7@SnfRTCk!hqF06m6S^KqmQ9T4nu7A7A,tpg#.j]rbI;[PO?Q(Vi>H*0g-Gn19rc"3-Q?++gJ:JMFU-D\u!1O:e<8
%f"Dr_c\!i/;+AX!;4^X\8gk%WUO2.0.CEI@3E&PNZ74JfK'Lg2.f!t0R72G<eAg/tN^VN]RlnQJ]ch2%$7S2q$$Zl?l'U*h$H-(q
%%:)8%aeYZ(G9W.l7R.Y8;"Gi4^Z/_!LBOd+JIj%r)NP6l((c8X930@`nNnZe9""eEe?ZA4Kd"Z>pMh1k?lOWm,8ZqZdP4'#i)n<?
%.@R!>N-_5Zchbij$`>7C5b2@2*8oZfIhdahC/J/]dYN%RS5>jY.Q==WZ*Fkco#@J-,`(EQGUdA4Pp>7@rl"(\c5=HT4pUYq['EFb
%')_667e*=0;"28;)E_4V2B4;W4;fM_MUr[Rm^JL9XMprjSUW_FEC_,UZF-o/QHUZ-rWaR_2hZG6DQ:BHq+0T(OOX9S#6UAnZ(.b(
%Q(;nJ85:->mlckB0>6LA#m+),%83RNiDg*f_$X@(:DTra6H?':V`]tpc/'1AHt)$0H`C-gXP4*&c2_Qo=rYKDUV4>*"C[d$[tTU.
%72jaBY#@1.kR)Gc!D!ls99$$u=r8W;Q-<%So*-:l(d&uP/QP3tTF4O6R:IcKJoIVc",j8(LrJK#'LS-B>SNfg`l?XF].aUe8m6<T
%K9@#()n@iL:.JV;j9OKlJ[AEm_h>>KCIeZ8?>G%#?str:01?hK\We+mB`b&(UJ>9!;/=i?R;:U!J"$WJWj#dY%O\LqdIK(8IEBbP
%(@'CSRqp3'R:H$pRZ6Z>V"PWn;4\q8Rl+%';7O&%N6A/iBg`6;(<4`@VgC'kU4VFL>7r)FpP0G(7QIBaE#,VWUlCn3R3K.QR-OGP
%H&Dfg1`G?X1IBd5f5;"+bQm/ApFTkE>m_TiCK\`gN:ONjM&e]IN)drROfHjnTYn"e$pn_FZJ_`'P6qsRQr\:UO_@8;'VjCBfO:Ut
%;2<u0omhu^l2[6@*'Or,$!qi?W/bNm\oH)Q'/k;Q@9R&9)Mr7mil)R&"N1V`NY7VPKcP"/]%'ppOVZH<%deoPs0d;]p_`O-ZU5A0
%B[d>3.\tKR).$Q&E:]ujF\.\MG9`,u_0:5eW)%Nh/A<4R7\<_N#mPN"f]EG"Mdg'.P?Of"S4C^1=?-4c`'?C7#Bgt%:W=M8s/Q<M
%L0Md+;n-?,E%.)6JgQgL^/YNK(05nZBr7ifP<FIell=Stl/Kb/lCH1?2IHa]TU4\<SUXoC+OI,59[s2ECFHrBYpMJ6(82Sp:k#iC
%E<,dN9LY^t1`Ek!+"q1%9JNk:4@t4%aEsGV8L.Tq1I7P51O.@;:P#uu&4mU-$sCHLI=ct?iYPt:g>:[,?_6.\hRl"`rGhFE"IB)Y
%-!UQIqpjgD6Km<U\,#-'[lltUE;enCh&-S"C@cWtqL@OTQjPuki5E1cpkq1@MBir#5L`6UH52#7f.BLPN*'2?.p9C(Cd4HGBSm"4
%JU?V&H8;StcTLE[WK.]Y'KJeFjnQN[K(/*BJkK_a9'QU"7M1-990A\s_kT9Frb!:S*@g"]Gi7MC^M@Kf9"NE=1]\P`>$e*VV%=`?
%`jcrMI/F5iZY9.jO79FOq5"uN"qCRHDON>.G(UqbbZccjW!3I/G\%Z:kb:KSQ==?n[JFssTa<cGR.uoj>ao0PE?Gash-_%(4h/Li
%2*9I[B--J2:/r??K^6T$`)0LEfCsC_okJHLmm5bUgpZY:_t7_IgkbY:DFD5)#Y-fL[-I8($2CUc%+/D=1EE\!L@euh#i-h[)[%LP
%X+tZa+GLnQq6OPe/.UqmLI>uapdA6j2AeG]"M]8F*%3^r#3pf3i,:muj6K/$qqt`nDss1.!pV_(rm<^BEmbQZn1$Yf3$J5ZMVJ=j
%FP-NQKrh0JB=L=F[nWrCd,:'grGUUYI^\ZKP_G<k4-j2<?IeP.*@$@F=n]7T9Aip.f4N5X)JL_[X!O-4?^J*m2$1k=p]-g4"!@QR
%>0b&Ln?/>.2FX7P&)pBB%SRLehedqgLMeW5*$p47I^h9*HJRjR>C`O@0ouV6pas:M`Vo&ik+.L+IFcab2OZMulNMZ"#ag^m/U8uh
%7clD,-fZ7mpY9[Of8TX"+4fe+PdC.JUr=FC(H?jjgL"YON>VM+('?"q7M75k.,+\6aP$43.uUCr&gbbZF&6K!br?&'J`7tG2U`3h
%n//UWaXMk^Mg<QaS_,9J+Q,!M3O%ujl+Qb?*In?rS(1:i1'ADNW<2e[d9IWS*,#=koVlpt%>]0OLs-7=UD2e=a4Qoq4cm?a[0;33
%Lds1d'%!U$G*;W!m6_;U")84]&RI<,.NG=[F5o+d&3s@8gN`&\W27'U$r`42g4sYRAIarMX?GK8^'<+X`Bal8:ckar@X#a6!taj'
%?f?B)+P@%5Z\'0A&gtffq$a>L0K@;>UU?bl<]FM2=R1j(@h1]2?(5=rMo#M2!WmF3#@T<FTq5q*YC4fn'!,ubPUHbu"iJLN%-D9_
%96[O1_=2B"0._0"'V6*<)Dl&V:]"*n`?LWq5;,&g65JO1=kj%FW%][IZ;\uU6E)>q\p]M,8"UU5q%E<=O5[:/E+Ip#7Od'e(etT*
%?UTi8k750L)rkXO/d32bL,frm']cc5#>B_l[=nfD>j@d&1uuLLO<ncKY$u@U3^5p3SN&akVo`V37%M4s4DEkN-)3n#ebMAhp$-U]
%q*,1b(ThsjonM._Y@:Bb^C7sOBJDgsfI4s/NZo#P8V04JfH43BRNXC6,@!`*Y<g?$[bh]oNukTV=`DT8g&U>m*33e-Z!HEY7Fs)G
%O(cAbYT*ZZR5Y7p)`0n0gFg=PjPVZ'i>a2>^_U2/_jM9H)*A%Y;,#MMaC4:(T;EH[SK)`hEoTr,YQH6tNiYm@-4#:OT<SRCF[4?"
%leE>E1UB]CP90CbjERXdIu:rFC'Qj@<m/>l6)`KcHR8o`Hr>SSViO$N.I_Xm8)_m4$615+!=g$3fmlHua4U($i6b;^Q=0,N>KZak
%bh'=ZHTBQuK93=4G!^ui0pL#c[=p"PBnBe;fND,@MtTfiFj+6A(\jeN=S*E-k+`",TSKSA#\V'G<6poV$L8R"5%Q&,)#0eeF>I<Z
%+en\(_7^&?:pZ<2)UbB,7=\gaal,#ZC('N%%XCo2S)5+.=r:*Ib]2oO0R0\^?Fh;(4/0uq*'CEWBOK\_YNl<eITgR>A7;;Z*-O5J
%4dJO@=:[*,-Xs?_3pCZ3Mc&s;0@<!Cop`P;c7"Q\=1F(J;>Oi)=[`C>)D+*:9O^4F.=[!X;`MkAoW<I?1Z7#`0)Z%_YlN*F]'(#i
%2$d)0LrScBj6qW05('eaH+XofI3?PV*uZY<8.Af7;Quf;@*E`uTC)sY-S[Fdmf8.H3'R8SR[s?6[;2COdS0.,C/$h>9S(lbcn9:d
%?Cg_*V:?2_Z5n6&*$ga<ld[f[!HV=+1O_HrB5k<5=MkiBHJ@AaOkjZ^kht1?l[.@chiI]n^f+'`Q=]H!UNfJM)*V$R^ij]Z9L"P[
%=$XigfH<#,B[YN,2#fRkq!#f#e;RU-2/d2@V(N]#'ZB.@-t4[@(Hb_K;9R?t#:g9sDk'fdD7*PN"ps4>4B\ECiTu[<.n:FM]lpQ]
%`74=RP`'+t:a$DD%&HEeX%d1a4"^cm2"<"d+A4oHlic7kUY9TP0bMj.3@9TiX49(X']YW/HPYG;W],T/A''p:%%QhC]j[94%Wf"]
%Alq=2ERDVb3*=fm++G)27[G6nYR="5-Kk1*97po(!U+H*atP)&(faJ_0a94fQ@bq].FY6YamH_gd^W%5f$I1C)42#5o2lLAN<d9U
%7!L<Hb3ja>_ArFW3T#=7Ir!ADp&?\PZ6`iiU'CWKf`X2cIjV0&K@(t<o?ql[Joj)e?I7S^<;".e29"-Ob$&ZKgRet,jY4`m<;WB&
%#6^&2X<@])<&lMTnr+Ji??:.HUhI9,fgta)kk?!7W:=Zd->[Ja,^`Q08-Vl+A-UL3gQ?_:!@".Tc%H<B5H=t6lBece[;aVUfZ@?@
%LPnUHeJ%&cF>90qePCA,ekVW/d)YK\JtA&.[Z>!7qKm6O2c"1$N9mWdObcQEI#b5hakuF.p'[(jiH,AVUq%""-[WBFh+)DMZk5&R
%8_c@MYFI^\0C$*2iHlF:XS^U=+:\hOd"L19HO$JFd$ib!IYS^9&6@SE6&2]3+BmWS_ZpeQi79kIjnGq(Tp8k9qu/9d\S@AGqtn3>
%ArZS#]teEHqAH5Iq/knZ0&(9S?@Y#%QfSi+<\H)%qr*MIp9"&Ln0+X.D^^F.oQp>k,i6o0;so9B40+B"ppVnal#rQVa/VQ<_<=X8
%AoZCnlSUe<Sl%/Ej:iCs(7u_iCeN3Y-q>@:)j?HoeDdnS`5U^?McqXFRUQlM*@sicB=C=:[(<$D_?FXne/L6E^s`</c7daJN")@0
%RjH,%7sQ*%-1sqSDELS)1gUYkXb@cXMk$R`c:+3sHB?/jX@,0c$EWila*IR!*k=bjQ/^d?=$U)Lg;5h*.[hro&qFE]2@;*O(hQ#k
%`mtnbA=_\F>7e&G&sWX#/%M5I4t,pUd%S95.4(T(Lmi%1?\k\BRKiB\jOg.nG1j&+a)$^N&o9QRY7ijb!k!`uaBr;!W#d6m9CaSU
%@r-"U\Y!-0#9mh3BfnGKYL>[o;[9@U:h&1GD7`,)XMBrm]Sh%DeJY@Uf5#W&`5N(VpD/jS]q(]2j8]ts"-Qg:'q,1G(Fo:@mJ/@U
%-.lr=SGEEu4Gee::\/<`*ou[g!0`rP"1(?W?QC-`60<kGZ'<'XRVfiC(OC&fDU]fAIU(:+$S3VJkjdd1KQ2mmjjZ1r^HU$XN@`X.
%icn+&/2He6bg8b.lKk+;:9I@?Y&(NT>!521i#I)jGXZbr$FYfWVFVI7ZIhIbCfL#C0rArq0l_g!\SepbKgCC#^+]irGq9?Wcia.O
%:3NqNV`HD&>XtEL8S<*Jeq#@-96Qo*Vi\"cF)p!P/+$&r1iu\8S?MQMD#nmG_P6O%AZj$%3oGt!i;B$I&K;7$oaF1-XZGC![<:uY
%#BB[Df]aO=R#]'8V\OO^l3q6$2VCs`SnZZ,NMBj%ppMP2EM.1--9(S$IO3\p<;>c***1_.8-Y\Dj'H9N.r?m*D+oh`P6FUH'+6dc
%1p\QVmME*(F*Mk9f<?]Hb(e+4d%jF1-MV6f,OtljqCrj6<Cm8TD+Zr*W0B+h_.mdQK:KNi?CYs*B"cR+<?I_OGjY?c<$9Y!>ST/h
%Jdu$uX#8R)CD.-Q(%@AcI(i^Ba*#SZJ;OI+HfS)u,Bg=3A*Tqnb5.9kUmj6%Vm,r=Rl,H1h2k[DL@]1hRS=^tnHV:N[150c[Mdl_
%XYnh0NH;,q]U1VL<<KAWZsceRA_OM6^tH*2,9?]0eeVZLP^&KD\o%2IUYEYc\uj97:(CXpkQ8$qHAgB1$3H'W##"VT(c=<=<uB.g
%1Dr+qecBCtYCee)LbrASZll0c9Ii`TN9E0=,LFLlVnlDnPTtV7'\7AuAnQq*!P6-b,o\q6!BZ1Z5mqSUViZ=&1(8:FD$K@:*tU""
%"fI$oE1@4jo.J6(n-j3iRWB*r1?[tJ<fP`!KRf1:\oCU">EY@K[MZ[pO-bG(N%%afY(`FB(R`B(1LMR=Fmp_<EU9o:aCFFdA=f1s
%AD!0iA@fWp;`$3>!B8,fGX%C/&'e_));G?i7)qtJFIQs$YccBUUtAO#?d(pp[Y:2agr$#'\jDn%NSJ-/DlaVs7m4Q7M=<<q\tHQL
%E=c;lQ)[7tMP[j@%cBsMk^d$#k?o;MJ>PZ`=^YW;[b?rHSd.2UPlOJj3n"jR%cgXE>77;m.Jufr]tU<k!MJ`M'mC#Ane':Wd/]MT
%$[p\R7r*JDm=@F'cf)Gi\5gM1\qRX%ad;+</,Y";L$B)>-8TDk(dQ9/g$a1p30/]!'X#kW,:.D=gF[r:__a;2nDfZH<cV5#"3%LM
%@a*e'.+.DBLRo+'qp:Pa3F$8Uc\'0o<h`o4hmI@1PRMuND"cW';gMitIgWs$`9=k<We,UKBl9U/?p4PU^m.uq8IOR]>a9Xc&IgN3
%N.IG%g_IgJ?->4flo\(dk^"tVh[<FrkVo[O(NW]n!,_?#&q:Fq1(HN#Q8k(_qB]s0'CSF_U>'307P8=V?W@r4".SB&_d/<neuZuG
%JD#8fHI7k%.krYNcK&u%kG(VE*>tCSr<LDZ-,9Tk\hD`BmB]6XE+Y4NYZ17R5T%IsN(@MCb),0qeZWaXfg.T'$^%"H3.OAnN0in)
%R@FSi(?1@9;t5jRkIScZZ0EKBF$pP(=sJK%ib!1&L%QQBM`B3WFrY!5(!`MU0A5G!.MKp8Z;Us)r6Rln=e;*]Wu2DFd9.[0Tjld_
%X\>U-P-D6d0=<pOBcP00f"&V"f#48LX_AX>W'RC.H-A.^10cZ!K+EQFd8Mh)mhXPpS?TIRA(+8=@HK1+G*!pq$r=iH$Fc=Rh\6n;
%&P+CGZC>(s>fj>n%Pl9ERqbM^gl\18!1)ro@UP*boecrm9ZV0[Bjm[dT\??$\B&>1W0I2R#U#sHHf9oY(T4<+H7krU/&dU/9nMN\
%8Q?Q-D]DZhKETZ]'138V+fXtV7]_rH=A0[T'$Vm8KO!&JU^rTh,D.9ol5%B\SijpD(@H$"*/,n7'Wjl=\C1rO>I4A=8l;?'&^U_q
%PDk]rn/5am+FAtbPnrFX1a&S$.pf=Zm6r9F?I0]E-Oec;00,S\"^I$Ei&ij"&JDe<DA(/=2V?cG!":k<q67(5!_,aU#O6j#H*r?*
%Q!r[a<g^4'#kdddZEtm`q;XU^+;BEd!MS7c6%Wc\+\q;ZA[u!A+\<e<?<pOf6R?HnltDg$Q%LHn./D)e\GB%nh#pkCklS]gV)#<Q
%j@ApKd0+d@.O3"W[KD>"rArT#(qg'7(kR$[#Dsj+N^L4LimbIoP6-Et@\gkQ%)PgtG>jV_UQ"c<3Mg)9.CKcjY6%]eBiORg'jWYC
%f?'ICSD/Bt7\`U4^;7#98G3N3jW"HeHsA,,ALiThKD*H\auKgDjD?Y6PAlP6/Y)/b3ne-FLVYP[7nLF@lmq*E.EdX,HcApENG5VU
%"-%Ad>k;2Xc;?j##G5Y!UN#Y@EE[CC!jZ,1B$*+6SBRk3N!&[J\2Rn;Kk%^<.]nXs)Xqq,Gmk&/@tleZ;>=P#Tp3tQ/-L0oE=U2Y
%H_jKt*/1^F:ZICTaOC]@c;B\B=]20B3!\B3<hngt!9P2+VXNN]47kA#>0f2GD8aQK3/8VYRW/hMQGu\/cJCh(EG7W0S>1&+;g[>b
%EXobKAlQISk8]1OZPt2hc;>.HSAlH,+GM4Hd"6<]I1r`^Gr.rtS8s%QCuZK;JcR7Jg`,Dn*5DBLB,lQ5du03(i,q9L5a_)$!O&8V
%H,_e)RRg"Siu>AT`aNJ,UJ/e^<+?nZWmY0_)upIh?tI>;0F-`WY)J#)>1J-9AK2,C*2>=0!P#f#U@A].eGdhi#*P1'&sd?dA8d\#
%r]f,nY%=pc\IuLrkl5U>"uM(7g%h2nG>d*12J$\o#f[]+6qN>K\pC#$@HQHoYD?9mOjEX5h5Ae?cHTR5o#[GpOn#t+nXk/Q=H,Na
%=G<I(q04e_=!ZJkCrk>Y36Z$qC4)5kB*35`MMu18b2uS_jKihLR@*b3,PGOi1[@6]%6\$^%di)f=aVK"RKEEC=CNt!qfk%8,<bV0
%Z&jEHI[L%NJ5.8B4;dUi$;DGb`WqRB%h8(*UZ!f%`B_PUP;.mc**;`7*)<A85Mn]ihr9-878uqZEE@hL\%spfiI2``-Y2Q)D.l68
%',F8D;CufsqD@-o,h]A.a-,Y9qD,m!#d*f;86l=jhZiU2?2Agc>gNY.=Pa%h25M[!A:kAmQfWo_1bhmm9`i1aU4D/I\cO[%^@AX)
%q`9'5U(+q#GbP02SPBIDpfc-okAt0'[#SW7WGu5Mn+CO?I_;gY$r'Ti$cC&P'ajn2q3CU?l<Lr+7I+8p%qQ1GC5HUJ\7a]r`Xe3?
%cKI.uD%,:=$iRR'FR]U+T;u9g16'P7-Cr1F;WGD(m.PjUI_;gZN(l]P^bH?8LPZ[jdVZle*/Y1G>Iu)=i&Ct7LQakYI\*J.dVU>N
%3V\.(gK1tYoDCV`&UA3gp>h(+`]KI4oPWR;kK!Jrj>2Z@I*ZTCT$`a>)hnT^qQ"NdLfV(H3!YLds86c[Qc=q3?+J]`N-"IhrO8tP
%5NqoaIO4R;o)6ZD8W@6&WS=oTq=20_ECTsPTsjjE9Ooh^Znk3G;DpZ<S]D;5d+QD4pKi>dW,;Nk707aH.q+?prr%P"IN?5l##Fk/
%]dXN`gFPO^VsjW,Tt/SZ/#=jtg@D$O0i4@Obs>ocmGMl'BH@cs:n**ObXr/bO2VCLd2h_3[L3+epq[R/qkCQ:9Eq%D[b!.V.oGRt
%J)^g9Hk,DUFh3q5*JQY7]NYo1A+Te<[?Y?$+hADu.a3B[>a^,"eKIUY&@^:N]n7G+p7E\NDtTc/*1,4#,LOcWUXR2L)Rl2*8V9nG
%XjUmS5bV$!^`mVn@kWmuoptE.-HkTt0Q[]Nm;%]@XX"nPQO@ZKYCh'S3s9ciQ`Z:;hI"!76m$m)BsD.3Dg=a*V/&Wdmp-Rr#;;ST
%ES_I[]'8`(onBh2S`GR\iE,+LX>VD'odBs#.X9=Ol9k8l-c=QeQla/(@&/l8qBDeKFc[HS#`C`7N=4]6`7Gdo=cHajhJ,(R]EqX<
%lb'_`@lX]ID*tm]7fWH[+.=FLSJ]KWS8H/PJ@L_9_9(\]FjlcmLf_3u4NkTW%Us4qcU)Z/e)[&8O6?T?eKUYa:EU=;(-+9cgZA3)
%Q63G9X<;cO1f!`('AiR(?3[ODp_,A\-,OpF]W%A4T(Oscq)s/mimD>#r4`*XCM<)k"n+.o/S"tFZmU6W"oFBp4]o8FZZ2bkOh6;N
%n@!8[0P^o8,6lpdD:Lt[0K&T(:!FFf)O!W$E^NCHDs>'C!&i9u@oa<R+'T4LF:l?""r\4oMd";t;\#jj$$Z"s=948Q5)E;2WI/\V
%L]*u&ccT^p!ERsfr01?F89?LiV^[mJ`DThJ!GJc@ct65s6K+B.cI"s"F=!B^$*db?X:d>m*pkccdYHD8<2,-?A;mP@LLYfE\lE'<
%a/aV^!YfGXC2kNH4"+9u1r2`a!H0r\%"[1h0b7^YTg-T0)>F@h)lBjA7lDNV<#@u`[[7##,:d^oRMu<uQ=-UG\^I%]);(:LW#YMq
%`:/Eq(>JN%%l9U%&<-CeB%hoWi>uja"-"ZT)g<GW+d@\L5f&$naNFW9[c_p3_6(*:W)a,.fsYH[OhH0PQH'I2AUa1rpaX>'7@N0d
%q)6:9R$Tll#*aK]A$fE*e&u!ZMuNL=\Xnon^I$_"N#h`[;uL4TM=Z;Gn]Z/o%e9-c&s9DppG5'K5,Q@;I\eJGrtnOK+Nd^ik:sR.
%%hYAq0NhG.o6a*:6r'X@50o#FfelOhD0hi%@t\<UdRVm@p>R\JT#/9c'QWPeOEk$9mT#(;o*H:Dff8WHnd!9Rr@3/r@RN9P9m70C
%6pF05R7`t4f$F(dqYq4h$XUB5$.8=d\TgFtRp18RL/'Ogm/$(QUY/Vm6YT_Rme\Bfs2D2UlBP'Rs(8%DHoF(hG#(spYKuJ"imm6H
%rrf)aqT:e%Oq4<T_Fb<56d$=eBiL_O;a5"bpm#KffV',/f8E4Vlka+dV6MRI>PqRqXALK=iY#9)e17d4ZU@%T$aE<7T`72k$Cg$j
%;CQM7r64Fr]H6am<V39,Zks@^b1n@]lCbl]pOm6<qJY9U0"9B4LJbL`LXHqlO6t<`3h]6Q/pK1&M`:f.r:,57^%$\88k\_libK,&
%+he//-qp[bRh]C2)($MSTfbi>Kp/3C2aYrG6JdUO((K@G6sg'$V5D9*YR).GAN^G-1S'VRh':=4R&q!UMj'!BXQ,*_;hrt79fA-F
%?:J<j5@W<uie:GC$X1b0<mJ1NLlO4G<s/:(D%2M/$q$:YfY+^]oS?,_!R$K"@@T)1+qn6S9@R/r1YSG*.bNiJ**Z9Pf*O%Y#kjf.
%f5.(K(Ul+<o3r=1qAK,+)jtgX6+`P(HC<S"3o\+@mZ_8d]#>k1,!)X6$^9]oDo=a,L(bTIdS=Bd+Z-:Tl9&%i"Mqr]=f]`LVd.b.
%Wo/eC[F0A3_<N7kbIEM/7$u(f+:MMp6R$n*MkIG;-aNY91;O8]SE[3hXPTT.T<ImLd0#SGrWulkE/3.@lh24p&.:[`+AT><IBGJU
%-rTu^&Q*<=1M!AMpA8l[\/a>"Kg)3&daNRC^KQ:_T/oB=-!lf/-:.n7'U@+n5,%uq7B"_@h>^#&%D8O\o>Dmgm,0@MGd*in:4=L6
%_Df:ePd)ALb[SF!-FbA!qIGtVH,b4Oj/eXq9_]QVDV6:)p-_b.0Uhe6p89G_!_KF;$Vdf/Eq$6`[RKkYj!@=9oOo7E^2K/e=?N]W
%?U>0oNV@'a&eV>Dd^Zgm.:2$T;6%[[]e'iY[IG77*!LqHQl\FYNBJNrI'$,_#("_Yel"hioQ$$Bl0O4:%[e^Si"2Ok3i/tG,'JcR
%]+X>g&E+ld[_=T34T-bj_F-Lt8EAlm(NFMCBL`\/G7$"F;Ja^DaF!4dFpQ-OEBJOkqC8oVq/nJ4<345tJ1_DnCV<=2kq[qUT.Y"0
%#mW3RK3peeIt&VsXs1F6QRr?*R^A-2#.,TY-Ia?30LK:V^$6_p%[P0^T-j88E_<hV3Bjjdm934^)0bi':TdnK->]4;a!\MW$W3t:
%3Tq$KJpn&"qM9Vdatf,4igW?4R:NK6db4C?qC*Y'&DXnaFO66@oKL0",<WZS_EVDlLQJmCQSeJjIL8YnHpW.cUjOFLXMSrD;fE*?
%):8..:Aj3"Vtt$s:(bmF!BV1[DL(>-RnIMuHq)E^T@)tK"n2ASjln8;qPFmJn"][r?et;nc/8N_O&hAVM7Qj\Q["7[jBY^UOO:hX
%d$J%sn)XJ*9_TF8CW0^H*2[t/7R+X;jhAdujR],Z#LCK_O6O\d@nf1_j0P*+en%SUaJL!TJZKC#WP>#Od\Y:9m_E2f3j_-G3c&m6
%b'\ZPck/7CndW>N#lYF(]mTjUpHS%_]\SKU6uVhZI7X"/n_8Qj)a,LZf(M#bTL6k,mun%JYIJeT9/G.Dq[0DK<p/LFX7u=kF?&-G
%F)X6LD=0VV8!Q&hLW-r=c*NJP;P%MI6hOJ2NmHouigT1]OZoIKPkKY,s*>X`]ZQ:arZ=krZBpMKE>!kEme`r<q>i$?qo?D!9*CK=
%mjIqk%g9-.dJmjUBRs$+Xnu2O,P]kT#31cXB55c[nX'?9^,:'4Mti:P`CqV>bo`O<IN@+`&hHB$_7Ji.DnCAonBII(AeEWblF_:.
%Y"5RU2"p-n8#7`9)DN^X%O,m>Plab*:"V?7Tn$6Mm*;f^=oQXp@))e(<4S2q*67L+emPX^3`=O&9=S+TagCd$.)`;^rSnF<SbRdJ
%jP'>+lYC;6@CZ7qk6n`Pqs@!`rpqc<eBX3?Do?d`?aG:\hV3GdqHn+T^5,k06:X5,kpHSU_fqaAqcWai<./om?]XK-kP;I%s5?]J
%n4nCT!C+/t+'n1C:??-Op[sW_hhH&&>OZZ+hR;Q"](pj?7q]P"3q_D"kVW'>VFCFH3[@VhY7JE1,n!hlb(l6VYAHPMdVCLi)4j3r
%.d7TAj_Ma?0Fe(J!0K6EQPaI14$m-#2"H'q)6[Dk=`<>9D&RU$r#%rOG_j%Zlk@``'KQB\!_$t"_lX\kaOaC+YZ+l&q*?T$ZK@o2
%@,bP*>]*k2^Q88k2`M7IN4n7_=pPD8Ba)5uOL`mDfr!N-`7cP8FU]4l`=85]dfDbbB>TNV,%5WtL!^YlZrBZ4-%(lF3Jq!k^;^)3
%U:&qOB3QO>7Sug5'"c$F+X9)e]c(t9`\Z>SBn8/:VbuOu.F#*nNTOi^;T;AY6>RJ1q(NU05"Em:Q?LS.!F'fa5Y+^!/AKF05!_!Z
%("PQ7mQ,B]^X7:O'f!4?,cL$N@ER-=q.D^[4erbJ,!\5kX#%ZPBNP[>*L><I1s^Q]*='S=$'"Y<n$s=a>)pH#qc1Y%HC,JFplMN/
%iM7*F?KC::N*L/<U3?FQm0EBOe(65^ofZu="hHk[Jn.uf_AF/$r%W$g/D)X6`)VYKmOYoh4""8kio<-N5d=sY``GQk2AYL%b^tSD
%H8rq+NbT)n&/VH7#P%doR_Z2I.fp3t%;BC5Q"YLEo:fOKK6[9oQH7#uHg8"P;VX88^o+ZjUMTb_eKW^W@Lj(B4k@D^*pU9mCF,EY
%@BJl?$Mk2!D-'O\q,!lA2O9$9"mgm;,n.2^Nl?VjdU%Q<!V+J\=u:UhRZ94Rp,T.noc=2P(GUBeBKIi`.*&[t8<&2TYl`j(#-*iU
%`q[*EI1UYegk&;ZmBg/lBrk7efL3r=i#o5QG$1i1K=Ac!Y$<>87LS\*YRZ%aG34i#3:=Vh=N2Y,B=@Y,YcNRd[3Yep["h"d@V`/T
%>9iVj!GeAfnKIc%k3WR\bAgBS-K"Ut6C)_TAj+d$":14%o^Is(]h.^i%I;].+YO1IgoYMC\B%Br(\X>s]E^C7\u9]3i22%Xdl/HC
%i;SKAJO\>4o;oAL*Xn\Y?LF<a'@iGP,E>s`*GlJfjr'-nhg/s:\*A?Sg1'n5B!+k#%GAT?n5+6PC$Yto\bQ"g/dd^L\p94',>uM@
%$+(lE1>^]]@!bDeOabQQ>@\bBd.ttr_<Mq1-tpN&p65-1Bh?BZ_jnTRj#t,QW^Mp;reL7gJYM_[n0Ej'r.[H,CgT,($E-rO%>NC)
%.Umk5Ht(49==2A%7K<c`[d7=QXLK-l'E<[n>P\LYbVeK#2Ir5$"u@Ipmqj)hDN+[p=*p5\+%ZRsY!garhj8WNUF!]Vp:ej*Do=ru
%oBlE6J4-Sa%TZtNjuR*s07r+#c$mFVa4PKLI]@iihcLGl^,Yfl<L(4LDQ>WDXpOWafJ*AY)&V@!gj'#J58r3+hSE+cB`Ui4P?=.`
%L$*[kL9fGO3sftiS<gT@n5*gf*MdPq>efOL/MBE2A)',tU%_?=`ZDD;r>rt6"CU'jnArh#Qji]PmG2s0C:QS^Cid6#++^fk(-MeK
%bf(Xc(<*5I1nS5Wh2Tt/jbCu"#GGhU'PI[T98*CR.`addr)TK5LU\&39E8='A\J_:.^-lX<9U!#6;#DA*Kg%:b>V(sf?Q%oPC86f
%mi&F%86u+%"\qT^@K=Q7$lsCd,OQA#Z^2*>/h5L(n]F&eK._Y%0fXF.r,/GW`4iF`F&7sIE,&lRM2I%36Xpp/q8H)cWar)^LtY%&
%^)S.i%?J`S8t1]3e[DC!4iAKe--]+D5PTS`iP@7@ar!EDLn;*fR@#VQ8[aPCHhAnW7Zafl*j+>m4KXaCAIFUP#8ZgVqYS\2fb8d9
%Jg3kcLe>oTfU(*rd+$4rFjE7!<G,NLj$;Rm,:W6\o@e>:O/C"%SFr`%BCp&RI9mK^SGi$c6.Wq:O#]'.[Q:;C\t])91nA.0R(+Ge
%N>BbF;A%/8fXmR6?b8I;W-^(i!]JR=^d6b$"=2#r8\I1Ze01d+PdtEJY="Vu]^!U&FUcoH]`YB=786<?Q[S1/&W[-Uc7ghg_t8:h
%pM>j-ZQAh7G)Aqn`7lW=jV"d_9f6m@g6@Le7\h7W;X;V+3!?SYq[4F=lcf$I80<_eogR'@'UE9lQVrkrIBa?T>okIoKj.PeQR9*T
%'XW$[8%\Q(d&2ALmglt)LcE(k3;6HLaOSomik&Xt,rPCi&*BfgMZli.Bi7P5@ONpe>hkVVSJL,*1k:`@:,,k-\5Te"VA4D[XMCOH
%4f`-[gsPasetiP-P$7YIf!A0@9'jIBm;5K'kJOo+8dWc7daS&e_d6YZ.CFOupbgXUjb5,V2Vu/t?(*73#:j9(Pr3`K`b_X'!^OW4
%HeW13`(6+kLK-/mN??D+/Ee!1(HSW_qXo!rYaLl=^e%k[eiHOPHSL&P_kth9%\'?W3c%uNHjKq<Dc='?%L]X3F83<VHX4MY?>neV
%YbBg7:BVnFM/g)fi1*3q"Q.j!E/s3tNKD:7>NHEA+N,3?B!<RPqrWb?"&hDnoE)'keS\A^9OAVD!iLohS&I4E1#!jj#U&$YDo*uA
%k"Im>8OJnF#TOsFX]9C4*2$NuIn1P%??>c!&]qsBXrl^:D6<S<4C_#Zi97@_Sd`kS(4RGm1tP])`*RSp*sXLFdfMm59/F3kP9<^g
%2C(<02B<j"FDE99X%2Dh5h[hD__@lUXFs!tb$>fITg^tR2^KA5WodeFRf4;WUpVmCC:\)G!"R+e`5OLuHpf23@U9%S9/R@3$/Z)R
%0CV#K<\4qNM96bhTLfZN;fUN\UEg'>=a.8g07i\5jB=u*&JVIdneTOsI9t[!O1:Z\Z&+kP?#Hq43MSZZI(o.'&$No\b[D??m(l+[
%B*%[hjU<&FNAV/UgU#r`H.YCkI[A-l)ol[!bo]-:D2^5ik*SoJn<j$fm@TRTp/s;%`,'M<`<u`,*ued?D?*2.QBc]`!14^;:kAnT
%B5W*`rOH,6%ra@i]'/0<HUKpOh;8XL$\FOr^SddB"7=ZFS!-5TQ++dD];SiQdIa,d("so=&?S^W+`8hCF4N<]'-Z(C?&6V@]__r%
%-RJHN@T4C8(:hk<>s(dO$99`@_/]7Bjm'7Enf\cl%H\1g,e4KB55bEUK=<*d[(EA-JY+52R>?8@bU-MBmXd"8_i%NRKD[F^@BdkE
%(<>T8PCR-`m%qeh@^I^;:<1omOEf:!H6G$Bc1D?15tO^j^1tB@a]oMF*G1kpS'qKS)k$%]Z/tda$f^]XA[4Nmd;.CCdLZmU=;l'Z
%c-jQ.=\EOl/TGd";UYYV&:]0+*=XZH1'JlsU<pbI]-6Z.Zsmkh(_Ms(>r4*pJ?70+$)saGm,TcBG-1`:rFs[Ca'aJfGaEm'lJ[Gc
%>B7s&hr_>+L>C&C4mR#=E4jld3>#2M9/\aTNQ9ZqK0g2q?M(B[FmhYLL_WrJ7@nf'"cdVE,Yod4]473n?p8;?p<TU\pl@h:fe=GV
%Cl[jA@O3+f0^Y^(SVM[)5[e!RQ=/jZMU_b:U?To=$'u.a3[JZTlF<O!mFW?[7E'E+C?'D]!;Cpl;[s^J6uT7A`;g`J.Ba?fE%?72
%SC7$L:JZ2P\@S8+r9k2P+TQ6/n+Ch'"sB(l<>ABA?YQTiH)4_,^aNQZ_Pl+(:m@1%Mbs]b6>[`Jp%bOMp*`=LR7+i]*bKKikYV2u
%!+7.55,&WA7^E7eka%a0M4B:R/Y&KuLaKE7'JrC/1@k9Q,!JDN]0r:2F0o/6W[0oF.^UG?d$W#,S2j<BC3<W<m\Q:8cZ)?$KfjI:
%O)b8aS4Wr:^#-&2R&&b:.h#&BQX9B-<Cj97.mD*!2nIrkZEXm$XRPKh(9s2mO9b;XJkWA*N1PC`dhSbt!DMa%jV216?m\Oi=2_b?
%9Brbb/IV5Q-2sVtSYFaP1Z(pW#<t0PRDI*o'.o+Ur:rsgE^i?A=qpLdF?hIX??KOICkIXd&Io6PUa,!PqWT+4.]5ukMWk7DD)[Vp
%0qsoT91s6mDVj$FaBm2nq]'6Ga&2E-1EH(L#68GFFg0WWi*,e2[HjV^1(fR1%Q[3J'Rd3\>C`0AC_9$r+MjJ+WJu+U.NB,V?7NgY
%^dtnc^0&c<<`R:)h"S>_;ZD>FOD2H`emb-4)_6ca,$KA5$@YB0gMDlm3[M#K!_>Vl$u2[oVG)eLl*mV+k_80.pn3r&d^m*@?[[D'
%8lbOLY?L2k]Ns,*7%_RQX8sU<iZ$-kN_F+t_pNS3PfRC*dY-$#b4&_W""16Mo1)4(m1Uf&#%&<\9X>Codn'1JABhR[Cl'!]ZbqRK
%h\Xlh^-/J_L?;o2rR8n30qIJ.2k9GKk"u(7H08kPe>\JIXOCheQ@"R=9NHqbMgOdA=5$=W:crEc,2:EW=i)rIA[f$"3Iq$T2.Gu]
%=p[i$b1RTc::#AuA+i;h\>f9df9b.!LceQuD+]K!14+bp'MO/h1c(;JK,'lm?%r\1@E0Lj]Sc4'C\O$ITMh*>#Vso3`jDm:7P0SE
%rF^fT`^;Lt=Ms*Xn!bk(:W5#7L+#H5/./XJP`*Utn!.S_HRSbp=#QMajPr8uf.FP=1SXf?R$HqW^a4H9dS_ULq#79si\W$+V@>=C
%g@(S;eP]q+lC`*-1bNB4Lb,;C"Z4ReBM%,%,/@VfL+_I=M4UC6o&e/prKLLFI[N-Dho]D)\l)NT]]nkVSl2C_T:uf'A20BhBgh,^
%RkAC8I&"dMrC2NNio>Qi=gno"6('.HU'B8&B!kMYU'.\[7l%GLS<11;27>QB+R5c@1+`<@2#I6:ibG6fV>>dEFo+SaSi5$bAgu*7
%AC;ki=5fbE.>np%BOOX<frBj"N3K^sZ@\1;e:'$B=n^j5)X'D8oH&>?bM]9,&HOAqqU@<@L.Oea[G4'uh6ZhU&t^bt1dJ%A0S4R/
%jcsddg>VQMaq2ut:iI`nc]6l,)P5>s2@hV/'Yu&5FOEO'q9?_XYN>\$FD^=Ia/PM&AnHi*Stjr6]qbqi$3$Z.*"(FYQ0Br&%I_a[
%]a<GZk)_e`(9=Jb"dMO;^kT5;lu_$;@@1I.m8PQ+#-bNS`6bEUj<3GT)*L[b`DZ8BnM_nj3LJDok@BjE?rX.X#!S0VU!!coLIU@Y
%\U'oTRF>P1Pu2pD)W-c().EZe;Z6IP0jo5VT-ZI;bYUr,AZFb=nq5X9B"0-q?nG;s/e%p"ag59-NRFRL_+t?gC5rZbjMjqk=7+j:
%>Z"mU,.:WM5*?s>Z]B2!,p&/9^S>$Z-M[L*e992A0Q'>>:"0ZgWiA`([%Y;g2?8n;Bu[J`'7#I>hhLFb$-s=(2GMlh)G4nBRP%;m
%6:H^_2crV-mqdf9LT'.JA-`oAkcAOD4=*sjOC+PG"(0DW<;I/TP&=sPmRI9%.aj&opa!F%Qc\Yc&>Fkn]/)aejS%hW-HO8GHA'P2
%!2<a>2j&a$[JjaGVFs74_aCcp;TSEFTpOsNX[mK"o7st_rU_FM>/PbJ$"3-UI[%MPGZi;2P+(5A;,X%(D2%-Q7\euqNHTOf=\K4s
%6P[Y%'c=#jIC*gSIXZ>cLq1[tVQr8aoV!T$_OU\$,pJ%)+VXGj36439+M-1Ig^3O#/b!_h'6IpBC/67YQT6T%6kU0=9\%>$qpRR`
%HCW3?Y\+aN:(.(*>L>qI`,ZG<.RKT/#>lCB.T.bD0!LuW]b..t2X_gQ<>>lQ6e:,b.LfgqKS6GoDJ9A_>fmm!L^&+Q<L[&.$Osu8
%:b#OT&56I#e]iRs[3Dg?NVpHB%%9]7%[in)&WkiS]\?%Pom0&0(?:\%qd"FE#<S<])1tfP!g]UQ3*?PNOGSe7iL5'8IJN8%'t>?'
%InAS2jB18F,BhH@@u*3"HOje5.trB"h*3/Fk:J#P&MiS-Z:d'g=@"oZLSQ(JE$V5NTsM*U)(TB,VS'n:8W+N&e@9n!C".RBVUK\P
%o1ifnX.B5XRHo8*j@JF2Ah4rb"\6Or0lJO>*gmB2'Xji;O4&$F[OT8T_uTmC0M\L&L\Pb*9NA+2Sd@@Xj*'hcdcF1,mJK/6I<K8'
%U,iV)_W=RIKH1KC(;,#l/E][J23CHlgt#(9YH%nCIp$I3e;eTnW+h5\o:P3].5n;n01p=hH[U5OK\Yj>e,J38TC4T)FH>K_RW&eF
%QfVHo]'#^+,gj/"0ZIJO5'@XfrQP4t]tYNP.A`>U:u:;eRfC+rpL8_I3iI7Or_:O(fNQ&<8u^Tg+cLoMN$n1pMM'OJV.1HqqE`np
%<h_GsF(5t9VekXOCDl6E\9Bf@(\-.0Lp.fVULp,$Xa@L$8HT@kb/dbS501&r/A#'H+`lj00=$n@2/g'!cj1<:BgaccLAU0tFOHY<
%'_0Np7BQ?J:!J92IOWHb1P<mG-&?DTl852_?e[)b3PuQjFY_0n(,j.)\epmJF>5V%5Du4LYT\au=f!plq<'hp*Ii1lo5nDNr>O<C
%`3.majDpdDk;-F?`"2X-M"(:ti1(&r^$\sVq$79;+5cs33YH4<T65-PcN.!i/RM$&,h;ZpJ0mV'H<l)W]PV(ue,/9:fdd17M"#9W
%aTC;(LZ3^aZ1e&/6Sn6n/a>XaECmjT(n-5A`R$GJ(IQZa64Q_*E86%G4HIja>-P53'$Go2AejN-hEo5h?uNEl8VFI$(3eMB=u%f;
%[3Rg".$^'u1;1!7?$m+GM<[KfJ\gnXj)f8N@O/;)ouSDT7H<+N_W7)M["o=CP#g=I>11\90eI)Y,Glc(Gf6t"@Z"k[aVN?gH_'*u
%MBV&JQ9<rb%g",u8<(7dfgHX#.@T8E>ojSuq[Krlq]htKeq\BQ[rjBMSL'ijaSL/62p;`75qV"A#M$?0CWac*Nj,OtV:X\nGeS8H
%Lk*TQ=#iTIoM*!ef*/Z6dY`3cMPkc#%lMcH?p+/#,G6;?bMIBSL%7c#B@kc:#TI!A=X6>rQ*rLgb68QSO%TRN`dK-eKtE3i>icSQ
%PDTuE46M\,lZ*-dn1b@P&`MI,eq3XhD2'nW$Ng5!+rN\egOt%ZrMhEY:c7_%OX1iTMeG+2h%7,SHXs:+]#ZiO$>:q[;+]%?1bDs:
%+][ONhJ-o:E>=3YTr%&.@!<AG[gCijnB.iZ3,d[mN6i7k\$k8A?AGeg9CEl"A<8D44-jZc2eS'0**1u0Z5R"V3E&F3<dLend(2[]
%csC,5XqIOCC@uVCM6?E"&kB!X_&G6-?]o7G42&"e<,+I.ou_]CY<Ms`rLqS%k?(5@SFK`*lXm"/d"Qa)Z'?TpK'CFn_Q'$b#a(qM
%DL2CX(n/F#"n&m'd%4h66&*^nR*BoVdh#S:b+U/7hS%\Bo%YOL>U[^ugg0Xto6k"or/lUsY4f8;L/s)rkmm\\+&%Lkd@>t4<E;dg
%*&N2_hrHS@KEu4o2sWqj=?&bW.l2bTTXe$,Drr(E.?]`Ts1YL/oHB[2>4?6lZV2@">G"jj:IA7QKk?-7'H$92-Lm-;.K%Vt4u'qW
%0n_clYm<a%)@Ug=edFSUpEB#VhTb0pSruQb>ITjK$<$M3:ILP:/N=k1^8>a3DO>]#Y!J0hFum[ER29*k)An$Eb?p8]:OupBkMq=E
%ZD51H')3#E0/[Lj8oKXk0X,fT&9KS-,GEAso7imNI/b=^XTN`JXf"[<7AbE`7=Wt[C?giM"H/:.RUL1DO^HLS89!;b$7s#f,99>2
%7%Q:+ge,RWjogT^%D!3Oe*/bT:U#'^0k0rLYQ-iUROuEd5Te^GF^]iRcU"?g.;)a.nr[CDl(2C9ISDb^*".^UB"XXD!P4"NKi3fm
%p7!C:PM)P.mIfg%K+a"ck?9<O>m/k/LUuck<]gLIXV\*=Lp-6/9FEX_:r>;V\d[amqYoFnM8:P%8B`RM40\d@.HhZS0UGre-\D=1
%)Fps""$I&AYZFrOf!)`Mjs;#&4B$u?qnnLo>e!EY*NCB-=UST=oD98R%/W6/=so4H`2)[qUiB)CDLZnOdi!$GZ]%6<;+?&(;<qg2
%H*Xt]Iq+[b2A,Ne36435WRl*KU`g_\OVi#H7Uf]G2\KnFgjqL'6P):-(A9bL#**1cl);keB<kQ!.U['Nd;`,;"YhX=WMQ#Me^?iM
%OtAHFZRt6ZK.mLqD'<E$%E0HQ/MN7:#rZ56(7;@`#a&qc<[TDpBdH,$9hXo3C"f.G0hm!4MJ:f;:eWZ".AeKG'[tj</#IRt=Y\1=
%*VhO2@]jOD2+W$r\koA?:MC-EhbnO<*dT!4FPAGk"1\7$-%c8(U0\_]^jb0==p1<1`cIq>0?KK/_k#2aWh*BNT"oV`OPg/I\A^T1
%IP7!Ro;;JhN-pP"MnYksFj"!FC^[oL+jjH$7?S$&h;SM[,"ofOFq<u&E09D/\EF4%2%V+\\/6o5CM;7\EA=Uu:<U.l"><,6FO:l-
%Kk>XC+]oNN*\T)]hkeE'^c"#>To+4*ciY!/nh$#D&.'/@Qnp?-rCFK?FO.M5k=i"7S-oaMlPVj+/hf:TIX9Fr85F;0j)&FAHH'Yk
%]"fe=P9$E4@K!],]"lUYo."BYa=cbq+'BCo]-H_&K<t(mJttK$T#OKX6NkQrah^En&6t3@_a\bcXgE(%aPI8Xk0+r6/pG;A;OSW>
%8@%XmcQ3O>EAuT?,kf<a#190\Jj3jVif>I46sKBM3S%mI3Q4%?el/[AZppK"=!4i)k"ed[*.4K4iUfAh41J3*4e:.X@qE?cKunUH
%LWO_)`%q#[5f_XXCl)e=S7]ACNj>%1QbJM7^j$0%Y_[pFjdc@$l03ZA70ArtI(?5qO2mFdU&h,3mh=ncG:t!n+i^tEXrPBN8+:t4
%Ut9o7&$HK%-FT#NdQ1_"p\LWIH25p]f-&rPKOIOYigQu20C5h"$QsbH(I<6'pFc`R$/4V&L.0B-#8K'Oi.#5A1fM[*ionj4iBAD,
%DLbEaMXUZkK'GDq!*dr0&C!"'I\IL4E/2A--EI"iG(Q*,bONa`3P>K2YS6e&9iMCA1*$huj<k5[[ntW5-aU<j&-jHmo3j]$j<pqY
%i$W4E#=D)C%>L#m2U]OTB8jiaRf-OK5TIi#?8r:d&asphkNOeMH2V.k<&7tP#mBCT/6UZp]i8la)CF"u'<6uq;4I`-K]P&Cr<Npl
%4NV1=m(`,R#QWO5(lkHtPaj_U6Ze'I(^f741`.Aj'G+b]D-%5,c3&;U0<*Q2-o$=+T;9jq5=r0gIZd_S?\:iYgs18f:F*l2XM_\e
%*K$mEar_\80&YEK_b("Ee5=!;k2je)K;/SJ!//L:=7"p^T`M$Q*U7+&7d-.P_P)[\`Q9$6>0,'.du(aU*1M"_b\8:h]hVcQMYKbb
%V*1#J_9]g+.3OTmRgmeR_o@e8ji3+`!nhIRmS[fB3u=cUF?^;J8\3,SA4a8eXYGYuAA_.$-)mk"S^_:kW,hsTcI-BYn&;A[732gJ
%h"58pCc?0=M+8YBZc(5.b*H.Zf]+_AT7MX=o9+EBF'p%U[N278L7p=rbUnul%?>5^YA+&(V<?G2U!ckfhSXTi!td"S!.bE@M:l^/
%k^nb'G24F%HpU"78tlPXJRQ:ZPG',<B>+CpFR]L@1Ou2mbk*ls>"Ns#(,?$+`(r]D%"8i;j2k+ae4^8sK[Os-%UpET6k4qa@W>j*
%+[_kA,m<YS;.=!S94A?j$Pi5]C?kA*\tl#gS2WK.Ncb5*2$l/Q9$G+K+Q:TjS5]&(B3spZPc43F9q^-F`X9t,]Z`U)\7>N3mi>+s
%0h`"pQ,o/]KYj/P8Z8MCT-Rl0!XF!>>P9!5,XuaWP8J.G-S_`2-a<`n/I81;nWPX;"@!2k_KcZ]jFqnBU%/lXHhlbM5=reGT*5*l
%9+jD;P5&9[9A[o5jpGqoJU9D?m9/EXOTu@W@q$U;;'SL5:sbYW]X"Wmi'smtW,"ca_kNl@LU"sj45\Qf#)!qR95q_Y!@,nTR8<s'
%]/!_Q$gUM:jS!mX*KC/mqHP'jE=?5nVR!#F+qgcCl:SYr&^?=NGf]E[BH"*<`_mbMAe]7b&D'4WC;;!qK4l<^&D'_;NY)EI`H<>m
%DWB`fI#?%S+g)3`d^H"=7n.80&/Wr0Y52aBEP:1pk<_3Z2V*#?n%hl+A[++8iBYB%k.%D+5d<Uj?BrGoYqn+e@\7`E`<O]uq>lI*
%T@/&,#:MLol6Q^0C^aC9YlT[jR_=Xb,^-d9iWR1&OWgtkr6N']3T2,I^27\HM#@bJCXlg]5f<lSY1S;]%D()f%Rb+EDfnq],'G;F
%7-p+TLtEhF(0*%RC`.'HB$YWkln/M4C"f%B@e\'(>6dK+^H@GAd.?2^<OZe34"a<s9BH]aWu@#K@I=\/)NT5%F2q:OVhOu9Lfr7k
%aAe'rYG"4Z+WT3Z)K0<OBjr;]N,+N_rF`eFFc/skH0b\UX2DV<QB[=;!)3-=;RB+?N7puV-GBL8pZepjZien!N=a[J?=.&bEX1OF
%8+oltb'>kh!0asbV#ku9oXn]5FgKlPdBkWkPFDW7?/[gjEtd>UeVkM*9o7&SjW8*R3f#kITB%s`d:q5o0E?6*S]6[,XP5dH:?CE)
%3rSjmqYTc[8).M]'uescZ4aMgRe[&JXIZ:tJVi1``(W2,+L,MX7Q[kfT2"Ie4<Umjd,$WGo74bSoM]0ioMAZJ`#=<\221-PYf&%S
%,c(QqNr<Df5qH1+0,BYt)-hF-C&mA0Y8<1p$n@mCYnTV$^W!I1be06<=?sO>Mai%)6X!4F:fpW!Ts2H@%XfW-S+Mu5<X@Zh!f+Ep
%.ViOjVU&Lj5GLNU3$"E3EBYGI8\O%M-D6#-!rhtG^2cC&3G:^P`.2rKrnR?d5eUnr;?)*W+lS_c@1fcDT9.um`9`c4$NTbIm%'p9
%GZ@j2m-b8haR)u9!O9?g/=Dlc^e%k[[_4.AB`qRI8YZ`K,u)PtQF$_h&jS]t*kZ%k91-Z/[2VqL_+IpK^Z-(nCMo4HTrrn]=525i
%9[)coU*"p<ON9"bnrS)=^`,=(0Vp+H&SAa74R@f;M"Z((4D[k<)P^OG%i`ZG<V6`>"3Lrq)7#e/OLp6X]!ropc<.!S+^1#*fH&rU
%Zma0X$>Dk@=$LKKA7CkS&+W8.-\:7C"oCPl'2:(o$N4$T&MKD,!R(dIkAqf[Z=ZB^/MIP?$>c$kZX-e@)++0UhTC`GLhgV=#>ocK
%k#<@#(KT"r@mtJ9KI@$3R2UsLbs_cd!f1kK`\e]H3=501Ygb3fK/HYs)tQ63_KNKs?d9-YhR1o0p@W(9MF6!8W!MR`_h)r5>1/=m
%s/*PsnmSD\#`>Yq+$IH_99lWE#&uJX#%'N+BmYO6J9Ym1.^k_W^IT6a9?Smn?r&_M_6>%!\ThOW-[3h/<175/!`/[$dZe^8MLlB*
%kiEQ5nGTr"#H:[7K2m^-";#WPWthQ1i:Me:2<B#-ZWN2d2i3^cW?6\?DSP(t.]N%u[03?CMZK\MT.H:BV2I$T7-E;//0_[C5<Q>c
%fc"2Kj8%BA[+gK7^)#uY7XQ/mV8s^P:0luD&LpuTV/%[502cZ8Wj<O:7f]Va/MU[EX'mIQ/bA>&J$fnZ70-N`r!HVgl=a7uENZ@9
%:0*qe+9u`c8:%)MERMF15()D:Pq2p'gFI&#Gmf(QP+nV*'e)P`ZOS&O4!dK[%bC._/:Nlm%=h1[Qi!Mr2MVSaWQb0MU@DgL3e8H"
%dETM"Y0-M73U"+(';2\\KER/)18<=nBW;KR&kDf/'3Ap_I<J>J3=#$n[Gb\edTBB#A[2Qdl?2+cjbI3A9Q*Y<a;]`^N+^A7Y_^kU
%Yd[7]KS2Ou2?qfh(6ekT\>'hg0q/)j6sZ!i>(+Vocc^BUNra?RlFG6giWe4UqNLuXV%kV1f"ge/<`n4I`0e)]0OS"*P%1I5H8FX+
%fG?R?ME)b?GS&?5K34m[o;X/K,M4XO^b*1H!'&]4V7b,'eX'G1O=Tt+$&@MnYU-C$r"2u0#o+^I$g+hS7KD=L!KYWcm7lBig.mge
%DuID6aUPu!OInt/`CjG#M*o#']gu](,9Tjc1p$#s%)cs_b&ih?"H*@#hRm3@,YF)7Ek^Io(o2fJZ3.-@.:Xr(J-e01\OsBAo&qP]
%/3M8TG]a,[r1[aB%55;?[BoH1.2'buqL!g"paU$G[$77`PR#RD(X(6L&NoFt!1p=4#LGF[da>5;oUB9bkgQ/"jKm_9B\1[.q&6a)
%'0;_&A;'VUc?C<Y@Cr'36-p+p!Ej#%O[T`H`BL0@ZoGM3b'85<8:bMj0n-1b-W\[3%OgIn8G")dI^=?gO:0;1X-n'10CpCcL695a
%4VnIP`eI;kF&WZ6F/F^b2fgYu]s%Saq9i_SPm!lH#a5.Ti+14F8_U5;rS89rMp@AN't#1[(b$pf[W0UVp:A@8Zel;n=Dg/Ij%A_+
%P_)JqEXJ@JcP7I:>*Vb]PBog_<k)00IO2EbJ0<1=GmA*R(!UL"$59as04d's!`c^k@ThC#@OPJ[fR1oC0EPl#7MT]MSk9jb083KA
%.uOm16A$&^\K+fd(n9%`lMqNnZP''afI69)*Wj#k?%Rkgj+T`2h/KK\BK#gl##4uZq99>dbW@MJ-ZFZQ@g<,LSa%HIR@3kCTJ3to
%b'`WQ`njKAn"<>fU"Pmn.d_Ed]#%NlWO](+`pRK:MX3J+i@/uUq!I@e9+U'O>*e7>\CoM4irHu61?Urff>i4\*C-f3<_J=H<=>_.
%O!J6<S(!sm72-P7/Tt2.33=IeZK!KlVcJ.bdPd@d%`i3;[aO4TKU5IjE_b*&i05'P*keK'a[B9>.W^aRCrD7:@s/edU>MK)Cptti
%lM!#&E*V39Cg?Qg.H^qMrg@o%"s&*shR"CHKPGGsiht6G/]#"p),E]7?ur9>pW/uNit52&(n[*/nJ\P@DqKp%Q9%E3%-)le\#[Eb
%Uk,tt?,o.&<d[(%gnd9sq.AQ9A";fWr;b3>"\g4WVqgg2LA(s?Z8HNS'+9c*2Vs7pqZhDD[aqMN9c6:Zq/a!4L?iYSVr^EP)5f+'
%gZboK(4pCHrDEg!k,.'Z>HpZ5i)6noL6ou74mP#@@]NSj(9.fTL!5m`da(tKPr&uH"+VP$r@pie]s_"`F?5(TaLZ<^XjD;bS1E)d
%($SQ]Fh'\^\HIS%mDYfRJfO_XC2??C/me>tV4LD)\)HaS/;ptH:`^C77"r"X48MoIJKZjVo[2ZC^Ie#VLjmr2OiDq8ZMPE7chD68
%8gE^A7rZaf]M(Cmnn)R-g8$M3/1GfD+#2gQnO<M/`/s7NF[XN<$6l0R?Gl97%rLqG5gF%G?sBd(Qg;B#]%.dl7sT+GAAqYN3)ZKo
%>.1a9]B34=Cgr[l6Q$'TMGYD:.-QWPEb/4+lH9]LoH^;P#I1.l*[,.<BHBE>7e:;!)9l*[0=.fYEh%"^=%9HJ;k8cJN+s7%np7o5
%^(hP]0MUtM4-M:6=g(6*iAQ9LE<H=*[gJIn(k9U\&BG:b-Ff$LZd]RSYJ4*4`MLtK!?thUY?3f-0-Qco=cKUOQVkg892IUfS+I#R
%LkgKG!<X7T-&B)?!?u#%Z4I'5/BeJX+TfU@--[i9+2jP_5q]/(^<5t*aep[o+hqP<"\e`u-^/6*e3Mm?Y9.\Z0AG+5dcI9XjNj$I
%.$,cg(D-XNH<W'?WY07$jobZOof?iL%Mb=K-sm3rWA@7&TlkV$%8n9uP4Zf4^g;'!61Y.Kf?fD;%]kJRBl&Y)IO^Shcp`B\,*eeE
%4od)dcs+7u4fkBR9&'t*0$3Kld7^BTKt,P`f?Ln5]ih$aJC-6$aQi0X!q8;Jh0CNYk+68`blA3Oahai?M\V$>L]a"&2d;KVq[:0#
%iY(n\-K[)I5Y-h>1duU[/F+F=oP5hWe<53Dr%`^"@'44F_26Wo?K[hR!KF$_==a?A?3]Jtg?=Q0"Qa7hq1t^M*K>DnRS^*2:aP]`
%-C*u$IC9jIbrE<<L9?fJ3^1;"5$uGr`sQaZfjFF0Mhj)Ok9\Ma4Z<]%YXng;)FER0/kFs9HQ8a`BXcUJ1)]-uVG@GZ-R--D!@WF]
%$VPcH-<K<n\GVVic/T6dk9ei:ZeqX:4B_5ZJAs269h[qed]!Tq1*qahZ6jo&l$1-;'u+&IEgELZeN<+RC(,cLTkG#cN(JTY`1ksd
%*.h5e:ee8MM!qd@\6f#Z3=4k9ji`ua.^@3+H&4+5XYdb?aeBIGS0+b)9Fk,Mq_R9'L@H\sE#P`cYfWm[dn9(nYJ=QqM^t![2N;$,
%XDa816e+#]l;7"Z0m]+.4lQ*9emlN$ME@'_f8..(%>?4.<;/F8**_HI?GA+2c?M&X!bts^Jsb$Y%Z[U&c5u(>e4gi5`Ji*b+QdrU
%c+QPTCiN#M[Vr9.f"47CVl.313+s?YaoFYH+\TTNReKh1#_!goe<?(Ucm?]mAsTC]daELCo2i.Jpfjo`ALr6I@9;$l.>=:hH!b^%
%@J*rK2T2nIH*q<Fq8bfLgfe<5TPb8bh*gf+D7M<Sr]VOTbb>*s;QdD<dST`2;`m=i-!2TlnGp*q]2R]kPEiDM?$0,ddK:qS<@c>9
%.`0(TCm+]5F>_A;Q,fd9f@FX/ql8Qa7oPfPAG_KMAKm2".PiNVdnMKbViNcCe?7TaGMZ0%4u`s85,qtHlLl\K8<?X=qNV'VWog\G
%3Z_7XYqiD"OXT^&d&-;TY;?o7@l)\O;^i.DSto1m#R6Os;:ui8'LbY0fqqWF?_lE40M#D.$IErJY)_fMMh>4([0b3()Z>`G*iJ:+
%8bhL_?F/'QafMXg?G1E7AVI[:.kVp^4Rkf]GUcG]p28j$1S#o5!4-iY&54"H,fj#g>3WA.'XVB</L5A<d'?n_CP\6d`2gk;I^nu6
%NfoZ[Qrom8cPJVR*u4YH;/Ink%t8<ELJ[Bb&f:Dor&Ppl3AfZ!1a*_b/Z)NSJi%DpdtA4+g%M-CdX=#*K@OQZ,P]iYQ0UGSQW4B@
%NXphK`6T445F:(0Q"Y/@EeBT$#4^L.6sk7bNc#H`@V$s9#foUI"XD%!6\gYX6!/J>"/G,LA%B6d>$(?Q@L:(%?iU0u[8$-2>?19k
%c7NBAPOm`nplUG7esh@SOi@^(pF#2mMkiOYMqJ`;p4NL9MK>2!2RK,6at1*8VJa!:gJ%hen%_1@7>khIVr#U1dUg&S6PkXZ'K4iG
%Nb0;Oj&UuW.`29:W<O,%IgbC]o<lrFHn]LR<J@iZ=d9%]gKe$^B(nFS4^'u&eF0^W'Y141j`;GTE0b!Ad*u/>8Oboe%_$RU&il-J
%cBH2qXfcH@fOP/nLEk&+<bT9L.1FTCh4".W9q+MIM%],=O6p:5Rp%CMadOh-ngWrZ*N4H,Q""N?gL=3?Olf>aL)5KLaAsIQDM9C$
%+p)LX:lkR>\3D9n%hho[jANdu02eK?$c!n'EG-daVkH!nA8hEqOLM+"It&VGXZu]I@F8G>+fRiBRYNm^nhN?3NHq<uCPnf,q:b5o
%%TqpY'?uhb_dRj59rF4\28*k8c8'Y\(^K!Z_4Ump@sb!R@jFqk'ZB[pq8cP&2UT_]BYPotX@?7eD'4%=.tb:''+D\99bDJF*W&lH
%Q9@[2l2kcR3L66B3BX(L4=3u%ZS6:-ppTmc^?qfa"5!2!bdh]51+opKLkYu(+YTeVpb44Fm'hi[=q+=Ug>oj1\NiuGMLrqA[f(!N
%ST>e4b=aZujg(fsnNf1e=W1Nk&LL].!]l),2S&.kBVqLCc$mE*+=`ifJqHM%>go(sigO<VDDIBLE(/?M'jo'+Xf]S$*42qp$/*1*
%MoGF@L>44`5dP4KLGWHK#@IeoSVh'_#3iDfZ$X&BGoC)('-H&m)jel=q0!^p2Kk-4*]jmg3N0.L?#])2$kc33GtflVcXeb?TBfq,
%6JB6P>I-/A$E=lUdhW*;W4K.]/hbJ-k?2:3OWJ>.N^?gi2%^P"@L\2n>!3in&U6Dgl;Lk_2GF+Z(,;0@?Q/E`X0*eW*ORXQ1d5#.
%mIrP)Odk33$*jLSeKO=9D[iG^Zkr,fMRUA0Q-q$k.c]rYbuJ&R>,q:=.@MZnTr(<R02ceqGSPN2QMVlf-El,38>:%Cpg8`k<lk+k
%M,amqd4-Ko11`pJXkC<8Ju.j#rG)&BG`0"7:T$Epqj1,R^i&MIDUu>"CAm!#ZO4l[g[;q?keW'Q34=!6Em%ji8Ril@N9OfbLW003
%\>JYp%o$id2oPDp_X!R=F,`ed^&?S2&:^nh'*+*q'9.,b`J('"5g]"fh(qN.A-:`bIZgUphb]IRAS7MZaC<9m&B'Lj(E6Crl-R:#
%9pF-%@-jQ"X\%^afcW[MP9?"g3Rm]rjWd@keNG_843K_mLJsRXl/,fRZg!*3'O8-*Sj^U'cGUGL=X2@SqB/Z:a@:RqQ524cUHXLQ
%$E=R4G>g.0%GXk'1:_+qibkG+g+6bA)d;,#Q%`T8%%@E,1#_7,-uD6\4_X\5`,q7a57Q=WoL/,r[Fk*J&GSr`O27R_TWO=TH[&7[
%s.(AsZc0AahJUgZ#YQbDGSp,4J@dj0aj$h==R_YoT*_(oD8_L+`WLc%4V>tUqEhjO9_pduY<h6%Dl6$2MC0%eRM@9?_nd&$Q%DYI
%2:m^,AmJA'CYpEArf2O-"#hf9Maq#'p<!HW#>qcoY8KKb^=@V)6plI4>/3bZF!Y`i'\7ArSOFkNAZsWW$f*at(02Y4_j2(SMOpNu
%,D#Kb-b^qe-5JDccka0Z-ijZhK9te"N97YkR=1Oo<GE"Y'F4o$Xk#Mjq9aV@fj:GbKrAAoZ3X=dd>:af14$GJY0Iu<cZLEo8T?a:
%ZHc_&a;=/N3=gs`LM(cc@c!X=U;RY8SAccN<ruH+$X;%uHj\8b91'+-Z_%X=WoIP[BASDraGY*NH,HNB/uG[/"(qMA\!W$r'ZDAj
%r<UW`^R:AQ?ZqYLCU+SZ+O@k1Y\MSkK:3::R^a7#O4#Uq>RrHOO_O[`eQHc92'&cNPIm@'_`>IBIo.fC+LOH80'0Ho&1.12<1&&n
%fd-*".@lAG?q*'.^1,@JhZnL^7VPEjCb`&6>OKHaWJqZX<=SS:\op6J1I/GA`H>HVPBGEb0<PSl\d9gHdsa"n`g<GT2Bf1AKYX(H
%R2-ZR-MQgQmnKqt>DM"nQ(LPE4fUEJHFUdg*@aOt5%3EX_@"<`O;uJWQm_Hb-X6Var(3PPKIBt4b#g,B>%Pds@!EM^\shT\73!Y:
%Q7f@SW#D1:hRVEkh/6W,PaF+%Q,`=,[,.3M@^/8[X:O?eAYtpbYOkPd/*/.j,=AG_"<Y059/=!"A_Q,im3C1LMB=_X*mt<#:m]@A
%Z!=1E-t9sT]%q8@23oVJl)A\po0lKIVq)aC"*%)LK$O*cieX33ECJ'lQ8??2%j277H*f1@jse!hg:s^\f5(K#!_qd46RF+&arAr"
%6(d$!.2S^>>OVG#p/&]0ch5HS;"Dl2,=bZ51ta826P2?Hi%]aCR<Oeu>N(b`0kY`HS7e4L;&lQt:&:LkBQ&Wi^)IKFN!BRZLG,jk
%2$.c'B>j%#94)i\%n,^0"iL92//dTDRUhduj.]tR2:"5>;q?'qn&c:"RgF3%:BRju@uOM#Pice_=To=oooK6)EG;=Ro6\(-&atkG
%YZ*mar;K;YY*W<@j)YKp<o7*i%Cub^kr8u1%63@lDA3aRaN%T_\M-&),;!AXI&+aTOH6b'8'"3S`JF>Gm>d9hK@\W._2*W&gndMg
%V!fB;+).egnW@GFJIH5n%LZBDRqPtogp!FJrT['.3as^\F5(4N87<$kDJ"G>?j7CWQm+`02JSoVBLB!?_@X%@Xnhj[)MVnaOo!?K
%2EXh7AbP]1mFN$W.B:#d,K+5>38P[u<i@8M"Lda?;VTC0_Z?eZ?!)L(`@_cjVa5TBRDqY,245kg$`-4;;6_,*EiSKD4ZhusdY/=#
%.M4:>(g?I>>sa>$rUNhu[1nfBqR$bW7,juU]a-TlG[4Y>EO&OM9R*#>!%DV1EZ[u'<h-e6$8,dpWXV.)1Sn%faqq&B==]Y775^4K
%9aeuo>1H89#()uYDO.J,Y#;:%oCoZVl7U\dT:VM?%YDGp'+2@;'R&*P8_?Z.cGB%U'Kloh'bEUE;5:Vb2@48X12Onm?hAi#==57Q
%`#2ALh/($(/%DJ&ba,6%`?9>9VU1te3NMG,:6oNa:,P."DqM_\:?o%q3pcchAWgCA-kKgC`o0iOIumJ+)\#/8op)RhAKDYGOW_B^
%[(nRuXf%o]6%p,]%4gi:169fA=PKjS3t=0MGqFBYBK^-tec\^ICGLB>CJossc&;+(hYV:lG6Gp"23\Y,Xo3X@,Q(/dKkAi6kuJ5a
%Mq!`WUKY[`oSK7oTX!!aSAYQDdW,>RaP<3E')0hU>&T3HOHZ*lA#b:r7F4+01<">!>]Q79Tt3<@`,5]_RQitJL[pp9fmR1hDCur:
%N)=6#!dJb9Jps&5N_jh&K/5fPpJXJ(R2Ut2kdctQ][JC]Qs^-$Y!+$BIo(T4$JCU^_i,aj2%&Z:)Z[k@</)/=J+;NYKiJEk_5;[7
%F;-i2lMYu*?u\\)>'2WD(BXD_,9)a4BWB"<R;$ob6uDpofD=jqj5Q)!4dn#Q"I\[L"Mh;rRa;U;"G-c+0g<Ep#l7ho2B,3j*>pM2
%LlnbCLl@40S<=/bWaFXR_aYq4OpFn:b)/(=*!3,&V!<<f&:eG=[#m]u24c^1H58dj+*e!Wm[42#l@"IV!\)]6k-UXL+JgV>=d&'9
%10HQLR>?U'8M!QV0jPk!<ineF@nNsN^pe`"9gcH;9.pV%&k"=4)iDR")t@F9X_>`b_r6]kIQ/=q:rD7Rk4:@gF:&]^d2I,IedpNS
%2*&+_b]-c^h-gsGKnYQ)G_-iMmq.mF@U!RRk_rRR7_-53iphG)2t$2kf%PocW=qUP_G._sIQ.(uBFEmle5N?2Z?9Zi>:h@Mf05Hl
%&37N[L*";*kodPB.f'R/6Q3c!ECck$a!'RY*euRhT'^0%g)qTPC6_mfbA7ZjEn$$/bRV#nF@0aQ[1\rB\(0!N9[%6_U*#3pRI7$W
%pfpZF,#S_4PV@o[<!#a(?d'Fm<!'&bBFhhT&u:f7H=\X:W0M)!?*-ftEi>7;'18lqgDtV%8T_rB,b&D6HZdRg%H5Ybdr7[\N-U,k
%'J#8FX)rD\;g;]UW\stb[4l#4h<*rjdp*2!V7SR!b2P[(o1Z+ep1m/mn:jgARPb6$iKYqMUp%tRF6^MJAYl!IH/o1h!iDC[3s-75
%;q+a[$uaeI#k/<CXS7iHcm;4kRT[SW#h&;cM$+pA!^D\`NUGjiOpMcWdg>NjO%RO?dKr`fd`Q5Ekl`F(B<1:]"F(>+ToqaBPQW&B
%*3uZIUP8MiZba*tOpOB10UO)Q5RJR8S+g$K$.:%?kldEA'+2#FO])TBh3/16;UAnn8Hfs#TqNGt"X;^"^)9KGOFhZCN4<uOW)%$q
%VVb`KJ+9DAe7pRpU]T3c<AehuJaB'ok)iZ*%tWmYHuLiij9gm+M#/m8+aD3\1fbeei4uA\/N"LTF%2*?!as\,holi>b'>sR>\qQ8
%kAeuop;6%.a9<?,B.Xl?\\Ngdh#!LKFV9+Z:ND<#m+$0.dh%OEi&'<3"\o_h4!/6WY_V@Z:,IA7g`EBO3*jCIBLE6rKPD0[:a:Z7
%\93TIYBMYeR93t>4mqEF7nij1*E%[+i'@,qU2A)q(o7q,,J;e"@?"qo`/:NeFQ#AiS)+W:DpJha^p$"5IZpQabffn6-)-bgb5F;U
%Z24co-Ug(E8__]+bVsmP%_)-/Lo4t+CS-pN\,jqr.jOu93$$2"CXof%$\DiH7p!N(ZQ7]:DaC1p64-<#S&)`n)cWQ"c2ASCTQ0L6
%4N);T$"*9InZ^_[3^D8t?56A9R(h8>d`RN>?:j]"SO<Sl,X-ff4Hma9O$(=j[:\g:MRV+k$T9bX$3uEI?oEq:_24/E"RgC/G%2a>
%RP^*97jb*cPfY5ZofA7H,;Fk8NPp&T)tA3Mqr'&E>U>X/H5/1H)e#RLj*Em]15X%OL5Eb2]_;\VGF1<P8#q+3JsZIHA:EnkG(#L9
%D7"bhraa1?+5\\$Ulk)6Wh`f'd%T$+ROW't7:Ap!*!t&cHj%FQ=<T!##X&%m\WYUd*be-T*s](4n%YKZe8)9#%cCkA$%Kj\8B`M;
%&YK&BqLR(4r$HZE-6_(80j!!P"$Zk+`J<7IAmLLb0>">C$N^/Lm^7B$1@\`s5sGp:1>N\ToXRfkdb#&C0MNgWa>E!T2e.!/PbpkX
%jYa.uF^3gi6Q&W\(n,O"lXY#rM!q5co_.(<C\[GqC^eDFFNZtAd<QnDJ(Cf_[ICdCG)UMT&#2Y+[:(4M\(aV+_$73m-1Qn,)2oka
%)-lD'I^#n1f\gWDKa$n_J$!bH$hFmE<T:ZHBe-IQY_+6VSh+IYnX]?N"-NEg@pL"g@G+;KFYdEo;14ig%sL-t!Bua>;?n:9cgH(b
%if+H?U%FcYqG8MNMbBcH?$T:F#asZco#W*h4a7)4RrnoQ5VBXTFMKmK5l+5VpE5BUB]7sLfd6^/'^!RUdTYWB+kAZ7#RU"]&g8kS
%/eN\H4qsF[/qPE&iGrdE&g7@LCa'#E`$Wp.?3Kc-1+oJ?',N^YbmV)^]V_hVUati$6sT[e3=[Zm[&J(tCI<pbL;Y]3j#K?]11$?K
%8!g-0^Sk?u.=4b9I8Mj8Rg;1GA.tXN-8lJ$@q$)VnQjO9-R/4$Ca'>H?k[7]_'[TplH?8S^dB8@Hm2Pai"MgHT@XG^bUN6\q#iHK
%imJa;8Ap-V"T;:?&j93Lpfp];hG"PG=?WoEr/:]b<DT\QIY9rq,%5pL.=r=(6<pI*X.e%ufb,rY2gO3(?'?YB^T$<mr5@pk(&"jL
%#>7?cMCdVk/,6<Q<>pb^%<69/58AS\FCF7Hnb#&4Q][$6Q^@=73Gl_$n,%8$;F7:bf;9<;&gF`Jb#.6/6`?;c3Gk9Q[?f15C<\n%
%Lb4Z1a<jjoELp:)66i(,#h<+rB-68YR=QPPLJTRVJP9'<;Df5JV>VAZq3`<Tg&sr%f%Q!W*[&Rt?\EnfN+D:A(&n`%j@mc7adMQ6
%aWT$Li#p/4.>?,.5a"DlMm?h<2l<G=KTQZem2-]c)&8$pf23$:jF/h0c_1LaP/E2;4u.ppV*"1/6.DrX^a#Vo<Rm0l7n3ccWOF;&
%O\]GZ,A4T_,AZBlg5Qge)$B)[>aNj#]@a$ljbAfNYJPo3d"Y_6X1i=X%5-1oCck=q5b,&GJ4N$u[R2l;6CF_l6AWY&iZ]A\\24GY
%(G,4t=##GKhV/lc]&Z&Yd'$p_%TOLb!#hu3RWcq.5IC;\'4P<#!Tcog.VUe+i,Loi->K`L=^SZc9"42qNcs`h,Ik'AGT&fPB%FaL
%Nc>,lGFrPOW!gZMc#]4lJc'pQh-02!>DIuGS\CMT-hZJ8GFi]n8/CJa9\/Q(T$`k;L*8m<0]0BP)K1ue0JA#,dh3fsn:iKTieUXb
%3?XJ^"gJYHg^oXR#:3&p%Zu^-QhLkSZKu!CVN,)NU1,IQAVN`Fn[qN$$kJ0T6pHrt6kAD>+dr\&[#aCg4q_U['9B:j9_G30!.Nb@
%%mp.A?ME'*ZVkMP:"fit]5*Im=(&7;Gu?guNRU0o5#?BDe5Of>Zk5NG)E!T*@Ak7;nO)n=_[Od79k_2`3Sj3UCECg=ZF""qoC2L"
%_K:)K)BZ/Y-Qlg?$5QO5&>o3)H_;#@.&3;,a4K;4%C5BaKt+<FeH9@oqq@t5+VKGtDf1oJR!S7S_F3XN73r,@?Sr?"(\\0'#O)%b
%o)NdDC*"aB`6[&9k)oO_bp*`ACE@c.Y'K(WeT90'*Dda'_Ll+`^]LNBms9bRZaR!Y(CTl7..!XO?t7W5/aJ[hoo;F)d#k01TdC6i
%,)fJ[1oGnG)C]O5/H<N$OWiLaE6nWG/BYb&kGNkUUL)k6fQWZ)TQOA@^`c!/)4<-%"G2c\lQ.5Qe=/o6,`*'Ch9*nf&Rna@Zq)CZ
%5tk4uj:Z=3KQk(&+)"tF?Kr[4h/E;k?iNq!n,LGcrSuf5ra5\ts6G13LO],dJ,9-4Ie3#]qD\HH?iKkF-iL7JmWZGCLS+V=O2&(%
%n=+oOrUSR=V"h..\UH!B>k6d%rbiqZcd,tupI"h-J*F`G0>IE,s6''u5<`r`o7+XH2hE?5iALNq.Ed[.MN.WulqM7gI7ADtrS6R'
%q43K/J&P7RT+=[i38t*a/R"#?rZlo;`OBVsOXUi!V[c*FV$*LoF@`f6(7^SK8Mr&Kd.Fhu33;tlgBbNmY+4ZuBebF9S21g,0,EqD
%2m'/V@_;[0fSDP0WI\6"2:*N%?]A:c?jJqU":bmI-rb^;q8-:R-E13O\18;=-f&7LUfa&t'd4@'e[ofe?[>K)>abtSMu_eX`F^t3
%UC!rXJ+H]/:T7!tGL0^nq/0O>*hB/]Jc!<PX'Yk?G09n"AOM@ZHj'FsCM>E.2#C#ElH'SZFR5VNKH15gCCKe8IGBMOD6%@3ZU[,T
%5oR\E$O3se:Wd>VNW$j<$nqe*(<R#m>?59MD3=TK"tk29rMVPA,1=lTr]$;:>o:4%p!V>P,0cJ*M7Zn4"[oJ#n_Pq6Lhqj_2b-\5
%XKF&<.TS?aZ/cg\^YW9(i4>ct%7jO"(N6MG2%e$<pgA8\],:l'oh[jm!QR+2(d$Z&*Yk5m"ULr=.2C/qH_%]]ZM6fDMOu"J`AS;6
%+F,e-kkJ@%O6(<e\AE\UfZVd%PXa00Ji+9Zb_V`V;)eGqQluq2U;^M*XK4V24tW'2I6nJ@('DY<id""M;>6Q5Khpor?j'r,,*Cj5
%?'2R[BL9/k]&2-@;n9/]K*@qEp5DrRH"g,'o[-eVHYb@^pG+R4j\5m`+Nj2Fg+mTd+JY$<>C$Ub@.239,R"^<VMSQYX1eG#GG&Z[
%WtV'u^1KeC]-:+"3/$;t>_DctQ[B#8g@tHe>MF2q&b(NG+Gh[LBI]_17#KO&IHgA;#".Qb;.(O?H7_$m*t53Mr^W!LQ()a*!2Scd
%[k_X,CV6jV<X'3*M_n(Tjum[4CV1NO?F.1*7"%&BfLj)p%H*:&U.$1a0MC.`X]TH3]-TrPZr4tpV-`(=n"=aP-eXTLQ)0GK(N0/(
%&(Tn>d[Gsb&Ahsoe593K5ZM`'=!)Rj$kfn-Ytfp6!Pc*\]!PFeI7tg2cpM`dHoM*9%8W\V,Z_#KmW.-nl,OT26'p/se@_#m1?*8I
%ekLM[R%KU:5Sb`\6V[^=1_k't):;cmY3]Ie->u)mII_J%5Nc`hetMfAbP^J>!IQ+IeJB[AHmq#j0(s=R!WmYNp(0d%[1]UQ&bHVd
%i.Uq4VHG(3WHt[Zbj&da+"U"@8Jh1s)&+p7TW<or+\TG5TUTtSIMBY-YO50H6%l^!V$A9a<CY#a<VYM7PBM;HX6%l"_<3^t;n!Hp
%+#XZBS=H`WjIlSL+AEd)j[Z`cOq:3Z(OHmi'b3U:c+]BZ#/"Mj0\s'.+VnWD$?qhqH0"8<BZu0o(Y1Y(7+fMl'd"C57d'ZSWe%)V
%mM`8s,[8$^j'(d]D$g?G'uM[Lne-PQ2g-'`]D!EdJ0\u<Hed3)!k\^.8;lV^W884sF?>b(heEX(Ml;&NH'e`G26O4>66MO#]P+C>
%9,VIWbA]f[f9f[Aa*k5T]/%K>l/_j@W^m`cTN7XoWZ4>aQtU2MBS+`=,j*1fH5FkBZT=r<n*WX-eWqbU1J)sn#2:lKiURIn@hC((
%o%o).lqp#=Zb,rI/RE/):dPdnbr4[<'e$Oq:XkS1N+g%,;H:I*kTSTc/AQJXU\pT$#&C;"YhS3\5Qh(M[M4XppUlnGB6DP9ccfGQ
%OHq$;j_\USs8Bj-9eTbK>&<2]=cKt/BV<MQJI2>#=oQObj!c\A^6\G"[>cTV>I06>Uc>?d>6^<@9V_>C#>;'q4PYomi=^Z`ZX_0I
%`HQNB_pbmeL=$eM?G'o(b%CGN@XRAr'h\?"QY_fJnji&L7=ECeZ%aP2CmiGp_$Xb+Glb2O"t;NRhn2m/HG`^-NFe+*Wlp3(S7H-`
%#\]-/DgUG63&G(#s6aui>S/!sLmLQ1BW<M.0T\NXRkZ`%rsFc:Rr'uJ"u+cUYd-.Gk5h=@#GeT00jO&<`!\i:j(42b'>*&>]Zo*5
%$Zg9k8^.`_+f6s%G[@q9_2_U%bC:*p(6''+5T!5Rc/9Ub<_'s2"sq;s`1)HuE&1..*a7s`=_*6!"(o2`RaL,"S4\m:OSTX0o@O>C
%!92dm^`)K:#-f)nI<-"VhQt?q.bRnl=ku1WZ&&]'/&.,_'%<n#7(QBk,iG=,$S`?NeV4;2YLMaSddB78I#-!lEssMe9C6n<Wa(+I
%'3e/,!ih5h3\qB-VB*V)Nht[N65'?+s1Mjfmu(lE6CaS`OCmgoRr;+s<B9Y0MECMULW+[?bMMNA\k/\G$@$*rm>E#b>ir2saW\Q=
%HV6c\;upi]>u7e<qX6)lS"dRc3s@Z3SlUP.2i2L8_2=r7Lmpl%.&AO<Uh4jm+hN(UMA3]ZRY-*LSUO?WcV**A.]6%535IfXU@PTR
%o/JG<ZMqL:9h\XBm:LsnXECR)X0NXZhSF;\QjHd/L7=c>-!lH_Jm/e)OTaJ1*!f`=/Z^'Lcnna>G@>Tu7.[TE80u58hTqLmj$H.2
%(^3Xn][FB-P8>m`G.6#-fA?]&n62?d.5g]TnJ6c5Wbqhpd5Ik:[7KUkVt2?.!nmYWJW#Fte#QR!"R\G"C&flc=*/=@/MH6VJn@j^
%KFmbcar%"+O00g'J8F)L)Kc3[!7;L0=iHqX\8FM1P4\M)HhQ+K;9E>qRntAp[UtcPX1:h_0M!.0VV_A:9F<nK)=47;"qb5W5J)"4
%'2]M%jZD_hXP24jdRoo=Nc!<$8b=(li0VmnjO&5+/g2I'`f-dh+Rkg]HNb(hh[bu#FMnto01!(iOs6:Ybs8dZ]5:%II!,ULn=k'I
%:K/_0$lCONeX:V17YbG0Rb")iGIfmc)!s.L;!%hjiF!M16'DRo'=m6`"!HeZKd9;&X#;l7C=-6b[QsML`e'I"'m^Dab2FdfN2#1X
%Ts$-\Kj4\a$m)adPjtLu""d&?R+ZJ!]*XYH<,+aWlYJ1k.iUdX#+g:C2X3F:=iWoi&5aF"StU9WMaJJs=sU=8=4hifoW"1RP/p"L
%4!]]D&rBE>gg=ST&D,`qd=?BVekdo0)P%B8e+@AFhj_.qii[m7mh$,B%a+r`aDM("+,8EGc/BeNs*)mcLPLCZou[f+@1d^s=](fW
%(Zi]<\8gG@Cm_u3fF2*=&U("N2%H]$l:LU8m'mr\I8t^9LMYK@G-OGRFK3IMfZRecmc3\S+3P%7<Pj@1bcV%M?AT@m;"3O@4`j::
%#*5Xa%e`M9_3f\TX+L"oU]5tOj(>SuU9?0AbV:)*]]g<@%L+)IZ*q)GSbfqe@l;('IA]rH^7M[S%_Cs-Q#K4@K6lA8ri(i5%S7qq
%#5#.`LV)qr6lnU$SoGj`6F,=IFL>Nc#Mcmr6Prjh8Pb*Z\<1Ys#F06JmsqR)i\q$#kr603D/,c/IH@l&](*KH&[XiJ1c@Zn1CMMI
%oL)uE`,&6lNX$*U[`*rJ5%7pZh4AI4O2<YS&oD&?1d<7PRm,3/d&BB-2OYl*4=BlpW<X#<lpbhI=gVh;Q9OJ(A0tL/Jiu`%/\?GU
%,AY6P.I]iS\!K+QRU14MX$a<RkJr*[1\obKg"u8\?7<W_ZCXKKFd6LCPMu@oE=6IU2^dBu+)jqh&ii=e)@j8l[>\1U#Sm>[6G$:3
%TLu$YW3Sr9LsKGrF'Ek\5d*LS0'>CE^Y6>UG#q2Q+3FI@4'@<f"jt>1[.KG[]2kPMYKTuQ[Wf>6S<-/UUZBAT>q$,^d,7Ab]V-gl
%eWtMLDFQDIlaumTH1dMD*I1uH%8M+Kdss0NDf8FH3Z<4_QeeZX^%p9pZ%K=7JX#!]NaqZ3C/hoZrpCs6Q'>mBSTK+gF7h/MPhVr.
%!+\;C<b4_S;N@P",t0;o*I!m;hjh761$_hHc;g\XQd8D/\j3p@/@*2M>/uP/HeTYIPt::1O1s&:_U]G3E-0GU([]cJYr,h-eK`kI
%lfeUciZ2-0+^'TQN58Cl_DgnFkViZsTp;q13GUiY[o5N0ed5P-VL87b.dUta_YT_o6$,FMm^A@a+7_9&B)@QtQlIm+njk;;98lHW
%da2!l:a//C['*RE&;XA+SjlF#7Q&/#\q5R)LBn#:mNpsaigj*f*dJGXh59<Ol_/Y9k-7i/d3m[ML)4rV2^oIa.+11jQ%_qr[1&fI
%0%3i9Q-jh-4(uU9JCF`H[r!beJDM/L;k*.XU>MqB(Tl&mOWZAa.M#)g?ZQd].l`=6qm2A1^PH<H/]q9`6kq3;[t]qR&`1tK^FVpM
%GT'r:pa@Gs:%:iM!j%$teTOU%ZB(9?08U!V.-0O=^>ubK%hqcHF=3a@7\I@L0<;MgU1FoBCXo2?\nm^+[%.76+sI7Ll#+f<3tD+q
%cih_`k0g^\#8E1Tp0KR^dKaCP,)I%9najF-SJkL9Wt#tFNjMj,-\8b9`?(aX59ut4H4R^#=?t.Q72ujMG&u^4n-WH=MZQf*2=9UD
%$OK*0qYYp^]BP$FUfOK+_;]LSM51q'COT,3*a/pZ$d#?:.mX2gY4,X.L.Kjq/ZZ78`b*Oa0#pBuU73"LUe$iCO7'Xh=f;O9O#l1B
%G*;!WV&JGH/$VoYD`6K;&>7G<?3)l^0.]Rs#ubXtY%5&SRC+osG;1Xc+UqCF#7*2n;[*[/_SD3<cWFn!1V*K91g-R/=u/=$YoFAX
%7nZDf]\Lbk3#J*P$<p;EKeI?lhR$C9>p_h1o?,ZSarkEY`JepXCRV#V@qO*PXb.\R-sEYQII:BIr1=L>D(;CAq>]CUi8RpSdk.Q'
%Rs!aDmrc3rQ+S<#2%Tao4OaJfMO/Cp>iS@4^+='>!b-%SY=hme=/%hjTNq[H'dKf>^uLf"(,,c+HaKe9#8i_<=Y-U_lbD%*@^ojj
%0*Lq.G+"4G9pl*4nmL1TjPkChh.'j;+jhpe5qna];M'._]/k4%d=JIZ;NnK48nG36%:=<Pn[%?M]Uf!X#LATc;\9S"OPJT4a4hYO
%WUVn%\uYoEF[mj&@S=eH^)HC[$;IX>#m7599M4?3"JaR10[U:+:5`^-ZH9U)VKOcLC"Wh#lh@#Ur?_@]3#jh2eFdN6#$QASU`bb"
%N:^6a<f8AG76_Q^VJBYKi!iUo+,!qP?:+ULfIBl1jJWGo,0Rs\2@udUfVco\&,G1lK.Gu.%I0c#ZC9dH?rkTHmZXpj%(C<,B:)$4
%ph!XL2V*gnQ!\$Nf$30Bl77%6fqX>$?Zml?[Lf>?OB<N2Cek2.f8,m4[LJgL;3\hZ*i#YMca4Q'&T4>r]>?)rU.AQfk7poGlUW#<
%id%[pX#KnlBUeNI4]JY/0prFJCAh$!"d:hu[EDZ9K#BQEOdc_\:%J+g2O<j@n"cFVNB:D$V'(/p&/@HAb1:5sK.h=)&hT.E?IMs'
%$Xr#+bDJ.rn\/hfQZIE%!YOCD!/,S>MT7!1pHbAkmcMEBpr"kXF(OD*6SF,n.#ah9f=&*CVW;+lSbt@hld,%[PV@Qd7GQU?71D+0
%e`O0u+chE46G.l`U!^$fX(ABS;YD<H7`>!?4HC&LDMp`Mjpct$Bd$4"UR0AZ9"u3.nZ]JL@0.3'\*$I'gkmuLOI<?#0>H)Za/hkJ
%1\6mu\]1V,*l/CAaf[E;;p>I7ojd;S]3%2m$qHXn)n,"lc_ufG(g_IurV'p_PRoOXlugWT5el,LF3o<'2&CaPO>YKP]_``NL]hdY
%F@I[/EI)0aDm$`=Y!`0QN@gnVT;\9HDs?%VlqH3"\e^3M-nirq0GdgWQCi;Sb!;HI+9DZJQoG69?V;Ld[(c?Q&\8F&0u=r\?5?['
%].<N>XWmZ,7h#Vre1ARHl0kF3ae4jPQ-Q4'*88_e1HOFKTa71$(W5Xl^:A&3^A'D@`L5M6js,dj@j%KXeH$e^EMoIZVXRt!;]FV9
%N.;b-i,<Vj7P5+S*1G.X,,ME@9`(*b]L'"oNVg[0B:]`GC#%9bd=-fB>q$OP*X8mVHmemdKjYJG5l<U&ca>o#kHc-<^BW6UX]@"T
%ggCO/e4h($5"mo2_!p/_*0[*(N7/SEm++R"0sTJ30s`5J4dak^>bR7Zl.jM-e>:/7R#%jRWrP7@MQnMp.r=;&=4eX`S\>uYBa%m,
%31=PsE)p)2B30L+S/<'_+@4[QP['WI_k05"c/r#Ap>sL^fYOBXb9"^,Q83<d[/)BF5pGS"D:Kj83eop/@0='"(:b<jC[e/S?%Hm,
%Hk%PKSt$fgTUY<ueH36R9u!TU#O_L^VdA!-5"%q#n'l`q#[ghuaqc5;V;?$)AjMr_TUf4_h?!1hm@&QB\AQf?ck&rhdJ;aY`Rc[-
%n&&BJV,u3p,m%>JjKT.o"`r^Xg+;(e@ZR.N7Y.e@gQP=ilF,:N!=\B<g7CSfoPAkqf$'O#af*-pU0uU,l!MB`h,a3noU*79V/tq\
%0ZEAL+?HM?c.okQ8jBo5T?kC$Qk^-%Y]O;VTZ(jQ7=8M1N@tpj^d>Isird$#"7t_/0>"C*``rNX;A$F3.F5Mk#_2iH#@3hP==SVS
%_K8FMLRfh]d^lA3*SF0Ha](BmNhEg)%TQ\=[e&`07MLY]7_6@&W$uTrmmDM`8gN<5/bUOm&MJ;bi&0(S)"(+XA:Q\gA%<f)(<''!
%3u0?dGLCc@]?5.8r3L9jK=Wfj6sXLDkA'iCI$)2t#3klP4h!%Bh.4GFe[l/U;8@N&[X#[t_UOQZBfRR[DmtAmS7OlEjYG'_?'0`A
%eO@c2D:$hP/M"CL>1]q&CMWq(pU$?,OfTqM03r9["[oYf9c[Zf,Mc9>0-DB<EWEDh#djladkJ*6n9N?B;8['.%$0ai0^.P.^bQY*
%#mAMiU3WD!^anObY:V$hkn3:lm$R'C^K*5bKS%YCW/*>L&d/5Dmpo]\)]6P/lTn7K+>Ue,D/A*-N<3O>Pu_9I#PqJ'%>Sd;dCs!#
%7?AKBn,4r2<7(R-&f/CP:NEu?_Mijtd(PaV\<NN_&i(3oZ[`"\#?X5^KIuI:00`BuVE\!%\r\m!6f8A]#kD9ooQt:f:SkRrh`<Wa
%hYRSKHPiJ$34@L*_)`oS5uVd!n.PC;ECY9Z/9F)269apqD8$+YXA=VE[u`nNi(02I7gbY^1]u%n,$H]f_`Uhk3AH1G[M17#=Nk\f
%"?5>_e5\0EF7W_i*bce2KAk!@(F?e-;k>$cEP%;jO,tICf!30l+*c;]2>@q9]@4.t&UccQQSooG<S\^M#"M,@Q!U..]_.JM$MZ_I
%(DBV5Ss]Q!$YI"qfL2LOUa`?R>.PRm:u'ol,(2^0dlE81V!k)q1PcSC#$:?JKT)@`GF*LbN5VK@hBp&BHldBeWA)%m6q'@'V$8_J
%2g4gDP90qRTojRWpVH3e,T&$t+rLpC8tqH=oW=J&l+BA3dlglLY>,HB,)7'F0g&X=2Pm1XWGn"+/9%2/?iH-Q+'639G,?ns$A^uq
%.tE?m5!b\Kg2Y@W.*u+RM)dqO-Ee,k]foSr=bu&/S"?(Y"3Fu_pEn>WhIhu6B?Ah2<Sa:S.o;hO,Cj<=m?aq5k<Yh&l6Vq9UX6V!
%3l=EO0?/i&"+PRr<*tYlYR[u@9Nngo':D.<8*ED4X7J5#?_<[qIEugmqV"("Z;NmZl,ehE&W=QV@QnbA$+;bup?X][Bl(*\U;4p[
%J3VC:);k"+$E2m&],e%1;!)?5a'0($R2L(3^-=hRhi3p<_/]+/"e%TOqF?KHBjN^5UCV\M`ZD^`XOd9+T"!HF4H-:/(+9X.+*O_U
%F1GFeW@719c_<SM%3j0T6q.RDM@0Rqbr*Tlr>`QDm,)V1MBi[`qi1iejF>Oc#E;i]QQTp`L7M.,"[6Adis]-`/Na]kjrUC'[g]t[
%JV._q+U$!]0d5%6o#*+8W0+I(:c?[U]85>@iJRjAqK?7U4PW.MrmLXjX%rM^F@/\6s-cSsn,44b&(),/1:!T5@ZB;JP@%P%;^#3A
%[T8C9p^DJo;^NImmHWiRPV':Ii\nl/BqOnQ'C`Je#&0+'/+gfR'Q3R1_7b>+#h82/L`s8GUaauJMrV,4Hl6"="l+ttV4;H\2RYS7
%0XJVVO;mWSp-].NQd<>qgB/]SO#9EaLc^4VS\o;jkO\E27G>XOEf3BH8_D,/1U_T:-[DTI/nL*D1&,`kKa>(H%tdZp!kmMemCnV>
%UG\6QF/PUS9g+&2[aI5[#Y<fE@U+=@KZ$m&-Z38UkPRo_H$/$cAt3.>:t+M]W;%)Eng]SB6ID7JYd(=@VSt-&P$.OWk>htSG<g0,
%G,l%ck$HIt_X'H*JgJTM%Mgj\DOD5/:oa7YE1Z<a9d"%qFTr">ac*DPJFC5)OU+N"H5Snhi+iJKK:'TWAF%V\5-u.ApH"=%K,;14
%#"TnLfLIr[O)dXUiUE(?psXNqqUnT))=/YI[Qd?+1>XPGfH9dL2"nrSG7rueq$8-KhIGAt)1`.SP>QtVYa+-f%ssj/8!S#4DY/62
%.c"@XOpp9"icgH:XXci*1HHX&eaU,haK9/?U_+JD#VXjeNFDB'MV2<m<]M'sAlLeMUl/MOBRATee1Xkn'a>#KdioV>QES[U)ASqV
%B!?_gi8^bpPn4\KHN'+MAiM607bGYGP6:IB]piMu@2c5e4=4GpJ!/$GXl;\G6e$_9&dGHoRs,!t?4l$T*O&]WDIN5e_oJp`b]%q-
%ril[.CIG'h<F$*edlb,'b1=o#E=*PWZ$*B&hKI1g>tcV(kSjs.Eo@kT7Xf5Z_cT.P(uL*kE,'')FkAfF:j/3Lb8Ie!_!g.8H8BNA
%n"4^n4`H@SS?H&=r<",?8@Z^*PIgt7:l4#Wf>7C"nb4^8*Wd"]"nh$<V>3]/Utnft[DT9QTZ0%N>$h'a_urbk)4oj7p+J+6bHP$+
%=9oX2O.s9%f"mj_9qat@\Y1e$Hd$.m=pP8BL*pXl(M8?HfR9]O*'td;UE`mnUSNE8)esS@L^*_o25#8=kG,oh/X8=Ve[7.6OB8RD
%$`%Trq802:#6G!/ae&5a0TV4o;E<$^+mMT,GQ#EpaHs/F`=d(@n?]_Hki1Ad517:\SH0.nOY*b[Lc`$bAKlhSg;Vf1LJ*obDsY7^
%hW9oTdio.('ZC\@U/+2*%6b\uGMG@Khcskl<u0[2-?_]IjW0Z^"ogaS0H_/@1MNnR8JYT6P>,I?G9iq9D*"4*AT'qTaNnGfr"+Vk
%Mgl,QAW4ISd]&3sA&9B[W2!)(ZeCV$Aui4OI)U(g*,/"JJ^/DJR=NqT`IGTY7#<<A*>fCCV#+PD=r.#k=`)u/DhaU<=r1he[%>Hn
%:d<[gi7;q3(.F0i3)No'![^1u%"VrX2a1M1XP:G_,#iFjh&Qe@Vc5k.ApW/@.j[L/b(j:mFhW_L0=^5RMu)sQ6AIrp?\EW2<qtco
%fS=.'#8gtF9Y#:k,-lbM\<"sT[7)u0/A'*aIf`,b'o0?0<-P[?EW)gscte1R3mk$B>C)psWum2b<>30cUW8rC/NPd%>G(F'$H[7O
%)t]`hpr*mj/@8/WG0EDEr4^e/^PZind!D-86*IX3MWn)sRj5J2>.ITt;.<pIN9."A:gWsE^91O*UF`;3A"AaUl5e76H2AIHhKNJJ
%2\T0;D;e6HK->tg3M'C>o,ND8.7X7\PB_7pEcjL>SDNo*3GIsJGandogFKPgdk``o`(:DHGT7]GU+&E^4;6K:no*?o6Ot/p#3,->
%#\412&@]it#)jd]mc$Pb&`m%Q;aE$RXl"iR,MV_a[\=JhQP=R9*\1lK!e+T!FT9%NLG-!"Hnjt&L>C&E&\kf"31TF)LaiUJ(tdPl
%?j-'JKH5&HjsK*4=rqa6&4OBo0iS2d_?B+Z.U7b*[7[!=mY)%b?LN]$B#Y"Ne;<ic\AlAE8e@,AoAeM_&sO:&b-36eI!$?P"imD.
%q<=;Wmisg%_1[N0a$h-@lkn,FD;GBr<hW7]2Ka7>^KFdg-JTb[fkre1+`#EGbS\Gk.."hqhNjU)P\@$OE!)'_ec<8/10YQ,Ln$"a
%Jf#.f'0Zc@YTlYC>P";0^F$@GLTb`9-6J+Z^N-P3X7bN"W>O)dh=*kK?QFk%%)M7FYc'o@-;"[OEX$IQZD\CMGdDD]pe\59]mft9
%j]gcJ[mN!a##3uq=1$BDUs!r(2fj4p1A:,*=l2I.?I&S#pNJ#a^npQV.J6Lr-W/j&a0RB/i"ZqWHaH"'4U_%FDCBt>OG+#cESK?a
%n':=ba\i?jr:%U]m+F]bM+*Yeh44*D=GYWR.^]G:'Vt#0F\b3r]FSh'"sdT&DMQ[7nk"EcdMUqg><u;*CrB+g8FAs+@!a/SB?.E1
%5SsuD!T0.m*:G*s^J!6D7?nL@EcrZH%9Z\;G,fNC,!<2V1Q9Ca6_?7`EbJ=^fnVrQJg,t^%2s#E%:t.oVCPTNLgP_O)J1`[/>g:9
%:MFZO^)grl*0R!j2@b,4SAoU[iCC!)E!QJ1&b_JG'/`]<^K=YU`EFe-oD.U9-El]"bZ49HUNf:=!K4EA\3I)@)m=LPbRIQcitPLl
%0V?X\+/5GkSG@YIj2a+O"QV(L(90=%.hFJElZ`+:ES-VK+OD*MX>$LAD5]\9.G-`&,mi`%'Pqhlda_8o4kK](^`O+,o.!CHp?7%i
%LN]"b*DGL6[f&CAjKQ!P40iJD+-@[,Bocc:05AiPO@k&X[YTgMlBOQC4l%8j)#+W(#+S>K2a/1O2%FFn_\pIE4id3JL&72IBAoGC
%Mdj=aI;Fre\GSZMQ?NDXhuUb'Us)Mg(R\%>r(-Q"6q*49r_C$N?3('`-&Obc;i,VjQa-@bX2AWdXT3(17Q*1W)hq:H&s&5g/j;AF
%OPh='$GLcj`JYJ\m66`C&!F7C)9>`d,[S9@nsY0k\O0&jRgu2!i[-Q?Q(.M!UMoMXjb#a]QJSm3U(-T_n6$?1JHn/rKsc_JBi-G6
%\^GiN^(ZYfi(r%ui$,0"AuB+?E$l+hE4+.`p<nprC-!,)e`=K$?KqZ"P,rF06j_WZJWY.@ek861YVeq7X,!XEI8uT)2f#kURb_H(
%@#SP=o+8,+S7"2r"JIpWU6FPa"Q)OA&YWP2cgnqM'!+dUCQ7Ej9RDA=cDCVa$BS%o"%%LOp&+3Z:tM=HZ`E8X?0-D3r&k=8>4&Jm
%JXQS#`_8PB6B*lKIm;%QI]Oi?DX6C?HKlhlGp,TU)(U5ak:^fI4gH@@FZn.qE:'5=Jjhi>d"Q;La`:a,KCE8XZ)g-pANB6F0?k4H
%qBAbr`@ra_^+eXTceH^11Zo,p68).:Rfgg#/I_(4fktHR_Nk1od]X?u?m,6#kV.?5bJi0t&i`LTRiIoIs7cQ`YCHR*s2.)$pm6L0
%YJ9sihuC/mrqkktr;Bt'p?'aYgOK"[5Q:&br;N=<pKrCFX2"J"^]*c`?[r'Qs8)c'pZB_G*(SlDs,+U9Gi"G,"uU1JF]\5qFsBQ1
%dV&in1a9u+k?%ln66sQ1p]@*FdNAA>\+6]iINIti.8q!6o1Dtpf@=#,H2R6q#hja5q$j_//c5edhChYYi?%!qi!_1k[hp"g-J8_j
%l^C5)5DBITWN9\OL-&D<ZmrS5R,NY=!JNcDrZ\CQA?NLE]OZ$"hcS!)0B9lc>7\dX#q9s>iXI$!UN\kYj0q+Z+H6p@G8d@2BDA7M
%7^'58%^4.Agoe,F9)/)Yg9qT;DVAg[p)JsHiS(4]6Y6j6?N23-g-kZ`=G`nHYYqb=Ng7%oLVL5g*+U7,//(PX9YEo@[\*&UQ`7#(
%ld"@*F6+bHY/"r:[Hn'D1r.,M82o`K8*:$U%tg#.=?HTu6Ne1C;?X%m&&,op'dDXlK(m16il;.0QM0Qe@l55\0Z#,Gdc(TR-BBT<
%Ep[Y*7O:J?<)pt@8TdmNmq!KZ1+bqWpXMgo.9*6c[N^;dqb]*jX%A@<M6bY-6ptT>71sQWmnu&BYgTM70W85XX!NIh62Qj2_?kf\
%@CmL^!8+5<F:Kk>#SaJ%\]bP5g=38(A$K$"C5n6^b$L7@C6gt4^AL@JJCkoOf'2`:l#/\<6#b:&K+d":BEQsieZnpX[0+N'VP4'e
%/T+i.Yf#%O@S2/bN2kK0N=UdV>87qgZEObmQhAX(:\8t&DuUrgFIgLC"UGe(UDQq+e;lDErhMG_8"&]K13^+,Ya'f=5?2+/&E7A%
%d!=.iRo7cl[%82-e-IEMGl3^u.Yri]!nQLVq/W(X<F7U1KuG,"KFe8r?HU4jJ\KdI;&"eaEh/H,j?(PlH_;44qXk].(1(06PP`;d
%0i+B62(hKe)e\SY=SBTE-ho*HGOmPQ6O!sgYj3b]K@>5,o\!b@:.*!)(W90Re7+8d+H7i5X_qL3^W7+,=i5*7]qq3Ba\C=4_L[CO
%/SPF+Kg!mZ[GXA2fdi05H5+#!?@%(%?[[Ch%ec&R!0\M<`*H*C8hOX?h%plqUVE4%+q#a%ifCE&0im;n:'-m!fG#+R7T]<-@#YrS
%7M4Sd'u4PD)'!?f@bS'_%MGnp2<+Y!mi3C4$E-C$k48T;]:,rI'&QQb1F1.)Fo)4!7NaQMa=>&D(I'Q>XJTr2c"2R4_JDc0<Dj9I
%,WCR7LiQN;L>53,5c(MCUaP?$aJ8?u]rI$Gb]iXA_;uG5?4G;@Bn5uK)AAF+ph<!'@jGYW@%ujOBP^i!I$-a8#XmSkbE\C=A=/Cs
%L^TF?,4D#kI*o9Q=5EGZ`jFhZgNp34k=*hD'#[aCP'4pg^KAG*8No([Hj)W:YOaB?o*\ATA>#2cI;-U8?MTe2)9=rL_\g0K<l7"`
%)Lgl`!l9i)apB9?h+"D9M_;_Z(\a2k1'FP_A4ag/_\3Y/^C*9E`#OLC[8Jj))ksglC]Z'H=[<@7ObD&_`!$C;q'7$/WWcNK[8^Up
%[5Q&th(kni:KFqC+\&5PK[a:(.]Sa0eoH2JS:QVKioS)^)LE#Y6%jZqmCZ,<MnIh;I&RZO$;(N.Asrqp3tXdD-[ZY3[$!H4]/Mjo
%F:9S7mo70V!,NTK;H,taFtk4_!5M=V%iXE#1OXM(F%S8_4%1;E0s'^*3=pi$6D@Zo('1OF6!DQ?Vuf8NSH9-DXhp5Jok<."I+(FP
%8u\iJ)F<*IM?-kD9c\M;=Z`"MOqB00%'&A^&hHMKP$lHICn%IGo=AcJ[P-2i)1S.>>DYreM4U`A5[_<i)@+5/hW]88]hLZBW_4lX
%Nn$(2nCldL_E.OJ-IFrE7,&ZK7%NUgE,97D^!RRU!"1eaR,sb^:ET#_MPeb0AUW9["`d"1IQcLhjTerZFe9>#:PbM/pLYFtqdJ'=
%p!mj6;5PEfkV@[p*<YX"LV!cQ5pPe11V`4rma>+#JW1l8nsnV.L=\B>27ucfn4==bJ7Ls<Z*=&e]j4p2dG_`n$e]8mG1#9!lt;L/
%.tR.Cs4\mj-^`H@pq&$9GP+#S;ca1R:rLAuJHV=OBOsBVG*75YF'^Y0K'IB*OQ(s::sbS`!CuG1P*jobDK0>s)V=#>41>uQ#58uc
%<C?1o(jee!.H@jIWt0:2%h4)fQ3ZA;q956H#3l4XgD7qCN:nPA6S1o?-4\;McP]:jb>sQN.6:JSMB7qf\gErFhN)W:Ut-)$gVf(3
%@:i9q3aaHJNDLUfBT?$3Cd06EWagrY3&V!rY>$+2ZNBRqQqj=A5\GiS&6n/#9Mj&c83k<oqe$,ADk&[&h2ATm1GTWi7*q6B@),pa
%^fYX?4bnl+W[GE$#VnB`9YjA!RE!S_9TL>SF4*qq)#9c5Z,AD+G)^,Y3bp;,,Uiu%3L1N4&EJfb\.=NiQ,DN_/TADeRKd^W$&F>G
%_/+'W1V20>gi*d7)o4,uXSAH(reEC;N$T"r#q^#qF,9u<5W)o&Yr:5a>18oGhhToc);.o*4%*Vo11""5?P*MSniBWW%eX7&;WF5U
%]8XM<*eA,2d*u_b'uo^hPY[tTaG&^k7P4uQ"Tp%P4UNeC>k#$Ic4$?QEMh2]oS<meQ=;^rU?)8<>:CZ%lBlnLX!GB/0sciLRS&hZ
%X(>JYLk7l$6+<*N+@JpWOdbZlNK$65A>?R%+<WSqkNGB6%]%T@f-D62;HaG?,p-VS#T4]5)Q(3"(e.9o3RGnG.s,og(NS"+SHHO@
%"%:&PN"J<C^<GYpr$;TbJMS:]3m%JI=NlTHJOsp3YmNC\A3rE04qRS,S-("X_s:E:2u0p+!XVG09B<]Yk3VlFPG2KAP=/+]#^9u$
%L,_aY/'p;](Z;hQ*OS9ChUCPr_QL-GiBUsE+j_HJJlt?$pdk%m+RhM88;mBdc\MV]RZt"N$Rc'*d_-'.kU5dM,%_Cgd*=.]XDJC(
%p6BIS;+l)Y)@sb[B#7<5bVFcpk)JOidVoE!<h;E1h7R"X`We`$9&]%t6t@u7/>c!.k:fIN);rju56[p>'(po62kD#`+XC24<X8^!
%dB^lK'i&90a/lsI7=j!34&"$O4&FE@@ROtU(hcSCQU#IliS'Q!CQjHZlotB,]`<SW-XE!*N,b>C*3;ssq*BSO>8?a&Bo*Z7iBWuI
%Z[-VW!im6#TSD;Lf.u0:JQObj(CQ[+_qPZTm+I0?WO'O1"/1X`kgi,M5s)57/75nnE>^/W:C:LZ'NeV9&JHT?F<RAJH85&<Lm+Zg
%?GpX&dQ`WO#9KBn$\<jC_'WI7km[8P:?KAl38o`ddG)ZaCqB<!JcO+qar(CQ`,,%\*u"@,Z\Pr-4@@:HXU8o/%1C1f'mpEc(7C-S
%$&1Q4cN>%7PHERi?#280Abm:8%@*-o*RC.oTS\YLc?b^&5u`@c]54XU`5P/"q2WlUB/EZ%7iHsp*m!BCOQ8;0"^sjA*nUUO\8&.j
%q7@F@OrbFa"@gM4n-#+j26f!%!pG`0V6m+f=5".h:G#"mdX+X8ip]BpO=Z4:'Xi#>3lSG7<E?`,Q1nPn5mLHo)S9t=P]J_EPJ0ur
%;57ku&)3n^`!RhLH'&mh%@FS\_I>gp(]pOR(fI+aJa!P>>sS`q[;=&q-1\XLUDUuefWm[`l@B=r*L0VZ.^CO.6]PMSZ,!c_\SEEq
%@X,[k6Dl786%pY,7NGm"9b,E8k2!9fZC53C"14d;OR[oIgY+F!GU:?A/1+bl(s]8a\RGk>$7<r,VQ!m(3:-^%:*._qDuqK!#3u=.
%RXrQQF_<@B<mYCp`2"P'[[6&lgI@i'bEA(nB6d5Z(7Fh_N*7U%A;T!3'B:pk7q;qOd$W/!iKMSck7kYU+LL*sYB@d0-(@XaCj-#4
%j`cR9Cc)?\T+KVl3Zl?gBt-sS0OlY4DU8YXc8oL-#Pst6ODi5W"*C`T+mt&:$W*\[CMOPI25lQU0e%Y$UaB.@RXm9\-5QGXa13]%
%P)opbLs\*rNg<9YkSd*2m3Nkb"1H9U!CqYo2W6]],HhG+#Aq!Y2F9K\8MjYT_:ZkjdrVb]RM;3B_,4CsS@Fqoh6ooB+HFfo2;sri
%2*n[mQ2tAD&[!T%PGDW]p8>u;5bCH)C@Z<b<5juerQ%:DSJ["gcOG[r`3toT?4UK^?I1bMC9]f^:Y&%/o,XVTp(#rt3.-3F1mFmU
%B1_I!kPuaJ=d9-V'o6:+ORfc)R7%o_bElOpiRgW_1;1ts$X+dJ=Be4)kpQQ+@dAfBN_+IWNgC+u>QZ&7lj)*4h5$@"5ZYGk6o&qE
%9b1#=G\rn`NQf""P`c*K60R;sJ]1)tr]CT"@F]%Wf][jd,8W#L5V,cQf4=.VP_7bMFdd0qU/o7;H&,rBn=e0*n!#UP!bQ9iK?D\/
%AP$!:9'VTH@S%1n&OiqJM0tqRA$nCko@5F-FTPso;cXc:(._b,TeaE]"NapjT*HJS-[#tIO;pjRZa]NCk\LGsC53%g8Ee,#"4^$^
%&,7&t3)Dj'QkC/9Y"A1?O+Q9EHAkL3@@Sl2P4"GNp=70EaU$BfS/]3+5nJ0eHs':0DBe-C+u6=2%*Vb'e\`ZJ)R/@g67rp@7#n=c
%Y>HUiH@tF,kp8EhPgO2A]a4!l!$aU<5I&U8$JQ&=Atm#&n&g@M6YZ1n$p8<ne/HgpT?1f[[;-"/YHP`lS-b*^5_Wu#A,-2n"K)O/
%3bQ]q@0j!Fhr:G(&mYW@DZG-m4>h`<_P$7h\2L,,Jb+CfBdeO,+VP.:Tp<$<o,Q,9,rLb6KpS34LJhW6%tR7e<VYQV917aNlL9Al
%%C9]B3iIBMBFl$#a/WM%g*`N%Og?!We>a0D!o/Y[280']E.Pj:cKUT2?g;nK.OUR6-!I`JMZ^+(")3:.5?QQ"gZck:j!-^c,77+e
%C?_d&.1suC]Yq?T773Ta8d?aW)GLDA6+jFf4iqe0Jurrk"*oP+'+*H)2E8QGP'MjXg5:U9-DtTaeA@$l`ds5O$A[1D0kb&O6*1se
%Q;>k)\r;V7(Gf[sW\gWHf+<DVf5$#j(u*V5]"hn/j`t&R17=iBL"qa>l1M]f7=!^oK:Q@fR4,oXf3KQ91!bOU]-W@=^.`D.V*7Wf
%3.H08,ZW20\JU.*Oj0&><#+O4)Y/<SNqdAQ<_LXZZ[isAOQ,aZN6I&p:m)&aK7N3>oejI$;Ib&RbH(bY6:37V>:-Af6?FYU1ic<<
%1bC(ppRX[+l$BWqCk1^6E7K%\nM\9//.n4u9!iEt8f.+5!JUYZOlBlRn\S>4>9VBu]hWfljgI2t0^h[C*7b@_!X'-6B+BJj#oJ_0
%`hpCHq<S7hr..4-J[Co]TC_I/q5PZ1Ujgmn0&#t4*1Lh>RDr@0:Xe_sbp=_C`%3j-f8^bti$fn$'iU+qi0LCs7]KpO!KKUu@.jrF
%laX;Kgq)^Jc[H!<^`l`H;BIG(#4Klh]:frp5aNi#(dL[rl0s(>H6_nfV?Z2b-odMRbE@*JUp&dSo%&D[,fft(+:#bLE/0rM?in^l
%ERSs<Km!JBP_FU&0F<pRQ-@dnS8Bc0>Kp"c>,LQ]0loYV8psN+QSrDKL"t&TgOq58`5q:]S$?23lNEfGBg'("$;U[Cb_`p&%!F8j
%%sRNrrJdSsYY)&ABTiX9=-Cd_dt8LrgLNl$5R<`rR6n"H/J*>jln^VB$DO;SMd_B.">h3q'7CT`'Pl>XSE(Pu0'O$*#+Ta7%-S[e
%AAQ1u-oL$s`X/CL_!'g/U;pqJ#,Z)&_DBUN8Oqhr7eFVCD$:oJPl`/8&I,bR4<X&Lnuj9E@iJ$J0g6?HfZ9"@#2Zm7"iW1Qa-LE)
%H4HRM`(84jXL&lXd/C2bLZU\>MHNA4@<bNqHYG0"n5YRT&'JBVnl84cDq:YgP#=ulAEHh:[mhcMl.Yn=E[Xm6>t4(:Ngs5gR1U-J
%F(5aF?B_WBQO&70B+,?Zf,WQkS@*t^,L%6AiC-g`koR;Zo``.(!+4g>"=T,h@V;^=Vu^WqAP$h'^akf^l[q',2&h?^TNi&1&!hH#
%+%:-0AAV"EU>R#9cI%o3[SEgteMM5aHHrOd"-G'6b1nD#`$\_01%Am09QaJ%q0M=4FJ9mcTi`fbV0*@n(;7ZfiaL6kTHEChc")hl
%ZK<9(!ju^UmmR!+>8_4@>Ec4?Tb\o+U7IaZ@:BTr3[Z4_UI57l's0D,(6-HP#nY2i]:nG`oX6;Q9d#9Q#`r`?dK*5C1R/@/?;2E"
%/<r)*,8f2^l]K;p5i#\JQf5u(7#:-hb&Es->sosq#1.rKA.T#-fWq#Zd6aL=iG<;O'nV6<"q1',WuGB`[G!UOi]n=dd&,F+M-/lk
%8J3ru1dq^Jg[HiW:m:U(G!oB?&";@r7h.okF7c4d,%oFt6&eDjhHHg7EA<B_VZ?+d814dL?1fm1s(gPK(,uJ=<<$`t4eX#D,P#+T
%i;uG^3A_6"2Mhn].eS[7#N4?/Znn%!)%3!ZY_:(?i\tdT2DVjlZY8LDJA:^$b!pTNH#9+)"5A6EL^%m;lgBs)L/&7F-<[h-,aAG1
%KJLpt=@@A*mO:gH@iCuaAnVDnl^37YFj(u-:),1;kti6*fulmX22Q3GjLX-j5kbtB/j\Nm?kBHCSmT^cYbNJV0T9t`\I,&5d(M!D
%,O["Ur(%ju+tbC%o5n^kcUD(E&/<:6/^TmQl]B[2F[pGB9-?:g:-f[e1P\e,[KYhD2.Ycj>6gk>!tu9gpOXScZf2mkCbqLj-)$4P
%Kp^UW$&g1bbV2gBqI+Wk=Rs$8a:b91TJ>W9)A&dM<=Y.a=pfh]d5pee61(AFPT_CU4Q>s_<ll[H/F9Jh?0S,>r%OP2/BVWY6W&B8
%E3qk7P]b4VUIrp!p2rn?j039s%F3Yk\O^FLi0K"&Cm788)LWcURt8k!s1k?!"@oLl5$ta,4^$Hg_Mg)V$S!8$_%)ia2A)aA'`q`9
%^?mUD6-e^+m&bp&cg`o>T$`6"=5;&hXU@PMa0YLL[He4<3C:,HG3ZmJ@>cL`]]uC?QgZ4&S"ZM`XK$k^Of`Z1+h4%sD'@KTTI9rO
%$.4OljfE"B%%-]q>MIrq!Pf"13**c;#-4ki20bS1WuS##V6O;"MHi+aGLk<Q)F_*AjfC>JL!E(A@MM8W"_,UV=(<@`m+L?DVkp(,
%I,Xqn`PCX.'-F+QGId(iBn4/;HS/*jZ;'U3%URW]LY^5j,hATBIPfu7Fc:g0hK-pM?j-SYR!E%-"e..R4IQ]^V,7-e@sPe!.@)JA
%,]XS(*&&,C?$1`,LBHM^Zi_L71]k?+eRV`+fPP/MFjk%A<7(/^)<T.jl]G+.AjfapA*%LeCj?`<pRR_R@cJ5Mr^.QLiac[oj@@cT
%2.2VIQ(0hlHF?n\>$0pmBDcFBct#_=+#i>@R,T4lg!6peFuGSiGKN>#jO]#JfJ<E3rB3[u`eD2YZ:Jlfo4u?-CgJjfD%a'cluEq!
%]*&//V\TGl)p)o-M.@5B%T6k76[WXu_Pu$cN7c@@Ln5)hBM=c*W!GD+L=?QP2F9ik=<UkC7(Z':d7g;HX;]-r!&M>ka6-:_Pn"JC
%*b$p-N8e5shNAT^+EHT>@"pW`LH;Xc)QTr:Mi!D[TW?-(ZrAc>C9`[g2!h/;rgbAK-]Z`(@oE*uUmMV/,0YiOl3SH9g74p-O?qpn
%L(tM'+G\KeA$T3fH[tL9YW$+4"a?6Q!m],6ASaJde*eZ!/U0WaAN!d+K'E2*16E!W@C`':dE]"ri1gfto)h.C/13\q\@rs$h$-p_
%.2`aDU`2W9/:[uh'T.d10oQSJ!>E[7ZWdW?7FjG4W3VuS6P/V+$\eZ%-]K+?\F;60-4VJ:JnPdq[^TkOM9dM^Ud(`J#q2,MDDaR<
%EU)E,ZSE\32W?9>.M2)@6>/iO3.Y\u`2n[WYS,-0hGEuI3g3-%;=TYdWa->qM*<Jn_FJ&j5U6ZCc/osS#205UD?/Q4f8<.)2?J3J
%E:E0"\E-7UC-f"5S^PWSY<^0aCGJT#i=7KLGV.Fo!Ztp\iWFY%d@6nCj^g;7_T+&`9sG[=MPW@qa'%^tlpSR;WZ>/)=s.S>87g["
%F)YY(B;ro*b\OX1GSXHFp(UY)/VdLl?8>'&mPUGF4ljN:$fWHB6Y)HWO1c4kb+%]q/709H#_).7[][j,fP>J)[a:lLY!=*5D5j%5
%Vna`teu>*sQaF+>K'H4o"!F[%3Rk?hUF#D!aj:3%))/!+3t4jh?ARUHM.Do_%V+P!4V5M(UgsoYZMsr[ldY)"oH[lac$G.;fCiZD
%K6cs\+=POEAqU03>ERc;:V7`OMS"oXZr[!;G"(?*>WSi=K9m1@G<%aSB)3gUZ6r*<QrpmcPJgVL8'Q,r[Hp=7K#;Y'efq34U_W+t
%HkC-Yfm;^WVa\q3g`iEt;Pha!@7@`fhm%?U*$J-rNphM9P(G":/XNi(@ArKp;c@n%.h*D\l6)e=lX(@i$j$DA41NYa_K(0E<LIc$
%a8.MfZ74-hfCkYK;(-.KM0*WIcKnRAHp4829r4AU<BtL-"W1c;DQ*F:7[DT(SuiD7N1lKdo3?65)Cbi+.uDgW'1c=@(ef;Xo+Eg<
%<ktu_YTu!MPLdDokZG4G^k<BF\#tc5r;_?.3#m7W%XSNOJ`7\e&8k+[ek0QAFA8Z+1&=>hBk^MRAmZEW=lMUV4AjhP=CeEIh:>B6
%MRNr@3@k;_7W7.tbl5;Pb#'r.8)AE`fU^uk:*M/*D&2[]%"]8qb:&K:)]3[.!smsX"Jn]2%;<.M6NL#UW+R!>apTr>NVRq!gr'p4
%OTU]pPD"Ru=L-Lk9,;$%ku^jo*);_)?%^mPgef.qdR!@K,1CaIca1tA=+Z;m:7m%cRge<\r,Ym%jR!l>-F/qU?-Qg<HH#"VL,"AH
%LBRQ'd2BX[1jBHq"!W<a!AU!2_/m#-@A%t2NU<c0c:TRnDlNp`"ptr&B[2:al@gdKJ2;rcAG+$-_`k67N.X#CWNY?//G)StVW?CP
%Ju9g"ooQG=NI?i`Q/OU;L)^>Q?3<%(3Q;-S>?=D2dj!@k9OntPJ](?R.!UW+8L!,!V#^X[A%r]-#sV5r8k1ChDE>o$8U*`aZDG(:
%!uZ?&M@]=8g1;9u&fHD;Xs'B@?l]?7Z"G9<)BDNb@O#LTPZ<\sJ8fH_r1j!YV'iW_VeR>5$o]M3C,J@9&1@/Y9D(k';lK`/?c'U9
%8?W5p,E>_+X'r"9HmMhMKpOHQ?dFZp5VK"5U&GY04f.KQLYWZF;mq/8ckk8+i$V5n>UbP"O6JJ08[N6V`2M?dB(cE=Hqj\ZN!A"4
%.$5jn`9=#Z8]P2lT(R2Y_Vg]<&flVh6?KC5,,b*&EqNWISb/#=L6IpGJ[PuV!(3!0*:0(Wca@1_lQn0O8;10V'<\4+'0ltR,07rp
%E=bNU@E_,sp)GH0,j)$@2jg*X_iXc[CeZ3OG;b7;LW*GhmCYm5-5]AXT!+Ju^'2GU]A1a@5.e"J;9NT>Z:WKCQqh:<%@Eh/\P?Xu
%3bFaI6pXaKCMe^3BN"=;i7nsol/[RS*fREH'Z$a^ZT-cF<0_SqAnN:6#\F<JjiCU?Rq0/4E@?"-TI]M\WJoC4@5@JJARR[hJi0]"
%nZ61=KVF,s`2;XqL=]-<*4Y@)29(2$k=L8JCD^,pp-t060^p@+0ZdcTQLi`9Rn[E#PGB?R$,[lU5j&Ji;!k>`NbFk./L82)",28I
%%YOkL?5djgJ3fJ@'Id#fouf>/Zk34uEbMgYKRTll/7$GbD%/k3NVULR(/i>=^_8;5/U7A0_IRmI",uWt631Y?P2oZ#JRLE[]5;UC
%a>V4*Z[#R_1s\V&TdCb+EG'3j4?1Ogdn,^eG'&C0XgtQl2n[7JQl,IS8rEbA@;)==jOgDi*JY3V,sQ_oXtJ$:m7_1D(7fG2P95NU
%>4h-hgEq;&M7]<OoA3Z4.@/>E/@cU?^=$hU/E^e4>U<UC=OL[P]?.BB.C[V,fbSYC,o:&'o1#82\lp!*9$;Z`2&QTn?3"FH4'gpI
%b<Y.#'\hISKL8\5*h(uB-kTA)M?GtsQ"HI[PW0H<-idAG7HEqb<LtNpa:2FB2%Jc_8W%";g(9h-/V$F>f5YCLZo%]@=l3b65rUo%
%)'5#HkP*V@?I0*/*).ee?ir1g!ZWg."99r'Z5)Sn9q9K(2i4l=0FBTLRkurppPeY?KtMm(_Q6U%5USQI@kF%7Cc+*O(c%n\a0m^k
%FC[QJUBe+dcT3hs[+j*I"@<fgY-)$RB(T4Rn]nCMibY?$.jNbmLg$UgN%kP\8k(4n.q`\,..qX2#8AkS>nD_>ir`^tNTJ^mD^2WA
%3="l%1J#6RESb?'gV>[FD@dCQ&9Gje2bP:"Xbb&Rg+e&J9d_*!.Mu,NNl%$orW'PbPhqBVd73<PEagTBS7FBjC!iXuM"_7tK&,%d
%.<;d)-E%J4S:k`Zb+UlYMj9V>Kq-\Pjlr3UJqWJU>;"@*"\IlXTb,/k@R\t%=6*!6WQ8l'OIu9#'0pEfK,D6j05$7]$#2[?6^)QK
%6p^$R,l&@K(^Rp9`hhU+7)T^L%YB`G.iG+jAHTL1,H!jI<"-GF"YE%DoUtkQK%32n!6ZJrDt<.36^FHc/Eu7#g9T3[MJ<OZjUg^O
%W0m\Q99$[uF:g#.UJ&!0Qq9VoJN0N=F3Z41KhOhUJTF20cB3iHXRc$A4ojb626I1<rF>DGeVe%/_7#15?6u"N]_)OlWYQ%,L-<]N
%=>clT2DYfNNZ*!F!mOgtA_l%r:Q4U'^raEZ6Fg<k/kQ2o3?l1PnfI9C^c#W<hdDam_m7Ml9+FBH1>sbG.$p[T.e(,A#sfN9$KmC#
%F)KQ8JiSDd*t32nTHPqkBA#Zhj@lJ[&5a3K$R1l:#o@q?$N@K\9m./rYL&V0P0rF4MWtIt%OOFM_rV5Cd@)"-.eelMp_7eDm1&!T
%WU6Fb7S)d-,l#H;6_.n(!n!1AJ?B5;E]t36Ue0cj+dmE6qZ-7SE=R^R8Mp4uU6Vrl'n`8<-DDaq/3*ti.]LJD?Ok..$@t)#XQerT
%ftf'WSk?P)njrsB$GmQcbq;N\(/"/Wa0Qkk:KnW;FH)Y&,-$a^=G,?R][lQ_0E=_m";k,>U5kCI[h%C,5S"2-m3UnSSL6Zr7O0o#
%&.N4fUS"@1)d0p0dOK7j]tjD.KG1s4B$iD3YrO:9H\m<jGZ]9@/:*5>7!bT559.#X[3.?6cJ0j]5t%8[i8JG?.@N"je5O,REENYk
%F<L'53Um.I+CSYE586-\;Dl:5";3MoC4bkA!P,4pEH32J$h@D"7jeic"q84.-U`D^*Dst7%Pr`Ka2%L=MN\S9NL@OTH\T@j>C)%d
%0kK]BD8;lrUl9P@bsG$O+bA^f!eAc4B#pJ%V$b;)\$EeL;/!Yp:Ss/'i'8),L;J3O:h56u:/rZ)&G_e#2rGrRpcrcX]`]19YmooN
%XHQ")+?k@@-a+uYD+lC2[OgU1#)7Co4_tPrNjpl5'Hu*)RA`\YhPm$7T^Lnej-UOkT?k6F?diZrK;ir$F3`?RY;IAY_010Io^VO/
%=)6!C-2ej:)0KsNM4<U]pS+8^D,S@n:^'818/l`t1ns4CS#;=M9u<;a`M'Qc+WD#q'$AnJ1t%BT,i-qkU^E_%)ZSR!_HCg)GeU#`
%'#>j>9D[(Q$CjQ*"'pH=jg^d7`3N%B:@dhWk;aTr%2n")$S_/f)5m6iL2CRuC4qaX?TX192?s/3aI$M-@S3NG@he'Mois87*;`T"
%AhAurPI%2LRFor+%5',&QLpA1Z$&V"qg0R6/9c_4V4&05>mkg=Ibh^\UHn>W5'riFZN5d`Cug@<kJ1cH;5#uZPLfMfjLuaGOg*f<
%:,DsO2i2[XK#,aRE=dK:AJY?`?0t[V%g0JWfY9laG,I(B!kX0mm\GXdJm(9u%S0]$;Ij^]=t^M]:`0K=L;g;2W(V$[lq-4c'1&uI
%$G@$<%YgJ:JH8];KR*!CYL1>TA!$E2=>/'h)7NqGh3RXu%@JUnja7G!q_;iUMhKkP#<mo)ptt'HMeXYX'F]0!Kc\?_(q!*A&@q^K
%N,%]sj(3\bJP1#KAjDSq-(0mY@oP.,30#g*%iR6/@\X4"-/0VH'<>!oB+q)6'$?`E>&03\DclX"US?bH5umn`@h@RgEA@_9J=Sb5
%"t$o,gFRY>]:Cc2/UH^^XOBT#69`cXM,*X*7FrWmV6KF(F]&p:3$R<L(9,\\(B^Ig<tQ9s@H`%!+?IntB6af@!]h^$!g2CIn8squ
%$#&ca?;9I)iXAo;B[m?B/dDQ[)nI"Ko2lprZuaNqcuhL(:WsYM6G.C[[5)FtdBFiB.LNAL7<hU=i)J!\Gm&mBV\B5sT_]9K4g"J:
%@)!G(aGENZZMc\$Z4!ZN:5l+AQ->&9+$@f,N"eg!A7e(R.%CW!+ioXTdempY1BPK_5sT$KE3cX\LojZ$8=DSm6e&dJVSQe2QOGAm
%/Mr<D75RD`L'J)\OnB]O_Le22]b-H;i;bUUY)<.rJF/,1Rp<J@Cd2`DT?IQ]oFa6"-pR>s[g?s,j2Di8J#K<P.n$f::NZCU+sX].
%O?d2]nVTnLHS%WWN#i<0"V&HPi11L6-pcLG%+St"-d^<C\n=LNf<'jCfJsX#/7Y:=#&).oPjLtoLE(ME'n(Kc*GDl[;)T9I3N6K+
%aO;qSjhe]P@^7&QZ#ZO>2\"-ek/-4bQJIc$)=,UfpYcSQ;g@CN`AJ*&E!WD.RgX/p^^<"K_Fkr^O([>qg'6=A0S]0V4[BMIU!P*a
%hMU*2U?&;(<J1cDd#p1_fOo1H*$cs:E)-1/?NgEE9`#eWiQ%>91te/4i^a*47,;@%#\V[,Gn\\H`(Vi4280]RaktdZ_D3\u*B?4l
%p1MZ1f\l6l4P&cEi*D#3dqP#Y4ROs<Xa2hI">=^OJC&2!1ORX^2j4Td$n?IqnC;KcT"B38D\=IRd.%I+32;h^N''h@flki"mpjWB
%Q@2lSFPHplkdf&#@7TNLj:kQA$c^IZ&$bkR,XGQenEM&F#?##8<)9V4aMp6"CDJg'(-Pu?[q;V1[UFNt6sj+.6LAKEIpU#0RI:jl
%*?pPHnad*>L[`60ED(>]Qh\r1iS`AN*YcE8><ZoN\i2g1c6\UM4ME4W)t5o6J!^gXV9#_ULS<W`]T0i20qFG%Q!#13OOu'[]!ShA
%BW<@+"oBR6(!snWPS=*NBWf/%$'ofH+#W0';s*V\FIGiu6ATGO1.RLfn$O!l=("^[Rq6V?TH,b+7Kmi9Q$cIRi<W'mPf'52g1`et
%@@pWJnp8"Y/h!udJ/R$ubKEaL[tcp`-Oq]N47ud."R$89mff'\hSho*]OEmOB?YZ"R)"h,'p9km#.dXM>p^Esd+=T45h%D?a>)$Z
%b8lD&38t(NCW6B:AfSh$fpteB*@o:@C(UHLeQHF)LH7I+?Sm[W+[COQ8aub=35E=S/aEN1>D.S',`V&_A&l2-UUf^%mTGHb?ZsB;
%\ZINBq[;V`^&eZPL7GVkT+;9m3DlHUR\U-K4-JbpZ0k&co%&Y4qA9Gm/!#YlVp<k]a\P7g-`[3A$lD%=1@huE\[](ED$4?kQY_6>
%is%;)(-=Qa4(,u2;@dkmWD@&c;PPl)37j"'=%[+j&;n1W3"/t)4ZArlI*W&>@tVA!?l.D!(gSAl_)=f'I8F@\.Bii?k9sRL\8[fl
%&4;c'N3ES/J]eS2e:uN6.2<'0R*uIoc8[gL,ZH-6H=]cQ@F?rAbaR[iG`9(-=Fo)i?D6IfER5^[EO\!8SRecX4X1f=GoEHNJXg;h
%$Q(6&=`EkV/jG>1T\Nki+D,I.rjPW0N=Hnsl@ApiR[7bYG?S:f8'(qO'"DAC9BQ5LELsLt;1J^K+8OiN'9SMkqKWW[0X)HRFh%rL
%:>nYuYaBB>dIKa_cBuU9R%Apq>]U;f]$,seR$W).$X[sA,dE\.#+Q2B":rI%K(R9,n.2&SH1VTNY+%7G#T>Wnm;oh(`KqF^S<uSh
%^s,ONE*Ob'fWqo'&.!6E)guLfK3Zqe-V<(1+M8t:-^'5\4<p!r*Jfa3^bqRtTX:MKi0__;gQ:<WUa^RP`[PkqG75p$ecD[_KYo(H
%!L6o)UNi[[HARS"b(6\-j)/o7]FVM?'so/p,1$N1i(,NXaU"&i8db9<VZ@uuN5!FX.j.Ft("<Q68s3R6G[:IQmD<E&c\`M%S_u[5
%Ysp$[/7U$g;E7.YAd5FY"QNn0<b?*g+]sW"QaRMg1X`R8M$H.cBH&7.Y'=5)6CsFMo>O1`]ZIgb7W0(#jP>pV3A?kC'RJ>UFfI.C
%p32e&nmiffjI'dJIc[UD.o<,,=Sol\M]eS_f[^<m*O't949u[0:1FMV5FchSmoU>'(ln>A>=:g4]OkEdbKB&=oG"G<FAlO7ddR[k
%V:l>W)<ad6F#;*W(l>$&"sM.I39D#fXe'KX<jLC::Jb=]CLtOPk\%1lR"(=+=u'ZcZRV*U*$Y4EWaEi6ZDD'Bs+@nk+FMgu66o],
%RJaV<6,H[uZaR+BOU\EDZlBZ1>E;04/=g'b)!c\^94uj"0Y%<sitQ5<L`F4j[$W'LMlO/0D?^LQ5t%]`%_bo"cZE&\&kf7*A(`#;
%p->LP/k3R#A_*FmCg(_4@'f\l42HHmqO?M+N,UT3mhOQe33^oQZX0(UX,o-3TJ+TI<m]SMVD6!I'$UT>TB)M9f7iuFf/CQ*@KoDO
%f.[8$3<N`URi!K2&WodqQ&8Zo"$$lA<Pgq!\sL%/+=D7Ta8"/]@/n$p.<(&R9Y2QVHiVFtMAG6JbT;:NpfcgNCBuoB*FNr:)e5%=
%E*ha+.+9KBG=@MeZ96@a1aWYn/PZQk=N^eUAgLDM7S`7l!ccZSJCAf_deHX?PFVp,#cn5P(;T(a!@FhW%rYu4G9E?"he@X8TbC;9
%m?9#]_bQ[j]jjfMK.@N/(n&l_k7%663GM;kJd^f'oZJB7nslh,r-9?JK@*'Z_n9tQes`1aq0\b]]cj_%%R0dL(UIhMKS_1&4D-!9
%AFl>7NCdD0d#uB5Zu>a!+H@(Q=3N0S<,rSL(bnrL1]#=P.OHO\3>`XcUmZrn5q,*6Y)qaup,q!<La]]p7e%/3R,]>."l_6A8lS3k
%)^hA'+n#"GBNc'`U92396'JlTP@CB#-7.Rs65sF'3cUTea4uXB`5WqO'Uo-oG3G$.RU?M>bsLL@N^)u!NoF@r:5Ol`%*'=iX!I7;
%kU@kkX\$i^=%(lO>/*=4E8*3]2o(;-#&=c30JI'nHr@`q+AN!q+4]oG'Ef;p>Xi,X<^,<5nQT]Yrr[?jjUB*Afnh;-*nRXPkAtSn
%PEYY0a9q7DLf-NWANc:>DB@Q<e=J1f.Z;89M7&.>E%=eCoUq#,i-+n[YmPR?):S8C&NpgPU8M_E=K8=F36\umE.CQ^`jn\/'jDTH
%6,q75@52I$2Ou&&4ZNsn3fWPec3B*+iqe'mkef28Y\SH'CAZ!QRWJe4YuWJkHH\X5;C,G$beXq%SD*6KVf18cUE7\lTVAng(\N7@
%'a#.PElfR[qR(;_4<Derg:TI*3jGugcniHk0P%YG+6*c\*i3D!.(7#Y\V;OF3Q6$\5fn8g3)m1_Nf]/(crc-T"J)DGSYZt:a>XFb
%!OsC7&IF7%hI]3l5\Y7M9@&dN1E&cG1mMdp_2*_"BZ=1&2lU-B8Io'D\=DTPd+RhTcDJrKWIlmX>G;<LDa[+_iL1:s<`j]L;0Z#V
%BocVZ3-8Dig(<10JdluX$YF`tC.WT.BY$KhjZmA>1mMg`SS7+'\@ej/=^=A6jX$XT%+"//N?jf.YBaL#;D(+$cS1KHB)i"^X/:ei
%C[pK+kJh=:nHtiPU'.L="uQmrObU;L)d7D*&]K[na,IH%GBpVc&(bp&;[5],"s-#;;Ls*J[QkbSI#eL]aXMp[M'uBZ\/NDmE(Gjj
%+_>AB`aHpMIKabU&Q*BR:,Cg[?0HkY^4TJ(KSG@bljOBE=["7_k<4Wc6,UW4I)0L,<t=5tRrKj>75&@45RX+M51Doh4cf72/C#*^
%/='5A_^Gc-NRg1=<+n3EppXtBD^#p0YWZS0fCHL$\NS;!#m18go`dZ:HpD\)gN$0V=A,!G/i+*HCY@(D\^nlA5V-9_am\6k0tM-F
%L_i767u>\'A-b.?_3PuXF#4m'*788j`nuH;/HRKb!a1doCPrZ-KhkfD4k2(<!9]4,,*n!Z@f6jhPbNdMJ9qDG<d%=B;37\kYe.Oe
%JOVX##)J.O?,E%rZUr+*AI,ig6p@V9h?G-DXVDuT)$^>)&=5*[9EDLVURhL+5\&Cg7d(e<&#+Ys&m[f8K>HcqfQ\oj!d(l0$t"Tb
%i6S@TE'TAfe:X/*?K`)]a5AhJ]h!g*;-"_P`!jR5XS?7DW:JJ:5!r7WW<1>DPo6ZXl=4k[WWOP#o.+6\_u=]qkQU\7_QU/l,Yj]!
%#Va'0!bj'<()sPRSAhrl?rr:&=[F<j#aOX>jP,Ts<=V?N;!,u=/\Zr_i.5Q&l(f%'J=a/l'.FDVj'3oM(_A^nC%qt#NB)>$L`m(f
%3ZgXYe8n'_GDRq@:'4o?EoT9aq]J`B4L-OYGh'%'`ZCsQBl]^&,)!cb$1u7%iS92UTc<&,m1H/Yi,CaiYlnc"NI9i4ltr4[$38ll
%DA7stpB'U)fe5m,CH7nmSnV/V8A;$4H!]hgnjsru_5]Kd'o<nGbD3`R=KEZ3nn3Ii'O?edf9,:X>M%mTaAtn@A\d8fcGqcjX!YEV
%FMYt#=b3k^Tco%PJNO@?X^B-^R(;cMW;HiD#M%+Q4Z8=@#,J\R)4qXb@adYB8/FS:%b^Zin76!;81R4%aI(er3]E?]7$sqE[Z#?[
%,A7.Z&S`;3ehgS:l%a%8(QKF^1/Y:Dno`q=@<rWS8s7S)D`METR%)L,$h"_gUUkF-UYu'83O*kaB9a+<M,$"u@Gb1j#Vpc"GZ0f>
%-L%\f<(raU?YT;L'?Th@a-J`\A/#NAE\-j2;B.W*BEehbJJVb%%MV`>T#WpgME!%<c?,A!P@4#lQ3U&XMI<PkhEs;Z6raa>MZ69G
%We$g+n,VE-j*)O0@ABuAZ>3iPrcl6:T(THg?i%DCPIeGkSrLY2.&CP$?uUf]a,->G@Q[W(juMU&RDVV?.m-&R#;8:i!ZHB$RpjYs
%YjqX:N>re,VQ)Vue;C1Ii6P<c8Xar-/@;!qj*Eb=MD];-;+#s5678OnW[Oi^I2!?'MV]m0@aL.!L62R>G33#)`N5narM.reF<-k7
%itbEIk`6J[1?1JX?/3-udL7P^VPZ_TAs(IU%?:b/M3;d?)ZlNqbAJ5,;uNA@>2Tmc;ZMls/0#Hl>Mh7o[]1cQ665R:1o_UJ+XTc*
%T`#!i$^i+P]OLAs8gmsMo"9L-8lZV0'a"GU^eI-0=$S&bW'6gf/-9^()GSQL""4.]dt1HDD/=S??VCH(66^'^k6FAQDZdR==Cr]V
%9u>>Fe"uY<#Ln_![8`3@_aDb5i`</8*uZNH`.F![@Ib>S&"G1WG9k3PPb8rY_lU7D#B[HJ4,4qp[dkQ28<"BKbUP!e3=Mo9!^Kc(
%Ag#6T%rpW`0")4_959WeCuJJ-'ibG-Wf.$KW<:"-Z-^0.7i9T![74Z,!Brs'=(8*/pqo3R5ZYgh1;J6=%DP7*913<Oj%.B=@-%r^
%#6feb`$LV;pN]"YeJsGt/ir\gl1:Dc4q9/cboEBJUg[<rFKX)=X:.)IE0t$UK>Tm>GdK$+LpBmb$f&('km1E8>H7q+$k:Ua@a@!d
%,)T-'F&3=:!7'68qq>qYfXM7%9f"T5cNA!B=<;lkeBP/%dJ8g@/EtQ2Lj?:@Q&OM%S6<mfp'eRoeQE>L;I2&8J1E^3X=Q`OIo>VF
%8aOkF!'hlm:gVoCD+%YJ^;?``HO-u[J.X5.47%'\*ok&+.ts0C1!7p;&\$F0587r*i7Sh??Pu?Co+M7@Ke:\.#%N+?QCEuDf+1O>
%+P(r["b2.UhR8<9624(F5X'nIQSP:q+IDEf.dk<iJL,WfAIhoBrD5@q7NXmLf6m&ss0ak'mX2>9qTjL1c2RS0rQj4W^V>$ai9J;S
%ZS.AWDGI>ep-(h.K9N42(N]GDJ%N3M3^7nqWLrO*j>Qc,5'jImUeL[d`..3)qsR;WIZl[>f_id>\]p>pk3K4TG:a+4Glp%J,6$Po
%\UQq1>gNRdlC*W=I!3mB4r=1r?hCLDrM*_jTX]2r5PfdOD]k^\b8=&O]1NC0B7k\ZBF-+1DY"V@2TlNn_tJMG^(1m.?/+Lg/>E64
%.,&6`[_.p=`beKfD)N:7MRo9:M%6ZOhdPOX`3_s.+"W(2m><aJ/H$=i3?*cL9ZSfIBVEFJ4kWED0`+I_-&Y'aZCBEi21i0JNumc_
%#9h#";'"*iJl`W`bL&.IaCp/#$h,qW&04YCCa.*>L:HZrUY"m!B@l@h/j]VY"_5<Bq`FMVD#hej_B6L78LLLJWnHK!kY/R3$GsMD
%4^#'-+I3;(`Aq'e8B7*)R4eqi2?AO4a\Je/`'KYb:m-nR!N/qZ/3ri.5)9RL82(:!>*Em-Da-O`%[2DlLa+SWXiq'Di*Q8AU4tgU
%XZ\AL3SD-u&sc"!_^"<'1P;]QZ@8FhcDO.")Jmp_E^.hX?l0;?cU1i)XaN0#dI3lFo3(T+Z77LI;0"5"4EKutGVckd[dJ['Rjdi.
%D+3S0g,`W8U<51sJgCbnSWf9XiW.Fd'%GIpU=Kd.Z40BqLhrH5#a_2@p@'8HZ+.N'8]9)oWU$%nM_Ra(bTIei?sLs-UQ.$RJiLO^
%::8%P$\CM.Gi^M$W]?4S&P*(+XEQs^`\A9&&Eb?C$aY\skQMd3BRg0d,Y,[IoR$`K0+8<U4An-H,ft)sp8"'tG^*gr_7k"d2D;;j
%:uIM3_BFMpo'E%W-!*o.]*Z1l^;V4<e:oi:Qn2q^BP4%H@9tHa#bVbB]?nsa6]Ge"C#>kfkJ.]e<*GEbhuXS-%!4!oFCjSlC]_53
%P"l"3W8Of`#^j?nA!dPG<%MNR]]oX((d;`lL&D_uHN8$<Ur9%JL^OJ'"X*f(4-2k^:)6#ics92g(Ci3PK'*T>7YI%ur9t_g702]"
%Afe*bHQ\QfXd#P_S9TbhG6Q4^beQfl/]94"C?2V&n5BbG8lAFd>78KM?5IXGR$@YY24%9pq]ldTNi+q?Z];J_/h^GP6ab;oW@&UQ
%<7AfLL#5?.PY#h</8L"%HM,.:q.)o(;R<ERIg*#n:g\fcEmg*`aci]i"_+5Tj\F,?1>TDB7n#g@g\agB-S(#B=O(&0:\'ddSWOje
%FPXbDJka`oXp4&/.s^iPQlA,L_.fWi.Wf!-:Nc.heFK<N--KKQ3+DEo;+;^V3E(n9f!FjAHrB^"*=gONCuK&%?'TAJA:"j-.4[ZV
%/V4a*X"%43lu1Hair-e%oGQ3CA\2@BI@n5GbO_8Eo[AIc9;icV!KAO.-M/&>],DSPKJ(7MRTA%862d7F1Y>-Pk=/;a74Y].p5/;j
%.j0"@lW[@];,;o:jlq;+&G"oHZc(J@L'hD.MOQpd.H1"HVtopa.Lej:Bbi<uCOp%^HS<bXV[3#9.Madg)Z8.5]qN1QqXT8pLjmH:
%e6&6V'Rn+i)Ct0'-ULu078eAkL*a>3N?us&I(8pjl?kC1r\YF:9[p8A\FWB2WV@(:&Iu':QpEgtRRTI#ar3D+iD@9)p2NMi'Xpfp
%?aQTe\\>[P+(+d&>i+Wni=mpA_0!b;!$Q<ikfc;A\G,MPp[2DEr9j4Pk4J6(kj!rJ5PBs5jppCF:+^k!\bGUUlLa*#k0ASapQ(AB
%S:>[,Es->Eg&)%XrYBsX(I/<'`+g&S6D)_n_MYeB:P-Vk+MkdQ1i3/:DqD<O3Yn:RZaLdr%Q^?QoW;\HXp;rDcY06ToK2.+`g[J+
%4VVJU'&lo]P</jh37+nGjMM-=rQ_k.b%2CFfN_f#^K=bFO2R+-%sn=GLf-)>h(a!U<OMta-0GO=c;lOY!?MJ$EE"QmC*"/-l9qRn
%I9thQ.-QO4.Q!K+n=E@+h,^R]D(qbo$;BN,Qs5;q-B9+9*#+IJ`QDt4Ep(sh?7D]H>j)f.Vl1LD-+As[PD0AN>2.2F7F)$b!Jf;'
%@5+.ZiC?-@[H[bpd_b-`fiSNuXBeqei,)7%grO$<(tJi0)G8&675bLkQiU;Nd/=t\#,VcATUtg=8AJ'K>,bM[>->I+p3/gSi+,1n
%ZF,<XX/)X>`]!m,QI0q]g.<t^oE%4SEo\M^<(LfYeicinQg^/kT=W<,:%IDNl#c(kHd1b3X.e"*T.hU3lE)DkkF5m/c;Gsb*k$?V
%D;K*pH_-p&'mfd%AN&UUMr.k&;-,@MnEpMeJQr?+iJ.K.N_u('XEc:W9T7^5@6p-FP$i*.VuT;i2H8WR3%Z^4JBW">0/=)gm]Z[/
%&rX?=':%QEH>#Tbgh8k`J>>a(?.!PdBE>M0etY6"d!&1sj;Xmg1Y4*1%mU9T'X(H4Y6X<7dSp7!lgbfRft[-IGR.TOcaJs/NXR?l
%(%i"D=A$$C4H<!KDFe6RcjW5h6;3RmTd21'J1.*Mi(bC+0K17#@DI]mJAVmG?pdg!-O[b(S?jSc\G=&g^&[Ybog!N0@a7+1bDl.;
%2_+#3Xborj3!@e>^_Y:!FAEkd!_#AL,W!?pq[9e8:V()m,$Hu=q]0/Fh=V_"5PUG<5&7#[d$*YB4cZ`N>/0u-T!\rkM>blDR=?'n
%F<Fkf%!fXef1b7.LAj*mi+0W*1dsE\?*6b-&f>TqQ&2#R#?-?\R]*(BGlV-5N<%t!K3a(t6IgjuA^]K8W_-*'UMr7o4uloC8YJ/;
%V9#E?b^nN'-j_4?qoH]&O@pLe#?_+noBES*r8?=W'KR,'YZk8A7D`P6L`:#-_&16petb>SNE=gH%.9EAGhXtp$Hb>"pc#5VA7]e!
%;NmOtLajToZVk!JO<#>0(N8EK&A18L<em+Zj?ULP<br]]P%bUnTcE8YJ<s7>rgB"%\nNC?&eK%2C_0%ED$6h*Zr/]h`?6*D:,tnh
%*(J#c/FZnXR3eTC1H!(DZQqbon!f8'T2VRF`V[iApa[eS8=WX1"U1Vn:eN4[S-S:GX?geH-L4%L*B[<IJ.0oN*/]!G'=l8JaCTX*
%)?bs,@SF-2=;RN39(5.[)]YRS(lmR8%O@B0gp%U?@oSbe;FjI`a?"l((s7%J1#HGEhMg,O\!T$"_G[KjNQm&)Jo!1!P0B8pqEWi`
%K<3N:3*.'>2:]ZX]O`Ipg>/^YRk.;+MqsbTm;."Lcnj?44BB/+:$eeIO>&>sO3+4A0E;>k`s!&baAk2Z$1CH*4PGgL_;k`G:-k2G
%Ae,?u%93dieM2mq@\J[$Tb`Y-!aSoM>tLRhFPBA>,6Kt]d&Xrh8C"="XqOZoCo^UU@hm]WLiJ8-D?'u%aLaFZ%qo*@]-5?-ikfe\
%/#V5"Bn-Cb>d[/=]hpREa=qRKacoG:K39XlB#k/FbDE/<i`C_1k@#Z-3[3-H?O+.8J!.g7]MTE1""NdDVdbdNYotuL9'b)S%4:3.
%lRitiPfAk#"!-u-i"K(f!BU*i!?+_KQDWUR-a>E\BCb"hIcmu]fs:!GVRQ2*96[iTD"fL%r"?0L?)lI7CJ$G4LbM/NT+?$o2+%8C
%1?DfLOP:`;Dr&io/W7&[Guo@Op5QE2AUfi^lRfYioBt>s^mQ1!Lr0m;IZpBl`QlaU;UBidq;qaCEf_K'=s=%kE4"CC@j`S)hLL=S
%Ouhl,f63^X"Y^EmC0Goq,5"J:AM4T/=PcsgK6*7"bReCp5R\"l'uf_0^t[$JcG;dPfca)=?THO;NsbtU`dGA0BG3%QdsHt;i0FEp
%JRQQ%&7:Lc7>O=Y'-h;@&XqA\UGQJIl.pUE@!kZ5:SIh<MJ07'GI7CDJY@(WXLmPSDh=K(0mHs,!Z=B0#ql9Sj4Un\(VQZ*>kS/1
%c+k>[ZSi<p74qBufAp[J/ZITjK5BtAF@<?XF:>QFG"LtIMH!9De$GeAJiA[,KFeQV[!#46RFrL/=/]s7"Y*f^qZe7!B!^LM=SnHJ
%)-r@#fggbAcE'4H7n\P&)WP>U=#A<Q!f7+s#?abikYfG/!o>+sG%%F0BKgOWL](X`U):A_?'&_(#h#U)>dNd2pq#^aMNH[teds@U
%7NU@G3N<jfD$(_<M?;.[.BuGk%L)1VfOcprQf;jiV'Ao5;!]G5*A#DJ!s^B[;Je0e@k.5\X)';LJclY1l=@AYQ3Y@pWZ?.cW5'cI
%iM(68Woh8C?19Jkhni$=oSd(sE&j<fgJj>(fg:MH,drcd#)pf!\p\X#LX1l])7jB</3`E.[d",1a_)QONU*YGDBjl51p7WV4I.X5
%=u82[W5)]+JHU>08OP,T%,5MD&[>`1RLJWl_C7Ur7Jd)q?@[1[QKKSpoq:kEbJk]"!k9c3Z&(2S_)0+cgC=8e$9(@)r`Gb!\)#>N
%fDE%#G3cB@cU%SOaIgqOq$/$-:!?uYQfCE^0XZmS2D!:_!9FP9:"K4"U`V#sFV'prWJ4%ph(WQ!,JjauiP>,XSS?l=U>hOBg<I/=
%Jn=;Kkku/\r";^d'GEbP.K`PdU$,8f'IP7d6FGZ.Z9bcgB6j/M,:/h6!P1ToRWPd!-jWSnH[_5!Z?r5sK:I0!-''Hg@^<e\(k7^g
%#59E9K,TXK>)`!oG"oLbgEnYu+d.p^(h]F"ZenJeA@Ka7p=:'SIVj?*bM0GkGcp&Gf/'=i-5,AGaW9!tFZ`Aqn$5qG\=sb`D*(<a
%T^aq-[<Oqm0aj8d"jRMk8\L4T)(#YVY[R4@%T&S+(rc#LS>Nb8X,Z0Le!G(/iDnpH2a`6'KXfFO+TWNS_-E-[BfPg0P!jHfc2Hhp
%DN)ka*2>n&^_EfeSp$"0*[:g-G=!^S_2VX]%(A\5W/8fT:s0hXX^RP9JBNggRWFSEmR*XS'<!Lc7W'bf`8d>?`_*1QBP;/`18_*<
%hR:fQ$p3h7Z_Q\2&'dp&T(J:tpA+0%Mr"2qSS]GHnGHh2&KNK"(GhQX=0t:2<S$ApJcT'pN)65CE;Y?`[4q\2#iZe*IEiXNE$oYi
%8#VutdHaA^T0_*\\bq.p9>q\ICY[p"dP#Er."1$=1V-Z*RB_GS,EB+:4p[;JTH,'l%mr7`lZp8\F9L8!)Au#^jcho(AcTjk(q#9V
%^-bdoG(O&e1mD^I6Ua_\N^?E\&j<\/@1Ep-#E$eP(Xa.(U8I>VSEE/u%VW5SiFkbbG@QQA:E8js*=rR%5eB(a*!Tt:f/"PukVIl$
%Q5!cq&kHT&`^jeIZ!XDO)CGP:89AW,?]^c<PIIQ'!V(n0g&M7UYp5Hh3fiK/R5Lj':Re[2Lti0)8"k9hI5eSGe4b>?TasK>^hG;c
%.ueCV`cX-Fo81[.1('E<'2N/5ClJQe,b@O4S[R$Y/X&)S+c(pgaXX\*@9[\cAfl[k-8Emp1AE\EN)EcnQ\F`jU`T"f)VHWe\8a*T
%?>EgXU=r)D[%b":E=H0>F.i,\dZJ/o?s3ua,L7p:LWD;A<CJ.+17U#^75+J@>XdGf!aUb=DT'scjBI59a0go.0l0U><]@GhOo(e-
%.<Mcdgl-*Tg+1_Z+`\[3_dd0qg;%kh%lfoW*Is$%!jOZ)0_0/jj)cH3ed<`H#RU144VK9ON?D"Dai#+]RJ24Gb:&#k9Z,ieBHcZ*
%"p5Y&`c0QaQJM,hr8qKDH<F[V``hH=d?,Ytrd#p^l`I?X@iNe1FuB-NFGB\]6t_%ee[R0#1<)=\J\I,&B:]i@Jp\OAI>O'UHEM?j
%ZQ\1nZ[X`u\B+T98Zp?p@kree@0J(O!"Nq--Z=s&:%K;Q03j;on!m`=2Qh'*Bo(sr.nBEt@+e21TE'^UnkZ`rM,@/Y@CJR\)IaQs
%!Oo&9>Em#C3Kl%LBMolkmSDn^?-iBKjbiK=Bk3lco>f%40DfXsko8XM?)HWkAGjR+7t5nMhG1dIHdR?CiphMj*8gDCao*TRO&,Og
%nqWuuUSfJ@RkLq9S6UL5Z6*uJV[#_)B;\P/Nh/Hs4m&W&/hbQ=D9D#:c0!K]URTNA>FL#Hkrle6%sS=TI.?%?fkh6rdi_@Tk/;'4
%'B.K0G=CWh%Ir/"Fnt%VafPZ\8$\>p9%/R9\6R[DGY-WpB.m"<?fGA\oO;$GC&$B3dIhX#Ie;^>RLu`Gj*s,$Gk)i?r;%]jT:]p0
%:QE/C<]p+<gA^X5lK6d^iQ]d#D&aY3G^OUSH%&AuNr/eKlK7a6lpSJ5L#!O]+JWP0`S^>1>[;fn[2&5[[Kk-=Y)Y/PiO3h*oS$#g
%d"6M%m7sj2KBm0ZF*i.ZFa8/=q=<TUBLf_D[-lrJ'">gjd[EDOD>h+.4o+X/*q-;![Jm3#!p'<PO1m^/aa5aLT:VUd\@VRujR1^c
%Faq_$J,NY^beO+#+@k!E"=1s&`rj.rmYOphooB@-2#PngQs>d<(YgAVQ86)\->lY8-ac.J%1V(J5/Pq?XaMFPY#ahfLRdSH\^;jH
%G'$fTW:+th7#f9!rp*i[?/8S6Dd=/rCeAsX!t`!t*s)*X1S[6]Br'+$q?qF1-(JrB^!/]9G/($WWG_"5l+;eW`T6oCW4mJtTt:J@
%]C9b:hqc_1q*65[hg4`b,]`AQGk/OqNZ7G,Idt1"2MH]?K66oA;M8kupg$RjaQ>c<04o?=PD&A1q1uBVkq=l\#!'&=<qc^PU0)qk
%g<a7AL+fmj]j:P]--nJ(%YL%!L'PH?rT*B`jM+C#V>m[t&R"hsB\n,2G4eCdZXo2lFbk3%QZ7G/?'2I4fp2+ekfO9u<n`PtkO4.r
%qpLo&'+]6@2"IX?/`Ya]VD/Ni3D#pgq?4'X,i;80AeD=@6\LNNmT.I$o7![NPTAN_KBfc=@dEOX2#P#rPMq;33u2Kl:u4J*D(X;?
%j$4o/[8^SuFWBV_hm<9hnL!!Db7VCP:Z/\\O)!im*JQ2$E?0pb(b/6eUT\T_TC'.iiGeEE8;$7.Fi?,rs.dJ=iMTH>D6LG'/%r\J
%;g"9Zr82AJmCU8Fkl'E2IrI%e[qX?CT;4U*p3O5Qo<"JE*a]:nLL9Lrpi]N4\+`r?H>?T0;\BQ%S\3\c,5gk'K@0Gn:\ark)Y]_K
%,np6YT.LRlIcsD^hFI>>jl5k.$iCgn+7D<OrUIq'X34;M7bb[h0I5MeIsc>6h2+&#GAqj,*1$!@dkf?-s,f.+du+Ym+n@"&,]]C3
%Ck&PPcc:N`rPr7+D%DZ0:QL9DBMJ>HHhsh9kTlIqq&TINrmC!%5'37Zro4Z[KKK%k]gntZB/D>adquiYI<Et&j?(tk5EZ>]Y:#O*
%gji*+8=Or:qBkEcc>T9tjgQ2iZha"F8,^D445\cjLGr;$Im(>jbQ7``p;Ib*??bo\rIgMX_[m:k.LD'?2A(196jtu`SId'6!0h:i
%"UJ=A'VO:6:S8(ChemnTl(bjH]RBP$kO\0N?N'XL=oA'?(4S=T#F?6&?C]m=RY'99L=pjoY$&sb4CPQb&M[\L0ea]+M"-sO&M^a`
%n3G19"R55kHCX>eJ%Io?rHBV*?T`W)VUL:6U":5E5%8#OePQdN0b1[9]0Goas#E)g!AC>m,)\&9dMX#>?Zkc,G=U92:9NKH"7#(I
%>&T>?gA-:8=fJQ@^4gLtk8`u'$1k];0=nV@KAJ8doBHBg2;/QBj]6qQFaAIWp;?bP8)C8GoC&SQIlr%geoWs$oC#1FGAB7pi"f&-
%MdCH.]tHD9^)#gba@D;p0@*t[SENaJ&NVuA:Ya0.=!qYTNEh]qqW-n_oe/oC]fRP8]b3l7#;qn]p&Tj@=T/&\ILpuF6MfX(qI]?g
%g!Q#,n)#3QrA0;%T5aB$!qdObK;YA!\V=/WO&FUa$_+o-R!Dm`o\5b5q3glaS<WF#p=$(+PKiR-L33g=1/"<&rcGX1Sb(JcIf!DA
%CbJl1NXRELa#XdH,Dk425kNf7H>Yb')5nk>cjdp14QEl9O]ir$OB9.lY&ChR+\qnU+I%VQ0QTLQK#ggdM;S-Q]'GosmQ(n\?15^S
%f7E_QcZnH*lh'#'3PVT;c0m<W>[EtMH[>VKe9nGpc1gH*H/8)O_.-T/4+D^&H?8YH%GKk+[<F"'JI9j2:Z8P`&)Pt_o92U;IYV:p
%L\6,bf":lCbP_q%X^?YUD=H;dUSfK3n;LRnS_O(_YRLQ>H2`9M_1+qNE);O#U(fp(j/XV_F.TiiKl`ip.>92QhG9,8ZpH1J$OFKt
%XY;UCV*2s:X`46_]'h<"$AZ@1(L#dEThg)_FE)ADIJuO)qOgWtealeZpk*4(ek,que#T5kV^E9>S+$`;M7Wa9C>bE`"Hs-*r?;*m
%[pRcBm/70slg8PIbeGI>C2:*CLu_2,L$a\?.Gise\aiHPlE<BuYkb<f`lDK:(/*Mr>d[qV!I](s+]Z:__teFA,i5!rM>'M";``p5
%UW7!pa(Mo3hW#!pC')+sGlPn5oDYq3T&V]mRtId-/_@"TWunK_+;FXlPPt45e*XWEU!`7f:?q;s9=bl12gsPDUH;83DN5c1guH'Q
%Vt@dehYi37T7>_gmnSlrT-2%4s&]6Xs&&c9q4F;ZG]<M/a#ieZs6K^^IpgLAjen(;MrT`!f&QeipuLXJo@<*sk@]2E*e1eM!le9E
%0a"\nfaRfP?g`C:8"5'ZJ:IT_rVMd[RZUsHN;rJ4k3DU0k4H0ee)SK!dIu/1rQ_q35'mO$<u35cf3>#*mDl]U&<C(>mkG7t#'KCR
%D*J!/F?86LYHX<@gDfQ%q>,Y^pciOF,bW]#fh$GWZS*C"pK.=6s0rqf7lE#i]mF8K7d#2T-f?rT*#-;3q;(<.o<Y26kb#'GGl<>u
%ih6>J>F-pi=LRs;g%;>_5NKTXgX64t0)a\l&q1)trju,g?<hVaE:`1L-VmPdr:O>IpEr:NS$][YY0=*5P52T.)`.63O>jU"^f7(Q
%<WT)?Zk)??f05,,q"EJ.P8hRMJ%"H"AO"s5lktSL6bf\X]_qL"Aj5q[Zd\MAGjF>mlb>)jT"i99hM-Gs5>pb>$,I;EJ1L6m]J$P8
%^B,k.L=4>5B1JjqIW\Q`SU98N+(O*\1T19D_Gf79'`%NQBs&P*..<S&"_FM@ioK1e=!qZGGZ+P7DXK_qIWpI*D(IRMImu]i:DmpA
%KFQGD$U:tEHf\c4m-8&d<f0,RlEe4Z\UZnn%Bi).Drt&5O8dHiIqrADBBA%Fs47q]p]"I$:B0EYDtfaupc&!8dl6m3r)@s.5/`#b
%i^&@ZGk9kWC@h8a5L2pqi?S,:oD1uI=.MJ,r14Nsh\V")([Th%FiW?#0kUV;ci@.,KS;kA?LQ:?n_P*>ITGcHU\ZGM$IsAM?i`ir
%AER*2JA+g:LIolmIg;AeIp\Qm3lps=#PgF'm]Sq7^:8pUL+c?Z7:a<n<ndQ?Df+TAhV-V"ro3),oE%Jg4PnS0^0n8<0R94\]h8T"
%Hj'b0g[;k%'nhNM*>n7MEU/6]p)Q`HLW<JoNuu+Mi267bqmQ_be@d#AU_EsIq)[1KosK;ArQ3Gof-=G-ffc9Nr*DS$B9u[ac<ZXk
%SQt!,'VOD*>oZ(u;bet]s1Xf.cfpcLDVff+gq1PuUG?(R[F8U<YY`9a"$-%'M,/_UM)AbAQ[isURN/@$JQ6aJgKVkYLS4V3aj'@^
%^K5ru^St=_Kuf7_,;;P?>!PXA]:aOqEqP@#R(`t.b<$+NqQRe"Cp4Ehm)'&)=Z=u[V8I_k!l$81m./mMKL5^:e#1O;qQHC_7nNT)
%$&j3Q!]/^)m'HH+9tlE.=huEZ89bFNMOXA;Us!n%2n&Z!CIQ_U0-q!UL=ib4Z.]'ClLML&hC]Ulpu1Z&SoNDnfQD=;f55.X]&=a'
%>s+N6H$o>FMJZC+ZoYepleJpqq>BH$I\]1m3dmRjqX6a]5<AV4Rho.S;]^B!f71!`qCTe'4(%u+F``*/jSG2H7IWs$A,O<9=L!=\
%)<)d:0Q$7SR.n9%&-t;l(dCDMs"oT1+.[lQip>gB7Uc5ao_eNQ$0)&%>B?%VkkpVtHi,mQfqlp;XIE=fn+RVomTYO^Qe2*2o'#H$
%k2q=Xp#Y4FkO/8g=2!/Wc.*EMb("hk5Pk4HR"WEh^-(71?GZ[_J#WT6g>gUTr6tU8f^2ph2Gd\!=%]<f)ZGH:I<Kc*K089Fe]MC!
%+`-b0-MZ=KHjUD2c1l+53GuiC;m3@.+[E\RhloX5E98No:UL)ZW]Bg1_h&j<KnH8t)4:0O,EBoX'7`6l'=[qhl"+4t7Dj_+T8iVl
%AmJP%&8J(/g_QoC:UO><((]5-Y3aG@:<q-M6'PHt@aVP!C"iGAoP3oP]Ds%1fK"D\%)&)o'NtOH:8P@i;MO>*'$ADUgZ_A`^K=bN
%C63.Z<N&Ion&GKPNQ\=,R+6167g;'`=FQe^L.V%8dPS,jpt1TH=PEPYnqB5O0%7s9STeuJkn/SHDV8;:LX-oT=A=*L]tnRe]n"/;
%3dG1=%/2>TE)3ih]ln4ZVXYgeM+\fqQ`B5(L@=gH7k_U*%ZufI"9JbP@K/!a:9NP;4ZUohCqSMLpDXncjC&:U#Xdo'iJIf8#CilI
%Q'siiKl#k@]knr/(dlIjX=HG#$al@eD%@t`IV:/C,_L/Y\_dqL:Poh7QFlX\dpnb]Y-.lGaTlU<,\_UGFo)($`F$rWHR[CGE7.>R
%T]DS%lGrl;336a:7=4/sgA,_7^UQ>9Ge2[\/;G]=bAp.?ObUVq:?35*/GB+'05EIsoIs&#aC-G7p$Qeo7:Y;^d(SqH^Y*#Lbu\3N
%JuFTo0])ZMd*(#Ig0ZZX\@b:kgUup6O]$YQ9,LO$E@`aqY"l/r?9Sd3#LC*rZJ,-uAG',-U7jG.I/h69le[$>25XH&IeEcI!(/8%
%JinN?!:F!:A8ooA^5L87RiC1i04Q_dJsa1l%/?ne0_k3i.?^\`^0\52_lbH6'^%V0(G-`J=J9eS`(f)m!c%(=!VG)Mk'QPKdh'M!
%YjIbG]icKFg@R-g2XJZr9^U)'+SQ"=Ec8%WZ"K=(f?-/!cl6&j-Tg0t=-kS3It$qTV4%K0@W[7sT5-m/TmptDO\S&%rD&/^'mp>2
%SY/!TJ$,ud%>*g*,O$#_M_?\r8F-"jKB4W\"Of01ne,fPm03HD5Df3RA*i/4f(0t4qt1WrSmD5H^V&H0*ks[!\[_Ikd7lhD5Q9f:
%&E%R9s.!B#5Q7P@gpK8Mf6/L1IP$"rH$&^iF*r7VH.BmOeHoOX?_Q^_dU$7^nRGNqZ#'t"[,#T:d"drG*W,?S`^:jGc?@tc$k<(#
%pYu&FdFH@XnIPSXVb]2hN;<!&C,LR.c]=[lFhBn$IrU2ZAo8:,r!fdBG]E?Q7@-VPZ?/P&7r6ji'Y;ER+eNBXrSaR@NL)a_FrHIC
%DGDea[d%4,*1`YWr3/1Dq<m=&S,O1J+(&?*i;Ci7X).5&na^;ko@Z)V/iT-SSQn=54h3SdkVIG^r:1b#!5a0'?nbk;G4!>@o^Lr(
%`Ucq.*Zk9!E^b_E;5:'q*UKh#>'U>;iFCABHg?[kA93!HKBZb0EpHpKL%DnUH#EqbSPQ>FhgiF]J+'04]a(T]s6=a.2T^0>I#=Dr
%amQdjDh[@!/aZ?9?\Qf!4t7`CQdDU87"4uK$cc"h[eJsuMnL,X-:uJ`P=k;;GFLh`D<od([lrODf=bm>kEF0BJ(@bIrR",Bp/C7/
%3hOl1X*$>ISO@l%C^\:U1A\7[>Mo.?7\B#GjD('A^=-7h%WiL!T0D#HnL'<Fkgn=o]qs+PdscDhcUQf+BIB/VF;GO]523sE-]NT=
%f%.=DS^F@b0>(j[HDJ*#[2fL`RongJ+),XUqQX7/htE@*hnm)\I8K)7R]C-dd%/*A;mPEXP=@cYC[9a3cKK>*STQ%(q4*bo@\>f>
%q"35TN^%+IA%/n\m4F=3A2)rcA:?00E%?jaD$Q2q523sE-]NT=f%.=DS^A8*:Q[OW4jjDR<djXY@[iF-UqQ<^a)5aBgNrLq55)Sh
%OHO\>'VG$p;PL@;^\ZH!T[?\Q``AftI^Y5K-XQ0<_i(',[9"B_W^*h=Hqgu==M#QAP#5TCEiWe2C/E?!QPO,cL:5m21"aUL/U*_f
%G)Al7SL79;[G3(9<B<aq>nYF.M721h%E>SH>42</FGI$MA#?oa(.ju"."+0!d_)FFq^\KlbaKGihR:u5QmP%9X2J/q:r(REj]Pe4
%cF6dQQYTNh[5HrkA1mV'6<ajmM=\0`mC1[3]WDfZD0,FJ27.XYNAt]hP<QA0YnI*+Ds2()Def<i%6d7)9KI9L"oO0Dn(Qq$]j/Xj
%S"&:gbeKks05p\EU%aCeABXlKNIDO>fajnpT_4A=^V&$CJ?Juf[[pD"`ui`Uhd(d2cjFSoUnte\l/N9NRCB-@N>J_H^4U*,^,Mto
%mS(<LNI#(r6+VJ&/7V;O9-ujSAIW[pp%buArc8&$jCieJ-i%V_14r*LZAZI\O-82YZ.M+Jrg%PAc\?UK/5(3`ddM'$r-$F.n*+R]
%@6Xm$_7j*r'spu#e.*h"gsSsmm@ZW!dligj`YE`>S+c/gT@i#je.-0[Q?L,`#OV&QmC]a^*51%;ZlbXh;&d)=%=sg`BdX=5clSYj
%M_;efJqR7\T9bu'5(naZJEE`bm=a@,>(<l-7[*9[J_geJ@/4Nik8(9BdaB`7R,8BWJ$XR)<R7&8;onJkI)4OB1d-+H<(5^#;L%UR
%p@kUmkR9imn0N1%YS7j"6)*WL50)D]$I<"rrdGSJrPNDu)"er)V-&n(rB4J#I3NjC'7N#VO,%dqO=S&K9j:4SCH4p$hfljf/I+;A
%Q2#TBOK"3l:j?=?Bj;!KCY;cnY$*QegKFs1?,Xd1KD9>15,BmJi_lXXb;/<Y;f?VJ9B!F>pip^:.E_W(`0AaFoCD[\Q@8`[-+_i7
%$I<"ra8JPTF@fV+kZc7b8,_c;du%2-raQ?rIIu@P7utC&^Kk[a#$]k3pbq[42e:54qHrt\](aJJX4*iM5<RZpfT/5qrGIr?Z+oeU
%\&eH8K$*'(UE>V=6WRrr_6:%LO?GW(o/E;4rUBa<_\\B;DuO`dJ,eQj`Q8=V^!Ak:q@N]&(]=5-=M:[I+7FXMo`H+*hE3j'2[=U)
%T:u&Ik0[fsfLMk71oHph!P=2X8'd:j^O+GZs*RFU+.XPiA*+h\^\?+rmloDeqOcW@49'TVs7UU8gS:nV$s0fU$"2rh@m<p_B?0]\
%kY1_XLMI/,KbIh92ST`#fe(VG@i#N)D""BRKCQu7;S-Joc1?pLrt;JQ2YsEAiR60"Y(ekPIYri>adl,_B`'MnqaM7Gj[9nJ&<OAr
%YON&K+ErgC:!W3>qF2.f1:D*X!P.OT)#1YTVs+YF?X3W,ZHKkJ^<uFW`qHfph[et7i370+!NCMado:?T3F;9*f4,bW`]NV]B"I[\
%^FQB=HP[\>,^j#umY9M^ofBeY'mKTA9iC3LMje!696\8=SJ#5CpZ3-9)d]SSWU#YKV#4-!n[3\4]@Pe<YEr$OI')7kIW)78bBLpr
%oQiTmH+F3TEZ=9r@52FP+BA73]5TS"%5jS9f>gBoi0406kkG@6&7/im5f6)*9Y^)RdYU&XIem`!H*KA]Yc!u>([%8hP.'k;]>4#U
%^TC4JlMHh=kO#JCoO7,K?g-N2d:A0)e+8dJJ)7_"3PN.NErDW&h#@/^^>Dbb>l#i(:t:PV_a,eWOSReQUP>r=QiH4A(OLp)KGt*t
%?nBRC?QM?nH$"1NH3WmD:Tohn"+Z#^bF>8rPNVm7&7]b:fApI`rTs*%TYNqk!(Q[0oD.(m$d=dD]_\M?@<:o"jQc[8U9iK74h97]
%*(\QEB1Gbo9(urb[UoaUN:QdiIpHtqDJT'<,,/t#mq7.FjtfRK\qSPV&'lm`C?pYANSt_OijK&(&8Di$ZhaCVhgb1\hFIT1n?Eq"~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2042 1369 1993 3 v 2210 1454 a Fs(Figur)o(e)c(5.)37
b FD(Impact)19 b(of)g(e)o(x)o(ecution)h(scaling)g(on)f(performance.)
2042 1766 y(section,)e(we)f(pro)o(vide)i(a)f(basic)g(analytical)g
(model)g(that)g(helps)g(in)g(reasoning)2042 1849 y(about)g(the)f
(relationship)h(between)g(scaling)g(and)g(the)f(data)g(cache)i(miss)e
(rate.)2141 1932 y(W)-6 b(e)30 b(distinguish)h(between)f(tw)o(o)g
(types)h(of)f(data)g(w)o(orking)h(sets.)e(The)2042 2015
y(static)19 b(data)i(w)o(orking)g(set)e(of)i(an)f(actor)g(represents)h
(state,)e(e.g.,)g Fu(weights)2042 2098 y FD(in)27 b(the)g(FIR)f(e)o
(xample)i(\(Figure)e(1\).)h(The)g(dynamic)h(data)g(w)o(orking)g(set)e
(is)2042 2181 y(the)17 b(data)g(generated)h(by)g(the)f(w)o(ork)g
(function)h(and)f(pushed)i(onto)e(the)g(output)2042 2264
y(channel.)h(Both)f(of)h(these)f(w)o(orking)i(sets)e(impact)g(the)h
(data)f(cache)h(beha)o(vior)2042 2347 y(of)h(an)g(actor)l(.)2141
2430 y(Intuiti)n(v)o(ely)-5 b(,)28 b(the)g(presence)h(of)f(state)f
(suggests)i(that)f(it)f(is)g(prudent)i(to)2042 2514 y(maximize)20
b(that)f(w)o(orking)h(set')l(s)f(temporal)h(locality)-5
b(.)19 b(In)g(this)g(case,)h(scaling)2042 2597 y(positi)n(v)o(ely)h
(impro)o(v)o(es)g(the)f(data)g(cache)i(performance.)f(T)-6
b(o)20 b(see)g(that)g(this)g(is)2042 2680 y(true,)k(we)g(can)h
(de\002ne)f(a)h(data)f(miss)g(rate)g(\()p Fy(DMR)p FD(\))g(based)h(on)g
(a)f(deri)n(v)n(ation)2042 2763 y(similar)d(to)h(that)f(for)h(the)g
(instruction)g(miss)g(rate,)f(replacing)i Fr(C)3713 2771
y Fp(I)3770 2763 y FD(with)e Fr(C)3979 2771 y Fp(D)2042
2846 y FD(in)j(Equation)h(1,)f(and)g Fr(I)6 b Fo(\()p
Fr(a)p Fo(\))23 b FD(with)h Fy(State)p Fo(\()p Fr(a)p
Fo(\))g FD(when)h(calculating)f(the)h(reuse)2042 2929
y(distance.)31 b(Here,)f Fr(C)2585 2937 y Fp(D)2671 2929
y FD(represents)h(the)g(data)f(cache)i(size,)e(and)h
Fy(State)q Fo(\()p Fr(a)p Fo(\))2042 3012 y FD(represents)19
b(the)g(total)g(size)g(of)g(the)g(static)f(data)h(in)g(the)g
(speci\002ed)g(actor)l(.)2141 3095 y(Ex)o(ecution)k(scaling)f(ho)n(we)n
(v)o(er)h(also)f(increases)h(the)f(I/O)f(requirements)2042
3178 y(of)27 b(a)g(scaled)g(actor)l(.)g(Let)g Fy(pop)h
FD(and)f Fy(push)h FD(denote)g(the)g(declared)f(pop)h(and)2042
3261 y(push)g(rates)f(of)g(an)g(actor)m(,)g(respecti)n(v)o(ely)-5
b(.)28 b(The)f(scaling)h(of)f(an)g(actor)h(by)f(a)2042
3344 y(f)o(actor)20 b Fr(m)g FD(therefore)g(increases)h(the)f(pop)h
(rate)f(to)g Fr(m)e FC(\002)f Fy(pop)k FD(and)g(the)f(push)2042
3427 y(rate)e(to)g Fr(m)d FC(\002)g Fy(push)q FD(.)j(Combined,)h(we)f
(represent)h(the)g(dynamic)g(data)g(w)o(ork-)2042 3510
y(ing)g(set)f(of)h(an)g(actor)g Fr(a)f FD(as)h Fy(IO)p
Fo(\()p Fr(a;)12 b(m)p Fo(\))21 b(=)g Fr(m)16 b FC(\002)g
Fo(\()p Fy(pop)i Fo(+)e Fy(push)q Fo(\))p FD(.)i(Therefore,)2042
3593 y(we)j(measure)h(the)f(data)g(reuse)h(distance)f(\()p
Fy(DRD)p FD(\))g(of)g(an)g(e)o(x)o(ecution)h Fr(S)j FD(with)2042
3676 y(scaling)19 b(f)o(actor)g Fr(m)g FD(as)g(follo)n(ws:)2421
3822 y Fy(DRD)o Fo(\()p Fr(S)2655 3786 y Fp(m)2714 3822
y Fr(;)13 b(i)p Fo(\))22 b(=)2907 3751 y Fm(X)2945 3908
y Fp(a)3030 3822 y Fy(State)q Fo(\()p Fr(a)p Fo(\))16
b(+)h Fy(IO)p Fo(\()p Fr(a;)c(m)p Fo(\))2042 4023 y FD(where)i(the)f
(sum)h(is)f(o)o(v)o(er)h(all)e(distinct)i(actors)f Fr(a)g
FD(occurring)i(in)e Fy(phase)q Fo(\()p Fr(S)3890 3992
y Fp(m)3949 4023 y Fr(;)f(i)p Fo(\))p FD(.)2042 4107
y(While)27 b(this)g(simple)g(measure)i(double-counts)g(data)f(that)f
(are)h(both)g(pro-)2042 4190 y(duced)k(and)g(consumed)i(within)d(a)g
(phase,)h(such)g(duplication)h(could)f(be)2042 4273 y(roughly)20
b(accounted)h(for)d(by)i(setting)f Fy(IO)3110 4241 y
Fl(0)3133 4273 y Fo(\()p Fr(a;)13 b(m)p Fo(\))20 b(=)h
Fy(IO)p Fo(\()p Fr(a;)13 b(m)p Fo(\))p Fr(=)p Fo(2)p
FD(.)2141 4356 y(W)-6 b(e)28 b(can)h(determine)g(if)f(a)g(speci\002c)h
(w)o(ork)g(function)g(will)f(result)g(in)g(a)2042 4439
y(data)18 b(cache)h(miss)e(\(on)h(its)g(ne)o(xt)g(\002ring\))f(by)i(e)n
(v)n(aluating)g(the)f(follo)n(wing)g(step)2042 4522 y(function:)2042
4704 y Fy(DMISS)q Fo(\()p Fr(S)2339 4669 y Fp(m)2397
4704 y Fr(;)13 b(i)p Fo(\))22 b(=)2590 4577 y Fm(\()2652
4656 y Fo(0)75 b FD(if)18 b Fy(DRD)p Fo(\()p Fr(S)3064
4624 y Fp(m)3122 4656 y Fr(;)c(i)p Fo(\))21 b FC(\024)g
Fr(C)3370 4664 y Fp(D)3425 4656 y FD(;)e(hit:)f(no)i(cache)f(re\002ll,)
2652 4755 y Fo(1)75 b FD(otherwise;)19 b(miss:)f(\(some\))h(cache)h
(re\002ll.)3947 4853 y(\(4\))2042 4936 y(Finally)-5 b(,)18
b(to)h(model)g(the)g(data)g(miss)g(rate)g(\()p Fy(DMR)p
FD(\):)2360 5150 y Fy(DMR)p Fo(\()p Fr(S)2603 5114 y
Fp(m)2662 5150 y Fo(\))83 b(=)2984 5101 y(1)p 2927 5133
153 4 v 2927 5200 a FC(j)p Fr(S)2999 5179 y Fp(m)3059
5200 y FC(j)3103 5050 y Fl(j)p Fp(S)3163 5029 y Fg(m)3217
5050 y Fl(j)3114 5079 y Fm(X)3120 5236 y Fp(i)p Fq(=1)3249
5150 y Fy(DMISS)q Fo(\()p Fr(S)3546 5114 y Fp(m)3604
5150 y Fr(;)13 b(i)p Fo(\))p Fr(:)232 b FD(\(5\))2141
5347 y(It)32 b(is)f(e)n(vident)i(from)f(Equation)g(5)h(that)e(scaling)i
(can)f(lead)g(to)g(lo)n(wer)2042 5430 y(data)j(miss)g(rates,)g(as)g
(the)g(coef)n(\002cient)h Fo(1)p Fr(=)p FC(j)p Fr(S)3288
5398 y Fp(m)3347 5430 y FC(j)53 b Fo(=)f(1)p Fr(=)p Fo(\()p
Fr(m)30 b FC(\002)f(j)p Fr(S)t FC(j)p Fo(\))35 b FD(is)p
eop
%%Page: 5 5
5 4 bop -150 66 a FD(in)m(v)o(ersely)36 b(proportional)h(to)e
Fr(m)p FD(.)g(Ho)n(we)n(v)o(er)m(,)h(as)f(the)h(scaling)g(f)o(actor)g
Fr(m)-150 149 y FD(gro)n(ws)17 b(lar)o(ger)m(,)f(more)h(of)g(the)f
Fy(DMISS)h FD(v)n(alues)h(transition)e(from)h Fo(0)g
FD(to)f Fo(1)h FD(\(the)o(y)-150 232 y(increase)23 b(monotonically)h
(with)f(the)f(I/O)g(rate,)g(which)h(is)g(proportional)g(to)-150
315 y Fr(m)p FD(\).)f(F)o(or)g(suf)n(\002ciently)h(lar)o(ge)f
Fr(m)p FD(,)g Fy(DMR)p Fo(\()p Fr(S)988 284 y Fp(m)1046
315 y Fo(\))29 b(=)f(1)p FD(.)23 b(Thus,)f(scaling)h(must)-150
399 y(be)c(performed)h(in)f(moderation)i(to)e(a)o(v)o(oid)g(ne)o(gati)n
(v)o(ely)g(impacting)h(the)f(data)-150 482 y(locality)-5
b(.)-50 565 y(Note)24 b(that)g(in)h(order)f(to)h(generalize)g(the)g
(data)f(miss)g(rate)h(equation)g(so)-150 648 y(that)31
b(it)f(properly)i(accounts)g(for)e(the)h(dynamic)h(w)o(orking)g(set,)e
(we)h(must)-150 731 y(consider)24 b(the)e(amount)i(of)f(data)g(reuse)g
(within)f(a)h(phase.)g(This)g(is)f(because)-150 814 y(an)o(y)28
b(actor)f(that)g(\002res)g(within)f Fy(phase\(S,i\))i
FD(might)f(consume)i(some)f(or)f(all)-150 897 y(of)21
b(the)g(data)g(generated)i(by)e Fr(S)t Fo([)p Fr(i)p
Fo(])p FD(.)h(The)f(current)g(model)h(is)e(simplistic,)h(and)-150
980 y(leads)h(to)f(e)o(xaggerated)i(I/O)e(requirements)i(for)e(a)g
(phase.)h(W)-6 b(e)21 b(also)h(do)g(not)-150 1063 y(model)g(the)g(ef)n
(fects)g(of)f(cache)i(con\003icts,)e(and)h(tak)o(e)g(an)g
(\223atomic\224)g(vie)n(w)g(of)-150 1146 y(cache)e(misses)f(\(i.e.,)e
(either)i(the)g(entire)g(w)o(orking)h(set)f(hits)f(or)h(misses\).)-150
1324 y FA(4.)91 b(Cache)21 b(Optimizations)-150 1440
y FD(In)33 b(this)g(section)h(we)f(describe)h(tw)o(o)g(cache)g(a)o(w)o
(are)g(optimizations)f(that)-150 1523 y(are)21 b(geared)g(to)n(w)o(ard)
h(impro)o(ving)f(the)g(cache)h(beha)o(vior)f(of)g(streaming)g(pro-)-150
1606 y(grams.)j(First,)e(we)i(describe)h Fy(e)o(xecution)g(scaling)f
FD(which)h(scales)f(a)g(steady)-150 1689 y(state)18 b(to)f(impro)o(v)o
(e)i(instruction)f(locality)-5 b(,)18 b(subject)g(to)g(the)g(data)g(w)o
(orking)h(set)-150 1773 y(constraints)k(of)g(the)g(actors)g(in)f(the)h
(stream)g(graph.)g(Second,)g(we)g(describe)-150 1856
y Fy(cac)o(he)h(awar)m(e)f(fusion)h FD(which)f(performs)g(a)g(series)g
(of)g(granularity)g(adjust-)-150 1939 y(ments)f(to)f(the)g(actors)h(in)
f(the)h(steady)g(state.)e(The)i(fusion)g(serv)o(es)f(to)g
Fo(\()p Fr(i)p Fo(\))h FD(re-)-150 2022 y(duce)f(the)g(o)o(v)o(erhead)h
(of)f(switching)g(between)g(actors,)f Fo(\()p Fr(ii)p
Fo(\))h FD(create)g(coarser)-150 2105 y(grained)i(actors)g(for)f(e)o(x)
o(ecution)i(scaling,)e(and)h Fo(\()p Fr(iii)p Fo(\))g
FD(enable)g(no)o(v)o(el)g(b)o(uf)n(fer)-150 2188 y(management)d
(techniques)h(between)e(fused)h(actors)f(\(see)g(Section)g(5\).)-150
2325 y Fs(4.1)75 b(Execution)18 b(Scaling)-150 2441 y
FD(W)-6 b(e)20 b(ha)o(v)o(e)h(already)h(alluded)f(to)g(e)o(x)o(ecution)
h(scaling)f(in)g(pre)n(vious)h(sections.)-150 2524 y(As)28
b(the)g(instruction)g(cache)h(model)f(sho)n(ws,)h(increasing)f(the)g
(number)h(of)-150 2607 y(consecuti)n(v)o(e)35 b(\002rings)d(of)i(the)f
(same)g(actor)g(leads)h(to)f(lo)n(wer)g(instruction)-150
2690 y(cache)25 b(miss)g(rates.)f(Ho)n(we)n(v)o(er)m(,)h(scaling)g
(increases)g(the)g(data)g(b)o(uf)n(fers)f(that)-150 2773
y(are)e(maintained)i(between)f(actors.)f(Thus)h(it)f(is)g(prudent)h
(that)g(we)f(account)-150 2856 y(for)d(the)g(data)g(w)o(orking)h(set)f
(requirements)g(as)g(we)g(scale)g(a)g(steady)h(state.)-50
2939 y(Our)33 b(approach)j(is)d(to)h(scale)g(the)g(entire)g(steady)g
(state)g(by)g(a)g(single)-150 3022 y(scaling)25 b(f)o(actor)m(,)g(with)
g(the)g(constraint)g(that)g(only)h(a)e(small)h(percentage)h(of)-150
3105 y(the)31 b(actors)f(o)o(v)o(er\003o)n(w)h(the)g(data)g(cache.)g
(Our)f(tw)o(o-staged)i(algorithm)f(is)-150 3188 y(outlined)20
b(in)e(Figure)h(6.)-50 3271 y(First,)d(the)i(algorithm)g(calculates)h
(the)f(lar)o(gest)f(possible)i(scaling)f(f)o(actor)-150
3354 y(for)37 b(e)n(v)o(ery)g(actor)g(that)f(appears)i(in)e(the)h
(steady)g(state.)f(T)-6 b(o)37 b(do)g(this,)f(it)-150
3437 y(calculates)29 b(the)g(amount)h(of)f(data)g(produced)i(by)e(each)
h(actor)f(\002ring)g(and)-150 3520 y(di)n(vides)d(the)f(a)o(v)n
(ailable)g(data)h(cache)f(size)h(by)f(this)g(data)g(production)i(rate.)
-150 3603 y(In)j(addition,)h(the)g(algorithm)g(can)f(toggle)h(the)g(ef)
n(fecti)n(v)o(e)g(cache)g(size)f(to)-150 3686 y(account)20
b(for)f(v)n(arious)h(e)n(viction)f(policies.)-50 3769
y(Second,)31 b(it)f(chooses)i(the)e(lar)o(gest)h(f)o(actor)f(that)h
(allo)n(ws)g(a)f(fraction)h Fr(p)-150 3852 y FD(of)i(the)g(steady)h
(state)e(actors)i(to)e(be)i(scaled)f(safely)g(\(i.e.,)f(the)h(cache)h
(is)-150 3935 y(adequate)28 b(for)f(their)g(I/O)f(requirements\).)i(F)o
(or)e(e)o(xample,)i(the)f(algorithm)-150 4018 y(might)e(calculate)h
Fr(m)408 4026 y Ff(A)475 4018 y Fo(=)33 b(10)p FD(,)26
b Fr(m)757 4026 y Ff(B)824 4018 y Fo(=)33 b(20)p FD(,)25
b Fr(m)1105 4026 y Ff(C)1172 4018 y Fo(=)33 b(30)p FD(,)26
b(and)g Fr(m)1587 4026 y Ff(D)1654 4018 y Fo(=)33 b(40)p
FD(,)-150 4101 y(for)18 b(four)g(actors)g(in)f(some)h(steady)h(state.)e
(That)g(is,)g(scaling)h(actor)g Fu(A)g FD(be)o(yond)-150
4184 y(10)24 b(consecuti)n(v)o(e)i(iterations)e(will)f(cause)i(its)e
(dynamic)i(I/O)e(requirements)-150 4267 y(to)35 b(e)o(xceed)h(the)f
(data)h(cache.)f(Therefore,)g(the)g(lar)o(gest)g Fr(m)f
FD(that)h(allo)n(ws)-150 4350 y Fr(p)j Fo(=)f(90\045)29
b FD(of)e(the)h(actors)g(to)g(be)g(scaled)g(without)g(violating)g(the)f
(cache)-150 4433 y(constraints)15 b(is)f(10.)h(Similarly)-5
b(,)13 b(to)h(allo)n(w)h(for)f(the)h(safe)f(scaling)h(of)g
Fr(p)21 b Fo(=)g(75\045)-150 4516 y FD(of)e(the)g(actors,)g(the)g(lar)o
(gest)f(f)o(actor)h(we)g(can)h(choose)g(is)e(20.)-50
4599 y(In)e(our)g(implementation,)g(we)g(use)g(a)g(90-10)h(heuristic.)f
(In)g(other)g(w)o(ords,)-150 4682 y(we)j(set)f Fr(p)j
Fo(=)g(90\045)p FD(.)e(W)-6 b(e)18 b(empirically)h(determined)h(this)e
(v)n(alue)i(via)f(a)f(series)-150 4765 y(of)30 b(e)o(xperiments)h
(using)f(our)h(benchmark)g(suite;)f(see)g([18)q(])f(for)h(detailed)-150
4848 y(results.)-50 4932 y(Note)24 b(that)g(our)h(algorithm)g(adjusts)g
(the)f(ef)n(fecti)n(v)o(e)h(cache)g(size)f(that)h(is)-150
5015 y(reserv)o(ed)31 b(for)g(an)g(actor')l(s)g(dynamic)h(w)o(orking)f
(set)g(\(i.e.,)e(data)i(accessed)-150 5098 y(via)36 b
Fu(pop)f FD(and)h Fu(push)p FD(\).)e(This)i(adjustment)g(allo)n(ws)g
(us)g(to)f(control)h(the)-150 5181 y(fraction)18 b(of)g(the)g(cache)h
(that)f(is)g(used)g(for)g(reading)h(and)g(writing)e(data\227and)-150
5264 y(af)n(fords)30 b(some)g(\003e)o(xibility)f(in)h(tar)o(geting)f(v)
n(arious)i(cache)f(or)o(ganizations.)-150 5347 y(F)o(or)25
b(e)o(xample,)i(architectures)g(with)e(highly)i(associati)n(v)o(e)g
(and)f(multile)n(v)o(el)-150 5430 y(caches)h(may)g(bene\002t)f(from)h
(scaling)f(up)h(the)g(ef)n(fecti)n(v)o(e)f(cache)h(size)g(\(i.e.,)p
2042 12 2007 4 v 2042 1626 4 1615 v 2163 88 a(//)19 b
Fy(Returns)g(a)g(scaling)g(factor)h(for)e(steady)i(state)f
Fr(S)2163 171 y FD(//)g(-)f Fr(c)h FD(is)g(the)g(data)g(cache)h(size)
2163 254 y(//)f(-)f Fr(\013)h FD(is)g(the)g(fraction)g(of)g
Fr(c)g FD(dedicated)h(for)e(I/O)2163 337 y(//)h(-)f Fr(p)g
FD(is)h(the)g(desired)g(percentile)h(of)f(all)f(actors)h(to)g(be)2163
420 y(//)56 b(satis\002ed)19 b(by)g(the)g(chosen)h(scaling)g(f)o(actor)
f Fo(\(0)i Fr(<)g(p)g FC(\024)g Fo(1)p FD(\))2163 503
y Fs(calculateScalingF)n(actor)p FD(\()p Fr(S)t FD(,)e
Fr(c)p FD(,)g Fr(\013)p FD(,)g Fr(p)p FD(\))f FC(f)2219
586 y Fs(cr)o(eate)i FD(array)f Fr(M)27 b FD(of)19 b(size)g
FC(j)p Fr(S)t FC(j)2219 669 y Fs(f)n(or)h Fr(i)f FD(=)f(1)h(to)g
FC(j)p Fr(S)t FC(j)h(f)2275 752 y Fr(a)i Fo(=)f Fr(S)t
Fo([)p Fr(i)p Fo(])2275 835 y FD(//)e(calculate)g(ef)n(fecti)n(v)o(e)g
(cache)h(size)2275 918 y Fr(c)2308 886 y Fl(0)2352 918
y Fo(=)h Fr(\013)d FC(\002)f Fo(\()p Fr(c)g FC(\000)g
Fy(State)p Fo(\()p Fr(a)p Fo(\)\))2275 1001 y FD(//)i(calculate)g
(scaling)g(f)o(actor)g(for)g Fr(a)g FD(such)2275 1084
y(//)g(that)f(I/O)h(requirements)h(are)e(close)i(to)e
Fr(c)3385 1052 y Fl(0)2275 1167 y Fr(M)8 b Fo([)p Fr(i)p
Fo(])23 b(=)e Fe(round)q Fo(\()p Fr(c)2820 1135 y Fl(0)2861
1167 y Fr(=)e Fy(IO)p Fo(\()p Fr(a;)13 b Fo(1\)\))2219
1250 y FC(g)2219 1333 y Fs(sort)20 b Fr(M)27 b FD(into)18
b(ascending)j(numerical)e(order)2219 1416 y Fr(i)j Fo(=)f
FC(b)e Fo(\(1)e FC(\000)g Fr(p)p Fo(\))g FC(\002)f(j)p
Fr(S)t FC(j)k(c)2219 1499 y Fs(r)o(etur)o(n)e Fr(M)8
b Fo([)p Fr(i)p Fo(])2163 1582 y FC(g)p 4045 1626 V 2042
1629 2007 4 v 2181 1780 a Fs(Figur)o(e)18 b(6.)37 b FD(Our)19
b(heuristic)g(for)g(calculating)h(the)f(scaling)g(f)o(actor)l(.)2042
2065 y Fr(\013)45 b(>)g Fo(1)p FD(\),)32 b(whereas)g(a)f(direct)g
(mapped)i(cache)g(that)e(is)g(more)h(prone)g(to)2042
2148 y(con\003icts)19 b(may)h(bene\002t)g(from)f(scaling)h(do)n(wn)g
(the)g(cache)g(\(i.e.,)e Fr(\013)23 b(<)f Fo(1)p FD(\).)d(In)2042
2232 y(our)e(implementation,)g(we)f(found)i Fr(\013)j
Fo(=)g(2)p Fr(=)p Fo(3)d FD(to)e(w)o(ork)i(well.)d(Ho)n(we)n(v)o(er)m
(,)i(we)2042 2315 y(note)e(that)g(the)g(optimal)g(choice)h(for)f(the)g
(ef)n(fecti)n(v)o(e)g(cache)h(size)f(is)f(a)h(comple)o(x)2042
2398 y(function)35 b(of)g(the)g(underlying)h(cache)g(or)o(ganization)f
(and)g(possibly)h(the)2042 2481 y(application)19 b(as)g(well;)f(this)g
(is)g(an)h(interesting)g(issue)g(that)f(w)o(arrants)h(further)2042
2564 y(in)m(v)o(estigation.)2042 2740 y Fs(4.2)75 b(Cache)19
b(A)-7 b(war)o(e)19 b(Fusion)2042 2856 y FD(In)h(StreamIt,)f(the)i
(granularity)g(of)f(actors)h(is)f(determined)h(by)g(the)g(applica-)2042
2939 y(tion)j(de)n(v)o(eloper)m(,)h(according)h(to)e(the)g(most)h
(natural)f(representation)i(of)e(an)2042 3022 y(algorithm.)17
b(When)g(compiling)h(to)e(a)h(cache-based)i(architecture,)e(the)g
(pres-)2042 3105 y(ence)f(of)f(a)g(lar)o(ge)g(number)i(of)e(actors)h(e)
o(xacerbates)g(the)f(transition)h(o)o(v)o(erhead)2042
3188 y(between)21 b(w)o(ork)g(functions.)g(It)f(is)g(the)h(role)g(of)f
(the)h(compiler)g(to)f(adjust)h(the)2042 3271 y(granularity)e(of)g(the)
g(stream)g(graph)h(to)f(mitigate)f(the)h(e)o(x)o(ecution)h(o)o(v)o
(erhead.)2141 3354 y(In)29 b(this)f(section)h(we)f(describe)h(an)g
(actor)g(coarsening)g(technique)h(we)2042 3437 y(refer)21
b(to)h(as)g Fy(cac)o(he)h(awar)m(e)f(fusion)h FD(\(CAF\).)d(When)i(tw)o
(o)g(actors)g(are)g(fused,)2042 3520 y(the)o(y)31 b(form)g(a)f(ne)n(w)h
(actor)g(whose)h(w)o(ork)f(function)h(is)e(equi)n(v)n(alent)i(to)f(its)
2042 3603 y(constituents.)21 b(F)o(or)g(e)o(xample,)g(let)g(an)g(actor)
g Fu(A)g FD(\002re)f Fr(n)h FD(times,)g(and)h(an)f(actor)2042
3686 y Fu(B)j FD(\002re)g Fo(2)p Fr(n)h FD(times)f(per)h(steady)g
(state:)f Fr(S)3098 3654 y Fp(n)3173 3686 y Fo(=)32 b(\()p
Fu(A)3339 3654 y Fp(n)3382 3686 y Fu(B)3427 3654 y Fp(n)3469
3686 y Fu(B)3514 3654 y Fp(n)3557 3686 y Fo(\))p FD(.)23
b(Fusing)i Fu(A)f FD(and)2042 3769 y Fu(B)c FD(results)h(in)f(an)h
(actor)g Fu(F)f FD(that)g(is)h(equi)n(v)n(alent)h(to)e(one)h(\002ring)g
(of)f Fu(A)h FD(and)g(tw)o(o)2042 3852 y(\002rings)e(of)g
Fu(B)p FD(;)g Fu(F)g FD(\002res)g Fr(n)g FD(times)g(per)h(steady)g
(state)f Fo(\()p Fr(S)3438 3820 y Fp(n)3503 3852 y Fo(=)j(\()p
Fu(F)3659 3820 y Fp(n)3702 3852 y Fo(\)\))p FD(.)c(In)i(other)2042
3935 y(terms,)d(the)g(w)o(ork)h(function)g(for)f(actor)h
Fu(F)e FD(inlines)i(the)f(w)o(ork)h(functions)g(of)f
Fu(A)2042 4018 y FD(and)i Fu(B)p FD(.)2141 4101 y(When)f(tw)o(o)g
(actors)f(are)g(fused,)h(their)f(e)o(x)o(ecutions)i(are)e(scaled)h
(such)g(that)2042 4184 y(the)24 b(output)i(rate)e(of)g(one)h(actor)g
(matches)g(the)g(input)f(rate)h(of)f(the)h(ne)o(xt.)f(In)2042
4267 y(the)c(e)o(xample,)g Fu(A)g FD(and)h Fu(B)e FD(represent)i(a)f
(producer)o(-consumer)i(pair)e(of)g(\002lters)2042 4350
y(within)27 b(a)g(pipeline,)g(with)g(\002lter)f Fu(A)h
FD(pushing)h(tw)o(o)g(items)f(per)g(\002ring,)f(and)2042
4433 y Fu(B)32 b FD(popping)i(one)f(item)f(per)h(\002ring.)f(The)g
(fusion)h(implicitly)f(scales)h(the)2042 4516 y(e)o(x)o(ecution)20
b(of)f Fu(B)f FD(so)h(that)g(it)f(runs)i(twice)e(for)h(e)n(v)o(ery)h
(\002ring)e(of)h Fu(A)p FD(.)2141 4599 y(Fusion)29 b(also)f(reduces)h
(the)f(o)o(v)o(erhead)i(of)e(switching)h(between)g(w)o(ork)2042
4682 y(functions.)d(In)g(our)g(infrastructure,)g(the)g(steady)h(state)f
(is)f(a)h(loop)h(that)e(in-)2042 4765 y(v)o(ok)o(es)33
b(the)f(w)o(ork)g(functions)h(via)f(method)h(calls.)f(Thus,)f(e)n(v)o
(ery)i(pair)f(of)2042 4848 y(fused)18 b(actors)g(eliminates)f(a)h
(method)g(call)f(\(per)h(in)m(v)o(ocation)g(of)g(the)f(actors\).)2042
4932 y(The)f(impact)g(on)g(performance)i(can)e(be)g(signi\002cant,)g(b)
o(ut)g(not)g(only)h(because)2042 5015 y(method)i(calls)e(are)h(remo)o
(v)o(ed:)h(the)f(fusion)g(of)g(tw)o(o)g(actors)g(also)g(enables)h(the)
2042 5098 y(compiler)j(to)g(optimize)g(across)h(function)f(boundaries.)
i(In)d(particular)m(,)h(for)2042 5181 y(actors)g(that)g(e)o(xchange)i
(only)f(a)f(fe)n(w)h(data)f(items,)g(the)g(compiler)h(can)f(allo-)2042
5264 y(cate)g(the)f(data)i(streams)e(to)h(re)o(gisters.)f(The)h(data)g
(channel)h(between)f(fused)2042 5347 y(actors)28 b(is)f(subject)i(to)e
(special)i(b)o(uf)n(fer)e(management)j(techniques)f(as)f(de-)2042
5430 y(scribed)19 b(in)g(the)g(ne)o(xt)g(section.)p eop
%%Page: 6 6
6 5 bop 249 44 a Fd(void->void)38 b(pipeline)h(BufferTest)f({)328
119 y(add)i(Source\(\);)328 193 y(add)g(FIR\(\);)249
268 y(})249 418 y(void->float)e(filter)h(Source)g({)328
492 y(work)g(push)h(1)f({)408 567 y(push\()g(...)g(\);)328
642 y(})249 717 y(})249 866 y(float->void)f(filter)h(FIR)g({)328
941 y(int)h(PEEK)f(=)h(4;)328 1015 y(work)f(pop)h(1)g(peek)f(PEEK)g({)
408 1090 y(float)g(result)g(=)h(0;)408 1165 y(for)f(\(int)h(i=1;)f
(i<PEEK;)g(i++\))g({)488 1240 y(result)g(+=)g(i*peek\(i\);)408
1314 y(})408 1389 y(pop\(\);)408 1464 y(print\(result\);)328
1538 y(})249 1613 y(})p -150 1665 1993 3 v 65 1749 a
Fs(Figur)o(e)18 b(7.)38 b FD(Original)18 b(StreamIt)g(code)i(for)f(the)
g(b)o(uf)n(fer)g(test.)-50 2021 y(There)31 b(are,)h(ho)n(we)n(v)o(er)m
(,)h(do)n(wnsides)g(to)e(fusion.)h(First,)f(as)h(more)g(and)-150
2104 y(more)e(actors)h(are)f(fused,)g(the)g(instruction)h(footprint)f
(can)h(dramatically)-150 2187 y(increase,)18 b(possibly)g(leading)g(to)
f(poor)h(use)g(of)f(the)g(instruction)h(cache.)g(Sec-)-150
2270 y(ond,)e(fusion)h(increases)f(the)g(data)g(footprint)g(when)h(the)
f(fused)g(actors)g(main-)-150 2353 y(tain)i(state)g(\(e.g.,)g(coef)n
(\002cient)g(arrays)h(and)g(lookup)h(tables\).)e(Our)g(fusion)h(al-)
-150 2436 y(gorithm)g(is)g(cache)h(a)o(w)o(are)f(in)g(that)g(it)g(is)f
(cognizant)j(of)e(the)g(instruction)h(and)-150 2519 y(data)f(sizes.)-50
2602 y(The)g(CAF)g(algorithm)h(uses)g(a)g(greedy)g(fusion)g(heuristic)g
(to)g(determine)-150 2685 y(which)g(\002lters)f(should)i(be)g(fused.)f
(It)f(continuously)j(fuses)e(actors)g(until)g(the)-150
2768 y(addition)i(of)f(a)h(ne)n(w)f(actor)h(causes)g(the)f(fused)h
(actor)f(to)g(e)o(xceed)i Fy(either)e FD(the)-150 2851
y(instruction)g(cache)g(capacity)-5 b(,)21 b(or)f(a)h(fraction)f(of)g
(the)h(data)g(cache)g(capacity)-5 b(.)-150 2934 y(F)o(or)16
b(the)h(former)m(,)f(we)h(estimate)f(the)h(instruction)g(code)h(size)e
(using)i(a)e(simple)-150 3017 y(count)25 b(of)f(the)h(number)g(of)f
(operations)i(in)e(the)g(intermediate)h(representa-)-150
3100 y(tion)f(of)g(the)f(w)o(ork)i(function.)f(F)o(or)f(the)h(latter)m
(,)f(we)g(allo)n(w)h(the)g(state)f(of)h(the)-150 3183
y(ne)n(w)19 b(fused)h(actor)f(to)g(occup)o(y)h(up)g(to)f(50\045)g(of)g
(the)g(data)g(cache)h(capacity)-5 b(.)-50 3266 y(The)28
b(algorithm)g(le)n(v)o(erages)h(the)g(hierarchical)f(nature)h(of)f(the)
g(stream)-150 3349 y(graph,)21 b(starting)g(at)g(the)g(leaf)f(nodes)i
(and)g(w)o(orking)g(upw)o(ard.)f(F)o(or)g(pipeline)-150
3432 y(streams,)16 b(the)h(algorithm)g(identi\002es)f(the)h(connection)
h(in)f(the)g(pipeline)g(with)-150 3515 y(the)26 b(highest)h
(steady-state)g(I/O)f(rate,)g(i.e.,)f(the)h(pair)g(of)h(\002lters)e
(that)h(com-)-150 3598 y(municate)f(the)g(lar)o(gest)g(number)g(of)g
(items)g(per)g(steady)g(state.)f(These)h(tw)o(o)-150
3681 y(\002lters)19 b(are)g(fused,)h(if)g(doing)g(so)g(respects)g(the)g
(instruction)g(and)h(data)e(cache)-150 3764 y(constraints.)28
b(T)-6 b(o)28 b(pre)n(v)o(ent)g(fragmentation)h(of)f(the)g(pipeline,)g
(each)h(fused)-150 3847 y(\002lter)21 b(is)g(further)h(fused)g(with)f
(its)g(upstream)i(and)f(do)n(wnstream)h(neighbors)-150
3930 y(so)f(long)h(as)f(the)g(constraints)g(are)g(met.)g(The)g
(algorithm)g(then)g(repeats)h(this)-150 4014 y(process)17
b(with)e(the)h(ne)o(xt)g(highest-bandwidth)h(connection)h(in)d(the)h
(pipeline,)-150 4097 y(continuing)k(until)f(no)h(more)f(\002lters)f
(can)i(be)f(fused.)g(F)o(or)g(splitjoin)g(streams,)-150
4180 y(the)j(CAF)e(algorithm)i(fuses)g(all)f(parallel)g(branches)i
(together)f(if)e(the)i(com-)-150 4263 y(bination)d(satis\002es)f(the)g
(instruction)h(and)g(data)f(constraints.)h(P)o(artial)e(fusion)-150
4346 y(of)23 b(a)f(splitjoin)g(is)h(not)f(helpful,)h(as)g(the)f(child)h
(streams)g(do)g(not)f(communi-)-150 4429 y(cate)d(directly)h(with)f
(each)h(other;)f(ho)n(we)n(v)o(er)m(,)i(complete)f(fusion)g(can)g
(enable)-150 4512 y(further)f(fusion)g(in)g(parent)h(pipelines.)-150
4732 y FA(5.)91 b(Buffer)22 b(Management)-150 4848 y
FD(A)15 b(salient)h(characteristic)g(of)g(stream)f(programs)i(is)e(the)
h(use)g(of)g(FIFO)f(chan-)-150 4932 y(nels)21 b(to)h(communicate)g
(between)g(parallel)g(components.)h(Such)e(channels)-150
5015 y(mak)o(e)33 b(e)o(xplicit)e(the)h(communication)h(between)g
(actors,)e(allo)n(wing)h(e)o(x)o(e-)-150 5098 y(cution)27
b(to)f(proceed)i(in)e(parallel)g(or)g(out-of-order)i(so)e(long)h(as)f
(items)g(are)-150 5181 y(produced)j(before)e(the)o(y)g(are)g(consumed.)
h(FIFO)d(channels)j(also)f(pro)o(vide)-150 5264 y(a)21
b(natural)g(abstraction)g(for)g(the)g(programmer)m(,)g(as)g(comple)o(x)
h(modules)g(can)-150 5347 y(be)h(assembled)g(from)g(a)f(set)g(of)g
(small,)g(reusable)h(components.)h(F)o(or)e(these)-150
5430 y(reasons,)i(it)f(is)g(important)h(to)f(optimize)h(the)g
(performance)h(of)e(communi-)2161 44 y Fd(void->void)39
b(filter)g(BufferTest)f({)2241 119 y(int)h(PEEK)h(=)f(4;)2241
193 y(float[4])g(BUFFER;)2241 268 y(int)g(push_index)g(=)g(0;)2241
343 y(int)g(pop_index)g(=)h(0;)2241 492 y(prework)f({)2321
567 y(for)g(\(int)g(i=0;)h(i<PEEK-1;)e(i++\))h({)2400
642 y(BUFFER[push_index++])e(=)j(...)f(;)2321 717 y(})2241
791 y(})2241 941 y(work)g({)2321 1015 y(//)g(run)h(Source)2321
1090 y(BUFFER[push_index])d(=)j(...)f(;)2321 1165 y(push_index)f(=)i
(\(push_index+1\))e(&)h(3;)2321 1314 y(//)g(run)h(FIR)2321
1389 y(float)f(result)g(=)g(0;)2321 1464 y(for)g(\(int)g(i=1;)h
(i<PEEK;)e(i++\))i({)2400 1538 y(result)f(+=)h
(i*BUFFER[\(pop_index+i\))d(&)i(3];)2321 1613 y(})2321
1688 y(pop_index)f(=)i(\(pop_index+1\))e(&)i(3;)2321
1763 y(print\(result\);)2241 1837 y(})2161 1912 y(})p
2042 1964 V 2049 2048 a Fs(Figur)o(e)18 b(8.)37 b FD(Fused)20
b(b)o(uf)n(fer)f(test)f(using)i(modulation)g(b)o(uf)n(fer)f
(management.)2042 2321 y(cation)25 b(channels.)g(An)f(ef)n(\002cient)g
(implementation)i(enables)f(a)f(high-le)n(v)o(el)2042
2404 y(abstraction)19 b(for)g(composing)i(actors)e(without)g
(sacri\002cing)g(performance.)2141 2487 y(Buf)n(fer)33
b(management)h(in)e(StreamIt)f(is)h(more)h(in)m(v)o(olv)o(ed)g(than)g
(some)2042 2570 y(other)19 b(stream)g(languages,)i(due)f(to)f(the)g
Fu(peek)f FD(operation.)i(The)f Fu(peek)g FD(op-)2042
2653 y(eration)g(allo)n(ws)h(an)g(actor)f(to)h(access)g(an)f(item)g(on)
h(its)f(input)h(channel)h(with-)2042 2736 y(out)k(remo)o(ving)h(the)g
(item)e(from)i(the)f(channel)h(\(remo)o(v)n(al)g(is)f(done)h(via)f(the)
2042 2819 y Fu(pop)15 b FD(operation\).)i(The)f Fu(peek)f
FD(functionality)h(is)g(v)o(ery)g(important)h(for)f(com-)2042
2902 y(ponents)25 b(such)f(as)g(FIR)f(\(Finite)g(Impulse)h(Response\))h
(actors)f(that)f(access)2042 2985 y(data)f(o)o(v)o(er)f(a)h(sliding)g
(windo)n(w)-5 b(.)22 b(Because)g(a)f(gi)n(v)o(en)i(data)f(item)f(is)g
(accessed)2042 3068 y(by)e(multiple)g(iterations)g(of)h(the)f(actor)m
(,)g(there)g(must)g(be)h(a)f(persistent)g(b)o(uf)n(fer)2042
3151 y(that)c(stores)h(items)g(across)g(e)o(x)o(ecutions.)h(In)f(the)g
(conte)o(xt)g(of)g(a)g(uniprocessor)m(,)2042 3234 y(ef)n(\002cient)h(b)
o(uf)n(fer)g(management)i(translates)e(to)h(ef)n(\002cient)f
(maintenance)h(and)2042 3317 y(addressing)23 b(of)f(this)g(b)o(uf)n
(fer)h(in)f(memory)-5 b(.)22 b(On)h(a)f(parallel)g(system,)g(b)o(uf)n
(fers)2042 3400 y(can)d(also)g(be)g(implemented)h(using)g(netw)o(ork)g
(links.)2141 3483 y(In)i(this)g(section,)g(we)g(e)o(xplore)g(tw)o(o)g
(basic)g(strate)o(gies)g(for)g(b)o(uf)n(fer)g(man-)2042
3566 y(agement)31 b(in)g(stream)f(programs.)i(The)e(\002rst)g(strate)o
(gy)-5 b(,)30 b(termed)h Fy(modula-)2042 3649 y(tion)p
FD(,)h(implements)h(a)f(traditional)h(circular)f(b)o(uf)n(fer)h(that)f
(is)g(inde)o(x)o(ed)i(by)2042 3732 y(wraparound)f(head)g(and)f(tail)f
(pointers.)h(The)f(second)i(strate)o(gy)-5 b(,)32 b(termed)2042
3815 y Fy(copy-shift)p FD(,)e(a)o(v)o(oids)h(modulo)g(operations)g(by)g
(shifting)g(the)f(b)o(uf)n(fer)h(con-)2042 3898 y(tents)21
b(after)h(each)g(e)o(x)o(ecution.)h(W)-6 b(e)21 b(demonstrate)i(that,)e
(while)g(a)h(nai)n(v)o(e)h(im-)2042 3981 y(plementation)h(of)g(cop)o
(y-shift)h(can)f(be)g Fo(2)p FC(\002)f FD(to)h Fo(3)p
FC(\002)f FD(slo)n(wer)h(than)g(modula-)2042 4064 y(tion,)19
b(optimizations)i(that)e(utilize)h(e)o(x)o(ecution)h(scaling)f(can)g
(boost)h(the)f(per)o(-)2042 4147 y(formance)28 b(of)f(cop)o(y-shift)g
(to)g(be)g(signi\002cantly)h(f)o(aster)f(than)g(modulation)2042
4230 y(\(51\045)i(speedup)h(on)f(StrongARM,)f(48\045)h(speedup)h(on)f
(Pentium)f(3,)g(and)2042 4313 y(5\045)19 b(speedup)i(on)e(Itanium)g
(2\).)2141 4396 y(Our)34 b(study)h(is)e(done)i(in)f(the)f(conte)o(xt)i
(of)f(a)f(synthetic)i(benchmark,)2042 4479 y(sho)n(wn)h(in)g(Figure)f
(7.)g(The)h(benchmark)h(is)e(a)h(pipeline)g(consisting)g(of)2042
4563 y(a)29 b(simple)h(source)h(and)f(an)g(FIR)f(actor)l(.)g(On)h(each)
g(iteration,)g(the)f(source)2042 4646 y(pushes)18 b(a)f(single)h(item.)
e(The)i(FIR)e(actor)h(calculates)h(a)f(weighted)h(sum)g(o)o(v)o(er)2042
4729 y Fu(PEEK)g FD(items)g(of)h(the)g(input,)g(then)g(pops)h(a)f
(single)g(item)f(from)h(the)g(channel.)2042 4812 y(In)g(our)g(e)o
(xperiments,)g(we)g(v)n(ary)h(the)f Fu(PEEK)f FD(v)n(alue)h(from)g(1)g
(to)g(128)h(items.)2042 4981 y Fs(5.1)75 b(Modulation)2042
5098 y FD(Figure)25 b(8)g(illustrates)g(a)g(fused)h(v)o(ersion)g(of)f
(the)h(benchmark)h(using)f(mod-)2042 5181 y(ulation)i(for)f(b)o(uf)n
(fer)g(management.)i(F)o(or)e(simplicity)-5 b(,)26 b(we)i(illustrate)e
(each)2042 5264 y(b)o(uf)n(fer)15 b(management)i(strate)o(gy)e(as)g(a)g
(source-to-source)i(transformation)f(in)2042 5347 y(StreamIt.)i(Each)h
(fused)h(actor)f(contains)h(a)f Fu(prework)f FD(function)i(in)f(which)
2042 5430 y(the)d(source)h(actor)f(e)o(x)o(ecutes)h(se)n(v)o(eral)f
(times)g(to)g(prime)g(the)g(communication)p eop
%%Page: 7 7
7 6 bop -210 918 a @beginspecial 0 @llx 0 @lly 715 @urx
468 @ury 1728 @rwi @setspecial
%%BeginDocument: arm-buf.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: arm-buf.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/19/2005
%%CropBox: 0.000000 0.000000 714.205078 467.040039
%%BoundingBox: 0 0 715 468 
%%HiResBoundingBox: 0.000000 0.000000 714.205078 467.040039
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.04 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.04 ln
714.205 467.04 ln
714.205 0 ln
clp
gsave
83.3398 324.3 mo
83.3398 324.36 ln
658.92 324.36 ln
658.92 324.3 ln
83.3398 324.3 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
83.3398 324.3 mo
658.92 324.3 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
83.3398 263.46 mo
83.3398 263.52 ln
658.92 263.52 ln
658.92 263.46 ln
83.3398 263.46 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
83.3398 263.46 mo
658.92 263.46 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
370.98 202.681 mo
370.98 202.741 ln
658.92 202.741 ln
658.92 202.681 ln
370.98 202.681 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
83.3398 202.681 mo
658.92 202.681 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
370.98 141.84 mo
370.98 141.9 ln
658.92 141.9 ln
658.92 141.84 ln
370.98 141.84 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
83.3398 141.84 mo
658.92 141.84 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
370.98 81.0605 mo
370.98 81.1206 ln
658.92 81.1206 ln
658.92 81.0605 ln
370.98 81.0605 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
83.3398 81.0605 mo
658.92 81.0605 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
83.3398 20.2207 mo
83.3398 20.2803 ln
658.92 20.2803 ln
658.92 20.2207 ln
83.3398 20.2207 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
83.3398 20.2207 mo
658.92 20.2207 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
0 0 mo
0 467.04 ln
683.04 467.04 ln
683.04 0 ln
0 0 ln
cp
82.9805 20.4004 mo
82.9805 203.4 ln
370.98 203.4 ln
370.98 20.4004 ln
82.9805 20.4004 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
83.3398 20.2207 mo
83.3398 385.08 ln
658.92 385.08 ln
658.92 20.2207 ln
83.3398 20.2207 ln
cp
false op
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
0.0599976 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
83.3398 20.2207 mo
83.3398 385.08 ln
77.0996 385.08 mo
83.3398 385.08 ln
77.0996 324.3 mo
83.3398 324.3 ln
77.0996 263.46 mo
83.3398 263.46 ln
77.0996 202.681 mo
83.3398 202.681 ln
77.0996 141.84 mo
83.3398 141.84 ln
77.0996 81.0605 mo
83.3398 81.0605 ln
77.0996 20.2207 mo
83.3398 20.2207 ln
83.3398 385.08 mo
658.92 385.08 ln
83.3398 391.32 mo
83.3398 385.08 ln
119.34 391.32 mo
119.34 385.08 ln
155.28 391.32 mo
155.28 385.08 ln
191.28 391.32 mo
191.28 385.08 ln
227.22 391.32 mo
227.22 385.08 ln
263.22 391.32 mo
263.22 385.08 ln
299.16 391.32 mo
299.16 385.08 ln
335.16 391.32 mo
335.16 385.08 ln
371.16 391.32 mo
371.16 385.08 ln
407.101 391.32 mo
407.101 385.08 ln
443.101 391.32 mo
443.101 385.08 ln
479.04 391.32 mo
479.04 385.08 ln
515.04 391.32 mo
515.04 385.08 ln
550.98 391.32 mo
550.98 385.08 ln
586.98 391.32 mo
586.98 385.08 ln
622.92 391.32 mo
622.92 385.08 ln
658.92 391.32 mo
658.92 385.08 ln
false op
0 0 0 1 cmyk
s
0.960007 lw
1 lj
83.3398 383.28 mo
119.34 367.38 ln
155.28 348.18 ln
191.28 328.68 ln
227.22 308.76 ln
263.22 289.2 ln
299.16 267.96 ln
335.16 246.96 ln
371.16 226.92 ln
407.101 206.94 ln
443.101 185.641 ln
479.04 163.561 ln
515.04 141.721 ln
550.98 120.42 ln
586.98 98.1606 ln
622.92 76.4404 ln
658.92 56.7002 ln
83.3398 383.28 mo
119.34 375.06 ln
155.28 359.94 ln
191.28 340.26 ln
227.22 325.26 ln
263.22 307.92 ln
299.16 289.2 ln
335.16 272.7 ln
371.16 257.28 ln
407.101 241.2 ln
443.101 221.16 ln
479.04 202.561 ln
515.04 182.641 ln
550.98 169.561 ln
586.98 141.96 ln
622.92 121.86 ln
658.92 102.661 ln
83.3398 383.28 mo
119.34 370.14 ln
155.28 356.16 ln
191.28 343.5 ln
227.22 329.82 ln
263.22 316.68 ln
299.16 302.46 ln
335.16 288.66 ln
371.16 275.58 ln
407.101 262.8 ln
443.101 248.46 ln
479.04 233.7 ln
515.04 219 ln
550.98 204.541 ln
586.98 189.36 ln
622.92 174.181 ln
658.92 162.181 ln
83.3398 383.34 mo
119.34 377.04 ln
155.28 369.84 ln
191.28 360.72 ln
227.22 351.84 ln
263.22 340.44 ln
299.16 332.16 ln
335.16 323.04 ln
371.16 315.9 ln
407.101 305.7 ln
443.101 297.72 ln
479.04 286.92 ln
515.04 277.26 ln
550.98 266.22 ln
586.98 255.66 ln
622.92 246.36 ln
658.92 237.84 ln
s
78.8398 378.78 mo
78.8398 387.72 ln
87.7803 387.72 ln
87.7803 378.78 ln
78.8398 378.78 ln
ef
0 lj
78.8398 378.78 mo
78.8398 387.72 ln
87.7803 387.72 ln
87.7803 378.78 ln
78.8398 378.78 ln
cp
s
114.84 362.88 mo
114.84 371.82 ln
123.78 371.82 ln
123.78 362.88 ln
114.84 362.88 ln
ef
114.84 362.88 mo
114.84 371.82 ln
123.78 371.82 ln
123.78 362.88 ln
114.84 362.88 ln
cp
s
150.78 343.68 mo
150.78 352.62 ln
159.72 352.62 ln
159.72 343.68 ln
150.78 343.68 ln
ef
150.78 343.68 mo
150.78 352.62 ln
159.72 352.62 ln
159.72 343.68 ln
150.78 343.68 ln
cp
s
186.78 324.18 mo
186.78 333.12 ln
195.72 333.12 ln
195.72 324.18 ln
186.78 324.18 ln
ef
186.78 324.18 mo
186.78 333.12 ln
195.72 333.12 ln
195.72 324.18 ln
186.78 324.18 ln
cp
s
222.72 304.26 mo
222.72 313.2 ln
231.66 313.2 ln
231.66 304.26 ln
222.72 304.26 ln
ef
222.72 304.26 mo
222.72 313.2 ln
231.66 313.2 ln
231.66 304.26 ln
222.72 304.26 ln
cp
s
258.72 284.7 mo
258.72 293.64 ln
267.66 293.64 ln
267.66 284.7 ln
258.72 284.7 ln
ef
258.72 284.7 mo
258.72 293.64 ln
267.66 293.64 ln
267.66 284.7 ln
258.72 284.7 ln
cp
s
294.66 263.46 mo
294.66 272.4 ln
303.6 272.4 ln
303.6 263.46 ln
294.66 263.46 ln
ef
294.66 263.46 mo
294.66 272.4 ln
303.6 272.4 ln
303.6 263.46 ln
294.66 263.46 ln
cp
s
330.66 242.46 mo
330.66 251.4 ln
339.6 251.4 ln
339.6 242.46 ln
330.66 242.46 ln
ef
330.66 242.46 mo
330.66 251.4 ln
339.6 251.4 ln
339.6 242.46 ln
330.66 242.46 ln
cp
s
366.66 222.42 mo
366.66 231.36 ln
375.601 231.36 ln
375.601 222.42 ln
366.66 222.42 ln
ef
366.66 222.42 mo
366.66 231.36 ln
375.601 231.36 ln
375.601 222.42 ln
366.66 222.42 ln
cp
s
402.601 202.44 mo
402.601 211.38 ln
411.54 211.38 ln
411.54 202.44 ln
402.601 202.44 ln
ef
402.601 202.44 mo
402.601 211.38 ln
411.54 211.38 ln
411.54 202.44 ln
402.601 202.44 ln
cp
s
438.601 181.141 mo
438.601 190.081 ln
447.54 190.081 ln
447.54 181.141 ln
438.601 181.141 ln
ef
438.601 181.141 mo
438.601 190.081 ln
447.54 190.081 ln
447.54 181.141 ln
438.601 181.141 ln
cp
s
474.54 159.061 mo
474.54 168 ln
483.48 168 ln
483.48 159.061 ln
474.54 159.061 ln
ef
474.54 159.061 mo
474.54 168 ln
483.48 168 ln
483.48 159.061 ln
474.54 159.061 ln
cp
s
510.54 137.221 mo
510.54 146.161 ln
519.48 146.161 ln
519.48 137.221 ln
510.54 137.221 ln
ef
510.54 137.221 mo
510.54 146.161 ln
519.48 146.161 ln
519.48 137.221 ln
510.54 137.221 ln
cp
s
546.48 115.92 mo
546.48 124.86 ln
555.42 124.86 ln
555.42 115.92 ln
546.48 115.92 ln
ef
546.48 115.92 mo
546.48 124.86 ln
555.42 124.86 ln
555.42 115.92 ln
546.48 115.92 ln
cp
s
582.48 93.6606 mo
582.48 102.601 ln
591.42 102.601 ln
591.42 93.6606 ln
582.48 93.6606 ln
ef
582.48 93.6606 mo
582.48 102.601 ln
591.42 102.601 ln
591.42 93.6606 ln
582.48 93.6606 ln
cp
s
618.42 71.9404 mo
618.42 80.8804 ln
627.36 80.8804 ln
627.36 71.9404 ln
618.42 71.9404 ln
ef
618.42 71.9404 mo
618.42 80.8804 ln
627.36 80.8804 ln
627.36 71.9404 ln
618.42 71.9404 ln
cp
s
654.42 52.2002 mo
654.42 61.1406 ln
663.36 61.1406 ln
663.36 52.2002 ln
654.42 52.2002 ln
ef
654.42 52.2002 mo
654.42 61.1406 ln
663.36 61.1406 ln
663.36 52.2002 ln
654.42 52.2002 ln
cp
s
gsave
78.3604 373.38 mo
78.3604 390.06 ln
93.2402 390.06 ln
93.2402 373.38 ln
78.3604 373.38 ln
clp
78.8398 378.78 mo
78.8398 387.72 ln
87.7803 387.72 ln
87.7803 378.78 ln
78.8398 378.78 ln
cp
s
grestore
114.84 370.56 mo
114.84 379.5 ln
123.78 379.5 ln
123.78 370.56 ln
114.84 370.56 ln
cp
150.78 355.44 mo
150.78 364.38 ln
159.72 364.38 ln
159.72 355.44 ln
150.78 355.44 ln
cp
186.78 335.76 mo
186.78 344.7 ln
195.72 344.7 ln
195.72 335.76 ln
186.78 335.76 ln
cp
222.72 320.76 mo
222.72 329.7 ln
231.66 329.7 ln
231.66 320.76 ln
222.72 320.76 ln
cp
258.72 303.42 mo
258.72 312.36 ln
267.66 312.36 ln
267.66 303.42 ln
258.72 303.42 ln
cp
294.66 284.7 mo
294.66 293.64 ln
303.6 293.64 ln
303.6 284.7 ln
294.66 284.7 ln
cp
330.66 268.2 mo
330.66 277.14 ln
339.6 277.14 ln
339.6 268.2 ln
330.66 268.2 ln
cp
366.66 252.78 mo
366.66 261.72 ln
375.601 261.72 ln
375.601 252.78 ln
366.66 252.78 ln
cp
402.601 236.7 mo
402.601 245.64 ln
411.54 245.64 ln
411.54 236.7 ln
402.601 236.7 ln
cp
438.601 216.66 mo
438.601 225.601 ln
447.54 225.601 ln
447.54 216.66 ln
438.601 216.66 ln
cp
474.54 198.061 mo
474.54 207 ln
483.48 207 ln
483.48 198.061 ln
474.54 198.061 ln
cp
510.54 178.141 mo
510.54 187.081 ln
519.48 187.081 ln
519.48 178.141 ln
510.54 178.141 ln
cp
546.48 165.061 mo
546.48 174 ln
555.42 174 ln
555.42 165.061 ln
546.48 165.061 ln
cp
582.48 137.46 mo
582.48 146.4 ln
591.42 146.4 ln
591.42 137.46 ln
582.48 137.46 ln
cp
618.42 117.36 mo
618.42 126.3 ln
627.36 126.3 ln
627.36 117.36 ln
618.42 117.36 ln
cp
s
gsave
649.021 92.7603 mo
649.021 112.561 ln
663.96 112.561 ln
663.96 92.7603 ln
649.021 92.7603 ln
clp
654.42 98.1606 mo
654.42 107.101 ln
663.36 107.101 ln
663.36 98.1606 ln
654.42 98.1606 ln
cp
s
grestore
83.3398 378.3 mo
88.3203 383.28 ln
83.3398 388.26 ln
78.3604 383.28 ln
83.3398 378.3 ln
ef
1 lj
83.3398 378.3 mo
88.3203 383.28 ln
83.3398 388.26 ln
78.3604 383.28 ln
83.3398 378.3 ln
cp
s
119.34 365.16 mo
124.32 370.14 ln
119.34 375.12 ln
114.36 370.14 ln
119.34 365.16 ln
ef
119.34 365.16 mo
124.32 370.14 ln
119.34 375.12 ln
114.36 370.14 ln
119.34 365.16 ln
cp
s
155.28 351.18 mo
160.26 356.16 ln
155.28 361.14 ln
150.3 356.16 ln
155.28 351.18 ln
ef
155.28 351.18 mo
160.26 356.16 ln
155.28 361.14 ln
150.3 356.16 ln
155.28 351.18 ln
cp
s
191.28 338.52 mo
196.26 343.5 ln
191.28 348.48 ln
186.3 343.5 ln
191.28 338.52 ln
ef
191.28 338.52 mo
196.26 343.5 ln
191.28 348.48 ln
186.3 343.5 ln
191.28 338.52 ln
cp
s
227.22 324.84 mo
232.2 329.82 ln
227.22 334.8 ln
222.24 329.82 ln
227.22 324.84 ln
ef
227.22 324.84 mo
232.2 329.82 ln
227.22 334.8 ln
222.24 329.82 ln
227.22 324.84 ln
cp
s
263.22 311.7 mo
268.2 316.68 ln
263.22 321.66 ln
258.24 316.68 ln
263.22 311.7 ln
ef
263.22 311.7 mo
268.2 316.68 ln
263.22 321.66 ln
258.24 316.68 ln
263.22 311.7 ln
cp
s
299.16 297.48 mo
304.14 302.46 ln
299.16 307.44 ln
294.18 302.46 ln
299.16 297.48 ln
ef
299.16 297.48 mo
304.14 302.46 ln
299.16 307.44 ln
294.18 302.46 ln
299.16 297.48 ln
cp
s
335.16 283.68 mo
340.14 288.66 ln
335.16 293.64 ln
330.18 288.66 ln
335.16 283.68 ln
ef
335.16 283.68 mo
340.14 288.66 ln
335.16 293.64 ln
330.18 288.66 ln
335.16 283.68 ln
cp
s
371.16 270.6 mo
376.141 275.58 ln
371.16 280.56 ln
366.18 275.58 ln
371.16 270.6 ln
ef
371.16 270.6 mo
376.141 275.58 ln
371.16 280.56 ln
366.18 275.58 ln
371.16 270.6 ln
cp
s
407.101 257.82 mo
412.08 262.8 ln
407.101 267.78 ln
402.12 262.8 ln
407.101 257.82 ln
ef
407.101 257.82 mo
412.08 262.8 ln
407.101 267.78 ln
402.12 262.8 ln
407.101 257.82 ln
cp
s
443.101 243.48 mo
448.08 248.46 ln
443.101 253.44 ln
438.12 248.46 ln
443.101 243.48 ln
ef
443.101 243.48 mo
448.08 248.46 ln
443.101 253.44 ln
438.12 248.46 ln
443.101 243.48 ln
cp
s
479.04 228.721 mo
484.021 233.7 ln
479.04 238.68 ln
474.061 233.7 ln
479.04 228.721 ln
ef
479.04 228.721 mo
484.021 233.7 ln
479.04 238.68 ln
474.061 233.7 ln
479.04 228.721 ln
cp
s
515.04 214.021 mo
520.021 219 ln
515.04 223.98 ln
510.061 219 ln
515.04 214.021 ln
ef
515.04 214.021 mo
520.021 219 ln
515.04 223.98 ln
510.061 219 ln
515.04 214.021 ln
cp
s
550.98 199.561 mo
555.96 204.541 ln
550.98 209.521 ln
546 204.541 ln
550.98 199.561 ln
ef
550.98 199.561 mo
555.96 204.541 ln
550.98 209.521 ln
546 204.541 ln
550.98 199.561 ln
cp
s
586.98 184.38 mo
591.96 189.36 ln
586.98 194.34 ln
582 189.36 ln
586.98 184.38 ln
ef
586.98 184.38 mo
591.96 189.36 ln
586.98 194.34 ln
582 189.36 ln
586.98 184.38 ln
cp
s
622.92 169.201 mo
627.9 174.181 ln
622.92 179.161 ln
617.94 174.181 ln
622.92 169.201 ln
ef
622.92 169.201 mo
627.9 174.181 ln
622.92 179.161 ln
617.94 174.181 ln
622.92 169.201 ln
cp
s
658.92 157.201 mo
663.9 162.181 ln
658.92 167.161 ln
653.94 162.181 ln
658.92 157.201 ln
ef
658.92 157.201 mo
663.9 162.181 ln
658.92 167.161 ln
653.94 162.181 ln
658.92 157.201 ln
cp
s
gsave
78.3604 377.82 mo
78.3604 388.92 ln
88.9199 388.92 ln
88.9199 377.82 ln
78.3604 377.82 ln
clp
83.3398 378.36 mo
88.3203 383.34 ln
83.3398 388.32 ln
78.3604 383.34 ln
83.3398 378.36 ln
cp
s
grestore
119.34 372.06 mo
124.32 377.04 ln
119.34 382.02 ln
114.36 377.04 ln
119.34 372.06 ln
cp
155.28 364.86 mo
160.26 369.84 ln
155.28 374.82 ln
150.3 369.84 ln
155.28 364.86 ln
cp
191.28 355.74 mo
196.26 360.72 ln
191.28 365.7 ln
186.3 360.72 ln
191.28 355.74 ln
cp
227.22 346.86 mo
232.2 351.84 ln
227.22 356.82 ln
222.24 351.84 ln
227.22 346.86 ln
cp
263.22 335.46 mo
268.2 340.44 ln
263.22 345.42 ln
258.24 340.44 ln
263.22 335.46 ln
cp
299.16 327.18 mo
304.14 332.16 ln
299.16 337.14 ln
294.18 332.16 ln
299.16 327.18 ln
cp
335.16 318.06 mo
340.14 323.04 ln
335.16 328.02 ln
330.18 323.04 ln
335.16 318.06 ln
cp
371.16 310.92 mo
376.141 315.9 ln
371.16 320.88 ln
366.18 315.9 ln
371.16 310.92 ln
cp
407.101 300.72 mo
412.08 305.7 ln
407.101 310.68 ln
402.12 305.7 ln
407.101 300.72 ln
cp
443.101 292.74 mo
448.08 297.72 ln
443.101 302.7 ln
438.12 297.72 ln
443.101 292.74 ln
cp
479.04 281.94 mo
484.021 286.92 ln
479.04 291.9 ln
474.061 286.92 ln
479.04 281.94 ln
cp
515.04 272.28 mo
520.021 277.26 ln
515.04 282.24 ln
510.061 277.26 ln
515.04 272.28 ln
cp
550.98 261.24 mo
555.96 266.22 ln
550.98 271.2 ln
546 266.22 ln
550.98 261.24 ln
cp
586.98 250.68 mo
591.96 255.66 ln
586.98 260.64 ln
582 255.66 ln
586.98 250.68 ln
cp
622.92 241.38 mo
627.9 246.36 ln
622.92 251.34 ln
617.94 246.36 ln
622.92 241.38 ln
cp
s
gsave
653.4 232.32 mo
653.4 243.42 ln
663.96 243.42 ln
663.96 232.32 ln
653.4 232.32 ln
clp
658.92 232.86 mo
663.9 237.84 ln
658.92 242.82 ln
653.94 237.84 ln
658.92 232.86 ln
cp
s
grestore
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9404 391.86 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8389 331.081 mov
(1) sh
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9508 331.081 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
50{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8389 270.241 mov
(2) sh
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9508 270.241 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8389 209.463 mov
(3) sh
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9508 209.463 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8389 148.623 mov
(4) sh
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9508 148.623 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f72e955f0050b5472
6b68794743aa9e2640fbbbe965e5c7462a0da2fe3396d6994552b6fd7b9f
c3a7f776be319813ddb449d1a761c2a25379bcdbddb59583b40898699b48
1611e523f8146fbaea058eb8237d1f8ef6c080ecb39f96cb6c0db3e3c586
248bc7c61f659dbd2f8aadac81a2448e7137d524> ND 
end end
end
/ArialMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8389 87.8438 mov
(5) sh
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9508 87.8438 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8389 27.0049 mov
(6) sh
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9508 27.0049 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
77.8193 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
144.177 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
155.286 414.305 mov
(6) sh
/ArialMT*4 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
216.128 414.305 mov
(3) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
227.232 414.305 mov
(2) sh
/ArialMT*5 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
288.075 414.305 mov
(4) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
299.179 414.305 mov
(8) sh
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
360.021 414.305 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*5 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
371.125 414.305 mov
(4) sh
/ArialMT*8 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
431.967 414.305 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
443.071 414.305 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52805a666
172babb1d73a09fb0432847d9265c3c057d0112d971ed0197edf6801f0cc
d27a4300d973d4627332ff0ca814c0ce250c35754139515ccbb98571061c
85e232c5d2724d28cade69abed806808a329f904488eec02d4bf36c25046
f7a1306ac101498c67190cf8a8e43a1298791a833df5d0225170130cde4e
6dbabf7a8e794c3de6dcec3e9a0c2449b47003a2eed622096fc30cf785b4
a1aacc0e4ca1048fbda9f51c6b8cea845ce656cef8e1da09ee2450f7b737
e0b1217086fc607fb5d514dedd6adb> ND 
end end
end
/ArialMT findfont /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
57{/.notdef}repeat /nine 198{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
503.913 414.305 mov
(9) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
516.404 414.305 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
559.214 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
570.323 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
581.433 414.305 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
631.145 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
642.254 414.305 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
653.363 414.305 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cfff7245123ea6b2
d3214893f78b8e97a902c5375a62b28f195ef7bcf7433d165aabe00f6ab5
df5c1416686a683684fa8149e3bf05c7b6218afab10e5daaa2762eacaf31
125a4410c16cee824d27ee8e4170fe84de9bb1d3f9bb831995b6> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 80 /P put
dup 101 /e put
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
80{/.notdef}repeat /P 20{/.notdef}repeat /e 5{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
371.938 442.984 mov
(Peek) sh
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/E 
<10bf317028198094ce8cd275e305c79a7a258ddd928bd9dc896c51a549b4
869242612fc9caa06c2483d03d9996ef> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 69 /E put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 27{/.notdef}repeat /E 29{/.notdef}repeat 
/c /d 4{/.notdef}repeat /i 3{/.notdef}repeat /m /n /o 
3{/.notdef}repeat /s /t /u 2{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 314.88 mov
(Ex) sh
/ArialMT*10 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 291.563 mov
(e) sh
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 280.451 mov
(cution tim) sh
/ArialMT*10 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 194.951 mov
(e) sh
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 183.839 mov
( \(s) sh
/ArialMT*10 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 161.645 mov
(e) sh
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 150.533 mov
(conds\)) sh
370.92 20.46 mo
370.92 203.4 ln
83.04 203.4 ln
83.04 20.46 ln
370.92 20.46 ln
0 0 0 0 cmyk
f
0.0599976 lw
82.9805 20.4004 mo
82.9805 203.4 ln
370.92 203.4 ln
370.92 20.4004 ln
82.9805 20.4004 ln
cp
0 0 0 1 cmyk
s
0.960007 lw
97.1396 44.4004 mo
122.16 44.4004 ln
s
105.12 39.9004 mo
105.12 48.8398 ln
114.06 48.8398 ln
114.06 39.9004 ln
105.12 39.9004 ln
ef
0 lj
105.12 39.9004 mo
105.12 48.8398 ln
114.06 48.8398 ln
114.06 39.9004 ln
105.12 39.9004 ln
cp
s
save_ctm
restore_ctm
1 lj
97.1396 90.1201 mo
122.16 90.1201 ln
s
0 lj
105.12 85.6201 mo
105.12 94.5605 ln
114.06 94.5605 ln
114.06 85.6201 ln
105.12 85.6201 ln
cp
s
save_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
126.84 51.0605 mov
(co) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd416a4f286324
3708bb18c93b6ff9009987165c661f3cf3b3d4268ae53d21376706d87451
5a09c8e0501f41699e842e2b1499d14714dfea5e38b494c7b6527dbf4887
431b1f716378> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
/y 
<10bf317069b1fd7143194d5a8e15b6f90ac84d61c2210d0bc6dd6d1fb8ca
8bb9fc3e481d183ae50bbfabb21fc2a3f1f6595151c5a2f4acc8d226e0ff
0b4c85bc46ca5265bff351a7f03e78e04c2c72a9d7a9ee7a636db5f99d04
3f9d21fc223e35d9c765eb6b3d5d297173ba8b09f049b0d68aa85f244d1b
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
dup 102 /f put
dup 104 /h put
dup 112 /p put
dup 121 /y put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
45{/.notdef}repeat /hyphen 56{/.notdef}repeat /f /.notdef /h 7{/.notdef}repeat /p 
8{/.notdef}repeat /y 134{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
147.942 51.0605 mov
(py-) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
175.697 51.0605 mov
(s) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
185.687 51.0605 mov
(h) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
196.799 51.0605 mov
(i) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
201.238 51.0605 mov
(f) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
206.789 51.0605 mov
(t) sh
restore_ctm
1 lj
97.1396 135.84 mo
122.16 135.84 ln
s
109.62 130.86 mo
114.6 135.84 ln
109.62 140.82 ln
104.64 135.84 ln
109.62 130.86 ln
ef
109.62 130.86 mo
114.6 135.84 ln
109.62 140.82 ln
104.64 135.84 ln
109.62 130.86 ln
cp
s
save_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
126.84 96.7803 mov
(co) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
147.942 96.7803 mov
(py-) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
175.697 96.7803 mov
(s) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
185.687 96.7803 mov
(h) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
196.799 96.7803 mov
(i) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
201.238 96.7803 mov
(f) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
206.789 96.7803 mov
(t ) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
dup 97 /a put
dup 108 /l put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
43{/.notdef}repeat /plus 53{/.notdef}repeat /a 10{/.notdef}repeat /l 5{/.notdef}repeat /r 
141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
217.891 96.7803 mov
(+) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
229.559 96.7803 mov
( sc) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
255.09 96.7803 mov
(alar) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
288.407 96.7803 mov
( ) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
293.958 96.7803 mov
(r) sh
/ArialMT*10 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
300.611 96.7803 mov
(e) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
311.723 96.7803 mov
(p) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
322.835 96.7803 mov
(la) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
338.386 96.7803 mov
(c) sh
/ArialMT*10 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
348.376 96.7803 mov
(e) sh
restore_ctm
97.1396 181.561 mo
122.16 181.561 ln
109.62 176.58 mo
114.6 181.561 ln
109.62 186.54 ln
104.64 181.561 ln
109.62 176.58 ln
cp
s
save_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
126.84 142.5 mov
(modu) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
176.819 142.5 mov
(la) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
192.37 142.5 mov
(tion) sh
restore_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
126.84 188.221 mov
(co) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
147.942 188.221 mov
(py-) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
175.697 188.221 mov
(s) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
185.687 188.221 mov
(h) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
196.799 188.221 mov
(i) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
201.238 188.221 mov
(f) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
206.789 188.221 mov
(t ) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
217.891 188.221 mov
(+) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
229.559 188.221 mov
( sc) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
255.09 188.221 mov
(al) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
270.641 188.221 mov
(in) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
286.192 188.221 mov
(g) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (arm-buf.eps)
%%CreationDate: 4/19/2005 12:57 AM
%AI9_DataStream
%Gb!$,>B:`RP4%p="TLj(3'uIb+M+^]m<t..Gud$!87U%/SthiQ5[[7'$qP=;:pstGrqjejZYfc3'"LY>MAZf@6=$n&nt+NoYJ,=q
%]"U:2>eYQtqW42YU.j;ieM]%i`c^8(_,k"Bqr3B>ZStMNa"A3fjA-TYZ.E1,P`?Xde%T,4Y:kXRm>LXP5&<,Q<m0$>o1ei;_sF])
%IeJf9R5KI8QHRh)c/[o%rjR4!GH8n=NIA0?ba..Yf&+-Q^:IK#L9j[:+J;ffCYJWSk))FV%,9plg$6iOH9&V[QMU9LB<G+P\nNnp
%?h_QV5?t>IX_1_u+6#8sb1J[;e[#WE%ZU':cA\t$Cq748CtH#\C)n,'@GlNS:'f7S?PrZdF$@Jncl.Id_A]f<lgGV4iOdY:@^^./
%Z#glbm`,b;7qbCSp-60Z0<`]V(PMJ?N.KmU2r/9Kj5mN$dN4'#54Xp+s8;cj%_l^]rh!pH^A;8_\):aJ<gS=3)P[THZL>uqC*m<7
%HF+C+"%D)WDeI\FXT6k8;:OBMh8l"V?_M,MZTN.Ps.t_NIj'$3s%O4,?\TT0d+41jXR,Q<`OFJeb5gEXf$W)1:/D07i-u7T8>,Kp
%\@>_f[KEjhf&kUB`bYF[C8[bI4Zn\t;7c"<*PX(?1;$s&5C_.pGTmDUIJ2K@nTH"V[kAQtTNee3CHCilpCGm!@K#6J!fS8FoeQ4;
%e_.0kl\j6,>L%2]2*Ufm39#%gIQ))Z1!=@*rgP7Al+9/b?_#>(%-pVkY^cWLC:HB3r?m4Zn_,$'hfVZN;kr[TVEOY0GE$W4;eP!$
%\O3r#Ac(a"dgfIiMkt8Ogs-;%`96I*]>`kj![hLD`U%>As"M[+e4DW1>im]SVc1\+I'i>7n(*E'6ID?AK)EO,57Z4nIJPUgP&Rkc
%%[W:eSmJ!O=^Bs_^arhU-Ha(K[TK]h`G`pAr#P0MI224<4+:;%%E*hhlh-\^\KZl#+>qpHp!=8"a1mZV9VY-oc=cU$[j:((bLO&s
%n%:7U?R>HD\YWPP[[;!&Zg4[S%7\d4)#T0B`R*[Gc\Ap6s7F4Z5cddC^7T8oMdMoSKS$XLHb*(oA,XGTWo9!sF#lgd>&C=sD[5Nu
%(fRX:EkYjbD/"^Pop?QtRl(jLQcRA>5A?1VQh(r&?)*s/B']-V"!<M*fX^.ZS*;Y9L;l,Qf5g/+2K)0_>ck0g$Hm%m>[.cn<O5rT
%c=5s*1VHo(hs6dk;nA=ohT+6+jk5jhfc')S5GNi.p&!EgdgX"8c^X1b2iI'Dp#a/8O:D?X[aY#CD`<NnT.bGY<ef(VC2[Q;gX%dM
%DZ65>!&_sYo%j#PH2.9?X$:;>rihKQ7(g]TG'90`h?rVa%3K>`\XE<WX/cbY(HV^nhM\6^0"8aprG3A1B-^0%n*^J_@_QPI-C+8\
%?h3*)GRMrj1/4EuXoD-!1#om`T#=Isg&-4W,FLS7RX`bAs!DQUS!O)"ECRJ5B<uhE/2tJ_mOoF[j1>i:%.g5!s(pOC/gHXKE6*4;
%IftY.7nnL5m9u?!8,<;`kl7!ecW;pXO_J)Wd<)E*7h7H1`"%YA5dcnB[<Kk8lq]*dAh-XaXs`a3/8Lg8Y<lo-CDoo'S0RaTAD?bt
%^=!.uf,ZLG)32s&lhN'cEg*X2CO')b)-D-j8#mQ_>E%iP@nD/Z;c94ZTfp`AB_mar!H#!(D0WFnTpZ$mi?$^ATYi+(\9W3ng2Xi3
%D$E$#59nV6/saZ_D"[\XdSA7l5ZR$P[/lR!&:?socigSAYQWTup37KmS/a6TEaVdN&KP1hCp^!^3k>IJh.nDr:$CY(5e_;]^()"3
%]T+:oYV^O"@r%q9T(!W$%SaZ3g&ngBO,+GLODoe]#h"rF;9h5;4glCRd$CN!Bse=_)V&=B\(e8X3_L>e28(giS?$6AYg\J&l.m\p
%>o!_6E9H+"EX:>8`(Uuq1k\W*XK*,N?C$__hp&P*].(<#Dm5YH0auqbGsmW%RQj)I`cKVeQ5WDrR5fuuXV3LSpdqmcffN;-p]`cU
%\%Zi)aA+q@K&j,6Baq=",Wj[ANqgO1VAt[Lkge+2*_b^P,V@Ju--l'%FTGaA:(rGJ,BO'47jMb]iJo#ai:mF(&l#.#Ju'WZ%6!+%
%'VY1_&T!!9TPqqBm$,:UTFhTC<a5QZE)TEY5ZiU`E$F#u)1fDDTEk`t\&1P8j$Q'iGiAlI'Rp1)D7F:"!<FYZTK_%g^iQlfV1[GD
%T13FdWBn3iGRUpCNi33m%H_fp"pK/YpMqKE1HR+h7*N*PL'$55I)^$M`6O6.XRif!4OUm4mLF?:%]DMH&uZfF2dRo$lrhCflp-<-
%-H(0Bl7?q**6T8:6!buG-S8Cb#bnqa<3`)d\f[AW8Kn65:.6GT">CAS)KH)$f86/rVJoM5)A/k$*`4#`((hmMD6Oe4C./b'0FrkG
%):a,9Skpsc<<5qDm:nhi+gM.n/>N9nS2I+i*%O(?ec_'=Fb<jhs&kKNN^hb5r8h$Tnu%=L#u0*YHLReEL$H8moLA"D=PlUqnsP?!
%1_m9AVkF$FM#sFdMNi:\AK5\)H#l_N`CMC(nr+CEBVog9eVYOgijI&jC.#rX[W$u%3.m6PY@MKX_aE-k>[RCcneIVgMQ"T/a[0<:
%/R$S:7MsJ[E<`87L#EcO1^&LV_a3sa72aC.o?iiN?-rBQEq#/&E<rhB+aZcm2m&b($fRaEQbL\qIg6<9A&?oF&^J<3"LZ<]Lt!]>
%$0u9Y(*pn$lC?3e9C=:cL_8EXdBkI`%-qX5h+\l##tcFdD*?r#d?<o8?'$Y8Ntan`UEC9lbARdQ,\XJo(YR_l+^@*Y$8li;?aE:)
%4MtBkA\mC016ET1Z6AN%<%E_J\P:[aBKrB6c4k#8OW'nnjOS_:Y9:tRdI_oh4UD>$BM9r+fJCi(U(0tn5nS?JpTcJ=#'84KZ(sJ)
%T6&DdBH!8):9fKE7N`/mN=Z9D7?X3+XfsII"Gl$sdjNY%'5F<f>NR]Y"KI#Om?=L2/r3m6":^9399KC8^uV/P)7Ghmjq4g-4sTBd
%Bme*ITu$,rOHbWiM*st=P>AI-ct&P9(hY-+i4jHP3e[%=`XW,LQP:OJ/Vjag2.=oj@YD'O_9H(Y*c)2$@T[`Nl<-m24X^E;hd@ZP
%o@oa`1in^V/4[B+UnKgbg^]LU1pphQ`AVaNFsbpn?#"u+jEilW1>`pK2qp09htDXPJ]S]`%`1,!8P?M&H/#[:6`E?#@RVbg4&Vcu
%;Sfgd'bH+M5t)%G6r(.+^GlK]KXr>HCbK7kk=]u?=/NlpJ2l<-qbT<B/O3,$R">kqE?(DYk*?8YlIf>enm/Tm?A`;q2*3D$JS7,'
%#pm(_Al0a`,Keeu6=Pu\1tMCpcHHY-H$$#n.KW_i5E,5,/#$b1Fk#cT(a3%P_m&nOp!963/=MY)d&%3Qq)V-)1*YYl!1M.]@+f1F
%!Zb+.5dRX3!46AZMdAgWf56up^gmXGbQ*;Q\^<JmJ3REApo@k@5lGhe'i<Q@jgI]USYRWU[=N`@01HWi![N6@7YS[,LpeN0JV5rJ
%4sHC-eL"R^Jg(r(e%I@$64e?lmUQB]!m=Lf5&4"'Bb$K!1G2"Z&/D;qX58Z<14<&$OMC9LNVBM>XGTs`JSIV^6,9r"M/u"JFe2;8
%l[f%s4BIOg!!Q+PB^g?lU?=k((ki?=^^`rM.*ND,lpAb>Gm/gdA]'c%j;n0g+Gur_ZJmQ-'F/`C(#nmi8.j&HJ<aQ^!GN2>(%a6i
%<3QP*B+MB[He>kUh=>s>gORAsltn.!;T4#lH>"/kAA79<$"+1BWg79P-9HAh/0TOd&jF9H6k_Ht*%qJq!+3+\51P`E`jEqoIJ,S_
%Ra;(f8VeaM<CeB%*3;-PTU5qKL`U_,i'ggH(&TN5j^nK;$&IiIGMna=(fU_h^utjmYUrGU-QbrU*IU?X(niCG;$&+JJsD*r8D]1h
%"qB=nh^T:IJG5/6ZjN;CNqF^I[Gt(;872)sg!FU"B\[ss>mm8HMB*<g)I^-$m,RTC@bQi#Kc"3T]l6dZJ(j*f_sS&Z&KZt7J^#J6
%$[&f3DuG7YXJ5=QK@p,`g\kYMGZqZ\#qLB_bE/JfciK#SA-p(!&s;Q%`=e;YNbBu8#eYlo_EEKsM0H9ri-euh%0R0\K:->HR21[J
%VM"ti(,=8l/)"HiNC%S)7i9rr*HG(]N\[nXo?_VDg"$qM!9t)pK(cJs)F(Kb,TDI<_DhqqD%S+*'AL^.CIL$=Ap+Sko.utRn$J0f
%Wfu@,%.8]<LoM"K^h:+IH8\73cKfaV'T?FI&.h@^n0tM%RP::8bo%)p#hDFg'0F+)Nd):^G1'fPSI'*U!aHqZ_`Nm7Ji?Zg=iGQ7
%+uKk<LefU]_G05^Mo1?)LeuupSI^=J#_&0)-./j!.Dl#I:$,4t?BQIlL>cN=":OaRQMkA+TL?"Nns)(a0]5ktS:U+$'C/gKF`<_X
%dnlV%$,Oo,9G3.g?mji%BaKMK,tukBb\9o+XHK4n%1=0E6e'8M"Z&0dr*_t*8+E'"dt!%>Td4Sp`Nb-!"<rP)M[#c-5(FE#FE\?n
%d\8C'-UEBk,%,#*bXT7/A&eg8':d1:_H#s>oHK-2WURZFE]"7qN5/^Y(97o'CW!t-U#Y##g-MQ.K!+MfHGrBe\;a)-.iaKR8oVS1
%#;1$&>]jkkWG(G2Rpk%jOXl55O/4(tlk5e=7d2l8b'k!@?K8elV4ib6+l[S,!igO@^pBd/icDtJ1VJ0n98]T&6%Wc91oZPp./99>
%D/3YR_j0G@NR88nYAj+YqJ!/C+R-:)GC8+.l7C;QfNS>'Sa6!NAIi#TLei2pd"l+iY&5,6OeHNeC-kY6!EITA_?"(qWYrLQ:q,NJ
%GjjBK9("CAh0FPm%7G['Ma7D8dj";1,J8[(>0CoCkU:\CQ3^9;n.CA/749<XDW5-X^JfM75(;%>DM!]=SWdKqa:&0']B=tiCiet!
%M8p-FWIlgA/YdjpD:(+ET9+Xc"MpitF?3R,9.6&79ua;PKm6_Q>K`=QMS-`YJK%!4![j8CT\,h?G]6?`%`&d*`itR;$\H?iQ.a8D
%m,2Ju&u?)t-fQps6St,5cJ)^*56r2qJ+8dbSHEa>mKL7(`-EJEXdEEH\DHq1m8hDM<FHT[!,:dT2Bept]Fn'O5%8jgLmc6@S!LI/
%oQfC?i$'?=3/rJCX4V;:im'7W$k"k(UWLkS(IHP>_C[3CC*ZERP[ksuR*$\.PR#J)MFB<(Blm>tNdQdAJp*Z_FX$rC`e)kmLMW[W
%faYf$I)oVL2'I[UMc_[\=R);kfno./kY0/g[h=;T:RFEB2"BXqUXUu`TSkctebUQV%-J-QHUiTca#"3@DGFTHXG]&%,!6]M]HHOX
%XpBVb8nB*5(6irDmY`OK+\Kq_BK.!+i8IgS%d1,dTQ5\gqFZ]kZ4&icaJ-q7^kas@JaIa?,o;D*F4e/<17T_<gne\E7i3JRGfRXL
%<Y&$XLbF[aO,JZs%*\DcLF#9G2L7PD.&ghi<X_0&bG"5F8NT+6a=)^GK`HjbT0dPQF?u-9@P\9\7(.2HZgq,3eV2>JU7:;u]g[`G
%F/4njLoOZ`G3bf%3:K;.`\_cuoGs=r+P[EYSLcHiha.OqXb\>B<&Oou(+"&HQ%DDb&-^9!%QGBM+\$iKaO#TX_@XYmffg4_"nUHf
%]Y0#=Mfagmo3+`7n5h1\9@0h_aUKDt#2XkH"6N6J6H$,T:2!c@MDGNM#3E?Q#)tbNh@.LPQ3]ch+T[4H.GSsL9!O;QZ4dt_!l;0O
%@HqAp7sdQfY\e*j5`uUSN$5^a+@CsUk\VP.`?)jEU=Zh.d7_n\EfWQKDuhPgCDH#7`.^j-?4?)(.Fnic/)S;"]Y4."&#6]m?_Y-F
%9:?FEY*ueWq7<0hIIQ*T!J?6k7,2iWP:]c\fQM\_2I#[*dDXZAZc*n3ej^9G!_9d!j?[c*$:G%X@8kh]=qKSW!ui44j(h"_UZXn/
%"UuZM0A[Ad*4V(,Y)4jZ1ZVGA/To2-PJAtaA^:QG$r!p]bjkrU79gpf^(4B1[j(h]gB6ADc$G*>\)e#,BF54Nk6b\(&`+P@@jK'q
%B'r_L;%n!QP$dYLY/q/$"GcGL2StYn#XiX;XlI`,nq2T+4@\'t:-0N]%Kpl]^Od8S'SJFk38(V#?r`L@<[8%3RXsjIeJ9b\:fsG7
%!!O`?a9K3sc"1^3H4B&anZtl`%))chBh=UZXc=#$#<h=G8J$7m8Wa0qRUCAkD50W'%3hk]V9L)C\dK\g&TrgRk<-;F5Vo#_'-jla
%KWB2g)B+hNK;=3j&S<lD!fBoi2J#5.Yis#;,(a6kg.01^E'3"c8K*m:(K(cSTt[Xe68kHlrCI8t082hG9i]cRVK]<76"1Zc:r)lU
%-+8jHP9#ch-I93h*GFRXP-3Hg^5rQ#-fj#)nk7FL,mJ5$dgU)._Qa-h^rhBqob*)@=qKk"X`EpRjkpl$G)9iTLt-N"gUij":oP32
%hKHre9&ps3)g7dR%;nKGCt!q\XMc'FZc)Y>/bu!e_Hpmi0j?DX:`i/:6I.B(#d&KYWY#gSl;g+=>s(!uHQVE&KUt0^#aA)WiF/?t
%[@"*ha:&A"DSpFaYW(D`g_5&ja!PU.j'/th3E7[D/njDSW]s[+K&Y*/`bAF6-R*&#'4sK$9*YhF+_]h6#jfd?^/?.).ZmPl#R<6]
%P_^S@i9bMVMUm[o_:k,@Bc:kS8k`UqfAEu`pMHW4W.)\MH/UC0kYO3SRSS%G4?g#)b2_^`P*)@.,(:jgimkgc#!ab:aB!tW`a$r/
%gdZht%o^3gF!7S2>i.k]R,C7K6N"d@A-VER.6a[kA3DUYKUV=V:NA^+,u*MjPF7fWl.W5\<#[]_'?S(u@=h\h2>BF/HkUnm0'>7I
%k%geA!oBB'<WZ,=lj$K030'YS_Qq6[3kc>nTlTs11qQs@>XagiNLsM+A=dX"d:?OHNcYN*FHEhZ*T*_d&1r0=1^s\3%7`=-9I$:!
%"X+h1X^lK<,3!j_0n[N%1Erg!3HQi2%"\PNk7s-("Z0+]_bMBA&K"S8#WWWZ[!a]'WWl:lRV\L^=No@YN!7Q038k_7<kruA>0&iC
%"WA`mRScL>3YU?5Q?=U;@(WB,68B!uh9*gMPE7ha1SYf/j@^?Ead]qECt=hV?XXX'^2Enqi&iE?h'Edb)J+\!oJbP@M4Cqm-b)=t
%s(/:`&V/e<,jbe&Me0NpMW6'o203W77STr8XYuGFh.`L6,$UiVgJgM54.j\*Zr@lo"(:T9EW]G0S@CmF`(6-I7\("o&W$.t4$*#%
%S[?lm)WnQN<`85*"VrM^7Gp#@:K\6'iM*Ji(ob"*-?b!=b11oW13gSf>lM]FElZ.^&J1"b*P)fj6Nn6M`_"C;,>;Wp+LacI_*5)4
%-$#P.N#/]PbS0,R=YOiA(TN4P)GDt"7-cmRcVS9b0gP=kB(<[Uq-[[]oL6K;:0=#d0rI!XNk[kV+OUB5MKi>U[;Jb#.3oT8$7kX)
%/es1oU5OW?.NZI[*#/i`4U:HfP(<afacTJd2D]le>A^*r442m5>DmKSBk"r8ATl9YBR/rqZdUJ+/)lGl)STGd;"Q3DKNK9XEJ,?7
%G./+7KY[cn*9%oqEc%fOL`"`4N-d!1jd7/<Mo;X4Fk[`]je>"37,od6_o)i=Z1<EDi=h01$X2:5iBmp9$;p;F*_LI,;.X_FhRuM+
%mgdT=<:bqYg@*$PMLTMQN22(P,YBs9(B,0n]b</]5-NG?MON"u/f#T<dDN#9'A1<d/+AmQ6m$iqBQ8dLiY5X;.5V*hLd=[n"\Y5C
%UD!nlQD[,%a1Y^o@mMI<Lc];R`@@8(cAL]cC,"<0JsK/OA*MuN0II$ba^mh5N)Se#WtTkq+#AU6#6VIWc&-/3UspS7r?2mYd4'_k
%*O*p'6;VBJio5oXKFj)1.8X+`O*#`dX#j!!3Hu^Lc&+UF1*D@_*!h[BKfZlWA-jWT:G"2C-tLdsZ2p(SoLH&OIbqD6"HJ!CX(/DX
%cd>mucr3iIVn6%m&ee;NjOHgS,!$K*lsZ3OBLBSTEh2FD+i5h*1<X!K+!N1=$'g)8U7$q<)*A89kXa\W-/rDl9KUCUN3-ZF\NM_S
%Q=-LEO??.5S.lKS+\\4qV`:f3-kLK50DX_?P^.??4(k@!-#N:&peH,V#oYO'A%"a;7dUA0S9,<1#QUP>,0!it5"W['([Q3$>phAF
%-)"RS/i@EgUpH2]"a2G[O=_(t+b?"O(5^fSUb*XCJA)3o_UXl!4`!:6qV$`0eLi+AWnI67ClF@1DJN^HUJ!KAk]NaJYA._%8pC\%
%#P$(09G1q]Y"b^V_"%,3A>"3d9!p`3PAfEi1%#$>Hlc)+GSBt^')^bC7*"F`/0]ba[4tQ4:S`pD7I=17>",rBr#+=V/lmiRFi&lj
%0#_iD%:h[:E@mDT`'PtL2Chh:GVfu9RJ7bT'([(14n=aA6:P1@#n.U\(Dk18'`.SA'*p-_3#!1)SD(FAd2d4]("[alI_mJ$#+Uih
%Yo4l)#Mgj;EcmS4#L3n=i@(qT8MQ<`M%L0<n*6_._4.Y@XCQj4"mB_3H?M;1`25o+9Hsg.7^>;oK./8%."f`0Gb-3_09oK`a-!p4
%%d=7<8/o(kIP1.>6r'i5]:!1k32p0aO>'*aY'o=,A6k%2!'b#6+W7B1Ej?=#1dR"rUG>cl;k=)<3X4Vd4:E9``;.c>3/!K;e6LcX
%Y'\&qfEImF2TJN?cVBA&?k\CSJNH,EVrsLY0QIk2MPJ`.0m;RVpF6Co\A[,perQlj7K1+/M.Q-b!5M$:,4F;QEZJ\)n5rrIV,2*^
%AY%YH<;@Ck6jt`KQdQ`d.CG@!OCC+hnel".B6)'.ApS1ROK5@MSOA->5KMl0TmZ7.<f11OWWg\./J=!jde*SsZ4&F_V8c5eQu^I:
%6ll`-FNdOE=IIGdc%.OiBo@kV.!*6;/8H/@(i'_/o8L[N#f;49L[BN4QfTHuc!?cAWpI:<Y*9'sp_iC"n/^Tc%E%:-YSU957d*CB
%S;6G5!VpQ3M:I.R,Gp=J:EY6ia;pQ.>SqC%$J!4I??@foi_i=_.F4q:l5%1#(-fJG\BYH208^RLm#X93StC@e3E(`]ab^8JAI)\,
%oEW15-YtNd<&2oB5<,>r!uT;QkS2i)p<Xh7nl4-2>as?V'S93A5+An[&kA,?N/rAVmQ(/P$A!9_?<Sa@kf,N,cY7]8]B!&`1PLqO
%GgqgJ=(4duXHb^E_@b1K9-70A\tc8HXjp++s+A_0brioT6?4KhG=f_I\1GJS6#iP)j-;`N,mi$YY\]ohX9`%R'*E)8$Q%DbCuJe7
%XYR&3pg>SomjO5nE2)!,l<(R5bgE[b8*NBd_U#B#BuPB2IMf!GK]49&lp5J?qm2J/WUi]Rje"rd4W6qM,pu=H,+f1"Ep`WR<=KQJ
%gmE-p2E*]JK;>//Ji^u8#X&<>$\=V3N9kWgoBJ5OH_gg%G2=^bYJL"dRj26^m%,^[k!T(br>4@JP$a&4W5;A[m06lKEN;*s_9b/s
%%,b3sf)0!PrS]$0GuP\(RTGSdr8b_J%5:c==gpWA!]1gdk4Q3SV]$VIjumTgT`Vu?%ib`ZG]p#C#LdWA)P![QS$n4cr?L\qruFdS
%%1eKJLdbY/d9$P?R4.#BG/bUt$OmVAdo;d5\CA<5,i`iEhsf8T9;bo2@3[/GBC8Q9^`s:_PKX&\Aons<8;#AJRit009TF7G7#/CO
%TkTZOfF-"qfn4"S4Uk08I$tg6pR=FT%1c4_6JbGWBm+TeDg65iefOlP5-8UFE1BB6s2oDq3!`B90naf,R*@"R]82Y1Di6!Z7j\Dp
%R*3G,1NAdWP,FHLh4N7#5bG$nj.c@TCs';Wd:iU.kDT'0U,aeS:U>u[$1!15Vg8*@q&-OYTnKr=d:o1JntTi0CWCZ<[NQ/UPIeDp
%&RiJ[l`o82=u8?9bV[1W%M@.:Z[oE0-5!i.='A!991Lpef9#Sd2U-Q</q@T.9QkLn?X":.r^kt)hf^?gR)<&<+>c"$,&n?f8UGS'
%N+7M/3_M"'oDfh?ZWKfGfJMp+4UQa0*hC>1rEYlD[FK.7SUrg<SVZ%g1'<W7R7'8uTU;-0S:sW%ZCpM=rGuP%4T%0"&(fBD"sB``
%#nf.r<.g?hF#XV<Us&DfAbu-bndX>'L\#KB?)IWSA1D"30r'phY+Wr@g%B'Bnqm?aR#!if,#)Yg,/"enfF[]*d0",80'-AY=0&Cs
%3]ao_%Aq3u7b-soitp.kp[NBJY@'Ois*hZ8%NG7n3AeFA^0Aq?%qIB$eJE.9Rpl/:\KWOnHI(G=hlp?<Xu;1I*Umn=mbP+-+8#MR
%^0&^b0A\=:?`$oBH@*B;hTRUuVD%,=p$-SomWu/![?necmI^3Q"D_ObFO5?h?8(0+DtB8W2#SS)]t(#sm?CF%gRM&p$i\d2Q=n*W
%]:PQ&(UNelBX,h=VD<ES9[?bojfmDhi9a>?I'smCFQ-"Nh%7m$3]0!aGP99G+M9gbZX3TI\9p):F61@tNM#3aB5u2hg"YIpEClLK
%!9A74HFK9fQC"Z>o_cVWq/A?"o6W9-in<s52@!?"H26@Jnp3YZY;aqtc`>;J+`4Jf:UfNQ@E<rCk1A?rH>sD#GfkGIGi^!M2BU5c
%"J*q4X338N!4nP7k1<7\-j4qnpZpM$k+Hu`>J?@c@cmqq/(7!^#'e+[m.dNjbt!BC8,;e<E.I2JVpd"*K]uF,5(1S;nNO^&qU7Rq
%R>cG=><Jt+4Nh6+DU551i!jCgk;)#,9R'l<GV1[5cgrclQeTL0o#(+qAdOq$0cfIJRJ^PPq8YV`cgp2^q.`XR19<-b@c&^qe!Y#7
%9BV^CZY-T:/2&bgFNfL(4J?8Hl%?'$Pf^;^OQS3+e3ZVVW\#!3bWtC%PRU\LI$J)C<>/DQ8=k%6GeZM!+QHY&?HZ*q47HM<3?R>J
%/L0:Cl99N5qGc>-l2K`9l/qhOpnmih&Q8S=b9Y9FBjR]]:Zb_Y^7(q5r*E"c6;IR<;3F^X(7q\4LJrZF+29@k(Oo/k]c\#-R;;e@
%(#RZchr/.GgCHridrtTbbLOq*r)`L7d=[4Xilc!7noZbMf4+_d)Y7uhEO?eWTXK-+J*L+[r\R!g&#hY((\XaskfJ=&^gI+-XhRck
%c])eUDdNC=D9e1*4.=>#Og(FkQkA,u^E#INV?@AI$p,K?Jt.lo?1gK2P8XTXAgI"fl.GpQRsj5ghp'>OrU^UC@IK*jjL;jJ>dhia
%h[SBh[,qjU&'lOh5(0fcmDA0*bA6tFGO*fPe[*H./)#qh;VA]*(VG%+,l,4N\qtk+B-U?RpLNeXFWSjE='pGdaX8lBCAe(o`OpK/
%^>>A=VlS?'00f#UhWfj+\(UHY?9#R2I"!M73nuY(f\_i'/9>^88KL"&!IadY>+@E2+<4U3pT(t)iJb(g9lq">0>0FBgY%lPoW-Tm
%e,_bQT8P^CI('"s*T!KiAbq>i4JYCadWKJ/Zh7HWkBBe(L,A,GO9rB5qMqrEj_Y7;=^DVY/:"4*4l85"="o#BBFVj,#?NUX)oonu
%\f*hcifYi9Z%(W4(MD!)nW1$iRCA7A`an-FhT\aOP1jL#'#u,T3;m9Q`DOsb[s29K%l;j&Mgrg[^WW+E'8UO=de<jk`[@Y55fZqb
%6[en&HF@'p5;Xa4l['WJDch?]<mbk5*BU&`\m`#&rI3q"Q`F`kITTs.-C_t#@IE,i[97=$ZMMB=Q'C1$>1i-%?-uLNnscjPB;k*<
%h8g)a?&$Y0cU%T$OPkW0UDrlKF)oBX+cbA+rA%t7JOgc7`^'u]>sNcH2*u'FmmjigC_Q,q[CeK8*#gK5$/+RmGf/kS=(*)<(h+TU
%jQS%%CJs?kd@ZFOO)?r76lhI1fCcj=iT%t>k(N%B<nj&ao/T;U\tYB<3b`rrH9*VQd,,q)So>D3QhL^@+-1`\CAt+qrGQSl.!r&.
%,l2^H>7t$qno*s7oTQO;^PEi.:H/^UQZ48(WajN$9=^(0PSd]mFbZR60(NrGjQS%%COR-[;Oqb@mP!orXDu9dd,!!,E2VP+:cES&
%kr`5BMms@MAl!0l+F\#`dedO0!pkjDc;l?l*9+t59KsD!o?4Y+l@bpOIi12.iH;:b[]MGLH3BcC7V@_Y)`r?Aak3%h`/W7o*/4:A
%]TI]S#'AbZ/t/HoC=4ah`?/@ES([gA-JSV>-^HQe#@2'+aiJ5m:4OJEC47t^Z.:*GF!no;epG8PZnkKBWM\:<ZJE:nGbY<:59PSs
%'.k2.A-:OqditQ7X94<<p/nR?%0<d+Dk`Nj\Bf8;)h(Vs5"=pF:&/:ITB(aOY=<7LZs*^><$]/7=7.1KW`-YpRQ,_3"2AA5H9XR`
%7Rs2?fm2r/->k^AbLjro3ODk2a4<lS:m:=,Xi1%/N8GY&UF7^Gjo@IZitPLS%%`9eE9@LI8H9_?c(4N(m>cV@-+d`!m]-S=FZ;)L
%eH:/].OaJ^#NiaHTJGYKAEhkel:GN/np7Vt1jA@-W-*k_9BXSsX%%j+cCLXS.ilBnZQ>Psl_-e9_kEoJB;k2d@+QW%hp0$q%L8lF
%HD&ec#1k(mkKZn;mt7=EF(]0),!jdIF([YCcu(^_S=o=Lrb&>_8ftp_Ah>NV9$IN#2,4LpCP($pM;FF_gY)iE):Fkm=Sm%WnFD0p
%MI:Q4Uj@./SV]0p#p&mkS2(Zpe!A9IDT9*)>oPj=@@<-F#49g+8]^Ph\.9e%'"(gSJo)2eM(g'fqC$#4$/gDX.kBc*[N2L0A]9&!
%Y#WLlmToIQ-KN06^AJ\">InW(@>9_Le`?mE$l]6m@P_M]7&W,]0OZi4-tBbVHbjZ:1RJ?`"FDn*$\jYedgLo$#<qu&_kqJ[(cHL&
%F;"hqD9)eeL?U>'O(_<+[Z32gIUpYh7JX$Z5(VZf'[7*sWsj?k0W@UVMdY9[LK=,O&DUl$0*nG-X*kTbepG/m@(Pi.\@^[c#W"kC
%?LUUC9hT*r>*H-@j4AuqTk<qcc5a<%&&!_58MS5:hNhtb]C.F'QTOrgX-3]`d$sFdN*X;F1(#d[Pp\cMUL.;cLOrhVoYaT1^"2<B
%.d2"5n!pV_Btk@EaQV0F.Tf@-e\o`>TS-Y-(\*[99BSrA<q*/GIcBF??huZdGK-g@l7fGX9OCps^Oh=Br4nueK^E-1Y66R02bGhd
%0hh!D"Z$fY/9AUOB:=9)[O-.2\MqES67gQA8rAUd\s$eO1$U#B8,L_fPHbkk'jr3i-"=iL\@AL6M"'.W&gY"nM&?g"dbL%Kp$NPu
%U1%1FY&K%PpK7k_:kY[+OH&q0\L/Wfh(,kN>d>T23TeSEWmBF/@6iD$=;^?tZVO%k]N9=i9T\AXZsu[L;0N5UdAW_&#na\pc8>K1
%CsDh\ffRlnFsfp1nQ(NG.+6'd^IE:OZZ8/=f=YIN,?mj-2_K_f3jgV,(fFZAh.W^cFnu$*pBr`*4'A/V*8O)GF!h[*:N7UTd.'m3
%NHM,_-Y$rK0?>h!`9_ZAW%[F2%pL2D(J#W7K9#W$aX:RKhCHD2/nFdL%+ZQ;Nm\fd8?gKN-+fXt)s^.\:W?GJ?[t_Vp?\r8*(7ns
%E0YP;F\&qF0rDuPe*N9\(%2sqd)tX^c%2D?B2j&C%%.Y.g1Y,fI58+f]u"R,'U:7Y/@Im]V3@FLjDPS=*/F;u_3*#"rFB`hqZWD]
%QfXnV][1W^K\*&q[86Z-FJGC@qT7BYpBra%)aR_>-f42YeVRC9B9Ou8mQu\!FiQQ7oTQO;n(.in2D.d,CnmFOSZ4BU,9omT)sp>J
%:WCtu=-/QWqN$jO8YKgq7&am@n9$LO;l>4dMZJS>q=X)-O*9[M-Y$q`r.[eC3q;^/q(BF"dQs.'bcNZ3rHRIu3'jA8EJ_)9KG2>'
%7WO)M](4@7Z1SqO`HT]umAE-gWY86?hdrlBc)pr4Wc)rXHk%I=_qGVU`R)jna&l];>PfRDhrZ=kqp+A1EhD`VNLa@/dEXS\p)g<K
%bu(anOTCF'?0NVU3*C:@`#nA?ds(0XWfsk`[e5Z=OZR>s,+7TRS[FAqYbk5`[Y`,o87JmiCeM8iS(-JhI2/"%?W4DU[Of@1H5U\i
%<%dcb0ni+Ze+=[X\E]llZ5%-/N53kU<5qqH@E84\$2kpJa;Yl[&V7mqP>nBBZuT(!g%HEO99XSddAiBgMH6A6q?&gBA*3Y8ishRX
%JK7nfd6>r]1OWWsleL)-;`^=m2g"c4^trF\pF/"ddeQ/)ZS`Wq@\Sj*VWg0c>Lc;LA_W$D:AJS9jA)JUf2t_IdEXRsa53gWBrc%_
%dH*+Gn(:4-GE!@V/U#QUB:</]8Tj4Y?3?0@4MI)<N+@>r7CQj\THqPJ_Q9T_QdgOAp)%^8*plUa:[6&%k@_%\Z5K"85db<>M/f%\
%kD30s%@nf%FL^J:C3A;K'u$LRU./u2[9NU&Lgs)O64A;*[*2*)Or-DPg59l23\mg_YEj6pj4'5r?oq7/Y&d(EWO`r<S1'`jiN\MZ
%aa8`O,d2TUd3;/>2dOo>Xcc0G7HotdX)8iBf"5!s93SHa3pI*]cii'cC<OM&f%??\ob#i=@;3,rKsa[SV@j]4GoeW^X-8&[0rT01
%Nbfs/DAniW]N9'Q<2;%Q*Z9k;Dk3NE,G!#DJ^P].4?>7"H+tJg9QVfZHm(tW_lJOXltM__D6$&INU5aCNCHC72=HmfEh9P>1H94S
%\^'T.KQ",o3A9+,P)$r;rND@&WKPJ9j6?n*a\h6r[uF&C3Tj'4io=`nr#+M!JU,63"h8*YHXWKRIf7bNR5J_,/RCo0Z("J`N[1p@
%EF`8E?9p4>Gt=i(a[UsiEh0QjR=(JQfsDoS4?>7"H+tKbl@C(c0)Sp3<_TQbP(GO;P]@htr3j4O?s<)LiD$:qDknp"n<2*?n<S*M
%;?9)D,1b[5#e2,>dX(WpD,kZiCKe6:bd01=;i$P@qERZS3$A,L';GZA;C-CV_;nS"cl5R#!+;u6i4;IT</qf[#^=CM@=UiQVA8P9
%i)6YnAP<a8m_^b>_fhr0V3G94\%,V!+>rSaOa52u"hBlGkVe(;/e3M=e^mbh2slW@+<Z`*9P`K8a:_+Jb3Sf>afr[HN3:%>+d^DH
%Cb46Yn*KqO*b0]EhpSdao43l)4H8ERms$KHlog'EhTOkd`^Zg_IoY\":3Gp`Sm7."B5bg^8mo[kb-bPUTes:lD$h:rYNTq5?B>ar
%S<TCDX.>ZYI]V%`ktEMYR2HsA8u?KI<4iTm7gHql'2hi+Pq'1>.@.Z/Z#OJ@hBcD'FF\J!i]^=1DPcj)/ZqE\+3)<s"aQSHU6G>6
%9/<g+?e<Pf@QIcuNg&-\3\mfd>@l:;[Fs._k'C$e=-`!7&8s;T7n9F6Kb-j:?_7Y-R+YK!?QMbX8#!M&AWI9o/':>X7aR'8Wf?&0
%_SJ>I1m#kPPBAuO19E!0Q-.!841/3qQQqfYZp68:8nRJcaKEnMVA.JE?o*XPF*+>$YuEoQ]&.=aNfQkLb#Z&FZ6XOu)7`[,R0JE:
%G\Au[7gJ`6S\$m3Q'X+)o+pr$.`Y3b1#55OMu>Ri0X&Rp<7RLFk1>>l?/_1V[\XHp)fDDQdu(G.W=\aUPKX54>rA&U6KU[Jap-J]
%5[DHCF&Z/1qOIB+L/M<7>"54f.Z0d5.#j9]CS(GBZ/f36_eF03(hOC'jT14fBhIM<KoJV"dc?U<En1!=/<3U79Pfhj7Q(eCo&-N[
%fOg\:c,9(6C!C#8ib4h1'b2V3SWLp%(JKNbY#!q^nYl1P%o-JNC]0A<oPL59rT\OC0DbJ.O%0`O41!!63Q;S,o=kr,4\9mh^?&'J
%d)@TOjn&*dgk.O<]k.OZs%d/f`E.9^DY`8Vr8mU@c1[X([.,KHL?CaX&H$XeJ,Yl9rD3>J"$5<Z4o"9HS<*Dk;YK7frrbE[3W35M
%_<HR77g+ocDG5+tc@(1,ia2jNI4&N#QeX[cIt'Y.n?Dl&3W4Y>HMCi_CAgQ&e*$JGOk!J#gbS\V*Id72eY^kU>k18TH(dU,aoiGs
%!`+;XnDO<Cp."D:cO6?+G;,(EAj8(^jE,NMDf,X&I9uC_fsMkSKtdXNs*;C)n$M\2(VM1bY(F=f4H3][Jnu^%XM^Os+`&4"cN1>'
%pOJkXr]%ig#<95-/cT_;a+<jEF$KuV&\kC@.Hn/;//J[1&;;-s!\a>pEjbE!XSsJe2LH"ui0BFYDE\A5gOC".Jj0`KI2]cEEj]k-
%D?\j7$5>M[L4;5E$Nc48s04N\COKQ_oL8.HBA64Wm.3J4\i/Jhl(8[)T*%,:X7!W@?RG32+qLuk"l4SJghAP76MkKmnQAfnK"&bY
%LZFF@jpa7rh_=Q<O*p_3)#j55!mAS3+J/5i!<]MO]QsZ4TDgUiq0f-bG&]5ns7L=ebZC-DS,`?][t6\1.agD^q<^o@PstK\_phi(
%k@qdSZ5N&QP>B2!Us?HAlcid\Gd5fuJThUpd2-$C?VDr__o-4[.%nd>6f(D52YWctk:=_>rJ8.qP50'oP9BWhh5Nc%gEC:n:g#U2
%RAQU8Xa.)Vi'"h0ntsn+X\Ca2Pl8X`*o^fS-CaVGg[/puVROnD-;(Ofi2M])T93#lh`Xo\?]Xcsfj;ihr\ZFgq7BVfOmd_21JP'0
%U$fQ`ef#h=)d4])\moikcq$SGc+c0+q.r&q2s]F;3L^Od0Y*9abO7VfjHB@g$c/"_ES*nkaHBe&B`gK$`OV]]TJFsj;K\\8,`BZ4
%VDWi*Tn56%TX+<(R;uDbo'g+2QJ\J:>7eqIC+;D>/9iX,eU]#UaaGQ-lFDRh4SBKH!19po*h!>nF]N?1W(=BW3\[[\mn(+\Mo=X;
%r.Od7"[[XRLI-RMq/%b[V#$VmINpuTTYab`B((K'ok^nO9BY2LnDd<Nb=aBD>gZXJTn1I3[2td]q<DVb?rET35O\+<flDA_^FHNm
%^SW$?l#p09/1tXnk2!8$^Q0g22s3!pZ3q*L*ujnV^I[k\K!qG:raR1^+0JZBM]3a%[IkLept1*CIO7>;]ZaGa4am=cd=_H0^KCds~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial -150 1034 a Fs(Figur)o(e)33 b(9.)38 b FD(Performance)c(of)
h(b)o(uf)n(fer)f(manage-)-150 1117 y(ment)19 b(strate)o(gies)g(on)g(a)g
(StrongARM.)1207 918 y @beginspecial 0 @llx 0 @lly 715
@urx 468 @ury 1728 @rwi @setspecial
%%BeginDocument: p3-buf.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: p3-buf.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/19/2005
%%CropBox: 0.000000 0.000000 714.291992 467.040039
%%BoundingBox: 0 0 715 468 
%%HiResBoundingBox: 0.000000 0.000000 714.291992 467.040039
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.04 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.04 ln
714.292 467.04 ln
714.292 0 ln
clp
gsave
80.8799 341.76 mo
80.8799 341.88 ln
658.8 341.88 ln
658.8 341.76 ln
80.8799 341.76 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
80.8799 341.76 mo
658.8 341.76 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
80.8799 295.8 mo
80.8799 295.92 ln
658.8 295.92 ln
658.8 295.8 ln
80.8799 295.8 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
80.8799 295.8 mo
658.8 295.8 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
80.8799 249.96 mo
80.8799 250.08 ln
658.8 250.08 ln
658.8 249.96 ln
80.8799 249.96 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
80.8799 249.96 mo
658.8 249.96 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
80.8799 19.9199 mo
80.8799 388.08 ln
658.8 388.08 ln
658.8 19.9199 ln
80.8799 19.9199 ln
cp
81.96 20.5205 mo
81.96 204.48 ln
372 204.48 ln
372 20.5205 ln
81.96 20.5205 ln
eclp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
80.8799 204 mo
658.8 204 ln
80.8799 158.16 mo
658.8 158.161 ln
80.8799 112.2 mo
658.8 112.201 ln
80.8799 66.3604 mo
658.8 66.3604 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
80.8799 20.4004 mo
80.8799 20.5205 ln
658.8 20.5205 ln
658.8 20.4004 ln
80.8799 20.4004 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
80.8799 20.4004 mo
658.8 20.4004 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
0 0 mo
0 467.04 ln
683.04 467.04 ln
683.04 0 ln
0 0 ln
cp
81.96 20.5205 mo
81.96 204.48 ln
372 204.48 ln
372 20.5205 ln
81.96 20.5205 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
80.8799 20.4004 mo
80.8799 387.6 ln
658.8 387.6 ln
658.8 20.4004 ln
80.8799 20.4004 ln
cp
false op
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
0.119995 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
80.8799 20.4004 mo
80.8799 387.6 ln
74.7598 387.6 mo
80.8799 387.6 ln
74.7598 341.76 mo
80.8799 341.76 ln
74.7598 295.8 mo
80.8799 295.8 ln
74.7598 249.96 mo
80.8799 249.96 ln
74.7598 204 mo
80.8799 204 ln
74.7598 158.16 mo
80.8799 158.16 ln
74.7598 112.2 mo
80.8799 112.2 ln
74.7598 66.3604 mo
80.8799 66.3604 ln
74.7598 20.4004 mo
80.8799 20.4004 ln
80.8799 387.6 mo
658.8 387.6 ln
80.8799 393.72 mo
80.8799 387.6 ln
117 393.72 mo
117 387.6 ln
153.12 393.72 mo
153.12 387.6 ln
189.24 393.72 mo
189.24 387.6 ln
225.36 393.72 mo
225.36 387.6 ln
261.48 393.72 mo
261.48 387.6 ln
297.6 393.72 mo
297.6 387.6 ln
333.72 393.72 mo
333.72 387.6 ln
369.84 393.72 mo
369.84 387.6 ln
405.96 393.72 mo
405.96 387.6 ln
442.08 393.72 mo
442.08 387.6 ln
478.2 393.72 mo
478.2 387.6 ln
514.32 393.72 mo
514.32 387.6 ln
550.44 393.72 mo
550.44 387.6 ln
586.561 393.72 mo
586.561 387.6 ln
622.681 393.72 mo
622.681 387.6 ln
658.8 393.72 mo
658.8 387.6 ln
false op
0 0 0 1 cmyk
s
0.960007 lw
1 lj
80.8799 386.4 mo
117 374.52 ln
153.12 354.12 ln
189.24 335.04 ln
225.36 314.64 ln
261.48 297 ln
297.6 270.12 ln
333.72 252.84 ln
369.84 227.641 ln
405.96 200.76 ln
442.08 191.161 ln
478.2 156.48 ln
514.32 139.92 ln
550.44 131.28 ln
586.561 94.8003 ln
622.681 78.9604 ln
658.8 53.6406 ln
80.8799 386.4 mo
117 376.08 ln
153.12 362.16 ln
189.24 345.36 ln
225.36 331.56 ln
261.48 313.44 ln
297.6 299.28 ln
333.72 278.4 ln
369.84 267.6 ln
405.96 245.52 ln
442.08 230.641 ln
478.2 209.521 ln
514.32 195.241 ln
550.44 170.76 ln
586.561 156.721 ln
622.681 134.88 ln
658.8 122.28 ln
80.8799 386.4 mo
117 376.32 ln
153.12 367.92 ln
189.24 359.16 ln
225.36 348.6 ln
261.48 338.28 ln
297.6 328.2 ln
333.72 316.92 ln
369.84 305.4 ln
405.96 294.48 ln
442.08 285 ln
478.2 274.44 ln
514.32 265.08 ln
550.44 254.28 ln
586.561 244.8 ln
622.681 235.2 ln
658.8 225.36 ln
80.8799 386.4 mo
117 382.32 ln
153.12 377.76 ln
189.24 372 ln
225.36 364.68 ln
261.48 358.92 ln
333.72 342.36 ln
369.84 335.28 ln
405.96 328.56 ln
442.08 321.24 ln
478.2 313.68 ln
550.44 299.52 ln
586.561 292.08 ln
622.681 285.72 ln
658.8 278.16 ln
s
76.3203 381.84 mo
76.3203 390.84 ln
85.3203 390.84 ln
85.3203 381.84 ln
76.3203 381.84 ln
ef
0 lj
76.3203 381.84 mo
76.3203 390.84 ln
85.3203 390.84 ln
85.3203 381.84 ln
76.3203 381.84 ln
cp
s
112.44 369.96 mo
112.44 378.96 ln
121.44 378.96 ln
121.44 369.96 ln
112.44 369.96 ln
ef
112.44 369.96 mo
112.44 378.96 ln
121.44 378.96 ln
121.44 369.96 ln
112.44 369.96 ln
cp
s
148.56 349.56 mo
148.56 358.56 ln
157.56 358.56 ln
157.56 349.56 ln
148.56 349.56 ln
ef
148.56 349.56 mo
148.56 358.56 ln
157.56 358.56 ln
157.56 349.56 ln
148.56 349.56 ln
cp
s
184.68 330.48 mo
184.68 339.48 ln
193.68 339.48 ln
193.68 330.48 ln
184.68 330.48 ln
ef
184.68 330.48 mo
184.68 339.48 ln
193.68 339.48 ln
193.68 330.48 ln
184.68 330.48 ln
cp
s
220.8 310.08 mo
220.8 319.08 ln
229.8 319.08 ln
229.8 310.08 ln
220.8 310.08 ln
ef
220.8 310.08 mo
220.8 319.08 ln
229.8 319.08 ln
229.8 310.08 ln
220.8 310.08 ln
cp
s
256.92 292.44 mo
256.92 301.44 ln
265.92 301.44 ln
265.92 292.44 ln
256.92 292.44 ln
ef
256.92 292.44 mo
256.92 301.44 ln
265.92 301.44 ln
265.92 292.44 ln
256.92 292.44 ln
cp
s
293.04 265.56 mo
293.04 274.56 ln
302.04 274.56 ln
302.04 265.56 ln
293.04 265.56 ln
ef
293.04 265.56 mo
293.04 274.56 ln
302.04 274.56 ln
302.04 265.56 ln
293.04 265.56 ln
cp
s
329.16 248.28 mo
329.16 257.28 ln
338.16 257.28 ln
338.16 248.28 ln
329.16 248.28 ln
ef
329.16 248.28 mo
329.16 257.28 ln
338.16 257.28 ln
338.16 248.28 ln
329.16 248.28 ln
cp
s
365.28 223.08 mo
365.28 232.08 ln
374.28 232.08 ln
374.28 223.08 ln
365.28 223.08 ln
ef
365.28 223.08 mo
365.28 232.08 ln
374.28 232.08 ln
374.28 223.08 ln
365.28 223.08 ln
cp
s
401.4 196.201 mo
401.4 205.201 ln
410.4 205.201 ln
410.4 196.201 ln
401.4 196.201 ln
ef
401.4 196.201 mo
401.4 205.201 ln
410.4 205.201 ln
410.4 196.201 ln
401.4 196.201 ln
cp
s
437.521 186.601 mo
437.521 195.601 ln
446.521 195.601 ln
446.521 186.601 ln
437.521 186.601 ln
ef
437.521 186.601 mo
437.521 195.601 ln
446.521 195.601 ln
446.521 186.601 ln
437.521 186.601 ln
cp
s
473.641 151.92 mo
473.641 160.92 ln
482.641 160.92 ln
482.641 151.92 ln
473.641 151.92 ln
ef
473.641 151.92 mo
473.641 160.92 ln
482.641 160.92 ln
482.641 151.92 ln
473.641 151.92 ln
cp
s
509.76 135.36 mo
509.76 144.36 ln
518.76 144.36 ln
518.76 135.36 ln
509.76 135.36 ln
ef
509.76 135.36 mo
509.76 144.36 ln
518.76 144.36 ln
518.76 135.36 ln
509.76 135.36 ln
cp
s
545.88 126.721 mo
545.88 135.721 ln
554.88 135.721 ln
554.88 126.721 ln
545.88 126.721 ln
ef
545.88 126.721 mo
545.88 135.721 ln
554.88 135.721 ln
554.88 126.721 ln
545.88 126.721 ln
cp
s
582 90.2407 mo
582 99.2407 ln
591 99.2407 ln
591 90.2407 ln
582 90.2407 ln
ef
582 90.2407 mo
582 99.2407 ln
591 99.2407 ln
591 90.2407 ln
582 90.2407 ln
cp
s
618.12 74.4004 mo
618.12 83.4004 ln
627.12 83.4004 ln
627.12 74.4004 ln
618.12 74.4004 ln
ef
618.12 74.4004 mo
618.12 83.4004 ln
627.12 83.4004 ln
627.12 74.4004 ln
618.12 74.4004 ln
cp
s
654.24 49.0801 mo
654.24 58.0801 ln
663.24 58.0801 ln
663.24 49.0801 ln
654.24 49.0801 ln
ef
654.24 49.0801 mo
654.24 58.0801 ln
663.24 58.0801 ln
663.24 49.0801 ln
654.24 49.0801 ln
cp
s
gsave
75.8398 375.84 mo
75.8398 392.64 ln
91.4404 392.64 ln
91.4404 375.84 ln
75.8398 375.84 ln
clp
76.3203 381.84 mo
76.3203 390.84 ln
85.3203 390.84 ln
85.3203 381.84 ln
76.3203 381.84 ln
cp
s
grestore
112.44 371.52 mo
112.44 380.52 ln
121.44 380.52 ln
121.44 371.52 ln
112.44 371.52 ln
cp
148.56 357.6 mo
148.56 366.6 ln
157.56 366.6 ln
157.56 357.6 ln
148.56 357.6 ln
cp
184.68 340.8 mo
184.68 349.8 ln
193.68 349.8 ln
193.68 340.8 ln
184.68 340.8 ln
cp
220.8 327 mo
220.8 336 ln
229.8 336 ln
229.8 327 ln
220.8 327 ln
cp
256.92 308.88 mo
256.92 317.88 ln
265.92 317.88 ln
265.92 308.88 ln
256.92 308.88 ln
cp
293.04 294.72 mo
293.04 303.72 ln
302.04 303.72 ln
302.04 294.72 ln
293.04 294.72 ln
cp
329.16 273.84 mo
329.16 282.84 ln
338.16 282.84 ln
338.16 273.84 ln
329.16 273.84 ln
cp
365.28 263.04 mo
365.28 272.04 ln
374.28 272.04 ln
374.28 263.04 ln
365.28 263.04 ln
cp
401.4 240.96 mo
401.4 249.96 ln
410.4 249.96 ln
410.4 240.96 ln
401.4 240.96 ln
cp
437.521 226.08 mo
437.521 235.08 ln
446.521 235.08 ln
446.521 226.08 ln
437.521 226.08 ln
cp
473.641 204.96 mo
473.641 213.96 ln
482.641 213.96 ln
482.641 204.96 ln
473.641 204.96 ln
cp
509.76 190.681 mo
509.76 199.681 ln
518.76 199.681 ln
518.76 190.681 ln
509.76 190.681 ln
cp
545.88 166.201 mo
545.88 175.201 ln
554.88 175.201 ln
554.88 166.201 ln
545.88 166.201 ln
cp
582 152.161 mo
582 161.161 ln
591 161.161 ln
591 152.161 ln
582 152.161 ln
cp
618.12 130.32 mo
618.12 139.32 ln
627.12 139.32 ln
627.12 130.32 ln
618.12 130.32 ln
cp
s
gsave
648.24 111.721 mo
648.24 132.84 ln
663.96 132.84 ln
663.96 111.721 ln
648.24 111.721 ln
clp
654.24 117.721 mo
654.24 126.721 ln
663.24 126.721 ln
663.24 117.721 ln
654.24 117.721 ln
cp
s
grestore
80.8799 381.36 mo
85.9199 386.4 ln
80.8799 391.44 ln
75.8398 386.4 ln
80.8799 381.36 ln
ef
1 lj
80.8799 381.36 mo
85.9199 386.4 ln
80.8799 391.44 ln
75.8398 386.4 ln
80.8799 381.36 ln
cp
s
117 371.28 mo
122.04 376.32 ln
117 381.36 ln
111.96 376.32 ln
117 371.28 ln
ef
117 371.28 mo
122.04 376.32 ln
117 381.36 ln
111.96 376.32 ln
117 371.28 ln
cp
s
153.12 362.88 mo
158.16 367.92 ln
153.12 372.96 ln
148.08 367.92 ln
153.12 362.88 ln
ef
153.12 362.88 mo
158.16 367.92 ln
153.12 372.96 ln
148.08 367.92 ln
153.12 362.88 ln
cp
s
189.24 354.12 mo
194.28 359.16 ln
189.24 364.2 ln
184.2 359.16 ln
189.24 354.12 ln
ef
189.24 354.12 mo
194.28 359.16 ln
189.24 364.2 ln
184.2 359.16 ln
189.24 354.12 ln
cp
s
225.36 343.56 mo
230.4 348.6 ln
225.36 353.64 ln
220.32 348.6 ln
225.36 343.56 ln
ef
225.36 343.56 mo
230.4 348.6 ln
225.36 353.64 ln
220.32 348.6 ln
225.36 343.56 ln
cp
s
261.48 333.24 mo
266.52 338.28 ln
261.48 343.32 ln
256.44 338.28 ln
261.48 333.24 ln
ef
261.48 333.24 mo
266.52 338.28 ln
261.48 343.32 ln
256.44 338.28 ln
261.48 333.24 ln
cp
s
297.6 323.16 mo
302.64 328.2 ln
297.6 333.24 ln
292.56 328.2 ln
297.6 323.16 ln
ef
297.6 323.16 mo
302.64 328.2 ln
297.6 333.24 ln
292.56 328.2 ln
297.6 323.16 ln
cp
s
333.72 311.88 mo
338.76 316.92 ln
333.72 321.96 ln
328.68 316.92 ln
333.72 311.88 ln
ef
333.72 311.88 mo
338.76 316.92 ln
333.72 321.96 ln
328.68 316.92 ln
333.72 311.88 ln
cp
s
369.84 300.36 mo
374.88 305.4 ln
369.84 310.44 ln
364.8 305.4 ln
369.84 300.36 ln
ef
369.84 300.36 mo
374.88 305.4 ln
369.84 310.44 ln
364.8 305.4 ln
369.84 300.36 ln
cp
s
405.96 289.44 mo
411 294.48 ln
405.96 299.52 ln
400.92 294.48 ln
405.96 289.44 ln
ef
405.96 289.44 mo
411 294.48 ln
405.96 299.52 ln
400.92 294.48 ln
405.96 289.44 ln
cp
s
442.08 279.96 mo
447.12 285 ln
442.08 290.04 ln
437.04 285 ln
442.08 279.96 ln
ef
442.08 279.96 mo
447.12 285 ln
442.08 290.04 ln
437.04 285 ln
442.08 279.96 ln
cp
s
478.2 269.4 mo
483.24 274.44 ln
478.2 279.48 ln
473.16 274.44 ln
478.2 269.4 ln
ef
478.2 269.4 mo
483.24 274.44 ln
478.2 279.48 ln
473.16 274.44 ln
478.2 269.4 ln
cp
s
514.32 260.04 mo
519.36 265.08 ln
514.32 270.12 ln
509.28 265.08 ln
514.32 260.04 ln
ef
514.32 260.04 mo
519.36 265.08 ln
514.32 270.12 ln
509.28 265.08 ln
514.32 260.04 ln
cp
s
550.44 249.24 mo
555.48 254.28 ln
550.44 259.32 ln
545.4 254.28 ln
550.44 249.24 ln
ef
550.44 249.24 mo
555.48 254.28 ln
550.44 259.32 ln
545.4 254.28 ln
550.44 249.24 ln
cp
s
586.561 239.76 mo
591.601 244.8 ln
586.561 249.84 ln
581.521 244.8 ln
586.561 239.76 ln
ef
586.561 239.76 mo
591.601 244.8 ln
586.561 249.84 ln
581.521 244.8 ln
586.561 239.76 ln
cp
s
622.681 230.16 mo
627.72 235.2 ln
622.681 240.24 ln
617.641 235.2 ln
622.681 230.16 ln
ef
622.681 230.16 mo
627.72 235.2 ln
622.681 240.24 ln
617.641 235.2 ln
622.681 230.16 ln
cp
s
658.8 220.32 mo
663.84 225.36 ln
658.8 230.4 ln
653.76 225.36 ln
658.8 220.32 ln
ef
658.8 220.32 mo
663.84 225.36 ln
658.8 230.4 ln
653.76 225.36 ln
658.8 220.32 ln
cp
s
gsave
75.8398 380.76 mo
75.8398 392.16 ln
86.6396 392.16 ln
86.6396 380.76 ln
75.8398 380.76 ln
clp
80.8799 381.36 mo
85.9199 386.4 ln
80.8799 391.44 ln
75.8398 386.4 ln
80.8799 381.36 ln
cp
s
grestore
117 377.28 mo
122.04 382.32 ln
117 387.36 ln
111.96 382.32 ln
117 377.28 ln
cp
153.12 372.72 mo
158.16 377.76 ln
153.12 382.8 ln
148.08 377.76 ln
153.12 372.72 ln
cp
189.24 366.96 mo
194.28 372 ln
189.24 377.04 ln
184.2 372 ln
189.24 366.96 ln
cp
225.36 359.64 mo
230.4 364.68 ln
225.36 369.72 ln
220.32 364.68 ln
225.36 359.64 ln
cp
261.48 353.88 mo
266.52 358.92 ln
261.48 363.96 ln
256.44 358.92 ln
261.48 353.88 ln
cp
297.6 345.6 mo
302.64 350.64 ln
297.6 355.68 ln
292.56 350.64 ln
297.6 345.6 ln
cp
333.72 337.32 mo
338.76 342.36 ln
333.72 347.4 ln
328.68 342.36 ln
333.72 337.32 ln
cp
369.84 330.24 mo
374.88 335.28 ln
369.84 340.32 ln
364.8 335.28 ln
369.84 330.24 ln
cp
405.96 323.52 mo
411 328.56 ln
405.96 333.6 ln
400.92 328.56 ln
405.96 323.52 ln
cp
442.08 316.2 mo
447.12 321.24 ln
442.08 326.28 ln
437.04 321.24 ln
442.08 316.2 ln
cp
478.2 308.64 mo
483.24 313.68 ln
478.2 318.72 ln
473.16 313.68 ln
478.2 308.64 ln
cp
514.32 301.56 mo
519.36 306.6 ln
514.32 311.64 ln
509.28 306.6 ln
514.32 301.56 ln
cp
550.44 294.48 mo
555.48 299.52 ln
550.44 304.56 ln
545.4 299.52 ln
550.44 294.48 ln
cp
586.561 287.04 mo
591.601 292.08 ln
586.561 297.12 ln
581.521 292.08 ln
586.561 287.04 ln
cp
622.681 280.68 mo
627.72 285.72 ln
622.681 290.76 ln
617.641 285.72 ln
622.681 280.68 ln
cp
s
gsave
653.16 272.52 mo
653.16 283.92 ln
663.96 283.92 ln
663.96 272.52 ln
653.16 272.52 ln
clp
658.8 273.12 mo
663.84 278.16 ln
658.8 283.2 ln
653.76 278.16 ln
658.8 273.12 ln
cp
s
grestore
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5996 394.2 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
50{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5996 348.36 mov
(2) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5996 302.4 mov
(4) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5996 256.562 mov
(6) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5996 210.602 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
43.4395 164.763 mov
(1) sh
/ArialMT*1 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5839 164.763 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
43.4395 118.803 mov
(1) sh
/ArialMT*2 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5839 118.803 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
43.4395 72.9639 mov
(1) sh
/ArialMT*3 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5839 72.9639 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
43.4395 27.0039 mov
(1) sh
/ArialMT*4 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
54.5839 27.0039 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
75.3594 416.764 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
141.956 416.764 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*4 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
153.099 416.764 mov
(6) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
214.179 416.764 mov
(3) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
225.332 416.764 mov
(2) sh
/ArialMT*3 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
286.412 416.764 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*5 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
297.566 416.764 mov
(8) sh
/ArialMT*4 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
358.647 416.764 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
369.8 416.764 mov
(4) sh
/ArialMT*5 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
430.88 416.764 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
442.034 416.764 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52805a666
172babb1d73a09fb0432847d9265c3c057d0112d971ed0197edf6801f0cc
d27a4300d973d4627332ff0ca814c0ce250c35754139515ccbb98571061c
85e232c5d2724d28cade69abed806808a329f904488eec02d4bf36c25046
f7a1306ac101498c67190cf8a8e43a1298791a833df5d0225170130cde4e
6dbabf7a8e794c3de6dcec3e9a0c2449b47003a2eed622096fc30cf785b4
a1aacc0e4ca1048fbda9f51c6b8cea845ce656cef8e1da09ee2450f7b737
e0b1217086fc607fb5d514dedd6adb> ND 
end end
end
/ArialMT findfont /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
57{/.notdef}repeat /nine 198{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
503.114 416.764 mov
(9) sh
restore_ctm
save_ctm
/ArialMT*4 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
515.034 416.764 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
558.697 416.764 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
569.839 416.764 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
580.981 416.764 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*6 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
630.927 416.764 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
642.069 416.764 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*5 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
653.212 416.764 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cfff7245123ea6b2
d3214893f78b8e97a902c5375a62b28f195ef7bcf7433d165aabe00f6ab5
df5c1416686a683684fa8149e3bf05c7b6218afab10e5daaa2762eacaf31
125a4410c16cee824d27ee8e4170fe84de9bb1d3f9bb831995b6> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 80 /P put
dup 101 /e put
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
80{/.notdef}repeat /P 20{/.notdef}repeat /e 5{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
370.679 445.803 mov
(Peek) sh
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/E 
<10bf317028198094ce8cd275e305c79a7a258ddd928bd9dc896c51a549b4
869242612fc9caa06c2483d03d9996ef> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 69 /E put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 27{/.notdef}repeat /E 29{/.notdef}repeat 
/c /d 4{/.notdef}repeat /i 3{/.notdef}repeat /m /n /o 
3{/.notdef}repeat /s /t /u 2{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 316.56 mov
0 -0.0200348 (Ex) ash
/ArialMT*9 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 293.135 mov
(e) sh
/ArialMT*10 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 281.97 mov
0 0.0555725 wsa 32 get 0 -0.0200195 (cution tim) awsh
/ArialMT*9 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 196.075 mov
(e) sh
/ArialMT*10 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 184.911 mov
0 -0.0556641 wsa 40 get 0 0.0356445 ( \(s) awsh
/ArialMT*9 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 162.647 mov
(e) sh
/ArialMT*10 findfont [0 -20.0385 -20.0385 0 0 0 ]mfnt sfnt
BuildWidthShowArray
30.5996 151.482 mov
0 -0.0200348 (conds\)) ash
371.88 20.6406 mo
371.88 204.48 ln
82.0801 204.48 ln
82.0801 20.6406 ln
371.88 20.6406 ln
0 0 0 0 cmyk
f
0.119995 lw
81.96 20.5205 mo
81.96 204.48 ln
371.88 204.48 ln
371.88 20.5205 ln
81.96 20.5205 ln
cp
0 0 0 1 cmyk
s
0.960007 lw
96.7197 44.5205 mo
121.68 44.5205 ln
s
104.64 39.96 mo
104.64 48.96 ln
113.64 48.96 ln
113.64 39.96 ln
104.64 39.96 ln
ef
0 lj
104.64 39.96 mo
104.64 48.96 ln
113.64 48.96 ln
113.64 39.96 ln
104.64 39.96 ln
cp
s
save_ctm
restore_ctm
1 lj
96.7197 90.4805 mo
121.68 90.4805 ln
s
0 lj
104.64 85.9199 mo
104.64 94.9199 ln
113.64 94.9199 ln
113.64 85.9199 ln
104.64 85.9199 ln
cp
s
save_ctm
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
126.36 51.1201 mov
(co) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd416a4f286324
3708bb18c93b6ff9009987165c661f3cf3b3d4268ae53d21376706d87451
5a09c8e0501f41699e842e2b1499d14714dfea5e38b494c7b6527dbf4887
431b1f716378> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
/y 
<10bf317069b1fd7143194d5a8e15b6f90ac84d61c2210d0bc6dd6d1fb8ca
8bb9fc3e481d183ae50bbfabb21fc2a3f1f6595151c5a2f4acc8d226e0ff
0b4c85bc46ca5265bff351a7f03e78e04c2c72a9d7a9ee7a636db5f99d04
3f9d21fc223e35d9c765eb6b3d5d297173ba8b09f049b0d68aa85f244d1b
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
dup 102 /f put
dup 104 /h put
dup 112 /p put
dup 121 /y put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
45{/.notdef}repeat /hyphen 56{/.notdef}repeat /f /.notdef /h 7{/.notdef}repeat /p 
8{/.notdef}repeat /y 134{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
147.524 51.1201 mov
(py-) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
175.361 51.1201 mov
(s) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
185.38 51.1201 mov
(h) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
196.524 51.1201 mov
(i) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
200.976 51.1201 mov
(f) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
206.544 51.1201 mov
(t) sh
restore_ctm
1 lj
96.7197 136.44 mo
121.68 136.44 ln
s
109.2 131.4 mo
114.24 136.44 ln
109.2 141.48 ln
104.16 136.44 ln
109.2 131.4 ln
ef
109.2 131.4 mo
114.24 136.44 ln
109.2 141.48 ln
104.16 136.44 ln
109.2 131.4 ln
cp
s
save_ctm
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
126.36 97.0801 mov
(co) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
147.524 97.0801 mov
(py-) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
175.361 97.0801 mov
(s) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
185.38 97.0801 mov
(h) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
196.524 97.0801 mov
(i) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
200.976 97.0801 mov
(f) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
206.544 97.0801 mov
(t ) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
dup 97 /a put
dup 108 /l put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
43{/.notdef}repeat /plus 53{/.notdef}repeat /a 10{/.notdef}repeat /l 5{/.notdef}repeat /r 
141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
217.678 97.0801 mov
(+) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
229.38 97.0801 mov
( sc) sh
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
254.986 97.0801 mov
(alar) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
288.4 97.0801 mov
( ) sh
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
293.967 97.0801 mov
(r) sh
/ArialMT*9 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
300.64 97.0801 mov
(e) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
311.785 97.0801 mov
(p) sh
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
322.929 97.0801 mov
(la) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
338.525 97.0801 mov
(c) sh
/ArialMT*9 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
348.545 97.0801 mov
(e) sh
restore_ctm
96.7197 182.28 mo
121.68 182.28 ln
109.2 177.24 mo
114.24 182.28 ln
109.2 187.32 ln
104.16 182.28 ln
109.2 177.24 ln
cp
s
save_ctm
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
126.36 143.04 mov
(modu) sh
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
176.486 143.04 mov
(la) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
192.082 143.04 mov
(tion) sh
restore_ctm
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
126.36 188.88 mov
(co) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
147.524 188.88 mov
(py-) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
175.361 188.88 mov
(s) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
185.38 188.88 mov
(h) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
196.524 188.88 mov
(i) sh
/ArialMT*11 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
200.976 188.88 mov
(f) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
206.544 188.88 mov
(t ) sh
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
217.678 188.88 mov
(+) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
229.38 188.88 mov
( sc) sh
/ArialMT*12 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
254.986 188.88 mov
(al) sh
/ArialMT*10 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
270.583 188.88 mov
(in) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [20.0385 0 0 -20.0385 0 0 ]mfnt sfnt
BuildWidthShowArray
286.179 188.88 mov
(g) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (p3-buf.eps)
%%CreationDate: 4/19/2005 12:58 AM
%AI9_DataStream
%Gb!<4>E^#HOm_gL`;GC>;$=:R0^-)k2tr0)-njtM8W0@O]X3:l@[\:h\;UFs-/.>XIe([`)h=O=E#7NtKLDP:aLYsE4gQ)7IJ%,n
%]tB^ah`k9Br2:M_;ccSZb-d9/W07HnIJ'5=n,(?NPjV;[p424"f@j0lnQFlcUV9l*Y8@.Xqf9B=p7'=UeU4d]4K>!%S1L`0-L^2g
%8bK!15%"7f4df*CIk/Qe]39(Yp@3GeR=BEeIe2k$l=rNK00Th2HX:!]C$A.<'l@C.Dl^npX1/%sH2jS1lSjls]1SXZWlEtHhh0U2
%]NW!U:Tc<7"unrl&0.>-q1=VoE.j6M1HaRdq>>QF>u.o0FdVY&_!1!E&>EmPG3J8:jTLo8F0rS/bX(j6q0"[b^KmrXPATDVV:3NJ
%Ib<$0#jl;\ro_Jhr;*.;8QbF7Gk2mRVKp)ZGh$`AZj,KKO8SX^5Q.at_ad_Os/G;BlgO`F1HsB+[J\5"J0lhg]!(t2M0qV\d8YW$
%MSA?49s3Y`fhds-W4Dl<Ou'k_6I1BVH!X,B`.e$%2Kct<7LK0.Yeq71\h]P9F^Df[#&@lQn9&:_IBCBeFg(lFHcVZZ)UJ<"eU4[i
%R3T(^Vlhf3d,.8RK$s<G(pB]VeT<j"Q._u50^F47<5!Z/#X!V9mC2%t+0W/WB)eN.['$PMh1k@dYNPl\LZJr'+ObHgoXiXB5F:[D
%_nVa<E1nRAq!S3&5$>Yh\)<YL2,O=OC?tZNn#mO?PE5Zg'.</']X[6nkH"XBm4)>n\cL6Ld8ee@Q'NqqRo?aGDCeP=d23g8D/^@G
%M==iQBCBKV8$X^9cHF=0^](s>DQ/gr`i)O;IRfkCn8siUc#;1>MbLpGY$1XZ:OCe2J%GD&*/[S"h=f#Wp!8p?:KIp/%!^g5-Ud/k
%ie%!kIJ>`#K>40=YHPg.El[p\Mk1c'HG*Y6,Zc8LBM6m!IGIuCcJdY.&&pne<L8m[rAtX,eT/("rgDo&S1DP5345!O/nWRLF`Dh0
%]`f[0$/j]:(4DH[^$+@-rpu1P4]-[rphmBCc[N$''+4$9m[?W7=T7>6"o.-&Pg3.*>2,eGRpNZr`ftPZR]^:)>FH^Z4X'[B@b&QI
%-1Wnj='Xe=Ek6j9X0hKKAA+R^jJ+HM3`l9d)P7XS#e%=UQ;dgaH:JV/C3:8'Qri>DCtW`.eU06b#b?lg]NBU7l^V!c\sNBP-eG^#
%`RE#P)X.2cK6$k6LWOj@ofl5*X7;[gZgE/5p>`TJ%bfK>L[dObD%OTlc?Pa\^hH'=2R/[PBGaQ)rBMTXRX)Yq^V-]irpK+3T/7&X
%YRlsc]^olYE=k^tC"n.'5F/qDB'c.mY!2D^li<K]((HZ`\,H0@A01Hj8/MHdht=@5l)#X:PiqqJjF:[[>EJ9?B`_![rHBHA$/ZcS
%,_ha_VO.5bM9osDrJMft8_??g:&i]/JoL7`CA+g&Du,+:?SMb>=7:Y,V^E#S<P=qT"-o89OR7Mk(_fn8NIU]I@@+,%qHEO=s3(D>
%WsS48e?0^(]%+dA"-#4DK-CLr[H13O>r;f_PD5dYb*,$T8A#SY>%dW2[]NeO.SV.X;c#uLlPb/I9j;o!n0FSp@'R^trlWgIV!Gj%
%T&s$B<N`#QC/rs4!ig7*-$>&58QX>qp,j8?oNfpG[((]_i18N/)R[N#*L&AI%ZBi8VSti8`T_cXl/hjC$:oY*S'MVLea6j>4&&?K
%<GdAb%Br5>_.VC=Rb4\g/7J!,HT7!C:(Gp"EaVdN!?GJmCt,8))S-&TSP<Fk$(VJ-j?$8]WWC*scXUZZQl<$RZ*dJW:\Y?"LF1n*
%Xb#6G8&,Eh&93;3#h"rF;9h5941:_#d$CMnBsr^PNU!a0gML+<S[e_79eT3HkFrgoG$8<(^"^K2o=T_%\FXVK3J;2W@]"i9%A=Fk
%l_9*:k8EjYX-n9`2+>"5%2Ml%L>eUIs/4;Ik"h)+n_>t2V94s9-I/<6QtroUM4[aAT:LV"KQ!LcF\ViJ#dTRgj*<C:XWc8LA1*ke
%&YD&#PQS2p]it9m_.8QsdP=O!i[it`(UcudBj)_BYWLPt)3%%=7+8MAC`K&i7A=KQ<GMn/ZbbccOWlWs-\?1Y1$IA\<`ZLjg)B@0
%XD#d!@GfS_"R,*O,]Eh=V?qgcGG&U[So0=;>f2>ID",@N\lJZbSSQ,;j(K+!dMC=[X3pV\/SsZZ[ZsW5UX7M`?6q^g;+_'mZkWW5
%]Q/Y1GCY%NO]F8"/$24`ei\]hhQ2*ZA^JB<MF=Q;ZrB$51nX1lkY<-pH+5.s3Ugt":c-k3ODS*N$sQG^o-DggiW)!)21gIn;@lT,
%Y(.'OG6t6X6'$+P1t[sZ"SSAn8>#uk*o&X6%Z%;#5tOf0W4$Am4l,deqLGu00M-)5[7F7IOs#@%-k+:tk$rOe@QCE&Yq*CkbpOhK
%M\0A@"c2:l.;.[CdG_I0"_gdlW0R"I(!5kLg,@kBa(gc%:#JWWb*pk52]XDJhm>^gFC'[sI:+7kQq0eI&Z[htlAq=2AX#NDd],-`
%,He>*C)n!5TpWnW>_o/;b#qaqMI_Op3o-`O$dPuE1L.a6FF8H^Es!@&dRN9n_P`O"d)9!R7@$I[o#b^pP"mgMJ6n$f-ljlJYDB"u
%-kmO/Wm`NAE)rKiY)Me#c:9r$%iGt7&.9D^QP=F>$Ym?d%N9HRo5sr'5s]*R3*S&QR2CR"/M\1f29KOJ3h!J]M=Hil-Zi1K]1P"k
%"SZ(V/PA(@]%TGo'1Z3ZV3/Bu*qG>)8U$+Ga;35.$6b!uOG]([[tSo:1g.,BD!Q?j>W[EB20'@;ZUe.[_HRmh_;hn6,!-'A6e("l
%=q3uAS$'ZUH;'<XajfMU2*q>bXne9tJg^jme,QLqiZ?aH0sshfa#pP]3]r6'7GIFFPDO!d0IMhs9=hD+3>F]8VLa$W'MCu8A>_"[
%,=Fh?O_!WN/*r0@D8br6knE@##rU.n/T[=g!nG)cp/+e1(W7tVJqh7U--:^0?ujW9$sUmao*AG'T7M.31qmS6d,9(I)jQ;JM*st=
%O\`7+ct&P9(hY/A_LHEUFU7"Z)`nU%9iQMa[NI%:eq?UrM%S&0"?0gVH*A_+Mdb#,Wae%`pRhr5IYEK/bjTHGdE"IGYoMh.84,6c
%\/ci3DJI31Mf%P1CeV&6S(IjnanKc8A\9atCt<Uu^?l)*!eV9j#@SR+`$t$%]^&`!_-,`cLgkq2CHrYsc+(2C1Q%3O6="`WAuQSp
%$/Po.GH=$m_cRLe,gsJeL-5]oM[`]R"$^&>V6]aXCpjaVYma2;N'KN[15*2@?s56:]IUnKZ(M5"e0:6XRt[!hU0Ic#_::6rZ`LAd
%MKKn10pYPlV-6'&:/Gff=c6BXX8q3$m".^Z$mlCk"r@O"aOX)1:s-S]C"`.fI&gquY&/E-?9pNKA:kGb]S#P#MN$bf,U86[)$09F
%)@M_ILrRjoCb2J)`(LK4#pL4p#Y:1*Z%iI;ksN(>[liJ&/A^/2%8-km8`XE%Pn5;5aYKOL-8o@9.b-Y=1"idZBF+\jIdefK!Lcj2
%Yd"qAK%rLh#?-<"")*O[mDpmtQ?5jbJ8Q(\BuL&p&g?A3fWS7JK+P`Die53W74Rf)@$d?7HjJD74R6Y$KnF=Hh6o%s/l3(J%<Qsf
%U#a_>/YEOt$3?,8q]r"F3('+pS`jAcduI]J)$!m!AoM]!fFi3U)O[`K8,Y^L\q>3%\"SEpkF$NGgcNSr#j\.%ECj9QiG6E>*Rol.
%>/^sf.#:*)E1p\![EK4(5)b&='NITXCuSTIi$YM^-i$e:4Io/.;AYq%DEu&G+3sH&dA#H*(G4Y+Zo=-HXP2m\U!g_t6t>1Di&)Jc
%QE]m!9u5ZP&U;p57L"ErnXu"]d)^(Ta@[9\B+^,^;*jS!f)OYhFscNc#]N^F%OeU06SrRG'ZIq>[]JRA'Gdf^:!dsTM^06,Yer.%
%oPG0P@Va-0VlN5oEdj-RJ1Zb"Y.`:NQDm@O`"9rik7L_1:W-mDkoJM!U=)+E'a,`u*sBL_'RYe)L*iuIJ0<>F+b7'rn1:e!Co;eb
%@:pr.7bF-;/OY+^"F#+2_(Y;4MEIrl,?*[>.la9CZ'EJ`%C3Ie?+LbZ&9`J'G!:_;_9Y!T+Jr@OO-]UjS&Cpk$t;RD%C=^,?j0fW
%RU%-LTEHe!kS@n-gYc!5(P2!T8(P(AlJOAdS=hprk_0]3QmCUi@O9n8BaKMK3?ll'`+`'#XHK4n%1=0EgRsfp$YJsrpqsQ!*lUOU
%9EPV;V32[p'd#mg.0V!Gn[(hi%=J4."R5>"FJ)'0RSG\!.fs<`a)&[E3OWq$1VoLW.9sjCC+#/MQO6ee8#t'WDue[IA$O`!^,G>U
%$Q[]ZR(HAgP+\j;#upEAH/HW[5QqWe"=6$8ao`G?`$h99/8Gi&&I_`!ZOip_8Fi-/:s(Dq)/,7hUKq[[KAe]eF=[kqn,s;[5o3AB
%$ai)HBJ2OsXE2k4Vg':s3n$^6U_QVh6f\9N"^'O5i97c=kh=tYMCZr3DD91@)aMheOm`"O?-l`I40c9!STq<LZPLfpa''%HCdFg.
%4P6NI)$u'X#kZo*RL0$`dn=Kp*ad;'#'O4ZjQ:^S]A(9l0T=\0ff^6mnmQ]/!_CeWa7%s.,Eu*495;D)nLuO,M#cKZi!>6;U1;us
%`NUeppgSXGWYXCn&apYd@%G@I","5Gi!X@BXPJ\RB.].H=B5D*lro73BtB+bVA!4UOlcoF_Fm9^$r+aDXbD"%fiuXcEceT+S-\,7
%53\jU!YX8:!"Y*Hf"j#ZB8@*9Yom0H=W)(/@G`1Ndmu_:AB0f\(UYETo=WD]?`?8G&41m:PrbIF.h;!$K.W'R%o+!0*FP,7A\6K5
%#Yc->i?!TALF0qR2QoN5K9+ZVC;nD+:VCB-DT27&O+<.AguF2J,&1T!R=IB:pbOJFS.-f4,@-*h)Y'n=BZs"4;CP0uESQLE$IN]/
%k7rne#h%Y25TKS2;?H5F;<p[SA-i&u=BW]\R\/CYSAhs7`h3VeCgFi.$-#l`C^UU0>K(4\lI6G`jA2..pb^sjRKJ^,QCs-q)H$A[
%l3sSJ/:0n>W=BMaf\@IIY#uRG.kEg8_K\@sT3W&I23^`'!h)sJ@C\%gCkI6XLE5>mLk8^\#tOF9+pcID>;\;UnRNM^%Yb+UY="]e
%4%LsXo=g&6&k?B7H6m)]NV'_Rd9IT!N4@jVa)tNJ5Zo=r.*2j%,j\uJ[K@:>YcE:2*#b'kYm2c`*tk?qooPsY+/qs_KNi#H6s/q-
%'ZWr"MK3MiS)5^"V%]>`Y6(jZHq"k+1sbTlL,S4f&FC[?DJe(/K3H[JY_W]*a*?go@.&Zg-4G('^c56t)+_4\Sn+mb.3Q&ITbC:E
%`:Sa3@.nPUa]OQMiA9g/:$<pS+FM<)\]?@if/BF</W<n%cFoUs8t(LLWnCL+G+D5D^qrG%`%M5a`I&4`Q4ah9X9Z]^">b[N+Hq$O
%85U45SOeE7-QrMCJLTAp?:(oTW0.hEEjFB(@U\P48OmP_5d5*>_*AY/<fA33fcWY<S`"A6(ZH%nkO`R2EdB"E,g@T6%N!K4Akm>*
%?!OmQkCr+?RpreP\FNY0c+BGer\/jmj!B6-\Yogcm@n<aOIGDn[0,k,aUX\O:;f9uP%.-b$+=-+Yg!rr@5K^I_/(9cKt3?7OMDHG
%5C--GLB:==:=trm7LS51EaXO;AUJ>#@!<USZCjJdDoI'TR032'hc8&aHA8XaXJI84IM-.$XR+U?Lk.#KOBLE_H%bL9d._AiqR+Co
%_tF**=L2=BriJ35%[r!%^gZ2`=+YW$mhe%rX-ribN6-i/YbVmN]kapk$,PSiRZ6h#)?LM@=)%Fc<d,[p&!,,hP.h>pq@!EdY[>5)
%XlTI%E`m53F0I,c'Ise"EQsg:F&cj*TrkOe5l_6eNfX]l4dtuhj@fp+Tu1LVTa\X:-#(JZ"Kd]#\V$Jq_'E]B-:s='E110ZJSg$1
%!Y$?T$`2)i3k,PA#n^U$,j1DjS3Sm&.ha,6.Yk'Ha:B.&L4Z4TRh96hbQ<[.,rR*`fW]&-Ag2h8RG%hb;fFkT$V;8&*t'OrYYa6.
%"X0@1`;V$8XHsh<QDQ.r>LU-Ej-CNO#S_5-6Ab)>`+2B6QH:p6q\_53&4or>CG2IalNsO*M#?%M7YsFcm53QY2W<;=BOGC=T6^g^
%ESB;q<i[4QE[c5:T3^GZ#\)=(bkAo'0k,[P460BuP?PkDTnYd7D+bOYdsr^F`#G)M`;'Bbq2R7]?>($->;CG"$:HRba"_H;X`UeA
%&J3<TX`WRKn^M7>I@Sn#HK'T&:ca2_LOI$n6+X!11*hgg%E!>,hKXfp:[=c92I]#jhm2(a=](#p5s(-hkc_f/MEdRAVcE8WLl<'C
%R/PAb%4lUSTS6;fYS5(R6A_Y67,"_132jBc6mS0$D\$:Wo*'kVD9AP/%6#CV-31lY<]/c_*U*X*+0g-`\-Y&Se.%o0,Mb&7O)0XC
%3'+f"+%MlXT90J*26_k@Tc,=i.mcf0B@NUg\SqaO^.VrZX%$@:5\M"BL)mFZ$crf\h+B:%5e>s++OkZ!H]eKr.V^^lR`pF9:/`N7
%VWshrS4F,B!tsBUW5/^:ig\k)2_!(h2IA'3Dg6%I=:%B<YTJs3FrWe`KOnk75S<9XEQFD/_<e>$7M5IK3d`hOPBjV(7$BK.4ORk5
%V1Y9Am.`UgrO&F4d52ii2&t9P16%*!(5-MbeWS/XM2:0m`sa"2cA7Vqc(SpX@1X-'n*WVTF01+[;6X!?Fmg>48,O7i"6qKW-:J$8
%O%hOX9W20q;oSlP_*6fpj&Ws@3`sHDf7+Yc#+ACl5ro\7kaHWBOC4QNnChOoqQcBJoiXWH0[>Wg'9b%WBI.TF>+o(sG'Sd-`;$Y2
%5MP?e`T&SM8:;UBFJ?P/[RfJT%P,B_!WUJ5BngF05"3t=+LFt=GuPbJ*@d,MA)Ujd]kl6(MWV7r3N/iD3\d_bE8Y.W9r"PP$lf7o
%a+up4[EaUZKL:\d\S]^XE"IS60>+&_570Jd.7#c6EIk6fWY%]6f1[B-g4iCk&5D,XVJ$eqXlCa/Ju?bF>]hlJ^b8sW_c_$#F`Ch7
%*[*Ue+`)pC)t8fMQmG7iaS%l:M^F%(@)Yb!P"HQE?t#EMbgeIWjRf<$)Fhm:cpSGIBuE/%9ejQdNGFp#>HYjJ';Kq*n?m>SiiJ"t
%`S#8/%>"YD-Kn:EgM/0QE[":&Tib,nM77K(5S+W(&/8/"#\S3XW)`I0^dCWs&dTgS9NBfb!5<:"O[;6im[i6;N$D"0&k4FY6e4Or
%Kf`qF=]Q?W'kB1L\J1_#@V?(Q4F#ik40\(S-)q9(#mNB-2^[WA6?A&%f3+&ZW@?nq+=E)cWkro5&1HZ:01eRl.i6(@#iMuYJ5bFe
%*Z`ibej70^3D_1n_);0`EeQejE2hF9,j2XlAge"q`!GaR@jK_l2^(Z=^_.8+)\*8UN/ug$)$cecktj(WBil2:9nhfie\DKm6c^#;
%Ma!jG5%:`UgVVqa>]J:E!g8@*98s*JR"h@L#WLlN!\DC*>SCR4-MWBYB`uC)R+'?<jTB6Of^OKYNcARn!j?YN+_2&8W3r.q64OFh
%"J=D'9OYuX!.]U;@#6?^[>7D(8-M;$$mA.HCik=A<#hR@39-;9JrqGbC<48SmV[8,LIi`r0;Q$JEJId'j=lo&+`^9_OD6n@2'^GF
%(72YXACC^f!Kf_@#HgFChQp>fNdqY@6X=TMd9-SZ3DP:S-Ie'/KG>;K23Nk'N^YJl0M>3K+^d[J:2oJ0i>,:YA1tS+&XBbWb!:<i
%bXL"i*X,ej,]SqZnY$ku*b7a[f"AfRSf%Z(0[L\.*i2e[Qi`Q/SRg<H.1-6;-kLK5-i)l'<:k4%1M<LNd:D`ppeEl)"H=8$1#&BX
%U\4aS:-*&Y#QUP>,/d]r5"W['f4K(^>t6WfeULh"/2_488S8-ZiB%fHRk,1)+b?#:(5^fSUb+(RTs$b6E&Aq6%pKRQ^,D]O[;2Na
%eSKY,2TCJ>\!9VnS(^c3NF!k]A+HXAG--FqE,uTJ/C,SM-K<_^8ng<B*fLLaO/>mG_i!XrNZ7$(n5Hl'LoS%NmP2*P^UQ2LYrNJT
%#bc3SLt&a]'#ZG<^KRd?KKI5H_/2K%@p#>'>/Wc;`GuS#A3U`I/X07g67Yeh.os*'$4M8;U#]L9q$m'>GtA,^K.Y.IL5UhFMrYBU
%I=-hWZn+m1'\>t=XKBB=)WD/UY4Zi50Lmf+3$lm[[?Y,>FK8*VeP0AA/OFuCUVJc6`BYas6nfn$X.tOWDo+uJOoYb&TW^B>fqdsG
%RguQ3)F4?YO:@p$9M)>q1<:Ggk?2hJ;FtFt*1<kmOH'<re1K9P:F/2YaGH1.2\U$5-abJW,YX>TCS1Ac=]Zde^s<[68-\\8S?,+!
%%AL_<!to1BR&<%Op2gS[l#7J%nV6Y/)fZ-2l):Sk;dB'Oafl+9V/20]:nEX\A&0K)^B8\1p^SKkRMe*k/]CS&KGYZus#ZKt&uq6q
%?"EoDn6+foN0$lp/-Z)ZKIZK:B1T1X/.J2$C76")D479,3tj,/>7M7_Ms@*[7KlD$,S$W;c('.cRF.B9EeTpQRjmE5b%;k1@Fu+]
%jAh\ap-gLO/ks^pB876/7MP*5Cc&@)0VkPb9o><9c0@ik!$*r@:SUaJcRmCm0?IpdMR=jR_@\>7)Jp=,!I<.I`m53L#O)`Qq3Wg.
%7qS5P2j*Qb9m3?YW5XhHL4\kp9(`X[=2A3>OW'o<jV]Mg4qNfOVOCTr\3FGk;#LM@W.j#(C!I4i=<0ado#H[679!M!#rq#a<(,EV
%G,<.gC:%5Y"mQoC9;q0PcE#tq>XH^M,%#BM/a"m"A!6K)L07=)Co41FVBJsb<R:2<-m,"Sc\jqCLS6gF1d0IQeLlSaPdo$d/qCm&
%,WEWi4hQ*`5+#%%>e1_!$I:Q6NS\ZDhUj1O<W)V/,WVGGj3j3S;TX!V"b:P[1uZjf<NSG`<=dYq`[AI9khKbkib.+-Pi'#"i^R1=
%@.6iD:^)(iO4["?Zu0#)O)S-QXlYCj3h:t_lN=T\R]@>NY$:G4<06!'*hhL[Z0BcBE.s^T6]I,SL[p*?;qBA(od'Gl<lYNc;&Iu;
%g1p=o8$/T47pV:-&io]"-n1H%.@#d<7P)]ij4=fA818Feb!jt<CodV.6&PkgO<Y?`B_d4#/L).dnHPl0D;=eVHYVo[5_.a:E8+"e
%?8q5B.k]sOr>GP?YJ3VH^E?JVPi&]q[g:c'N2Zdq`fL6!)V:Ea=gJW6;Oa@(Hs=:=>iR1J7VmUKqTc\NE>Db'kW#`WlSqm!F<(%N
%HAr:0RQYU(,iC\lg)LO=W<bHnq^*p3T'o/&KDli!Etne4@Dj@nnJ!7#pIpfj'H?'CL:%`ua'gG-;d='F30J8@WiHspNm_p37bGf(
%UNlZg*:QLlEKE35Tc"gS1_OaIB%%6P"-[48+OT/N#rE._EDUVjDd(=b$lk&1Bo>"\Z\-/C`P?IqGAskH@84_V@2RhYCX7Rh<iE&>
%3gg6<#rE&7UkV1*JAp!L"+sdMhPFHMl'>$g=\q\(mLSWf6(b=5j2Mr%2C;5Ei%SupV]56l`]1^]O/38$&nV24a)N_kCN%rRj>KBG
%EBX_]Nk)#.@SRbc$lT@.Be^i;bsCQee\Id[*X=#1@=a,/kMY#Y=[%rRh;W3%ZAlhn)n]qlCkdqET#;#p;5e[Z*6$Nq,`$r=f&AVf
%8QOql'I3^q`_e"*>%chu:"p.fKC:jX*WPI+)agB&g(S9Bp$EfS5d_)^j.$$+Nbdoh2%DDcYqS-K\(r;6+HnP&E*+n>`HX?LQe!F=
%eKk"S&d*E:EGuo#X[rpdg,T]iN(kbe,Zj)H(rSt/keB^]msX+52ED>giP(dLs%Su]KSdVU%aqk=-4se;`BhX:qS-G]m[skCR>c^l
%/u*4kcrVS*W&7f%qn9.5=5am'GV'\IMA\^Fmf_[;LsbtU'k4@T#ESn6^"W0!qL7:&SKGUR:HnEHq<R$u\!'NNIQ(Vr3?l-QDl'Y0
%cY$=KfnKu]0mWf5?\]0gIQX1'Vq6iNoD[qC<PRBsY-'^Iji.#FFL#4)a7$3EF.Ra8^Y=cU4@@Uek!fU#a6iQdrT,phae8/Go$uK1
%lJ7I,'pHo(\6naGFuI,!a4p:JU0gUFJ"t+DH]-&)<Bn3"D<Lk01P=FGrmSif?djijeTaG@_^htX=PgABrJ3H'q!ED#[sn-rZK;dW
%EJ,Fo,unC!ou4Ol0jE)&+He^UYMRU&PPK7,*FF9.]'PdD28@k,#%!6)P:<rJQ5?u8c*'&_np3+Krj:Ba'@LKnolthomecX[an0o6
%Nu-EPDo^XWJ_-^fCt&B8Crm".Zs)T([%YHL1VKCONnP7Urr%/KVD2aj:?M"UNR54%q8rCdP6"tt-S%A5DY(-kpMi7m@iSnSpt>FV
%fY[D$%j+$r_0?2h1&P/mpKXA_b7`,/R-+e<g%KIaHX;f2Gp*8raFG)GJ/>Mh(MV[aHG5qUbs.4qD!%CI+6%j#OMO-qK7?FerZkjB
%?`qsJ/cBu]'`3'f),Ff%8Nb=p(d4"X-Y\_MULV`5V\'r_%.@d$4qFNiqD<(::c!Zk'hca`9MakSb(;,E?c>11M?0aXP/^eO50V@s
%aLIP0f<Witc@2qFR#gh2QBC\lG+UlVIjXVgFME6F^:@SBO/h(N+dK5ZN3_eIod7C+0YLf^of2ZAG6s-gEW4iC;*H:/GeUo[chYh%
%r.7G1r!fe%P#/f&Y5/#rGfq:\L\Fqh5L/fQdIH[kX.P^UYNjNWK86YJqa(8QFZ&;_)?*upGr8f2c2.WC="j&Eq)6SA-g:@iG/m[.
%rqI<nl!GP&YMW7DYLN;FAZP:"f70d#M\GrI`puMCXN)tA[.!9E:**AEg(#%6G<0cLF$;'rPm8=h8eeq.OO1nAA+>n(pG]S]qGdIZ
%a+"'qHXFE2#P@,A]O[K+o?_nTF7,^rn6?%cl(\\?f=lMj^SWZ6ZX-pE4^Yp-d:3#__<N?BdaaOAaoBW;<ToWr<\f>ScXn8.kNQN#
%p%9]0Ho`FI`inTs9rfZ-lcj!`^08e1oE4!KV/@,sQXsO`-)'YdMkqEXE8:Mu^Eat)`nY-f"?a$kIJLXHS2<<N3&L<r=)%NK&UBq:
%kTl6rI(Sc)P:^e<=)Z*`"+6&WcDI9)anhcSG_bjSnT+bV8<[#Kle\ckl\fN#Y7"AGC!a%,'CGksT![VMY/"u=f6r/q09rX%)e!lo
%LJNMfHh\k*Ym5Cr>QE+S!""N/=[HTt]O/u;Wm0lPE@*GZT?rQ(j;$OL9AbodA_@](&.fh2hbO='MsDtOZ24D%p<W(Inp9HrEo=Gr
%[km6[SnR-t6cr,YfBknQr8DrWT5?enB6Z.T!<!GP4XI/-^Q=Hr;Bal#g?sF)F3`mI>(,Vd=.mZM[Ns'KY#_%F[a29%9Me:U4fX4<
%T&8uU,Tsk8=EK9IhPcAe5MeWf*;^`Jf,4noLC@IfYH+uU+,2auTCaq`=<`V^$Gf"9I\!tC#&8h@g>>]oY1Q4P4`09=a7cm@j`Q;>
%SP;b:1G5Rb<@F9MZ'0s8%F%J8QR@8F=e=Df^6(H&2m2CmEPa)!*`!*ohljI74f391.We*,<HQ[cPl.n\&2F.OAFP8)qgN[pmJZ">
%_qVtVr8[hB7Tt/miaIV]?7.[TOFL1V%mM#%o@It,`<ceDr@>JlA*VO?p1ib[d-4`cm3)GK:*+jB2!;(%7`lASme`?`Oak!_m_66$
%?*8@S`q`dVjjfG7I!?$OSS@lPd%'?87^eH:ZCl+MlE,:gkqe;`<A!m7EW+34T!]F#94Q<=fWn:RqR7Pa<!JtSC#HB7]\]&#p*lUD
%JrT2["o$-9?Y'kURdaP)Mqeq]kd:5k^-/kPZeg7u:9t2kPW^n3CNa)a-c6u=Bh&aP\6"Y[fbSq*nZm?EE3PO]mo*fa]RPK0SoAZ+
%^G^WTJ"A"b*"CfLr_M,'%\,Per$^/^?Q=DN0]2onZD*EoV\W/)ReR7>fi-^Ab;94rob7oRP^c1iWD>U*K+&W.#1]-jg3^FZU'E_D
%aUFYGN7(+EhB@QJ!p(/unem%Q4>mL0([RgEI0\CDXnZ_mB%WU>bA;SQfGcE7C_pX7X=FeQa"Co%.Lu-l*c.N"%e[jpCoJloouA-?
%9d2V+YX>3>DBRLC[e6Phh7JM,=J\IQPb>:"#?$cDl0Ri6WG`$iOYl&VHk_[AD[3RhV[^D8X+3ll4-7U`e(4%n;)2hQgkGFGBd`A/
%047`Am\srJ>'E5?H*#N+$Z"urnA+B#D!Kf0-"<'1i;tk0m6DT,[WQqQc(2JNFG[0Z_W(\UFmd-+2p](KCWN&.YZBARXkL[1mbEM=
%"G5gtG$n83/hI!U2breVVTrJI8]4ksbqOhngG3=D0(oHJ8',U+F(Sef?'CGio3>pr!OVQuc3AnbOLhkQC@+R@gAB?&b:+(olIJA6
%P_dhf3mF"idHK`"eKPeCfblONC+WJ',V[\h,]#mp,t]q0Qd">T103/*n.TY@$_Kd3:EfjU]2R19kXr=$>=T;WFN/*=[3C_a_mAL$
%]uP!(q@nBqEfLc]<LX,3_QRrNQmMsb/lfTG@)AqpDAU4%<TuU`_mN5p2e,s$dRtFS[3H,k%(eQk0k&]k.[`m8_mD+#2WA%R%+k=+
%156);SILYm_j2^OC%j;t?(2=G#7MOjcCQ_kF8R@o=K@,JKOLVh2DU"q.u(GfL7M(s0k"12PEncW-6"V54^_C$fb@-tf!L@N.N-(@
%Nq%9KJsAtcPRqYe8In?/2]7U7KO@,Ag3WHMSL^!"D$X0JH\c((X_7_]"P7KQ:VndP]P@[%j-MAB@4e199WGUpN(VfL,3t%W\qnEA
%)3qQ6X+Q@e\:f6eM^Pl_;^/=k[->$D#``TIKF4%#4(tZf>O!$o'4)[2`11]CC\5&+5VedI.4dY!ALC'g-rWXehUWR"T+0%:SSsR$
%qi=]$['*J<nto0JY9?ZjhU8<Z:uB*J8)5jjkDk%XK*[blD,Kri9RW]>DXNEmcN`Mnl>DH>COV;#j>A/n;=n"V`/_=9oYn(J"7mOU
%\"*j\kpD()(IartM$m<hhq$KA@.;!ka/&sN:u+DOObdD]]I5k`1eG:2ptIjin?\fKO1SsFJgsS9M1/ANm(GrWNP;MN%R1o$o=/#m
%aI:#QCW6M-]-oa4l"&hO]rf`tRepL<UM^tCRch_Z?'?ZsGM9,p1s+NW3of_9TfJ1GAMW,2`q%%<&eA<5SW-9.@boVEFiNBQ6ZX;k
%bGHU6TsOY62Ap8Taq)n=:,4rBP>)(->A"q)2DjT:[nJ_b.lMQTEBG"JVs9F(_TpHOST4GXd%&/41>T%kGHG)9_E>AmA6?4_i-*r)
%BjK,s5NbnQD!>Q>PFi9tQXWg8>+>I!m;D63Kh$/;kAdut,Qqtr>25rCd775OEhQ%ah:NOaSdinfgte-2@S>Up,7,DWlEji\HlTM3
%mS(OEL?:V$,t./c4!MtK,a*5H0!^_]gt$1=OjDgTo;Gk_%d^YZXV+"T7"&;L!oKq5n[VR1%V*jsA:ee`fU7Jd%F'1l"`ms\$KI%)
%0Y_Gp6J[h']d\SrOKb4jaIZ3UT'<D)<$ulI]155:?1'eAOjT:sQlL0CIEE=&Tj.A8NZK4ba/^K[_0!4#-2#e;3g![._7hPp*R)R)
%,bs7bQl/J$YcL.k1AM;FI4b[QpLb.]AKtOgn*F0U?DisgCuc+M`o0"FJ'gh\7I+-@m?0j7Z*WsL%Zu_AiQaEq[+NPs=t3[o,_@9<
%V,#h]1"g5>%sFi/4-k';\N.d_/C>^%837#2@R]#>R_hF?@I0"sSGQubA:P;D`99P8R0*TFIN@kCEp(9/]Mpd/SPAr,GM4%4bBE&V
%Vop7B_`;;-B^ih<kO<P,6lPMm9KLjb_jtdlBge8XZrAm3@)d>+0X5\3/Y/`/G=-"EFRIJs94\2uAHsK)f%JZrp=WiOb.bmSS?c*N
%NcZdsK$r:L3HpPnX.d6e[PYFM5$B8c6`u^dl&Lm:<Jm8X,AFA<%PNg;Z?(*::a<'%DksBXRN@Kb3SQPb!(VAsG?Te&fa;^[a'f5M
%io%.`E7&qa-:bB#/BR's[a\FsqoJs\mYo%V]<LZ"j\1[Rj2-!s5h)G-Z<-Q$3M)H47O2>5#b70AD%:PsbB+:Nc?WBq3N%>;'J:;X
%O@biMar-/N$WopUqa%_KhbeTeP>Y+1,]m"g7A;9p<goh,Ll!Cn0a&<U40BBbdUaR.]O8Y$]=en^Jg1;dZ:d)d?A@BqV",,XaXNA(
%jB-%8FF'A297WPD%=PYFf*:3nKLaj9O^i2Q@C6YFZ0h<Vmu-[HJu"Ao3`Ui#a^P]G`]9*ljdZ?g;Jd#6b@F7bQ6<(o1M!a&"o2j*
%&u^S,*gbi+I^[K@<sM*(-Y]%m?(6,"UkSR`K91)uj)-lR4PMn'@AH-@[b45$k<*gVKJ76&O9HMRN,p%ab:t/5mSh>gE#h9OS+"W_
%n=4cXKcO&6"+YC.UM`",2Uj_r$!0H(Bp">"q>!)J))0OYRi6fM'-;A4W?aa.'S(gEcdHp5:*:>`jOBbE"eM6i6c_7MEOVGF(3CQ[
%5'R&Y:s1&;U9YqD#,0<ipif)e3aK`;K:Jp._Pe`?iF];Vh5RX"AJ^(!:)ap4E=anNH/(!L;@hdT=I9GVV/,ej5B9UlS_S8O<:DgO
%+lf*5h/Xu5EHT\P[VJ6q;Giu_PcW@@GArAVD]OLiEurp=9(a5h4*L+66Bt_LBbU_.\\]*<Jb[!4O?PaL`ssC3<VlUOA>ln8a]sRa
%,Pjl?<,fOpE+^/>2DjT`o^2@BR?K;d_#-giiJ3u7(ep$^N&gBdauZ]2.XKu.)M1WRSOmKJHRc!93-mDMAQZ+6DN_4q*mF[iRZCOl
%*em5n4*`$\eh!/[jl]71+#3g2-fZMY=.mJ^fPr!jijE%<<i6rbpL+=[:<:TmV/JQ<P*=R+eAGigjg.7Abl0oL32\<m9P`[/Qp7#)
%VTpL"$'M)a.aguPqB0==;lCh,`5HFg87jZi/Ek8WIO;=%2R<W3j.*DS11aa^'Ql<pb;-n=4'3;!MpXX.KQLAMCef#A@?]+oafKVr
%V,r0lB.'TKU00P\(anBUZBaZkH42$fULcSu/on=5o@Y6,KT'up;Q1eEd>?#0-!=8?(8[3EOa45XLEY]JZ;`[4:]qO3nRM^d->/Pu
%V!l_7aTNT<CiVQ.k+ns>oVq=3fkrl_SdD^EAPU?j)hop!P"gBrJF5>L[E7L`W?'4eV'am'alF@plqC/d'Xaj0TXqLpb(A+Ofk(\`
%/>Zdr39SsJ&Pq7@4e,:(8"7":Fm@98lKf'C*pQCNc\fPMkIm9'76PURU1Dq@/;f,P;tpXlV^h%H*tCT63IaniUTVmD31Lt4e2ZDR
%4KlWVV!kK(lGL_ro9\69h\(aZl]\tg]rCd4*C'P^j?\+Z'e/Fs)F$_,5=_<l6Ak[<*A>'6XirHa4T>Z\i5J9+GSd(R8$\f))n:>Q
%s*/\^lMBm[ql%YS]TB2RZ&cdTIQZY?re^[S0DncN3o?Mkq!j32Ok4rKfB.S_&T;Hfc@6MTE'E=P!=;0LQ)W%^\aT"X.p_?,"nm>h
%]i4q-Viq>rl`[A\T4q(3s1G5[O464?EBLBTY']Z8&bT\B4+,Kfp&4<]BuNu[@<_EOGA"_,[<4FqcJS*Y)Iaq@oBt=Zfc@+mr-B%#
%jk?)kG,Ob`/^j>`Z+'^umG/:[`9fQ[%e23V%WCfb(aEmY95&4rhYhDJK4iNFi*_B7oM([QnM:Es/XB'Vr9b#Iog<jD>:*;*)#fYV
%>BbHZRtJK4i+LD#YrQaj@s@FY3V)cuh<B8p'm?JM(UQB2^%Pc7"^\GrU\ou9fmD*jm,HTuroEe<mU!>W7q(kl]mI:o9--RYn5#nZ
%$AFB!GRT%;jB&lRo&>WrXnATfb'iUd:T9hpr\W6`$go"%(;K&2lbjef$QL8gPX)r)H)sbV#@2-3D0DoR`8Y)eI+e7Dqi[F[)[e_K
%FWm--#UG2ZL3K\C[iPKX(B"cA)W>;brJ4X;ger<XTDdP@q5pOEG.-V85<mrqe(+"uoB3=A<.FiZkDR0:puZ@VhJgs^YI*7),V4hu
%nsr^(^D+_.#!:<'Z_9CYoA0AXL@"?sfK)"]c7s3`bLZ3X>4E=T-7"eFnTj"8R?[QnNqr7Q:Htj$djiWYcb65O;`s(]'1g$3[WqBA
%@*YP0OS?DbOK1ZTP"G?oag;!MPK9KsW7ar0$bm0+g0Dq[D82=*\pHIudLmV&Mi!-Y9<%C$[.Mt6FLAQ`q8Ji&P75Y,3mC25_jt(^
%Fm\.Xa(;tNEj9K.Vk4hmc;[b>8+l?$Aic>Uf%%@HRSTgZYF&Rr9m(E3>[lTW&3WnWKPW!lEKjhl'(VXUL,,RhZ@:5qaCZ8EcM7X^
%N]$BpccoANYh8'r@Wdf>\,IZZjd*cC>D^=@D-<LI`00ta=>J0;P>^9%*_Y,gBtBfj:\QgSRH?VX/o^S<9c'CFqeVZshXR:ET`'8+
%HTis/&VT$^cTf,4e]Z)3rd6ksc1-,VpDa$(e7?,.<;dP[KqBXCCffr:g0Ce064X9s!W5:rDk>;<fDPLjX7[E8Tc.kHojYA*.B<.@
%2Z+htJ8Qtep^J&ACMs<%MVg%2^7aQndbb8>rHPa0hra_/WMQLP_/00nr1JSSH((qNHM6@QP6_*u4M$O`~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 1267 1034 a Fs(Figur)o(e)24 b(10.)38 b FD(Performance)25
b(of)g(b)o(uf)n(fer)g(manage-)1267 1117 y(ment)19 b(strate)o(gies)g(on)
h(a)f(Pentium)f(3.)2625 917 y @beginspecial 0 @llx 0
@lly 716 @urx 468 @ury 1728 @rwi @setspecial
%%BeginDocument: i2-buf.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: i2-buf.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/19/2005
%%CropBox: 0.000000 0.000000 715.602051 467.040039
%%BoundingBox: 0 0 716 468 
%%HiResBoundingBox: 0.000000 0.000000 715.602051 467.040039
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.04 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.04 ln
715.602 467.04 ln
715.602 0 ln
clp
gsave
72.2402 324.3 mo
72.2402 324.36 ln
658.92 324.36 ln
658.92 324.3 ln
72.2402 324.3 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.2402 324.3 mo
658.92 324.3 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
72.2402 263.46 mo
72.2402 263.52 ln
658.92 263.52 ln
658.92 263.46 ln
72.2402 263.46 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.2402 263.46 mo
658.92 263.46 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
366 202.68 mo
366 202.74 ln
658.92 202.74 ln
658.92 202.68 ln
366 202.68 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.2402 202.68 mo
658.92 202.68 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
366 141.84 mo
366 141.9 ln
658.92 141.9 ln
658.92 141.84 ln
366 141.84 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.2402 141.84 mo
658.92 141.84 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
366 81.0601 mo
366 81.1201 ln
658.92 81.1201 ln
658.92 81.0601 ln
366 81.0601 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.2402 81.0596 mo
658.92 81.0601 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
72.2407 20.2197 mo
72.2407 20.2793 ln
658.92 20.2793 ln
658.92 20.2197 ln
72.2407 20.2197 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.2407 20.2197 mo
658.92 20.2197 ln
false op
0 0 0 1 cmyk
s
grestore
gsave
0.000488281 0 mo
0 467.04 ln
683.041 467.04 ln
683.041 0 ln
0.000488281 0 ln
cp
72.0005 20.3994 mo
72 203.399 ln
366 203.4 ln
366 20.3994 ln
72.0005 20.3994 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
72.2407 20.2197 mo
72.2402 385.08 ln
658.92 385.08 ln
658.92 20.2197 ln
72.2407 20.2197 ln
cp
false op
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
0.0599976 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
72.2407 20.2197 mo
72.2402 385.08 ln
66 385.08 mo
72.2402 385.08 ln
66 324.3 mo
72.2402 324.3 ln
66 263.46 mo
72.2402 263.46 ln
66 202.68 mo
72.2402 202.68 ln
66 141.84 mo
72.2402 141.84 ln
66.0005 81.0596 mo
72.2402 81.0596 ln
66.0005 20.2197 mo
72.2407 20.2197 ln
72.2402 385.08 mo
658.92 385.08 ln
72.2402 391.32 mo
72.2402 385.08 ln
108.9 391.32 mo
108.9 385.08 ln
145.56 391.32 mo
145.56 385.08 ln
182.22 391.32 mo
182.22 385.08 ln
218.94 391.32 mo
218.94 385.08 ln
255.6 391.32 mo
255.6 385.08 ln
292.26 391.32 mo
292.26 385.08 ln
328.92 391.32 mo
328.92 385.08 ln
365.581 391.32 mo
365.581 385.08 ln
402.241 391.32 mo
402.241 385.08 ln
438.9 391.32 mo
438.9 385.08 ln
475.56 391.32 mo
475.56 385.08 ln
512.28 391.32 mo
512.28 385.08 ln
548.94 391.32 mo
548.94 385.08 ln
585.6 391.32 mo
585.6 385.08 ln
622.26 391.32 mo
622.26 385.08 ln
658.92 391.32 mo
658.92 385.08 ln
false op
0 0 0 1 cmyk
s
0.960007 lw
1 lj
72.2402 383.88 mo
108.9 375.36 ln
145.56 357.12 ln
182.22 345.54 ln
218.94 342.54 ln
255.6 332.16 ln
292.26 313.92 ln
328.92 299.34 ln
365.581 267.12 ln
402.241 254.34 ln
438.9 237.3 ln
475.56 223.319 ln
512.28 200.22 ln
548.94 183.18 ln
585.6 151.56 ln
622.26 126 ln
658.92 91.3799 ln
72.2402 383.88 mo
108.9 375.96 ln
145.56 366.24 ln
182.22 357.12 ln
218.94 349.2 ln
255.6 340.68 ln
292.26 331.56 ln
328.92 321.84 ln
365.581 310.26 ln
402.241 297.54 ln
438.9 284.76 ln
475.56 270.78 ln
512.28 245.22 ln
548.94 196.56 ln
585.6 162.54 ln
622.26 140.64 ln
658.92 104.16 ln
72.2402 383.88 mo
108.9 377.76 ln
145.56 372.9 ln
182.22 366.84 ln
218.94 361.98 ln
255.6 358.32 ln
292.26 352.86 ln
328.92 344.94 ln
365.581 341.28 ln
402.241 336.42 ln
438.9 328.5 ln
475.56 324.3 ln
512.28 316.38 ln
548.94 306.66 ln
585.6 303 ln
622.26 297.54 ln
658.92 291.42 ln
72.2402 383.88 mo
108.9 380.22 ln
145.56 375.96 ln
182.22 372.9 ln
218.94 366.24 ln
255.6 363.18 ln
328.92 352.26 ln
365.581 346.14 ln
402.241 341.28 ln
475.56 329.16 ln
512.28 321.24 ln
548.94 313.92 ln
585.6 306 ln
622.26 301.14 ln
658.92 295.68 ln
s
67.7402 379.38 mo
67.7402 388.32 ln
76.6797 388.32 ln
76.6797 379.38 ln
67.7402 379.38 ln
ef
0 lj
67.7402 379.38 mo
67.7402 388.32 ln
76.6797 388.32 ln
76.6797 379.38 ln
67.7402 379.38 ln
cp
s
104.4 370.86 mo
104.4 379.8 ln
113.34 379.8 ln
113.34 370.86 ln
104.4 370.86 ln
ef
104.4 370.86 mo
104.4 379.8 ln
113.34 379.8 ln
113.34 370.86 ln
104.4 370.86 ln
cp
s
141.06 352.62 mo
141.06 361.56 ln
150 361.56 ln
150 352.62 ln
141.06 352.62 ln
ef
141.06 352.62 mo
141.06 361.56 ln
150 361.56 ln
150 352.62 ln
141.06 352.62 ln
cp
s
177.72 341.04 mo
177.72 349.98 ln
186.66 349.98 ln
186.66 341.04 ln
177.72 341.04 ln
ef
177.72 341.04 mo
177.72 349.98 ln
186.66 349.98 ln
186.66 341.04 ln
177.72 341.04 ln
cp
s
214.44 338.04 mo
214.44 346.98 ln
223.38 346.98 ln
223.38 338.04 ln
214.44 338.04 ln
ef
214.44 338.04 mo
214.44 346.98 ln
223.38 346.98 ln
223.38 338.04 ln
214.44 338.04 ln
cp
s
251.1 327.66 mo
251.1 336.6 ln
260.04 336.6 ln
260.04 327.66 ln
251.1 327.66 ln
ef
251.1 327.66 mo
251.1 336.6 ln
260.04 336.6 ln
260.04 327.66 ln
251.1 327.66 ln
cp
s
287.76 309.42 mo
287.76 318.36 ln
296.7 318.36 ln
296.7 309.42 ln
287.76 309.42 ln
ef
287.76 309.42 mo
287.76 318.36 ln
296.7 318.36 ln
296.7 309.42 ln
287.76 309.42 ln
cp
s
324.42 294.84 mo
324.42 303.78 ln
333.36 303.78 ln
333.36 294.84 ln
324.42 294.84 ln
ef
324.42 294.84 mo
324.42 303.78 ln
333.36 303.78 ln
333.36 294.84 ln
324.42 294.84 ln
cp
s
361.081 262.62 mo
361.081 271.56 ln
370.02 271.56 ln
370.02 262.62 ln
361.081 262.62 ln
ef
361.081 262.62 mo
361.081 271.56 ln
370.02 271.56 ln
370.02 262.62 ln
361.081 262.62 ln
cp
s
397.741 249.84 mo
397.741 258.78 ln
406.68 258.78 ln
406.68 249.84 ln
397.741 249.84 ln
ef
397.741 249.84 mo
397.741 258.78 ln
406.68 258.78 ln
406.68 249.84 ln
397.741 249.84 ln
cp
s
434.4 232.8 mo
434.4 241.74 ln
443.34 241.74 ln
443.34 232.8 ln
434.4 232.8 ln
ef
434.4 232.8 mo
434.4 241.74 ln
443.34 241.74 ln
443.34 232.8 ln
434.4 232.8 ln
cp
s
471.06 218.819 mo
471.06 227.76 ln
480 227.76 ln
480 218.819 ln
471.06 218.819 ln
ef
471.06 218.819 mo
471.06 227.76 ln
480 227.76 ln
480 218.819 ln
471.06 218.819 ln
cp
s
507.78 195.72 mo
507.78 204.66 ln
516.72 204.66 ln
516.72 195.72 ln
507.78 195.72 ln
ef
507.78 195.72 mo
507.78 204.66 ln
516.72 204.66 ln
516.72 195.72 ln
507.78 195.72 ln
cp
s
544.44 178.68 mo
544.44 187.62 ln
553.38 187.62 ln
553.38 178.68 ln
544.44 178.68 ln
ef
544.44 178.68 mo
544.44 187.62 ln
553.38 187.62 ln
553.38 178.68 ln
544.44 178.68 ln
cp
s
581.1 147.06 mo
581.1 156 ln
590.041 156 ln
590.041 147.06 ln
581.1 147.06 ln
ef
581.1 147.06 mo
581.1 156 ln
590.041 156 ln
590.041 147.06 ln
581.1 147.06 ln
cp
s
617.76 121.5 mo
617.76 130.44 ln
626.701 130.44 ln
626.701 121.5 ln
617.76 121.5 ln
ef
617.76 121.5 mo
617.76 130.44 ln
626.701 130.44 ln
626.701 121.5 ln
617.76 121.5 ln
cp
s
654.42 86.8799 mo
654.42 95.8198 ln
663.36 95.8198 ln
663.36 86.8799 ln
654.42 86.8799 ln
ef
654.42 86.8799 mo
654.42 95.8198 ln
663.36 95.8198 ln
663.36 86.8799 ln
654.42 86.8799 ln
cp
s
gsave
67.2598 373.98 mo
67.2598 390.06 ln
82.1396 390.06 ln
82.1396 373.98 ln
67.2598 373.98 ln
clp
67.7402 379.38 mo
67.7402 388.32 ln
76.6797 388.32 ln
76.6797 379.38 ln
67.7402 379.38 ln
cp
s
grestore
104.4 371.46 mo
104.4 380.4 ln
113.34 380.4 ln
113.34 371.46 ln
104.4 371.46 ln
cp
141.06 361.74 mo
141.06 370.68 ln
150 370.68 ln
150 361.74 ln
141.06 361.74 ln
cp
177.72 352.62 mo
177.72 361.56 ln
186.66 361.56 ln
186.66 352.62 ln
177.72 352.62 ln
cp
214.44 344.7 mo
214.44 353.64 ln
223.38 353.64 ln
223.38 344.7 ln
214.44 344.7 ln
cp
251.1 336.18 mo
251.1 345.12 ln
260.04 345.12 ln
260.04 336.18 ln
251.1 336.18 ln
cp
287.76 327.06 mo
287.76 336 ln
296.7 336 ln
296.7 327.06 ln
287.76 327.06 ln
cp
324.42 317.34 mo
324.42 326.28 ln
333.36 326.28 ln
333.36 317.34 ln
324.42 317.34 ln
cp
361.081 305.76 mo
361.081 314.7 ln
370.02 314.7 ln
370.02 305.76 ln
361.081 305.76 ln
cp
397.741 293.04 mo
397.741 301.98 ln
406.68 301.98 ln
406.68 293.04 ln
397.741 293.04 ln
cp
434.4 280.26 mo
434.4 289.2 ln
443.34 289.2 ln
443.34 280.26 ln
434.4 280.26 ln
cp
471.06 266.28 mo
471.06 275.22 ln
480 275.22 ln
480 266.28 ln
471.06 266.28 ln
cp
507.78 240.72 mo
507.78 249.66 ln
516.72 249.66 ln
516.72 240.72 ln
507.78 240.72 ln
cp
544.44 192.06 mo
544.44 201 ln
553.38 201 ln
553.38 192.06 ln
544.44 192.06 ln
cp
581.1 158.04 mo
581.1 166.98 ln
590.041 166.98 ln
590.041 158.04 ln
581.1 158.04 ln
cp
617.76 136.14 mo
617.76 145.08 ln
626.701 145.08 ln
626.701 136.14 ln
617.76 136.14 ln
cp
s
gsave
649.02 94.2598 mo
649.02 114.06 ln
663.96 114.06 ln
663.96 94.2598 ln
649.02 94.2598 ln
clp
654.42 99.6602 mo
654.42 108.6 ln
663.36 108.6 ln
663.36 99.6602 ln
654.42 99.6602 ln
cp
s
grestore
72.2402 378.9 mo
77.2197 383.88 ln
72.2402 388.86 ln
67.2598 383.88 ln
72.2402 378.9 ln
ef
1 lj
72.2402 378.9 mo
77.2197 383.88 ln
72.2402 388.86 ln
67.2598 383.88 ln
72.2402 378.9 ln
cp
s
108.9 372.78 mo
113.88 377.76 ln
108.9 382.74 ln
103.92 377.76 ln
108.9 372.78 ln
ef
108.9 372.78 mo
113.88 377.76 ln
108.9 382.74 ln
103.92 377.76 ln
108.9 372.78 ln
cp
s
145.56 367.92 mo
150.54 372.9 ln
145.56 377.88 ln
140.58 372.9 ln
145.56 367.92 ln
ef
145.56 367.92 mo
150.54 372.9 ln
145.56 377.88 ln
140.58 372.9 ln
145.56 367.92 ln
cp
s
182.22 361.86 mo
187.2 366.84 ln
182.22 371.82 ln
177.24 366.84 ln
182.22 361.86 ln
ef
182.22 361.86 mo
187.2 366.84 ln
182.22 371.82 ln
177.24 366.84 ln
182.22 361.86 ln
cp
s
218.94 357 mo
223.92 361.98 ln
218.94 366.96 ln
213.96 361.98 ln
218.94 357 ln
ef
218.94 357 mo
223.92 361.98 ln
218.94 366.96 ln
213.96 361.98 ln
218.94 357 ln
cp
s
255.6 353.34 mo
260.58 358.32 ln
255.6 363.3 ln
250.62 358.32 ln
255.6 353.34 ln
ef
255.6 353.34 mo
260.58 358.32 ln
255.6 363.3 ln
250.62 358.32 ln
255.6 353.34 ln
cp
s
292.26 347.88 mo
297.24 352.86 ln
292.26 357.84 ln
287.28 352.86 ln
292.26 347.88 ln
ef
292.26 347.88 mo
297.24 352.86 ln
292.26 357.84 ln
287.28 352.86 ln
292.26 347.88 ln
cp
s
328.92 339.96 mo
333.9 344.94 ln
328.92 349.92 ln
323.94 344.94 ln
328.92 339.96 ln
ef
328.92 339.96 mo
333.9 344.94 ln
328.92 349.92 ln
323.94 344.94 ln
328.92 339.96 ln
cp
s
365.581 336.3 mo
370.56 341.28 ln
365.581 346.26 ln
360.6 341.28 ln
365.581 336.3 ln
ef
365.581 336.3 mo
370.56 341.28 ln
365.581 346.26 ln
360.6 341.28 ln
365.581 336.3 ln
cp
s
402.241 331.44 mo
407.22 336.42 ln
402.241 341.4 ln
397.26 336.42 ln
402.241 331.44 ln
ef
402.241 331.44 mo
407.22 336.42 ln
402.241 341.4 ln
397.26 336.42 ln
402.241 331.44 ln
cp
s
438.9 323.52 mo
443.88 328.5 ln
438.9 333.48 ln
433.92 328.5 ln
438.9 323.52 ln
ef
438.9 323.52 mo
443.88 328.5 ln
438.9 333.48 ln
433.92 328.5 ln
438.9 323.52 ln
cp
s
475.56 319.32 mo
480.541 324.3 ln
475.56 329.28 ln
470.581 324.3 ln
475.56 319.32 ln
ef
475.56 319.32 mo
480.541 324.3 ln
475.56 329.28 ln
470.581 324.3 ln
475.56 319.32 ln
cp
s
512.28 311.4 mo
517.26 316.38 ln
512.28 321.36 ln
507.3 316.38 ln
512.28 311.4 ln
ef
512.28 311.4 mo
517.26 316.38 ln
512.28 321.36 ln
507.3 316.38 ln
512.28 311.4 ln
cp
s
548.94 301.68 mo
553.92 306.66 ln
548.94 311.64 ln
543.96 306.66 ln
548.94 301.68 ln
ef
548.94 301.68 mo
553.92 306.66 ln
548.94 311.64 ln
543.96 306.66 ln
548.94 301.68 ln
cp
s
585.6 298.02 mo
590.581 303 ln
585.6 307.98 ln
580.621 303 ln
585.6 298.02 ln
ef
585.6 298.02 mo
590.581 303 ln
585.6 307.98 ln
580.621 303 ln
585.6 298.02 ln
cp
s
622.26 292.56 mo
627.241 297.54 ln
622.26 302.52 ln
617.281 297.54 ln
622.26 292.56 ln
ef
622.26 292.56 mo
627.241 297.54 ln
622.26 302.52 ln
617.281 297.54 ln
622.26 292.56 ln
cp
s
658.92 286.44 mo
663.9 291.42 ln
658.92 296.4 ln
653.94 291.42 ln
658.92 286.44 ln
ef
658.92 286.44 mo
663.9 291.42 ln
658.92 296.4 ln
653.94 291.42 ln
658.92 286.44 ln
cp
s
gsave
67.2598 378.36 mo
67.2598 389.46 ln
77.8203 389.46 ln
77.8203 378.36 ln
67.2598 378.36 ln
clp
72.2402 378.9 mo
77.2197 383.88 ln
72.2402 388.86 ln
67.2598 383.88 ln
72.2402 378.9 ln
cp
s
grestore
108.9 375.24 mo
113.88 380.22 ln
108.9 385.2 ln
103.92 380.22 ln
108.9 375.24 ln
cp
145.56 370.98 mo
150.54 375.96 ln
145.56 380.94 ln
140.58 375.96 ln
145.56 370.98 ln
cp
182.22 367.92 mo
187.2 372.9 ln
182.22 377.88 ln
177.24 372.9 ln
182.22 367.92 ln
cp
218.94 361.26 mo
223.92 366.24 ln
218.94 371.22 ln
213.96 366.24 ln
218.94 361.26 ln
cp
255.6 358.2 mo
260.58 363.18 ln
255.6 368.16 ln
250.62 363.18 ln
255.6 358.2 ln
cp
292.26 352.74 mo
297.24 357.72 ln
292.26 362.7 ln
287.28 357.72 ln
292.26 352.74 ln
cp
328.92 347.28 mo
333.9 352.26 ln
328.92 357.24 ln
323.94 352.26 ln
328.92 347.28 ln
cp
365.581 341.16 mo
370.56 346.14 ln
365.581 351.12 ln
360.6 346.14 ln
365.581 341.16 ln
cp
402.241 336.3 mo
407.22 341.28 ln
402.241 346.26 ln
397.26 341.28 ln
402.241 336.3 ln
cp
438.9 330.24 mo
443.88 335.22 ln
438.9 340.2 ln
433.92 335.22 ln
438.9 330.24 ln
cp
475.56 324.18 mo
480.541 329.16 ln
475.56 334.14 ln
470.581 329.16 ln
475.56 324.18 ln
cp
512.28 316.26 mo
517.26 321.24 ln
512.28 326.22 ln
507.3 321.24 ln
512.28 316.26 ln
cp
548.94 308.94 mo
553.92 313.92 ln
548.94 318.9 ln
543.96 313.92 ln
548.94 308.94 ln
cp
585.6 301.02 mo
590.581 306 ln
585.6 310.98 ln
580.621 306 ln
585.6 301.02 ln
cp
622.26 296.16 mo
627.241 301.14 ln
622.26 306.12 ln
617.281 301.14 ln
622.26 296.16 ln
cp
s
gsave
653.4 290.16 mo
653.4 301.26 ln
663.96 301.26 ln
663.96 290.16 ln
653.4 290.16 ln
clp
658.92 290.7 mo
663.9 295.68 ln
658.92 300.66 ln
653.94 295.68 ln
658.92 290.7 ln
cp
s
grestore
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8398 391.86 mov
(0) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8398 331.081 mov
(1) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
50{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8398 270.241 mov
(2) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8398 209.462 mov
(3) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8398 148.623 mov
(4) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f72e955f0050b5472
6b68794743aa9e2640fbbbe965e5c7462a0da2fe3396d6994552b6fd7b9f
c3a7f776be319813ddb449d1a761c2a25379bcdbddb59583b40898699b48
1611e523f8146fbaea058eb8237d1f8ef6c080ecb39f96cb6c0db3e3c586
248bc7c61f659dbd2f8aadac81a2448e7137d524> ND 
end end
end
/ArialMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8403 87.8438 mov
(5) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
45.8403 27.0049 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
66.7188 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
134.455 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
145.563 414.305 mov
(6) sh
/ArialMT*4 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
207.804 414.305 mov
(3) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
218.902 414.305 mov
(2) sh
/ArialMT*5 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
281.143 414.305 mov
(4) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
292.24 414.305 mov
(8) sh
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
354.481 414.305 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*5 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
365.58 414.305 mov
(4) sh
/ArialMT*8 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
427.82 414.305 mov
(8) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
438.917 414.305 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52805a666
172babb1d73a09fb0432847d9265c3c057d0112d971ed0197edf6801f0cc
d27a4300d973d4627332ff0ca814c0ce250c35754139515ccbb98571061c
85e232c5d2724d28cade69abed806808a329f904488eec02d4bf36c25046
f7a1306ac101498c67190cf8a8e43a1298791a833df5d0225170130cde4e
6dbabf7a8e794c3de6dcec3e9a0c2449b47003a2eed622096fc30cf785b4
a1aacc0e4ca1048fbda9f51c6b8cea845ce656cef8e1da09ee2450f7b737
e0b1217086fc607fb5d514dedd6adb> ND 
end end
end
/ArialMT findfont /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
57{/.notdef}repeat /nine 198{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
501.158 414.305 mov
(9) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
513.584 414.305 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
557.833 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
568.941 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
580.05 414.305 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
631.143 414.305 mov
(1) sh
restore_ctm
save_ctm
/ArialMT*3 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
642.252 414.305 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
653.361 414.305 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cfff7245123ea6b2
d3214893f78b8e97a902c5375a62b28f195ef7bcf7433d165aabe00f6ab5
df5c1416686a683684fa8149e3bf05c7b6218afab10e5daaa2762eacaf31
125a4410c16cee824d27ee8e4170fe84de9bb1d3f9bb831995b6> ND 
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 80 /P put
dup 101 /e put
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
80{/.notdef}repeat /P 20{/.notdef}repeat /e 5{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
366.899 442.984 mov
(Peek) sh
restore_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/E 
<10bf317028198094ce8cd275e305c79a7a258ddd928bd9dc896c51a549b4
869242612fc9caa06c2483d03d9996ef> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 69 /E put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 27{/.notdef}repeat /E 29{/.notdef}repeat 
/c /d 4{/.notdef}repeat /i 3{/.notdef}repeat /m /n /o 
3{/.notdef}repeat /s /t /u 2{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 314.88 mov
(Ex) sh
/ArialMT*10 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 291.563 mov
(e) sh
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 280.451 mov
(cution tim) sh
/ArialMT*10 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 194.951 mov
(e) sh
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 183.839 mov
( \(s) sh
/ArialMT*10 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 161.645 mov
(e) sh
/ArialMT*11 findfont [0 -19.98 -19.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
33.2402 150.533 mov
(conds\)) sh
365.941 20.46 mo
365.941 203.4 ln
72.0596 203.399 ln
72.0601 20.46 ln
365.941 20.46 ln
0 0 0 0 cmyk
f
0.0599976 lw
72.0005 20.3994 mo
72 203.399 ln
365.941 203.4 ln
365.941 20.3994 ln
72.0005 20.3994 ln
cp
0 0 0 1 cmyk
s
0.960007 lw
89.1606 44.3994 mo
114.18 44.3994 ln
s
97.1401 39.8994 mo
97.1401 48.8398 ln
106.08 48.8398 ln
106.08 39.8994 ln
97.1401 39.8994 ln
ef
0 lj
97.1401 39.8994 mo
97.1401 48.8398 ln
106.08 48.8398 ln
106.08 39.8994 ln
97.1401 39.8994 ln
cp
s
save_ctm
restore_ctm
1 lj
89.1602 90.1201 mo
114.18 90.1201 ln
s
0 lj
97.1396 85.6201 mo
97.1396 94.5596 ln
106.08 94.5596 ln
106.08 85.6201 ln
97.1396 85.6201 ln
cp
s
save_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
118.86 51.0596 mov
(co) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd416a4f286324
3708bb18c93b6ff9009987165c661f3cf3b3d4268ae53d21376706d87451
5a09c8e0501f41699e842e2b1499d14714dfea5e38b494c7b6527dbf4887
431b1f716378> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
/y 
<10bf317069b1fd7143194d5a8e15b6f90ac84d61c2210d0bc6dd6d1fb8ca
8bb9fc3e481d183ae50bbfabb21fc2a3f1f6595151c5a2f4acc8d226e0ff
0b4c85bc46ca5265bff351a7f03e78e04c2c72a9d7a9ee7a636db5f99d04
3f9d21fc223e35d9c765eb6b3d5d297173ba8b09f049b0d68aa85f244d1b
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
dup 102 /f put
dup 104 /h put
dup 112 /p put
dup 121 /y put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
45{/.notdef}repeat /hyphen 56{/.notdef}repeat /f /.notdef /h 7{/.notdef}repeat /p 
8{/.notdef}repeat /y 134{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
139.962 51.0596 mov
(py-) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
167.718 51.0596 mov
(s) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
177.708 51.0596 mov
(h) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
188.82 51.0596 mov
(i) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
193.259 51.0596 mov
(f) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
198.81 51.0596 mov
(t) sh
restore_ctm
1 lj
89.1602 135.84 mo
114.18 135.84 ln
s
101.64 130.859 mo
106.62 135.84 ln
101.64 140.819 ln
96.6602 135.84 ln
101.64 130.859 ln
ef
101.64 130.859 mo
106.62 135.84 ln
101.64 140.819 ln
96.6602 135.84 ln
101.64 130.859 ln
cp
s
save_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
118.86 96.7793 mov
(co) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
139.962 96.7793 mov
(py-) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
167.718 96.7793 mov
(s) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
177.708 96.7793 mov
(h) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
188.82 96.7793 mov
(i) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
193.259 96.7793 mov
(f) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
198.81 96.7793 mov
(t ) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
dup 97 /a put
dup 108 /l put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
43{/.notdef}repeat /plus 53{/.notdef}repeat /a 10{/.notdef}repeat /l 5{/.notdef}repeat /r 
141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
209.912 96.7793 mov
(+) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
221.58 96.7793 mov
( sc) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
247.111 96.7793 mov
(alar) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
280.427 96.7793 mov
( ) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
285.978 96.7793 mov
(r) sh
/ArialMT*10 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
292.632 96.7793 mov
(e) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
303.744 96.7793 mov
(p) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
314.856 96.7793 mov
(la) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
330.406 96.7793 mov
(c) sh
/ArialMT*10 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
340.396 96.7793 mov
(e) sh
restore_ctm
89.1602 181.56 mo
114.18 181.56 ln
101.64 176.58 mo
106.62 181.56 ln
101.64 186.54 ln
96.6602 181.56 ln
101.64 176.58 ln
cp
s
save_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
118.86 142.5 mov
(modu) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
168.84 142.5 mov
(la) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
184.39 142.5 mov
(tion) sh
restore_ctm
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
118.86 188.22 mov
(co) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
139.962 188.22 mov
(py-) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
167.718 188.22 mov
(s) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
177.708 188.22 mov
(h) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
188.82 188.22 mov
(i) sh
/ArialMT*12 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
193.259 188.22 mov
(f) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
198.81 188.22 mov
(t ) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
209.912 188.22 mov
(+) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
221.58 188.22 mov
( sc) sh
/ArialMT*13 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
247.111 188.22 mov
(al) sh
/ArialMT*11 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
262.662 188.22 mov
(in) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [19.98 0 0 -19.98 0 0 ]mfnt sfnt
BuildWidthShowArray
278.213 188.22 mov
(g) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (i2-buf.eps)
%%CreationDate: 4/19/2005 12:58 AM
%AI9_DataStream
%Gb!$,>E^#HOm_fr@fAa0."^/9!4qUSgaA8Z]X10U/WSEQdLHJ;Bl[VA1'TFsBSZWbaY1!#\cDAa_d,fDfO>Ysl^F+5bc^d,X%2KF
%e`D2Op<ia"#Lu?_<@OaofD*LBp?^X;?iAUSqegc5WZLK'DU9($6g`^^BLRX%:n]f2q9=5/Zg:`)kF;.GgMS+:([K?>61t$OFB*`J
%I7nLUeXsFl@f96uBJH(VXmGZHHF9NV%la+Eik(->c&8(Wlc$NKr-/TQp\JJh;a74`BaNO3=$=3$^[>D[\p)ss^O#\)<ODb*7d'e2
%BX<&8]mdS]?=1C,mHR:Q[GtOU?.*npSYpXCGeBr4`Q`S8RI8Xq38c@tBA4p<Lo1!:U"A&".1UsLBR!AkK>r92m<m<0]A>*:]?6,0
%d`CEsf[AablmTpNVlSM1k-B>/;"$#^nQUGU?La'mh/5`(&DVNRO2(S@n&dG6:t>J.<S`0#IJ7p1gR><IJ,("b#mrHVMsbm@05*Hd
%$LIkgDn7mVS&J,<<;!Al\GNk#4[6PJc'E^%SkAuT'D)6m>`o"E;YYb!m'q_SY"WD<T'+G7_&QVspq!bk?L-60*DM(ah<.3.N#1=@
%H845u9GLa#Z)`i8oP[T%:$Ho4):,("'j;VbojlLaRs.([W1H3h!+%edp=ji'%l_*:o7,+9=rXK7?*+&)B$kIE=Ns,;10c>8^KY&g
%$TYrRrS,:*#?nuss,AT_VOP'N%MZ7Z!U(V)9qC/>rapF>IG\nMBu'GmZg2LOZ2SZJm`5sp6LAb<cI/r)p6CqBUQ$`UVF+!d@K:LG
%!sb@:F2GV'S,(h7l@H$qiU_GCh/0mpAim"<W%mr8bO9-#dQDFp]_]lbIbEb#crD=jn:ntXnR%dbMu+\Hm<7;8,6!eVjl?"HB*7`"
%l4N"OM?mXqIN.2<5PQ8DH#k!%Pq0S@?ZnhYZ^]3o#.Z'%7n]k*S"$Q)MN5HtmS+l=X0/>g\i7RZWmuDsrA0KB<`a7O8M2Gn?-[)p
%lLO)KHB"6_&rhB*?$93hos/oXlS%+%GD,mB`HTeeB)ZlEP!DjqFW5qJZ2F-YUA;^oN:qf9[RKRBSQ(Z/.E?llgWZjF1dYRBLe%N0
%<?ham^bG[^RcDM)[K^rV[.DgiZ^JPjXYJ3a=8fIoN!V8h[^s28?2psO6VQQeI2tg[<0P:Kea:r<@QhD`Q-3pJ>e`A!S5g4`Qc%NI
%2tP#Mj/_DKi;^8Pf)=miFL/*\T4_6UjONSlDR"ZhIb.-p/aKRqpmgg(M;)C^H(%p*;hnh"ifU[DD?/MZ*VBDG(>\9Cm]*ku]<@-b
%e.4bpp`q$OU7,CpVOi!8p><IUjf5kYl=]GKpO!a'%8EFP]$+6fDY%bWM!J[r9E=PM3a0I<>7h\:a*Y;ThcTCYW&nFX5S6rpSIf8Q
%B88L(TOu[+<Hh#>FOjIlU)*bSBVClLs(QpRYkV9WJ($!Xh9kRB(]qU]G<^;XZ[;_P?I)[b92'D#G/&A0N%%t*IeV*,Q*(AW)V!17
%=5?[(;k/uL>rC&PWlq_q)J()t70K8ub>7M22$<Z<OJ1ORP=TJG]b8FjBD>KU</qYK9g,!ko$OU\D87YrbP+'e+J*meZ=#i1,5.!?
%*=p0\1bLUO;X.q1<S>rt<H+3LM2=eq>gbudmZ#fi0!nU\e^.@P>1obk2+5;5j>3nJPOR^H`C=R]fj_Y^AH2[e5^tRs/<6CR*^WL]
%9iD'l9u,6_:ni[%)4-(%(97a6=?H3tGGC.]%5t>)R,h6MLK>?329DCSLHr1mC7qXTE,m0'h`9Ct!5paU@qe@K)RIl#2/1Q"-TpG:
%Tua-'F5V01LbQXH&koM=!LaWLb$J_)LXr4Fgp0cH)o)hMUKU@Pp5>55B-@_AU6d'kF&@l*p.B<Q]jJ^bMgbi%E9?$t;b0P@?1T\I
%BF(+F=ViBs?M#i<5+AM^B2`mjhI&*mD&>IY&W&3tBRU$%N9?qO.92[%1JnY4>:5:Sd?CTpfb,/1NC!had[M3f1<>Z$7XdcpCP[)K
%fh(@H6mp86joB7LYEo1Z+>QG8Bc/9L;3h_lL#iqj)RA?h>TKq.&.4S_<WuYU(60b=O`24-eQ?QQ#]+4j<k&Epmg3DAE"%%se'(G8
%7n]U7O<SQ;&_B`'9as8QPo*7!gFNGGrsTUD_:.X&P7,#0n-2[qTGtjGXBZ\s)Fo\cQ8ZNBR>mNqBOXURZ].),oKlCWH^2qpH79k#
%d8\V_a-@=&[A1:!'59:eZdMIuCs?H<^s1"X:4ja&<lAI<VlA[AB)V-]!UnMMQH)o*Q37-+$V$=D$f6UU8?p\J3)<5=3=^RL=X#ip
%.g>(2jTl,WFI(i7(ALG`6_,fK6pTY/#R'Dmik\cMmf<080M3f%75[LWY3E)ne46<'Le2D%Ud_@g&I/oh6XX"#2/fNA&BdgKK2p=`
%C>Q3=ZiV@$\,bKX2'gQh$TdY*1dDMM#.B]mZbkB9[C-,.j]G4IdmU3hUo[]]Ggir`oq;tFU\u[$mirG?9LML1$FZ%Jp`gtt(o._=
%1b0$qLoSOFF#jXt!\pB]4:k"GaaR^(U54SLXn.D'VP"@P;hceNK=6hB1,bfa_/2#h00YB.64pC,M_(PQpm'AR-(SXu!PDfQ&3<u#
%?4fb];(,<^<3)FP@B\<**>tCOm>k9X)D]/>_%nkP0+$X<(=7@n*#.V`(]!hj!JAT-F1,DB1D'hn>'Mf)C?!J@FVHF/e=)HJ3Pg?Z
%C0N_2,I#cDBpljVQIQJNRjcG-.ZKt+p#(%I9=e\RJ[_")@L+-9!`sKf^FcsZJB<s\A/ihsiRmrTfZ6LoAsTU0LUY^TK#VNHKQ^bG
%L9Nn@=uJfsRuYD5I#O'$o[r@O2F7DbWVM9UJX$>4l2N;\dMc5_0stD!b;?C.4$9bP7Eb;6Q%<X\:a_5N90-1(c:#sPBV8Zm`>m;F
%=_WNA#Z)(<`7as#KmZanKc&Z14X!Rj?mBOA16i_H:^re,T3*sPJc5-Q3%Wc8E=NBYQ%O6l=Bc8/,9S!h,O(j,f*1e5K@<gp&h9V&
%&h:F7:XRB_A=c@(B-GX;ILSV)"S%53*AF:N"<WgZO:$k&6./c-KX3eWa]MplF:,p%=Ce@FR8;9l-j-nb@3S#/];pD1o70^iqmi"j
%:k9Ln"/kOEg9JS**P!g-'6V*PMP)VJ%ms\")l(PbSU)CC?8*\PGq&-rCh&egA=\X&h5`X"$A:!3\3ej.$>no4^)!jO2ZsgEg1V$]
%<O;\a_!hX,nC4l][a=Rg4$"l*E$@Qm3n$8\%VuO2'.g"MOHM"%75/dU#R'[6XV1W9=a2SfZR^o!MejNkN^X!UNds]c:t^XYG9W.$
%iW5(I/Yb,N!a$Ka.YrrtXC32?I&.EP1i,3f2H,R-/G<M>I>dm`V^rTPE!&X0?38e@#T#/qZqLIgeL<c:B8$C%&=ig-0*qWgB-"<b
%72sj$SI*)B!`2Pj">i-d:ETXe6iaGm7GE@f$fDa2fV%?;kFO_S:TED&#<3Xj"p+fF^La7Yi&jE]&V>O#)`AcQW'./@!R;Rb"R1#D
%HZPkmF+MVI"I9,6;`Hs6;%%7OPM>SGN0Rcc[0WhaLp/XO&m!r*YWn-A/3p:o=:'^s7::\_f(-aC_9.@Be\ZW_^Ia_AHP-;[Vg)p[
%HblFhJraT!"*8u&EPBN<<C#UnnERZ<_P"2D8oX>2p37g6UCC@F(aFV71<BmoH7c'$ikU-X=_blsO7EWu)%%k7K#G!N=GK*,>a8'0
%G$o0;j_M:_'EkCE\hG]]N'*L\=tX8=L.,+e]blo`N<W#U@$u\Gk_poVB7o0>J/+`83pNU]>fE)!ae6o0"s"@,TJ-]C1nk]tM@]qA
%FuCbg5p`Ufbn+!><^[*U"hIrT5Y/3![+A*HPp7AM!#K$^!IIq8UskN_P$LR^OVSAW'\"O6-Y\0dL"rH9'86i-[Um'N3^<^a_/3m#
%<f\9E9?(bfY$dp:DW.mpe'Lt&pIr172Eq=+3,V^4E(HA:iO*.MN]MkB@#D(*?k>P>[&]np2bXf)L96$P,l.mKZefX!On#NIna%4B
%qfUKe8VcdlF8uXu4IkMuUI;0#.]?b`8-h^rI7H"^A==__M`V!B@=p7p+C='\*$BL\YaPb!#N7sCZVaG4H8SD'!Fd^VVP.)@`=shV
%TK;d#e6+loU9a,sAD-)gl[7-_/S"n#+%-:WAPH-Q@MNl@1r0N/0As<nRugWd02GZ-A8k6/BYs%Igt0A[_95dhk<X4XJas)Ii&ne2
%lZk'4US?qZgab-L&3^Y]]kVeLl&HreB,5PXQiNY!dG2[a:oGUDKq+]5(a3Nq[NGS\&_,b[HUL.=.ab>,4[>,HLKMJn$__MO1=9Pe
%_@5G(mn1kq:/X&99XKuH<*0lDqXc,`V\1N%&4Js+YfVM$s$G!(1([8E=A?)d24Q@n;g=f5mRASP[>aCD0JTIK3nY-tT&UY6i4m'$
%^5^n\"Cla:<Nqn>+L"uo5qj3h38QSk.XPdOA46%,2Xqd+DR,3'$>,#*a12r&(:k-?'RVJ^GT-,Q;@)(6M*FRi]S)jZ$-n-QM:F<u
%nP"rP+37,P-9m3afS!sm'B)brJ*UW[)"net]!*b%)a`/2SMu/@XlZf,Pn",+\eXZKDk5Ks9_)Lu@t[Y["3*H"Ob;[DYhGtKRL<nc
%F`2N-^lgg7NgR,5C^(LuYR?]_-4mi0Ik>_/'?ro>k>2=Yo0a&^MUIFW$'WW@ne@9%7;!NYU,=,dI<7uqh?7Os)nd>rpO:cYr=Ju9
%HU"6q(,K'o(@I3\D55;VhMJt#jeR=\S[@aGW<)_7Aeb[#XV&^=&KdDC6gopE;mAVcoFc+n)k\TKX/d[BEcO;:h$kZSm+W"V<f[;E
%5Hr,B!MjDfphA^DJUae65=ICC4B+t`Vh"R36:2t3QRN_j0PoVq4r>AKeKUKuidGdoX;.=8TQ%C,Ob7P3\V"#^Ya,?$H#4E%Ci>5r
%$#K_NQ,J4cr3=Yk@U36<XCsA*D(WiH_VSJIP`t86-4J*@iXshBp]X+\1k:3gUigXBi#1??7PkB_Io^kCq_5h0$K@n"`(n6,8ja:/
%rAsCrV#JGP%/Ik4l?%3Z3LCVe>2eWF_mQ4beY%6C2QXAkp8\Oo^^!DI(U46(KuGQNje*jLV]&F=fR6])FH8=5C]k_'p`>2Fi+<_[
%bs^2%L7_mdk%n!7JlKQ4D8b7nr1ulqe4N:XP+AS2;@%PE5HgG3K98W%"mj<#59k-fM-)^R+JUTWNH4M()P>7sm):p:8u<fBY]UNb
%-7VY?P:[a$D2?3=*-<bbBRW8O_UHGoC\CXn=b826(KKi9X"t_[ZtpakV)j?>TQ>/SULmZIrXkj?#0I=J5&?+lfqhZVTkQb0L\\Z_
%Z2n98p-lmW&-3<b>-g;W2$0%+,`l*%`04fkfg?Nt4uc$M5\aDnpE>qqm$biYQ([(eiT!*kZTl;D0uX5VqcQ$H=Mqm)Q9GckH8-Ps
%#'NWrdG*l1e%hcF/QbmF&1r[=#:BtnV'^g+Aec:&.R"$r\EFhCNpt</+VDiEM9a76!E0dmUP`ZPBCclk(<rF;>"'.]g9OidZ,2Nn
%g8?WHg@Qa(pQ<',$9Ms0*52ReUf.juZ;Fa>&7(O9M,4N\4b=AEHe@:j/@ubhN%77-Z3a7`dq8P`p_M@p)rpW-at:IZ?IWa:7Dl<D
%<gFk6B+c/8@h#dG.gEqYJqWW'MkAA%*#)lo`!jk0F`\OKG.\^P9?[tdSXBTp#0(W*_(*DNU<5r)_\i`G"UeffF#oa'%"`Up$NcK1
%LggY+bQ\u;m6k`ZZe&Rs*!U_+*<X!n]d3;"=:Q"kEk#.iN($FMUut15/urHhi4/>X4O(L=+9'on9Dui1gU\X:!UZUp6]BX)*:JOQ
%L'SVq1ahX]I@@7:.Y5$D1UL;;2[h$f2M`s)3&*=C@,a/_kpHjrrD5a/n-PT4*`)q8[d;XSG8VJAU)GUF\h%e3*dt;bT]X%;4>^&[
%mla#h"kljFWh28B)(GkP!.813/S+!&La_9X_"<&=R=6achlo9E3n>i`R!rh2^]:9?+E4D)"rh",_)b%nb\F#(Pl`ft2B_POT_DH0
%(a7NoSWSg'+-7+ci*]dIB1htc^]tXMXX0hb\+Bt4FJQ['()ogNE<pNhB$\c&bYbH\'_jO)f$@@P;[IJ.N<D1J/SdWkaEeO:Z,kl]
%lpJg+8?E;,!L'knbG%s+$AF,&FAX>tI#jH-$XbeWnH.B5Q381\>8KVq+$,hu_?o1D"t/Rn\a2R;SLY@:[&S=Oknl668/MP'$T5iH
%BUAo:LX9jpKX,&!6t[]s@@l1B_c'r*4)db0jr[7<#I4ouejUpTGJs2#R&lXm,3GaPb?NH,R.qdfN9D\JpllEIa,%kJ:G&>SSG!V8
%k/`ah=P$kO!SS4HD.*0fd2=5;D7`kcl;WFF"/LL6%=.6X&]_F)cEgVakEX69/(j4Jc[lh2AnSPr0qb4</cr-A^tq]%*#pJP6,j*d
%Ta7q15RAt?#,Wq+5(H;?jfks**/2_)'HZ=j;4FFo+#fQfhH3X2!,0MQhXRLGC,GZ.b\Jmq0uDlt*C7P05N-E5?)3Q"@RaUWi]:Oa
%]S3tqnOX`?Yp,.9XS6e7>Wc8Qc6HkLe=Zr`cOg&^.d[n@Z(_N3+7^^C6\c%Q-l!.P;lhX*Ll+Npl%KC)2%P@r">aHQECbu,MZglE
%P[.uAAj?\sTEXN9eU7(5_@)0Kq!*._&9W)N)ck3R3\ZPSD"R9Xg:p%O8$0"fOc"*8d"em!)B`QB6:kT4iAN;56%YRThr_Z2<?oe-
%+Y\in_Zn`6`F&np/g3E73^c-X&Vun$r.&iR>U;u(7?X&U`<g[QA?(ZQbR*Ijgb=:2Ql9c`-+4,O3oi7*l[6)c7DN)*;+i%5KDpC[
%"32Ii+=)j^V;kK?)ChY77CBan`)Qs)lhClcP'PXG7$<6RD<V_DdS\3iH@28=6+"Rq;)IXd2=0!!0TE;GAq[8HeIp+-MMU3l_[I;&
%p5#BEB%OHS0Q7A<S6&fN-dYD%%3(#J8"a*EK#fBTUi)B*;A9--<+P+7`+6;;7k=WUX:p=C:'Hl[UP@QE;P8$(TGc8f88"Y7?*aqC
%&8[.(Y=Yaf02!0bT>[OcrQIf%1AMK9B(@:p'oOAMQU_lqN%[j(]6,0k_="(U,`T)q-h83gMg/"^3"sLWd/P<Plc=Zc;^CT37#Pck
%-\_*NTq&YSAYZ-Mb>Om/X$16hUEj&s'C1lLTnC\U#$Nbj5lo>V@_)TIFUhZm*Fct1D50d[JI"MfTcMsrR@LYF,oWYj861o=apAhS
%UkRj9M,,!#7A6GP'TD*WEY1+D;W[8Z3[m1a(Jb"i.(SAKag_lmQQ<*a[R167BZ>nTP!)L7HQ]ac"$o/UU*XiO/X.'50[pc5C)J^&
%H>&1fOW7%/iC"&>bVLN5K+1Yl^a.cUE^#9r3IR$mSJ)WK;9U3/QMk`0'_!qFL;MhK9<O`tIL6S(N5CIeNDg!)UBluZ=N*uoR\O<n
%X(MYY>Vb5&:cVFPdUiRMAZ8EAnk"*#jN_Q]DOMCr@\+U8%U)&Ci93#hl2nL?YD+Wq*>E@2/]!bY9,qgSk2!Fi25)]i!=/MATU]5$
%5/>0\cc3XDR^,_NK12M7iOE`HP]BZp"JYG/75lq@GUtsb<;<gi`sJkjjR>n4-l&Q9%m?/q$DY]#r4S;6c>Sco:h90S'&)dN8:(0g
%6m#!N-6to9DAMp`D`n@E8"8,pQpo8.=;R0_"mKIG^^.$:b8'M>2PQ6j@amB,6K8b^E@NdbP41b1NWjKk^toC-)uHg,/Gm+cLqXuF
%D8a+AJmo>9@;!RW!BD!uGX4qL^TgaX.[ZEQa(2Kl-cR>#QGj0%g;c`mbK^+58$c[X.7pp<6%<hW!H`?*8-O*W\.DX)TK"sl""j^$
%?4%qn`\$"PnI!<&,R5iq[TRRi=9eOSVZXbVXcS;sP:5D2o<-'nDL/[(,ME,h_>5D,+[5?t/HSAVL=J"]]4LF^BBUedf[D#+Nl6G_
%-[>lP77>%f&Ug%W-d#i$0jQ.FFms>XX3A3meq^KP>$PXS]r:)1CBf[u-9?ag#`8>D%9!cM,=?6D5jglHJgM?)$n.1d.4<5iS-TdK
%l4f#=i!"`!CaHeXP;I2QIclN/bbU6,&"cG:/V,.$F3O@IbbtUKOHU#T&KF'WLPYq1c;,)H_[62[:"P42ECqW,R7kiZ-fWgpf)g:;
%8Wu"E:*BY-8/d>T$b.cPLOd#A$Gt:,00OD?kka"h"P'YHP#Sd]/^YCS"5VPH/4Z%Ip/1-L+1s(_>q>=lS/g0?o.p]?$+i)-;]>A=
%7jS8VP6ocYS0hU\E+@O/8b%-i8`NP+=,Z[.Et]Rp1GO^t!nTn;]mPGblkd3>%Hf4XSE"6=>=-OJ7HfC>(#:7\M)UO`9_c#W<Y6"I
%37t<7f](@FXNe]P+I&h^0^fU?KG--+JrF(sGaPuHrZKV/8"W&ab_08ANMKM-3e"Xb`j"H-0?7Gp7+HfTo#t,REQ1;Qb(-#<jQ2"M
%3-a'`Ci`D]BO[\@6fP^=M0RAoF9F*+?pFb`R[p#n7u(2hBIr0L*0:bLi5K(tC2Drsk/]^3S?%oK.[0hPS5k>`"=U'`38&a-r[E(e
%XQ7!]UcUQX?,7_YM?M4Qiq$\`$$QB!AB$5>N)Of%&pZ<n,Y^d;VO45C48*c<`p'uNHj5H+Tc/@c-fM"lQrBOLL;>POSru"P70q3^
%a]QoH`9tDY^q\?=c7oSb1+gIOCUb46f`/(r:'j\cp(I&YCj=og:dSXF]-mY5&ZSA`T>8!tU,;Wr/qi<N%3`p]etgO9L0_a%U0:-Z
%;%Z`Zpjj-CR?M:E)8TjM/(F4*QsHkl/-bVM6[t3DnXBHb01s?1Bo3NO4-k[W,"^BrToijc+Y>]lP/NT+<_)^`n0ftRNFHK\QS^e<
%,c3.;efr?F>HfYmZsfn%i6="o5CjCfKfa,:;nOZ"R<@r3W$TWYMel"B;iADqNX=U&I(s)L]aFUf9%XCe.@KecI6\pI<Ai/BE.123
%1&D8J:^aiZe!q*3X\Q#;q9OuCKi_Ll#rpu`77::qEi$]]mkgPI"md&A9;$&Hc`?0rSmonX/72lG%EC57@1r4QJltk$?;4?i9lp6k
%K]38F<6(b2oP)$pE9t_G;:9N'?L<m`7Z$qWdKBgq8T6J7o#7ruk_&+3S5]115k.3#f$R\3di06h?,b\8Js54n6V^pD+dIMX495El
%O![Qs.&tfFMX&#_c1Lfr#bB.46i8)Q]CK0m=PS_]&e$r<#H6!Ua`gf!0Wc;Vbp2QiDJT&WT[%oCjSB-6Hn;!lL34_!R#:f'nfoEM
%-rul?1KUM83p,WSIEYL^gN>*EQqtR@j0Te&*6"L$YcVMaG19(HI+2d--_>C?Js'ZdO]"3]B>glVj"3IJWFKAV8_@8V<Z4OrM`>hj
%,8#<:p_Eo_4W2o:"D5Veh"=3".dYt@_:N(BkiR\fJ^&8TaaD/oU]9>E./?IL!Yq0p[2ZVZi_FnqKr2*c.DRTVXSF?@_renF\Q*D%
%<%l)>pre@'.q$H4ZgP&i`R:]-lIXn#T;oDDlM%6'M%'<N/T;s\i7jsZ*-K0%W,_+r9q!\`oT-3]rHHc9<STQW,8,9Y:Li@rB;C3S
%(lU]Eel:EaF]59/i`$#tSrD]9D8g?j0:dE'\;d#+T6])2!KPYdFYZH;1kXTa7V\I)ft9Yi^gpY>5]eu$C772oUUflBPWe:9fMgh[
%c)5I,EkcIJ[c5<+>E`^KZ'ud#jst>>]!Y%d*:=RlDB-:9_8#X/05^nARj!<,S=%P_UU,cI3,XX-_$<"Y3&-b^_e8$a6%Z!I#sIY+
%@Y$^QLW;^P@G)?921s_h7%Y"DkC_p$UjUEBYXiFDgcG,OB?f>,h7?4_HZ#DNq8>L$-FS5VVP+rLe'oi-ac%nUp0A3R#1TC0WFNp[
%k&^$R%djdnjYMe@.DF<K&t(hm_6X?<kI.AAUN?Lk$Yco!^%g58j7/3%>^Y:o"CmI=JUpYPe;MsZj%Pml1sI^2poH9\nkY:=1";,8
%"LUt;^-07C8E@U9I+$oLI\AB+A+(,a_-fd'G/seORV$%-:kE.eo!fJG/S%<e1B)?,JpdJUfFQ"<1'*J5NsH%4<O+p4_E%#g2A.eE
%LQ)8i8%N,7jgZDX4(S7"9u[f8&i803is7t@aO$eZas[,%V'F8.7%DI^7(O28f-0A.ff^h0=)qBtp%g^U7u&VGTSgsm<I)>!?V!]U
%j)oGsTfu9OI^@mR>C+'JWn'u&DPlk`;Ae]Y`TucsS%Mn*8W/_bbL]YD/JdsDm<hPG]UZ]agMPr&hG7bTc0T'<B$pQ>\aDAfX7a_\
%]"4EEQq]O*e`?,BI)0;G\i77CZR9_CaOmGan[Q6"^V/@_.Cj0h+g550;!i-eTU9W#-Jah,]D:HlS*W&^bAK>rr/Cp8*_\&SfA5M.
%]j#U5m2X^VjA2-6DF6MB<g,,O%+hK3M;6cCHOolAjRm-`[r1kb]&Ckk8SUK+KkGDLc/kF43FC1-^]?GuXP_<9e&?(8Rp<YA^?Sa_
%%H!CA*A8e`kmYbhaQ7p'Mjl<k]\-&'5HVCR"LRuN1YH&N\h=#Oc>Ig]A9e9bGf"Ti\8mX#Rrt'nJkg$Uor@IH$X-<7Z^V-%W+kbl
%ml/])og/+_\p,H@`6'[;<[J=p%<0:ZbkSD%c%cAXLO&V)Z%:$7-^2Sj$'QalII`%Qj$(5Pqifh(WO-t$;`lYc4O%`7m&h\Mk6Yji
%B@>b,FEgi.GU@3PQMW7P(;'D8ir.rkFoe-.+`6EJl23orq1mbk:\+)9C:td,kr)2Of[l&KA1A6gdse/_n#8uDc%A\-*7Jd\9Ao$0
%HRGS4I:jIubPgSOC+cXN`>%q!VB^&]AAY`2?`,c`M[o(*,knp@^RLubJ8lf>De,`7^%L1A54@V+Ne-^a<M/*ZGTq?U]&165f\S0k
%#M&8LOiluB'/+]/]h3KEk,Tt=:/YB3QVsoHMuPe1r$h6SMp4t?_70@4AYD6]/"5icJU#47oD@iu@jf%/or,Ls$f#2Qq;#fadu&WT
%&'jV!Ii5GZrQEgCKWiAmJ(3W"I!NEhEhg3lL4@@hAUg5Ek5/,KDM%iW+_pSOp\=Dc.fGXtI]@5W?1mbAF`ht!n#.lM7*KuJHqN_-
%rq#J_250-)^h]i"(G"[N;H:9TdAR2ao-lCW*',Errq^SRLUZgEWuq?B+<8%=:3Psp8,\Zti(jIL3K:QSio>GYPE0X!E4Y2^o>M0P
%r68i%F8^4RAkeKZ-'d#%1;U"]$f_3@YH(bQ5:btb[HI.*WH(+l?[r$:+WjKOW:>kno3(a"F0iQ[0%T>W*e*$qT'DWUGFA.b/tCb!
%SulNra7I:TLJnh9V9`Eoac2'&TU5\V_+CqBKgS5r^WOG9pZUeN%8S25V9>%:RI5kt^Nqb/'qf(7SBl`Ge'36=n.&SQPGcpg4q1DP
%XF%XPDD%t-h`e.lP+Z07-etE[>EY;Q]/G,O\ERI,Z;O8@^9t'qf'q(ajVg>:\6+Bp[9[UAM[%*J<hp%Yrpt:h^T=m8J#&2t]mW9r
%-7uE@2`&,nZ-0d+[XfN?npNHVXe+A8E*r).;s6I;J&lKarE[ldM/KNGG9,Y^8%OqCN`S/,I/Mr8\sVsC=6I*V4Z<77N'/DfW4S:O
%4]ETXYhnc^hqR=/?*3",Rqpqm2.$sVQIkHiI+S%d*t;%cq#d^PY28%N*B>8"KInrH'c1s:3e4gNSR\.Ar])@GJ"KqHlKd__`LA$.
%4[f7_bsWP6fF#$='`>OLi[]fs&o2t]]=VGi\Ro)N%a`pL%4CF]YL8BOU,ke$Yo.o&@:cAeG!-ocO".?Yrckk4]4Gn*2'rth[(b2K
%UIPi-"R#7*]+PqO*X@D0U0T8&ANd1ZD3XDMn'2,]2n88l-X5FLc<=I(s5P4$0;i6C*B.<1E:tgJ]%I2bm?Qma4uDC<E?aKS#M8oc
%S;9(@*"^LO_2UUpLWb<Bf21QMn8GAgmcQrIIMjLWX7?'7;Cq>G3tZ9+fJZ(Fqit>=-u\,=b!r?0Gg%i#7*6M[Y5:jROZ&.UmZUru
%<n=\8#QCijk^G]Pk*L'3ZC8"I,/k20N"_?H<fS6$(5a`EC:hf]DQDg#kJs?Grfc!hg#/<Ka`I7O)m&Fr]D2u%*(]up9DtJ_i\NUo
%o1M%FVoJhce%s2^s*Se8Ho:th]Q.H9C:Tir<[*aQ9'*cHi_$gaRCf*SmUiY#VYg*0DH1$C([1?__?j]+J^iedW=_k%agIt#@NBcR
%D^3DS'@,*(:a<]%KHBV+>AM74*jDBTb)aofp(p(V+P`Mm==U%Q5r!TD$O:WqEAmAG@V2XS6ebg]Lf2FAD/\$FZi8Rc/MrZ$F_/=)
%.5R"gC"_)(EV!ZU^Ye`#?J>"?A)JnV6)_)+'0ZP$Xi@5(eoPYnJ+#6nDQEs')p7R6l/u@tVoC</8u58Y[F_4J[Giit`&@GSraa`B
%N@JP`^\=4CRN^bfo$@8(/ON%k<r)Jr1[lUE[X$$ppO9HA`dHgX1lB'AR[BNj5`1&-eGnBDAc]d"jC\5^I^=d+B_*;:cb2eK0c9L'
%qqq:q*5L3&g&KoIehS4$iq1"[%m-Ol'0^r$Ve"La.#PqI#;/TbNie;ZSrd(+3dMDO`bKgb[6h]+D+O(`)41tuAQ,\RkbkO).kc;a
%[V6pl>73O7\4&35gHt@A9JWW?3F\#r-F_0C@][_r/7XC-Z`:u48iU2[ZNdSU-Z3*H<md5UkA.IILT!>te$LCfP;r$]bf5]JS!i;,
%@;@&3c-TI:>UR-?6FQr>L9>Dc^e1pS\gCs"S"XVCj^B7BDVqI'k\<n/os%Df90>)(@>:p3lu`4<\oeiO]*DSN1>hJM9.r(@1N6?T
%.6VXTQfcZg+PeE=cc:T@k@J8`eo#<o.8BnK_PmZq$s_o7#1n=j!E[m"E2@mHpRt2@2PG!^Th>3<b$'HI+_MbA]n`S(a%\su%+A*$
%-`CcR+42T+'dNS]Q4-bkaYJ$OW0R\BHe<kSp"`F[Rn]g76a]GE"P!S#4]HdPm\-YJg("*Se<Vho#G`EA7M%S21;gPU)$)L$8;8#H
%_.hmMAd-d8@&=0:(.+V&J=/%^RU8=`IWhMWEeO(ga]-+6\s--."<j(XQ*mR*B'a<gqJu5?a]NXI&llY0R?ft0PAZ$p_cZ>ZbZ1%X
%-'tuJ^=`ut`m3bfj.1:sMPrm1*-%cXPf$b(8k'/o9+TXN^?5UYSTM9*!5QH1M"81EWsDE5"!^iB9Z[drV69"%URcM+%In;t!Og9h
%c#lM;Kop&J>O]P(]%$J%@(as_JZd$&F!k#s@pPCc`5%"cLJD;<39E:iQ)XZVd$U_:1@[?Ib#BUuHs+t02Q:ZPK.YioWmpWf@'nCc
%Pm!#.Y7OF:!rGTQnY/Sd,9C@M_5c#XHt^0V/ls!d@So@:Y0^8$4U]Vk%c4EJ1fUH#-?)*0Bp\1S2]<n9m!Fdn`24_,"#5A8[=_JY
%j8&4I-XE[Ml0(NHGJa$>AYnoW7Um.'4RN:mY"[ZtLW2IDOtE%^)\`E6#rNH?FeKb`d:5+?.D=%47Qg'a8UZ`uN_!ZZj*FX00UW^p
%dK2#'5T$Xt^!?pQ4KVR]bhHQ^[5jOS<7[IDXCfT4Dl[\q9^I#Jdk9=)\$pbZEXo5DQ+BdA>q6EEiQB[KHt^aQ0"GC#%jTY`jfp?e
%8Jtn^MtLI2Wr-gIl@(oRk"1p+1p_HqE`=qjqFX(D<st-N_brhW;OP+g%ukk_,pO?#gD"BnhH`qC^r9BnVHCf?p3!/QA?Y.:P,2a?
%/X<m@q7qgL^LHE)FQ<D<7`d=L\lX;Bj3IZ$G1_<%Rjc#FT(b]M(q7mL/rZBQb1urCBM8V$Bq2D(/.IoVn-13!A>i8r!qg4hSg@SU
%^&F4q$3M[q'gm+t!H^:>:XL*`KFM*CP3[opI5JaG0ecRnqN_=P;+KR0Fa,KULHWVJg*T$gYJUlOVXAegI8NR7A`[.XkXDY\4nJ.8
%n%m/r]2Zq23gqEH^V1IZkajQsFRhV,c$>s3FkounMotEi<`n<)@:c<8K!k'@SFt^sb1++(K$-cT8eb%V\83XlWmLY)ZE?5nR6('L
%Cg"//b=\LHUXuhO4E],"=0moI>hSgGe)N/oWiY&+LA[XW=SGS=?8W_(<''ofp;`@gP"l4jBafOR3]O7%'Y;-'e@X6$ME52M=d,RD
%=k1WZe0f#h=V2US9\oHMZ_EV[l4p8SC!]p22)b/)JJtW>]oV)r9UVn^I+ZQ>pU)0nLLYYLB<X.6hp[=;b3_c+KhsG:Od(Tr@lW!E
%TipB*$*X4u`(;2(Tb$sLgmu:(eG[&H?;u@h"f#/N6B`EGIALl@K@0SMhI'pYOoK[M?W>Rce['Tm`Bt(a*bmnoQ#KS3E[gibNB9mu
%49)s083AL#<KdbNfIW#+;XLt"eMqdrQD49/RWY7ZAhJZGIEptGHNY@XiKeK%P:j>*d+&ahi&_7cRMCDuhU.*Il3p8LU>+GVV=@;r
%/Z%s&O'[$.`EH:kML\cger[>\4H%q'ed]'MJPNer5+&<i[M:64&d'UmE.%j\jZlb^N9Z^PBtVodIif!(]r#Ahai<gX);%Qt4/dtT
%YSqo9.#i?&Kr,EXWO&-(NDbeFO'Ca;B&1'sJL0]&1K4;T(31!LD<,N"U6p8@aK12r(=Bsqa;6NZgL-sk)Y9atmN[l?fM`t/#9l,-
%fuJH_aCSZ@]Fns!BU?_#m;c.XRI%p9+ouG!$[o4;7H^&<c^(L6dY(iYV=@<lfKLGGiWg,i;79a\Ij_O_P4tYkC)Ilh1hR-@%^pKX
%7i8/r#Np'>r/#R:183A3hj<lt?B(:]+)L+8%G@7:&C5PLHG>tgO]Bauc$^!46%Q5iD9[Hh0;imnkL9^.P6t_\aQ]#d%XgV"B9.RC
%;2lT6RDqAVP&h7%K1oB5?0fr_Qe<4(\j;lu(G$4P&%>5BSp&5(>)3iYNSMs+R/0aW6F]]T\<MKQ;&\f.qFo2ITQq.p@rk'Ip-+2,
%aO*g%24ZYqn-<0p0i,Aknbs<Gjp)r8B[s4Lo`+VlKP?UbS5q[Mfqnc;_.^T\Bm*mBSGar2`tsoS4`#m"#B2RgN+<upVG3IF[?iD6
%S4hPB)/P_]4;Tqd1,_IZ-M0dLEI&cJbumib7`dn6@N(;?aYlD&q.+PU+Jl4pI'Q0qP^1m84km;L`t-jAdG"_Nk#cLk$V[ehD1R7]
%BflDtOj,9ChUCH,A@,[*YPXR7XN1p\9Ol4E7A=15c1bCdSXjN++cVofV1fsScqq?k3F?I3C4)sE(Q!6friGrY]W==.[ZhBM`;s3h
%1ofbc.C@qU3A7kkrT@[EhE04BN@@dP%C8m7Zc7<U:0B'u=^O<e]'NG_m9-,E2OQ`:/[KE2k*BOMAERm7AIc+AA'.b^11uJ(oI==<
%Xk9\12FFEE&dMX<0kIAdOm1_tSMe&(#I;tNFMIaTisdm<\tG``j(a:7m-/+n?=e$=HN)adAqM\aQnh[F.>8q98e5T-4q-[T6S6cS
%10(Nlk`"Cj(Fh1*$XH;9lt0O:YYc>*r0QpOmOK)MEFSR7aZJ]:6dH"DQZoqpF[%Ok(R:Ue^F1qNOJ@J_%bR]?p+:!6^=Z-/!JajU
%0n3%@UTQ6#fUQc%e?H62O&O]C7W5K@c+C</(XKY!q1-Z`Xrj*]or@#`/:RN7ftDbb'WD.Dr]1;aNpo1snC>JsSobA%T]V.`0E/dF
%\5_Z,Y9;Er8BOiCSa&.lpX`J"DI.7*&$!@&bGm&[q_522a)h7U-iWkTn^e"Bq>0I7O,mh$4Q#1JDZ9T)>_$'br$I!Q@a=os!9c*e
%;dEXJh;@<)?X:=0[MK=SSajHZS_^nbIpH@X9P_6>k7*]*Usd5gdnsXqd">u4/VuiJ;2.mB^A=q3KDa`]a=XIAT6GFLC`q?^gK%rN
%lftQha1`"lSuhmLX2?"f+?_g]gUPFTpK:S\a;Qc-Z^8/&c@;/1H$nV)^L:PB.rr+M:-7&_CSX*Ar/FtNRa4@AU^.2(j'*U1nE3pn
%Crus3([E<(o:L_o@4:[]oH.5,r[_$m2BOKiO"IR2/;,2_*;g-c=e9Ioa7@k2_]Lo8f^e>$ZRi:7A:^+0:r[-N?)Yf's#:hmFnqO;
%A&j(Nr_)<of#/8c06;9W-1c?=-(dWXF#D<=J"\XA.9Q6-j.uNs@&KbqpnLaHo*>Xu(-;H7$qUhZ^DM0aSI8^q/@PH%]C'UPk$hK\
%_hps$Lf^=4'$)Qf/[0WnF#W.&0rs,Xfi<O9^[5Y!e`HMN?iO<q:-O5NJMO#UZQJ!#P7l2_AU/8,h[uZLhRd5f.dPH*59Cf-.c5WV
%9;V'*=45K^pGVTY]95qPrCJqa==)7&po<o-Pom&1'p[s[]FaDh?]a;s#5L>s%IW&97HI,sBi@pV86^="__%.Qqt\U+-Om!q(hlN=
%PJ<@pmfL([XW2eAF!#m%@'mV9^Y/QhUjDbPWo+4JBPPK#>iJAY4>F#:oh:C+s#>eZ?[;:/UoC5YIQmSdb1-C&ls<Y_OLg1o_)=-3
%^!2[^.p_d<;P6PQ+4YNm>td3-VRp/.BAFA_037gKC1VcaQ+mNAM0oI:FZsnpki3mpdJQ_<hciq7dY.8KlU\bA\ZK9Yo%.8"Q37ET
%OPS2_NcR;M0@uQdDXLj6<BcMOn3M.NXj8F\)-q:E\Qis:^g=']8@Qd=P:YJNQDRYB+XeGo@*:[paWk<)*%*o_k%Np*o7cb"O*LgZ
%kgqiZoAU9On5\Lr;u]qFVf02*c#g\8D<>cGpo?a1eI"ZdfCTD/fPc!"9il28ej#i4ST4u7])f+,/f$DDk:5&P=#<9%fl`eGHppD%
%DnB<Q_i)rbHSrd7%&%:XLRLBG<VK:U1`a!r+)8?5J%au/jm`7Z;pV\#%lIJIrcrqh0OK8$jOq"Tp\mC9AuQ7~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2685 1033 a Fs(Figur)o(e)24 b(11.)37 b FD(Performance)26
b(of)f(b)o(uf)n(fer)f(manage-)2685 1116 y(ment)19 b(strate)o(gies)g(on)
g(an)g(Itanium)g(2.)p -150 1286 4185 4 v -150 1405 a
Fc(void->void)30 b(filter)g(BufferTest)g({)-88 1465 y(int)g(PEEK)h(=)f
(4;)-88 1525 y(float[3])g(BUFFER;)-88 1644 y(prework)g({)-26
1704 y(for)g(\(int)g(i=0;)h(i<PEEK-1;)f(i++\))g({)35
1764 y(BUFFER[i])g(=)h(...)f(;)-26 1824 y(})-88 1884
y(})-88 2003 y(work)g({)-26 2063 y(float[4])f(TEMP_BUFFER;)-26
2123 y(int)h(push_index)g(=)h(3;)-26 2182 y(int)f(pop_index)g(=)h(0;)
-26 2302 y(//)f(copy)h(from)f(BUFFER)g(to)h(TEMP_BUFFER)-26
2362 y(for)f(\(int)g(i=0;)h(i<3;)f(i++\))h({)35 2422
y(TEMP_BUFFER[i])f(=)g(BUFFER[i];)-26 2481 y(})-26 2601
y(//)g(run)h(Source)-26 2661 y(TEMP_BUFFER[push_index++])d(=)i(...)h(;)
-26 2780 y(//)f(run)h(FIR)-26 2840 y(float)f(result)g(=)h(0;)-26
2900 y(for)f(\(int)g(i=1;)h(i<PEEK;)f(i++\))g({)35 2960
y(result)g(+=)h(i*TEMP_BUFFER[pop_index+i];)-26 3019
y(})-26 3079 y(pop_index++;)-26 3139 y(print\(result\);)-26
3258 y(//)f(copy)h(from)f(TEMP_BUFFER)g(to)g(BUFFER)-26
3318 y(for)g(\(int)g(i=0;)h(i<3;)f(i++\))h({)35 3378
y(BUFFER[i])f(=)h(TEMP_BUFFER[i+1];)-26 3438 y(})-88
3497 y(})-150 3557 y(})52 3732 y Fs(Figur)o(e)18 b(12.)37
b FD(Cop)o(y-shift)20 b(strate)o(gy)-5 b(.)p 1256 4070
4 2785 v 1315 1405 a Fc(void->void)30 b(filter)g(BufferTest)g({)1377
1465 y(int)h(PEEK)f(=)h(4;)1377 1525 y(float[3])f(BUFFER;)1377
1644 y(prework)g({)1439 1704 y(for)g(\(int)h(i=0;)f(i<PEEK-1;)g(i++\))h
({)1501 1764 y(BUFFER[i])f(=)g(...)h(;)1439 1824 y(})1377
1884 y(})1377 2003 y(work)g({)1439 2063 y(float)f(TEMP_BUFFER_0;)1439
2123 y(float)g(TEMP_BUFFER_1;)1439 2182 y(float)g(TEMP_BUFFER_2;)1439
2242 y(float)g(TEMP_BUFFER_3;)1439 2362 y(//)h(copy)f(from)g(BUFFER)h
(to)f(TEMP_BUFFER)1439 2422 y(TEMP_BUFFER_0)f(=)i(BUFFER[0];)1439
2481 y(TEMP_BUFFER_1)e(=)i(BUFFER[1];)1439 2541 y(TEMP_BUFFER_2)e(=)i
(BUFFER[2];)1439 2661 y(//)g(run)f(Source)1439 2720 y(TEMP_BUFFER_3)f
(=)i(...)g(;)1439 2840 y(//)g(run)f(FIR)1439 2900 y(float)g(result)g(=)
h(0;)1439 2960 y(result)f(+=)h(1*TEMP_BUFFER_1;)1439
3019 y(result)f(+=)h(2*TEMP_BUFFER_2;)1439 3079 y(result)f(+=)h
(3*TEMP_BUFFER_3;)1439 3139 y(print\(result\);)1439 3258
y(//)g(copy)f(from)g(TEMP_BUFFER)g(to)h(BUFFER)1439 3318
y(BUFFER[0])f(=)h(TEMP_BUFFER_1;)1439 3378 y(BUFFER[1])f(=)h
(TEMP_BUFFER_2;)1439 3438 y(BUFFER[2])f(=)h(TEMP_BUFFER_3;)1377
3497 y(})1315 3557 y(})1315 3732 y Fs(Figur)o(e)70 b(13.)37
b FD(Cop)o(y-shift)71 b(with)f(scalar)o(-)1315 3815 y(replacement.)p
2571 4070 V 2631 1405 a Fc(void->void)30 b(filter)g(BufferTest)f({)2693
1465 y(int)h(PEEK)h(=)f(4;)2693 1525 y(float[3])g(BUFFER;)2693
1644 y(prework)g({)2754 1704 y(for)h(\(int)f(i=0;)h(i<PEEK-1;)f(i++\))g
({)2816 1764 y(BUFFER[i])g(=)h(...)f(;)2754 1824 y(})2693
1884 y(})2693 2003 y(work)g({)2754 2063 y(float[32])g(TEMP_BUFFER;)2754
2123 y(int)h(push_index)f(=)g(3;)2754 2182 y(int)h(pop_index)f(=)g(0;)
2754 2302 y(//)h(copy)f(from)h(BUFFER)f(to)h(TEMP_BUFFER)2754
2362 y(for)g(\(int)f(i=0;)h(i<3;)f(i++\))h({)2816 2422
y(TEMP_BUFFER[i])e(=)i(BUFFER[i];)2754 2481 y(})2754
2601 y(//)g(run)g(Source)f(16)g(times)2754 2661 y(for)h(\(int)f(k=0;)h
(k<16;)f(k++\))g({)2816 2720 y(TEMP_BUFFER[push_index++])e(=)j(...)f(;)
2754 2780 y(})2754 2900 y(//)h(run)g(FIR)f(16)h(times)2754
2960 y(for)g(\(int)f(k=0;)h(k<16;)f(k++\))g({)2816 3019
y(float)g(result)h(=)f(0;)2816 3079 y(for)h(\(int)f(i=1;)g(i<PEEK;)h
(i++\))f({)2878 3139 y(result)g(+=)h(i*TEMP_BUFFER[pop_index+i];)2816
3199 y(})2816 3258 y(pop_index++;)2816 3318 y(print\(result\);)2754
3378 y(})2754 3497 y(//)g(copy)f(from)h(TEMP_BUFFER)e(to)i(BUFFER)2754
3557 y(for)g(\(int)f(i=0;)h(i<3;)f(i++\))h({)2816 3617
y(BUFFER[i])f(=)h(TEMP_BUFFER[i+16];)2754 3677 y(})2693
3737 y(})2631 3796 y(})2631 3971 y Fs(Figur)o(e)g(14.)38
b FD(Cop)o(y-shift)33 b(with)f(e)o(x)o(ecution)h(scal-)2631
4054 y(ing.)-150 4253 y(channel)26 b(with)e(initial)f(items,)h(as)h
(well)f(as)g(a)h Fu(work)e FD(function)j(that)e(repre-)-150
4336 y(sents)19 b(the)g(steady-state)h(e)o(x)o(ecution.)-50
4419 y(The)31 b(modulation)h(scheme)g(uses)g(a)f(traditional)g
(circular)o(-b)o(uf)n(fer)g(ap-)-150 4502 y(proach.)38
b(Three)e(v)n(ariables)i(are)f(introduced:)g(a)g Fu(BUFFER)f
FD(to)g(hold)i(all)-150 4585 y(items)29 b(transfered)i(between)f(the)g
(actors,)g(a)f Fu(push)p 1242 4585 23 4 v 27 w(index)f
FD(to)i(indicate)-150 4668 y(the)22 b(b)o(uf)n(fer)g(location)h(that)e
(will)h(be)g(written)f(ne)o(xt,)h(and)h(a)f Fu(pop)p
1516 4668 V 26 w(index)f FD(to)-150 4751 y(indicate)g(the)f(b)o(uf)n
(fer)h(location)g(that)f(will)g(be)g(read)h(ne)o(xt)g(\(i.e.,)e(the)i
(location)-150 4834 y(corresponding)32 b(to)e Fu(peek\(0\))p
FD(\).)e(The)h(communication)j(primiti)n(v)o(es)d(are)-150
4917 y(translated)19 b(as)g(follo)n(ws:)-150 5098 y Ft(push\(val\);)34
b(==>)69 b(BUFFER[push_index])32 b(=)j(val;)408 5164
y(push_index)e(=)i(\(push_index)f(+)g(1\))h(\045)g(BUF_SIZE;)-150
5297 y(pop\(\);)174 b(==>)69 b(pop_index)34 b(=)g(\(pop_index)g(+)h
(1\))f(\045)h(BUF_SIZE;)-150 5430 y(peek\(i\))139 b(==>)69
b(BUFFER[\(pop_index)33 b(+)h(i\))h(\045)g(BUF_SIZE])2042
4253 y FD(The)22 b(StreamIt)f(compiler)h(con)m(v)o(erts)h(the)f(modulo)
i(operations)f(to)f(bitwise-)2042 4336 y(and)j(operations)g(by)g
(scaling)g(the)g(b)o(uf)n(fer)f(to)h(a)f(po)n(wer)h(of)g(tw)o(o.)f
(Note)g(that)2042 4419 y(if)31 b(there)h(are)g(no)h Fu(peek)e
FD(operations,)i(then)f(the)g(b)o(uf)n(fer)g(will)f(be)i(empty)2042
4502 y(follo)n(wing)19 b(each)h(e)o(x)o(ecution)g(of)g(the)f(do)n
(wnstream)h(actor)l(.)f(In)g(this)g(case,)g(the)2042
4585 y(indices)25 b(can)g(be)g(reset)g(to)f(zero)h(at)g(the)g(start)f
(of)h(each)g(e)o(x)o(ecution)h(and)f(the)2042 4668 y(modulo)19
b(operations)g(can)f(be)g(eliminated.)g(Ho)n(we)n(v)o(er)m(,)g(in)g
(our)g(e)o(xample)h(the)2042 4751 y(FIR)f(actor)h(performs)g(peeking,)h
(so)f(the)g(modulo)h(operations)g(are)f(needed.)2141
4834 y Fs(Experimental)29 b(setup.)f FD(Figures)h(9,)f(10)i(and)g(11)f
(illustrate)f(the)i(per)o(-)2042 4917 y(formance)d(of)f(v)n(arious)g(b)
o(uf)n(fer)g(management)i(strate)o(gies)d(on)i(a)f(137)g(Mhz)2042
5000 y(StrongARM)20 b(1110,)h(a)f(600)h(Mhz)g(Pentium)f(3)g(and)h(a)f
(1.3)h(Ghz)f(Itanium)g(2,)2042 5084 y(respecti)n(v)o(ely)-5
b(.)23 b(The)f(\002gures)h(illustrate)f(the)g(e)o(x)o(ecution)i(time)e
(per)g Fo(10)3856 5052 y Fq(7)3914 5084 y FD(out-)2042
5167 y(puts)17 b(for)f(the)g(synthetic)h(benchmark)i(\(Figure)d(7\))g
(across)h(a)f(range)i(of)e Fu(PEEK)2042 5250 y FD(v)n(alues.)30
b(T)-6 b(o)29 b(ensure)i(a)e(f)o(air)h(comparison)h(with)e(the)h
(scalar)f(replacement)2042 5333 y(optimization)23 b(\(Section)g(5.3\),)
g(all)g(loops)g(in)g(the)h(original)f(actor)g(are)g(fully)2042
5416 y(unrolled.)p eop
%%Page: 8 8
8 7 bop -50 66 a Fs(Ev)o(aluation.)23 b FD(The)h(time)g(required)h(for)
f(the)g(modulation)h(strate)o(gy)g(in-)-150 149 y(creases)g(linearly)g
(with)f(the)h(peek)g(rate.)f(This)g(is)g(e)o(xpected,)i(as)e(there)h
(is)f(a)-150 232 y(constant)f(o)o(v)o(erhead)h(per)e(peek)h(operation.)
g(Relati)n(v)o(e)g(to)f(the)g(other)h(strate-)-150 315
y(gies,)g(modulation)i(performs)f(noticeably)h(better)e(on)h(the)g
(Itanium)f(2.)h(W)-6 b(e)-150 399 y(attrib)o(ute)24 b(this)g(to)g(the)g
(six)h(inte)o(ger)f(units)h(on)f(the)h(Itanium)f(2;)h(since)f(there)
-150 482 y(is)h(not)g(much)h(additional)g(w)o(ork)f(in)g(this)g
(benchmark,)i(it)d(can)i(lik)o(ely)f(pro-)-150 565 y(cess)d(the)g
(modulo)h(operations)g(in)f(parallel)g(with)f(other)i(operations)g
(using)-150 648 y(softw)o(are)c(pipelining.)-150 818
y Fs(5.2)75 b(Copy-Shift)-150 934 y FD(The)35 b(cop)o(y-shift)i(strate)
o(gy)-5 b(,)35 b(illustrated)g(in)h(Figure)f(12,)h(shifts)f(the)g(li)n
(v)o(e)-150 1017 y(items)21 b(to)g(the)h(front)f(of)h(the)f(b)o(uf)n
(fer)h(at)f(the)g(be)o(ginning)i(of)f(each)g(e)o(x)o(ecution.)-150
1100 y(Because)36 b(each)h(e)o(x)o(ecution)f(starts)f(writing)g(to)h
(and)g(reading)h(from)e(the)-150 1183 y(b)o(uf)n(fer)e(at)f(the)h(same)
h(location,)f(there)g(is)f(no)i(need)f(for)g(the)g(indices)g(to)-150
1266 y(wraparound)h(and)f(the)f(modulo)h(operations)g(can)g(be)g
(eliminated.)f(This)-150 1349 y(bene\002t)22 b(is)g(compounded)j(by)d
(additional)h(optimizations)g(enabled)g(by)f(the)-150
1432 y(cop)o(y-shift)e(approach,)g(as)f(described)h(in)f(the)g
(subsequent)i(sections.)-50 1515 y(Ho)n(we)n(v)o(er)m(,)31
b(the)h(cost)f(of)h(this)f(strate)o(gy)g(comes)h(in)f(the)h(cop)o(ying)
h(op-)-150 1598 y(erations:)e(at)h(the)f(start)g(of)g(each)h(e)o(x)o
(ecution,)g Fo(\()p Fy(peek)c FC(\000)e Fy(pop)q Fo(\))31
b FD(items)g(are)-150 1681 y(copied)i(from)e(the)h(persistent)g
Fu(BUFFER)e FD(to)h(the)h(be)o(ginning)h(of)f(a)f(local)-150
1764 y Fu(TEMP)p 34 1764 23 4 v 26 w(BUFFER)p FD(.)17
b(Subsequent)i(operations)g(reference)g Fu(TEMP)p 1533
1764 V 26 w(BUFFER)p FD(,)-150 1847 y(and)26 b(the)g(li)n(v)o(e)f
(items)g(are)h(copied)g(back)h(to)e(the)h Fu(BUFFER)e
FD(upon)j(comple-)-150 1930 y(tion.)21 b(While)f(these)i(tw)o(o)f(v)n
(ariables)g(could)h(also)f(be)h(combined)g(into)f(a)g(sin-)-150
2013 y(gle)i(b)o(uf)n(fer)m(,)g(k)o(eeping)i(them)f(separate)f(results)
g(in)h(a)f(smaller)g(li)n(v)o(e)g(data)h(set)-150 2096
y(when)c(the)f(actor)g(is)f(not)h(e)o(x)o(ecuting.)-50
2179 y(The)f(communication)j(primiti)n(v)o(es)e(are)g(translated)g(as)g
(follo)n(ws:)-150 2325 y Ft(push\(val\);)34 b(==>)69
b(TEMP_BUFFER[push_index])32 b(=)j(val;)408 2391 y(push_index)e(=)i
(push_index)f(+)h(1;)-150 2524 y(pop\(\);)174 b(==>)69
b(pop_index)34 b(=)g(pop_index)g(+)h(1;)-150 2657 y(peek\(i\))139
b(==>)69 b(TEMP_BUFFER[pop_index)32 b(+)j(i])-150 2819
y FD(Compared)21 b(to)e(the)h(modulation)h(scheme,)f(the)g(cop)o
(y-shift)g(strate)o(gy)g(refer)o(-)-150 2902 y(ences)c(the)f
Fu(TEMP)p 321 2902 V 27 w(BUFFER)f FD(and)i(does)g(not)f(perform)h
(modulo)h(operations.)-50 2985 y Fs(Ev)o(aluation.)f
FD(As)i(sho)n(wn)g(in)f(Figures)g(9,)g(10)h(and)g(11,)g(the)f
(unoptimized)-150 3068 y(cop)o(y-shift)i(strate)o(gy)f(is)g(the)g(slo)n
(west)g(strate)o(gy)g(that)g(we)g(e)n(v)n(aluate.)h(Though)-150
3151 y(the)g(cost)h(per)f(peek)h(operation)g(is)f(smaller)g(than)g(the)
g(modulation)i(scheme,)-150 3234 y(the)27 b(cop)o(ying)i(o)o(v)o
(erhead)f(per)f(iteration)g(also)g(gro)n(ws)g(with)g(the)g(peek)h(rate)
-150 3317 y(and)21 b(cancels)g(out)f(an)o(y)h(sa)o(vings;)f(o)o(v)o
(erall,)g(cop)o(y-shift)h(performs)g(from)f Fo(2)p FC(\002)-150
3400 y FD(to)32 b Fo(3)p FC(\002)g FD(slo)n(wer)h(than)g(modulation.)g
(The)f(follo)n(wing)h(sections)g(describe)-150 3483 y(optimizations)20
b(that)e(can)i(justify)e(taking)i(the)f(cop)o(y-shift)h(approach.)-150
3653 y Fs(5.3)75 b(Copy-Shift)18 b(with)f(Scalar)i(Replacement)-150
3769 y FD(The)i(\002rst)f(optimization)i(enabled)g(by)g(the)f(cop)o
(y-shift)h(scheme)g(is)f(dubbed)-150 3852 y Fy(scalar)15
b(r)m(eplacement)p FD(.)h(In)e(contrast)h(to)f(the)h(modulation)h
(scheme,)f(the)f(cop)o(y-)-150 3935 y(shift)24 b(approach)j(can)e
(result)g(in)f(array)h(operations)h(that)f(access)g(the)g(same)-150
4018 y(location)20 b(on)f(e)n(v)o(ery)h(e)o(x)o(ecution)g(of)f(the)g
(actor)l(.)g(The)g(idea)g(behind)i(scalar)e(re-)-150
4101 y(placement)f(is)f(to)g(fully)h(unroll)f(the)h(loops)g(in)f(the)g
(actor)m(,)g(thereby)h(resolving)-150 4184 y(each)24
b(array)g(inde)o(x)g(to)f(an)h(inte)o(ger)g(literal.)e(Then,)i(since)g
(each)g(location)g(is)-150 4267 y(fully)h(resolv)o(ed)g(at)f(compile)h
(time,)f(an)h Fr(n)p FD(-length)h(array)e(can)i(be)e(replaced)-150
4350 y(by)d(a)g(set)g(of)g Fr(n)g FD(scalar)g(v)n(ariables:)g(one)h
(for)e(each)i(item)e(in)h(the)g(b)o(uf)n(fer)l(.)g(This)-150
4433 y(transformation)f(is)e(illustrated)h(in)g(Figure)f(13.)-50
4516 y(Scalar)23 b(replacement)j(of)n(fers)e(se)n(v)o(eral)h
(performance)h(bene\002ts.)e(Scalar)-150 4599 y(v)n(ariables)h(can)f
(be)g(re)o(gister)g(allocated,)g(and)h(as)f(local)f(v)n(ariables)i(the)
o(y)f(are)-150 4682 y(subject)19 b(to)g(a)g(range)h(of)f(data\003o)n(w)
g(optimizations)h(\(constant)f(propagation,)-150 4765
y(cop)o(y)34 b(propagation,)f(dead)h(code)f(elimination,)f(etc.\).)g
(Replacing)h(array)-150 4848 y(operations)g(with)f(scalars)g(also)h
(eliminates)f(array)g(inde)o(x)h(calculations.)-150 4932
y(Despite)25 b(these)h(bene\002ts,)g(scalar)f(replacement)h(is)f
(nearly)h(impossible)g(to)-150 5015 y(do)19 b(in)g(a)g(general-purpose)
i(language)g(such)e(as)g(C)g(because)h(array)f(contents)-150
5098 y(might)35 b(be)h(aliased)g(with)f(other)g(pointers.)h(StreamIt)e
(arrays)i(represent)-150 5181 y(v)n(alues)d(that)g(are)f(independent)j
(in)e(memory)-5 b(,)33 b(thereby)g(f)o(acilitating)g(this)-150
5264 y(optimization.)-50 5347 y(Note)28 b(that)g(scalar)h(replacement)g
(can)g(only)g(be)g(applied)g(when)g(array)-150 5430 y(indices)21
b(can)h(be)f(resolv)o(ed)h(to)f(compile-time)g(constants.)g(In)g(the)g
(presence)2042 66 y(of)c(unpredictable)i(control)f(\003o)n(w)f(within)g
(an)h(actor)m(,)f(or)h(if)f(the)g(loops)h(are)g(too)2042
149 y(lar)o(ge)g(to)h(fully)g(unroll,)g(then)g(scalar)g(replacement)h
(does)g(not)f(apply)-5 b(.)2141 232 y Fs(Ev)o(aluation.)27
b FD(Compared)h(to)f(an)h(unoptimized)g(cop)o(y-shift)g(strate)o(gy)-5
b(,)2042 315 y(Figures)35 b(9,)h(Figures)f(10)h(and)g(11)g(illustrate)f
(that)h(scalar)f(replacement)2042 399 y(of)n(fers)20
b(modest)i(gains)e(on)h(our)g(synthetic)h(benchmark.)g(At)e(the)g
(maximum)2042 482 y(peek)28 b(rate)g(of)f(128,)h(the)g(StrongARM)g(and)
g(Pentium)g(3)g(of)n(fer)f(speedups)2042 565 y(of)18
b(16\045)g(and)h(26\045,)f(respecti)n(v)o(ely;)h(these)f(speedups)i
(are)d(roughly)j(uniform)2042 648 y(across)25 b(all)g(peek)h(rates.)f
(On)g(the)g(Itanium)h(2,)f(speedups)i(range)f(from)f(5\045)2042
731 y(to)35 b(58\045)h(depending)i(on)e(the)g(peek)g(rate.)f(W)-6
b(e)35 b(conjecture)i(that)e(scalar)2042 814 y(replacement)15
b(is)g(more)g(critical)f(for)h(small)f(actors)h(that)g(perform)g(only)g
(a)g(fe)n(w)2042 897 y(operations.)i(Due)g(to)f(the)h(high)g
(communication-to-computation)j(ratio)c(in)2042 980 y(such)k(actors,)f
(there)h(could)g(be)g(lar)o(ge)f(gains)h(from)f(re)o(gister)o
(-allocating)g(and)2042 1063 y(cop)o(y-propagating)i(the)e(temporary)h
(v)n(ariables.)2042 1220 y Fs(5.4)75 b(Copy-Shift)17
b(with)h(Execution)g(Scaling)2042 1337 y FD(A)i(\002nal)f(optimization)
i(of)f(the)g(cop)o(y-shift)h(strate)o(gy)g(uses)f(e)o(x)o(ecution)h
(scal-)2042 1420 y(ing)g(to)g(dramatically)g(decrease)h(the)f(o)o(v)o
(erhead)h(associated)g(with)e(cop)o(ying)2042 1503 y(the)25
b(b)o(uf)n(fer)h(contents)g(on)g(each)g(iteration.)f(In)h(an)o(y)g
(actor)m(,)f(the)h(number)g(of)2042 1586 y(items)20 b(inspected)i(on)g
(one)g(e)o(x)o(ecution)g(and)f(sa)o(v)o(ed)h(for)f(the)g(ne)o(xt)g(e)o
(x)o(ecution)2042 1669 y(is)d Fo(\()p Fy(peek)d FC(\000)g
Fy(pop)q Fo(\))p FD(.)j(This)g(represents)h(the)f(number)h(of)g(items)f
(copied)h(by)g(the)2042 1752 y(cop)o(y-shift)28 b(scheme.)g(Ho)n(we)n
(v)o(er)m(,)g(this)g(cost)f(can)h(be)g(amortized)g(by)g(scal-)2042
1835 y(ing)20 b(the)h(number)g(of)f(e)o(x)o(ecutions)i(of)e(the)g(do)n
(wnstream)i(actor)e(in)g(the)g(fused)2042 1918 y(code.)26
b(By)h(enclosing)g(the)f(body)h(of)f(the)h(actor)f(in)g(a)g(loop,)g
(the)h Fy(peek)f FD(and)2042 2001 y Fy(pop)17 b FD(rates)g(can)g(be)g
(made)h(arbitrarily)e(lar)o(ge,)g(while)h Fo(\()p Fy(peek)10
b FC(\000)f Fy(pop)p Fo(\))17 b FD(remains)2042 2084
y(constant.)2141 2167 y(Thus,)g(e)o(x)o(ecution)h(scaling)g(reduces)g
(the)f(fraction)g(of)g(time)f(spent)i(cop)o(y-)2042 2250
y(ing)24 b(to)g(an)g(arbitrarily)g(small)f(le)n(v)o(el.)h(In)g(our)g
(study)-5 b(,)25 b(we)e(scale)h(the)g(e)o(x)o(ecu-)2042
2333 y(tions)29 b(of)h(an)f(actor)h(until)f Fo(\()p Fy(peek)d
FC(\000)f Fy(pop)q Fo(\))41 b FC(\024)3323 2302 y Fq(1)p
3323 2316 31 4 v 3323 2358 a(4)3393 2333 y Fy(pop)q FD(.)29
b(In)g(the)g(synthetic)2042 2416 y(benchmark,)19 b(this)f(implies)g
(that)g(each)h(actor)f(body)i(e)o(x)o(ecutes)e(16)h(times)f(be-)2042
2499 y(fore)27 b(the)g(b)o(uf)n(fer)g(contents)h(are)f(shifted.)f(The)h
(code)h(resulting)f(from)g(this)2042 2582 y(transformation)19
b(is)g(sho)n(wn)h(in)f(Figure)f(14.)2141 2665 y(Note)e(that)g(due)g(to)
g(the)g(lar)o(ge)f(loops)i(introduced)g(by)f(e)o(x)o(ecution)h
(scaling,)2042 2748 y(it)27 b(cannot)j(be)e(used)h(in)f(combination)i
(with)e(scalar)g(replacement.)h(If)f(the)2042 2831 y(loops)d(were)g
(unrolled)g(to)g(resolv)o(e)g(the)g(array)g(indices,)g(there)g(could)g
(be)g(a)2042 2914 y(ne)o(gati)n(v)o(e)19 b(impact)g(on)h(the)f
(instruction)g(cache.)2141 2997 y Fs(Ev)o(aluation.)24
b FD(As)g(sho)n(wn)h(in)g(Figures)f(9)g(and)h(10,)f(the)h(cop)o
(y-shift)g(ap-)2042 3080 y(proach)32 b(with)f(e)o(x)o(ecution)i
(scaling)f(performs)g(signi\002cantly)f(better)h(than)2042
3163 y(modulation)27 b(on)g(the)f(StrongARM)h(and)g(Pentium)f(3.)g(At)g
(the)g(maximum)2042 3246 y(peek)i(rate)f(of)g(128,)h(the)f(StrongARM)g
(e)o(xhibits)h(a)f(51\045)h(speedup)g(while)2042 3329
y(the)23 b(Pentium)f(3)h(sho)n(ws)h(a)e(48\045.)i(These)e(speedups)j
(mak)o(e)f(sense,)f(as)f(each)2042 3412 y(peek)e(operation)h(is)e
(cheaper)i(due)f(to)g(the)f(eliminated)h(modulo)h(operations)2042
3495 y(\(implemented)f(as)f(bitwise-and)h(in)f(the)g(modulation)h
(scheme\),)g(while)f(the)2042 3578 y(o)o(v)o(erhead)e(from)f(cop)o
(ying)h(is)e(reduced)i(to)f(a)g(fraction)f(of)h(the)g(original)g(cop)o
(y-)2042 3661 y(shift)i(approach.)2141 3744 y(The)k(gains)g(are)g(less)
f(substantial)h(on)g(Itanium)g(2,)g(where)g(the)f(speedup)2042
3827 y(at)d Fy(peek)23 b Fo(=)e(128)f FD(is)e(only)i(5\045)f(\(Figure)f
(11\).)h(W)-6 b(e)19 b(attrib)o(ute)f(this)h(to)f(the)h(rela-)2042
3910 y(ti)n(v)o(ely)h(high)h(performance)h(of)e(the)h(modulation)h
(approach)g(on)f(Itanium)f(2;)2042 3993 y(due)h(to)f(the)h(six)f
(parallel)h(inte)o(ger)f(units,)h(the)f(bitwise-and)h(operation)h(may)
2042 4076 y(not)15 b(increase)h(the)f(critical)f(path.)h(This)f
(balance)i(might)g(be)f(dif)n(ferent)g(in)g(pro-)2042
4159 y(grams)20 b(with)g(higher)g(inte)o(ger)g(w)o(orkloads)h(within)f
(the)g(actors.)g(Still,)e(cop)o(y-)2042 4242 y(shift)e(with)g(e)o(x)o
(ecution)h(scaling)g(does)g(no)g(w)o(orse)g(than)g(modulation)h(\(on)f
(an)o(y)2042 4325 y(architecture\),)23 b(and)h(e)o(x)o(ecution)g
(scaling)g(al)o(w)o(ays)g(of)n(fers)f(a)g(lar)o(ge)g(speedup)2042
4408 y(o)o(v)o(er)c(the)g(original)g(cop)o(y-shift)h(approach.)2042
4566 y Fs(5.5)75 b(Summary)2042 4682 y FD(W)-6 b(e)35
b(conclude)i(that)e(cop)o(y-shift)h(with)f(e)o(x)o(ecution)i(scaling)e
(is)g(the)h(best)2042 4765 y(b)o(uf)n(fer)21 b(management)j(strate)o
(gy)e(for)f(actors)h(that)g(utilize)f(peeking.)i(This)e(is)2042
4848 y(some)n(what)26 b(surprising)h(because)g(the)f(unoptimized)h(cop)
o(y-shift)g(strate)o(gy)2042 4932 y(has)f(lar)o(ge)g(o)o(v)o(erheads)i
(that)e(result)g(in)g(a)g(slo)n(wdo)n(wn)h(relati)n(v)o(e)f(to)g(a)g
(circu-)2042 5015 y(lar)d(b)o(uf)n(fer)h(with)g(modulation.)h(Ho)n(we)n
(v)o(er)m(,)f(by)h(le)n(v)o(eraging)g(the)f(\003e)o(xibility)2042
5098 y(of)18 b(the)h(parallel)f(stream)h(graph)g(to)g(perform)g(e)o(x)o
(ecution)g(scaling,)g(the)f(o)o(v)o(er)o(-)2042 5181
y(heads)24 b(are)f(amortized.)g(Compared)h(to)f(a)g(plain)g(circular)g
(b)o(uf)n(fer)g(strate)o(gy)-5 b(,)2042 5264 y(there)20
b(are)g(signi\002cant)h(impro)o(v)o(ements)g(on)f(StrongARM)h(\(51\045)
g(speedup\))2042 5347 y(and)26 b(Pentium)f(3)h(\(48\045)g(speedup\),)h
(and)f(respectable)g(performance)h(\(5\045)2042 5430
y(speedup\))20 b(on)g(Itanium)f(2.)p eop
%%Page: 9 9
9 8 bop -148 53 1990 4 v -150 120 4 67 v -115 100 a Fb(Benchmark)p
316 120 V 176 w(Description)p 1539 120 V 917 w(#)15 b(of)g(Actors)p
1839 120 V -148 123 1990 4 v -148 139 V -150 206 4 67
v -115 186 a Ft(bitonic)p 316 206 V 221 w Fx(bitonic)g(sort)g(of)g(64)g
(inte)o(gers)p 1539 206 V 699 w(972)p 1839 206 V -148
209 1990 4 v -150 276 4 67 v -115 256 a Ft(fir)p 316
276 V 376 w Fx(\002nite)g(impulse)f(response)g(\(128)h(taps\))p
1539 276 V 497 w(132)p 1839 276 V -148 279 1990 4 v -150
345 4 67 v -115 325 a Ft(fft-fine)p 316 345 V 186 w Fx(\002ne)g
(grained)g(64-w)o(ay)g(FFT)p 1539 345 V 717 w(267)p 1839
345 V -148 349 1990 4 v -150 415 4 67 v -115 395 a Ft(fft-coarse)p
316 415 V 116 w Fx(coarse)f(grained)h(64-w)o(ay)g(FFT)p
1539 415 V 671 w(26)p 1839 415 V -148 418 1990 4 v -150
485 4 67 v -115 465 a Ft(3gpp)p 316 485 V 326 w Fx(3GPP)h(Radio)e
(Access)f(Protocol)p 1539 485 V 617 w(105)p 1839 485
V -148 488 1990 4 v -150 555 4 67 v -115 535 a Ft(beamformer)p
316 555 V 116 w Fx(beamformer)j(with)f(64)f(channels)g(and)h(1)f(beam)p
1539 555 V 321 w(197)p 1839 555 V -148 558 1990 4 v -150
624 4 67 v -115 604 a Ft(matmult)p 316 624 V 221 w Fx(matrix)i
(multiplication)p 1539 624 V 819 w(48)p 1839 624 V -148
628 1990 4 v -150 694 4 67 v -115 674 a Ft(fmradio)p
316 694 V 221 w Fx(FM)f(Radio)f(with)h(10-w)o(ay)g(equalizer)p
1539 694 V 540 w(49)p 1839 694 V -148 697 1990 4 v -150
764 4 67 v -115 744 a Ft(filterbank)p 316 764 V 116 w
Fx(\002lterbank)h(program)f(\(8)g(bands,)f(32)g(taps)g(/)h(\002lter\))p
1539 764 V 295 w(53)p 1839 764 V -148 767 1990 4 v -150
834 4 67 v -115 814 a Ft(filterbank2)p 316 834 V 81 w
Fx(independent)g(\002lterbank)g(\(3)g(bands,)f(100)h(taps)f(/)g
(\002lter\))p 1539 834 V 179 w(37)p 1839 834 V -148 837
1990 4 v -150 903 4 67 v -115 883 a Ft(ofdm)p 316 903
V 326 w Fx(Orthogonal)i(Frequenc)o(y)f(Di)o(vision)f(Multiple)o(xor)h
([20)q(])p 1539 903 V 171 w(16)p 1839 903 V -148 907
1990 4 v 277 1031 a Fs(T)-7 b(able)18 b(1.)38 b FD(Ev)n(aluation)19
b(benchmark)i(suite.)-150 1340 y FA(6.)91 b(Experimental)21
b(Ev)o(aluation)-150 1457 y FD(In)g(this)f(section)i(we)e(e)n(v)n
(aluate)i(the)f(merits)f(of)h(the)g(proposed)h(cache)g(a)o(w)o(are)-150
1540 y(optimizations)f(and)g(b)o(uf)n(fer)g(management)h(strate)o
(gies.)e(W)-6 b(e)20 b(use)h(three)g(dif-)-150 1623 y(ferent)15
b(architectures:)f(a)h(137)g(MHz)g(StrongARM)g(1110,)h(a)e(600)i(MHz)f
(Pen-)-150 1706 y(tium)26 b(3)h(and)f(a)h(1.3)f(GHz)g(Itanium)h(2.)f
(The)g(StrongARM)h(results)f(re\003ect)-150 1789 y(performance)k(for)e
(an)g(embedded)j(tar)o(get;)c(it)h(has)h(a)f(16)h(Kb)f(L1)g(instruc-)
-150 1872 y(tion)e(cache,)h(an)f(8)g(Kb)g(L1)g(data)g(cache,)g(and)h
(no)g(L2)e(cache.)i(The)f(Stron-)-150 1955 y(gARM)19
b(also)f(has)h(a)f(separate)h(512-byte)g(minicache)g(\(not)g(tar)o
(geted)f(by)h(our)-150 2038 y(optimizations\).)25 b(The)g(Pentium)g(3)h
(and)f(Itanium)h(2)f(re\003ect)f(desktop)j(per)o(-)-150
2121 y(formance;)c(the)o(y)f(ha)o(v)o(e)g(a)g(16)g(Kb)g(L1)f
(instruction)i(cache,)f(16)g(Kb)g(L1)g(data)-150 2204
y(cache,)d(and)h(256)g(Kb)f(shared)g(L2)g(cache.)-50
2287 y(Our)k(benchmark)i(suite)e(\(see)g(T)-6 b(able)24
b(6\))f(consists)h(of)f(11)h(StreamIt)e(ap-)-150 2370
y(plications.)15 b(The)o(y)h(are)f(compiled)i(with)e(the)g(StreamIt)g
(compiler)g(which)h(ap-)-150 2453 y(plies)g(the)f(optimizations)h
(described)h(in)f(this)f(paper)m(,)h(as)f(well)h(as)f(aggressi)n(v)o(e)
-150 2536 y(loop)23 b(unrolling)f(\(by)g(a)g(f)o(actor)h(of)e(128)i
(for)f(all)f(benchmarks\))j(to)e(f)o(acilitate)-150 2619
y(scalar)29 b(replacement)h(\(Section)f(5\).)g(The)g(StreamIt)f
(compiler)h(outputs)h(a)-150 2702 y(functionally)17 b(equi)n(v)n(alent)
g(C)e(program)i(that)e(is)g(compiled)i(with)e Fu(gcc)g
FD(\(v3.4,)-150 2785 y(-O3\))g(for)g(the)h(StrongARM)f(and)h(for)g(the)
f(Pentium)g(3)h(and)g(with)f Fu(ecc)f FD(\(v7.0,)-150
2868 y(-O3\))19 b(for)g(the)g(Itanium)h(2.)f(Each)g(benchmark)i(is)e
(then)g(run)h(\002)n(v)o(e)f(times,)g(and)-150 2951 y(the)g(median)h
(user)f(time)f(is)h(recorded.)-50 3034 y(As)g(the)g(StrongARM)g(does)h
(not)g(ha)o(v)o(e)f(a)g(\003oating)g(point)h(unit,)f(we)g(con-)-150
3117 y(v)o(erted)k(all)e(of)h(our)h(\003oating)f(point)h(applications)g
(\(i.e.,)e(e)n(v)o(ery)h(application)-150 3200 y(e)o(xcept)j(for)f
Fu(bitonic)p FD(\))e(to)i(operate)h(on)g(inte)o(gers)f(rather)g(than)h
(\003oats.)e(In)-150 3283 y(practice,)d(a)h(detailed)f(precision)h
(analysis)g(is)f(needed)i(in)e(con)m(v)o(erting)i(such)-150
3366 y(applications)33 b(to)f(\002x)o(ed-point.)h(Ho)n(we)n(v)o(er)m(,)
f(as)h(the)f(control)h(\003o)n(w)f(within)-150 3449 y(these)24
b(applications)h(is)f(v)o(ery)g(static,)g(we)g(are)g(able)g(to)g
(preserv)o(e)h(the)f(com-)-150 3532 y(putation)d(pattern)g(for)g(the)g
(sak)o(e)g(of)g(benchmarking)h(by)g(simply)e(replacing)-150
3615 y(e)n(v)o(ery)g(\003oating)f(point)g(type)g(with)g(an)g(inte)o
(ger)g(type.)-50 3698 y(W)-6 b(e)28 b(also)g(made)i(an)f(additional)g
(modi\002cation)g(in)f(compiling)i(to)e(the)-150 3781
y(StrongARM:)15 b(our)f(e)o(x)o(ecution)i(scaling)f(heuristic)g(scales)
f(actors)h(until)g(their)-150 3864 y(output)i(\002lls)d(100\045)j(of)f
(the)g(data)g(cache,)g(rather)g(than)g(2/3)g(of)g(the)f(data)h(cache)
-150 3947 y(as)26 b(described)h(in)e(Section)h(4.)g(This)f
(modi\002cation)h(accounts)h(for)f(the)g(32-)-150 4030
y(w)o(ay)f(set-associati)n(v)o(e)h(L1)f(data)g(cache)h(in)e(the)h
(StrongARM.)g(Due)g(to)g(the)-150 4113 y(high)19 b(de)o(gree)g(of)g
(associati)n(vity)-5 b(,)19 b(there)g(is)f(a)g(smaller)g(chance)i(that)
f(the)f(actor)-150 4196 y(outputs)f(will)f(repeatedly)h(e)n(vict)g(the)
g(state)f(v)n(ariables)h(of)g(the)f(actor)m(,)g(thereby)-150
4279 y(making)h(it)e(w)o(orthwhile)i(to)f(further)g(\002ll)f(the)h
(data)g(cache.)h(This)f(observ)n(ation)-150 4362 y(yields)j(up)h(to)e
(25\045)i(impro)o(v)o(ement)g(on)f(some)h(benchmarks.)-150
4516 y Fz(Ov)o(erall)e(Speedup)75 b FD(The)19 b(o)o(v)o(erall)f
(speedups)i(of)n(fered)f(by)f(our)h(techniques)-150 4599
y(are)24 b(illustrated)f(in)h(Figure)f(15)i(\(StrongARM\),)e(Figure)h
(16)g(\(Pentium)g(3\),)-150 4682 y(and)g(16)g(\(Itanium)g(2\).)f(These)
h(graphs)g(ha)o(v)o(e)g(tw)o(o)g(bars:)f(one)i(for)e(\223full)g(fu-)
-150 4765 y(sion\224,)31 b(in)f(which)h(all)f(actors)h(are)g(fused)g
(into)g(a)f(single)h(function)h(\(with)-150 4848 y(scalar)f
(replacement\),)g(and)g(one)h(labeled)f Fu(CAF+scaling+buffer)p
FD(,)-150 4932 y(representing)c(all)f(of)g(our)g(optimizations)g
(\(cache)h(a)o(w)o(are)f(fusion,)h(e)o(x)o(ecu-)-150
5015 y(tion)34 b(scaling,)f(and)i(b)o(uf)n(fer)e(optimizations\))h
(applied)h(together)l(.)e(W)-6 b(e)34 b(in-)-150 5098
y(clude)c(the)g(comparison)h(to)f(full)f(fusion)i(because)g(it)e
(represents)h(a)g(sim-)-150 5181 y(ple)d(approach)h(for)e(eliminating)h
(function)g(call)f(o)o(v)o(erhead)i(and)f(optimiz-)-150
5264 y(ing)c(across)g(actor)f(boundaries;)i(while)f(this)f(fusion)h
(strate)o(gy)g(utilizes)f(our)-150 5347 y(scalar)31 b(replacement)h
(optimization,)f(it)g(remains)g(obli)n(vious)h(to)f(instruc-)-150
5430 y(tion)26 b(and)h(data)f(locality)-5 b(.)26 b(Performance)g(is)g
(normalized)h(to)f(unoptimized)2042 1402 y @beginspecial
0 @llx 0 @lly 684 @urx 470 @ury 2448 @rwi @setspecial
%%BeginDocument: arm1.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: arm1.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/18/2005
%%CropBox: 0.000000 0.000000 683.039551 469.040527
%%BoundingBox: 0 0 684 470 
%%HiResBoundingBox: 0.000000 0.000000 683.039551 469.040527
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -469.041 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 469.041 ln
683.04 469.041 ln
683.04 0 ln
clp
671.161 20.6001 mo
671.16 377.241 ln
79.4404 377.241 ln
79.4404 20.6001 ln
671.161 20.6001 ln
false op
0 0 0 0 cmyk
f
gsave
79.4404 317.84 mo
79.4404 317.96 ln
671.161 317.96 ln
671.161 317.84 ln
79.4404 317.84 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.4404 317.84 mo
671.161 317.84 ln
0 0 0 1 cmyk
s
grestore
gsave
79.4404 258.32 mo
79.4404 258.441 ln
671.161 258.441 ln
671.161 258.321 ln
79.4404 258.32 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.4404 258.32 mo
671.161 258.321 ln
0 0 0 1 cmyk
s
grestore
gsave
79.4404 198.919 mo
79.4404 199.041 ln
671.161 199.041 ln
671.161 198.92 ln
79.4404 198.919 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.4404 198.919 mo
671.161 198.92 ln
0 0 0 1 cmyk
s
grestore
gsave
79.4404 139.52 mo
79.4404 139.64 ln
671.161 139.64 ln
671.161 139.52 ln
79.4404 139.52 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.4404 139.52 mo
671.161 139.52 ln
0 0 0 1 cmyk
s
grestore
gsave
79.4404 79.9995 mo
79.4404 80.1206 ln
671.161 80.1206 ln
671.161 80.0005 ln
79.4404 79.9995 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.4404 79.9995 mo
671.161 80.0005 ln
0 0 0 1 cmyk
s
grestore
gsave
79.4404 20.6001 mo
79.4404 20.7202 ln
671.161 20.7202 ln
671.161 20.6001 ln
79.4404 20.6001 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.4404 20.6001 mo
671.161 20.6001 ln
0 0 0 1 cmyk
s
grestore
gsave
0 2 mo
0 469.041 ln
683.04 469.041 ln
683.04 2 ln
0 2 ln
cp
111 45.6802 mo
111 68.7202 ln
347.04 68.7202 ln
347.04 45.6802 ln
111 45.6802 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
79.4404 20.6001 mo
79.4404 377.241 ln
671.16 377.241 ln
671.161 20.6001 ln
79.4404 20.6001 ln
cp
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
89.1602 362.72 mo
89.1602 377.241 ln
102.12 377.241 ln
102.12 362.72 ln
89.1602 362.72 ln
0 0 0 1 cmyk
ef
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
89.1602 362.72 mo
89.1602 377.241 ln
102.12 377.241 ln
102.12 362.72 ln
89.1602 362.72 ln
cp
s
134.64 373.76 mo
134.64 377.241 ln
147.6 377.241 ln
147.6 373.76 ln
134.64 373.76 ln
ef
134.64 373.76 mo
134.64 377.241 ln
147.6 377.241 ln
147.6 373.76 ln
134.64 373.76 ln
cp
s
180.24 294.56 mo
180.24 377.241 ln
193.2 377.241 ln
193.2 294.56 ln
180.24 294.56 ln
ef
180.24 294.56 mo
180.24 377.241 ln
193.2 377.241 ln
193.2 294.56 ln
180.24 294.56 ln
cp
s
225.72 258.321 mo
225.72 377.241 ln
238.68 377.241 ln
238.68 258.321 ln
225.72 258.321 ln
ef
225.72 258.321 mo
225.72 377.241 ln
238.68 377.241 ln
238.68 258.321 ln
225.72 258.321 ln
cp
s
271.2 369.68 mo
271.2 377.241 ln
284.16 377.241 ln
284.16 369.68 ln
271.2 369.68 ln
ef
271.2 369.68 mo
271.2 377.241 ln
284.16 377.241 ln
284.16 369.68 ln
271.2 369.68 ln
cp
s
316.8 138.44 mo
316.8 377.241 ln
329.76 377.241 ln
329.76 138.44 ln
316.8 138.44 ln
ef
316.8 138.44 mo
316.8 377.241 ln
329.76 377.241 ln
329.76 138.44 ln
316.8 138.44 ln
cp
s
362.28 42.9204 mo
362.28 377.241 ln
375.24 377.241 ln
375.24 42.9204 ln
362.28 42.9204 ln
ef
362.28 42.9204 mo
362.28 377.241 ln
375.24 377.241 ln
375.24 42.9204 ln
362.28 42.9204 ln
cp
s
gsave
401.76 118.4 mo
401.76 377.241 ln
426.84 377.241 ln
426.84 118.4 ln
401.76 118.4 ln
clp
407.76 124.4 mo
407.76 377.241 ln
420.72 377.241 ln
420.72 124.4 ln
407.76 124.4 ln
ef
407.76 124.4 mo
407.76 377.241 ln
420.72 377.241 ln
420.72 124.4 ln
407.76 124.4 ln
cp
s
grestore
gsave
447.24 77.7202 mo
447.24 377.241 ln
472.32 377.241 ln
472.32 77.7202 ln
447.24 77.7202 ln
clp
453.24 83.7202 mo
453.24 377.241 ln
466.2 377.241 ln
466.2 83.7202 ln
453.24 83.7202 ln
ef
453.24 83.7202 mo
453.24 377.241 ln
466.2 377.241 ln
466.2 83.7202 ln
453.24 83.7202 ln
cp
s
grestore
gsave
492.84 18.6802 mo
492.84 377.241 ln
517.92 377.241 ln
517.92 18.6802 ln
492.84 18.6802 ln
clp
498.84 -432.04 mo
498.84 377.241 ln
511.8 377.241 ln
511.8 -432.04 ln
498.84 -432.04 ln
ef
498.84 -432.04 mo
498.84 377.241 ln
511.8 377.241 ln
511.8 -432.04 ln
498.84 -432.04 ln
cp
s
grestore
gsave
538.32 74.0005 mo
538.32 377.241 ln
563.4 377.241 ln
563.4 74.0005 ln
538.32 74.0005 ln
clp
544.32 80.0005 mo
544.32 377.241 ln
557.28 377.241 ln
557.28 80.0005 ln
544.32 80.0005 ln
ef
544.32 80.0005 mo
544.32 377.241 ln
557.28 377.241 ln
557.28 80.0005 ln
544.32 80.0005 ln
cp
s
grestore
589.799 154.28 mo
589.799 377.241 ln
602.759 377.241 ln
602.76 154.28 ln
589.799 154.28 ln
ef
589.799 154.28 mo
589.799 377.241 ln
602.759 377.241 ln
602.76 154.28 ln
589.799 154.28 ln
cp
s
635.4 275.84 mo
635.4 377.241 ln
648.36 377.241 ln
648.36 275.84 ln
635.4 275.84 ln
ef
635.4 275.84 mo
635.4 377.241 ln
648.36 377.241 ln
648.36 275.84 ln
635.4 275.84 ln
cp
s
102.24 363.8 mo
102.24 377.241 ln
115.08 377.241 ln
115.08 363.8 ln
102.24 363.8 ln
0 0 0 0.4 cmyk
ef
102.24 363.8 mo
102.24 377.241 ln
115.08 377.241 ln
115.08 363.8 ln
102.24 363.8 ln
cp
0 0 0 1 cmyk
s
147.72 373.88 mo
147.72 377.241 ln
160.68 377.241 ln
160.68 373.88 ln
147.72 373.88 ln
0 0 0 0.4 cmyk
ef
147.72 373.88 mo
147.72 377.241 ln
160.68 377.241 ln
160.68 373.88 ln
147.72 373.88 ln
cp
0 0 0 1 cmyk
s
193.32 301.041 mo
193.32 377.241 ln
206.16 377.241 ln
206.16 301.041 ln
193.32 301.041 ln
0 0 0 0.4 cmyk
ef
193.32 301.041 mo
193.32 377.241 ln
206.16 377.241 ln
206.16 301.041 ln
193.32 301.041 ln
cp
0 0 0 1 cmyk
s
238.8 273.201 mo
238.8 377.241 ln
251.64 377.241 ln
251.64 273.201 ln
238.8 273.201 ln
0 0 0 0.4 cmyk
ef
238.8 273.201 mo
238.8 377.241 ln
251.64 377.241 ln
251.64 273.201 ln
238.8 273.201 ln
cp
0 0 0 1 cmyk
s
284.28 363.92 mo
284.28 377.241 ln
297.24 377.241 ln
297.24 363.92 ln
284.28 363.92 ln
0 0 0 0.4 cmyk
ef
284.28 363.92 mo
284.28 377.241 ln
297.24 377.241 ln
297.24 363.92 ln
284.28 363.92 ln
cp
0 0 0 1 cmyk
s
329.88 272.121 mo
329.88 377.241 ln
342.72 377.241 ln
342.72 272.121 ln
329.88 272.121 ln
0 0 0 0.4 cmyk
ef
329.88 272.121 mo
329.88 377.241 ln
342.72 377.241 ln
342.72 272.121 ln
329.88 272.121 ln
cp
0 0 0 1 cmyk
s
375.36 224.6 mo
375.36 377.241 ln
388.2 377.241 ln
388.2 224.6 ln
375.36 224.6 ln
0 0 0 0.4 cmyk
ef
375.36 224.6 mo
375.36 377.241 ln
388.2 377.241 ln
388.2 224.6 ln
375.36 224.6 ln
cp
0 0 0 1 cmyk
s
420.84 345.92 mo
420.84 377.241 ln
433.68 377.241 ln
433.68 345.92 ln
420.84 345.92 ln
0 0 0 0.4 cmyk
ef
420.84 345.92 mo
420.84 377.241 ln
433.68 377.241 ln
433.68 345.92 ln
420.84 345.92 ln
cp
0 0 0 1 cmyk
s
466.32 299.481 mo
466.32 377.241 ln
479.28 377.241 ln
479.28 299.481 ln
466.32 299.481 ln
0 0 0 0.4 cmyk
ef
466.32 299.481 mo
466.32 377.241 ln
479.28 377.241 ln
479.28 299.481 ln
466.32 299.481 ln
cp
0 0 0 1 cmyk
s
511.92 312.441 mo
511.92 377.241 ln
524.76 377.241 ln
524.76 312.441 ln
511.92 312.441 ln
0 0 0 0.4 cmyk
ef
511.92 312.441 mo
511.92 377.241 ln
524.76 377.241 ln
524.76 312.441 ln
511.92 312.441 ln
cp
0 0 0 1 cmyk
s
gsave
551.4 75.3198 mo
551.4 377.241 ln
576.36 377.241 ln
576.36 75.3198 ln
551.4 75.3198 ln
clp
557.4 81.3198 mo
557.4 377.241 ln
570.24 377.241 ln
570.241 81.3198 ln
557.4 81.3198 ln
0 0 0 0.4 cmyk
ef
557.4 81.3198 mo
557.4 377.241 ln
570.24 377.241 ln
570.241 81.3198 ln
557.4 81.3198 ln
cp
0 0 0 1 cmyk
s
grestore
602.879 291.92 mo
602.879 377.241 ln
615.839 377.241 ln
615.84 291.92 ln
602.879 291.92 ln
0 0 0 0.4 cmyk
ef
602.879 291.92 mo
602.879 377.241 ln
615.839 377.241 ln
615.84 291.92 ln
602.879 291.92 ln
cp
0 0 0 1 cmyk
s
648.48 326.361 mo
648.48 377.241 ln
661.32 377.241 ln
661.32 326.361 ln
648.48 326.361 ln
0 0 0 0.4 cmyk
ef
648.48 326.361 mo
648.48 377.241 ln
661.32 377.241 ln
661.32 326.361 ln
648.48 326.361 ln
cp
0 0 0 1 cmyk
s
0.119995 lw
79.4404 20.6001 mo
79.4404 377.241 ln
75.1201 377.241 mo
79.4404 377.241 ln
75.1201 317.84 mo
79.4404 317.84 ln
75.1201 258.32 mo
79.4404 258.32 ln
75.1201 198.919 mo
79.4404 198.919 ln
75.1201 139.52 mo
79.4404 139.52 ln
75.1201 79.9995 mo
79.4404 79.9995 ln
75.1201 20.6001 mo
79.4404 20.6001 ln
79.4404 377.241 mo
671.16 377.241 ln
79.4404 381.56 mo
79.4404 377.241 ln
124.92 381.56 mo
124.92 377.241 ln
170.52 381.56 mo
170.52 377.241 ln
216 381.56 mo
216 377.241 ln
261.479 381.56 mo
261.479 377.241 ln
307.08 381.56 mo
307.08 377.241 ln
352.56 381.56 mo
352.56 377.241 ln
398.04 381.56 mo
398.04 377.241 ln
443.52 381.56 mo
443.52 377.241 ln
489.12 381.56 mo
489.12 377.241 ln
534.6 381.56 mo
534.6 377.241 ln
580.08 381.56 mo
580.08 377.241 ln
625.68 381.56 mo
625.68 377.241 ln
671.16 381.56 mo
671.16 377.241 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
60.96 381.8 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 322.4 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
57.0086 322.4 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 262.88 mov
(0) sh
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
57.0086 262.88 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
60.9093 262.88 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 203.48 mov
(0) sh
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
57.0086 203.48 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
60.9093 203.48 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 144.079 mov
(0) sh
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
57.0086 144.079 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
60.9093 144.079 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
60.96 84.5591 mov
(1) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 25.1587 mov
(1) sh
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
57.0086 25.1587 mov
(.2) sh
346.92 45.8003 mo
346.92 68.7202 ln
111.12 68.7202 ln
111.12 45.8003 ln
346.92 45.8003 ln
0 0 0 0 cmyk
f
111 45.6802 mo
111 68.7202 ln
346.92 68.7202 ln
346.92 45.6802 ln
111 45.6802 ln
cp
0 0 0 1 cmyk
s
121.44 53.3599 mo
121.44 61.8804 ln
129.96 61.8804 ln
129.96 53.3599 ln
121.44 53.3599 ln
ef
0.960007 lw
121.44 53.3599 mo
121.44 61.8804 ln
129.96 61.8804 ln
129.96 53.3599 ln
121.44 53.3599 ln
cp
s
202.8 53.3599 mo
202.8 61.8804 ln
211.32 61.8804 ln
211.32 53.3599 ln
202.8 53.3599 ln
0 0 0 0.4 cmyk
ef
202.8 53.3599 mo
202.8 61.8804 ln
211.32 61.8804 ln
211.32 53.3599 ln
202.8 53.3599 ln
cp
0 0 0 1 cmyk
s
2.5 lw
0 lc
1 lj
79.4404 80.0005 mo
671.161 80.0005 ln
0.0235294 0.0196078 0.0196078 0.992157 cmyk
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
495.04 14.04 mov
(2.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/seven 
<10bf317048559e9c292b4762aa54ba120a145df60b670d87c36c3ee92d5b
39c9648a6d5ce1131c9257911f8bc7e67b7a2848cf37308ba0025304ca48
4c163915b2d4c913b4486d09> ND 
end end
end
/ArialMT findfont /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
55{/.notdef}repeat /seven 200{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
506.749 14.04 mov
(7) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
98{/.notdef}repeat /b 6{/.notdef}repeat /i 4{/.notdef}repeat /n /o 4{/.notdef}repeat 
/t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
69.4805 428.96 mov
-0.0098114 0.00984192 (bitoni) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
end end
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
99{/.notdef}repeat /c 156{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
93.2422 405.199 mov
(c) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
102{/.notdef}repeat /f 11{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
135.479 408.441 mov
(f) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
138.218 405.703 mov
(i) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
140.404 403.517 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
161.52 427.881 mov
(ff) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
167.036 422.365 mov
(t) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
169.794 419.607 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
173.04 416.243 mov
(f) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
175.798 413.484 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
178.079 411.322 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
end end
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
101{/.notdef}repeat /e 154{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
183.6 405.8 mov
(e) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
193.198 441.802 mov
(ff) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
198.715 436.286 mov
(t) sh
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
201.473 433.527 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
204.719 430.163 mov
(c) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
209.759 425.244 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
215.28 419.722 mov
(a) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
220.802 414.201 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
115{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
224.04 410.844 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
229.079 405.923 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
51{/.notdef}repeat /three 51{/.notdef}repeat /g 8{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
258.239 422.244 mov
0.000244141 -0.000183105 wsa 103 get (3gpp) wsh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
272.28 453.683 mov
(b) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
277.802 448.162 mov
(e) sh
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
283.323 442.64 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
288.844 437.119 mov
(m) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
297.114 428.849 mov
(f) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
299.873 426.091 mov
(o) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
305.394 420.569 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
308.641 417.204 mov
(m) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
316.921 408.924 mov
(e) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
322.452 403.392 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
336.121 435.444 mov
(m) sh
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
344.391 427.174 mov
(a) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
349.912 421.653 mov
(t) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
352.671 418.894 mov
(m) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 108 /l put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
108{/.notdef}repeat /l 8{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
360.941 410.624 mov
(ul) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
368.633 402.931 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
383.762 433.284 mov
(f) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
386.53 430.516 mov
(m) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
394.81 422.236 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
398.042 418.883 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
100{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
403.564 413.362 mov
(d) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
409.085 407.841 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
411.362 405.683 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
421.922 440.603 mov
(f) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
424.671 437.855 mov
(i) sh
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
426.866 435.659 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
429.152 433.373 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
431.915 430.611 mov
(e) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
437.426 425.099 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
440.668 421.857 mov
(b) sh
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
446.18 416.345 mov
(a) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
451.691 410.834 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
107{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
457.203 405.323 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
461.883 446.123 mov
(f) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
464.632 443.374 mov
(i) sh
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
466.827 441.178 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
469.113 438.893 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
471.875 436.13 mov
(e) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
477.386 430.619 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
480.629 427.376 mov
(b) sh
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
486.141 421.865 mov
(a) sh
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
491.652 416.354 mov
(n) sh
/ArialMT*19 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
497.164 410.842 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
502.211 405.794 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
531.362 422.243 mov
(o) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
536.884 416.721 mov
(f) sh
/ArialMT*18 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
539.642 413.963 mov
(d) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
545.163 408.442 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
dup 101 /e put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
97{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 3{/.notdef}repeat /v 
137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
563.163 435.923 mov
-0.00978088 0.00984192 (aver) ash
restore_ctm
save_ctm
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
582.503 416.582 mov
(a) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf317046e845f3a98cff800425d1e47fcbf03f8b922783d5d36e307274
588ac60409269c037388a43cef04e921c8e3bf34e51e4a003e0b37bf8d31
c8fc8fb6ade393cdde44b4581b0ac925ec1f59a1fbaac3d1fb4e14f63283
84b7e26e832593dcad7ed930aa23e0b99c4561c07b07f1e2fa1eb18d1291
b9cf9003790fe409a130d99f5be39512a2ad37a7efa7c41860134fb79153
f4dd79307743390ebe3ee1401c0a499a781dcdce2157d130f5efa9fe3806
cc6c1819edacc0285ad54ab702e08879c56aefcc591124daf35783236ce0
3c246d126bb7a939> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
588.015 411.07 mov
(g) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
594.069 405.016 mov
(e) sh
restore_ctm
save_ctm
/Arial-BoldMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
603.123 441.443 mov
(g) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
609.187 435.379 mov
(e) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/Arial-BoldMT*3 
[
109{/.notdef}repeat /m /n /o 144{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*3 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
614.708 429.857 mov
(om) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
629.6 414.965 mov
(ea) sh
/Arial-BoldMT*3 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
640.643 403.923 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 244.16 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
32{/.notdef}repeat /space 87{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 236.351 mov
(x) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 229.331 mov
(e) sh
/ArialMT*9 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 221.523 mov
(c) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 214.503 mov
(u) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 206.695 mov
(tion) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 184.058 mov
( ) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 180.118 mov
(ti) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 173.098 mov
(m) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
20.04 161.403 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/S 
<10bf31704ab370a8a6c235279ed6c3fdd90391cf7962d0bccf3c0194207c
c985977a6da764734efebc21d6d1ae7133055444822d0fe1b965fdff1b05
ca2046c91bc219dee9d6de4fdbddec5d689eb735c6e0fa560831344d790e
3093e69a2340f4515581fc3f61c364582542aaf4a1803981e90247b3d87c
b4e83921ea1ea0fe7cb2d933b6761926389626e21ef635602b61796dffe5
8975cc1e5a348ada717869e184044d1b2d3ccec5d895b1b22a708b5514a1
fa0b8783acb9f99b94ec8c3dec98d4fe3f7d2f5da5a832e0f19d404c70f8
e5044360ab5b726faeaaff503556ef3182da97e4b93377852f62756de8dc
3b6de3f8b74afcc5f5fe> ND 
/z 
<10bf31706d7bdb7f5f74128c9bb1cf0445a721a78dcf191ad056927637c8
a135f0f22faf7df308eeea1c66e39a72a677a3dd701da853bf390cfc0a58
a3d2> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 83 /S put
dup 122 /z put
pop
%ADOEndSubsetFont
/ArialMT*21 
[
40{/.notdef}repeat /parenleft /parenright 31{/.notdef}repeat /I 9{/.notdef}repeat /S 38{/.notdef}repeat 
/z 133{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*21 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 314.24 mov
(\() sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 309.55 mov
0 -0.0140381 (no) ash
/ArialMT*10 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 293.905 mov
(r) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 289.216 mov
(m) sh
/ArialMT*13 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 277.507 mov
(a) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 269.684 mov
(l) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 266.551 mov
(i) sh
/ArialMT*21 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 263.418 mov
(z) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 256.383 mov
(e) sh
/ArialMT*18 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 248.561 mov
(d) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 240.739 mov
( ) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 236.785 mov
0 -0.0140228 (to) ash
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 225.048 mov
( ) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 221.094 mov
(u) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 213.271 mov
0 -0.0140228 (no) ash
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 197.627 mov
(p) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 189.804 mov
0 -0.0140381 (ti) ash
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 182.756 mov
(m) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 171.047 mov
(i) sh
/ArialMT*21 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 167.913 mov
(z) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 160.879 mov
(e) sh
/ArialMT*18 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 153.057 mov
(d) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 145.235 mov
( ) sh
/ArialMT*21 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 141.281 mov
(S) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 131.902 mov
(t) sh
/ArialMT*10 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 127.987 mov
(r) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 123.298 mov
(e) sh
/ArialMT*13 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 115.475 mov
(a) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 107.653 mov
(m) sh
/ArialMT*21 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 95.9436 mov
(I) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 92.0288 mov
(t) sh
/ArialMT*21 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1992 88.114 mov
(\)) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 70 /F put
pop
%ADOEndSubsetFont
/ArialMT*22 
[
65{/.notdef}repeat /A 4{/.notdef}repeat /F 185{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
133.32 62.3599 mov
(F) sh
/ArialMT*17 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
141.896 62.3599 mov
(u) sh
/ArialMT*14 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
149.705 62.3599 mov
(s) sh
/ArialMT*12 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
156.725 62.3599 mov
(e) sh
/ArialMT*20 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
164.533 62.3599 mov
( ) sh
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
168.434 62.3599 mov
(A) sh
/ArialMT*17 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
177.799 62.3599 mov
(ll) sh
restore_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
dup 67 /C put
pop
%ADOEndSubsetFont
/ArialMT*23 
[
43{/.notdef}repeat /plus 23{/.notdef}repeat /C 188{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*23 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
214.68 62.3599 mov
(C) sh
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
224.819 62.3599 mov
(AF) sh
/ArialMT*23 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
242.76 62.3599 mov
(+) sh
/ArialMT*14 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
250.959 62.3599 mov
(s) sh
/ArialMT*9 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
257.979 62.3599 mov
(c) sh
/ArialMT*13 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
264.999 62.3599 mov
(a) sh
/ArialMT*17 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
272.807 62.3599 mov
(l) sh
/ArialMT*8 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
275.926 62.3599 mov
(in) sh
/ArialMT*15 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
286.854 62.3599 mov
(g) sh
/ArialMT*23 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
294.662 62.3599 mov
(+) sh
/ArialMT*8 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
302.862 62.3599 mov
(b) sh
/ArialMT*17 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
310.67 62.3599 mov
(u) sh
/ArialMT*10 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
318.478 62.3599 mov
(ff) sh
/ArialMT*12 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
326.28 62.3599 mov
(e) sh
/ArialMT*10 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
334.088 62.3599 mov
(r) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (arm1.eps)
%%CreationDate: 4/18/2005 9:53 PM
%AI9_DataStream
%Gb"/LD0$Z:Q1!h9.fG.ui[T6J!gnG)mMYI@8[`]JTd.OBGFbd/W?;b8YQ5%7"Q_&2r:bQ0kF<S%#XB^Wg0rgkZDhR1oR!5)F1UP@
%c^q5@c;,8>n"-W[njPDC^9'lM2-"=qr2#/Z55X^H/A@Z^?8%Vb[7A=ecPjdO\98l*NT?bdQ`Jfig&-6h@_J5T0/&s#QE0]?(Y-uq
%e+;jokrX/HXo:"]/lt8<:R9J_T8%L&?Cc#1m,RbJ]):\:hYaGR(d2"R:Go&7rU/t1@_%kurgZ#)Z.7B.LA+,Z+iCs_DlUjUX#KY%
%bP?qhd_C8/XJt"-=1'rq>A!Ks@eFV%]m0S)b12b=</rbaFs^.RE_4E-_sKTk0!?ldlfi#h[K_d,S6`jq7J"r7Hg(.aq^H\\g1WJp
%Zm"hMrd(i>J%]$X9fJ@(&Mo%Lme]WpS88Y_QN-<![_+Yl^Q>"ST5sFfI$7q/a*7."7f&3hj-60bo7u35p\B`Ik'sO[o]k3,]*5+?
%=IoK^F-Mtjd!ia!?VL-HZmSSA4I53Sq:k/aEh``:[\Y7[q7P-95JKJ/-#4fMV15=Orn$i]jhHqqs4_#[.AVA,Wi5m/Gk!*Vn6-sb
%<G^a([gI#V"8qnLK>]OZS=a(<Vjf]o`WnF<$jk0<VO\g*Y\XjYZ7"h9gj+7S7Afm9`Vdb0WY\HR$"#mnqJ4jCa6UuoMndCu`oO1b
%lZ&9Xc*pctq>1!["n4l`m'QIFX4-lBpX!+=H9&sI%Msj!>)ATpot1#(BX>@gqL;AMFa<_nX0\#Sa8,S;1t]KjIPF':\bZhsGa(O!
%2'L,HYVf.>Q>8,]Tt;]$F\J+G/'XdtZr#K%fU!BUK?r/-GDl&GFDtK](Xn<<qV1g^,FPi\>f6R&2_oJ,hTmRarlob/\qT84X&f8Z
%SB($TY:G)\2-Hm&Aq"V'nC@@!e(#=Z#\`e^'7ot#6&=XfS\<kYi&g2plGE7\);d&AkCS&eX7]X7\Ia'86`N'1X*H"YD8./VQl(+L
%hG6A[h[7?'c<$M#Dgf5?JccoNku0ps:D^?3FaA1-]g558M8I#sT$==Me^O=ubCB?X@P13Uc1kn^=YKbP]oj\?lak8Bf5^TGO+ZGQ
%05!$Nlu3s*IQ?$H;$b(J^RM>A(E7'sS+T/\!M*5c#*=CJpeU/7X7P!O<3GddWi#+ToHU8'jDC@NDq/AL.jJW+M^t@khlF4Q9J0?^
%f#"_]//RL@c)OsMVPf`*<_^k?+0K2#Wep)cp"UorMrj3PpX;!cs*l%7iNGI>f9b%c0=1E'jRo"]B"<6ZEAQ2T):hN_EM%/MM<3VJ
%fM/KeV8AmDTp;mGC08(##H<9N=jG@ND;J?TIf&s!VprVF#^Rr8]<%m-VkrO8LAe%Ga5Ntb/GZX&`CK@8:;P<O,uk`DS,)ouFD9du
%,##5thooXCZcbrHdC-_!kPU;ODZI?^_??%cqTf3S;sk\&'SMoLBCG#]6;(t_lL.X1DmEQfQKE[%SB>%5]ir(>0/)L8]mn';38FE/
%0D!l7#Cir6/C"\sU>&2Mh`_7_$qj<DqrN9mY7K^%aHQYMk<E9HYt%*5YE>/W4aZr(K%NW@_$L1Q3qDN6;pBjl_J>sU'@m^U+g6L'
%YmGg.$<aN!jeYGq#l==nC:]@*?7:!fR>iJkJ^1Rj0"_hfNMLA$g.Ker$a+6MoMN4MFqLQk;aoZ8kZ$334FCUTPa6O(X/'eK+tJt&
%;2!7r:q-V"QI2B>:2VtWW:W&RXtJlus1d<_^KiCWH`P\&?S1/[kmC)6Aoo&t8hpr?D.lILY[1?:A&mAA2EirY_7%f!$bs"/8?Q<Z
%)U)8@6$c=)^dTp"a[0,-VNL[cXLMn);+?59dAosq43)cde$]`Xm\]W-h8R:_"9U&fJnaGC3F,(Elg3c7ojeTA"F?WGG,EC>3crm<
%-DQ+:;@<nr8Wt:BK;9778Qeu@2i2F=gC`4McbJ8UOA92pjt%bqA3&&C+/JCP\Li)bhS-SXS*M37S8#k)/A!T,Z$@pDo6s$>f8o9E
%$LA&A'aQN=@?nS"HifO"@PRp%WX,`P+[7k7a9pe8>+VIs3Mco;[D#C9"2N7Z%#Kre)2""VE"J/6)SsH@&41ph^l'Uj$-:m-kXWKr
%'F[`>Z7oOOFD(hhCihH#/>+&[i@H4m_!qQK$go/%g*fAm;5,o".CG?4P9<=&as:n@l.P=rA8!_&&_nTQ2Ju*3.@=YK6J-,-B)Mf!
%mX^QV,_6"0e'(C6"sq)Gh`<qUEZ^YWN=5m@ciV@t2]5pH*ClN"D"S[Q(6T_@iY7_VbB[<L[Z\LD=*IK]NoEWSV"GuPc9!?82;<(P
%\#<*g#"eIRKTnDe]!<d0[^3RLgpoRaZ<[Mi@JrPkbRqB'1_`*/!:=@V+RYH!@<!JO:BS2l5Qnc<JLloL,nM7%*bBhsEYQZSeSgs0
%JlD`5@]r)T!.7oUZ6U0+gHi]rFOM]84k(+['_VOV8rCNtnmG.R9?h0nZG\e&f4%^b]:Leg!`iEZ#\kS<(IP&["Y_(*%4sh4Z2q)E
%B;9L/7S:]0r+a<5q$`"Ci5de/:^S3\GKR&)S'9L3<+AI`H6dO"FFrf2J^"N7[9QT`D!=rgB`tK2/@@D@/5%PPBcGJk:!qG2^7<Q3
%jF+e<YoR4AggW`/^^QVp?>8.rN<F"VZ$l<Sq?fg,&h&V=ZCk:H.lV?.(C\IpEX([g(#b^V1^JdK!QB2QU^V=`r+*u5Pg)fi%NGgJ
%%RCjmBY6%sWn+"(6B$S6qQf#X><l"E7%@abi[fm/UK3flP$2P*X?)NL#)I7lRmuA0Y.@AO,j<s/jliLZJMKLn)*or+as_o1F\JHP
%!_^8fEe1ZPc6,LT`doTtUu*j96sZZ<nlKW@)oB&TWR/^3?B_0HejrYR79UM'd7g8S"T#I*F](Q8ANPM97qg+T$]U-3,8bt!>&*j?
%U`9pts-*,?0i2ltatKT"i4K`e84"5b$nqEO)jZUPC^hkYq&K4#.6g<X5`BP".:`cHdMBO<6@j7cA`kj!qB@?j$(S^l_+ko&7[\9B
%Q3@>ga-uj(82[_=Iea*TWt[.M"-#RQOdQAFjdA(0eA9U1#K`'Bb+A^Hle93T<#cWLC9g$'!^r2.;c]D^TS8u-'m4'+>7+@Q8@^E<
%U+Lm&!kbUF;lQusIY+,IJ3:meJRhl.-u?LgY^4CrfrrbbK)*Y[9W<:H;^1UDB:<e-KY%8]h'RP;N^[)uS'8]Zc!6FI07=@`J^t@J
%%?kq6I9lPub(@cK=q8L%Wg"jr5'bVfVS0N,"]E>A8s]PoTZu,tHAa2c+Gs^[/]HVCr"?LMjR1)Rj:S+!2Bcd"`^#O%@:N#(aO'[p
%CauD[(UoQ9X-0/qJe=X\6A?[C$"a>"6Al4fNeA$A;(Gq8C_EMi'tONIK1ZeT,-?Z)M`ab5(hjY&WR`HZ$)l+*>U1X^"V?0I$aQKE
%7$pNW?q5%/FAoN1K.R\9,=$-klX[e*RlS(@^`-N3K?-*M"tEr[1nr/VN<hga"NV*6(+;gPNo`iKJ6SZY!$!4X+Mj..!2;f:'.>h.
%*uRf+jk2N-'%lS#=?=f&!N1aU">S:OBgB]a"qsOmC=_B:B$,m+(4bHN:DFD%"FGl^m/Rlq<k@!Q&J5Ph-#1Sb>q]=&2B`18;1YWF
%!C/n<R#e$Al3N"b]g^q6_@Vt^n>WJ3A.'DELKN\b$bDGoE!=[6+Kg602eZ)s8bJ74Mer*DJ-eb\&4lH[:"CUKABJR[92MW''V]'O
%#Hn1rQ$EZAU/bP>gVA2I*O1nJ44+`HJ>I-M9>H6X$d],d)&?aYfdX@^'P=W*:?WGrAC&hj0daaK:l;Oma,c!S:bZ0HFqH&DL_74D
%+pe]8`%<!C<$23sl);(*"ULdL63E4(iaG3'_.bea\Ukmt%]0g=;/a<g,!h.6XhiZ*_+Y+8jJ&7NY8n4h/1C`67kGEg`Fh$@&ot1X
%2AEb'R6gYXA5hoUBhs"rVEC_Vj^-if]`KBLRa/]aLIW"<Ehm5f(ki[jYS,(kamTD9^un">"S$:t+@);:e:Wirb/3"?_tpO4Qia>o
%21h2.9h]91@Z"*aKXn%KJm'LZ3!r(s7F\R-?92QD79]:2#mq_A1LW^c'p5R^Jr<9/0c9Mk/0Xa9Je;0<+FSo'NZr)`B2^<925Gb_
%@%XJTYA:HJJTk7^B/?7_K`nEK4QG,<3?<f.Q#f";12[,-#QUUl$;X*',U#4C#jdMCN%g-W\qQ_!:tiK1NGC?q.#jF!.hH)%JK:_`
%jUo#]$6aIi;dGJdd*>!Gd@K#$Y`H^Td"X=-S("mWVb4j)W2?:)-7H(g<F(cIW5GE1WGRN5Ru4H1gU\Y#-I-:G]Ca'd2><9BY>!+B
%bUkLMO=)HD#>"Jd+pJ!t`3M^h/hT[]W+dU]!@UNTp?':Emcd9%:W9gLW+uF>ct02kW;H_e"rYi<1i-"\\sJP0f!M\.e^'4=5m*n`
%&VpS5.@sZo5)o,Pf5r9'NnUr44k\6fE%7''[Yq7G.0+`A#oZWs!+1HnY**m[=<YclR"MpQ-7,LBO@^(I<gGKE8sG<q&6_l)>F3-[
%CP_#B.Sp3bU/O*'=\tr(<]bX>Oi;.]TJK-=G3(.0AS#/-L3cBaOU)9qRT4N)C/L'=J1fA*$;r`L+$l,rFXh[_</!a\#ge4P)9A>B
%(!OgNI0u'AYL1@k8o>m8Ukb8LTP)qYLh+'F`e;!ni.;.'%2C*%a)3d^E>7WH"b,j\gTGZ&^LWM=ia?,GA5m?JUNG*8P?RONrsk3H
%DD4ZUWP6MlN4ErS/`C@Z51>1mhPEN\N5jgWrA8j\7t*o,LN=#3.X546.UbLqNt2s,hZ_imVX(_CUk^?;2H"m]1Je>",,>n!PNe:Q
%82]>P-"Rpj:GN5okEIh\S_E2Q)H>;OaI/_qJ.;aj'>QdK^mnhiL,#/AJ]Y6\ZA#2G$3lcPQ"4[W'L:<qW.LqhZq/'k7(]CTNeY;F
%j([P*r<"kfU5(HW!&I0%Y_3-SS$k4-#hZF:YiRa\3/EBJocV#@nfPGp"Uqgu:gt9GPA5+T(`[CP/1j[:P#"!\N,!Q;$T\QF;#q(@
%()Vdj#j%:8Yif7"`G1c?F%]4/RT*W,Y**1W;:^at/3Z-l.``#`=ZH#1\Q2fg-,N2=`+:gqc.""06!ReM5WJF/0X4lE9t[C@&npM2
%)c;]K?UDga'M!Hg>XKg,@OCH"SfS+)p$"McKd>4Tm`\-:f`_Pu>2;W01CY=KkDK=4Ko.\*&9FVP=$XpO+.+`QQ0pl\]1t3jkaVVf
%Vh.)9L7opsp"R,"RJ%^;r7+9U@YT(c-Y@'g=9,"X6o;We=9;rCnR)nPSg7<("99TDG:eRcBp_qM"X@b=3<S9A<s,g.dk^W?VVIPZ
%3pg93`P\V]/_1T8!G#[9JRGBVKF%VtaM^p!Bk@g%;Wc2l"V_5WY:9b>TOrZ9e7D<h1]\CV,H7"Lm>M#q1B<NjR%Y9Ja%#/W8ElML
%@0C+QR&35Oj$He45?"`hOs"V7AR#B@<>$)c6Cl5:q(u#aXYtPj+[b9-D!%=$IRr2oHNN7b3Q3GK_iFtj"%MS#Ns2A>*h\t+:BQf<
%'`^XHkVDrZXG'7bBn_`T[2hBZ+:Go#`dD0rqY7k<4mh3-q-6_9+kik1.$QnmX#?fJ6bFD`%P8F4P`+LO[S?C#.2^>;4ROsL/..,Z
%VF_U<81.fn#DZ/%_+$br_TI%igpf5T4)r]!UlKUAV$.-?BK?KG+RN(/m?\C(M@e9TM5NZ[PL0.8g7Z1]PDQuQoPc<g5_:<%KKofl
%0JIa-j-c^a.t7TH^fUZ3#rE,mH]&[gPJ0%a:AZ([P'n'F5[U?RgS?IrWk*$nh1n:EXNE=ahB@*Zg<hB:qJ8%rfT>XGdfN7i60eoD
%!#)4*%>(0l_%?H=48:EQ3C0;a5V7sl"C\Ke,8`UFlD'*qMX]9k#29/3Il?mc0?^/"W]0>>M0.Q=ih5,-Q9^]M*k)?Km>+;XRRE)[
%L'LK]=EHC.#u1Wb6:MrH\j4E`"k.s0Dhbb&$^.iAH><)d<LpG-mZ@)V2@B0L?rL%GKKo_#_e3#0">X"S#:Rjg2PjVsK0;L1-3Dj8
%#%kYU/A%tf^"/I2L0R1Tk9XB68jtERReSo?L/2"ba#2;]6OTYX5aN&iIC+eM/j=)\[eNU]JZif<p/'j_lAYr]JXF;l!bu#ro'dW1
%j->1U.tBIT5=c7!F/Bjoj4+i6(=I*Z%5MRI2cp;5$5i/_oZ,T.(ij"$EQ/on:TQafi!>4@I+rXpW*j6:2-nTHS_>3hLK;@I67W2>
%eD%1b#,>*BqD`dYeS)lb[S@NYK!Cu599no,/HB8;O4#oJ8*QIo@9Dn_'"j`(KT7*sLhi)N6]=0O$ebZo.?e2JS$$+8k`/b^Z?]6s
%e!Qu><[s9_IZN;<2B,9X!%K[g=9=qQ!l'fGh.`eK[R#f<k\l9-6--C4RmXjjp2^aBkkDl2SJ^j&8t1NG'j"2_m(7R/kZk%><`Fs.
%m=UXbg0RCM<FEW-6u'o:Jd;[39a_88$:Y_UkKLX.%)&>S78J*cMJL_SECrK:Di#!`q1*:>aib_cZT%t6Yn16l)/!r6GQkA_.6,ls
%7:K3,"TUE,'LcuGePNG=bqLst&/GW?;i1YN;G2dtX1)2_B^QF+?A=k('F'6OdZS]c@ijKu\S"ic"\A4LSi/;WdUpm(p/1sR[NMQV
%!:i)nIt4ssP*2j:&4[[']S.^]-%r$,XIkV(3Wi/?GJUelgD\/H\`j3V"9>54S"VSAU4B#f3gSD#8toIBCmV[\O=M>7b$<u[2:#)A
%rA`7s^Bf*<2F_6K5)7UK5uLY5$YWqq)JZ'K;_q.r,OAB3L*[VF"rA#ie%33rbj69NEbAtlMUuS]"NfOJS)?+_Z.hjYF\*oYZ4]R6
%0$ujIZfnG:;%BA3]]m]&#ld^/3Xg$dI>Z"*Bq]'LU<N7j5YZ-p$"Ro-Fd`He:gKqk5\U[t38DtV6X0k+4e%1<0*2J,JUg7c.T+qr
%Clkk)BSWR9`j[\]Ucla8!-dM07fFQc"<8I\%-'VO+?21`0k-S@*,=[oesS6=!3i.WdDQ\TemW*(._,'U-Ai_/i:tO1W7X"(#VgrW
%oL/0b1LC9gQjSH$@r*&;&SFe5h(fSR;6DVcodPZhqA%^?KHN4MnXfHniZCVr7b6/GqmsQH=?g&fCcIn^#BiI?D?Nn=i:tAeXO?_h
%CCJ:_;t;_b[]Yk>K*o@<7k);h!d"""$(Dik_/rN=Jl[jJ;'sI?C'-?c;.De$krl%>)22H*7T3%3n+ei`!HqI&=]/!1baG'gSs-_=
%3*E#@K@-'t[NK=Hs.(XGGl$4-RjmsZ)MSCfhO0TN:^?fi=AGBS;U@?pajNJ:B#(8-Bsi\k,:o_#B/WMN.,-0ub>jtY/Z@+30bps+
%U$e\Z9\gP_P!p*CI<)j!9j@:u%DL:Fe^qJL-LXB)n+>Wt(7FHc1(VIMC?MRu-ck'C^86Nrl$so'(=EP2L.-_:RJG/JqpRnUP'%'p
%5-ETs[u59%Ha2=%X/qpe1W`OY_4*WRPh?6e`jFdDS-7j]S;1u$.KJi=$OqTFLd.KL=liMa@Ar\1K)JSudE#p=Cmpes%0PNe)amSX
%bWJE!%Bj?+StSW5A3`KC[P2&Dg5h@O%DrHf+:0(qAAPL0J@h\Tn;15RLC*!n=Vb0i_Eh0i@9>BH-g27h,G$rD,WW6e%MD&pDNTUo
%0B]5,1.=(*AqjKrC5Rb0bJureRmq*Oq#K4O*Nb%&)g#gO$u44EOebib7RSUN:*W06E$8]u=nr/!CKc'j/@E9n?uCVu#tcE:?1H.Z
%*Wa\C<>PqO(#81HnaGCJf4,6koGDJ$=D%hGW.iC[Bc71c!4]T@E!6?H37*\t@L.VJ1!nJae@/;U%2R_;dN9/[1s/YS:mdOt2hOLp
%f)h.-j,.QeKSH850,3C_c)f)*:lW*&.p0/>%1HVa-mdSH`n2to\^la]mFL3j5f*%Z:0llqdm4N$SPd\9pLPI,:/h;[FqsYOEYqJ9
%VcQb@gha8m%QO-_?u-/dN+<?cB@K4W1$8o9&?2@Se7KiCq@s/[R=\o-:-0#2FKHDU%eD,#k3=TCKum;R@3")E5)M2.1t`9L_%`-)
%.#Y2rN4p0"^CRk=AGTcseh"4bBma^D(LW>56qBgkJu:QN+':7Wi6a)bc.4)ilr_1mYJ4fV"@VIW]a;q<(?lM/CJY``(9r6kMceh#
%%n!h%3B+daoiM7Z0LGnMB89P_6.`sHNEN<rf5AF%1U$nAK(L#5_<[ZU=9:rWJb%qfmq>@KQ&8$D4L9`6F``9o%.qd/3AIMA<FLj9
%'58"[$e[=q!qpjbPs+O-afJm3Ri)X,MWr..NRgtZ"K')L'U+q3l\!:"eQNG`m^hL;Cb;iA;4QK:\r?O/IJ>(N%.FDgU`[]`DJC5N
%Zkls)ZjGUEPE$q0K,_[M3",/CoqBbA)%iq\#ZNKf+!UuSr:#(<,'7Y`;&c53U=Hd(>Jf'E_]_)S8_Zl`N0j[7-k_C)$`GWco\e=$
%60L>kZ\Ac!#E47T:uAX6P9RT9pdl@E"eV(VFV*)?7l6<c5a(,A)erPRD'R[nODiQ'Fmgci%L+@6NP-ZL+F.Tn2=I/pW1c(fm4]eI
%k,D54"oW2D]J)O[Tf?P5`*g+&bf',^)Ylh#A'9+.kRr8H>To7eTHj_]WHr(UZYGAlOoqIO#E#CI@a[fq^mJ_V7gD-Li`,i1D@%sG
%/79e4'#:aANJ:+lBa`#sd[%h)G+_m2k@8?V[8[f\N+6OGTZ]_*ppqZkC9*XCn5aCf_0ei7-"(#O#r;3,4Fg!Wof;NKOY87,\-X#R
%;A@acE"X#TI>Q(#-;;g\NJ%mG^C4qO65,O9BJ_.(fnN)/3Xm&;]b-GoUp,OT6gBtM/(AM>.g+j94doca"69BbP8%9CK^>oMGpRQ0
%SggHu!:A;.Os-h2-:rlg.Pl.*7=r@XB9jZYPJQKebR`C7L+Kj[,^uY"SnJPG[-AVd+VoW/YTpqY!guUP%dX4T$Q]165\)*C:.#"b
%`ghWYFfs>P?*3)^n58cGK@3!1pp?m;o%&cJJR:ugk8':tcUE@_O?"+=A'R6`mQud0DJ>_r('R$>8%AqdC4pOoZUUQV1NM^HI1Xl:
%akkkjL<6OZaAsPK1f[k[6)kdI_B9$+[M0^#YRG!6L,)jSY9BI-)MJM4N:aLQ-ki4BFsr+p:TKD"i0D8N`/.k/OdlWI=KIc?hQ1)(
%>7eY7>C.o6KO`V0R54Lp$"J<R;O(.<$=/m>kbH\g3^@`2>u8e=&Nit;8V6X:J5S&#WRQIs';T>@iDFoG/i.g.#D&Vk%]qe?M+9Fq
%?GdiJD_i.`9OYH"iaJsTa-$H$b'7L^A6_)Jg[UZ#3UB$%eUuc-OKJ]7&-WK0Hm3II1fqUP3;.XgTq$m374Gg=m31pegV\rj?%Q)^
%#&5J%Vs8=O*PcHaSi&Ug\(![I@\;<T\7\&p;f(JVf9k9/i)IohYMp-l:iaLf1=4&-q:i@S%QpMa<2DNSm;C%G+7DR1>p,BgStuq?
%;ROYTYSe]U8"#k(6DeJsL_L4Kf`Upj'fGKE18Q:$9a3ZT4"Au^*B,%ecJ!KqhYJ!dS4d>SndaM7nu3!X?=g.;3(9hP+6ChOT':0b
%&H[ue]\N]LGhf5mW)2"/aD>1.7X*U:f8C"OA#WA?X^2%SH(&A6JOK90Nm76C&OVc1V-\ApHEL`A;X[3M$3r8"C8C>/,>u/aHdsf#
%.9rm$=h:rO'juZ[^V+AV`PSJ*=(O6+kc,FIpq9;!@Ss0Od.[m`PW2a=iQ$V:ZraB3=L_=OV4+0c37&YL?`U50[aalEQA=k(d5.oV
%.lCFV.9\3T]b-!OeZeaF\5\Cb#iWbLC$i$M!s"IXV,Ae.9TM?f=0,N6<6P4O\_/%/kAd[<[S)LD8o7qW!l+ClJA#^MYgC:^^r<?B
%gZ]"88fCKR]i%1(Z!V`Y\Q:fB>]]V(&E:83^V[fh\5\[R8;rmGXL:Q;?a#^!?a3rHg%,9"%Da_<X9=WG4f/M\[TV:oDYOqV%'W1.
%VB942_(]DB[&M[DHF47S9)We+*Y),JQ4FG1"43qe&ecCMckMCB0-'<f:nP1KllhL_00Q%PTJsq'/7%NuID,>QPCrMEd\U:82h317
%i'Ka3AC4;S#@TnAOuQXD&+tZ/83Ie;Cq#RD;K$]Jm+2;(VLH;/PHpFSKco0'[CC-<@8'Jo^3Jn53`#HbESI)Y[=k'Y9dkGO[QQ`+
%mTNC\doS\kd$3('#A]HYV4O3SYHR=N)"tdlgp=1W]j)(oUGWAWK7aoDDn.76+s[lR"JLP3NC1*=Y]:8r\VF_,Z1Yp'_0XbBgk2oR
%+pM54.5f[U1m7fPTNSg\jP3+C8qm?\H2$W5^N0q-\a?)D5S=Q-o%8QL'1e8*X:g4-83-ukE?.dOkQRJs2qh<JO]N&888<.IpB=m)
%0'l1s>dFYqC%8W:'PKG%hV`Fjr_D"cm`uhW1KZ^6p$N_4\ak7<)Z65>#601fCJ[Rtcb4+5s1AZ^@o7/=UN[C'%DVuW1utG,a'kSK
%HDHRFcbrd6lo\Xk@mPG,(S>l&MG^(I73`Qar\%Lsbpt+*EY=>/p0dWFNL]_ANX#4qY>Om"2kWkF/m:>d'ku0,e:5s]&pE>d[KcT0
%E'hF%1W_%YC`<gms%EIFgNios84\Z<psbg'.UpPg4Vo2S6VCitTqN8#%.b(5bBg:C*UGV(!H6=]@m3\!Q<QFY:OkmK[S)Qo%@FF[
%E);tM+kFfe&Jr5:ILBc5HBXC2eku<^UV9NkNu5TLY1mAE[BoB$Uc]`r8[Hq;J2q*,(tQsi_n+K[b#+[0h:Qi7\@O0:ZYQb_^;C#!
%VFa0H_5%H+!WtH!3?*lmKi86=<]CYKH[lnO+NhCBUqNn$f&IVuKFW+hR()rG(lmnKlEm3s86jW5f_NQ<6Q0-Q][h\ff(1/J-Y/pc
%rZFa+pKQSS=*d9^2k`JoAp4X/p3m]nbS72)1ua_>,'bXF`]QCD"HN[@?n8;NCln6HfoB*9SWt6o1P7X"OubMt(5%@Enm89Ea.G&Y
%cRokUGZaa]9Fk)74EuaZV>+o1k!i2h!HC4K?+b*l63Cu6IPnQp2QW?:^976;lYT>/)>2o>[X4;STQ(PE&HT09?LMAP-IC7V'U6.l
%GqGrJd`b"e'5OYu`BmVuaHPI4K+NW:Rq#2Vi,fQ^hSDJsqW!0"mohm,!#&A7gRn-i)6_rWX_$=SP1A["ae'UJR4+V6j@CFt*:&CD
%<E_o;fn?\;!.Wi+b1P%Oh$/NjG(V9>)]<J9qa5.WMh!;1knP$[*jDFrY+3PN2FY<bD$2j8VaX*j5]4q&G)/NG_sToa>Do+lLWQKl
%I)K"S&rU-F%am8JgQ!'6BlH5G)V%?@o_'kQ2qHlQR*_doYWV^2_UW,P(<1+_0qi`H$&qoriU8"nZ6PCHA^pY['=6;hJ&Gn"="I5_
%Ci,CO:e/1^7-:\$"Y'ef#`/a&gb?_r;'RVPC>,"6:cNqpL=h;aBbMr@#cu;2^/ka[OZ+3RLD6pnAYc=,`N0<*>mS?I5Ob4"$\-()
%[U]dcphMQ(PcZ`@`-],)`<\f4&a*J=V<&_&fl!6u*$Jg*>J&.cYmWR>eVAD=lEZFG\lZ1L7AU@JFlhmc`e_DD_'Q&QR<()6_o7?S
%%-"[?h:rsX+'Fut`'%("NNRqifaQ8ImboeN>/Ord0MU^.$,gXb"\e)Qdt\Vkjq`%SY(!IMgPSR/O,Ge"%.k@#`S4iZ)Ln56?k*/S
%%$j.Q&;6"X6\`bIXi*$7)\XFD2W6OW"j+O[VHT&/o9LXj8@r!,C%O(pmMN45TS?<W)N`:?m@bUcit.?<o`07%>R=BQ3",m2JUR\h
%T1TZ9nVab/D%gmFQ=L64S6g!_U,NO1B^GeDmSru'#]NdNDhd$[TX$)Y8@b'o;RA!eJH@c"2<q]lA.`(!=:#2Wep?n2VK)$gPo'kZ
%o'4l)KWbNDPq9Kj$k>XIlL5#K_?S5o&sFfVhF!K]WIHH=&ODaL6^jFeHM\O(94M09DE#6*2NpPLUmLgZ]G[W.BJB^@+NcO*#X<tC
%^p+t5,a38N\JT*Db>%dhcrFtMLASQS?1ro8U65o=KTFkuVg"+$#!h9:#pFAK3:M*p!(1k!7dZKlFDGI,,XR5aL_(]^ML)`3/r_Aj
%Xp2r;UfM,CLrDYF^*(R$A$.9TM'Apt<5OsEZMu/SMEH.*-n8?#ol--9JadhjJ0-*-amNne9eR%1I=74i,s9srkG<E8Y3$`T&7=rY
%8#[>qP'N)qn#`oHFtl38A"FF@Zb()d=D$MYc;++B:[@D%HU<3D4l$?h;4BtH$`OnFhOnKNW=67Mo^KCcJ!X&[EZ*n1)X"q0h6>9Z
%Q9a]M5YX>5c`#@KhZORNog_/La=o)*qhLurMa82L^q8m#6;Mmr*&;Q:$fGb-6>i4`'H8ihJ@k2_+iZUNg+].B?FJDPad8r[qD,p[
%*FHgE-^*=`%i3Z.Y8AeBD2>l]WlJ7']f)J3^`jVY7_A5I@O<rj'$jZjia63c5olZ8n=n=WN6nSha5A&TM6FCA05hSXTI8fimJWrq
%OTIoU;$u,;)S#Z41pAXlb[oeCE*McO8-@olPoLc<l7!GgoZ=7^cTGeE3=(3QB',*8FK,W;6GZDAHC`&-E]9/8_t@p755N)3n$J,8
%%_U7\9KKqKGP[bL.Zj>[^cBpR4Ya$=hoP2KMmG%)P?J]XTD%3aj>qU,a_4m9DVW/pU>:rK21!(1-N4SrUsmGn8,Ojgr$-0%0OS8$
%0m\$9-f#cU41?Y+4QLU7]-sR=ncTB92T3oTaa<nEd4=^^ae,b;S,&nn?d>]):#<"M+6J@\)8(2M]pqmT/lr,"RX=m#oB+6Xio4uu
%.?cia^3_eGgI'gnArH?KlKmnYrg1aGI(ag?]"4E'T2*+i:"QH;ah+UmP&2l8D`<mC?\(=TgW5KMQsMH&^#/HfZ=s'-YMNMUmUdY9
%0ths!R@j#S=Y*A3PKeE"3^9+:s!3S0?L(Q@YND%teRghV]Ni702#5&R@_S-G?WN@`=Ygo-j$^Z?2#E*-nB%0ml;.$C2q'W[lV1"I
%#u&duk5+`;r+p@*Rf^#[=g$U5B%,l;C,:/8n`'NFI'Vo/e"l!fjD6lpYh&Y"W/KcfV:</hS8<XZ?!bXI/QV2Zk5BTimse&E=.B$H
%lj<rj$1gpN'Obd`q5M`8WO0#nhq!kiSP:bM=%eRPD=R2C=4=S,61Xtrq,[BsbY-UY-BAH;E!L*<NsE;m=P*:e5PrKg^uY#ePG^<l
%a]GQ-q21HrE>_aUWiu.j90L`VSdih)lcX[`GsD*F4-X?KCPCqTiVB.`Euia$^>@PnEjN8XI[iO8>QQ7d0,+1g.t9d^r-_r<&,PkY
%qpelCA\L>ALjcVBS4p?NBpm:h:j]3J:]!VY>`S&r1+UO&fBREoID2g7:!NQ]$SAd5;N!gWMn[D?QK)43>\W_.):N=s@:_n(HDcZ3
%$Y8I1>\V_=mHJ@u4BHs%O8=1?`V<Q@+$OrFQ%$iWq=iJo0<`[`?W=cR5T5+LXO+7+Wn6?*AGq;,?;4$us-5>KQ?r@V*u=_&e&%I;
%X8,Eb@;a\*nO`.01J?>cZ0T-:kod@Nf.qpoZHjJamdDdp,BA0en+LT^0(FM3a`#L,5G%IJou4fRO'[76?UF\NkLG5<eGh+3^0@+5
%/E_GT\pBBdL>P/l@>^Rn96U,%i=D!3e,T9#?iMaXs-C;>X&sdK^&"K0*"V/%e7D"a0d\QN1@FGb*^6ML1)qQ!G+%o/jIE5\%4=1T
%%@?"l<%'CB&"UI[F+&#Z58;4@5Pu7SE:(UPOeQ/Efll%-I(SK(OZ%ELG^j%'jJSo!Ye0W%Mrg5:r69P1Fn+hrm7KF70=,sJ!b(b4
%.88sro?-XrB;JTRpLNffA<*RGMpHmIaer(rXS`q"@TGWp?X:CL?ER>P^A.m"qlYt/]h,[dn.!>/q=AZudXJr3i-L`q^fonJSb.UH
%FW`@;TuKO6^^(H.^&+gJI_Wn2T4;hLTNAkeq;l]C)#DqO8]^rRj/9up!oqc&8'OR67.//Q.I]kHWJ'6E=\[MGeVkS>Fd93$cTr4^
%;"U<_m.6\^I^?\U>M7"`#sVVE&'"+&7>GCJahiZb\>//eJ0,I:6?+X;QjR9jer/#BEq.c0P">1?AB2(<"[3_PDh[qL[TFF&X?QH'
%5.+;7Y;Q[PpiZufD"1U*&FK0!W+Ce0:8Mmk!ZO@$AN4B#ROHh/n#rV3`TCZQJklq^d=4O<1D.moVjajm.`*-*S)*g#o/pA[Wt4gp
%"^nW>SBK'G?*#XpS,'Mc]`n[?rYj9Q@G$%Ce0lG(cDj"E%6b^=HTl?<CoG)kpI#;e,F5LfkLI[7-R0IT*V?gP-E7hk.T-a]nFQ#Y
%?\=>#rWEnI.CT[>NZAR_+c[d@(2&rT>>r0VHe_26o'jK:a#n81dG2HeP=)HEk1bY]VEAnI67m$_-N3#Ij-_Iu\#[ab6uD4=IQ6OL
%O'V0u^1Sh"`f7Vm6TL[WasYdjQd#17s7>4FSIPIPB]<QLS8:ta(@Cle(biZa4MO8$rpJ'$p\T^d52c@VIi<#!q;KSlBKP!%NH8D&
%h<g:tH+KQC5E_AEcL5X@C%6Xga'a@OL4.sf__l/pl8n>#LMN>uQb-jBnW.4XESW(p*,,"om)a40#=j7#G/_(*h!AnbZ9l8p4ca25
%]DKugh1Nu9kI*V5HaaHp):s[og>.T*a)0GIh*jPu.J6tjI5=KrpLHJmP<:hqqmJ"B6"Dq+G?qg.>o_'>,0+-Vj<![1T!WWgjM0cY
%r6#h0pZ9Z<7&ScQ]SKAQ5)-=^GKUja(OLB;+M**(_mrhFA?W[q;\5kGr43gP>kU]2cog3_I^a`R32`s(ZE6(0dpE%8qkN0Fce/4M
%$Oht=c;iA(l*-G.D\6_1gCGlDN16MqrtZHN`rZ_T+#cQ@U%j%4;SNAb>lJ2?2UG-D+M4Uuc5@l;en,^:]h#pj^7I(%"*(ZngsJn[
%.JM6Fge4"2X\.`F4'SA?lhi`L21ce$EK2sBD=2@j,2N\a*R?;hS/cA>NlN//k!`6I&dVQ1ZHq5F?3oTB*R3."-i5LPnSi7k(l4hf
%'?e^VR6*cOgMr%i15F#n?CQ.#A<FNIh1TI=A:W'?%L3gK!>+]U9D+K9D;Oq8UOSdU&3[1uSZT20%S,^&RIR$K=aeha6g`^oE'lGT
%37&\9=/FhkRl;<iD"f;Ro(opF#MQf=d6_aIpVMZE.>[o$M\ZEs]rlS$)ihAmp7\AEolX%?[.asL7CQ\*f3+d[qR/#OXSZ.e]U]oE
%-.n"DqRS$Zg:Pg^qa]^Sk6h@PX>8&R+EKLq(E4rF0XIs3Ei@60\]N-p1/'WoH9*bQd#D=X/@2O/Ei@7[Zd[#EEtHhO12`_p1UF7@
%(L?m]^A>sF2Xfg(b@Y^\\J=?neTN.U*LM-lpB?L>Z`eguW6K[qe(tu/q:;MHF>h4qiJ?-pHu5eYbeEqqTf2B$:4&<84_b1"c\JAM
%6n2IU_YVKMTjkd]?Z`2q8Hm*]%nK0'H/5M&IHJgIaBWdGPf]$W;Z5ZQRs-ALeZD05kTIQ+U?(]TTAD"'3ga&bT,_P7:<+jn^3XF\
%Sl-1uNnQOmWostT(E<l'G@=9IluT:[P=)J/Z#hQjU?[W7FD]Il>mIo%qGg,m[$Y]JC#S,\]6?ATdIfml6G02l'$c6"])rc+A7(Vd
%F%ZT_LK_CG6+83![q$`k+RK1u?mJj`YGml4;Z#N?Mg%8>=B);DgslTInUR&co%bH3ms;c\m?7W(hW]8Z3GlGJd*MQY*S0*6$h,IG
%e3)E"lV>JLH6+N"'AcZHDC'3\XQ9(dd$!#44ZUmGSW:-7UIs/(ZeYZBMlW$krs(?l??a*6g7=6<ni>BHdu54cnN.]NmI%I@QN[0/
%;Z#N?Mg%8>ekC^J(%b=p%J"Zgn[sp)I:fI,EhLBYgfa^OUnXUqr*gf91Nu6Df^4<9T@m:13Rm1E,^Cm"^7Db_3+cY.g\I/Zh5Q+5
%GLm:%a@*VCIWDC3?U<KFjP4Z&@gZi]C)O&dH5b2omEAnh("q)C-;HXgg*[,/]NYD86puG#XrXE0XgXP%,=`N1hndN7pLLJ83uodJ
%BBn(F)'5:9*fbX.Y#1B%Ps,uJZjd2mQ9?"<;rDn&p/m9p2TB6/qFKs>ZWHRNF+*?ohjN4rVsi1[H=2Ge`N&;@:?*[MHAQEu\[n?;
%gUs)_=I5nfRpju9hJQIn*QWW;,tlNY\KpJWGFRB"mC(X^%;":)\$*/dpX#]7TNM"Q/<d8s/ftq"K0=Z[VYo:"PP1;\OL6mE3idCQ
%0X,EFmeDEhlOBc=BC1rMg*5SL-+@$pOonN0-'(=;h)^@!Y!B+SRS27(bu>M_<C\KW_."K-5'ZmTWV%X_%pNB?g$=OCV*FnWiIh-:
%8-R%\[!tScgu,!bbI;<]'#J##$S,T`PrT-AJ'C/.rs,67G)#':bE!J.^Unf5\bVuRVK&E-@bo)'Md`1Gk9'KfJ)G&HAA3?ai.i[@
%"8;J2gGaW^-T8>Xq3s.]QODBRi)MH1L$IcHk5AHOnTak)bJ%4:GK,,^I/)VsrH\),0/BCps0\0B&!D87r9j8s^nu<712!r(HM&R(
%hT&.Zf`-$5f6IPiUZ7:4h!mC5!_kd@]_'MjSp)Aei?8-I!Oi#u!>\#]1VDp6:O[85m[oI[h7-2I(nH$7IQdV=*[WPA;l,Pd;l/Dg
%Rl?9X_PultjnA@C%^^M%Q]^a/e;B!3AiC*m3],OK"?mPmFa'NHa&j>sRm,o2DG2I[h)7fuch1R?.S#,"B<IoF\U=i5#M]2Gbg9+l
%B+6(&%_p?G*N6agm@B#RGD<limMuhQ`g'=Wr%2X[kW80X05]pU4]G5-cpoaPikC:,oEbE4!NE[Vaeb:W*+f'8D5FDl_tWY_+6R!p
%U=Q'GAJpFj7b<+c-Gp%BMqN]dWVRI$\gANiISkM'A]0_+83"IU7uCE0hCLRco>Nk]E!YKoE=6/!'JHrk(gi]eT/!t'R5QEB9_:hX
%ouQmNO1R?]rbiV=HSc>5V,VQCrtJC5c(_Wa]\SP7d1kM,''Mn2GMn55,LH&U*eCt^/PqpDbT7._5=W:,S^6cPTFpn>q`%gD\_n8o
%<r.8rL\Fn[Hj7:sf&Vml:%sLW+><j5!0/f9^;A8PYGV&NQIML^Ld4tq3.,8\QhP.2,!QtaM?He3UDhB?_SX7\"H^7n8]V2+/hZS<
%W1+FP8ip?=C0Gm=T:W`%h'\S%6q`d+p1)\q?#Gq5#"$nor;KBa)nXfqDN"*;iOGOCi:(C.c.UY<hTR+"-A9R'8"t$GqOO[>i3TsQ
%,8S"bH/Wd]Kp%4$;TU!8]KNkkE's)F(XXoCj%i1Eist!@:[a@3e])UEjgUoNT-?=sHSaY6$6-j<>ER(_@gd`NVgH%c5KF0d^u:#C
%^ja'hF729#\f1)YZ([-/FS/LVr#S^XkJB4;<od+MitaSH*oj6Ko0;'';2;*WA0`)#5fus^\5s4^E@;*FDM8_cULN4G!pD&UN/nj`
%ZHDU6%I%38Z`*DnL8^A+@;F<=1#FX/L/Q]m$B]>1qiObUW\21b%b]Hf02dK`C,+E#l`7LmBD6$C+fQe!OnKH7g[;2!qf^D"m+Wj-
%Z]e-Kg`u1TU/]/KT.ER^9l`bgk4IL.;-&*?9&j>7MV]Fb;*0m5DSA0$:X=O@8\i"GnSf3-";?NO9F[m!,[>aA1]pfGQTkUB#ZudU
%@iKB42D7k,2@J:?p@>tJrFu,:6S'?DSai\8Ps+Nq^E/rLen<Iniiht&C9sqCc;tf;$iZA&M=UX^o3\-iRWIc-e#j(t`TG]fp*j+U
%*k5)YUJJV<\sui_QbTQuZ(6[AHHbCsk4.["j0/LUE[H-QrpF.N>ePR_CD!V2_1e_ug5\*ZIeH)6ccc!'Z,H$Tmk/UFp@S8&:!G?P
%'lH^XgoT)ulLOo=8*$=@?fBq@&Za#c^-5bk9+upg"_uH.pJY<o/&g4<'mkh='q_$gG>^2EWoW=&`JR`PIf-1JB:-N5$7p2STg.DX
%B:jVFr9K+KrZ?hQ53;~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2298 1485 a Fs(Figur)o(e)18 b(15.)38 b FD(Summary)19
b(of)g(results)g(on)g(a)g(StrongARM.)2042 3012 y @beginspecial
0 @llx 0 @lly 684 @urx 473 @ury 2448 @rwi @setspecial
%%BeginDocument: p3-1.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: p3-1.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/18/2005
%%CropBox: 0.000000 0.000000 683.040039 472.379883
%%BoundingBox: 0 0 684 473 
%%HiResBoundingBox: 0.000000 0.000000 683.040039 472.379883
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -472.38 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 472.38 ln
683.04 472.38 ln
683.04 0 ln
clp
670.44 22.1396 mo
670.44 391.62 ln
75.1201 391.62 ln
75.1201 22.1396 ln
670.44 22.1396 ln
false op
0 0 0 0 cmyk
f
gsave
75.1201 330.061 mo
75.1201 330.181 ln
670.44 330.181 ln
670.44 330.061 ln
75.1201 330.061 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 330.061 mo
670.44 330.061 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 268.5 mo
75.1201 268.62 ln
670.44 268.62 ln
670.44 268.5 ln
75.1201 268.5 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 268.5 mo
670.44 268.5 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 206.82 mo
75.1201 206.939 ln
670.44 206.94 ln
670.44 206.82 ln
75.1201 206.82 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 206.82 mo
670.44 206.82 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 145.26 mo
75.1201 145.38 ln
670.44 145.38 ln
670.44 145.26 ln
75.1201 145.26 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 145.26 mo
670.44 145.26 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 83.7002 mo
75.1201 83.8203 ln
670.44 83.8203 ln
670.44 83.7002 ln
75.1201 83.7002 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 83.7002 mo
670.44 83.7002 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 22.1396 mo
75.1201 22.2598 ln
670.44 22.2598 ln
670.44 22.1396 ln
75.1201 22.1396 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 22.1396 mo
670.44 22.1396 ln
0 0 0 1 cmyk
s
grestore
gsave
0 5.33984 mo
0 472.38 ln
683.04 472.38 ln
683.04 5.33984 ln
0 5.33984 ln
cp
108.12 39.7803 mo
108.12 62.8203 ln
302.16 62.8203 ln
302.16 39.7803 ln
108.12 39.7803 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
75.1201 22.1396 mo
75.1201 391.62 ln
670.44 391.62 ln
670.44 22.1396 ln
75.1201 22.1396 ln
cp
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
84.8398 387.3 mo
84.8398 391.62 ln
97.9199 391.62 ln
97.9199 387.3 ln
84.8398 387.3 ln
0 0 0 1 cmyk
ef
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
84.8398 387.3 mo
84.8398 391.62 ln
97.9199 391.62 ln
97.9199 387.3 ln
84.8398 387.3 ln
cp
s
130.681 379.62 mo
130.681 391.62 ln
143.641 391.62 ln
143.641 379.62 ln
130.681 379.62 ln
ef
130.681 379.62 mo
130.681 391.62 ln
143.641 391.62 ln
143.641 379.62 ln
130.681 379.62 ln
cp
s
176.4 343.98 mo
176.4 391.62 ln
189.48 391.62 ln
189.48 343.98 ln
176.4 343.98 ln
ef
176.4 343.98 mo
176.4 391.62 ln
189.48 391.62 ln
189.48 343.98 ln
176.4 343.98 ln
cp
s
222.24 266.58 mo
222.24 391.62 ln
235.2 391.62 ln
235.2 266.58 ln
222.24 266.58 ln
ef
222.24 266.58 mo
222.24 391.62 ln
235.2 391.62 ln
235.2 266.58 ln
222.24 266.58 ln
cp
s
267.96 340.5 mo
267.96 391.62 ln
281.04 391.62 ln
281.04 340.5 ln
267.96 340.5 ln
ef
267.96 340.5 mo
267.96 391.62 ln
281.04 391.62 ln
281.04 340.5 ln
267.96 340.5 ln
cp
s
313.801 206.939 mo
313.801 391.62 ln
326.88 391.62 ln
326.88 206.939 ln
313.801 206.939 ln
ef
313.801 206.939 mo
313.801 391.62 ln
326.88 391.62 ln
326.88 206.939 ln
313.801 206.939 ln
cp
s
359.641 178.38 mo
359.64 391.62 ln
372.601 391.62 ln
372.601 178.38 ln
359.641 178.38 ln
ef
359.641 178.38 mo
359.64 391.62 ln
372.601 391.62 ln
372.601 178.38 ln
359.641 178.38 ln
cp
s
405.36 191.34 mo
405.36 391.62 ln
418.44 391.62 ln
418.44 191.34 ln
405.36 191.34 ln
ef
405.36 191.34 mo
405.36 391.62 ln
418.44 391.62 ln
418.44 191.34 ln
405.36 191.34 ln
cp
s
451.2 178.38 mo
451.2 391.62 ln
464.28 391.62 ln
464.28 178.38 ln
451.2 178.38 ln
ef
451.2 178.38 mo
451.2 391.62 ln
464.28 391.62 ln
464.28 178.38 ln
451.2 178.38 ln
cp
s
gsave
491.041 20.2197 mo
491.041 391.62 ln
516.12 391.62 ln
516.12 20.2197 ln
491.041 20.2197 ln
clp
497.041 -34.7402 mo
497.041 391.62 ln
510.001 391.62 ln
510.001 -34.7402 ln
497.041 -34.7402 ln
ef
497.041 -34.7402 mo
497.041 391.62 ln
510.001 391.62 ln
510.001 -34.7402 ln
497.041 -34.7402 ln
cp
s
grestore
gsave
536.761 77.7002 mo
536.761 391.62 ln
561.961 391.62 ln
561.961 77.7002 ln
536.761 77.7002 ln
clp
542.761 83.7002 mo
542.761 391.62 ln
555.841 391.62 ln
555.841 83.7002 ln
542.761 83.7002 ln
ef
542.761 83.7002 mo
542.761 391.62 ln
555.841 391.62 ln
555.841 83.7002 ln
542.761 83.7002 ln
cp
s
grestore
588.601 229.26 mo
588.601 391.62 ln
601.561 391.62 ln
601.561 229.26 ln
588.601 229.26 ln
ef
588.601 229.26 mo
588.601 391.62 ln
601.561 391.62 ln
601.561 229.26 ln
588.601 229.26 ln
cp
s
634.32 296.22 mo
634.32 391.62 ln
647.4 391.62 ln
647.4 296.22 ln
634.32 296.22 ln
ef
634.32 296.22 mo
634.32 391.62 ln
647.4 391.62 ln
647.4 296.22 ln
634.32 296.22 ln
cp
s
98.04 386.34 mo
98.04 391.62 ln
111 391.62 ln
111 386.34 ln
98.04 386.34 ln
0 0 0 0.4 cmyk
ef
98.04 386.34 mo
98.04 391.62 ln
111 391.62 ln
111 386.34 ln
98.04 386.34 ln
cp
0 0 0 1 cmyk
s
143.761 379.62 mo
143.761 391.62 ln
156.721 391.62 ln
156.721 379.62 ln
143.761 379.62 ln
0 0 0 0.4 cmyk
ef
143.761 379.62 mo
143.761 391.62 ln
156.721 391.62 ln
156.721 379.62 ln
143.761 379.62 ln
cp
0 0 0 1 cmyk
s
189.601 331.74 mo
189.601 391.62 ln
202.561 391.62 ln
202.561 331.74 ln
189.601 331.74 ln
0 0 0 0.4 cmyk
ef
189.601 331.74 mo
189.601 391.62 ln
202.561 391.62 ln
202.561 331.74 ln
189.601 331.74 ln
cp
0 0 0 1 cmyk
s
235.32 247.26 mo
235.32 391.62 ln
248.28 391.62 ln
248.28 247.26 ln
235.32 247.26 ln
0 0 0 0.4 cmyk
ef
235.32 247.26 mo
235.32 391.62 ln
248.28 391.62 ln
248.28 247.26 ln
235.32 247.26 ln
cp
0 0 0 1 cmyk
s
281.16 324.181 mo
281.16 391.62 ln
294.12 391.62 ln
294.12 324.181 ln
281.16 324.181 ln
0 0 0 0.4 cmyk
ef
281.16 324.181 mo
281.16 391.62 ln
294.12 391.62 ln
294.12 324.181 ln
281.16 324.181 ln
cp
0 0 0 1 cmyk
s
327 281.7 mo
327 391.62 ln
339.96 391.62 ln
339.96 281.7 ln
327 281.7 ln
0 0 0 0.4 cmyk
ef
327 281.7 mo
327 391.62 ln
339.96 391.62 ln
339.96 281.7 ln
327 281.7 ln
cp
0 0 0 1 cmyk
s
372.721 178.38 mo
372.721 391.62 ln
385.681 391.62 ln
385.681 178.38 ln
372.721 178.38 ln
0 0 0 0.4 cmyk
ef
372.721 178.38 mo
372.721 391.62 ln
385.681 391.62 ln
385.681 178.38 ln
372.721 178.38 ln
cp
0 0 0 1 cmyk
s
418.561 293.94 mo
418.561 391.62 ln
431.521 391.62 ln
431.521 293.94 ln
418.561 293.94 ln
0 0 0 0.4 cmyk
ef
418.561 293.94 mo
418.561 391.62 ln
431.521 391.62 ln
431.521 293.94 ln
418.561 293.94 ln
cp
0 0 0 1 cmyk
s
464.4 215.34 mo
464.4 391.62 ln
477.36 391.62 ln
477.36 215.34 ln
464.4 215.34 ln
0 0 0 0.4 cmyk
ef
464.4 215.34 mo
464.4 391.62 ln
477.36 391.62 ln
477.36 215.34 ln
464.4 215.34 ln
cp
0 0 0 1 cmyk
s
510.12 225.78 mo
510.12 391.62 ln
523.08 391.62 ln
523.08 225.78 ln
510.12 225.78 ln
0 0 0 0.4 cmyk
ef
510.12 225.78 mo
510.12 391.62 ln
523.08 391.62 ln
523.08 225.78 ln
510.12 225.78 ln
cp
0 0 0 1 cmyk
s
gsave
549.961 104.82 mo
549.961 391.62 ln
575.041 391.62 ln
575.041 104.82 ln
549.961 104.82 ln
clp
555.961 110.82 mo
555.961 391.62 ln
568.921 391.62 ln
568.921 110.82 ln
555.961 110.82 ln
0 0 0 0.4 cmyk
ef
555.961 110.82 mo
555.961 391.62 ln
568.921 391.62 ln
568.921 110.82 ln
555.961 110.82 ln
cp
0 0 0 1 cmyk
s
grestore
601.681 270.42 mo
601.681 391.62 ln
614.641 391.62 ln
614.641 270.42 ln
601.681 270.42 ln
0 0 0 0.4 cmyk
ef
601.681 270.42 mo
601.681 391.62 ln
614.641 391.62 ln
614.641 270.42 ln
601.681 270.42 ln
cp
0 0 0 1 cmyk
s
647.521 310.26 mo
647.521 391.62 ln
660.48 391.62 ln
660.48 310.26 ln
647.521 310.26 ln
0 0 0 0.4 cmyk
ef
647.521 310.26 mo
647.521 391.62 ln
660.48 391.62 ln
660.48 310.26 ln
647.521 310.26 ln
cp
0 0 0 1 cmyk
s
0.119995 lw
75.1201 22.1396 mo
75.1201 391.62 ln
71.4004 391.62 mo
75.1201 391.62 ln
71.4004 330.061 mo
75.1201 330.061 ln
71.4004 268.5 mo
75.1201 268.5 ln
71.4004 206.82 mo
75.1201 206.82 ln
71.4004 145.26 mo
75.1201 145.26 ln
71.4004 83.7002 mo
75.1201 83.7002 ln
71.4004 22.1396 mo
75.1201 22.1396 ln
75.1201 391.62 mo
670.44 391.62 ln
75.1201 395.34 mo
75.1201 391.62 ln
120.96 395.34 mo
120.96 391.62 ln
166.681 395.34 mo
166.681 391.62 ln
212.521 395.34 mo
212.521 391.62 ln
258.24 395.34 mo
258.24 391.62 ln
304.08 395.34 mo
304.08 391.62 ln
349.92 395.34 mo
349.92 391.62 ln
395.641 395.34 mo
395.641 391.62 ln
441.48 395.34 mo
441.48 391.62 ln
487.32 395.34 mo
487.32 391.62 ln
533.04 395.34 mo
533.04 391.62 ln
578.881 395.34 mo
578.881 391.62 ln
624.601 395.34 mo
624.601 391.62 ln
670.44 395.34 mo
670.44 391.62 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2803 395.46 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 333.9 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 333.9 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 272.34 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 272.34 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2074 272.34 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 210.66 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 210.66 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2074 210.66 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 149.1 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 149.1 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2074 149.1 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2803 87.54 mov
(1) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 25.9795 mov
(1) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 25.9795 mov
(.2) sh
302.04 39.9004 mo
302.04 62.8203 ln
108.24 62.8203 ln
108.24 39.9004 ln
302.04 39.9004 ln
0 0 0 0 cmyk
f
108.12 39.7803 mo
108.12 62.8203 ln
350.04 62.8203 ln
350.04 39.7803 ln
108.12 39.7803 ln
cp
0 0 0 1 cmyk
s
114.96 47.8203 mo
114.96 55.1396 ln
122.28 55.1396 ln
122.28 47.8203 ln
114.96 47.8203 ln
ef
0.960007 lw
114.96 47.8203 mo
114.96 55.1396 ln
122.28 55.1396 ln
122.28 47.8203 ln
114.96 47.8203 ln
cp
s
195.601 47.8203 mo
195.601 55.1396 ln
202.92 55.1396 ln
202.92 47.8203 ln
195.601 47.8203 ln
0 0 0 0.4 cmyk
ef
195.601 47.8203 mo
195.601 55.1396 ln
202.92 55.1396 ln
202.92 47.8203 ln
195.601 47.8203 ln
cp
0 0 0 1 cmyk
s
save_ctm
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
493.642 14.04 mov
(1) sh
/ArialMT*2 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
501.45 14.04 mov
(.) sh
/ArialMT*3 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
505.351 14.04 mov
(4) sh
2.5 lw
0 lc
1 lj
75.1201 83.7002 mo
670.44 83.7002 ln
0.0235294 0.0196078 0.0196078 0.992157 cmyk
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
98{/.notdef}repeat /b 6{/.notdef}repeat /i 4{/.notdef}repeat /n /o 4{/.notdef}repeat 
/t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
65.1602 441.181 mov
-0.0098114 0.00984192 (bitoni) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
end end
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
99{/.notdef}repeat /c 156{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
88.9219 417.419 mov
(c) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
102{/.notdef}repeat /f 11{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
131.159 420.661 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
133.898 417.923 mov
(i) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
136.083 415.737 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
157.199 440.102 mov
(ff) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
162.716 434.585 mov
(t) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
165.474 431.827 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
168.72 428.463 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
171.478 425.705 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
173.759 423.542 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
end end
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
101{/.notdef}repeat /e 154{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
179.28 418.021 mov
(e) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
188.878 454.022 mov
(ff) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
194.394 448.506 mov
(t) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
197.153 445.748 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
200.398 442.383 mov
(c) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
205.439 437.464 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
210.96 431.942 mov
(a) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
216.482 426.421 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
115{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
219.72 423.064 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
224.759 418.144 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
51{/.notdef}repeat /three 51{/.notdef}repeat /g 8{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
253.919 434.464 mov
0.000244141 -0.000183105 wsa 103 get (3gpp) wsh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
267.96 465.903 mov
(b) sh
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
273.482 460.382 mov
(e) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
279.003 454.861 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
284.525 449.339 mov
(m) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
292.795 441.069 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
295.553 438.311 mov
(o) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
301.074 432.79 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
304.32 429.424 mov
(m) sh
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
312.6 421.144 mov
(e) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
318.131 415.613 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
331.8 447.664 mov
(m) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
340.07 439.394 mov
(a) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
345.592 433.873 mov
(t) sh
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
348.35 431.114 mov
(m) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 108 /l put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
108{/.notdef}repeat /l 8{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
356.62 422.845 mov
(ul) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
364.313 415.151 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
379.441 445.504 mov
(f) sh
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
382.21 442.736 mov
(m) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
390.489 434.456 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
393.723 431.104 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
100{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
399.244 425.582 mov
(d) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
404.765 420.061 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
407.043 417.903 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
417.602 452.823 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
420.35 450.075 mov
(i) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
422.546 447.879 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
424.832 445.593 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
427.594 442.831 mov
(e) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
433.105 437.32 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
436.348 434.077 mov
(b) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
441.859 428.566 mov
(a) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
447.371 423.054 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
107{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
452.882 417.543 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
457.563 458.343 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
460.311 455.594 mov
(i) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
462.507 453.399 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
464.793 451.113 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
467.555 448.351 mov
(e) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
473.066 442.839 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
476.309 439.597 mov
(b) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
481.82 434.085 mov
(a) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
487.332 428.574 mov
(n) sh
/ArialMT*18 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
492.843 423.062 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
497.891 418.015 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
527.043 434.463 mov
(o) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
532.564 428.941 mov
(f) sh
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
535.323 426.183 mov
(d) sh
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
540.844 420.662 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
dup 101 /e put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
97{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 3{/.notdef}repeat /v 
137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
558.842 448.144 mov
-0.00978088 0.00984192 (aver) ash
restore_ctm
save_ctm
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
578.184 428.802 mov
(a) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf317046e845f3a98cff800425d1e47fcbf03f8b922783d5d36e307274
588ac60409269c037388a43cef04e921c8e3bf34e51e4a003e0b37bf8d31
c8fc8fb6ade393cdde44b4581b0ac925ec1f59a1fbaac3d1fb4e14f63283
84b7e26e832593dcad7ed930aa23e0b99c4561c07b07f1e2fa1eb18d1291
b9cf9003790fe409a130d99f5be39512a2ad37a7efa7c41860134fb79153
f4dd79307743390ebe3ee1401c0a499a781dcdce2157d130f5efa9fe3806
cc6c1819edacc0285ad54ab702e08879c56aefcc591124daf35783236ce0
3c246d126bb7a939> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
583.695 423.29 mov
(g) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
589.749 417.236 mov
(e) sh
restore_ctm
save_ctm
/Arial-BoldMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
598.803 453.663 mov
(g) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
604.867 447.599 mov
(e) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/Arial-BoldMT*3 
[
109{/.notdef}repeat /m /n /o 144{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*3 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
610.388 442.077 mov
(om) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
625.28 427.186 mov
(ea) sh
/Arial-BoldMT*3 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
636.323 416.143 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 256.38 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
32{/.notdef}repeat /space 87{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 248.572 mov
(x) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 241.552 mov
(e) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 233.743 mov
(c) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 226.723 mov
(u) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 218.915 mov
(tion) sh
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 196.278 mov
( ) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 192.338 mov
(ti) sh
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 185.318 mov
(m) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 173.623 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/S 
<10bf31704ab370a8a6c235279ed6c3fdd90391cf7962d0bccf3c0194207c
c985977a6da764734efebc21d6d1ae7133055444822d0fe1b965fdff1b05
ca2046c91bc219dee9d6de4fdbddec5d689eb735c6e0fa560831344d790e
3093e69a2340f4515581fc3f61c364582542aaf4a1803981e90247b3d87c
b4e83921ea1ea0fe7cb2d933b6761926389626e21ef635602b61796dffe5
8975cc1e5a348ada717869e184044d1b2d3ccec5d895b1b22a708b5514a1
fa0b8783acb9f99b94ec8c3dec98d4fe3f7d2f5da5a832e0f19d404c70f8
e5044360ab5b726faeaaff503556ef3182da97e4b93377852f62756de8dc
3b6de3f8b74afcc5f5fe> ND 
/z 
<10bf31706d7bdb7f5f74128c9bb1cf0445a721a78dcf191ad056927637c8
a135f0f22faf7df308eeea1c66e39a72a677a3dd701da853bf390cfc0a58
a3d2> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 83 /S put
dup 122 /z put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
40{/.notdef}repeat /parenleft /parenright 31{/.notdef}repeat /I 9{/.notdef}repeat /S 38{/.notdef}repeat 
/z 133{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 326.46 mov
(\() sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 321.771 mov
0 -0.0140381 (no) ash
/ArialMT*9 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 306.126 mov
(r) sh
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 301.436 mov
(m) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 289.727 mov
(a) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 281.904 mov
(l) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 278.771 mov
(i) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 275.638 mov
(z) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 268.604 mov
(e) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 260.781 mov
(d) sh
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 252.959 mov
( ) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 249.005 mov
0 -0.0140228 (to) ash
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 237.268 mov
( ) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 233.314 mov
(u) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 225.492 mov
0 -0.0140228 (no) ash
/ArialMT*14 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 209.847 mov
(p) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 202.024 mov
0 -0.0140381 (ti) ash
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 194.976 mov
(m) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 183.267 mov
(i) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 180.134 mov
(z) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 173.1 mov
(e) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 165.277 mov
(d) sh
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 157.455 mov
( ) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 153.501 mov
(S) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 144.122 mov
(t) sh
/ArialMT*9 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 140.208 mov
(r) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 135.518 mov
(e) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 127.696 mov
(a) sh
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 119.873 mov
(m) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 108.164 mov
(I) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 104.249 mov
(t) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 100.334 mov
(\)) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 70 /F put
pop
%ADOEndSubsetFont
/ArialMT*21 
[
65{/.notdef}repeat /A 4{/.notdef}repeat /F 185{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*21 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
129 55.5801 mov
(F) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
137.576 55.5801 mov
(u) sh
/ArialMT*13 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
145.385 55.5801 mov
(s) sh
/ArialMT*11 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
152.405 55.5801 mov
(e) sh
/ArialMT*19 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
160.213 55.5801 mov
( ) sh
/ArialMT*21 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
164.114 55.5801 mov
(A) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
173.478 55.5801 mov
(ll) sh
restore_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
dup 67 /C put
pop
%ADOEndSubsetFont
/ArialMT*22 
[
43{/.notdef}repeat /plus 23{/.notdef}repeat /C 188{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
210.359 55.5801 mov
(C) sh
/ArialMT*21 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
220.498 55.5801 mov
(AF) sh
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
238.439 55.5801 mov
(+) sh
/ArialMT*13 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
246.638 55.5801 mov
(s) sh
/ArialMT*8 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
253.658 55.5801 mov
(c) sh
/ArialMT*12 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
260.678 55.5801 mov
(a) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
268.486 55.5801 mov
(l) sh
/ArialMT*7 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
271.606 55.5801 mov
(in) sh
/ArialMT*14 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
282.533 55.5801 mov
(g) sh
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
290.342 55.5801 mov
(+) sh
/ArialMT*7 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
298.541 55.5801 mov
(b) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
306.349 55.5801 mov
(u) sh
/ArialMT*9 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
314.157 55.5801 mov
(ff) sh
/ArialMT*11 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
321.959 55.5801 mov
(e) sh
/ArialMT*9 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
329.767 55.5801 mov
(r) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (p3-1.eps)
%%CreationDate: 4/18/2005 9:53 PM
%AI9_DataStream
%Gb"/L>B:e)Q0.ZnK)_NN'LBtp\goG!<Masb.ESVFAC;)IQ<3*S1`K/p`sjl\BMbQRr876rh`7*1IA6c]Oq8QG&m3giH-^Or-aQ#4
%jOs+dnpGo^p=]#?T2d6kpo96Pds1\(+$]V_PQ*H=Ap1jlaGjY77k$H5qE@JJ2bJXX2!Wi06,h0:e!l9Kjne(R3LsG_5@6%/X6\*3
%k8u%;e^p"onn(euEOJt#J#o4n-IY0il[67U>YEbJX8-;roblWaX8Y)([To><:+lG2c.1?R5!/d7lH%J@2_,d&B@W7Uo6RjJSt7TB
%cX&28mq3%.lKMAEj[Qta[CPZ[lOR(?\#[X$]+7rFY2#^kSG?5&11_o$Ug,n7hH,WSc1QB?=YEk-i/rW?lZ]XJ?M`st]tSqS_-T\P
%*=%9VUqKi:c53f?Q`H%d\nX^')0BiT?-D/:CQQ"&Y:c`2S+G<+fpUMR#CjuWm4822G.(^M+0odSo(0'bptOakIob+tcW*biph'5C
%c=tOiQ[eiGV.CCKhf!./'7D%k8Q.$u-2N#_Aob4[l[Z!0.7p[,X`ViAY)m_L>)?PL?ga<]FX8:4GN/,lVV$>)BjZQDC-O@YIZ?V)
%(.`Q_)gUhQK%oSks#o<`Z&E>%MlXg-4X8t]:lh%pKQbkr[GUeJ/'''B0RIlTCA[pDK2AoKo@]1s<A1!117ipejd3Er:KQk#kC8]/
%N2[j%fCr9[e&^:uDf->seT[@$i/-Uhg;;Ibo@ZJ)dTZHe0u<8f(Pi#oM6k=hm;*7(=kmC,5-)7U^\cj3`TcI$Ciu9flsIH9RU)L:
%s+@(1#u.AP[N0WEJo"<uV=!!7b3M76U`GYE)fro1"`<>O8Y9;r1qm):hp*l>e)>;K?;@Y8X)DV![:IDeE[AoPY@[3,]Zd=&opaM0
%Hiqp$O?ri#ZQ=7A^HV\NjCG7@le/,._AAR%c^,I#-QpV\cNO(t"Z7(=\+Y":KC>V^Rk*6%ApcC!T*Z9.DcSB&j@Uhq%&mF6DJ#0l
%\G^mSBP`@)H8g+6HR#o$\m2D=s"<\j*"Jq+\>3A.S^45"lMTeEHB"*Y&qtfo\X6BneaqH5b<PlC2%t)aA:-OCYNC>:IZPkSlah"=
%?,tob57NK7]q3A/YetIBqtWpl:I5o,rU"\a^KO8<S#g7S%d9uTB`K#aLB$<u^:9[c616;\Uh[2=9g3N27,t/Drjs)0A7_QQF`jIc
%rd4<-aNE'(b$%nHj2Lq:[U*!mjlG2P0<4Q]o)2>GZl7-%m,gLDR4ljX^RM=/r;Z(*0n8kFZF[2NJ"=<S`ii^pf8JbV&*oWqaKTPd
%NVe+88hC![c>IAK/enS=$e:3$<5[-Yhb+D0c!kklG5\Rio%QqF5G]EM6r6VZhF0:^5L23*2=*QR4q's+ABpf"Y<HnY[L.c;QW0A[
%Y%Og0PD,!gM_N.sIm&u]9Wori7@X#-?h--F]E[S[#nok(lb<]j9Xo<1;\3\)RD,/]$UpW3WkV2`s-D2%[P\$Er*7h4n(%?\CiMVm
%lht%j^u=-_J"9:U5Pfa"H@BR),"-;Zm=+pH&2PjprpAnG=h[(]f-*rh^RY7I28L>f\uAH;m-;RM7ilA1#:Bf86r:eMVl#marIsE*
%D3optog2sgAYW(4]^!).WC,c_8:Z:U^8[R8`@E%A.f#Bi,cQ@?g6hY-Aqm*t&)'Y(XpBh`dn1^iX(!/JWbnaa4;==n"-nX;XGt[!
%Y3db(gppOl[#844dKp9Ti7KeGFMc-o#8<@DVi0[09]uG">P'lG`F<bnqVB]m,2l!D<S*u2J5qb`i+YPG&qfk_8f0YPDR8l,d0Y!0
%:0@:V/Oshm22&XLpQ_(C8.)jT6?UU@=T#%Yq6a=EcZZ%A#Yh'qRC7="qh1ka*Ko2Pkl\PULTLjeOOjWacp`#eME9ARm8rW,*c+:0
%=^&GaU^.b"W7ap8!M+o[(aP:l6(A0O/$P;EVYkTMh(CT1\AOnf^5jGN^i[h(82A8,U1HP[iUpYYnd`?]Z.kc6+i@Pu_W`WK0M&Ho
%/Tpr>6G;!3m!9$*#g3qg0djgfIHUD/.#5`O!&RYP6ib&"acDF=[">ciQ=hl36>6IFXfk0g"5pZb%#Kre)2""VE"J/6)SsH@&41ph
%^l'Uj$-:m-kXWKr'F[a=A7;u'l-KaZf]Zl$Xak_ZL0GNE#*(&r?>p-@-VA+="];!NfIO@mp6-Ug#Ke<1C['O:pge%n"qff=+#\".
%Gq#+kY!UcWfqr<]\+d\[(m7,bM.t.)J-I=93Suh\0leA'%#kYsf['ZA[5St0,99:B=R>YtZkefG=Q1$];9O5hMQW,ZCfbgWa,].N
%GGOgU)pUMkk;D"5=LY5)lNTrQm"CT^8\22V9fKDj"5LFMCpI=J2IZPO;To``))N$jL]HgRiK>l*;Dp($,j/l,(S.ItJQj6),^TiN
%Lk&"K+/p66nm_82B8[lIJ>Ch5co1r3WruRgMRhOc@:Qn9'`B(f$"+*e!,<h!@9n.4VT>Ur[!GkaSZ1p/.bS+R)$^0m/49WK&X\JB
%3+kU5MV3^oTHW!=<oLA^3CkBk@gi3LaH$')L6^]<2;(e54W/HY4,#V]Y=&3/O=1hhEgh*%lE(/X'dW(SUgVj'X#/92<^g/+D[]a6
%=MWBDUlh+?VicBfTcqPTZD4ZD?q/pZ7PhggR6FqkgK9F<C?)RIp'gd)8\>ZaM?:)V=4&NWDEJ^Db6r=pk2mE;SY.eFKbFL+oq%rf
%F2e&fb@E8:IPPs%:f)0<ZJ\%/L#H+@0!,^p,\5@?Ac(or6/`ApN_,)6+GPhYBei4oVTlF38B)Pj`[u$GKnHrL"hkRP^pWpZd7N9u
%AV(+AJm_QB;$PkBQpC*CQ@.$?!c87W6&5N""''/.^E]\@/lNJ[.s?aY@GCTWBOhaZ8^\VpUo:[FE*S,K?jEDG"Su>(l_K2ObB=$Q
%O3lO6%5]sINF2atCT6>EOE*Unr(kn-a$@`q.)2"$Jb)X0,7/('1;)[pD-073Yr/IVk1du?<;AP;!Ffm*80LpYO`oq_((.-9-p+%u
%d2,@l8Ds.%$$O`F1s2%-Yq-GO4kA,\9WFKao#iCg=J]])*,#JLNQ`qM.W:.g5TMrrFc[$2VYh=9]<9=N7E&+)V5De@8q9HqB$-!p
%$$=OX>=BQ8nW#pN#Z@-0+41ih"T_q1ZDggU-U5Gm6pMf(MEiqu4Oj&"e$9K:JF(0[Cg_^=&Q<H4?qR5Km6VJh-/i`,BfAW@OCM-'
%h^$raZ=]Si^b:*HK7VSa_$uTNY.Z?46"N@D$S;TmCK5D=F\1G5Y%_gW:k=k9JC:h*$d`L%>J3<:T+OMtlAjkB;LSr-#BKS"+7]\7
%$(I#5+Ch'6iio[7-+)%n]kf0t:EMNY@Af9^E.S`g%tk?[DA(/!`.\sCfGk2DTV>Ju,hXG4U!IfeW!8M6UdSAu[2+%X:bgBFi)6[Q
%bS*h--?>69";O3"9eL)obojkkg')h4,GgluV-JNXePX:C]QH!fVJA3'jM2^>O[3NK;?IZ;;]=&mKgp`g1]l`n*".uW.*(m(2S^ok
%#QTmI-BMWV+okK6`!I+tU5t6[n+(QjYQT,r$C2/Y;nshk.mZl$8K,r3M89<mV4+g%OtGe5-jr<2K;XS38:iul`cck>;(GphU54U1
%i"@p/aM%qGZ;&C?DcGZZ;udI@&a&,P^H04S88jeRTeJm2$@M.(1>+sKclqP^hLR<GR5JNa6f;tcH71\mmchXRXA(:.!Q3UlNiD%Q
%VE[n32B^m*mfbH5WM4&0aBI"Y"6G&r:d`Z%\8Gtc"R,_(<WLe^DfT),mRF.;T]%$E`c&+Rkbl748(]`nTtJrRi;s/P),5g:Lt<4`
%&p0K@p8G&bZ74eP[&593e!!\-,+^G3T!4+u9t(+2LIW"<Ehm5f(ki[jYnB\-akC:K_:!jT!b4,5i#3pJ8N7u!D6Pr\!8_q\a8g0%
%*]S0sNneJ2Z;UnE>a-J.QEa^crXZ**10GDZJ4UPk\>%=p0H88?'-TV2Ek)I1-%3a?I*T$NZCqOnBXIit&XFe:;b<TUX^&(RZD.[O
%%@btpCdH6LX*UMnMh$'S<R;EL/1eK4gn?:4B.Y?e5^WPC%5iC1QA-Z\,SYf$%7C3i+4Ddf1Lqk;=%2:A1P2@-$sS8_RgA@O%?52>
%%@;(c;'U.V_)j'>TqR^nm0;35@[HPJ(tbd*M9^*:CP5PYXWede/RCl&3[Ylor5`kVf47#sA\RTE3[[^^F),jO]\)s9pQB-[Q:a+f
%$da)hrY3QYKNIG3K)\)F=eS;$(F10R1^S^5jJ4Y[Hc@0%e:GW;Ce"TWFT>RCD%tNc<J-J[6TToV$+a=WE<'ZHF&Gn9eE@R1*SSYd
%82(\9frB%e;0M&iScm,3YuD>h>M9'PAPu@kYgpb_+Cc`a"3Sep6-qPjBT1lBP)OoO=;G:-;-F8!Ru"GWPUTFRC35+?n/L2p"HHDJ
%o(81?)mILll)\D]CP]*]P_3pf1TQ,Q+K:6OUF=TkV8^h/%H/EB5s[b?'pFe1ca![M)p4lt<J/I&U9mq(6KV7T2<WHn7R7/f:=0Ca
%<5:\/V7n?rYuQ4TO`Jl;a'R-!Cb)<B[b&NP]GcjN!r7R3!/b8F)e6#g3pqN*H_RA&>fJFbUol]0f,ts]Yj!RWP[m[e2,q7Tda/HS
%[ur4@mUEYaHPUir'Bk,sXS"ad;J%![GNu*Z_`@9<ReiS-n5mH:!*0D!JN5Y;qt`M?p,7?P?BZG)CtOT5-CfWJ=;E'NJ=]GW8k,f]
%LFt$n0\)"OE''u!U$:)1NRjbn77YW3\J]K;W(IIs=9*Dsd1ph/M?G9;7EQC;aqkmo9<9CCK2;unDY=/p9mf;@XqdB*)tFob?YHMt
%k<RQ&%><qR$k0o[&gAkMJ^^KU3<ujc/.Ba'%5A@$$H7=Q?V_%:\q70lAgU>`fP6U"/Jo=P8rYAR:`>KmCJ"jibZ9_B+:(F?0N]/2
%5S/T:[IORrgh*%Sg*"qO:m6DV<=OV^,hO3'[Gqk*HO>uE1':>gI]I:Q'\5s70N&I%XkL(XCAi_aiW\HGKN#&WP=>]]^n.iWTMYr1
%6pV/,GTj9;O_@j@%J<;MR4tI_)UlCO-UKd`)&iq=.,l.NA/>poC\<WSc89Lu^!?a.FU-2+6Ym^,]`M)<rkO1QWc\8LaTVKk#S0oZ
%os?iL0YJe)6dmm0IS3TEpipH6(`"p?]0.lAHbogaSKss"`Ae*YQ,SCCK6WQR/qRm\g^tQ^(28D$IKb(,1cYZtX&iN+;_'?kG,j>b
%E]QoX29!J3\f936WW?X>\iaA`<J1YY)p#tE6"s1)HrB*C2%(fDe23A+X$J>kcDc#PL0"F/g`o]M3L\Ft<i52Gg6bSIhR,i76:g@.
%[:'2KAlrJ/X*Slg/:XZ(H6bf15g-YE#-&q$15*4b^ZEqGK!h&Jq1K09B<[eN>-oGi#ODbYe)V4@YR[!/e8(#mS')".)kA!,@@stB
%'e99?E(77rP;%qEBr&R:)Urs":tm5i[b7d6[Hc$=n+JU:;WVtRN^L0N/PmjDU,C2[L)rWie?D"aKW33W2U-L1]i$PSApE*C7T^?5
%q*L:lRn4u8]`s6h,f)r:Z,4ZW/\,k6QH@':"-Ru!5a3&"KAZ;8nj(p*>$%"$H?fd2U;KnQNle.C=TGfpIfh#2HWB=h<kq`;UOrl(
%&H#p4o+8rHOs7+-"[E1%!/)]G3#JU=24c1DHbQ$DSLYu_.]S$58qXQDI9TZngIce7K";V\B7RW^mXiuq;hXf.$>O6t`[ahp.uiV\
%cVss>Pj115H>56jcrJ`99c(nX!\FFf<.cA#di<b,E$nO*2(Vg^a0%AR%QLh"1HuRV-4NnmMHpj/f>Z[@h5Zc+PnhT@#,CRB89gRk
%N$O,_VZBnA1q!]c"Q_s>*.hAko?INgIplN7\:G2&BCkcFk^B?iA\[PXoG'7kVW(u^<60_X"ldF4Wu;:TXJ!9k>,#k+GMi[PJfIGe
%Z7Cl"J7V]'=`%62b9II5*\%#/n00=s_/O)4k3O$ND*]/n8-]YWN"uG"7O[oVJkroOnC?4O4&#pnWi=W<Q(+f6&PrU>$G-VCFnS)<
%8^\N\%.qpIUd=rFC&ji(eT`%cs$En?Ut`[(ABkU%YRXJD0\QcrO'sk!jM3J/N&=5"=FFr#&JS=B[c7]l_//r!oN>[GC4k/u,)EWq
%&I;F:@p?bY7]/fLEHL-<d>33equu9e@mMQ1.bi30!5uUpTPr%cco2i[YhF^TGWC`h4e9\+f-$uG(^kKpg&el8P@:kg^8s578$"W%
%]I3#Zb^j(N'ku2tNSVo=)bTT".PR0U@s="9^Q6n#BqXXt6&P&D>*"2"aKqn96bNQpEt;.sHf-jVH8t2cc-3K!=/0^-]c&#8Y#fHj
%.Rh2I5tX[ROV2CD(pH&`g9RV!6@rRn63<O+&VZ5no40pMD^\-'P?k]b"Z48`&s0O=SHHbK+PUArZ:E1k:&mm;KNE<9=i_IeJZM3G
%NjT'bfTbe(5g:?=&R=ZZWi8iO$r%"\KhVB.U;2u@dC/K.%@/,U3CK't@HIud!?o"X,^m.hLUUo#fG%WmP.Z*M9aluf=nIrlPQ7Kg
%81H3A4H:O#TWO?PV!:(\d=r0MSp7)bnEGMs1C-?\i/-VL(tWmL"1^@OF?gg.5[(E1.UsS.3;R8tG-b*[D,nZ#/JeS2V5*XHCHUEm
%JcsM_$Opj/OS<3o7(1q7E#K`eC?g\,"r==<2/5!+dj1KV:5*7]@Y&=a`W/-'gH33p^4E-Jc"o]9>"sVlq3tn.SAsO\>KO%na^e"E
%K#lLjg?5@LB[e<M@5O<0`E\Eo#IU5B+BR$?Q495t2.\,WQMqJpaUL+Y<nhf2-@n'SQg#,Z>3"RKlj6<=`8T'n_C.6f&Psk^"?[T&
%M7PII6,FD1)lCc:mpa.r^A!T++F:-o\KP2Z*$.ud6QZ1K%Pe;E@[]b+C?RM*R5#ufYb=))`"UY&Iq!.B\FU##'K%S\n_*c?@bX!g
%`!hgU'>\&"HkF##.L:46fJHt[cBq/3@3TfglnB#oT8'$8("tHs+?-.eT(^.i$:P7*Ok/=b3l;,'5J2Vb\2C)mm"W+,#u%IQj!SGJ
%Q)7>\%<jerQ2I.3>?Au06&"207k);h!d"""$(Dik_/te)Jl\ErGY4:\U^P]!:E";H9(,WjV^M[H0UcaVZKF<6"7.LYZD=!AR,>EU
%$R^#'EO&%_#6PKZD*cYos#X4mnap\gXA\2]2<"i*]e_*'TFUN[[[]<5V4_akP,3dRc.GA3dqXlV7Kc8!cdk'YU26`tXKD&XmQd'2
%NN!2i$?ZY313I)o8es\@PiQddS$"6K%DL:F<U/EIPP5-8\,,V5G"_L,R0R87[I_o!'4bt\hngS"F?gCN1MMP'_ZHHkbkrP%qt!2&
%J9?mY4g*KrG73V/HXY&nX/qqZAs.ipK/\3..C0IUN+p=f3=3\E3"J<@N1iKu_*Z%H,N=b3EE7A7CW%OsY@,+E?o3ZU*1Ng;3.<r9
%C4f'WOP(*V5pJshUh?W',8lS>\Ll$l$uBEM8Ad,X)b>QN!a.3n,IX]<."("hm:!m,@$ZLIMTA:&;&DS-c3ZN8hMA'>+%ZsEm08E?
%dA9CNjO^h7nM3NjZ,1>fo.!J^E,tcABmA)T%4<6j4.rLZOEQ7_NJ9_n\hK:(MTc?4`5HACL_^k<9VGJc!7dOh?5IZ7YUZ"Z@6fF-
%#_&+'o<BE')Q)d.+a8OMrIFPmh!>F"+;Ts!AI.U5!/=[U]H/&$0F!'.*ro@ri/.X(\Bfm`=<7Q]/O=e([G#$)XWdX/5sqE+RLP[!
%R;t)S"Ec:MR5BS_(//C$Wr#++NmZ(^%!U42$bV'[X4P,eL-/A.9mM[,6Zm2#37i!U4phud.c]#9DD<1(i8#@6r,Q-KK&]6FTRL*2
%h^F8r'QeXI242Q6$fun;D\\4*iI[2Nn_oEfBIpf"JK?!m1m$E"`)sdUTHmH49\ek:if:/VK=kVVKuI<q-)<4H<FZk92s5!$N@mq@
%L594Eb#XbG`Zdn0N2,9c>TY_L[W6/L>/W7^1[>E&a=ng6-Tf/nS)k0^Qq$RY(9qI]&Sng+@\N"hRK3F$qJ.gZ3Q<7k7"5ZG,/YVU
%hUNh$mN;D#>LK%2@,)Yd:HH_`2qZgB<E%7eY^L$4Wpb'LYiuU5!2Lb9L3<!3-T[QD&Q#.5q9OEAP$t2]OTa"]6D\uh_A^EN[d#k-
%WO>`6N78MT&6Oic1Q;J0GU8W/pA/<#0Z_LtqbGgdj6/tu.;T(7@:"i59U#-8AE7JW"tR/uGmt_9CLFrP2j5lS^=j2KLa6IJ_)pmO
%17+K!a!0oi(*dXI2ts+\8]TbDYR>*[m8tGKc&`ORqLCg71\NP45fjOt+s94mAfe?'3ZpHmdC^]o*B4;/-'<:<,%8D(a@)=bFC.:M
%@A!k?"pdQA0qU<sO>olHP_8h0bFB9o4kWWR5VDi5e?=K)Ail!&>Qg4#=5-R#MJ=*Hc@LA,SuI'4a`T:.l"KE@+Toi5A#eqq!Iu(l
%"4n#MZ4i39TUaE5<m(k<E>sck(,H>Q)pM&Mc_-D-KK=8bc%RddVo9Ap8HVRo&=9Ce()s9N-n752Wq;rtW[Ydc"mq'']BYCdG/D.r
%p^Q$l?;t%B9GSn(@H/:9R=N^$Ot!1IM$`Q7SHatlg(#F.-KZ/cd.$CbM$EHl7?Z1r/OA<sg)u%DP/^/1\j-p>/1s&88MKftn6h7%
%/0;;-)$*VLfE6(*)!u_]5DCLYd/j!5+<hX$?Jf9.RZQ#fUHr>72GD9DCZ&SK7SF#K_A3UiWB2.G:r<U@%$56^$K#A!`r0<n.CbHG
%fsqO^9'E!35"Br"g8X<_6W=XkOpFi`B'("i"G9q)/4&,>K7fte+0oYk=`D&Gr(b-ld272oe2_&+/-;k[7t@-516LiBfE2s,HMWJK
%a@<P,L&c=S3<c8E?."I6Xc_l;;)6F(l(;U9g-T:pCI[R(YGA[L#KjI;,/AcE[`s!8[OjVR%lr"IUO<bY'F:\/=sc5/&],.))LWOK
%BLB'!5tp/]MnLbPPHC8u4,ocZ<.:ABWGFO%K+p#o;K0Ff15LK"b$]q9L33-('Zs6kU'I_p>2n"fSNgQ*e*<YKG\+,lE?^c:,c?2@
%(2Kb)2_E3t#=>q5CQJ9ND!]?0.<BEj0Xg-i<@P>Scp_[3)`g-M![Qsa"k=#"_'AVD+D;hs-l#TRV$?:Y+AJ1XO4&)Y/Ycs'js?J_
%d&A7\GZ=;!2=,nn2Id?:'S`Y;SkJ?n!XI)UN)u<?`eCam4\p0f_[[r!4np$,krLL-;8@_(-fRThF'21hA"Q'dq<22.9$uI2&+*]1
%4hQU+-"qF/TOrdqW]l3n!PB35=gQ"^$Om6^p6cA?HNlkpff%,#I$E#1E%8;!YMs7f:iaLf1=4&-q4"fb#G0=AWmVieG'@KI:\Q$>
%c4ETdcU*CuWENjefF/CfUWgu$+k*fJ7#H\a/:]lS71K0j9PMUDPC\bnT#u4Ua,NTrZhBs!\%]`oB9LoYVh,_#I-`JC+'P\F3&%=E
%r8c1A=Xf]=#Q[Fm?K?[\.W/66<%)L(A2ZYs7X*U:]>]J]YuE@5<BgK0H#Vku!f?E?2E&2?,).G@F1qR]oj#Ja\_a[X#9:OXWKG%Z
%N(EJ"lrCs)Ui<L1H1&t\&V(<orq<?L'as2>?f]aFTW?oai:e^tMFFY15i3(XVSp"X%6l2@UqLMK`PT0SbLIT'`I[0%rE=WgZFQ:I
%[6/7YN?7!4XjgbKV.d"Gp-ol/<l<WaiERt#&]0I"e(S%%"ooi9F/>*OR3$^VY?8&KY1Aj]=q%m3@c+5@[1<GBA;bq.1kVB-Le0t/
%G:P!+E\(uSMss(QCG$_+8r-O(#=W&j/=`c_bS!8b)0Titft3MQ/:B)@P3pF(eI\Il_+K77=Fa^+Z-CEd,Jurh@"98t2._<;5ZDFI
%B;Q0Ch.f+8Q-+-C!`CIKCC^l[#Q1G#<!bfY^kgZ2(Cp-C!)B"L(8.B892Ab4kRHMO9BUUqWRlQ7EY(W@3nI#9"%Wk2/gQ*1(<r,u
%dTKC]7:Yq_hQR/]4BKIE/+k23<ZfD3/HB<2qjj>?V.;0rdiPU0I4I-,4YM6RW]'O&m+:7*4YO3r13QC5IC3@)G[B1565\/f"\*0j
%lMH4AaH'5mN9SNV]a!pg=H@h&AZjY9KAL8YJh,be7I45_BWCS!b[hoHcr+k^(2-KJ+Ls(c9TQP%ZTVD$gX[-:(9t_A$f[k7NJ_b]
%?O\im/Wea'85@8\JC<b44m[As+M$kHPRpC&_+GbQckZ[3JsB?1g]F22?nJOV8J4HmaZ"N_A/0C_plVB7Q[6j2eagj8d_k0c&:*DV
%o(@0Le)r<c`%-%`NjjMpic;]eaY.j*Sqr4&F$ngaglV:1q[Ii=+28t;s6'_>>uC(eU8&?VjPe8f)SM8=h(U\j4WVQ^;e!nhEZUM(
%#p6j]MGH;B`;i\6L_3Yq='"5*I-Q"8a(<"J9Y7OXH^aALg<QV/r6$m:JEf;1X`fpYdQYVMrhtSmm.:;&#'<)gY_/K?P#9SDFts?`
%1L42QQjGnA+>'JW*ci6ALafh"3P.?l)Z:S4o!CYo=Ft37f#n?cN2C=g]_=_ZniU0Fn!\c@!64igY26-8p;u1,f4=T-==[U2Mk:UW
%(73hArA/cf7SU:M\hRV"@O/[5@>Bumc6DeBnpFOWc03<ViWu/dKJqirlYHXFVeS9c8CKf`l7,0I[cnD$%V+dX-5#SIlRZiRN6/<c
%Cb/*lrY\g5i=!kqIbmqPJG$&kmHs8u*KNi:$D:HB]A;2VaAQpmIK_kEigO=.k8u@gBP=L;=pl*JcU0^aOG3\VR?!`-[(on8oX(<1
%6AB7!mLE"WrIEVS;RF$^i(]e^j8gX\jn&rmS.!DgfrN\650hnnHQ$"/<dNWHCtEb_lIb;I$lXiBgPf#:-"1V]?%GH6YXjeRSrFq=
%n3BN7n_:^rNM8OEgN_^<448_+q.k:r2,'(nW1*Fk5.a\X9mF>(kMZ-CgOU'3EMidK!Fbk3Y?&`qbg^DnPBhn.RA?:jbh'<=2QP?H
%U/1ISP2;"HBRj3SO%l1uo_*gl_:KUJaZlVGSXr]/[AhaEDtR3L09+ss>Q';>ebP*@IlN*;;*)P7O[@tbedm>11j#2D#fj:Prk,e)
%@@VJLM=#-GhG4>*12`Jg?IfnO!*->VgFQ*E<g%p>I'aO@'_S3*'?I^Dpj&UBi!'X#LH%+So[G*aB"[`k0H&CjO74RS7hP+W5h\V@
%gF4:/fWBp*UUiOMhAM%7`qoQPhAJ2LQ"RTfGYQD%_Q_2rhHB%2c:G>^Xuk&]409o97Qi3)(4-MK7u/I1`I]_YekTBPe.^\A,4jF#
%!YkiCha:TTm_rYNV\,4QC>.j4:AAg)%'^CldNqe]'<jBU>=pdD6f)Jb+&]`cPX22O'[m+)gCT)AI,I(&(<M:UC<7;NnCM&/-sL?6
%L\GroM\1VGK?([^V95:&>.ZW2EJ+aUmHb>&`pVFI<Jf;bKj-^4oTZ_O'pU7nfB3Mt)=@O'!gfS2BA7#;0t_'G_K]=TfBjS_qa#hU
%%aRLBeNc\cMp8+-594VqXYg0G[a/KES3Y<<"h+'01aP25iNo2`nChA8h*t*/HLdQq>bJj)/D_/Cd88OtA)@9J_-dT!"S'Ed+_9)\
%hPE;6]J1QRD%^18=-*iL7B6#[4M8dZbh'!bCDo?;L$M&V_P^g-RE!hLP^4aqB1O2O>!:'"HC&-e>+BAZ\K@OPbSbXT6#<lcUPiiM
%J0-ZsHe@HP1:@\+BcKKQB<g2tKqB-cWp7$0+h%TQlq/m.>ND+b/^#c1BL#_M#EQtN:'P,;N.J,(&FWRcegW+(WiP06VbN1>#q@H.
%TL9WeC[0Go%HN4'QQ[P"<V48`P(orc0!Z&YP<kt-R;DQA/-^sN/t]stG[kM^&fm0B3GY<uS3@"h(rq2Xd?'"Ri6d=@5$E%Sj]_6k
%eoiU6nnFcKgTJ-]FdZP$#:W(f(H)RA2p#BEa8ud#b(UfEjqp5=m>:m5gH#eZbnn.Gb)/cD%&`%M-eXB'9`V=Wb@7Wo\an*IDeb)^
%1dJbtb#r5WagYY%WMl%+ORodX1LZ&$6cjj,=KM1cPFZ=T(AlF=CA;<u%(iCX6[$XXA8hh#.GE/s*e159>meMO4S,O#`gO3H&r!fs
%fu:1_+.+dDrR`i02i&'Pa<,%"ort@ek*e9'^V(]<"21X-,1)$C$S?PO(dlQhR7>Mbg[qs([3q:q^8)nkStr4CTIf4c0]pg/g,$OO
%/XLbdA,T8c#r3^INq":WoSsH:)=WBg-IYnb+bu"]lN4TMie]`D4iPF,Vn(XGi"&0k3c16[48RZFpZ+us6@Bp659)/m4!^!GX:?#q
%BWi7'fPQF57+IJM]j>kWC1+j`8HW%>g9;k\2A4??@cCa)TftW5_=42H.#ZHOPfGa)^ko6RKWj2[#!id32k+#5H+='6%K[.:9jho>
%Ohb:q,Eq`;n)/cR4'Mp12_$gIAQ1&mII5-/-uXB?0'ILi(_,Pck4GYZHHnj0F.J%.E]9.M[M9<q$"WPYdB)B<#=n@tPKkiAB\m`(
%"gZuh32`4=-\g1:>If19m&Z--DcT<dV`d!p\Xj:61>5K_)n5?uBQmukNLgluNISkNl#^t%&\lJKIfsX!`nmaT7ZX8BUmn-(At(p$
%6V[lrMqW8KSq,cYEqiKPH#K>)q#NTlr0No7H?Ln/(UL,;j0u)2q\]Gr"ts:YY%QcRMkts1k+9?=]\-aK^Ug"DbN-qrDr8i@p5o%/
%l$PA%\TkHJrH3KF>HQd7DltISkMpKYPL]5Er:Xa:@,$UmS+ZQq(Eh&X2DV'kVH<Aun(+=.(<o)9ea"0r?&rPG-J._+ZO8tJo>UNA
%]O"=XB,?c^T;AgYSPHT`E]-*gXr"G1lT)%;j$0-]B.KD?FZ$n!21r_,NqL"Odgl`R*ku#5s#do@4^%=5h)L`C_^')9Y0PqK0'8M+
%.:BdJ`U`DD3a#]?fAh&sY27DUa")W=9.HNo0.'U+CS`+,\m!lo9?islnbU;foo1NVI(:0!hlULsnnU"o=jP)(2_YMsR<K.=#[<eD
%c@m$.Uo!27VM5NC@WFWF=`?c7LR3M$RB31oP4'`U2qj$u?Ghd^IS);E4%O^G3nV]T]"Ut`m%7_gj/67CTA'ps?a0D%$W`#&APi>`
%;XZ+fop'^jeY(,fV9BbAGN7Sc6YY\:<d:;Q?48<rcnW3^oe(+tlhT)j_t_4D!\j.MT$V[bq7ArSmn0]HlH?MXbEY?9Cipm4qg*6F
%SnQ0.4J0`gp-cNaPX[!)Nlc*"c-%ijl8*:*[](fPbt>[[QC;Tgq4NXk.5R1L\C;"T>'uaYZlE%I>*2_OI/\ST$sef2Xa6a*h/&)6
%VUYF7YLd$<%lsOWUU)WGqd[mc^H0!@\X7eGrD!?,prT[4b<Dt5jmQiIcY`V7c?\O+=rR-Wp4"/sqG_.eg$30m7R,,Q3m9e0D.dJK
%g+p+mQa[ugG5+[!n5At*:"9-tQ$rLfn*nT4onN]7&30[VjmpGbri///r9265TBhjArq'n^V@3'H9:9_](KZMt.9'A%nB^U9IG[h^
%o1dNU+5-Pj.<<S7&,>hdP56iRqlu%/f@:C]&qT)J]T]pC83"Waj[@*orS-@&eQ@QY"NN,n*fQUfQ)rq4:JQX;n8]_;(QaEt?bYA;
%h!Tq-q<Ijl@1dZh]G)g[jg.[JV;]$<pSkO1[D_t6dNUn=[=d:XY?ii!jQ1;\bF>Q90&J4V1\rl-QQcuAcPFBNY!9$>:OcDK7<22e
%mrRW)1;E\X-^oEH&^JO[C!NX,Zdm=n]BX4C>a4@]]J!P2WI(+P?fK7WX32<G3i2e(Xh\h@ZG9Z,2P$)LLH:N`s&A#&?=8GARbiKn
%Rbt<Rl/rnR)!L'7:jtT2$\j-$C7I)1a7q*h^;0MSog(B3"-Is.Pn\HeNE!c6?S<e-o4lDYHb)i%pnsbk[j_)R=SCin$bp$'bcGX@
%TnFL>lN^qpaeH[-r++d&(u3MZ<ko4Q#beaBED2(j\#]=MFZob/DFpZ"B<l#Nnd6JLPdeO,8R&8)/kI.71RhLG(H6,_FaPur&2sQX
%IRnVQjj$!,AujA31P(OXW%o@"I01/Lj7bKr`I.WX3lNIgXm!NnmAYnRZZFCD!YsZ'bOtT+Xa+5*X6'63l3]4JbqEYi0!:MloCZqK
%qHa7+._c(n:`))4h)#J[:PpXJE.cK-_Ocf]3?.6:a?:9Ts+I4!pM"braiOh.mXkG8bZND)9L[*T$\#Z)i[_6qV]T?!\)hd-kXUG4
%$ZX\TSt(_%j\dlA9cpFba,`ua2"DY_QQO:"Pu%//PH6^(O%f5bNC:s*q_X],ZY*(3ZL$I"f0dol.KALLl-oMdlJ^I.(^pP8D;Pd-
%E[6QC:Nri$b]f-JnG)S2#(8l^EO%#g2PhIO:Ac?\(1//Th18FQHZ+Q6rSnr+*WH$K##B_oI!a5nN4/%AZ.1Au[PBY7j=)(o@b&pp
%m6-EA(sME`W#sYuKLR9hT@UtVAj'CBB#'\AS]-JaLK]$94#*8[JPeY9SVYRN>+!AaFu#P9CZ-kgm:<VBB.ll(%q72HZTBl+LUJ"9
%)#:TNgNt*3)0YQb%VN'3l(Rel`a0'cG@8o2CbLO;``?[UmXYX`+=g)"#GmJgIkM9;;SrP7S9scZ2]1<4\!-f]DMeg>'PmYbo-dbg
%bU0fW)etWG*6Kdgdt;M'SN65VQH?NZf,L4%RB_eVqcm?d>(4f]:hH\U3iG6deF*=t];&j/56)+aB8@BnS=c`MTuM(:ko:jH!Xt1a
%8%?cWphtnSH6`l,cuL(a(eWKe,kB]!`:_F\E!+XcJD4r.DpDa2YUJ7F):PNU]WSsjV:M$t-?Gi5KJ8;>nP$!4HDjQ[I!oqVF&FNr
%Ec%l;\/=99`od3?lUC7InoER8"7=q1BGoXf7t"/J,Ao/AduEXQLZnL(Eimfm2XY^(IBCl^,nYH/adfiJC3:*<mT=)#I<qR*HQB9t
%!a,@3P"S5B.%+:lMnKbAK:/S4l(L$(GK?=V&oF)R`?8r3Cji(l+3`N='t`khlX7Ep'Kne;WMFoMR:-?0HupT?miY]R/CdN,[<]MS
%(@d;i@;N0UqU%dWg)=,GmZM_9.MYbRgUc!f#1kB:%+hpu%S%:d+*DGX+3kiYj*mKl3b/Mes.6&)A#1rP;:8Z7P"GurK?UG0GB'6%
%QcrA+oMD#AK7J4`(:l"b.'"UuE1$Sn,:f0dZ]siJos)_=rU`pUpUZ"WN#E:D)*>#&D>U("Pg&+1@]9%?Kp#T=T,qb=61-T%CE)D*
%h^b+!Zh/5Oj0?h%DReTdcaqRiVp$!If''bb$R1hZXd'GT_PLb1V>BGM2Xbd66pDO]#SZj0/nD"nDM_^QmJSZ&:(OaSY61msWHtUc
%[/ugK<m_[Uk"l-RotE8fair:2&%-\tP)dkjDoD402e9RaoK-ehaW$&oHgTWB5]d?N?FojH/3;TN"Li7jJ9,%rH[;?uqd!Eg[0^rL
%#T&FMR9Ll18?mNY6cgn0:CjjY^I&cFS*8g"EhQk(@Z\,X]&XAMD`P.'5<[NYr=2uKD&QZ,gD$r#1:Q2Lme1d`P$+fW*bt:q`Es4f
%M)ecQHd:D9Z++`?.%+9Pqd,cd4(Jr9'n&u1CIErJ1UeX,)Rc4XoseOulDKEk]O0>4kPLu()@"NY%EB0P?&cb-9!-R5<pk0ZZ;F#U
%&6ps`Q-?@=M3pkmbe_M$rU`pU5J(eF?"Y?kj,<f6A8[581$hQh-*pQ84k/W?,]P<k^71K=Eh\RGVTjL0k-cu"NZ*BuZW'.PeE/D,
%Aq"jiGEa]63]hu=/orbggmW[.p?d2QZW'.PeE6^e'#Iq>,0>ua:L29$OsPO+^ttD69D-b$D;OT?iP89fb+1-Fh`a6?`NM;bj2I%u
%Nbm]*=R9-l_oDA1@RiTL)o"4e*H_VMFgPVu4I$k(h?cuE+*"#l*)6;<E&b:=X5q&&FCb>TSQ3k,_l2GD2nsb\Rf-hWH,Gf9b@%k0
%\]GeVFL"VQ$/Q@:A8[ZLI:b!^ZCB'H=V$DV[n;sfX`>k&r#V*XA8]Y!QGjDNYQ10:mBp]7fK<E?Am^l'p2R0>2C!._%PkN9`\tFq
%#%]`]>@m\n<K0;t:$/Zr!MiH3K<TL50"A56BXQ:Z'A:G.1l^OlKkFI<p&=KVZ^4@f5%8Tc0`"RO<=I@RrqDHqQ*C-XE3o"YftKXG
%_PldaYKl"/l"_[t2/iLVq\sSf1]<40=T8%]cn$=>2iA2Jn%QJ\ID,W]g8#=Q?a9#teA]d0q=B[FpHN&C6g!^TO1p+@ZXA:/2gt;l
%+!<CAB>;P%4e&dl703hRWBtb$Nd6-%9+fJ+C>#osF/Ss1a2a74e=TcSJ!D`Oq9P>%^6d@&Mu28G!MA6&bKa`h<@$\7G=VAtM6P32
%GC3[qGX"7'poBE.#\+@)=2H!r?i!dC([G+ErhJN>I[0G7=qXauMW#s8H/a;'e\c[e@fuVi&7[ZO\/=WFJ3i80(h=-:2\;uTL%o%f
%WIB/lc-uOu,lX`/1l1G-FgqchKtZ`:bb#;F\\BPPA)**%9o8^<.]tXO^Caa1R;N[9dOSK@cKdE9\C]`d@=Erq75PhiH]toV@;GGL
%iOmD8pY*7:6#Y_$8;QfonRk)OO&MF,$S&.l%7HFOM2VD*Ll.0jfapr4*;j8nL_3KA/d@IDmNF4o!H-6<91-Jc:h9I,b)_uu0:G`s
%W#eMV=`8_Ym/0Q!"FJb!C%mWCAoV9DhUs_ln>O[l`go)HOXF8K8?qO'lhPjP3WCE$cGu8>i&A+BEcnQDSKf+gqJ_0o/*\:V-9,=g
%IV?YI^8sJ8531_<RBI[U1q\C4qG#[R16a74[>k42qW,Id+LEVf3\QAu91O^"2\-/I"kZ1pYO3R.&0F_/1??X3K,J\S\p_b?&.,,j
%GK:7InjA"fe;Y;`j:GOcNfNqoOH`dZ2m<4%63Qu1]a%'?S3.efJ^[]1-PEZ=];)$HrEoib#9Y,&:Xt:Af,Rd/*tI^!mmm;s-(i5o
%,.tV#H8pNe%#i36TqZ;l1[kVSrH^B4GdDcWn-hs-c`^II<[=W=UeX@YJOFW8HT73#"U$!jpo%:Jkh-ph::@\/`FOC:ZZnHN#hTF>
%:FlhhA>^X`[!ju%Nh$I5paDYG9'oJDh#j3,(Cpdn7&:=%R+7%(fX8c^YQ[%No7nPp+nd0MIat_'.,e;mS0<*N&(^Y\#0]3oR%<o#
%)Y[kCJ.T/E1lIG^KR\0c"g/)`Y^IFHmLUfl\p.22Hh)]#HOq=aokV0++DZJV.fXg8q<*MhC+h*.KUVY>?64l]LBPs)6)6Y78M-_l
%*@E-D#G=FL,RgioX_"&OG?h_-5QDf.TPM59<p59&Ae'/q!1hOdp+YK_*mpm1FO\((C[pFPmPAXS,&u+3ZGkRbDpC!WbRC5ej>$5&
%iK#I,gK2YegI;c-,3%8fgZ[_s"2YPd[^@.D?hW<s[I$i63I1L@1tJ%)T>6m,GTC`8nLYmNm;.&&Rp>rePCO_hMT#lqnYsF&fV1D]
%M#!g-oarh`DW8oj#bg1I-lN8?4,\As<OJFYiha!]qW0*Y,Q%gK9B47EnbAD5*T]MX>V9(oPK!H<Zh%qFXDTYW=#(0_PS&`fs4-s1
%5Q)nk<#jS78ed:GT#:LDXR-5%eAE]"05n"+e^MJj.Y6Y`[),9,R>$^JilUei?iKBa<;,;AmD$BLH1U0b,#tOn4!Js>(baqHjJ@s/
%ZdiU#^kH?<YAnpZjRNpXc*$+B/ucHh03>LFqVC^4jIfDME:@XbeTa5]?-FsuM8?[S[-71p$#Tp3@bo(^4i_D_?X63H;DN[%jSHdE
%P.*;tpo1EoR)-fM/9&Ru5MjU3T7$1gbK#\C+&ii%R/~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2340 3095 a Fs(Figur)o(e)f(16.)37 b FD(Summary)20
b(of)f(results)f(on)i(a)f(Pentium)f(3)2042 4607 y @beginspecial
0 @llx 0 @lly 684 @urx 468 @ury 2448 @rwi @setspecial
%%BeginDocument: i2-1.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: i2-1.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/18/2005
%%CropBox: 0.000000 0.000000 683.040039 467.040039
%%BoundingBox: 0 0 684 468 
%%HiResBoundingBox: 0.000000 0.000000 683.040039 467.040039
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.04 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.04 ln
683.04 467.04 ln
683.04 0 ln
clp
678.961 4.08008 mo
678.961 463.08 ln
4.08008 463.08 ln
4.08008 4.08008 ln
678.961 4.08008 ln
false op
0 0 0 0 cmyk
f
671.16 16.7998 mo
671.16 386.28 ln
75.1201 386.28 ln
75.1201 16.7998 ln
671.16 16.7998 ln
f
gsave
75.1201 324.721 mo
75.1201 324.841 ln
671.16 324.841 ln
671.16 324.721 ln
75.1201 324.721 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 324.721 mo
671.16 324.721 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 263.16 mo
75.1201 263.28 ln
671.16 263.28 ln
671.16 263.16 ln
75.1201 263.16 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 263.16 mo
671.16 263.16 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 201.48 mo
75.1201 201.6 ln
671.16 201.6 ln
671.16 201.48 ln
75.1201 201.48 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 201.48 mo
671.16 201.48 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 139.92 mo
75.1201 140.04 ln
671.16 140.041 ln
671.16 139.92 ln
75.1201 139.92 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 139.92 mo
671.16 139.92 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 78.3604 mo
75.1201 78.4805 ln
671.16 78.4805 ln
671.16 78.3604 ln
75.1201 78.3604 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 78.3604 mo
671.16 78.3604 ln
0 0 0 1 cmyk
s
grestore
gsave
75.1201 16.7998 mo
75.1201 16.9199 ln
671.16 16.9199 ln
671.16 16.7998 ln
75.1201 16.7998 ln
clp
0.119995 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.1201 16.7998 mo
671.16 16.7998 ln
0 0 0 1 cmyk
s
grestore
gsave
0 0 mo
0 467.04 ln
683.04 467.04 ln
683.04 0 ln
0 0 ln
cp
113.04 33.8398 mo
113.04 56.8799 ln
307.08 56.8799 ln
307.08 33.8398 ln
113.04 33.8398 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
75.1201 16.7998 mo
75.1201 386.28 ln
671.16 386.28 ln
671.16 16.7998 ln
75.1201 16.7998 ln
cp
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
84.96 381.36 mo
84.96 386.28 ln
97.9199 386.28 ln
97.9199 381.36 ln
84.96 381.36 ln
0 0 0 1 cmyk
ef
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
84.96 381.36 mo
84.96 386.28 ln
97.9199 386.28 ln
97.9199 381.36 ln
84.96 381.36 ln
cp
s
130.801 342.48 mo
130.801 386.28 ln
143.761 386.28 ln
143.761 342.48 ln
130.801 342.48 ln
ef
130.801 342.48 mo
130.801 386.28 ln
143.761 386.28 ln
143.761 342.48 ln
130.801 342.48 ln
cp
s
176.641 350.4 mo
176.641 386.28 ln
189.601 386.28 ln
189.601 350.4 ln
176.641 350.4 ln
ef
176.641 350.4 mo
176.641 386.28 ln
189.601 386.28 ln
189.601 350.4 ln
176.641 350.4 ln
cp
s
222.48 322.44 mo
222.48 386.28 ln
235.44 386.28 ln
235.44 322.44 ln
222.48 322.44 ln
ef
222.48 322.44 mo
222.48 386.28 ln
235.44 386.28 ln
235.44 322.44 ln
222.48 322.44 ln
cp
s
268.32 334.32 mo
268.32 386.28 ln
281.28 386.28 ln
281.28 334.32 ln
268.32 334.32 ln
ef
268.32 334.32 mo
268.32 386.28 ln
281.28 386.28 ln
281.28 334.32 ln
268.32 334.32 ln
cp
s
314.16 167.04 mo
314.16 386.28 ln
327.12 386.28 ln
327.12 167.04 ln
314.16 167.04 ln
ef
314.16 167.04 mo
314.16 386.28 ln
327.12 386.28 ln
327.12 167.04 ln
314.16 167.04 ln
cp
s
360.001 226.92 mo
360.001 386.28 ln
373.08 386.28 ln
373.08 226.92 ln
360.001 226.92 ln
ef
360.001 226.92 mo
360.001 386.28 ln
373.08 386.28 ln
373.08 226.92 ln
360.001 226.92 ln
cp
s
405.961 316.08 mo
405.961 386.28 ln
418.921 386.28 ln
418.921 316.08 ln
405.961 316.08 ln
ef
405.961 316.08 mo
405.961 386.28 ln
418.921 386.28 ln
418.921 316.08 ln
405.961 316.08 ln
cp
s
451.801 169.561 mo
451.801 386.28 ln
464.761 386.28 ln
464.761 169.561 ln
451.801 169.561 ln
ef
451.801 169.561 mo
451.801 386.28 ln
464.761 386.28 ln
464.761 169.561 ln
451.801 169.561 ln
cp
s
gsave
491.641 130.8 mo
491.641 386.28 ln
516.721 386.28 ln
516.721 130.8 ln
491.641 130.8 ln
clp
497.641 136.8 mo
497.641 386.28 ln
510.601 386.28 ln
510.601 136.8 ln
497.641 136.8 ln
ef
497.641 136.8 mo
497.641 386.28 ln
510.601 386.28 ln
510.601 136.8 ln
497.641 136.8 ln
cp
s
grestore
gsave
537.48 72.3604 mo
537.48 386.28 ln
562.561 386.28 ln
562.561 72.3604 ln
537.48 72.3604 ln
clp
543.48 78.3604 mo
543.48 386.28 ln
556.44 386.28 ln
556.44 78.3604 ln
543.48 78.3604 ln
ef
543.48 78.3604 mo
543.48 386.28 ln
556.44 386.28 ln
556.44 78.3604 ln
543.48 78.3604 ln
cp
s
grestore
589.32 256.92 mo
589.32 386.28 ln
602.28 386.28 ln
602.28 256.92 ln
589.32 256.92 ln
ef
589.32 256.92 mo
589.32 386.28 ln
602.28 386.28 ln
602.28 256.92 ln
589.32 256.92 ln
cp
s
635.16 304.801 mo
635.16 386.28 ln
648.12 386.28 ln
648.12 304.801 ln
635.16 304.801 ln
ef
635.16 304.801 mo
635.16 386.28 ln
648.12 386.28 ln
648.12 304.801 ln
635.16 304.801 ln
cp
s
98.04 379.92 mo
98.04 386.28 ln
111 386.28 ln
111 379.92 ln
98.04 379.92 ln
0 0 0 0.4 cmyk
ef
98.04 379.92 mo
98.04 386.28 ln
111 386.28 ln
111 379.92 ln
98.04 379.92 ln
cp
0 0 0 1 cmyk
s
143.88 342.48 mo
143.88 386.28 ln
156.84 386.28 ln
156.84 342.48 ln
143.88 342.48 ln
0 0 0 0.4 cmyk
ef
143.88 342.48 mo
143.88 386.28 ln
156.84 386.28 ln
156.84 342.48 ln
143.88 342.48 ln
cp
0 0 0 1 cmyk
s
189.721 309.36 mo
189.721 386.28 ln
202.681 386.28 ln
202.681 309.36 ln
189.721 309.36 ln
0 0 0 0.4 cmyk
ef
189.721 309.36 mo
189.721 386.28 ln
202.681 386.28 ln
202.681 309.36 ln
189.721 309.36 ln
cp
0 0 0 1 cmyk
s
235.561 304.08 mo
235.561 386.28 ln
248.521 386.28 ln
248.521 304.08 ln
235.561 304.08 ln
0 0 0 0.4 cmyk
ef
235.561 304.08 mo
235.561 386.28 ln
248.521 386.28 ln
248.521 304.08 ln
235.561 304.08 ln
cp
0 0 0 1 cmyk
s
281.4 319.561 mo
281.4 386.28 ln
294.36 386.28 ln
294.36 319.561 ln
281.4 319.561 ln
0 0 0 0.4 cmyk
ef
281.4 319.561 mo
281.4 386.28 ln
294.36 386.28 ln
294.36 319.561 ln
281.4 319.561 ln
cp
0 0 0 1 cmyk
s
327.24 240.721 mo
327.24 386.28 ln
340.2 386.28 ln
340.2 240.721 ln
327.24 240.721 ln
0 0 0 0.4 cmyk
ef
327.24 240.721 mo
327.24 386.28 ln
340.2 386.28 ln
340.2 240.721 ln
327.24 240.721 ln
cp
0 0 0 1 cmyk
s
373.2 213.6 mo
373.2 386.28 ln
386.16 386.28 ln
386.16 213.6 ln
373.2 213.6 ln
0 0 0 0.4 cmyk
ef
373.2 213.6 mo
373.2 386.28 ln
386.16 386.28 ln
386.16 213.6 ln
373.2 213.6 ln
cp
0 0 0 1 cmyk
s
419.041 294.36 mo
419.041 386.28 ln
432.001 386.28 ln
432.001 294.36 ln
419.041 294.36 ln
0 0 0 0.4 cmyk
ef
419.041 294.36 mo
419.041 386.28 ln
432.001 386.28 ln
432.001 294.36 ln
419.041 294.36 ln
cp
0 0 0 1 cmyk
s
464.881 223.08 mo
464.881 386.28 ln
477.841 386.28 ln
477.841 223.08 ln
464.881 223.08 ln
0 0 0 0.4 cmyk
ef
464.881 223.08 mo
464.881 386.28 ln
477.841 386.28 ln
477.841 223.08 ln
464.881 223.08 ln
cp
0 0 0 1 cmyk
s
510.721 200.521 mo
510.721 386.28 ln
523.681 386.28 ln
523.681 200.521 ln
510.721 200.521 ln
0 0 0 0.4 cmyk
ef
510.721 200.521 mo
510.721 386.28 ln
523.681 386.28 ln
523.681 200.521 ln
510.721 200.521 ln
cp
0 0 0 1 cmyk
s
gsave
550.561 72.3604 mo
550.561 386.28 ln
575.641 386.28 ln
575.641 72.3604 ln
550.561 72.3604 ln
clp
556.561 78.3604 mo
556.561 386.28 ln
569.521 386.28 ln
569.521 78.3604 ln
556.561 78.3604 ln
0 0 0 0.4 cmyk
ef
556.561 78.3604 mo
556.561 386.28 ln
569.521 386.28 ln
569.521 78.3604 ln
556.561 78.3604 ln
cp
0 0 0 1 cmyk
s
grestore
602.4 264.12 mo
602.4 386.28 ln
615.36 386.28 ln
615.36 264.12 ln
602.4 264.12 ln
0 0 0 0.4 cmyk
ef
602.4 264.12 mo
602.4 386.28 ln
615.36 386.28 ln
615.36 264.12 ln
602.4 264.12 ln
cp
0 0 0 1 cmyk
s
648.24 298.08 mo
648.24 386.28 ln
661.2 386.28 ln
661.2 298.08 ln
648.24 298.08 ln
0 0 0 0.4 cmyk
ef
648.24 298.08 mo
648.24 386.28 ln
661.2 386.28 ln
661.2 298.08 ln
648.24 298.08 ln
cp
0 0 0 1 cmyk
s
0.119995 lw
75.1201 16.7998 mo
75.1201 386.28 ln
71.4004 386.28 mo
75.1201 386.28 ln
71.4004 324.721 mo
75.1201 324.721 ln
71.4004 263.16 mo
75.1201 263.16 ln
71.4004 201.48 mo
75.1201 201.48 ln
71.4004 139.92 mo
75.1201 139.92 ln
71.4004 78.3604 mo
75.1201 78.3604 ln
71.4004 16.7998 mo
75.1201 16.7998 ln
75.1201 386.28 mo
671.16 386.28 ln
75.1201 390 mo
75.1201 386.28 ln
120.96 390 mo
120.96 386.28 ln
166.801 390 mo
166.801 386.28 ln
212.641 390 mo
212.641 386.28 ln
258.48 390 mo
258.48 386.28 ln
304.32 390 mo
304.32 386.28 ln
350.16 390 mo
350.16 386.28 ln
396.12 390 mo
396.12 386.28 ln
441.961 390 mo
441.961 386.28 ln
487.801 390 mo
487.801 386.28 ln
533.641 390 mo
533.641 386.28 ln
579.48 390 mo
579.48 386.28 ln
625.32 390 mo
625.32 386.28 ln
671.16 390 mo
671.16 386.28 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2803 390.12 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 328.561 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 328.561 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 267 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 267 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2074 267 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 205.32 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 205.32 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2074 205.32 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 143.76 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 143.76 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2074 143.76 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.2803 82.2002 mov
(1) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 20.6396 mov
(1) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.8736 20.6396 mov
(.2) sh
306.96 33.96 mo
306.96 56.8799 ln
113.16 56.8799 ln
113.16 33.96 ln
306.96 33.96 ln
0 0 0 0 cmyk
f
113.04 33.8398 mo
113.04 56.8799 ln
342.36 56.8799 ln
342.36 33.8398 ln
113.04 33.8398 ln
cp
0 0 0 1 cmyk
s
119.88 41.8799 mo
119.88 49.2002 ln
127.2 49.2002 ln
127.2 41.8799 ln
119.88 41.8799 ln
ef
0.960007 lw
119.88 41.8799 mo
119.88 49.2002 ln
127.2 49.2002 ln
127.2 41.8799 ln
119.88 41.8799 ln
cp
s
196.521 41.8799 mo
196.521 49.2002 ln
203.84 49.2002 ln
203.84 41.8799 ln
196.521 41.8799 ln
0 0 0 0.4 cmyk
ef
196.521 41.8799 mo
196.521 49.2002 ln
203.84 49.2002 ln
203.84 41.8799 ln
196.521 41.8799 ln
cp
0 0 0 1 cmyk
s
2.5 lw
0 lc
1 lj
75.1201 78.3604 mo
670.44 78.3604 ln
0.0235294 0.0196078 0.0196078 0.992157 cmyk
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
98{/.notdef}repeat /b 6{/.notdef}repeat /i 4{/.notdef}repeat /n /o 4{/.notdef}repeat 
/t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
65.1602 435.841 mov
-0.0098114 0.00984192 (bitoni) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
end end
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
99{/.notdef}repeat /c 156{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
88.9219 412.079 mov
(c) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
102{/.notdef}repeat /f 11{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
131.159 415.321 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
133.898 412.583 mov
(i) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
136.083 410.397 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
157.199 434.762 mov
(ff) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
162.716 429.245 mov
(t) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
165.474 426.487 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
168.72 423.123 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
171.478 420.365 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
173.759 418.202 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
end end
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
101{/.notdef}repeat /e 154{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
179.28 412.681 mov
(e) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
188.878 448.683 mov
(ff) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
194.394 443.166 mov
(t) sh
/ArialMT*10 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
197.153 440.408 mov
(-) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
200.398 437.043 mov
(c) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
205.438 432.124 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
210.96 426.603 mov
(a) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
216.481 421.081 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
115{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
219.72 417.725 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
224.759 412.804 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
51{/.notdef}repeat /three 51{/.notdef}repeat /g 8{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
253.919 429.124 mov
0.000244141 -0.000183105 wsa 103 get (3gpp) wsh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
267.96 460.563 mov
(b) sh
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
273.482 455.042 mov
(e) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
279.003 449.521 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
284.525 443.999 mov
(m) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
292.795 435.729 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
295.553 432.971 mov
(o) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
301.074 427.45 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
304.32 424.084 mov
(m) sh
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
312.6 415.804 mov
(e) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
318.131 410.273 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
331.8 442.324 mov
(m) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
340.07 434.054 mov
(a) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
345.592 428.533 mov
(t) sh
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
348.35 425.775 mov
(m) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 108 /l put
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
108{/.notdef}repeat /l 8{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
356.62 417.505 mov
(ul) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
364.313 409.812 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
379.44 440.164 mov
(f) sh
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
382.209 437.396 mov
(m) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
390.488 429.116 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
393.722 425.764 mov
(a) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
100{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
399.243 420.242 mov
(d) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
404.764 414.721 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
407.042 412.563 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
417.603 447.483 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
420.351 444.735 mov
(i) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
422.547 442.539 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
424.831 440.253 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
427.595 437.491 mov
(e) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
433.106 431.98 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
436.349 428.737 mov
(b) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
441.86 423.226 mov
(a) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
447.372 417.714 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
107{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
452.883 412.203 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
457.563 453.003 mov
(f) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
460.312 450.255 mov
(i) sh
/ArialMT*16 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
462.508 448.059 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
464.792 445.773 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
467.554 443.011 mov
(e) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
473.065 437.499 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
476.31 434.257 mov
(b) sh
/ArialMT*12 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
481.821 428.745 mov
(a) sh
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
487.332 423.234 mov
(n) sh
/ArialMT*18 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
492.844 417.722 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
497.89 412.675 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
527.042 429.123 mov
(o) sh
/ArialMT*9 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
532.563 423.602 mov
(f) sh
/ArialMT*17 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
535.322 420.843 mov
(d) sh
/ArialMT*15 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
540.843 415.322 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
dup 101 /e put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
97{/.notdef}repeat /a 3{/.notdef}repeat /e 12{/.notdef}repeat /r 3{/.notdef}repeat /v 
137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
558.843 442.804 mov
-0.00978088 0.00984192 (aver) ash
restore_ctm
save_ctm
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
578.183 423.462 mov
(a) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf317046e845f3a98cff800425d1e47fcbf03f8b922783d5d36e307274
588ac60409269c037388a43cef04e921c8e3bf34e51e4a003e0b37bf8d31
c8fc8fb6ade393cdde44b4581b0ac925ec1f59a1fbaac3d1fb4e14f63283
84b7e26e832593dcad7ed930aa23e0b99c4561c07b07f1e2fa1eb18d1291
b9cf9003790fe409a130d99f5be39512a2ad37a7efa7c41860134fb79153
f4dd79307743390ebe3ee1401c0a499a781dcdce2157d130f5efa9fe3806
cc6c1819edacc0285ad54ab702e08879c56aefcc591124daf35783236ce0
3c246d126bb7a939> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
583.694 417.95 mov
(g) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
589.748 411.896 mov
(e) sh
restore_ctm
save_ctm
/Arial-BoldMT*2 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
598.802 448.323 mov
(g) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
604.866 442.259 mov
(e) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/Arial-BoldMT*3 
[
109{/.notdef}repeat /m /n /o 144{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*3 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
610.387 436.738 mov
(om) sh
/Arial-BoldMT*1 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
625.279 421.846 mov
(ea) sh
/Arial-BoldMT*3 findfont [9.92761 -9.92763 -9.92761 -9.92761 0 0 ]mfnt sfnt
BuildWidthShowArray
636.322 410.803 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 251.04 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
32{/.notdef}repeat /space 87{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 243.232 mov
(x) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 236.212 mov
(e) sh
/ArialMT*8 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 228.403 mov
(c) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 221.383 mov
(u) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 213.575 mov
(tion) sh
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 190.938 mov
( ) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 186.998 mov
(ti) sh
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 179.978 mov
(m) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.7197 168.283 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/S 
<10bf31704ab370a8a6c235279ed6c3fdd90391cf7962d0bccf3c0194207c
c985977a6da764734efebc21d6d1ae7133055444822d0fe1b965fdff1b05
ca2046c91bc219dee9d6de4fdbddec5d689eb735c6e0fa560831344d790e
3093e69a2340f4515581fc3f61c364582542aaf4a1803981e90247b3d87c
b4e83921ea1ea0fe7cb2d933b6761926389626e21ef635602b61796dffe5
8975cc1e5a348ada717869e184044d1b2d3ccec5d895b1b22a708b5514a1
fa0b8783acb9f99b94ec8c3dec98d4fe3f7d2f5da5a832e0f19d404c70f8
e5044360ab5b726faeaaff503556ef3182da97e4b93377852f62756de8dc
3b6de3f8b74afcc5f5fe> ND 
/z 
<10bf31706d7bdb7f5f74128c9bb1cf0445a721a78dcf191ad056927637c8
a135f0f22faf7df308eeea1c66e39a72a677a3dd701da853bf390cfc0a58
a3d2> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 83 /S put
dup 122 /z put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
40{/.notdef}repeat /parenleft /parenright 31{/.notdef}repeat /I 9{/.notdef}repeat /S 38{/.notdef}repeat 
/z 133{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 321.12 mov
(\() sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 316.431 mov
0 -0.0140381 (no) ash
/ArialMT*9 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 300.786 mov
(r) sh
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 296.096 mov
(m) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 284.387 mov
(a) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 276.564 mov
(l) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 273.431 mov
(i) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 270.298 mov
(z) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 263.264 mov
(e) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 255.441 mov
(d) sh
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 247.619 mov
( ) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 243.665 mov
0 -0.0140228 (to) ash
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 231.928 mov
( ) sh
/ArialMT*16 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 227.974 mov
(u) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 220.152 mov
0 -0.0140228 (no) ash
/ArialMT*14 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 204.507 mov
(p) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 196.685 mov
0 -0.0140381 (ti) ash
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 189.637 mov
(m) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 177.927 mov
(i) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 174.794 mov
(z) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 167.76 mov
(e) sh
/ArialMT*17 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 159.937 mov
(d) sh
/ArialMT*19 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 152.115 mov
( ) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 148.161 mov
(S) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 138.783 mov
(t) sh
/ArialMT*9 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 134.868 mov
(r) sh
/ArialMT*11 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 130.178 mov
(e) sh
/ArialMT*12 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 122.356 mov
(a) sh
/ArialMT*15 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 114.533 mov
(m) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 102.824 mov
(I) sh
/ArialMT*7 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 98.9092 mov
(t) sh
/ArialMT*20 findfont [0 -14.04 -14.04 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.8789 94.9944 mov
(\)) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 70 /F put
pop
%ADOEndSubsetFont
/ArialMT*21 
[
65{/.notdef}repeat /A 4{/.notdef}repeat /F 185{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*21 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
134.333 50.5732 mov
(F) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
142.91 50.5732 mov
(u) sh
/ArialMT*13 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
150.718 50.5732 mov
(s) sh
/ArialMT*11 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
157.738 50.5732 mov
(e) sh
/ArialMT*19 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
165.546 50.5732 mov
( ) sh
/ArialMT*21 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
169.447 50.5732 mov
(A) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
178.812 50.5732 mov
(ll) sh
restore_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
dup 67 /C put
pop
%ADOEndSubsetFont
/ArialMT*22 
[
43{/.notdef}repeat /plus 23{/.notdef}repeat /C 188{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
210.359 50.5737 mov
(C) sh
/ArialMT*21 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
220.499 50.5737 mov
(AF) sh
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
238.439 50.5737 mov
(+) sh
/ArialMT*13 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
246.638 50.5737 mov
(s) sh
/ArialMT*8 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
253.658 50.5737 mov
(c) sh
/ArialMT*12 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
260.678 50.5737 mov
(a) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
268.487 50.5737 mov
(l) sh
/ArialMT*7 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
271.606 50.5737 mov
(in) sh
/ArialMT*14 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
282.534 50.5737 mov
(g) sh
/ArialMT*22 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
290.342 50.5737 mov
(+) sh
/ArialMT*7 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
298.541 50.5737 mov
(b) sh
/ArialMT*16 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
306.35 50.5737 mov
(u) sh
/ArialMT*9 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
314.158 50.5737 mov
(ff) sh
/ArialMT*11 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
321.959 50.5737 mov
(e) sh
/ArialMT*9 findfont [14.04 0 0 -14.04 0 0 ]mfnt sfnt
BuildWidthShowArray
329.768 50.5737 mov
(r) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (i2-1.eps)
%%CreationDate: 4/18/2005 9:53 PM
%AI9_DataStream
%Gb"/L>B:e)Q0.ZnK)_NN'Ht^P\gssaV0O76aicDLE[5<f?B0ZcCc'6T2pcN=6(+>6J)BjGk@A`.N<3oe7Vkah?tF!44jX(sbkg\4
%VotRQoD.L[Voq;S=e.P8.p'b@2'.7.++<k9s-\?q]A>.$7NkDZ.6>VFb>QoNEmlmo!]@_r:2_asQg:!=j`GZorG9#HY-,O@Spd,6
%<o6[/adYlpqq5G`r2G"RQq[N>XRj^-E\1jpXQG_c[qBsWchc\_l#LdH3Ml*:2cj(=q<\#tW?ZIghQ174?WL5`bj3rnH?-`I1OHg&
%I@)ValR1"Wj[Qta[CPZ[l]5,jGH8j9qi=d\Y2#^kSGDaaRBi(#;D&r,n+gF4F1kmSf#s=9Gbj9iqRnGKQi>]+YHQhZYZ]CDb<_g2
%C%(^Ro>U'cjm$<\Y0oisK+@=)CDiXY%FURBr,TBY3M4!LSXH$inCN':]]P:DBButt+m[,s5Pt0K^E)b6QW;<1>kRonmq2%NSCW(5
%q1gV">#mrdrI/oId216&1kkL&U9A0I-T?sk%]J*GP2uIt9'?-3$9?_>Q._H%Q&bZIgLlcN:)s8j'\cD,mAj&PmH<TSYL&'V!kGIC
%P1SP?\@iCAhrbt)QLSd7EOD18B>bc3l;=QJBLY^%qjj@UJnu&-ZT#_@VCSi.#W;K5TDeCnp%"M'j4X$B^9KhMZ<D`Bs,65Tbk3Bo
%Y,cT,8)E*OGI*[=I^kmM:Gf9((;=(GcPF*Yf#fq0$$LO&3;hB#S5!&QAo"'ciWf;LA_#Anh=#56:+%,rX6\2Ap\MkZm.+ugmi;!l
%XBjArDWJ&.Z:QK;gU5@mf6mc6@^9f[Bc*tFNRBl0bY*N,(T[ADq;mr(4Kd5Xajk5#h/'Zg9NaZaAH24))8$aRB@OTnc"_^AJSH?Y
%Xo?4@O4qEW=8m#VZ;g/_m*\_hlc\m4b7!YM&E^<s!r\I;)N3]=Hb9*iGLG[!Q0g7]^71b@":M+dX-GM^-'V8]<394\ZV#2lIQr9<
%2F:KYT7!$>("u_p0%\X'p[*PP%]J?r:UsGqc_p*or8t#*K9Gd<Kmu%lQrSR8kHhX`J+iDI-Kq\Upi`rLc2V%^OsR'm\n`3ia5N(D
%%#R9[T#s1"_f:e8eP*;F65[00rH'p3>"]6mXJ^X[kc?g:A5>DS5GaFE0;hIi]?7$V9ie=:7o#%WS5T%;eT`>i,A!pV)kHY/X1(Dr
%Y*N/?_P.r%k*NFIZ<Ae,kE^BjNA$S>Fu#uG=S?;bpZ]qMEW5>'A;0.F?O)G`lOT30FZ''foR/TGrFWcM/Dkh[cSS"DFk^ZdkM'!G
%q=erR;epBP0^)`>AuqdHQ>ZObC1(`kZcdRYpXSHArF57plJY59jV6WY<0QqF;Y*r,ro<A*E7@RIr9<e;,PPZJ@-IKN.eCjVD"V5B
%YjlcH``V\JB/5;-FX<hse)#jQrl0cG!8TA<!_IM4-NT#0pC;TY6;8iVpTnq7W7+oB="3[sZ<G>8k'rhlb?FhOR_PCFY%N*pJ'Sih
%h#$HaZg$L?J$%SO0+CO,aR,\WDk@#=L8Do)rG"R?f*CkMjN7FgZ_+BIfV;9@lGUlK?9E\tOVW%XJcHAGnFS_@;kUnp*3&>20Y's"
%X.X9&JZme98p.'p7)1)3j&;42WfpLJZrQf/)p(t[SM`.nQ-9Y.fcIMcV-On-Lk='1;#8g5P\O)2KnlC$@A*2\RC,mqhDJRbSN@W<
%Q?KO8:0KsB%NJ\BLJBh>l!U76j)hQ=T'?1QC5`(7^0'a(<k#\E5'cB"9@Yra3ae4`+F)VeOMkP?X:iO5\_CqJ834Sqdg6DsZK901
%?O^F^_L:OB'TrMMMH&E:&/IJVR9tR]pM;5"LsRu)Q"bU.\5.A'efi/kPWl=`GhAHm!+ekY%:(fgX/L*1hL;l(m_MqgSu&h&9o<>0
%Nm`)+$Ks%J^`]%&$0"'<>(Nf?2<D<2k]X3K_&`7IX*kE@"K#t[6BXX#'.s)I$Ek88P'?-WleUE&#8uYj'2E2nKgCU@CT6(_'C*8[
%ACkm17p)oZLcH&Jl!)I]5WN@%"/)?F+p&%)8q'G`dL+jB>+V:H$`+$b[D!F,%Y3I#1LrCuA.1dK^d1As8qN*Q&41ph^l'Uj)9A<N
%oHRct$3oZ_Z7oOOFD(hhCihH#7R0+-_i9Th"32&t0=ZY1CSMRU7#B?"Vpn>mc[luc.$M<GTmc5$A8!_&&`FrV2Ju*3.@=\L6J-,-
%VYpR6mt$ZWA:XdpdtX%d%Ea9D^3+g4j?>78OphEEciV@t2]5qbNh]9![e^D9$V:j[EJhr<jh*06>=i83X#m7i8+EZBdX%&ckFIe-
%RVb$c>L]QnK-Ybd6HW5mY&$_Zc0XiuGA[q\CmTZH=T=HtF$smM%7LdO5^QYD/Bia2%>tnAGnT>8!tk1:"gUD!QU$?4Ga//hb#'Q?
%<^/TK"K;AH`En22!VdQZaHBNHD$L@ddqu#HpJ=K_;qM1K.k;+qb(DE;/iBQWaV*o5?&MS%mX!/<#ZtLY,,gL:>R\J0',`93)d7cH
%A-6"hcUR"=8P7#-pm&p\q$`"Ci5de/:_"K`GA^T<2jpj:qq7&ZpIO@%klfNU#<")'e8e-sYbbE8-4*^A=__j`=I*()dl&IC:!qG2
%^7<Q3m!ZXDYoR4AggESi@"q>sYI&/J7L$9jfKOWdI>&qQ#o#f/=jX55PoD*s"iKn_S:S4r7<g1.%79#A5]N>B.DoCF5M7gF$^mWG
%*&nXs*.f_dd!0!o<NSo0KGY$KoL6OnGCZ?*LcEGV`*!X=7]eKb,dl!2=`l!"%1qQcVPJ0-=/*JXT`n\JY8j)I/l3lcO:_VjU5Ukk
%?H3J#-a;Yn/f/1okR9c\?lZ+S,5mOp::a+rjKI3J2M>r1;k]=F]I$3oXHB:/MSO3LZ@EsOEY.GQ>cj2&\h2YKUd%1U'/n4)$lZq^
%FOtQV=!6UTB_e:%Vi61i;c%ol%0Pda5XuU<i+.)cGM99[$t=!KU!,HXc`-JV,Ql!;j@CG8d#kd#9bn);9.2lo;:-1O)+`]XjU$*n
%'H1Q*O]WA)TH7n6F!9)X!r:pk0W\0Z:_#;`d7.^`.$Za0&YKW*L,qk[>Z:V1fNm)EVP<(KJ5U.SW=g>:Um\OJA-+@Tj@3!:<kP8*
%"bP5<`^dB>:dKVuPt[GMqrB-WR0^ld9G'gMQ%ur2FB\CS"d&Zi*@[B5?Gr(s4.$Xp@Csm>CIkrK..&AG'0-h>nP-:q->PLc$2i6G
%0GnL%&DSsBQeK'W(K;/L^<gmC[T94]=ng%mc8G(8'e5;#(/VRH?ieu?D6#UOiX;JO<o$[Oc,q\jq`sS0r'MMK.Ua!R#%S.l8/sP=
%UkAsK^6_P?p$(I*12KrG'M`TKk^ehhaA%7(J[j(d!h1F."B<lCQR&'=.!1.q!S*jkKUbUaU=LNL'.QK*"C.u"M0T/;RnPFIZ_.AU
%^W?Y=U)?@d8@r8"Cnu/OZ]khoTj"J+L:9n^SD&^mb7;2$oeM?);bg0Z>,;g:e'j*aPX^3$OCNjI"Q`aW`!3^T)?IW.dKC0k=Tfis
%PW4;I6hHMgP[0mK#aW8D:VkJ1AdULdCaFmo5"Pi;-8ClQW`6;?=0eNI(hE_=Idg>,!(jD-aOgu!+_mjS9b\30!*l7q*81":V/-f#
%^`+#5=qq#?7"k@qlE?4%#gup&:+-NJW</^'\kKQZ+`rNOY'6NHHY*`?m1?d4J0'RWZ?uFe3bqY%AAGEmJ7Ik(L$9,4Taf'jjh2e6
%*E<fU!*Mru85KdE#pka(_KDSq&YSSS=92qk]ZG/]\/V,2Jqen[)o'?=Tq@"iNj*Be6[>f/_?C5)1R\XS&[*KMAEY]JlqpoNA5gF)
%Gu%4VVC1J+76KIcGeu)=1u/.b*?HYMj@IDV0FB8]@3q07PI8MuK;AV3"NG7I^bndsP&SLLg0eiB!5**hOTFB*4E0@p*4amEA>]]h
%\L9s;/RuDQr#]$2A[:_-!@D*JiJKs_^hbiC9nWKealO]`QLkoEnN"c*b(_)WU"'3l7p)?29kAaM>.J#bZD.[O%@btpCdH6LUO&Zf
%Mh$'S<R;ELlreX)\O0MGa'(qLJbT3f)J\b@/Ib9B8LOY()MeC[5GhSVB?3iVY):Lr1P2@-$sS8_RgAB%M+0D]L+>7LW0'*fi#NNZ
%O=6rG])hVff]?<`"ubaNU3#,=)IX=YX%3V6McWcM0$,B-+$"4V;pjWGiTn4[9Cg"\[l1_?Mg\ZJ059Q_W.`'o!.C3p:Vf.YGbr,"
%p^\X9'hZ'I+:4a=8I,Hl,d#bS1]Fn^%O@[)*=Yis!bA"5;,gUt%8Mol36<<)_d_,R"$gXjPHq3_7\?@?crL?=JrpVj7ZA?Yfp,2N
%$':okW?bfY1]^?_;Gc_ae].)$@qJ"/b0+0Yco4s<N8U@lN.<oj(19:&=pXhkM6sRQ3Darm3^O,I8[g=)j4'/Q4f/)[G1e=8Pq6SX
%Yu-^*&FO@H<R;U/<KV57AK%t`381/O*(1u!#\]uB;HDm^Q2kYe^F2Y'i:;IJ:"?5)3E9q@3OOE8&-81t["8GrYYSE$l]ns3W'6QD
%SFk16(\B95$L+>MZnW`-`hTe(5#DPMEU79mk$"G<%f!FZ>.W9"r/sY:MM$<dP#2[XNe0rsb\FM>W]*He]#"6oVtqleZ!542$bW5@
%oKj5BHC"jcZ]Bi&ooo)gNr4d3IchjO<H'R@<PhXAc4.q1^'hNcWU%%FUk^?;G+ti?B:oa#77\f!B2bA,O_V\*bK;M4F^c!=c7*O"
%SXQ5!)RQj7aI+21K+8&bM.$`!@*UI;_JW#/^dPY&ftp\`!eY6DQ"4YAMF#n>IXn>QDb.aQ65*`NY;,s/`_(:^<.3+YL`XRO!6cQ/
%_@eU`D;LY$+A9ko^hf9lENiFkeq<mH>#<Q\N'/jNJJ,k$RoO1=^u/-`ZEul283W"^+k/1b2&:fe(_sho@;Gp0&/*O7+4tX5CnbZs
%<6IU&!h*+H&?_1)Io+^V7kF'W:b'Np5[!laMIf[f1F9n/6,YWqbF5I($Nc,#QjXI#]b4!W'd*L'b3"7E*O$+Z.@B%I]L#,_@GN6p
%P8#f]9(Om:H`p4uE0)h%$Jd,iOtO$J$Au6;7NuI`3:P30!L1.tB8Rij8S,)UPa=Tg@?;tpIonJB4s7^0Q,jst:F8bR$2r4-c*6*P
%e,_biRQ6,A%.A(0bjq@0!'hog8A7%.!FfX1@/D(<jJ[tZRg4.*bFqAY@$P*8?5QD^JGAE[f':bBMS5Q12l<*?;bp-X0WOPqon7&[
%R@#T;Qt-q?!l,!q0m$5q'Eatl3?-3E$3W62'\dA!Mmd]l*Mq_[J.)+-eB<k!21UtV\th5rPD"-3WE]]X*O@Y_JBSEPChQe/DNs6Y
%eNf0@8/l4[=2@.e`'oDW2rqGqRT6RmF#BSOU%&OLF&.]PV!W[q!HOX!iY9u&Z@R=]Oa;*%5\[""UF,?VQD.gl!"mMTL3sVg0dVf9
%3(\bV%N]A3"Q),L26^-;=lA,-VI-?NY,C:kD,^lW8tTfl1Spd4O;KkAQ3q&<MN1Ce*dY"(%&X7M\![gD"[g#N,kP]s$!=CI@2);;
%O\i-`Z<]h8gmVe0F4,T7N[>=6"n:HJN^=dX]2WSC-%oSGJstom</>$>[3Q-12X#(pA7D_l4kpCs8ml`p+V95I$u-jCGXGBiQ+m<4
%?l+@?"<%LI[CO<#Ui4SGo=f:"A7%b?crXr.2Q:J<<Sb*HT!G$W7-,:/muY.hokY?d]t/e.c-CRqBl'W.]_-tNJ;I2&#!pR0_%=0b
%41ON!3C0;a5`KMT"C[aOcP,_7lD'*qMX]9kK^F:W].rnE0?`EbWjcI3M7i.`E6rK&9;'E7k>K014!G</-4qJZiPB4.(*/BOJeLG\
%O:d8@f)Dsr_=V*%<Zu?'"N8tU4Z.QCW_V77qAt'=NIn,hfG#&U+]*abnCaa0!Z<MeYE+u_S'i=e_4DbS'7oKW@h<#cQ!IGF<U7du
%6W6G]597Cm8jtER>-g6d`2>2Ciu71?TnUl<TZ[Up5$IF^(E^@P>C<?j^fNB.H`1s`FZ]__5YPTF!OXO$BK/R%j->0Z)LsZC5=c7!
%F/g-sK)I?Eb!Oek]Kt[2n-81Y70003OT$(d"%*P,,L0DdoSM+r(*#V[Q#Aae&/EEDJ#Oq:UJi,MDA5C</W)ft8fcXnDD4+?U5u&O
%:Q7j1A)f4--Q!4`\Qmg*h>nbm>m=RiQU-rFL1.Ip8apa=&NVt:+g+++%5IS//SGOYVG)`p:0kWgclKCFAFlCo-^b(M<[uOrW>`BU
%Cc7O9!E<GXZ,H&Q"b%Pm]@0$kD1`PWdBjqqK90_G2hu\_m,oGNd-lPCf^%LpP;Wfl.UJ)em<^]UkZk%><`Fs.m=UXbgKmLN<FEW-
%6u'o:Jd;[39a_88$:Y^jU<Jhg%)&>S78J*cMAOVZ:J*m@hWPprh>l4EPF"FQAoRlK@NiCa1X8>4n-W\H;K/]p@)Ad_#67AC'LcuG
%eYo@@Af-sJ#Rc@[.7Je8V58%beJg&*i,XW#0>l!O$3NV8@7g<50b83KVIrhP"\A4LM)@"AdUpm(p/1sR2^#*,!:i+$>_'7PP-V+Z
%&4[BUhE:=#$/s>8lXpc`cG1+>>qiGI2?n2?*pJ27G_!/11K;@Z'QE]j`o:U.,hf2Ym2@Saj@Vr*.G&gUirf[a*u>jF(*W.cA43lZ
%kAV=[7r%=8!=^S`UMA:nC8OQ`5Fi/)Yf$Upi/Ib^>.8^+R=,01e!\m@ijG3Z61QtV'V*2%F^)tr0$.p%<ee]HA_Q=F(2/pfjY3.H
%;f=9YUk;jt@?@PS4tD@]MjcC7AOHJ'eDs"lT[C2RVb*NjeRc;pPh(*S(H]JH$un6`TJ-_t?3Cs7!We@X.T+qrClkk)BSWR9`cj/r
%8Deb`@h?=CKA7"j!=fVhL*;V,&-j)+(bn`0%Q/>Hlcb_/!8,YgB]9?`eitlH(#8Tf-Ai_/i:q,9;6au0&7Pi8k_\4NB"eOW0bji'
%a4NL^,0lQH]3un*U[0ZHFe=D]qA%^?KHN4MnXfHniX/*\#*IKlqmsQH=?jHNCq)3r%d\q]g^-ZVK&\4j@[3fd)@^mMl'2+93*TJ,
%k!=^Y'1XLgB``AJQ3j$!MnsL3l@N'-0R-3UiM6q4cqfh8:SmfahGY,?.2YdUWo*CgaoQZc3*B9W(<g^Pe3,1#[;iLJP_4OB]!`_r
%OT1k$ZZu>DpT.9TX#8l@lFeu&6(e_Y6a<.@1Spa_P`hkq+O/P*e'i&k^.&5rD9p3]=f-#5S?/^4PjUf%p5Q$WZO1gsBOpDJ0U45?
%-M>L>ZDP(qCE%Za@B-MX-VWA),i7h,CY15h:LtT/RFTS]>>L?k!IP957+)*%TIlrSjpVWF4u2`ED=#RY70D*ecM"b_QgPX9S+jda
%TiP;\%F$.+9a5P4<*!TMPShl0%s&AB2fKgi//^g+G(PF&^IH-`:ZAJHW7Qhupg:jdWPE0Y0/tjac#EThp=';/<$ARc,_ALK1.feg
%;Bm'@:q81%QOI\?:e5%4W!t#i,CqB_[Ll`0=pgmH7=1CU5+#oTPp5cr72/3&K6)W>JN)Sf_afkWCYD&uBQP\d0_mS#lFfkg9rr<'
%_n8T?1n7f7()id-dW"aX\cXus$Y_Q`e7]]KU^JD=;Ii8d+sp&07't#P@g\4d#H64\p:=@@JQ9PA#Qk^(7.@hJR?'K4jC,&@&99/.
%gCIED_Tf7()T8@)Z4(0T%)>[IQ.LX5%)r9dFT^P/#$c/@*I#I6#0UMLXX0oaUK/<b\2C'H-tm:Y;6urM/Q6NkM4h!T-F8HRdXhc7
%7s//e`%d]`Qf3rCGC`i"BQY41^lV&Y[(2,M0iYX5NH=L,i1iQRUG>SMitg*0&)Ousc>WDf+?3+q!p[3/oSml.9L5RX;M2MrZ;;#j
%ogZdM'J:6E(a%&%K4Nrk$M4n/Tn1^*+NF6m"XTXi@cC-E&9i5u(uu.t.4jWH0-Q$`W#EQ5\iFC:Bllq+)'XY]-sKOa)iGP]1QHo+
%Edc%$`QG;cC(\okcCuu-+N'"sNpHmEDjEVl@N*(X=iAb.,*oYg@\MC\2$3n(o[hrQjqs$K$2l`[M@>DFF'"9%Z[_V"DFnneJoPQ/
%4m=YqhdC)P=%u!4_=ijkX1m2'^nrol!K_p*)qMjkS`s5X7R2Oqk!/<J988^h7M7g&$^L#@#YU+jCt*N8;JiJO(o\n2+KuWPAf:j>
%nOb9Xg?Z(J_&tZmmQ266NM@GpUTb%uLNt=\1JQF*Occ]P(p)MqjY^j*YCQ_4hFtM>qeGsu5pR>k#i8-;P.BAt4;MWa[MWEd]X]C1
%90*89KO$PFDTDU81da_8lN72'bh0sl!@9rmMLYsQRsEM<k^[>(7.ZFXG2O@YQ:00p&d]e[5UM@VUAG",$NiQe2*__!NqobbK#Cf\
%TH)IZ[W#,4pCoh@"1d?r;SN\CR-c^3EY1i?>\ui&/#mFh3sY=NHD^*n-.fsUV5:HKKFB-pNN"i5#68LP%9tt'a\F[-J9!rj=tMB9
%`D%%Z/7oY+2k$/%Sj=U9#^'r$RL<DQ:Q$_kOp7/p+>-ZT/2gI%;,hRD<9ZZq<)\GP$JGs,GL[]Sm"C-mnJf%c]Vr&bR4Ll/_o=&5
%R=N^$Z72S$M$`Q7XTj[CeGiLmmEoCd+`FrOBE2C@,[#!7&d7'k%5O;(CV0eO$T(/hhLu1g$)Tlk*j"mc`</%B,=%+fHN6eBUV/>>
%a3]Jg3jb#'!pc2(%9."-;B(T"Kg"0E.9EEuK:t5515HXQE*u5mnecor:1.X`>cU`s-9EpL%m*A!KhTS5AWTt[(Zk0Ig&o\s9eRBY
%MI;T8GcEMTQRiaXDEY</H(,3PP%&m]Xu0b+FXHW?%J)ttkbV;BO9r/tXF_GnFqVkaWcqh]?sMpZ-NYJ2d;g-,cna_tPcAf<7dOlL
%9S\[lEW/T14QFm+)Tu>@8dBek`LT(eY!!R%%fA1YYqn:4ca15[!hEQL-_Wt[OP6[FJtj5-*76>%dqD2aH@$aPoM)X#pP!%];0-9K
%O`Qs@YO`l:$tj"1!bPXD%QIPp0i14TXH;%qc;'?c"U\#s@.d)YHoeP(-VSeh?.8t[/2e\I"B1-;2"8FmX`X*1rA*5\&FS6*@lY#<
%]7.ne\Mm(sgIm^0PZh&MU9sM$Xe&2eP&p&CC'K[UOa88aZk!/$HVmM6#4.s)9q)NOdW8k,UM"i6-(=2IW["'Z<:f?3m",-o@hHTm
%L8ubp958_R#LKZ5=-cV$KsRHn:NW#B%O>CEpals>3\V"?^jsNSi^QU_78/>DT0`J<k[,r7dG8ULc!Ib?]SP>hBQ[^UAqG$&5)7Pe
%]GBd8ZbpSe%0S3TR14[n#"57r)s7esb30U#'q:q!n['Pi3T=?_BOgc69j<#NT$^K:dMo61G@]6"p*$dq&5$le6AK-O>%KD?$o4TQ
%bft&Le$OTmMM7A_!IKoc)YcmldZU^Z"!.=\Q0kN1)inZFmCR1QI>98s,dDJf"Y\I%e6Ncl)QKht0WA^_jNh^Hkq?0O!fj"fa9.c/
%go=,J:t4dOCgMBVGM@VZ`J'2S<%6^*YCPdu\8joe7/0Rldr)jTTh4KHYIeX7=0ZkHpU#7#!uNmQ;L!s/.:.eCC7(8#0%IZch:XXe
%YX-Ii?F<b;E2iPR=UbSHl<OF>Y>VN*e1(ds]g=D!cBW)<0juBs<GO*#0%F4+k3+?+1^EC!l7/)O[="t8@=(RlHulbp_W"59;CUsl
%0H@0K[?nb,>3n`b08<5;DrhW47#I:&\Pt=Ip/k\,@c:4em>#@0gj4j+Y8YtUoO&tLr$p/(H@d;P%?95HPd/E:?UItL=&#d,I-`@.
%>'1o$Kc..7W?sFE%"2[=[0:+0<bel2Z(IA!?\,.DL^FA;!IA5doKnCO<d#B!/qO0-Cf)eW"3`nrKgpK&l2]S@emVmq?]Noo<%c^i
%6\F_*^UXTL%%neP`8[Hu#C?OQkKP,rTV<)m:Knk'%H7@\Q[5X7f7%IT&4BX3eB@dpO;]*D8-j8f=t2CXB0iL3NQm6)_\Pf5;A%Zc
%e<bhjI3AEp!0FbKn,0OD-#4Zqp0]K?>>O;MZbA)!eY[eWrEA!bB72A*N,8ouYGQ.Ic\oEd'?9rm%jSGRFksl;j@?bYN;8s6]a!pg
%=H@h&9rZaoKAL8YJh,be7I47-do><#L!)a\TV^XE/^U)dLZG=fA9t'ER-h_9fX@X^AJ$F$ZlgE)fVg27qpds<RN@W]*g1S&%&!7(
%?P!%ioT7k84d6LK_SJhc>L<!F;?SMN7(EIfbJ@@e8!>3E=f'p;[?4JMe`0/_RU>>3G?;s<]1<I!_a3@O^Fe'lfhJ*J\.Z!['6Lnc
%o+m\QPtleA)tHBbr1=r!ro]$Ks5.b9F+=&rH2C*%@-NPpf,#Hm3$]#A7aU@Yip)8t1$Ij]hO"ps0p_F0"AegV>uc:+@42>)W^;ZK
%>.ClL7.[D@JKItknhBIJ:@Do.mq=eTo("H[a8r=8n@%%JW_!"$"8JW4G-KEt1`Og?KYn:C1.ar$]@k:KN6cT[]jiDYY_0<MMgNZ^
%clo:AYik$69JlSlMt45?AlsXu.+ZQIm#7fUrk.tkmIEAE=mh`/B`Q0Kg90;32>5/K^t3,jK30X.LPqc:q%f=Pkl!;`mRBpY8_oc<
%">LPH]Wf;pBP3J&=a<34N+R1n=`K,@0g_@LKQT!MPuBQBHDKetEHP9SBA<'7I>9QM6B_[uJoqhe!QJ[&E[D/lKms;m;tpEPV4VrG
%+CMm"8:+Q&GfSiBL]Zeia)8@E0XB3_KjR-,K=KE8bPB2:/eX.$?>I@YlZjo!'=,tlJ#9!<-S=i=-9Z50;^bJ%g"jJ9]cU&i)i@Z4
%)SF0*N]c5&]:>GnJo^r10RM>rbf>!uCe"T.c:ZEPRI-FQ7NEH(KL)A0H(.\!6V/,aB3/IQ4=lY*Wb8(4*]t"^;Z&GVEDi#kC`?/4
%(IqX_07Q\LY(l2g**(Hof+g5Z]a9`Yq]$TjFutce2!u&#+s:^ZldZ?]R[H5HBJRmf09]AAR/-Te_If(E=S/Sa?IBci&.K1do<G8N
%S),4548;uHJ+?D"?)qTP?u;odq\q[6`_3(Of2fASA9GF,nS\orb`kjVEhj9ANV,X].Lhs22o7:$J3RtTA/Jt8DIP\kh>>;Z7E,f.
%f#uc6*2#oIHCMk[cUuWh<fU3iS"a4GFojZ?#<u#6(7``*G)/NG6Vfj#A]?gh%[0blnd(<9I2'L-&*-H\[[e&ZKAChZ26+85l^^o*
%DQLT+iLNhu>'Yk'L"F6_-OdWR_`R/shAN;9_f\IQAZ$8sbGZclembf`r!9P1Y#s$sf\/olJ9o'o94\%U=.k.ql[*;<_7`qZpb]k9
%6r!OkdKr/+M'4d/:YJL"ErsqTED*9#I`NIfiBrKhJhlQ>J7@5ba#8V0!$D!]Kgi<+Lfu]k%K&)N%a*??p#3U?^g[G?f&1POGH(/q
%W5^HLE?$.>@9^?r1"kA$^?VINGi;]D-Trc8AjrO'hK@qs9SRo0WPBgYp";1@7LX2QMD-+'k&l$kep`]g[_q]5<AdScc=4+/_bZ%,
%9P]W<V<p(.,:=&/EIf_?/?+[?@/);:/A1[Y:U^q"]Uo%54;[37.#YRR8fC=VB^?Z<1)MQnRNS1=0nbL3dCXLuMDlkMjA!L,r!JU<
%Yt29oMMF.DNqqCOBIW2V.U3d!&O)$PAK"e!;sL%u5!o[>e`^0(gpn&=f&0d@bl&)I@*ZPd$"?h<*,Woh"T5JMftf;=Qa*s^:#d'o
%4,_p:.f;,Z<E6MF"1]^CAQNo7RpLQcdB`*oM$1tq5'Ta:EA@fH?jpkRLNo^8Z;+PZ;-bb,4A@+7-)dnUJJ)C1Y,P@W238X:>_\'%
%<71BaQ97k>I?B5>T*uX/b[dJmAhch5[cIp@if1&L8T`1&jfF/rEV]t=@N5US7RIL5K1@"IqIn9AP\\NJ=PL)sb,9esDnG;gfDY%S
%5=d4Q\Ze[#\4Lji6Pa&0<%aDK0ZW)PDc[&qg=Bs<DRoPM<`Vm<A2ja*5KQsUCBAJ*=V5^4cBX0f3`ABsU]L#i;9g)$WSE)^UnUbD
%5VC7ZpOjRX$mc"M@'S:(:3N)B>O4R=Wo:;?0^M[j&(rOUOhi2'VeASmGl4]+FX[l/nLUT4(h_:d8eg-jAf&?oIUL/Xp1)-^h&o22
%,(H+'eAIm/Rqq#:rcWTa&+lSSM*MkT/[X/-@gk4>B9Ji2\*7g0C/6HlHq?[`4@r2h6!;EQ@*GI<[:b#(dpMAPN:f\(-HLuk43!&O
%dlT`1B##A:;PC!N6Ok!Eecg$#`=o^SHA[[k:NO.m_&nCa[+[4+G4`2mm`CfoL&*RA^H#8PG=Z8X=WK%ABs/@(fPQGXLoMh$3kamM
%eA-YJZ3IK&Zsc=:Ca>T\`PfN%TfsKj_=/X_PXT7cb$uD%i5F4d_UiT<K:n"Ue)o4V?7l8QK7JSl'A2&f,-][caQ,,H4*[FmcB\M%
%NCj[U)>05O^@l@ZPW(]Z(\BdEN!AiBF#m;(4_LJ)\P>L'\Js3GgNjBQ+3<AuUKPWW&!#cs-CnMadCeM0$=piZE)*7'-\g1:>If0N
%iiJ(#DcT<dk<1d[\W./&1>5cg)n5?uBQmuk8^E:N`]mpbF?6u+LgO`656<bKA+.qeUW62\f$2ThAlBT,+f>Ft78:KD:VcH=3W,h9
%]XL]%]E1kIs64.+SmBP:`N8@qpt]]U@>9;m_2C79le2(#@O^6:\`[lfDmiclYHI'?1:d"u]6CTH4llQd3aYU"0&A3mIi_tA<pTM'
%S*S2Xq=sjOA@9&i^Uomef_/eJG!1<E29<,4N=9N^l.,^fqfUdBMj>I]lHP=LY/dg^PO%u'f``J`q;Qc[?EY^=Z\urjO4)\R:8_9@
%3?+SDf8J>Toc.#.naFfeZ^&c0\f+r!R_do&a84Vckskl$O5I%)J"0fYRB1Z&DHt>F@?S&W=6FL7(\:;Q'X6E`@ejn*SLcC[lgak5
%=79dgit]?/,o+bH(R$;&[F,R&>qKrsV<6%qGl?+^qF26;^0HZLmoQhus(aC'=jP)(2_YMsR<K.=#[<eDc@m$.Uo!27VM5NC@WFWF
%=`?cGMjJq)RB31oP4'cV\(ZUK?Ghd^IR5`=4%O^G1>'i!]"Uu:fg!:U`_X;i5I2Ml^Lm0/f;oCAbFn^`ID+fIlFD*.Hr/sN?fp\I
%qsj.-Teu@-/%j490*W.tka5]Koe(+tlhT)jj7pUd!\j.3REuIJq1h8t+8T0Uf9^.=QRdWQg$1mHp<DTC4OK0:ANl;Dm>6!Lko6%0
%3@;*&Zn06kX3\0Gfqu&32='SQ[FAGSbm.Ouq_Bs1N_AbYWPt389Zo_UV%r7\S^0OEOeI\QUK)6>VjjgYh"5_QlK^;Dj($2[r93K_
%rVfpqf@OZe2]&eRX5=4+%6rNGB\Aa&lgk"Urc;;I`[.hg[[+orSc.HdKg,1:n8*5'4/3n[DB0LbjL-kNFDVoMm`X>p69BQH,Bt[7
%]I)qCm`I_A`cq4?h"p%4*s`kdp2]uX-%Ap%5(</"X0;.gIXh-e)UjE:^ST0Ko8BZgX=mOS0C[<W]6un=ORlc"/g&dDnHj74?Q\h(
%?R>APP4qliX)G%?Ih71kZ+Q:3Ce-P*puOo`?2_t,8(C^rK*94I;]^mf;jFHC6r-R49CQsGPS]F:c<n<=*Sg(<%f,D1^L.Xs?G$t$
%lK-JhQ[Qbq>OGF(F)-X,kG:UrIVK,"CL=h]grR[rXHkeHcS+0.V).s'X-Y"A<_jOKKW`(g/5Lar>"*I-k9!=YBJR@!ib+^-2A+6W
%O(ln;e^N'np&"#j\QndO+*c[eFenGB\p]DgpT6&T>j@RIqm?L;?-34aS_J87(I$?"]_oA[(\%PO4Oj#sX1nE.)Ol29_23_Lq#]YZ
%PI4f^B<T?%"*fcs,3oVq:KAPp,:A<&j6'=uF(qE_LAPRC=e/VmIb<+L_T'=j9t3X>GJ^X=Dd3"]iaue6PD9d"[&b@.iFe&Ya7-Eh
%#@h^Cb?4j1-m43&;T(:)_VVEWkLK8'0;TtWk+BeVBuqlQjAOhAmjDtW1:STXr7u0uV-_rY&_?L."@Cc=0DZjBc'LN8&CX[VDeB+j
%5>u,QB_qu\fZ1b_9G[6ma6FA2d']VJK!qR$Ra',8@gc7h2_<S8n$hG)\ZD)=AudGtA2V,dQ+OP0?I.60:$[-8%&j(6e3[TrI!!gc
%+?q<T4MqUlG7&[\0',dV?]]UaK`?+ZY1siDkp7]%(qU1PRkeJRM_Pqq#;5ejAr*Y,7\5!Z$/V!&V;.#M%54V);Q!ib51A&aAtJ#I
%m(+)1(2ir#\U=RXLK]te[uZSDq8A7\gM=A_R.Sk*:StGqh_!GI&@JL8e;]n,G4H>;XeaJ?@@=8m,LJLrLDTO&o3TC'R=4bW6Z(]G
%OT4s_n(#H@lL\!u>Bqe?/AmSibs^sJS_BD(rpbJ#^:^pP*tbB?!0e.IW^if0rreP/[g/gTB[GYogYi(uEJH1os7d[j$\*JMHa)s/
%)Z\&VY6Wk*/AT][iFjR=T,qb=60uX2L'Pctcuu4IBlop'h@[l2gY-Kt4u+(P35\Ej5<[NY_q:*f$kJBqJaGu:DUdTXbJd4g%QfSe
%R=6fq_>W2fLY@+e4#3>b_/V]H*U*X>dN5i@6o#,QD'j6RPLWG>[J;M"A2(oRj*kAt16b281(01^aVP1<MpQH?4Sd%da?`sE35f0E
%8,h`WU\j>"P-*38ER'OFDN%2I:o1&LEUHQ(X5eqbPnF<Xqo%a8<r:]%`BtkZRhCpJjeAp0.GTMhe@;9AV=NlJnfUReqPPEqWXjR]
%."#%Q@2*]6U`P4.`u%7F8#Vf*!jn=,/u]cg>Mu>!a_D]pg]f-\K(qWorUr3jrJL^35cs=fmC'GlB.u>JQu0A*Gnb&-k%$itqokb*
%ikd+`UR@tTl(L!]o?Fs#O6a/Gn%2nF.=&h9"i!9YP1S;K4j`'!N]&7b8A03lhrsp&]]$r#Frqo$?=3I!5^W7;[R*b0@SqR?7R$$T
%qon$OS<#-%+3a)PT,qb=IYXFK@+u&p$E:@9UmSPIZJ:F#`'><dlmn^r[s,$.osHa;Toeu+60<-&hBcaW#;bCj1[MSr^I+%K-o6)u
%7[64l#+8\jb>-a1_9BXil(L$(GK=&hK9%^EhMfrsDUF*J)'s[\k?qn/rU`pUpH%@HCSa@Lmj!Snn;BTpf'$!k5hAV??iBUnS+esS
%8>cDjKH9*]TrjSB8\a2B7)qK439"$fPC*jOp=2qL[J:2$TQfA!]7PdDWFm/^LkD\irMdt]T@Wb)IJ)&VD;ORgr]Rh^'IHVU*bF7u
%E9K*e2Dkf=Wct>pBD0kO&%23UG<1Tq@Dgm!Kmi+7/7[CHP'uIhJ_Y28(Z"=_;P]7GK/^WchMP`E>H8mPi>tAS1],=mqsE5*_B^5I
%.%IVO=K;d?akY;I7-NN<aF.Z-rU`pUpH%A]PcK!XH3Zig$Xqp0`;7]OOC%BSg-2^p=MFK5]O)H;e]9h:gIpB]Bc+hO8D[04heV[e
%7k:l((W^7Hj*8ZbN_GaRDo#(Q?ha1XHhT#nMr7<Ml3E?U5''BZ'tMoWA!qf(+kpr,IYS>Y3DTHfj;lFt)He$QIeQi;pKP183E!e4
%WqR[d`J`7/D$dbe<MRXObYn?15`>@u?BMY'a4.+BiaS"[27=hQ:cV-[?iBUnS+fPi7+TX8ikU8j(Hh">[oN0K?fgK-qs()7g:Z;d
%Ml`Ig:cZJ&a0e*PCNMoC@s]c5YC:erc2/M:j=*otd"j<GN:rR]/OJe$5!A3fqs()7gAJptM\s#GU%)TR\M`@d&#^HoF%bZNC\&@*
%3L+C;:!aT_B4DkdRO*$E5IUGg^!GIH2##`%'a2cWcM`dOV(buB$l,@u'_a.o9.i<q]<?7dhobo?PT_Q>pJ':.Z'<J7@E!,V2YWVf
%p!Z9FhWp9^d83'NS^$<S5<]Yn)G9`g>Okn?8KX1*jc5'_Ck;g_a^]5bN>(&=*d&P@JTk&`Qs4XloWs]Nh/+*DeGb%>$PM/C4)boT
%?I;N!@9Bh])O=$q=HYQG2gN<(Y',M@DMeoZ\&u^f.(t8=S'8"?SKI6X[*KYVo:[aoZ7.fTga_'uU6?&/DDHuY+`WqKDc:h@\Q-)[
%qo^k<*0uT@n#t=cF/s+ppXa2B\[>qANU<fKT=)A=h>V^@JZS`keX\9XY*GNLL]D=Y%]:RPhI!P;LW>J$?8AqbK]-@WlT]`%0hh,X
%Is_*l5B]j`2sNGQCd=U?@FTJR=(cI)oJL$`k3[q:Ipigr`a?%obPtFQS/k/qc/Rd6qsSI[>d(oD2JJ[WW*&d#l=+G)r:t^=qsTX&
%OSS&/UE?,n/D/jd:#GmI+#p#tSc,EZoPDhL('uFcXpW_4Hfk8u082B4Ve+0iban=^T,p5n]`+Wdqm27GoD`&el:4F:]stg/*3e_1
%]bD2][D<\ZX#dn[T@Y=f%io#-_kZ2B[Z6;"raWtrU-<ur8&ptrU#V'F;01L>n[8CYnJ,4?gJ6!W8&j`kTrXLmA]S@kqt4o<2r5J3
%)\`;aX$PXt`@u?Mk[C_*#I6tPdmNMnhIeP5-WQm8kg/YU=`BA>hX=61Z.r^E`\HUF<Q=YI'4-k]#(85Ind=b$B%#WYcKk>kmC)^]
%(n*mF:j=&l\^0#hYI!<K]YTtZgUlW7f=2Se*k6p:Iu#$$H$<udFrmZ8C8dOBV0red2u%=;GB88-AkHe&O]2qnd`9JT:XPA*r=;K[
%na@l>p$TK5"5t^:-0$S<qE0TY_b&;gY"fsJW=pgoUhoVtS,%AU3WCsnn#)KT!/JabSEp`^q'._AqI#'E!;\:^c63feH]3lQpjVUM
%r?3!Wm<nS7V@a7?S`!-'g7t<s8^oZr\*K4_1]Co>4q:WFP`GmkgP5mtE$'5tnfAu=n,^l\6b]'RQm"DJE%-0Q7.@SLR\T/dK)uJo
%4_nA@)%]c4O6RPmLSf/[]Glm@'4=R*8%b?S*!1`0H]!@UcCIMU`s-tjE/"cS\RJr.C7CtTj5JpgM]O45OuNphiSE&7_\okd7UbF]
%E&Vft++uj<l8Q&k`S9JVJn\=E'*9!pr8pM9>NMl9=EQ?F30WjG(7>Nt$B`b(9#p_N(2psTX=nH,%qc@Y)o8_6\l"sOUCae]3((un
%R8JTYUL.HE($rTHGX/L^MN!^<9:s:\SNC]r*e;Psr8EH6^.Y6VigZ:/:OJ&j/0E)t6OdTApEfYq&regi;^h@)\[V0cK<YHt8K%_\
%#l$o^O(f:=#\/LNQ00ap+t1%24XuOX+Q=FF84<@9AaQ6FqP-O(2j;EL5+GL!nc<e!g/2aJ"36%GBW,YC_R(+_=<BuULBQ!KGe"<V
%9D5[:q5B#35s]T.LrQ>S&]km'5<@q^"jq0.-%#e7N2Ec<d8BqDDRN>FHsGWie0U-D9X^>co'Q7l_jQ'HjUm8>!T(li\*[D_p+<("
%L*u!6&I[ja_ZN5cLbNr+R1D*?a+m6HJD'#>_bjTI/),^rVk"WP469s7C(&DFc'B0PalT]e$+L+H[Q&ifa>7[h8I\07+EjjSp@$Af
%N]VO0++ae%Y!T&V!4]_0[oZSq3NcaNqla@VSkUa1K:B)DrM`>K4Vd'C5JLI+/gcMP?Y8KOH<K'/0!Ae$r$`j'/cPSB5JQtNk>Y]t
%YY-ln'RD]Yp!80BDQ$&gN7[jek'C&k=o>;j8!uft+u6#hiY[\?Hh,EG?Vb5L0&QX!S"$m*Ik<^(3k-]'[u0]R^<^*mbrK!&jpPF!
%p?ij.(f)b;dF@MT?K&3$lh,9UX01>5ImOVpob@scQ*)%/B<-sdV)0q%7[k1,IQt[9TMhli<3^)GeaE6eF=/C+Vb4*V?7gG<j2[eX
%HAWSfWk\[;c2$DEI.l7F0>;`0kl1ZS'Si^~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2329 4690 a Fs(Figur)o(e)g(17.)38 b FD(Summary)19
b(of)g(results)g(on)g(an)h(Itanium)f(2)2042 5015 y(StreamIt,)k(in)h
(which)h(no)g(actors)f(are)h(fused)g(\(b)o(ut)f(there)g(is)g(still)f
(unrolling)2042 5098 y(by)c(128\).)h(On)f(the)g(right)g(of)h(each)f
(graph,)h(both)g(arithmetic)f(and)h(geometric)2042 5181
y(means)e(are)f(sho)n(wn)i(for)e(the)g(benchmarks.)i(W)-6
b(e)17 b(usually)h(speak)h(in)e(terms)g(of)2042 5264
y(the)f(arithmetic)f(means)h(as)g(the)o(y)g(are)g(more)g(intuiti)n(v)o
(e)g(\(and)g(also)g(yield)g(more)2042 5347 y(conserv)n(ati)n(v)o(e)k
(speedups\),)h(though)f(we)f(refer)g(to)g(the)g(geometric)h(mean)f(for)
2042 5430 y(an)g(unambiguous)i(reference)f(on)f(close)h(results.)p
eop
%%Page: 10 10
10 9 bop -50 66 a FD(On)30 b(StrongARM)h(\(Figure)f(15\),)g(our)h
(cache)g(optimizations)g(of)n(fer)f(a)-150 149 y(249\045)38
b(a)o(v)o(erage)g(speedup)g(o)o(v)o(er)g(the)f(baseline)h(and)g(a)f
(162\045)h(a)o(v)o(erage)-150 232 y(speedup)f(o)o(v)o(er)e(full)g
(fusion.)g(Scalar)g(replacement)h(is)e(responsible)i(for)-150
315 y(much)17 b(of)f(the)g(gains)g(that)g(both)h(strate)o(gies)f(of)n
(fer)g(o)o(v)o(er)g(the)g(baseline.)h(Cache)-150 399
y(optimizations)32 b(al)o(w)o(ays)g(perform)g(better)g(than)g(the)f
(baseline,)h(and)g(the)o(y)-150 482 y(perform)20 b(better)f(than)h
(full)f(fusion)h(in)f(all)g(cases)h(e)o(xcept)g(for)f
Fu(3gpp)p FD(,)f(where)-150 565 y(the)o(y)i(yield)h(a)f(45\045)g(slo)n
(wdo)n(wn.)h(This)f(slo)n(wdo)n(wn)h(is)f(due)h(to)f(conserv)n(ati)n(v)
o(e)-150 648 y(code)26 b(size)f(estimation:)h(the)f(compiler)h
(predicts)f(that)g(the)h(fused)g(v)o(ersion)-150 731
y(of)j Fu(3gpp)g FD(will)f(not)i(\002t)e(into)h(the)h(instruction)g
(cache,)f(thereby)i(pre)n(v)o(ent-)-150 814 y(ing)25
b(fusion.)f(Ho)n(we)n(v)o(er)m(,)h(due)g(to)f(optimizations)h(by)g
Fu(gcc)p FD(,)e(the)i(\002nal)e(code)-150 897 y(size)g(is)g(smaller)g
(than)h(e)o(xpected)g(and)g(does)g(\002t)e(within)h(the)g(cache.)h
(While)-150 980 y(such)e(inaccuracies)g(could)h(be)e(impro)o(v)o(ed)h
(by)g(adding)h(feedback)g(between)-150 1063 y(the)d(output)h(of)f
Fu(gcc)g FD(and)h(our)f(code)h(estimation,)f(each)h(fusion)g
(possibility)-150 1146 y(w)o(ould)26 b(need)f(to)g(be)g(e)n(v)n
(aluated)h(separately)g(as)f(the)f(fusion)i(boundary)h(af-)-150
1229 y(fects)19 b(the)g(impact)g(of)g(lo)n(w-le)n(v)o(el)g
(optimizations)h(\(and)f(thus)h(the)f(\002nal)f(code)-150
1312 y(size\).)-50 1395 y(The)i(speedups)i(of)n(fered)g(by)f(cache)g
(optimizations)g(o)o(v)o(er)g(a)g(full)f(fusion)-150
1478 y(strate)o(gy)30 b(are)f(more)h(modest)g(for)f(the)h(desktop)h
(processors:)f(34\045)g(a)o(v)o(er)o(-)-150 1561 y(age)17
b(speedup)i(on)e(Pentium)g(3)g(\(Figure)g(16\))g(and)g(essentially)g
(zero)h(speedup)-150 1644 y(\(6\045)24 b(by)h(the)g(arithmetic)f(mean,)
g(-8\045)h(by)f(the)h(geometric)f(mean\))h(on)g(Ita-)-150
1727 y(nium)17 b(2)g(\(Figure)g(17\).)g(Out)f(of)h(the)g(11)h
(benchmarks,)g(cache)g(optimizations)-150 1810 y(perform)k(as)g(well)f
(or)h(better)f(than)i(full)e(fusion)h(for)g(7)f(benchmarks)j(on)e(the)
-150 1893 y(Pentium)29 b(3)g(and)h(5)f(benchmarks)i(on)f(the)f(Itanium)
g(2.)g(Performance)h(on)-150 1976 y(an)o(y)20 b(architecture)g(is)f(a)h
(tradeof)n(f)g(between)g(tw)o(o)g(f)o(actors:)f(1\))h(the)g(bene\002t)f
(of)-150 2059 y(data)g(and)h(instruction)f(locality)-5
b(,)18 b(and)i(2\))f(the)g(bene\002t)g(of)f(fusion,)h(which)h(re-)-150
2142 y(duces)i(memory)g(accesses)f(due)h(to)f(impro)o(v)o(ed)h(re)o
(gister)e(allocation)i(across)-150 2225 y(actor)c(boundaries.)i
(Compared)f(to)f(the)h(StrongARM,)f(the)g(Pentium)g(3)h(and)-150
2308 y(Itanium)27 b(2)h(of)n(fer)f(an)h(L2)f(cache)h(\(as)f(well)f(as)h
(a)h(lar)o(ger)e(L1)h(data)h(cache\),)-150 2391 y(thereby)18
b(lessening)h(the)e(impact)h(of)f(locality-enhancing)j(cache)e
(optimiza-)-150 2474 y(tions.)k(Ho)n(we)n(v)o(er)m(,)h(the)g(fusion)g
(bene\002t)f(remains)h(a)f(signi\002cant)h(f)o(actor;)f(for)-150
2557 y(e)o(xample,)15 b(using)g(Intel)g(VT)m(une)f(on)h(the)g(Pentium)g
(3,)f(we)h(measured)g(that)g(full)-150 2640 y(fusion)21
b(of)n(fers)g(a)g(50\045)g(reduction)h(in)e(memory)h(accesses)h(o)o(v)o
(er)f(the)g(cache-)-150 2723 y(optimized)d(v)o(ersion.)f(This)f(ef)n
(fect)h(may)h(be)f(pronounced)j(on)d(the)g(Itanium)g(2)-150
2806 y(due)j(to)f(the)h(lar)o(ger)f(number)h(of)g(re)o(gisters)f(on)h
(that)f(architecture)h(\(128)g(gen-)-150 2889 y(eral,)i(128)h
(\003oating)f(point\).)g(While)g(fusion)h(bene\002ts)f(are)h(also)f
(present)h(on)-150 2972 y(the)k(StrongARM,)g(cache)h(optimizations)f
(are)g(more)h(important)f(on)g(that)-150 3055 y(processor)20
b(due)g(to)e(the)h(lar)o(ge)g(penalty)h(for)f(cache)g(misses.)-50
3138 y(The)c(cache)h(a)o(w)o(are)g(fusion)g(algorithm)g(can)g(be)f
(adjusted)i(to)e(account)h(for)-150 3221 y(the)25 b(caching)h
(hierarchy)f(on)g(desktop)i(machines.)e(Speci\002cally)-5
b(,)24 b(if)g(cache)-150 3304 y(a)o(w)o(are)16 b(fusion)g(is)g
(modi\002ed)g(to)g(allo)n(w)f(fused)i(actors)f(to)f(consume)j(up)e(to)g
(one)-150 3387 y(half)23 b(of)f(the)h(L2)g(cache)g(\(rather)g(than)g
(L1)g(cache\),)g(then)g(the)g(performance)-150 3470 y(of)17
b(the)f(cache)i(optimizations)f(is)g(closer)f(or)h(equal)h(to)e(full)g
(fusion,)h(for)g(cases)-150 3553 y(it)23 b(w)o(as)h(pre)n(viously)h
(trailing)e(on)h(the)g(Pentium)f(3)h(or)g(the)g(Itanium)f(2)h(\(data)
-150 3636 y(not)16 b(sho)n(wn\).)g(The)g(only)g(benchmark)h(that)f(is)f
(ne)o(gati)n(v)o(ely)h(impacted)g(by)h(this)-150 3719
y(change)f(is)e Fu(ofdm)p FD(,)g(where)h(tw)o(o)f(lar)o(ge)h(actors)g
(are)f(fused)i(despite)f(a)f(v)o(ery)h(lo)n(w)-150 3802
y(communication)22 b(to)f(computation)h(ratio,)e(thereby)i(lessening)f
(the)g(impact)-150 3885 y(of)28 b(eliminated)h(memory)g(accesses)g
(while)f(nonetheless)i(w)o(orsening)f(the)-150 3968 y(instruction)19
b(locality)-5 b(.)-150 4184 y Fz(Impact)31 b(of)f(Eac)o(h)g
(Optimization)74 b FD(T)-6 b(o)30 b(better)g(understand)h(the)f(o)o(v)o
(erall)-150 4267 y(speedups,)c(we)f(assess)g(the)g(indi)n(vidual)h
(performance)h(impact)e(of)g(e)o(x)o(ecu-)-150 4350 y(tion)18
b(scaling,)f(cache)i(a)o(w)o(are)e(fusion,)h(and)g(b)o(uf)n(fer)g
(management)h(optimiza-)-150 4433 y(tions.)i(These)h(results)f(are)g
(illustrated)g(in)g(Figures)h(18,)f(19)h(and)g(20)g(for)f(the)-150
4516 y(StrongARM,)16 b(Pentium)g(3,)f(and)i(Itanium)f(2,)g(respecti)n
(v)o(ely)-5 b(.)16 b(There)g(are)g(four)-150 4599 y(bars)k(per)f
(benchmark;)i(as)e(in)h(the)f(pre)n(vious)i(analysis,)e(all)g
(performance)i(is)-150 4682 y(normalized)d(to)e(unoptimized)i(StreamIt)
e(\(with)g(128-w)o(ay)i(unrolling\).)f(The)-150 4765
y(\002rst)29 b(bar)m(,)h(labeled)g Fu(scaling)p FD(,)e(applies)j(only)f
(e)o(x)o(ecution)h(scaling.)f(The)-150 4848 y(second)23
b(bar)m(,)f(labeled)h Fu(CAF)p FD(,)e(applies)i(only)f(cache)h(a)o(w)o
(are)g(fusion,)f(includ-)-150 4932 y(ing)28 b(scalar)f(replacement)i
(across)f(the)g(fused)g(actors.)f(The)h(third)f(bar)m(,)h(la-)-150
5015 y(beled)20 b Fu(CAF+scaling)p FD(,)c(\002rst)i(applies)i(cache)g
(a)o(w)o(are)f(fusion)h(with)e(scalar)-150 5098 y(replacement)23
b(and)g(then)f(applies)g(e)o(x)o(ecution-scaling)i(to)e(the)g
(granularity-)-150 5181 y(adjusted)17 b(actors.)f(The)g(fourth)g(bar)m
(,)g(labeled)h Fu(CAF+scaling+buffer)p FD(,)-150 5264
y(additionally)40 b(applies)g(b)o(uf)n(fer)f(management)h
(optimizations)g(\(detailed)-150 5347 y(later\);)33 b(this)h(bar)g(is)g
(equi)n(v)n(alent)h(to)f(the)h(\223best\224)f(cache-optimized)i(per)o
(-)-150 5430 y(formance)20 b(illustrated)e(in)h(Figures)g(15,)g(16,)g
(and)h(17.)2042 1396 y @beginspecial 0 @llx 0 @lly 684
@urx 468 @ury 2448 @rwi @setspecial
%%BeginDocument: arm2.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: arm2.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/18/2005
%%CropBox: 0.000000 0.000000 683.040039 467.040039
%%BoundingBox: 0 0 684 468 
%%HiResBoundingBox: 0.000000 0.000000 683.040039 467.040039
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.04 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.04 ln
683.04 467.04 ln
683.04 0 ln
clp
671.1 18.48 mo
671.1 375.66 ln
79.3203 375.66 ln
79.3203 18.48 ln
671.1 18.48 ln
false op
0 0 0 0 cmyk
f
gsave
79.3203 316.14 mo
79.3203 316.2 ln
671.1 316.2 ln
671.1 316.14 ln
79.3203 316.14 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.3203 316.14 mo
671.1 316.14 ln
0 0 0 1 cmyk
s
grestore
gsave
79.3203 256.62 mo
79.3203 256.68 ln
671.1 256.68 ln
671.1 256.62 ln
79.3203 256.62 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.3203 256.62 mo
671.1 256.62 ln
0 0 0 1 cmyk
s
grestore
gsave
79.3203 197.1 mo
79.3203 197.16 ln
671.1 197.16 ln
671.1 197.1 ln
79.3203 197.1 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.3203 197.1 mo
671.1 197.1 ln
0 0 0 1 cmyk
s
grestore
gsave
79.3203 137.52 mo
79.3203 137.58 ln
671.1 137.58 ln
671.1 137.52 ln
79.3203 137.52 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.3203 137.52 mo
671.1 137.52 ln
0 0 0 1 cmyk
s
grestore
gsave
79.3203 78 mo
79.3203 78.0601 ln
671.1 78.0601 ln
671.1 78 ln
79.3203 78 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.3203 78 mo
671.1 78 ln
0 0 0 1 cmyk
s
grestore
gsave
79.3203 18.48 mo
79.3203 18.54 ln
671.1 18.54 ln
671.1 18.48 ln
79.3203 18.48 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.3203 18.48 mo
671.1 18.48 ln
0 0 0 1 cmyk
s
grestore
gsave
0 0 mo
0 467.04 ln
683.04 467.04 ln
683.04 0 ln
0 0 ln
cp
134.82 32.04 mo
134.82 55.02 ln
625.8 55.02 ln
625.8 32.04 ln
134.82 32.04 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
79.3203 18.48 mo
79.3203 375.66 ln
671.1 375.66 ln
671.1 18.48 ln
79.3203 18.48 ln
cp
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
85.5 316.44 mo
85.5 375.66 ln
93.7197 375.66 ln
93.7197 316.44 ln
85.5 316.44 ln
0 0 0 1 cmyk
ef
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
85.5 316.44 mo
85.5 375.66 ln
93.7197 375.66 ln
93.7197 316.44 ln
85.5 316.44 ln
cp
0 0 0 1 cmyk
s
131.04 357.66 mo
131.04 375.66 ln
139.26 375.66 ln
139.26 357.66 ln
131.04 357.66 ln
0 0 0 1 cmyk
ef
131.04 357.66 mo
131.04 375.66 ln
139.26 375.66 ln
139.26 357.66 ln
131.04 357.66 ln
cp
0 0 0 1 cmyk
s
176.52 286.38 mo
176.52 375.66 ln
184.74 375.66 ln
184.74 286.38 ln
176.52 286.38 ln
0 0 0 1 cmyk
ef
176.52 286.38 mo
176.52 375.66 ln
184.74 375.66 ln
184.74 286.38 ln
176.52 286.38 ln
cp
0 0 0 1 cmyk
s
222.06 217.92 mo
222.06 375.66 ln
230.28 375.66 ln
230.28 217.92 ln
222.06 217.92 ln
0 0 0 1 cmyk
ef
222.06 217.92 mo
222.06 375.66 ln
230.28 375.66 ln
230.28 217.92 ln
222.06 217.92 ln
cp
0 0 0 1 cmyk
s
267.6 290.64 mo
267.6 375.66 ln
275.82 375.66 ln
275.82 290.64 ln
267.6 290.64 ln
0 0 0 1 cmyk
ef
267.6 290.64 mo
267.6 375.66 ln
275.82 375.66 ln
275.82 290.64 ln
267.6 290.64 ln
cp
0 0 0 1 cmyk
s
313.08 227.52 mo
313.08 375.66 ln
321.3 375.66 ln
321.3 227.52 ln
313.08 227.52 ln
0 0 0 1 cmyk
ef
313.08 227.52 mo
313.08 375.66 ln
321.3 375.66 ln
321.3 227.52 ln
313.08 227.52 ln
cp
0 0 0 1 cmyk
s
358.62 126.24 mo
358.62 375.66 ln
366.84 375.66 ln
366.84 126.24 ln
358.62 126.24 ln
0 0 0 1 cmyk
ef
358.62 126.24 mo
358.62 375.66 ln
366.84 375.66 ln
366.84 126.24 ln
358.62 126.24 ln
cp
0 0 0 1 cmyk
s
404.16 343.26 mo
404.16 375.66 ln
412.38 375.66 ln
412.38 343.26 ln
404.16 343.26 ln
0 0 0 1 cmyk
ef
404.16 343.26 mo
404.16 375.66 ln
412.38 375.66 ln
412.38 343.26 ln
404.16 343.26 ln
cp
0 0 0 1 cmyk
s
449.7 257.28 mo
449.7 375.66 ln
457.92 375.66 ln
457.92 257.28 ln
449.7 257.28 ln
0 0 0 1 cmyk
ef
449.7 257.28 mo
449.7 375.66 ln
457.92 375.66 ln
457.92 257.28 ln
449.7 257.28 ln
cp
0 0 0 1 cmyk
s
495.18 293.22 mo
495.18 375.66 ln
503.399 375.66 ln
503.4 293.22 ln
495.18 293.22 ln
0 0 0 1 cmyk
ef
495.18 293.22 mo
495.18 375.66 ln
503.399 375.66 ln
503.4 293.22 ln
495.18 293.22 ln
cp
0 0 0 1 cmyk
s
540.72 79.3198 mo
540.72 375.66 ln
548.939 375.66 ln
548.939 79.3198 ln
540.72 79.3198 ln
0 0 0 1 cmyk
ef
540.72 79.3198 mo
540.72 375.66 ln
548.939 375.66 ln
548.939 79.3198 ln
540.72 79.3198 ln
cp
0 0 0 1 cmyk
s
586.26 254.16 mo
586.26 375.66 ln
594.479 375.66 ln
594.48 254.16 ln
586.26 254.16 ln
0 0 0 1 cmyk
ef
586.26 254.16 mo
586.26 375.66 ln
594.479 375.66 ln
594.48 254.16 ln
586.26 254.16 ln
cp
0 0 0 1 cmyk
s
631.74 280.74 mo
631.74 375.66 ln
639.96 375.66 ln
639.96 280.74 ln
631.74 280.74 ln
0 0 0 1 cmyk
ef
631.74 280.74 mo
631.74 375.66 ln
639.96 375.66 ln
639.96 280.74 ln
631.74 280.74 ln
cp
0 0 0 1 cmyk
s
93.7803 346.68 mo
93.7803 375.66 ln
102 375.66 ln
102 346.68 ln
93.7803 346.68 ln
0 0 0 0.6 cmyk
ef
93.7803 346.68 mo
93.7803 375.66 ln
102 375.66 ln
102 346.68 ln
93.7803 346.68 ln
cp
0 0 0 1 cmyk
s
139.32 372.18 mo
139.32 375.66 ln
147.54 375.66 ln
147.54 372.18 ln
139.32 372.18 ln
0 0 0 0.6 cmyk
ef
139.32 372.18 mo
139.32 375.66 ln
147.54 375.66 ln
147.54 372.18 ln
139.32 372.18 ln
cp
0 0 0 1 cmyk
s
184.8 253.8 mo
184.8 375.66 ln
193.02 375.66 ln
193.02 253.8 ln
184.8 253.8 ln
0 0 0 0.6 cmyk
ef
184.8 253.8 mo
184.8 375.66 ln
193.02 375.66 ln
193.02 253.8 ln
184.8 253.8 ln
cp
0 0 0 1 cmyk
s
230.34 200.04 mo
230.34 375.66 ln
238.56 375.66 ln
238.56 200.04 ln
230.34 200.04 ln
0 0 0 0.6 cmyk
ef
230.34 200.04 mo
230.34 375.66 ln
238.56 375.66 ln
238.56 200.04 ln
230.34 200.04 ln
cp
0 0 0 1 cmyk
s
275.88 364.62 mo
275.88 375.66 ln
284.1 375.66 ln
284.1 364.62 ln
275.88 364.62 ln
0 0 0 0.6 cmyk
ef
275.88 364.62 mo
275.88 375.66 ln
284.1 375.66 ln
284.1 364.62 ln
275.88 364.62 ln
cp
0 0 0 1 cmyk
s
321.36 152.1 mo
321.36 375.66 ln
329.58 375.66 ln
329.58 152.1 ln
321.36 152.1 ln
0 0 0 0.6 cmyk
ef
321.36 152.1 mo
321.36 375.66 ln
329.58 375.66 ln
329.58 152.1 ln
321.36 152.1 ln
cp
0 0 0 1 cmyk
s
366.899 206.22 mo
366.899 375.66 ln
375.12 375.66 ln
375.12 206.22 ln
366.899 206.22 ln
0 0 0 0.6 cmyk
ef
366.899 206.22 mo
366.899 375.66 ln
375.12 375.66 ln
375.12 206.22 ln
366.899 206.22 ln
cp
0 0 0 1 cmyk
s
412.439 150.36 mo
412.439 375.66 ln
420.66 375.66 ln
420.66 150.36 ln
412.439 150.36 ln
0 0 0 0.6 cmyk
ef
412.439 150.36 mo
412.439 375.66 ln
420.66 375.66 ln
420.66 150.36 ln
412.439 150.36 ln
cp
0 0 0 1 cmyk
s
457.98 166.14 mo
457.979 375.66 ln
466.2 375.66 ln
466.2 166.14 ln
457.98 166.14 ln
0 0 0 0.6 cmyk
ef
457.98 166.14 mo
457.979 375.66 ln
466.2 375.66 ln
466.2 166.14 ln
457.98 166.14 ln
cp
0 0 0 1 cmyk
s
503.46 58.1401 mo
503.46 375.66 ln
511.68 375.66 ln
511.68 58.1401 ln
503.46 58.1401 ln
0 0 0 0.6 cmyk
ef
503.46 58.1401 mo
503.46 375.66 ln
511.68 375.66 ln
511.68 58.1401 ln
503.46 58.1401 ln
cp
0 0 0 1 cmyk
s
549 79.3198 mo
549 375.66 ln
557.22 375.66 ln
557.22 79.3198 ln
549 79.3198 ln
0 0 0 0.6 cmyk
ef
549 79.3198 mo
549 375.66 ln
557.22 375.66 ln
557.22 79.3198 ln
549 79.3198 ln
cp
0 0 0 1 cmyk
s
594.54 213.6 mo
594.54 375.66 ln
602.76 375.66 ln
602.76 213.6 ln
594.54 213.6 ln
0 0 0 0.6 cmyk
ef
594.54 213.6 mo
594.54 375.66 ln
602.76 375.66 ln
602.76 213.6 ln
594.54 213.6 ln
cp
0 0 0 1 cmyk
s
640.02 279.18 mo
640.02 375.66 ln
648.24 375.66 ln
648.24 279.18 ln
640.02 279.18 ln
0 0 0 0.6 cmyk
ef
640.02 279.18 mo
640.02 375.66 ln
648.24 375.66 ln
648.24 279.18 ln
640.02 279.18 ln
cp
0 0 0 1 cmyk
s
102.06 362.16 mo
102.06 375.66 ln
110.28 375.66 ln
110.28 362.16 ln
102.06 362.16 ln
0 0 0 0.4 cmyk
ef
102.06 362.16 mo
102.06 375.66 ln
110.28 375.66 ln
110.28 362.16 ln
102.06 362.16 ln
cp
0 0 0 1 cmyk
s
147.6 372.3 mo
147.6 375.66 ln
155.76 375.66 ln
155.76 372.3 ln
147.6 372.3 ln
0 0 0 0.4 cmyk
ef
147.6 372.3 mo
147.6 375.66 ln
155.76 375.66 ln
155.76 372.3 ln
147.6 372.3 ln
cp
0 0 0 1 cmyk
s
193.08 299.4 mo
193.08 375.66 ln
201.3 375.66 ln
201.3 299.4 ln
193.08 299.4 ln
0 0 0 0.4 cmyk
ef
193.08 299.4 mo
193.08 375.66 ln
201.3 375.66 ln
201.3 299.4 ln
193.08 299.4 ln
cp
0 0 0 1 cmyk
s
238.62 271.5 mo
238.62 375.66 ln
246.84 375.66 ln
246.84 271.5 ln
238.62 271.5 ln
0 0 0 0.4 cmyk
ef
238.62 271.5 mo
238.62 375.66 ln
246.84 375.66 ln
246.84 271.5 ln
238.62 271.5 ln
cp
0 0 0 1 cmyk
s
284.16 362.28 mo
284.16 375.66 ln
292.32 375.66 ln
292.32 362.28 ln
284.16 362.28 ln
0 0 0 0.4 cmyk
ef
284.16 362.28 mo
284.16 375.66 ln
292.32 375.66 ln
292.32 362.28 ln
284.16 362.28 ln
cp
0 0 0 1 cmyk
s
329.64 270.3 mo
329.64 375.66 ln
337.86 375.66 ln
337.86 270.3 ln
329.64 270.3 ln
0 0 0 0.4 cmyk
ef
329.64 270.3 mo
329.64 375.66 ln
337.86 375.66 ln
337.86 270.3 ln
329.64 270.3 ln
cp
0 0 0 1 cmyk
s
375.18 222.78 mo
375.18 375.66 ln
383.399 375.66 ln
383.4 222.78 ln
375.18 222.78 ln
0 0 0 0.4 cmyk
ef
375.18 222.78 mo
375.18 375.66 ln
383.399 375.66 ln
383.4 222.78 ln
375.18 222.78 ln
cp
0 0 0 1 cmyk
s
420.721 344.88 mo
420.72 375.66 ln
428.939 375.66 ln
428.939 344.88 ln
420.721 344.88 ln
0 0 0 0.4 cmyk
ef
420.721 344.88 mo
420.72 375.66 ln
428.939 375.66 ln
428.939 344.88 ln
420.721 344.88 ln
cp
0 0 0 1 cmyk
s
466.26 305.4 mo
466.26 375.66 ln
474.42 375.66 ln
474.42 305.4 ln
466.26 305.4 ln
0 0 0 0.4 cmyk
ef
466.26 305.4 mo
466.26 375.66 ln
474.42 375.66 ln
474.42 305.4 ln
466.26 305.4 ln
cp
0 0 0 1 cmyk
s
511.74 281.52 mo
511.74 375.66 ln
519.96 375.66 ln
519.96 281.52 ln
511.74 281.52 ln
0 0 0 0.4 cmyk
ef
511.74 281.52 mo
511.74 375.66 ln
519.96 375.66 ln
519.96 281.52 ln
511.74 281.52 ln
cp
0 0 0 1 cmyk
s
557.28 79.3198 mo
557.28 375.66 ln
565.5 375.66 ln
565.5 79.3198 ln
557.28 79.3198 ln
0 0 0 0.4 cmyk
ef
557.28 79.3198 mo
557.28 375.66 ln
565.5 375.66 ln
565.5 79.3198 ln
557.28 79.3198 ln
cp
0 0 0 1 cmyk
s
602.82 288.36 mo
602.819 375.66 ln
610.979 375.66 ln
610.98 288.36 ln
602.82 288.36 ln
0 0 0 0.4 cmyk
ef
602.82 288.36 mo
602.819 375.66 ln
610.979 375.66 ln
610.98 288.36 ln
602.82 288.36 ln
cp
0 0 0 1 cmyk
s
648.3 323.52 mo
648.3 375.66 ln
656.52 375.66 ln
656.52 323.52 ln
648.3 323.52 ln
0 0 0 0.4 cmyk
ef
648.3 323.52 mo
648.3 375.66 ln
656.52 375.66 ln
656.52 323.52 ln
648.3 323.52 ln
cp
0 0 0 1 cmyk
s
110.34 362.16 mo
110.34 375.66 ln
118.56 375.66 ln
118.56 362.16 ln
110.34 362.16 ln
0 0 0 0.2 cmyk
ef
110.34 362.16 mo
110.34 375.66 ln
118.56 375.66 ln
118.56 362.16 ln
110.34 362.16 ln
cp
0 0 0 1 cmyk
s
155.82 372.3 mo
155.82 375.66 ln
164.04 375.66 ln
164.04 372.3 ln
155.82 372.3 ln
0 0 0 0.2 cmyk
ef
155.82 372.3 mo
155.82 375.66 ln
164.04 375.66 ln
164.04 372.3 ln
155.82 372.3 ln
cp
0 0 0 1 cmyk
s
201.36 299.4 mo
201.36 375.66 ln
209.58 375.66 ln
209.58 299.4 ln
201.36 299.4 ln
0 0 0 0.4 cmyk
ef
201.36 299.4 mo
201.36 375.66 ln
209.58 375.66 ln
209.58 299.4 ln
201.36 299.4 ln
cp
0 0 0 1 cmyk
s
246.9 271.5 mo
246.9 375.66 ln
255.12 375.66 ln
255.12 271.5 ln
246.9 271.5 ln
0 0 0 0.2 cmyk
ef
246.9 271.5 mo
246.9 375.66 ln
255.12 375.66 ln
255.12 271.5 ln
246.9 271.5 ln
cp
0 0 0 1 cmyk
s
292.38 362.28 mo
292.38 375.66 ln
300.6 375.66 ln
300.6 362.28 ln
292.38 362.28 ln
0 0 0 0.2 cmyk
ef
292.38 362.28 mo
292.38 375.66 ln
300.6 375.66 ln
300.6 362.28 ln
292.38 362.28 ln
cp
0 0 0 1 cmyk
s
337.92 270.3 mo
337.92 375.66 ln
346.14 375.66 ln
346.14 270.3 ln
337.92 270.3 ln
0 0 0 0.2 cmyk
ef
337.92 270.3 mo
337.92 375.66 ln
346.14 375.66 ln
346.14 270.3 ln
337.92 270.3 ln
cp
0 0 0 1 cmyk
s
383.46 222.78 mo
383.46 375.66 ln
391.68 375.66 ln
391.68 222.78 ln
383.46 222.78 ln
0 0 0 0.2 cmyk
ef
383.46 222.78 mo
383.46 375.66 ln
391.68 375.66 ln
391.68 222.78 ln
383.46 222.78 ln
cp
0 0 0 1 cmyk
s
429 344.34 mo
429 375.66 ln
437.22 375.66 ln
437.221 344.34 ln
429 344.34 ln
0 0 0 0.2 cmyk
ef
429 344.34 mo
429 375.66 ln
437.22 375.66 ln
437.221 344.34 ln
429 344.34 ln
cp
0 0 0 1 cmyk
s
474.48 297.84 mo
474.479 375.66 ln
482.7 375.66 ln
482.7 297.84 ln
474.48 297.84 ln
0 0 0 0.2 cmyk
ef
474.48 297.84 mo
474.479 375.66 ln
482.7 375.66 ln
482.7 297.84 ln
474.48 297.84 ln
cp
0 0 0 1 cmyk
s
520.02 310.74 mo
520.02 375.66 ln
528.24 375.66 ln
528.24 310.74 ln
520.02 310.74 ln
0 0 0 0.2 cmyk
ef
520.02 310.74 mo
520.02 375.66 ln
528.24 375.66 ln
528.24 310.74 ln
520.02 310.74 ln
cp
0 0 0 1 cmyk
s
565.561 79.3198 mo
565.56 375.66 ln
573.78 375.66 ln
573.78 79.3198 ln
565.561 79.3198 ln
0 0 0 0.2 cmyk
ef
565.561 79.3198 mo
565.56 375.66 ln
573.78 375.66 ln
573.78 79.3198 ln
565.561 79.3198 ln
cp
0 0 0 1 cmyk
s
611.04 290.28 mo
611.04 375.66 ln
619.26 375.66 ln
619.26 290.28 ln
611.04 290.28 ln
0 0 0 0.2 cmyk
ef
611.04 290.28 mo
611.04 375.66 ln
619.26 375.66 ln
619.26 290.28 ln
611.04 290.28 ln
cp
0 0 0 1 cmyk
s
656.58 324.66 mo
656.58 375.66 ln
664.8 375.66 ln
664.8 324.66 ln
656.58 324.66 ln
0 0 0 0.2 cmyk
ef
656.58 324.66 mo
656.58 375.66 ln
664.8 375.66 ln
664.8 324.66 ln
656.58 324.66 ln
cp
0 0 0 1 cmyk
s
0.0599976 lw
79.3203 18.48 mo
79.3203 375.66 ln
75 375.66 mo
79.3203 375.66 ln
75 316.14 mo
79.3203 316.14 ln
75 256.62 mo
79.3203 256.62 ln
75 197.1 mo
79.3203 197.1 ln
75 137.52 mo
79.3203 137.52 ln
75 78 mo
79.3203 78 ln
75 18.48 mo
79.3203 18.48 ln
79.3203 375.66 mo
671.1 375.66 ln
79.3203 379.98 mo
79.3203 375.66 ln
124.86 379.98 mo
124.86 375.66 ln
170.34 379.98 mo
170.34 375.66 ln
215.88 379.98 mo
215.88 375.66 ln
261.42 379.98 mo
261.42 375.66 ln
306.9 379.98 mo
306.9 375.66 ln
352.439 379.98 mo
352.439 375.66 ln
397.979 379.98 mo
397.979 375.66 ln
443.52 379.98 mo
443.52 375.66 ln
489 379.98 mo
489 375.66 ln
534.54 379.98 mo
534.54 375.66 ln
580.08 379.98 mo
580.08 375.66 ln
625.56 379.98 mo
625.56 375.66 ln
671.1 379.98 mo
671.1 375.66 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
60.9004 380.22 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 320.7 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9752 320.7 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 261.18 mov
(0) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9752 261.18 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
60.8593 261.18 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 201.66 mov
(0) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9752 201.66 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
60.8593 201.66 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 142.08 mov
(0) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9752 142.08 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
60.8593 142.08 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
60.9004 82.5605 mov
(1) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
49.2002 23.0405 mov
(1) sh
/ArialMT*2 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
56.9752 23.0405 mov
(.2) sh
625.74 32.1001 mo
625.74 55.02 ln
134.88 55.02 ln
134.88 32.1001 ln
625.74 32.1001 ln
0 0 0 0 cmyk
f
134.82 32.04 mo
134.82 55.02 ln
625.74 55.02 ln
625.74 32.04 ln
134.82 32.04 ln
cp
0 0 0 1 cmyk
s
156.54 39.7202 mo
156.54 48.2998 ln
165.12 48.2998 ln
165.12 39.7202 ln
156.54 39.7202 ln
0 0 0 1 cmyk
ef
0.960007 lw
156.54 39.7202 mo
156.54 48.2998 ln
165.12 48.2998 ln
165.12 39.7202 ln
156.54 39.7202 ln
cp
0 0 0 1 cmyk
s
255.9 39.7202 mo
255.9 48.2998 ln
264.48 48.2998 ln
264.48 39.7202 ln
255.9 39.7202 ln
0 0 0 0.6 cmyk
ef
255.9 39.7202 mo
255.9 48.2998 ln
264.48 48.2998 ln
264.48 39.7202 ln
255.9 39.7202 ln
cp
0 0 0 1 cmyk
s
337.2 39.7202 mo
337.2 48.2998 ln
345.779 48.2998 ln
345.779 39.7202 ln
337.2 39.7202 ln
0 0 0 0.4 cmyk
ef
337.2 39.7202 mo
337.2 48.2998 ln
345.779 48.2998 ln
345.779 39.7202 ln
337.2 39.7202 ln
cp
0 0 0 1 cmyk
s
470.34 39.7202 mo
470.34 48.2998 ln
478.92 48.2998 ln
478.92 39.7202 ln
470.34 39.7202 ln
0 0 0 0.2 cmyk
ef
470.34 39.7202 mo
470.34 48.2998 ln
478.92 48.2998 ln
478.92 39.7202 ln
470.34 39.7202 ln
cp
0 0 0 1 cmyk
s
2.5 lw
0 lc
1 lj
79.3203 78 mo
539.446 78 ln
547.749 78 mo
671.1 78 ln
0.0235294 0.0196078 0.0196078 0.992157 cmyk
s
115.82 78 mo
547.684 78 ln
555.477 78 mo
671.25 78 ln
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
98{/.notdef}repeat /b 157{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
69.4805 427.08 mov
(b) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 105 /i put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
105{/.notdef}repeat /i 10{/.notdef}repeat /t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
75 421.619 mov
0.0198212 -0.0197906 (it) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
111{/.notdef}repeat /o 144{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
79.9199 416.641 mov
(o) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
110{/.notdef}repeat /n 145{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
85.4395 411.18 mov
(n) sh
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
90.957 405.662 mov
(i) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
end end
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
99{/.notdef}repeat /c 156{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
93.1191 403.44 mov
(c) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
102{/.notdef}repeat /f 153{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
135.419 406.68 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
138.18 403.979 mov
(i) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
114{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
140.396 401.764 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
161.639 425.999 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
164.398 423.299 mov
(f) sh
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
167.155 420.542 mov
(t) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
169.911 417.786 mov
(-) sh
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
173.213 414.484 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
175.919 411.72 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
178.138 409.56 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
end end
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
101{/.notdef}repeat /e 154{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
183.655 404.042 mov
(e) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
193.318 439.799 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
196.079 437.099 mov
(f) sh
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
198.835 434.342 mov
(t) sh
/ArialMT*14 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
201.592 431.586 mov
(-) sh
/ArialMT*11 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
204.894 428.284 mov
(c) sh
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
209.846 423.332 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
215.354 417.824 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
220.799 412.379 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
115{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
224.099 409.079 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
229.019 404.099 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
258.179 420.479 mov
(3) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
103{/.notdef}repeat /g 8{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
263.698 415.019 mov
0.0198822 -0.0198517 (gp) ash
restore_ctm
save_ctm
/ArialMT*19 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
274.679 403.979 mov
(p) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
272.398 451.798 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
277.918 446.338 mov
(e) sh
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
283.436 440.82 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
288.898 435.298 mov
(m) sh
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
297.133 427.063 mov
(f) sh
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
299.88 424.317 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
305.398 418.857 mov
(r) sh
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
308.7 415.556 mov
(m) sh
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
316.945 407.311 mov
(e) sh
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
322.452 401.803 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
336.118 433.617 mov
(m) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
344.398 425.396 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
349.858 419.877 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
352.618 417.176 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*21 
[
117{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*21 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
360.839 408.896 mov
(u) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/ArialMT*22 
[
108{/.notdef}repeat /l 147{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*22 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
366.358 403.436 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
368.519 401.217 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
383.759 431.456 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
386.519 428.756 mov
(m) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
394.739 420.476 mov
(r) sh
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
398.041 417.174 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*23 
[
100{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*23 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
403.559 411.716 mov
(d) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
409.02 406.195 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
411.238 404.035 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
422.099 438.655 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
424.858 435.955 mov
(i) sh
/ArialMT*22 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
427.074 433.739 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
429.238 431.516 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
431.998 428.814 mov
(e) sh
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
437.516 423.297 mov
(r) sh
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
440.827 419.985 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
446.278 414.476 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
451.799 409.015 mov
(n) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*24 
[
107{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*24 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
457.259 403.494 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
462.118 444.174 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
464.879 441.474 mov
(i) sh
/ArialMT*22 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
467.095 439.258 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
469.259 437.034 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
472.019 434.333 mov
(e) sh
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
477.536 428.815 mov
(r) sh
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
480.848 425.504 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
486.299 419.994 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
491.818 414.533 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*24 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
497.279 409.014 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
502.26 404.093 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
531.359 420.413 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
536.879 414.952 mov
(f) sh
/ArialMT*23 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
539.635 412.196 mov
(d) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
545.1 406.673 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
563.039 434.272 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/g 
<10bf317046e845f3a98cff800425d1e47fcbf03f8b922783d5d36e307274
588ac60409269c037388a43cef04e921c8e3bf34e51e4a003e0b37bf8d31
c8fc8fb6ade393cdde44b4581b0ac925ec1f59a1fbaac3d1fb4e14f63283
84b7e26e832593dcad7ed930aa23e0b99c4561c07b07f1e2fa1eb18d1291
b9cf9003790fe409a130d99f5be39512a2ad37a7efa7c41860134fb79153
f4dd79307743390ebe3ee1401c0a499a781dcdce2157d130f5efa9fe3806
cc6c1819edacc0285ad54ab702e08879c56aefcc591124daf35783236ce0
3c246d126bb7a939> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 101 /e put
dup 103 /g put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
101{/.notdef}repeat /e /.notdef /g 10{/.notdef}repeat /r 3{/.notdef}repeat /v 
137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
568.56 428.812 mov
0.000274658 -0.000183105 wsa 101 get (ver) wsh
/Arial-BoldMT*1 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
583.402 413.969 mov
(a) sh
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
588.9 408.471 mov
(ge) sh
restore_ctm
save_ctm
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
603.119 439.731 mov
(ge) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/Arial-BoldMT*3 
[
109{/.notdef}repeat /m /n /o 144{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*3 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
614.655 428.195 mov
(om) sh
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
629.483 413.367 mov
(e) sh
/Arial-BoldMT*1 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
634.981 407.869 mov
(a) sh
/Arial-BoldMT*3 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
640.479 402.372 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 242.28 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*25 
[
32{/.notdef}repeat /space 87{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 234.491 mov
(x) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 227.487 mov
(e) sh
/ArialMT*11 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 219.698 mov
(c) sh
/ArialMT*21 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 212.694 mov
(u) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 204.905 mov
0 -0.0139771 (ti) ash
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 197.887 mov
(o) sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 190.098 mov
(n) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 182.309 mov
( ) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 178.411 mov
0 -0.0139771 (ti) ash
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 171.393 mov
(m) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
19.9199 159.734 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/S 
<10bf31704ab370a8a6c235279ed6c3fdd90391cf7962d0bccf3c0194207c
c985977a6da764734efebc21d6d1ae7133055444822d0fe1b965fdff1b05
ca2046c91bc219dee9d6de4fdbddec5d689eb735c6e0fa560831344d790e
3093e69a2340f4515581fc3f61c364582542aaf4a1803981e90247b3d87c
b4e83921ea1ea0fe7cb2d933b6761926389626e21ef635602b61796dffe5
8975cc1e5a348ada717869e184044d1b2d3ccec5d895b1b22a708b5514a1
fa0b8783acb9f99b94ec8c3dec98d4fe3f7d2f5da5a832e0f19d404c70f8
e5044360ab5b726faeaaff503556ef3182da97e4b93377852f62756de8dc
3b6de3f8b74afcc5f5fe> ND 
/z 
<10bf31706d7bdb7f5f74128c9bb1cf0445a721a78dcf191ad056927637c8
a135f0f22faf7df308eeea1c66e39a72a677a3dd701da853bf390cfc0a58
a3d2> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 83 /S put
dup 122 /z put
pop
%ADOEndSubsetFont
/ArialMT*26 
[
40{/.notdef}repeat /parenleft /parenright 31{/.notdef}repeat /I 9{/.notdef}repeat /S 38{/.notdef}repeat 
/z 133{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 312 mov
(\() sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 307.331 mov
(n) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 299.542 mov
(o) sh
/ArialMT*13 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 291.753 mov
(r) sh
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 287.083 mov
(m) sh
/ArialMT*16 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 275.424 mov
(a) sh
/ArialMT*22 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 267.635 mov
(l) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 264.515 mov
(i) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 261.395 mov
(z) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 254.391 mov
(e) sh
/ArialMT*23 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 246.602 mov
(d) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 238.813 mov
( ) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 234.915 mov
(t) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 231.017 mov
(o) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 223.228 mov
( ) sh
/ArialMT*21 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 219.33 mov
(u) sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 211.541 mov
(n) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 203.752 mov
(o) sh
/ArialMT*19 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 195.963 mov
(p) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 188.174 mov
0 -0.0139771 (ti) ash
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 181.156 mov
(m) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 169.497 mov
(i) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 166.377 mov
(z) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 159.373 mov
(e) sh
/ArialMT*23 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 151.584 mov
(d) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 143.795 mov
( ) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 139.897 mov
(S) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 130.558 mov
(t) sh
/ArialMT*13 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 126.66 mov
(r) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 121.991 mov
(e) sh
/ArialMT*16 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 114.202 mov
(a) sh
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 106.413 mov
(m) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 94.7532 mov
(I) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 90.8551 mov
(t) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
36.9004 86.957 mov
(\)) sh
restore_ctm
save_ctm
/ArialMT*26 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
168.42 48.7798 mov
(S) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
177.744 48.7798 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
184.734 48.7798 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
192.509 48.7798 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
195.615 48.7798 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
198.721 48.7798 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
206.496 48.7798 mov
(g) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 67 /C put
dup 70 /F put
pop
%ADOEndSubsetFont
/ArialMT*27 
[
65{/.notdef}repeat /A /.notdef /C 2{/.notdef}repeat /F 185{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
267.78 48.7798 mov
(CAF) sh
restore_ctm
save_ctm
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
349.08 48.7798 mov
(CAF) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/ArialMT*28 
[
43{/.notdef}repeat /plus 212{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
377.04 48.7798 mov
(+) sh
/ArialMT*17 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
385.204 48.7798 mov
(s) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
392.194 48.7798 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
399.184 48.7798 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
406.959 48.7798 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
410.065 48.7798 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
413.171 48.7798 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
420.946 48.7798 mov
(g) sh
restore_ctm
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
482.221 48.7798 mov
(CAF) sh
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
510.181 48.7798 mov
(+) sh
/ArialMT*17 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
518.345 48.7798 mov
(s) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
525.335 48.7798 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
532.325 48.7798 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
540.1 48.7798 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
543.206 48.7798 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
546.312 48.7798 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
554.087 48.7798 mov
(g) sh
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
561.862 48.7798 mov
(+) sh
/ArialMT*7 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
570.026 48.7798 mov
(b) sh
/ArialMT*21 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
577.801 48.7798 mov
(u) sh
/ArialMT*12 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
585.576 48.7798 mov
(ff) sh
/ArialMT*15 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
593.344 48.7798 mov
(e) sh
/ArialMT*13 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
601.119 48.7798 mov
(r) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (arm2.eps)
%%CreationDate: 4/18/2005 9:41 PM
%AI9_DataStream
%Gb"/LD3GntP31q+K`4>eEJ1uO9buTd]UpJ&T$n04dTW)FcZplP'Ut816T0;DCtY8:q<sYGAcaNhMK8GBAMYqkB&l:2!%J$1HR;Qr
%I.:`qHZcm/HM:tKo2jIr0sNLAX$UX&ONbTI?[VCY(>mGVNjVKSg/GnX*bbHDH?Qoh?Ys.df!G1sc-u?+]t*s=HMVW-<IHfS8&%`u
%5L#P<ohX,%j`L3_DP(k!='KG:GdEbi^O(ZAr`T61Gd:X^8kj4#o(Mp+\X6b',CO5`le;l"pJl?1@,B,:e`4jGS,)C3r53nr?U&uT
%.PnA1/]6tbfm^S?^Y;Gchga.!F_-<]n][W-BZehb(2Muca*Y7"hVN'-e*VIV"!2/9]6R21B'F`gd*FZ>Vq<%/ULBfL#*&BRgVn44
%m<Z+-DQ>IS8ghFQnV2RhX[-+UT3]^-\!Q\&Znq;H#6'@,8[%rNQh0U1hEgJI;h"T!T75\RkHCnSs(A?%5CPhH\):sPelRA#'!5j_
%jLm50f2MKr`hT6S*_Z.ur9a-"\J9Xp>q7CB^T:tkc`^2e_n@8/9)dogoDb7WOoKW6nGce#IL0Ri\]W*B?G-%On$(4_es-d<ZdfP_
%pB(9]&Hdl$Ho58:0;mPbdu(QX-reKGOfsU@pA`>WBToq\^WkC\[8qe2&_-`r@fFhXeVg?2N3Ah$qlT;Vj3@;Zibu2j5/\o`/[fe=
%oXF:-Qh/HDY83cD)7,V-hlSQp9A)lWj4iZ0HeVgEri`bT2;Pp7Da?M/>O94.<E&)<rc#K<9L$f]2gN44p%.MFeZ8AX1X$Z\R49Kn
%^c]%RGT+3&Z*LZn1hFSD]SUoAN.NeTkR%.XJoL8UB(9bYop('J/+m@t4l:WOT5CQjerSFfr:h950?q\!dd,e-(7.+Q::=ou5<S7/
%e+qVXIl]SnWpOtYV1e?_e`G9Q$G-F]q;M_>rY6$bErAa_h>P1)d5u9MFaps]qo.ZeBQ/.,g!Ckn`"r`UC:h$I=%)$DpVR5GATQE!
%l%f(=idB;,H<^>L)&LN$_[FM]A3tFLQu/nIg[",6>1/IFr.jNO?BnA@kARd-e]6u9&]:d2]BOLFppp6`QCtDH2C2MHmN6rH1k0m/
%UNp7&IAcf)\Ps5#FN8hjgFTM:1r?E\#n[8G<a>i9#);+:jEGum2-Y^f<L+2F]%KbAo$j%_6`C!b)NSQCW,6[*/$o5%op1ufp%hi^
%=B=JDibH25=3L:/;Cbi!Gd[Ni:cYSrZnI3B:MpulbGXg,)_D$h(hDa35>4!pebnU`qeH'*c!n:i^\PC19*Klhf5A7IGO*37h_4a^
%[5=ckSTbanoG)Mdd`jsP%kPtGIe@UU^3]GK00=Y]5Q'KV2[Obreb&DfpUh0lJ!kfQ6I!JS5?hKEjLs2]kfUN9bMm7uhgCeD'n0JB
%1"Q663<:kHWJD;V`qs_oIfn[^:j:,CJKeG!=$h]lmiC7V">u[ohTmj3T?cTLhl4SEd;#ADLAtt-8SdkjC@QJ]]UANNrfU>jq!I[F
%kHfpSra*9@>UbsMPO"@emiMXA\uiues12QKl[cVOFnG^7q+oU@m#e>9F^\uc<t?BTP_g@g&V'nKV5K<HRXtB.i_XP,8]8$T?AW3@
%E;WX%C*"gE(0Xrco!+kqD8K*"2-%#?#Dpq402"M":GajABmVO7Ui?i`plO\[[AeQ>d40jmP6Ait8USt(7dc8eoNQ&\HFYcEimu+.
%eO;hNgd5<\FEe*fDUt4(]lCJchoo[2J(I,=]3$\4X488oQ49-dKr&Ms?L=sh":1S+)N"OGdOG9@b["jk?'#@NX\>,CPqGQ`AMn4c
%4,GkHhB&YInWoK))e&8(T_Tn8\E.]m6%ks%<gpHSLA)!Mh)Z6q2sD@8>s*4'!'jj(9LBT?a=>>;B6R^b-U$8UoO]"Y,t2HM]I<+_
%4e^/!)K^j6MI=`#U,LXSktlQ<Lt=8'&DUdA^[>#k9/p5K/?%cG3AIi,Pjn9bfCBu$qr[BbVM,MdP(Jg![]WQgiMG)\hrF"YHYD$+
%itl.7*+R1rM+ZN)IKGd?jIu`7<1[%hU/7la5nmLs>>s"W-$CHE!4(2,YmNbo,Yo5%0GM2F('+_.\lBl!%$!%Vj8lj]oIkf`"/3GA
%h"*qM0i8\$V+J:R84K9t\.bRIUOa(E$Gc07aqO08BGsZ@Lep2CfF#*^nKSW8"3s<LehBr)4p$^O+9gWn6fFo*V1t,p8rQK2D,qEk
%Ih)t(&.&`3R3nL.GYfZSZ]3ok+LdAh/eASeL'Ca4D^4`Q^"CfPHm;E7]hl)/&gOcB?H28.1_hn1EFf@YFu58c,E69C@B:&a?Lo!<
%lfR<.Y<`b=2T3a*UfZfFB"QaP"7JpERWOl]9iul]KlT_&"qSZl8:e4VE05eYF#GS0B?:h&(Ccb)PqAX4U:g[qGi0h6%s@TaH*R4^
%kTWh.&1R;kr!g`6KHX8k.(AFT'W/K;dIp+h&<k$781P#VbK<1+H!Y6W<_H(:1GoW7C1,]aDA$,]+[!7DiLG*;3<KXgbgnX:%B9W@
%P+;1h5m"If$1ns7*:qW.<C.n]/;Bm7=`DF2#en]6%E=H$7'R;cOeO!s:Bk9oLoB8YKtsRpdP-6Nb0s6m'u72pKV#auJU3KM`o>/Q
%%uJl'*VE-^1Am.f6AI=0qY3Y%`bIn\)iO+4Vj!`L`(u%TSkp4#b$1"J_=E1dH,7cKgoM("+d*&)0VkA/ehSbn>VSIs1>3,)+$gAT
%El&=&(+a\m$2gfhV,^!D!c@e>D#ZXPa:0k:+,)]g@1^r*PJL-QDl-N)dFUW<hU2r<&*g03Bh+\p]bQCL*6tfa&>16Z7<sL5a^4iM
%IRgnY>@&rO(=t$j&Af9'`PDE+K0.11H.'HT'6t^:4$Nlf\VQlGV&Sh7^%ClgE<;QT%SYOfp*We^Ukis<FuXdi@q0O@C^c2\&-0"O
%Z/M=jb(7t4Ihk0b#1f<7a@dEg1iEX],-_>>i'lDC^]YP)<[UM-9qIt5Oln,RW3O/mLQ"tND=BGe.#9M8m/6KB^*jU:Ni,ZKLm&t6
%85o4UAW@AP@SL^`XI?3*Iea9i(+kt7#6o`o6SiebPp`F@O:IjS3[hRAZi93n];E\:7FY1$V3'ae)Bap]1MOg2#W/cLPE69VGf*,g
%(fJM.O3&/."U1Ju1/t"7ZTQ(LG[MS7$HHsbA>j41:X_KE#I\!u7=sZG=#$];!Mt&7YH=U.&i8qU::i%1^_2QJnQdk0eMU8XK"g;i
%3"2TIS5,VaSU2ID?8,O/GpVjnCpcnWZ7a,.c8G=X$55r5$TMDn>(APAgZffQfM!\m<B%#Y7Zj%1I1UVGnq/"/$Y(EI#%D[jOVho9
%C'b4?^84P8maM$'B%VoO8<Vm4fE3EeLmo9Z#N<OWF$(Eu8mk(>I#4kk)7_Zs-'0$=)AaXi$89(p`Xs"sh?7#^jb\6aCK"amiZjQe
%R(qni8]V;iN+]n5bLFVe:!Kf!K*g)4M5t`6#iO&TL+XCc##fUT>,N3Fi\eRtg/N<MF2B0;ITU'1ZT+(LQC/1q$TnKHUT=bQ(qKuL
%PW3Xc#D_S3d,\K(*@R5HDTdp6!RE$5o%6Pg'6u>DBXnCV*-7sFHgs]Tedjnq!4*b076NmJiYaec!EP:bBkgX:83MKfW*,0tMdf94
%KF5di6(UO[!(%815)/H+_`.qQRl*qX$spFF5@nuJfYE4Q&G'/q_&%E8%GG[^Ge&>fX>\Gnahu3$eLVhniU)06'KA\JGDr49ap4'B
%@&>NF.+/.-(6&l5*3^b(Qo-X*#PKbOokb'i!:>M@4YAMWHC0iQiF(4dDm;lY:Vb;2EEgD;aBHIc(GLZ;?;2iHGR[S>KFQra*^s%*
%261scp?X'"G#E-E`Nr"P,B4<0kQDSXGQc?SUI<H0$>S4&-%u0%BVR/78-@*KNp2KfCR?5$@2IU4K=s91n?ub^$j6go5pCZ@aN[I(
%)^.Jj73jX7WRs'Zs$:dD9\)WEi1fc.\72:iE7V)!`^>=N/EJts(;7mQQ#g+tS./0mU%SP:H[),aRu6bF[7J-L`/Z1GC$<2>Ad_pW
%P1YWV0*:5I<l%PLZ\\7>oaVSu/b`/_#f6fJZ(hM!Z-lI%Q@pT(WIYAks.bk`h@/43f2]mP8;.^t-EmX[Y_f$5(tcq7g+\q,%9m@t
%/9h7ae-4E$H+SY$SuKmk_@..D4-Hr==cIBXM-$L(\&F4S;<MC2bE!reCdPSj@[?>gWH7Sr-+=;l08j[Oo3S_l-a=6ncN<H=Aq,Ep
%%a$<V918e&@ToHJM[Pj/C3Bo7!T]sbH[!<pHfdSt1&K@KFU_._AfIf9,,ug.;*cjh0aYQu(Nf^gc0hAUVPs&5(d%(7"!PKPLh@@`
%7M'QN6H]eYY[Jt3T!gHU:ME]\m',"in=X8\+p6D_+bF*?MUL]36)j(!F7:`rHQp*6i\rX?+rS2$ne;3n./6*:/jeRIco`mqqZ5]^
%'g>8jYSqm%Qa.k#XDV&-)&1&O0W`DBn['/,8OGN-9V>dd8^sOa`\T1Ib_EDO.+OFM6n#$L7EM'V[:YBm^fV0LRhN)Z#8Obp\l)ak
%2kS$[$e13nd-t9/B%g:!+/tOALqTgI`WFi/2?91U2hMIhN#hYcYF]KC)O'ED-7LGTn^T(7EGQOoA4eS6di,)iVl8Y\moq6+0)+m?
%qORrKYR>P!"Wb:9SW`h>h7_YYH8N\5MI$2#5l%Gl>_&c+Va,kRXS^`&anCItCp.RaSi5q%>SBS(*?pCrSIn#bknKC_!tS*?JYAqS
%(Er1)Lka96$Q>eV3qJ(P1\>;K+X\Tk>[\,Z),=9.D-8/]e]kF<@G1F-J4`M#/CpI.K<_KW!)HVP:deuN?%@K;NRBI2<d*ZAe-?M;
%lCe7fa:&hN+sB;$`go0r\g/j9gfAtT%_`:DHE^c"*Yc6oc5sK`^kq$NNFK6p0Z91W/M0L3RSQg+KItCnc=/I1jT5Dtc3>s*@Sr!]
%5s2(3',;UbGSY%+TM\AbOt%(C#8-?Jp`,k,Vh31oP"".UHR;<@ZUX.]&MZk)=YoSs5ln6DEt6?l'o'h*"Xq0PF`YSu*Jb:n.Ce;m
%]u!6Ja1;Rn:U6Dq=.3]5]!_)cXo*hred.DM+H('+TOKL8&^N7U%!ZQo!m7qRcP.M!+M*n,ajNBZ@B_67Is<^l5+od1P_^o<SlD-7
%;u0p:Wae8uWrmCT;0NF-;nBS&1Q+D-!Jo#P,1tnF"3/dK_=tcf'"ogtD'$P+%>3fr#:o?Pr^*f7#1Q^)^/cIb<:'!GUbV3"m-:QQ
%4nN3q@6J$;5UY]U#@+Q$0FhauSJX75HP@Jb=m&IV"VPe6R`W9D-Q[,7,Wa).=%6GJ8#TcOlr!phWNFA!7X^GUXp*2\Tqu8M8eKF<
%iIuDGm-#]=IjPYO'Z&M=bBOa9<LLB/#^'U%b>7d<f&Ejp-Zj#aS^-#r7iU0j_k)B<<DP?$lNl1Z]EY046T-XP37q(am^"Q8e-[<B
%Jl.Bd,TL=2)VO(;"3NTJM!kpr>Q*-G=p\h-G$B.gZH6_d+,=SU<ZlDYaPJa2)HrqmZ%_#<5o<P/Z.Y+l[o\09Z]'tB_?c&$OB5>5
%h9:6JhJ5Y!+VJT:$nJDqRogRflC!SnBjai^/eHtFLu=&SPru9olIM1GKO+#9\ENDrN8nA\Qn8<m@)%8UR<lj9iN7X6"AT2%!hoD*
%Tk:!Y-Y>eJj9q%RIK:iki,N^4CM5h+qX/Aap4Fm>p-hs^J#*0gPM/u0FkoZMPW9$tMTc'ILY`3<B-ROn,nq'Gm>RYg4'UB0hUp$u
%+@Oo\#"+G#;[A-c>D26'9*3/*!-,$T&;4g/0i*H9fcF-C(P9]1#AaVHg.C*27@/ke;Xn4_69GZ2(g+7V-*YLKi)0Q^/JAbgWY)!3
%n.7F,M"W;V+c0T3&B)kN[m0>O;u7B6<N$j-!AQW2b8.d.`27>]@un(87_r*kFGb[<:oM0WpmK&EJWAh;f#O@qS^KZs5u3VqMh#u)
%EtI7IV-Oko<F[e[/nIQcVaD.q\-TlYD`5p*n5C.An/;W&Yeo$;+Nk%ChJ;Zg00Wif](eaPNdn(^Y_OYdPJAEI#g=!3'6*7WJOY_H
%WN:1]UB*u>qh*E!4_J6o#5J4'.jCeBi>ZmaN,S1qYUZ<Y&)&,'dD1kHa,!U?8FOL^ZPDiCECFaa?6M3\'E8GW[MY#!+:b^`I'$NS
%6ralP(3G2XaYW`0%cE2mLu5Iq(Z6Ti"g(J"F>rZ>&H.\V)`2*PL.l#Xm7n8!S=Kp;#Etja5u2X[([<?Q"a..HL=HcN=`)fO=D\iF
%Q:4Tr!.$5%,`/Q?]:XL0XMG"<+BX$:h*DA<hQuUp%XQtiBX'/$eids`qQ/?30X!b?]EciL4g7"t4T]a_AenN0WmQQM<!/*)Zsmlt
%i@*>BBF1pm>!aeJ"'3IK[;8tX@>8-qLBKR?-OL*Q1m2^?]O;e*bMpD".%gd9KRorYFEX22!8SESV`cg#E<9$I+fq%e7T7V%'A,@Q
%?scRDKMLbQ#S_S)KkR`RXJR+X(j7&V/nEfd*!MIhL4/BbhGFRlQ^q3+)/`39"V?Pa/TU1no<A'b782Yf@$6dGXK$iCI24F#?GZ^%
%%OHfF5T`LZ$cl@O;A=0nl=f+2eO[>l6H&L=qDejLAmh%PNDlflFq/Pn&S["OGbDE?1JC9Y,[`SqlZ8Ga2:3[A[Rn+[cmoP1:O.q4
%#=/pAr*q$ED'&PF&'AE]?c#BX*-5%W'JtVZaf5rVWOaE:ph<-!L*mbDL1h"B;dXk^SEW+;;QF[C<j0J"#aW4U#%o1lYMC]eFY6-@
%Z6E8V2R7g]VMRbcZ6%$Rnke-'aE.t(3ZN/tLX37N;mW@N7@?,!!])j@-'2YRdn13__r`_0"GGB/`"uXt,rjmf39tj'=SAP`YU8;t
%#\"E(AR_3^/jRl;Po8K"KgY=s3K:lIOsIR]>lkW[=q%;kg.i]b,A+l*G2f`[cH\InVDo\V/15W23!nnXW0n"WHiY$P%8&>P9K&Bm
%3_q.YSKdDga;8u+3%L4#L0Z2cG(bZK+k#_1#_u7eKSY:WSJ1l-j!d9u1hGi5q\O<%'J2;$[-#'*1L<?=,<EmJ-T103DV18eJ?+rK
%r'F\j2"X5"FGGcTfFK(li\s4`GG>"A(tKmi'JN%XQ11bm1Ump8?gt'':7e1k\7cjdkSHP&Vt>-cd8MlR.i:X-WpKN^kCC(bOt;J9
%EuHu4Fcg43<_4'[F)^-4X=]eXoRA+*/=nbba=?M'[:J(.]Jli:&Cs-saIX'?Xq\MfX_?sl898[Bg1ds*?R#ZKen7lP(0S*[8X?A=
%V0d0X^,$L<<j"'37VZg_92Q@967I)E2)J=tXnWpKV:,*EPh\nWhKt<KZs,FQ7<h(1(-bTsDh?7DjBH@GOoPW=2R?Go1GnXtaNXZ=
%fUiXb"4fKYp:+fQm[)9>HYLVVX7SQ3h'>WB3ihsR'Og<\)7(D,mNac1&3L)";Lno8":L36%B2RXRBu+P<\c9>ItdZ/"%JGu+gK_N
%N50A,:Dj^4;)2(Ji$=MNM]<TAiZnU<MR8*7OqZS0.3rjNVudSDO['X$gW1rS%4e(GM>^j.pu%Hl<Jo!j;,K<*(m5P[$F17>!?X`7
%/N')NPO)0]iUTVjPUM_3(G!AbE3HPt)F6"A1Ck!^GW<kI%L9B-/S)U^.o&GZ/mUG.Je0`$(GToQ6?pb6;5'(>5/=O;Dm/]A(IT"n
%NGp#V8;+Y!Oa1:>+EgD#`fPQ+>sDbGO#G`Z2985HbVH!eEWUu?W2psYiFE?>=5-"nVo[s]eo@0"@IQB?p9cl:D:IQtKsZU.#6PEf
%En7>86;*<-:;KM8JW!B'B\A"E$V,#?(rY:3>F3eZ-1:n"_5#OQ@K<;gZ:5chN.FoMCY:\rll83@'RWm"88)7L3]M_81=#]4?O&pU
%6o:Q[ha$':LJA;#N_2o!QVJ=9!Dbib)QU[X-Q2*&F4NY(oP-[<W78%:C3:(trN^teeNcuSVs1-AZ<!LV%JM;6jq9=U%[5O%L3%H\
%cGm3>,p[V$3&OP+Z7L/?0ojKqNr-'1LJFJTgeoF>0hLKNp&Z3hS.X2T35O(Dk7=;SS`!g;@U\F3$[WpL=6s"fJ:\(([CFQlk9>>k
%IW]*D_]tK8lOcegUE:JAeDMYV[q*iA+6MoKpt66Z'@\o/I:Li;mkm26BbbK8UgX-nFbk?6%P3/T?pIkST==/[L6mdg,^:Y1Q"i;j
%(-&3H8`W:Ig.%;]k+3uR_.n.^=qpJH$`bhkf1,Fb6#Ynun!IB>L;R[V/"<2R\<hSBf47$8N4`?;cH7/R?JWoul8W5"W_8]M^/E&e
%7$2O.+Zh]EU`h[:O*UF8CQ>VKhRk3f[ksW1i"#;$R02nFO:$RFh?P;UW3_O@#))sE;$:Fnkfg^K_uYZ`;Ddj!B*7<>p,%r0BI'*&
%"ZDK#'%n(?><(giYCV;0F#7J<(F7;S30Bjl1g,tc]-kWj3KX\(.uER7JQYbnTGEA03RlWf[(Q0'Y]F40bg.QI-g]P9VDRZ+<@%ad
%P6odh56+NtC>cK%8:%"-&sP3Je`(l5<8>:SN98>Ni-KMZF(A,#02`f0:<eJE_,&<+7$/K<Od!;n4OW"]ECI-p"/ea!N[C&9!`6+=
%3.4lFd8!J^(fA%V>9\q3&")X6N*t<5+=RsXg0@U0ZsdR`I\9.C`I4kDP/IthSAu39m#n@QLimuTX,V@U+BrDB:?IIt0*1MC]-)M.
%i;lZCRa7!)f%;P56(?45TLD./J0mS0f&lU7=Mh.#1nJ[ihCh;:R*^d`NE71^HG3hM>cf7]]&LZh,Z=ESq/2FONtI3."C;;r[??6I
%\c_-o@4,2t@3MH010@So(?ORtljplk2+PcM<<SX6dSiT%R@osU#j\H;aQd;TO;.:RFY,$MVH&W58=Cn1_cn#c%]L)!`%(Noi$X(N
%,^'Fd!7$:aj$Y##AQhQ$!#j-C"fH*0Z%u++RH]N)Eh:&85Kik:9?H:t3D0Ts-)$lVE3<N'!!iL$b'q?pMTfsD:3:C+57&hIN)WS)
%1HLC,_D%A]Gq.-2Y5%meVXKD]hrhSi,jr`C1?YHtIu^'tG+?*<$'_P<"Q82U"JA@B=<T1DSZOl*1)=-9_<QrsoQ6ei:UjrglQQpc
%&[<C&,+*sp8V9Pbek-]r<gN7sN3MJ\p\?eMDp+AJkM?s4CsPO.V8T.G+\FoTd)a<C&38(-856?$1/a,8K(f:s@StZDCV]o]d53T$
%-oiZ@3.$D+]QhsI)@<2q*S((pP4l]]2AHh['#9bFT1`qo":hYC">;>I_1f4h/YD7TJ/qb+7.;.=U^LRnU&]^H:ACBKB!Rk[^cj.A
%kG*M])b'Mm4euDm4edbF9<d\(5h-$J`-cb("c->QA5*T@/L:u[qe('XDE/jaAD]?giF<m6';p6#FqpX8"=H^r.js&L5CYUmH%G)D
%.5C'e<1A5llGn;]XYY]PZtCgqBrMjg$pK<bfhi[Mf9C"CIs>!%[9+!P;t?+HaZ?76)_!fXoXAXQHO8J0A37uHoCgc0R,XVCHhUM/
%`>YA[MrMdqjsgj7ar*G?Vmial93-k"UFBR2J]fP2eAkR&WdSP=5?cA#f)HaK-SEE@Er2a1&Tl;'="[Su+ZYd73:,f/)R[lhg:R&7
%'t;KeSl@r6!(P3K.AF`$'X(fG)eMNuF18@Elgu(rpn6kYY?Rs8EUNNp?4BYOQ+I*6Y>_O4WHKKPq[pr73*.<ga,DORf<)$^EUIFZ
%2oEI@a6nJ,YI<H!\X1RS/:9*:Nc,t^$<V[jRQJ&$KPn"5et*fCDSAAl.#(Er\+0P*6;;O!Qoh8fHgG%Pil8N5;aAhPDE5\ml\;fk
%"g)HrIuN^u]`<jc;POaa7I7<5CIjBQA+DK1+29<M>IBNL,`K6QmRB!jSGL<@f:%eLfI:7nI@1mg?cK%[)!(r`!IK5\HK)k(.m8lN
%&A\?s%D%5p?n</VP/PQi!-["s`OoY_N`]+-k&+l=a;4Oi$W9D9'dJIZ&NVlG2BZto!EkMAK330JC>`r*#InpE(J;I);j2hX_Q@mo
%=>k]?_;IXHRH(0T;^sGA_QDJD4S1OJ!B&1DZ/*9FR1W(#Uu)Oc)9[KL-[@/O(\28FHh"fb*Z(H7GO\[M&dR[qiba$GH4ae+K$3UT
%9f"mbhR13;j#7-3fIPL\K=tA.`PNMQ[g.6hffRiIp[$Yi0@cW&Z""'5JAI8u[o@T%anmW#TRX2D@]1)f:F_a%$79g^>)q8Gp;=>8
%K$'li-u)%2PdF:C0)FD>ZVnX#<%p=%V#](Qqu*bVWF0a]$C3B/\A:oU>EB2E,fNA;Z/,PYAZuuSUM:E1=33CIm;s*>l/;^o/["0#
%]Bf-t?DNA"iLo`mhWF.koUaAj>_uO""<Ht2H&'T5nk4GF)tHNgr;S_:rVmi-ra3D`chuf^jRnRo^shE,XtL8aifH93),@IrEi9q[
%7OP+opr4!iZa60_9(3-/\Z:U[H5MMQ4N/F4=tN'DD.*+;jT@^oa5u:6KqI5-lb6rfq2@!,ZCEqjjuoH@HBcRYIu4p7]c;4Bdf\qp
%i:%Bi46Xd3JqEr5(S*BH[ADuF)97LQBZ-:U@n)Uk1$->lcJd'a:;<H)Ssm_/:CoUFjY?m#UT'PDhtnOFGs5K$n!\cB!7(CDYMQ6)
%pITj#X@`?q^)!u6&3jggCL2%Eqe,!FNOW_UKJDEli_4`Z_KI`1NFq0?OnnK%Wmd6ZMBdP01UK0'Yg+koI&a'+Lc!.b9O25rfloSg
%hr.778J0'>nBSlu^c<:DS3`?<&YFX;'X>I?l/t,8OKdRek.Q`q]]8$Ma9$$$`icd/E+Z*"$br2O#;MosbP<5eF:m/.A#0u(Ya,g]
%=N2o)YFOjU3KiP"eg<CoBS4K1NS3,48DR(?onc\LPpC;=#tI2;"M^Is!CC`+'l\NMEm2R+SSZIZ<gf5C2cJTk#8dV&%MLnF6KQs\
%@S%m)gcW7OMpXmJ3G*:iMU@%eKJ]cZCXb<LaWn9S:H[f*RaW[7bu%_;dpmT$c2P:4LJdACHG'+;&GXf1JHVZdVZ7A3de9eJXcU5a
%Z'BthN=>DiP2[8+=PmH=XDf!#5*aSiE[(ps!IV"(2@3u:Zj6L=YuXq$rX$>TjGX/Q9sneeP%.pJBb]I4ea>D"SZbT^LJp/WCF=WP
%,p[qLrK)iXN_YQQiKtD-T5Umn1sW\cj`UjApQH7*3H(:']rX*1!N'BX[olu*=\4XSjeJ*n-8-0p>sQ`T_9WMZ"U>Hp*FdCj+f?Bl
%Us;'VFGjJ<njni$q^@sU*f.F%D*90j#J9(/Wg@ZpPWPYEh,o/rdlY5g[IP3<##Q$CS8d1n8aia%HDbD^)kf@U<I.i2Ul7]>i%;C#
%^lK1&d#'/U6EFH<6.?:VZ\7HomrE4ei;+MgV;PZ2:A@f.P.[#r:?b.dpHf0*aX9enNcP6KAoUJCA:DlYP/E%f?OFqIVhu1pJfae+
%L')gb4"JQd_\';T!ZUd43:0,8F4Q,SH39'\KNaPZXk]bq2b,1-1r_5&S.=<;*K3;Qf!&/rf&-qF>(1Lf,Y=7;Y$atn0?iL!%g3Vl
%$#4a_P^UK+QD"WJj6F;F*n]a*#t@'?%oZI@,nV\/T/,DJ\A>P<$s<4O7LeE<VJKLFbAihEZ3*(7(46lpH`X-uWC^,cIWI[hpb+Ub
%e\qlY8t.+#%1)24QbZ=W:Q-8[c?bVbFD!p!W^Od2_+O\6MN2b?C,m#iBX/]Nea(RKOE4F3/jqLC![j4(DEXUiG6N@h.7@1!ZeVfC
%3ThsP>RT?c:efln^f)(Zarueba'A^cfN`7OQ]oVF)SAf8(`GPqSQ\m>&optuCn%*,310'L/n-=,9CuDaQUq=!(5]k;ZH/4qg&pNR
%eoHRj-7S8^.reTk_\\o!S;H5n=40JCf/_I49'dJ7$[45$Lo=A%Q=*APQMu6!Kufm.P+Bh9,^3j?P,N<i)=5-t[O,V650B.sRQAI;
%8)b?JE?J]>j^^MBoF[kmRU+$]X[W\64dO@hWT0qd??L,N1:q'Y,p=SpFp72U`E$lt!Y0b(\XX+@3-i=)'`jhACErp>?i4)c-tXg%
%1kf=%ZRmi^"Q6;dXQE-H.j)?;eI9ii#3ZjsE]TQoq%cX<Kp6T^EaJJ>:>-k`U#^kTGc^"sPFcBjRetF'e?Deg(cJ)O6[HqGkN!1<
%Vl3+Xq"S(<f;1`\`A=-Di]NFC=/,2$CO.]djp,>=a+!XtY3G#'C$(K(K6l2!H?W('n_[@Wl@E<lWY*<=MMDs/We-r,baBU:aE@@V
%SD(95;7Rr$)jXW"_a%q]Zf@QK4_r@MVQ!hciDfGr3@;fb;0n0373d#(E1-gbYSJuYjYPuEO_\)";enR:_aVa`A)btmAp<a";\p>i
%R%J]s[?9(I>[f55AdJFq<&)*S,0J0q&4&V=$<SHhSM)ImS4mYYZ?,.4RZ%e(EKs<=-K`=ji]4-.kq?_M:WqC`F:feA_DS(LE?5Y[
%`7@#iQZe+7PJcfsGAAR5/chi%KS+H7f\:j!Z.J-^j?2sZ7%em>bCKE2,s/#`$E)lcHdiGG';(YE*X'Fi1UG5F=tp.3cU*e9NMI]f
%DFD`c.hV'0aC'(^=l;8*T_XC:kLU"s*sAJ]Mr$MuVa<<T_qjT>Kmci/ep366M]qW6&KI6Eb5k`][#I%(mLgV(f<Ns8E`VfbnIYrQ
%aQ/d7EKu1O#f7ROHS<b`3JRBg@?(tg%2m*XTEE&".@qq#d/?EDIoM2Pf2(]0#amOKlg9![^S0POo;[f1GFRiP3>+A65J3E@bf=Xg
%CI2[5]mM&IoAt"4IC$GWa^%[!]pis46,/InMp:U3ol`@qH$hd4Cu;F7Dl-U&j-R+:AplOcGIpuJfZX*FmJ-K9@*^Sd.VLpsD\hfu
%Dp'ZAC&UJKH?2`egG(;!o]H*s^>d1VZ+QTf\!uXDHo9aXKa,.LGc>dkcc;C<m;dYsZ[`j+r27`WHp]^(WQ$m(AoN"lZ$^b/p(7Vf
%j#<J#?fkF.VAh^D2pUg2E(TA_S'/;4e`)HE"_)\g>eaLeVTZ%5G5V@"p&"R8Gf*ngU5kT#eT;#"2Y$mDlfILCot7sUDgtsJgsVoK
%esl4'rFS5HInaRbg\H):$]!)rlRib`iR)9/9B&B=)JOW-lTkNQVDkj9,t$0=q!kPsdgbt9nbmS*<o0O82t5je+#=fX*$fHMgtBrm
%ZG)CCllT^=j2^&9T.1-,Dn,]>)t&Z@9;hYGV;F(Coh8]^XOH<7C%KUCrV-p$65o!sFEfDYSp*4X(RUe\I]M5bG&b4n3.?=_"A\kL
%:[!kfq2_)lIk8;4,X9"h^YTO1bVq&hfJh!CnPigWc1@?HH;EYQdk]"/QX`&ucgl,#V>FLeTC4hi;"N+R+fuO.C=.=GU9p?;Ea6]o
%f@#&;@9Rk9XL1XaGIdLQ5_Uc/X`V7A2r3o<F'JKgPb5Ft(a!hl_[!BZOme?bIsq:\k&rW^Wqlf@;YQA\R?r>%^!>N].\GJlELc@;
%\$[LMl.,f_R/'\>Ks*DDo2coe\_dd99QE@bR:!'2qr,`1![04E9b=t1IGQaDro%$FIE'%\Mf[X697.e"r;3Pf:KRHqp!pqbO+."1
%^>ntN0<6g_;#_oNH+@$_0B]0/>s65X\mOk%@>^NBF*7K#h@GZE;uZWL^]'Kjs+flgWdOJFp#DZ9iHRo.;-tB#,f]VuPi/_Djl(i,
%9]2SZYg\guORlGNW]SUdMs_4jQkJQck2GDThAcT@pmFMKl%d#^&Is876!Dcr-bEHGJa^)'',kq1M>Qn--GM[N_:LQJ?S$-[a5:ab
%\(As/hQH*S*6YEiO@!&4=cs?-q6JF0q6Q5:<'+61aH`Obiqgi*)"QpU,V+@:F"s_eCi41J=0L3@AJosTp[Y=/IIHa\(\i%.k3Dc-
%9WA%uD/f8B>%$T9Q^<rV6SG)Ss'(,>H3";,L>Ms0%,^NYHd=E/;:NeHTDX#H,msV1of-$'Nq"L]qLmnXbt"ah!@mj=))ZY,K2a+8
%hlN`FbA,%hoe[D?nLq]lma1SHM<q:T2L`!FSSQtf@>#_>CHF6J@acq<^Y$$uK/qX\)q[mf@MDn>NenDBDR6jSDAI`F,EXnaKQ^$m
%?K38soIJ%4jt59kQ_]\WT22lFo@kkF3kh4Q$![=%5,5^dEb>S2lui/B::Tg%?+N;e2_ZC=rp=m?>\lW*'7<&HS,Nf8SrmbG^QaU=
%<$Br!hX:EX2p\OI[Jhl;>QZ@S`>,N1l?[lbfZn]9pBKi#q#d^P_6Eh#VK+s$Uo;?Ce+qcJr;!je1U-h0g'KM58)1[2?WN@@Sd\K_
%+mSOMN5[?f<2^h5i0QM:?UKc7re(iqX0`6XN9V0m?,;I$DL,Z4.S]5!/s6)jH2-=7`DK<G)QkXI-UVBAjkGP\-@A*r;OuOoRIZOh
%O(YiphljLp"P&A/ojN-H%8K(l]BXouap*(hF?qojak\<Lh/h]TL]?o6l=>De;,%I9O.ks?7s1UJ,0Tkqi>E-BrUOLWrS,4*h]MjV
%58:U+qXEod<8_o=NBB=1X+O"\"l;"kUQsV_1,S,rlpu>TK5dI;N[-]$h;OAjAYV)pS&DR(mQML,o/q2l1W)MgcYQ+aZQo:/b?gHp
%HOG>!ME4N/A"CS&m,g/*n[\$QCI\VM_ma6"+<Ulh\DsALep6UJRF_GWB=8%NQ".S7Y=0G].g@kmhgQXOeYt0WT5u[bkn_WoI5a=9
%aJL)PMVahZJj3sH4'qWJ:qQao2P'4//5'oM;'W@:7W)tl57O^tZ\))`,8)lY@$P5bl]+gHrhht%eXZYjIJl3Fm`=EZ6p5QJ:@O6Z
%K.O!a@0M+5qjG%qc'r($g9U6m61(i74K)`H*PlYX)tp4!na;F/1o!%\=c7^@EjTG[Y_H1VZD;*YLp31G]QV2XV=13=)V)J\fg5ZL
%&TkG__CF/ZJ[00(EQ3'uY4S7V`]>Q=Od:M2G8iJupaXL&=4`-V2P\2Laq*!e^6=-<::mNK*7ai0M$oX58LU<4G%!2HpT^AjQL9s1
%0i*`67aT>UG3%t:9p/QF5o3^5;1k.1qdaBadt6?f;f;A>K<0ZiW]aUh_oT9A#b3EQo;"V-8V+9+B&r9f]G$%7l;[1;(2>SX#:iIA
%aj?D&"hA5BcVd\%]le%"EUg4+mE!jFL0SF&35#c@@*Nb(krot'P:BA-`r#mN5Eom!_/7Y[%"E]J`_cdhXu_hpPA6kW#:iIAaj?D&
%h(Ijr$*\l=3,f4V@AU7;Sb&Z8RfeaFAa)Ar)Y:<Y'43H[n4?L0a/W(K#@3N_ACpZa-*rlbI53YA8O<($NtU=kg=E$0K`k"Z(HPZL
%XZMV?V6Y38%#t(Nl.DJKj>au>n2/<9Y!`cL5.jU>h,2;[?Fipe`]OJep8"FhU>e^*BiN&#Q$\]e1oYT,?)VS$k+'%ZL;l@?G/6(5
%IAI[%\a!/^C!NN.*@fN9<Otq[`]GbqNBDB<2-8_?[Hc^UFXm-->iU0\QVNa<O\RE_SY.F-IA:cLl8m.C#53[,g2A`#enK9`7YJ?/
%,W<@$]NWp@/!8P+W!DLsdW[H#hJ'AP;Hb(t'Vqb33e-UtM6sacVZZ*SoUHn[FCHQ*'nV/5Qeg>kEXsL#XIc7l.SKNXd$U_"<uR?\
%^me=$]qoaFk:gEhp2o1s=h7C``]PiocrD5F>]ca\W2c=;pD(PG7)`PFkrot'o<]X(bjm<N8W(JV(#*!(`rp-1#30*&krot'o<c(B
%oX0EL#!4A1/)PZIb!R?7B^KV3#L&I0qdaBadt/!VNPE<:"'DSs+DX@%F&XV^k=L09c`B"7`f=g51aeD[(<g$/aO,BP7`Gm;b)PS`
%aPm,cT0[6*$%5%O$-/sT)Ql0K$OKaXP.ai_.C\,q5.=j6P;jQUo\*Q\&*e[lZ;g8V[Cn<@A;<]5ji[stbG\b%*9o)hM.3q'<gM$p
%rck?kC!"5#IDcaFA?Dn3mO>AN+PE?\Rk%/+aj?D&enZMr[3S"A\]d8Q"/8c_l*6q#"6R2CGqq59BpidWfd0Mm=5CG?8*qP@Y"njh
%#0&_RZq4P@Q>ES"a-Y8*&$HjiiT7Z!G;:l/C%Xus%QE,tZ)fudH]"O:E8d'Sm6'WoG?SBaFuL#)AUdOUgk./s^AUt[9D?QTR&<s%
%LbsA.BO;/<QHD?:d2J_S_912S1,S-MQ!JMk3DT]=WhV6V\?KchE+,H'>q)WIA8'39EX:)o'0NGK#2.7d<Z\P"Gl;q@XAW34:PQkO
%/]^4`/iNRC-VEL7?JC8N2HX+n:PQkO/]_dK]+Ai>_O4E%EaLQf\T,!VFI`i"G>`B_GAHIGXY3cDCJ!nZ-rXmSPeQ!fT3Lo.lAF?F
%r,Um?Yeg'7>H7D(^>=+,6gK[)fD6D.C>6aaY.E'(T')E^4]@Fm@GmF=PG'^,X8>2.@l[9KFXDc>\YnTcJV\3C/DV[@A"HfsCKU<=
%@b'qHI\C]Z&,<N=C/=:[*::]2-3n*DC>V:Lei/BCrERfKq$tIA*/\m65,bXHf*o0sg&\BXY3ThJ^%"8k7R2ah*9<+]R&fq']`H/S
%WU)$`#NM@U!DGKZfi8%$5e,6!INZq./,'anhO(4kVQ9tFpCokS&?`CIE]k43WSCDPHXiW_jN()p4nUK%S6@f[342B?T(7(ZhMI4Z
%`u8-]ZXJ(ioWSF8*NmVt?)k56kk>!>V66^N2k+VT1>p<H@l),Ui-)7Sh'YR"SlU-:ZR[6d6?]2GO4fs&pI;,5h'YR"SljlcO]N>/
%oY%[db'ZaCXY<kfYOrorq73msn&<r3e,"+H*k]l0XF%,*e,4N%ILaW+\\I:Y8pXcX$SU,34`./>8Cf;VV=UKIhJ%*r-uCN/I41M;
%V/fqV)i/0nb0k\n2!.@q7f'>72;^Ktp#X(!hjN#mRiOZ*[6*,rAk.mrm1.ojZX`0'G,IUPm)\.DHq8gX%%Rj[jj9dEn^R5phVFh!
%Z'0<WD/5!%*+-6'H[BofS%]!gjhjoHcF\hC\o,^"7"'82gOVobbD4)mlr)Inm8WM]D2U=)C"j,rLbBiR=5o.M[[kRS[S7(pFkS_U
%dCtqX*?l9]TP^TIY:Y7eWREE/K,3<W:gqtS<:.)O5.bYn/U*J,]2TS,e(LUE5kn11*V+=+%V+"&oAj8\_2F"/?^)?bC)kXifA,Z/
%_[!AOE+uY&1psR[l+ZBXijBberScWT4t,#g<!WgfqVMZY]Q$s'X1(4X%?c3Vro1qu^Ms_N.<s,+d/"i?H0HUl^KZ0"IfK!4c->s_
%C0/EG(_udnN4o:-_LMQAs8293Ro&qCiI`5Da:.il:Nu9i^]+Dmam.FFng%Qo\A+WL,n6_leZ8FLpK+n]o[Q$;qeF6\1]Hi=%j*p6
%^T:c?9JAX+cOH.gT[Kn(Vq\p\IfJ7g69>n'dL'%mhT&.ZaSr(+\Q\g`;>C'-$X[_'n;b@%IoH+R[cL`GO$M=p-IA%,BujOMr5kWu
%prmZfG/;3rgO948?]R)TchR*O.B)ULmF%\OQ/u*_N_og=#AW$HkG^]"jHO<N5H3Q/NmHPKf\$3$3fjjm)`ukIWD;;%Rj?Z*WCM=`
%@Z?U\20ZUNRc7iIlL#Rlb<75dYtjYpoA[5p70DjB]W:B!BY8WuL+>>Np;d(NDGk__fO<0]Hrnu%dTStoKI_la.m$#ia8?pk;O@(E
%0''Xe%Zi;Hn^%_HG(Aq?q)N7Vh"P*lq%@n4[^DDc9'"]YLE$hh;mBk2p$KejA`YMsDn(h<CKYq<8[lHVM#!:H/`q=U98pC`*<?cl
%(D!0S8Q*NP!1jXl%6+qlonYX@f9F=p_4QP[YVG2*E@HB:(GCPp+!0Y'0N@\te\N?@q)-.]0?bCX`#rqC=6U2hgTl5-1i?FOI^Ib!
%&,8O+@LiYjaUlM$NoqPSYKmLP=ra%ZHr<&pD8Fc^I-+i(W+l&+jXBYi4)Db"Cqr!JNqh?f;%JF%d8Aem%E,X1Opa\Dc)JF$-/6\t
%9YlK]`0Va.pVcXI>qkDgf&,Kj>N6$712f:)CN0W+PLn]:S\b$ZHmTFrf9B&p23O5KLFkJ-SjTNJ_'^0qX@82a/)-SdbnO&"I1o^N
%,/>8?U,/WsL))Z*ML-=-`V1,8:'7iqoPCC5OCd'&poI[<`Ft9OU.=Ca3_bSiA,'A.KE6L#CO:/E4s6%!>T3l-HjX*OE;b/4'fLV7
%/?KJD2FlS*mYjCXFDgWf&m0VV.*+OUq<n*,k!5(Yo!5TnF*%n==E@6q7o^3r6O_fmA+4,A$^umiV?WYXU^DI-)>9/(IRX_dQS7p0
%46#VI=+(Tn<c?=),"+CecmG-BC$[QiW[Cq.X82Ps.;S5]iB?]Q7%a"_Tt>-Y)1`;5+4h$eI1j4T)YQ05`4+$OR_X/8997Ef*<Gt`
%HoK,?Ll<U1LmFA&(s$?C(k`EZ@rDCnhB#1Gg[bH6nA-hgO;Ntb5H;CJcNn&C$DK0t$K[;*c83?!M!X5X^E#DQC7i6W.Fl#NI'gm8
%?0!f9^=8)S^8NK<peb#YbJl?tdnLa7^n85mj5oL1mn(OBo)ZUKRY-Q71H^/dD@gU/a&cg+0X;1\iI`.JqkFAeq'^e(=#7.An'&j1
%rb,3Wq61N-0++_(f?N-BdcViuO:3Xq!ZmBjakhS*cUS,snhA@9#!]TUQtk'YhDXP,JN>bX'=K$::N?0C/N=j7mT`S4,,p>T^@uo+
%DQh=jA7,cq/r8BCA&1Z#rlZ11*7_R+JaA,9<-(&Emc]caf'rEM#d<9Zj1OQn*eRBb+]G_MO(-8BZH!O,#n8)\O!u^EboUk%UkC7;
%;>f7Yi/H;u,'r@<(V"f4O/b'M`#]k,O%=I.Ndd43c\XeC;,;"JZm?`8X8K!nkar"2PNq-/DDEBQ0&!'i`VF32hU]ir&R]>$0hUd;
%5gRK:o=!0o.%L-smcH#a+7O[seW+.d`6`!TVXX#'L:*Y?8(M*jP*U;UXO;lO#6\i68+!9G+6K'W]CUlEiZ*P)]IEUa89<9HqJO#R
%c)8</UW8K"pr+mi9cCqf2En2<8^."K@B(Aoc[VP4pa_?SG-Umd\#%;$[JB]CHkFD]%J\7>=6n+G\m5/MIT^O>ea:o`RUG8Bl2C5<
%lIkkq^\f[DN=bCPS@m**(>OHm]q!JDY29*mi$)"<-eEhKhFC?`J,<HcLWC$:q]4VlkF:@H*HBC,h[4?63</g!mG#+b<nqcEq._a9
%?^*e$qo&s&^TTQE`=edsI<RLG0X%?T<u>\$9g@UC[5Zk5AmX<+?iPctF=J=+A&5@@/XNq*pdXq&o:"N4NOSN(C2l[0<:Au($="l9
%]m2i]GJ^=^o;Q=tnU9/).s`5DN1XjqrHQ$<ml,aoV,ttsK24@,ihNjRpb6'&n]gZD+$TJ7-lR6>~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2171 1479 a Fs(Figur)o(e)e(18.)37 b FD(Impact)20
b(of)e(each)i(optimization)g(on)f(a)g(StrongARM.)2042
2991 y @beginspecial 0 @llx 0 @lly 684 @urx 468 @ury
2448 @rwi @setspecial
%%BeginDocument: p3-2.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: p3-2.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/18/2005
%%CropBox: 0.000000 0.000000 683.040039 467.041016
%%BoundingBox: 0 0 684 468 
%%HiResBoundingBox: 0.000000 0.000000 683.040039 467.041016
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.041 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.041 ln
683.04 467.041 ln
683.04 0 ln
clp
670.439 16.9204 mo
670.439 386.641 ln
74.8799 386.64 ln
74.8799 16.9204 ln
670.439 16.9204 ln
false op
0 0 0 0 cmyk
f
gsave
74.8799 325.021 mo
74.8799 325.081 ln
670.439 325.081 ln
670.439 325.021 ln
74.8799 325.021 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 325.021 mo
670.439 325.021 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 263.399 mo
74.8799 263.46 ln
670.439 263.461 ln
670.439 263.4 ln
74.8799 263.399 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 263.399 mo
670.439 263.4 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 201.78 mo
74.8799 201.84 ln
670.439 201.84 ln
670.439 201.78 ln
74.8799 201.78 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 201.78 mo
670.439 201.78 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 140.16 mo
74.8799 140.22 ln
670.439 140.22 ln
670.439 140.16 ln
74.8799 140.16 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 140.16 mo
670.439 140.16 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 78.54 mo
74.8799 78.6001 ln
670.439 78.6001 ln
670.439 78.54 ln
74.8799 78.54 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 78.54 mo
670.439 78.54 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 16.9204 mo
74.8799 16.98 ln
670.439 16.98 ln
670.439 16.9204 ln
74.8799 16.9204 ln
clp
0.0599976 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 16.9204 mo
670.439 16.9204 ln
0 0 0 1 cmyk
s
grestore
gsave
0 0 mo
0 467.04 ln
683.04 467.041 ln
683.04 0 ln
0 0 ln
cp
132.42 28.3203 mo
132.42 51.3003 ln
623.399 51.3003 ln
623.399 28.3203 ln
132.42 28.3203 ln
eclp
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
74.8799 16.9204 mo
74.8799 386.64 ln
670.439 386.641 ln
670.439 16.9204 ln
74.8799 16.9204 ln
cp
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
81.1201 346.56 mo
81.1201 386.64 ln
89.3994 386.64 ln
89.3994 346.56 ln
81.1201 346.56 ln
0 0 0 1 cmyk
ef
0.960007 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
81.1201 346.56 mo
81.1201 386.64 ln
89.3994 386.64 ln
89.3994 346.56 ln
81.1201 346.56 ln
cp
s
126.96 320.399 mo
126.96 386.64 ln
135.239 386.64 ln
135.239 320.399 ln
126.96 320.399 ln
ef
126.96 320.399 mo
126.96 386.64 ln
135.239 386.64 ln
135.239 320.399 ln
126.96 320.399 ln
cp
s
172.739 198.9 mo
172.739 386.64 ln
181.02 386.641 ln
181.02 198.9 ln
172.739 198.9 ln
ef
172.739 198.9 mo
172.739 386.64 ln
181.02 386.641 ln
181.02 198.9 ln
172.739 198.9 ln
cp
s
218.58 78.54 mo
218.58 386.641 ln
226.859 386.641 ln
226.859 78.54 ln
218.58 78.54 ln
ef
218.58 78.54 mo
218.58 386.641 ln
226.859 386.641 ln
226.859 78.54 ln
218.58 78.54 ln
cp
s
264.359 139.74 mo
264.359 386.641 ln
272.64 386.641 ln
272.64 139.74 ln
264.359 139.74 ln
ef
264.359 139.74 mo
264.359 386.641 ln
272.64 386.641 ln
272.64 139.74 ln
264.359 139.74 ln
cp
s
310.199 232.62 mo
310.199 386.641 ln
318.479 386.641 ln
318.479 232.62 ln
310.199 232.62 ln
ef
310.199 232.62 mo
310.199 386.641 ln
318.479 386.641 ln
318.479 232.62 ln
310.199 232.62 ln
cp
s
355.979 85.2002 mo
355.979 386.641 ln
364.26 386.641 ln
364.26 85.2002 ln
355.979 85.2002 ln
ef
355.979 85.2002 mo
355.979 386.641 ln
364.26 386.641 ln
364.26 85.2002 ln
355.979 85.2002 ln
cp
s
401.819 279.541 mo
401.819 386.641 ln
410.1 386.641 ln
410.1 279.541 ln
401.819 279.541 ln
ef
401.819 279.541 mo
401.819 386.641 ln
410.1 386.641 ln
410.1 279.541 ln
401.819 279.541 ln
cp
s
447.6 130.02 mo
447.6 386.641 ln
455.88 386.641 ln
455.88 130.02 ln
447.6 130.02 ln
ef
447.6 130.02 mo
447.6 386.641 ln
455.88 386.641 ln
455.88 130.02 ln
447.6 130.02 ln
cp
s
493.439 191.76 mo
493.439 386.641 ln
501.72 386.641 ln
501.72 191.76 ln
493.439 191.76 ln
ef
493.439 191.76 mo
493.439 386.641 ln
501.72 386.641 ln
501.72 191.76 ln
493.439 191.76 ln
cp
s
539.22 99.2402 mo
539.22 386.641 ln
547.499 386.641 ln
547.499 99.2402 ln
539.22 99.2402 ln
ef
539.22 99.2402 mo
539.22 386.641 ln
547.499 386.641 ln
547.499 99.2402 ln
539.22 99.2402 ln
cp
s
585.06 191.16 mo
585.06 386.641 ln
593.34 386.641 ln
593.34 191.16 ln
585.06 191.16 ln
ef
585.06 191.16 mo
585.06 386.641 ln
593.34 386.641 ln
593.34 191.16 ln
585.06 191.16 ln
cp
s
630.84 217.98 mo
630.84 386.641 ln
639.12 386.641 ln
639.12 217.98 ln
630.84 217.98 ln
ef
630.84 217.98 mo
630.84 386.641 ln
639.12 386.641 ln
639.12 217.98 ln
630.84 217.98 ln
cp
s
89.46 379.319 mo
89.46 386.64 ln
97.7393 386.64 ln
97.7393 379.319 ln
89.46 379.319 ln
0 0 0 0.6 cmyk
ef
89.46 379.319 mo
89.46 386.64 ln
97.7393 386.64 ln
97.7393 379.319 ln
89.46 379.319 ln
cp
0 0 0 1 cmyk
s
135.3 374.28 mo
135.3 386.64 ln
143.58 386.64 ln
143.58 374.28 ln
135.3 374.28 ln
0 0 0 0.6 cmyk
ef
135.3 374.28 mo
135.3 386.64 ln
143.58 386.64 ln
143.58 374.28 ln
135.3 374.28 ln
cp
0 0 0 1 cmyk
s
181.08 310.38 mo
181.08 386.641 ln
189.359 386.641 ln
189.359 310.38 ln
181.08 310.38 ln
0 0 0 0.6 cmyk
ef
181.08 310.38 mo
181.08 386.641 ln
189.359 386.641 ln
189.359 310.38 ln
181.08 310.38 ln
cp
0 0 0 1 cmyk
s
226.92 213.36 mo
226.92 386.641 ln
235.199 386.641 ln
235.199 213.36 ln
226.92 213.36 ln
0 0 0 0.6 cmyk
ef
226.92 213.36 mo
226.92 386.641 ln
235.199 386.641 ln
235.199 213.36 ln
226.92 213.36 ln
cp
0 0 0 1 cmyk
s
272.699 317.041 mo
272.699 386.641 ln
280.979 386.641 ln
280.979 317.041 ln
272.699 317.041 ln
0 0 0 0.6 cmyk
ef
272.699 317.041 mo
272.699 386.641 ln
280.979 386.641 ln
280.979 317.041 ln
272.699 317.041 ln
cp
0 0 0 1 cmyk
s
318.54 166.56 mo
318.54 386.641 ln
326.819 386.641 ln
326.819 166.56 ln
318.54 166.56 ln
0 0 0 0.6 cmyk
ef
318.54 166.56 mo
318.54 386.641 ln
326.819 386.641 ln
326.819 166.56 ln
318.54 166.56 ln
cp
0 0 0 1 cmyk
s
364.319 164.1 mo
364.319 386.641 ln
372.6 386.641 ln
372.6 164.1 ln
364.319 164.1 ln
0 0 0 0.6 cmyk
ef
364.319 164.1 mo
364.319 386.641 ln
372.6 386.641 ln
372.6 164.1 ln
364.319 164.1 ln
cp
0 0 0 1 cmyk
s
410.159 167.52 mo
410.159 386.641 ln
418.439 386.641 ln
418.439 167.52 ln
410.159 167.52 ln
0 0 0 0.6 cmyk
ef
410.159 167.52 mo
410.159 386.641 ln
418.439 386.641 ln
418.439 167.52 ln
410.159 167.52 ln
cp
0 0 0 1 cmyk
s
455.939 209.04 mo
455.939 386.641 ln
464.22 386.641 ln
464.22 209.04 ln
455.939 209.04 ln
0 0 0 0.6 cmyk
ef
455.939 209.04 mo
455.939 386.641 ln
464.22 386.641 ln
464.22 209.04 ln
455.939 209.04 ln
cp
0 0 0 1 cmyk
s
501.78 157.56 mo
501.779 386.641 ln
510.06 386.641 ln
510.06 157.56 ln
501.78 157.56 ln
0 0 0 0.6 cmyk
ef
501.78 157.56 mo
501.779 386.641 ln
510.06 386.641 ln
510.06 157.56 ln
501.78 157.56 ln
cp
0 0 0 1 cmyk
s
547.56 108.9 mo
547.56 386.641 ln
555.84 386.641 ln
555.84 108.9 ln
547.56 108.9 ln
0 0 0 0.6 cmyk
ef
547.56 108.9 mo
547.56 386.641 ln
555.84 386.641 ln
555.84 108.9 ln
547.56 108.9 ln
cp
0 0 0 1 cmyk
s
593.399 233.46 mo
593.399 386.641 ln
601.68 386.641 ln
601.68 233.46 ln
593.399 233.46 ln
0 0 0 0.6 cmyk
ef
593.399 233.46 mo
593.399 386.641 ln
601.68 386.641 ln
601.68 233.46 ln
593.399 233.46 ln
cp
0 0 0 1 cmyk
s
639.18 282.961 mo
639.18 386.641 ln
647.46 386.641 ln
647.46 282.961 ln
639.18 282.961 ln
0 0 0 0.6 cmyk
ef
639.18 282.961 mo
639.18 386.641 ln
647.46 386.641 ln
647.46 282.961 ln
639.18 282.961 ln
cp
0 0 0 1 cmyk
s
97.7998 381.36 mo
97.7998 386.64 ln
106.08 386.64 ln
106.08 381.36 ln
97.7998 381.36 ln
0 0 0 0.4 cmyk
ef
97.7998 381.36 mo
97.7998 386.64 ln
106.08 386.64 ln
106.08 381.36 ln
97.7998 381.36 ln
cp
0 0 0 1 cmyk
s
143.64 374.581 mo
143.64 386.64 ln
151.859 386.64 ln
151.859 374.581 ln
143.64 374.581 ln
0 0 0 0.4 cmyk
ef
143.64 374.581 mo
143.64 386.64 ln
151.859 386.64 ln
151.859 374.581 ln
143.64 374.581 ln
cp
0 0 0 1 cmyk
s
189.42 326.701 mo
189.42 386.641 ln
197.699 386.641 ln
197.699 326.701 ln
189.42 326.701 ln
0 0 0 0.4 cmyk
ef
189.42 326.701 mo
189.42 386.641 ln
197.699 386.641 ln
197.699 326.701 ln
189.42 326.701 ln
cp
0 0 0 1 cmyk
s
235.26 242.22 mo
235.26 386.641 ln
243.479 386.641 ln
243.479 242.22 ln
235.26 242.22 ln
0 0 0 0.4 cmyk
ef
235.26 242.22 mo
235.26 386.641 ln
243.479 386.641 ln
243.479 242.22 ln
235.26 242.22 ln
cp
0 0 0 1 cmyk
s
281.04 319.201 mo
281.04 386.641 ln
289.319 386.641 ln
289.319 319.201 ln
281.04 319.201 ln
0 0 0 0.4 cmyk
ef
281.04 319.201 mo
281.04 386.641 ln
289.319 386.641 ln
289.319 319.201 ln
281.04 319.201 ln
cp
0 0 0 1 cmyk
s
326.88 276.601 mo
326.88 386.641 ln
335.1 386.641 ln
335.1 276.601 ln
326.88 276.601 ln
0 0 0 0.4 cmyk
ef
326.88 276.601 mo
326.88 386.641 ln
335.1 386.641 ln
335.1 276.601 ln
326.88 276.601 ln
cp
0 0 0 1 cmyk
s
372.659 173.22 mo
372.659 386.641 ln
380.939 386.641 ln
380.939 173.22 ln
372.659 173.22 ln
0 0 0 0.4 cmyk
ef
372.659 173.22 mo
372.659 386.641 ln
380.939 386.641 ln
380.939 173.22 ln
372.659 173.22 ln
cp
0 0 0 1 cmyk
s
418.499 287.221 mo
418.499 386.641 ln
426.72 386.641 ln
426.72 287.221 ln
418.499 287.221 ln
0 0 0 0.4 cmyk
ef
418.499 287.221 mo
418.499 386.641 ln
426.72 386.641 ln
426.72 287.221 ln
418.499 287.221 ln
cp
0 0 0 1 cmyk
s
464.28 239.641 mo
464.279 386.641 ln
472.56 386.641 ln
472.56 239.641 ln
464.28 239.641 ln
0 0 0 0.4 cmyk
ef
464.28 239.641 mo
464.279 386.641 ln
472.56 386.641 ln
472.56 239.641 ln
464.28 239.641 ln
cp
0 0 0 1 cmyk
s
510.12 160.2 mo
510.119 386.641 ln
518.34 386.641 ln
518.34 160.2 ln
510.12 160.2 ln
0 0 0 0.4 cmyk
ef
510.12 160.2 mo
510.119 386.641 ln
518.34 386.641 ln
518.34 160.2 ln
510.12 160.2 ln
cp
0 0 0 1 cmyk
s
555.899 96 mo
555.899 386.641 ln
564.18 386.641 ln
564.18 96 ln
555.899 96 ln
0 0 0 0.4 cmyk
ef
555.899 96 mo
555.899 386.641 ln
564.18 386.641 ln
564.18 96 ln
555.899 96 ln
cp
0 0 0 1 cmyk
s
601.739 261.541 mo
601.739 386.641 ln
609.96 386.641 ln
609.96 261.541 ln
601.739 261.541 ln
0 0 0 0.4 cmyk
ef
601.739 261.541 mo
601.739 386.641 ln
609.96 386.641 ln
609.96 261.541 ln
601.739 261.541 ln
cp
0 0 0 1 cmyk
s
647.52 303.721 mo
647.52 386.641 ln
655.8 386.641 ln
655.8 303.721 ln
647.52 303.721 ln
0 0 0 0.4 cmyk
ef
647.52 303.721 mo
647.52 386.641 ln
655.8 386.641 ln
655.8 303.721 ln
647.52 303.721 ln
cp
0 0 0 1 cmyk
s
106.14 381.36 mo
106.14 386.64 ln
114.42 386.64 ln
114.42 381.36 ln
106.14 381.36 ln
0 0 0 0.2 cmyk
ef
106.14 381.36 mo
106.14 386.64 ln
114.42 386.64 ln
114.42 381.36 ln
106.14 381.36 ln
cp
0 0 0 1 cmyk
s
151.92 374.581 mo
151.92 386.64 ln
160.199 386.64 ln
160.199 374.581 ln
151.92 374.581 ln
0 0 0 0.2 cmyk
ef
151.92 374.581 mo
151.92 386.64 ln
160.199 386.64 ln
160.199 374.581 ln
151.92 374.581 ln
cp
0 0 0 1 cmyk
s
197.76 326.701 mo
197.76 386.641 ln
206.04 386.641 ln
206.04 326.701 ln
197.76 326.701 ln
0 0 0 0.2 cmyk
ef
197.76 326.701 mo
197.76 386.641 ln
206.04 386.641 ln
206.04 326.701 ln
197.76 326.701 ln
cp
0 0 0 1 cmyk
s
243.54 242.22 mo
243.54 386.641 ln
251.819 386.641 ln
251.819 242.22 ln
243.54 242.22 ln
0 0 0 0.2 cmyk
ef
243.54 242.22 mo
243.54 386.641 ln
251.819 386.641 ln
251.819 242.22 ln
243.54 242.22 ln
cp
0 0 0 1 cmyk
s
289.38 319.201 mo
289.38 386.641 ln
297.66 386.641 ln
297.66 319.201 ln
289.38 319.201 ln
0 0 0 0.2 cmyk
ef
289.38 319.201 mo
289.38 386.641 ln
297.66 386.641 ln
297.66 319.201 ln
289.38 319.201 ln
cp
0 0 0 1 cmyk
s
335.16 276.601 mo
335.16 386.641 ln
343.439 386.641 ln
343.439 276.601 ln
335.16 276.601 ln
0 0 0 0.2 cmyk
ef
335.16 276.601 mo
335.16 386.641 ln
343.439 386.641 ln
343.439 276.601 ln
335.16 276.601 ln
cp
0 0 0 1 cmyk
s
380.999 173.22 mo
380.999 386.641 ln
389.279 386.641 ln
389.28 173.22 ln
380.999 173.22 ln
0 0 0 0.2 cmyk
ef
380.999 173.22 mo
380.999 386.641 ln
389.279 386.641 ln
389.28 173.22 ln
380.999 173.22 ln
cp
0 0 0 1 cmyk
s
426.78 288.9 mo
426.779 386.641 ln
435.06 386.641 ln
435.06 288.9 ln
426.78 288.9 ln
0 0 0 0.2 cmyk
ef
426.78 288.9 mo
426.779 386.641 ln
435.06 386.641 ln
435.06 288.9 ln
426.78 288.9 ln
cp
0 0 0 1 cmyk
s
472.62 210.18 mo
472.619 386.641 ln
480.899 386.641 ln
480.899 210.18 ln
472.62 210.18 ln
0 0 0 0.2 cmyk
ef
472.62 210.18 mo
472.619 386.641 ln
480.899 386.641 ln
480.899 210.18 ln
472.62 210.18 ln
cp
0 0 0 1 cmyk
s
518.399 220.74 mo
518.399 386.641 ln
526.68 386.641 ln
526.68 220.74 ln
518.399 220.74 ln
0 0 0 0.2 cmyk
ef
518.399 220.74 mo
518.399 386.641 ln
526.68 386.641 ln
526.68 220.74 ln
518.399 220.74 ln
cp
0 0 0 1 cmyk
s
564.239 105.66 mo
564.239 386.641 ln
572.52 386.641 ln
572.52 105.66 ln
564.239 105.66 ln
0 0 0 0.2 cmyk
ef
564.239 105.66 mo
564.239 386.641 ln
572.52 386.641 ln
572.52 105.66 ln
564.239 105.66 ln
cp
0 0 0 1 cmyk
s
610.02 265.381 mo
610.02 386.641 ln
618.3 386.641 ln
618.3 265.381 ln
610.02 265.381 ln
0 0 0 0.2 cmyk
ef
610.02 265.381 mo
610.02 386.641 ln
618.3 386.641 ln
618.3 265.381 ln
610.02 265.381 ln
cp
0 0 0 1 cmyk
s
655.86 305.161 mo
655.86 386.641 ln
664.14 386.641 ln
664.14 305.161 ln
655.86 305.161 ln
0 0 0 0.2 cmyk
ef
655.86 305.161 mo
655.86 386.641 ln
664.14 386.641 ln
664.14 305.161 ln
655.86 305.161 ln
cp
0 0 0 1 cmyk
s
0.0599976 lw
74.8799 16.9204 mo
74.8799 386.64 ln
71.1602 386.64 mo
74.8799 386.64 ln
71.1602 325.021 mo
74.8799 325.021 ln
71.1602 263.399 mo
74.8799 263.399 ln
71.1602 201.78 mo
74.8799 201.78 ln
71.1602 140.16 mo
74.8799 140.16 ln
71.1602 78.54 mo
74.8799 78.54 ln
71.1602 16.9204 mo
74.8799 16.9204 ln
74.8799 386.64 mo
670.439 386.641 ln
74.8799 390.36 mo
74.8799 386.64 ln
120.72 390.36 mo
120.72 386.64 ln
166.5 390.36 mo
166.5 386.64 ln
212.34 390.36 mo
212.34 386.641 ln
258.12 390.36 mo
258.12 386.641 ln
303.96 390.36 mo
303.96 386.641 ln
349.739 390.36 mo
349.739 386.641 ln
395.579 390.36 mo
395.579 386.641 ln
441.359 390.36 mo
441.359 386.641 ln
487.199 390.36 mo
487.199 386.641 ln
532.979 390.36 mo
532.979 386.641 ln
578.819 390.36 mo
578.819 386.641 ln
624.6 390.36 mo
624.6 386.641 ln
670.439 390.36 mo
670.439 386.641 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0996 390.421 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 328.8 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
56.8662 328.8 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 267.181 mov
(0) sh
/ArialMT*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
56.8662 267.181 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7559 267.181 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 205.561 mov
(0) sh
/ArialMT*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
56.8662 205.561 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7559 205.561 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 143.94 mov
(0) sh
/ArialMT*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
56.8662 143.94 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7559 143.94 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0996 82.3203 mov
(1) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 20.7007 mov
(1) sh
/ArialMT*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
56.8662 20.7007 mov
(.2) sh
623.34 28.3804 mo
623.34 51.3003 ln
132.479 51.3003 ln
132.479 28.3804 ln
623.34 28.3804 ln
0 0 0 0 cmyk
f
132.42 28.3203 mo
132.42 51.3003 ln
623.34 51.3003 ln
623.34 28.3203 ln
132.42 28.3203 ln
cp
0 0 0 1 cmyk
s
159.84 36.3604 mo
159.84 43.7402 ln
167.22 43.7402 ln
167.22 36.3604 ln
159.84 36.3604 ln
ef
0.960007 lw
159.84 36.3604 mo
159.84 43.7402 ln
167.22 43.7402 ln
167.22 36.3604 ln
159.84 36.3604 ln
cp
s
262.5 36.3604 mo
262.5 43.7402 ln
269.88 43.7402 ln
269.88 36.3604 ln
262.5 36.3604 ln
0 0 0 0.6 cmyk
ef
262.5 36.3604 mo
262.5 43.7402 ln
269.88 43.7402 ln
269.88 36.3604 ln
262.5 36.3604 ln
cp
0 0 0 1 cmyk
s
349.86 36.3604 mo
349.86 43.7402 ln
357.239 43.7402 ln
357.239 36.3604 ln
349.86 36.3604 ln
0 0 0 0.4 cmyk
ef
349.86 36.3604 mo
349.86 43.7402 ln
357.239 43.7402 ln
357.239 36.3604 ln
349.86 36.3604 ln
cp
0 0 0 1 cmyk
s
481.499 36.3604 mo
481.499 43.7402 ln
488.88 43.7402 ln
488.88 36.3604 ln
481.499 36.3604 ln
0 0 0 0.2 cmyk
ef
481.499 36.3604 mo
481.499 43.7402 ln
488.88 43.7402 ln
488.88 36.3604 ln
481.499 36.3604 ln
cp
0 0 0 1 cmyk
s
2.5 lw
0 lc
1 lj
74.8799 78.54 mo
670.2 78.54 ln
0.0235294 0.0196078 0.0196078 0.992157 cmyk
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
98{/.notdef}repeat /b 157{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
65.04 435.961 mov
(b) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 105 /i put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
105{/.notdef}repeat /i 10{/.notdef}repeat /t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
70.5596 430.5 mov
0.0198212 -0.0197906 (it) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
111{/.notdef}repeat /o 144{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
75.4795 425.521 mov
(o) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
110{/.notdef}repeat /n 145{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
80.999 420.061 mov
(n) sh
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
86.5166 414.543 mov
(i) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
end end
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
99{/.notdef}repeat /c 156{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
88.6787 412.321 mov
(c) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
102{/.notdef}repeat /f 153{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
130.979 415.561 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
133.739 412.86 mov
(i) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
114{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
135.955 410.644 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
157.198 434.88 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
159.958 432.18 mov
(f) sh
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
162.714 429.423 mov
(t) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
165.471 426.667 mov
(-) sh
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
168.773 423.365 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
171.479 420.601 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
173.697 418.44 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
end end
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
101{/.notdef}repeat /e 154{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
179.215 412.923 mov
(e) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
188.878 448.68 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
191.639 445.979 mov
(f) sh
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
194.395 443.223 mov
(t) sh
/ArialMT*14 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
197.151 440.467 mov
(-) sh
/ArialMT*11 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
200.453 437.165 mov
(c) sh
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
205.406 432.212 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
210.913 426.705 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
216.358 421.26 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
115{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
219.658 417.96 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
224.578 412.979 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
253.738 429.359 mov
(3) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
103{/.notdef}repeat /g 8{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
259.258 423.899 mov
0.0198822 -0.0198517 (gp) ash
restore_ctm
save_ctm
/ArialMT*19 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
270.238 412.859 mov
(p) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
267.958 460.679 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
273.478 455.219 mov
(e) sh
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
278.995 449.701 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
284.458 444.179 mov
(m) sh
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
292.693 435.944 mov
(f) sh
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
295.439 433.198 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
300.958 427.738 mov
(r) sh
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
304.26 424.436 mov
(m) sh
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
312.504 416.192 mov
(e) sh
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
318.012 410.684 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
331.678 442.498 mov
(m) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
339.958 434.277 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
345.418 428.758 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
348.178 426.057 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*21 
[
117{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*21 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
356.398 417.777 mov
(u) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/ArialMT*22 
[
108{/.notdef}repeat /l 147{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*22 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
361.918 412.316 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
364.078 410.098 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
379.318 440.337 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
382.078 437.637 mov
(m) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
390.299 429.356 mov
(r) sh
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
393.601 426.055 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*23 
[
100{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*23 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
399.118 420.597 mov
(d) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
404.579 415.076 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
406.798 412.916 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
417.658 447.536 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
420.418 444.836 mov
(i) sh
/ArialMT*22 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
422.634 442.62 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
424.798 440.396 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
427.558 437.695 mov
(e) sh
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
433.075 432.178 mov
(r) sh
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
436.387 428.866 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
441.838 423.356 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
447.358 417.896 mov
(n) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*24 
[
107{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*24 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
452.818 412.375 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
457.678 453.055 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
460.438 450.354 mov
(i) sh
/ArialMT*22 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
462.654 448.139 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
464.818 445.915 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
467.578 443.214 mov
(e) sh
/ArialMT*13 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
473.096 437.696 mov
(r) sh
/ArialMT*7 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
476.407 434.385 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
481.858 428.875 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
487.378 423.414 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*24 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
492.839 417.895 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
497.819 412.974 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
526.919 429.294 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
532.438 423.833 mov
(f) sh
/ArialMT*23 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
535.195 421.077 mov
(d) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
540.659 415.554 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
558.599 443.153 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/g 
<10bf317046e845f3a98cff800425d1e47fcbf03f8b922783d5d36e307274
588ac60409269c037388a43cef04e921c8e3bf34e51e4a003e0b37bf8d31
c8fc8fb6ade393cdde44b4581b0ac925ec1f59a1fbaac3d1fb4e14f63283
84b7e26e832593dcad7ed930aa23e0b99c4561c07b07f1e2fa1eb18d1291
b9cf9003790fe409a130d99f5be39512a2ad37a7efa7c41860134fb79153
f4dd79307743390ebe3ee1401c0a499a781dcdce2157d130f5efa9fe3806
cc6c1819edacc0285ad54ab702e08879c56aefcc591124daf35783236ce0
3c246d126bb7a939> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 101 /e put
dup 103 /g put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
101{/.notdef}repeat /e /.notdef /g 10{/.notdef}repeat /r 3{/.notdef}repeat /v 
137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
564.119 437.692 mov
0.000274658 -0.000183105 wsa 101 get (ver) wsh
/Arial-BoldMT*1 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
578.962 422.85 mov
(a) sh
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
584.46 417.352 mov
(ge) sh
restore_ctm
save_ctm
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
598.679 448.612 mov
(ge) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/Arial-BoldMT*3 
[
109{/.notdef}repeat /m /n /o 144{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*3 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
610.215 437.076 mov
(om) sh
/Arial-BoldMT*2 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
625.043 422.248 mov
(e) sh
/Arial-BoldMT*1 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
630.541 416.75 mov
(a) sh
/Arial-BoldMT*3 findfont [9.88519 -9.88521 -9.88519 -9.88519 0 0 ]mfnt sfnt
BuildWidthShowArray
636.039 411.252 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 251.161 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*25 
[
32{/.notdef}repeat /space 87{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 243.372 mov
(x) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 236.368 mov
(e) sh
/ArialMT*11 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 228.579 mov
(c) sh
/ArialMT*21 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 221.575 mov
(u) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 213.786 mov
0 -0.0139771 (ti) ash
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 206.768 mov
(o) sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 198.979 mov
(n) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 191.19 mov
( ) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 187.292 mov
0 -0.0139771 (ti) ash
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 180.274 mov
(m) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 168.615 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/S 
<10bf31704ab370a8a6c235279ed6c3fdd90391cf7962d0bccf3c0194207c
c985977a6da764734efebc21d6d1ae7133055444822d0fe1b965fdff1b05
ca2046c91bc219dee9d6de4fdbddec5d689eb735c6e0fa560831344d790e
3093e69a2340f4515581fc3f61c364582542aaf4a1803981e90247b3d87c
b4e83921ea1ea0fe7cb2d933b6761926389626e21ef635602b61796dffe5
8975cc1e5a348ada717869e184044d1b2d3ccec5d895b1b22a708b5514a1
fa0b8783acb9f99b94ec8c3dec98d4fe3f7d2f5da5a832e0f19d404c70f8
e5044360ab5b726faeaaff503556ef3182da97e4b93377852f62756de8dc
3b6de3f8b74afcc5f5fe> ND 
/z 
<10bf31706d7bdb7f5f74128c9bb1cf0445a721a78dcf191ad056927637c8
a135f0f22faf7df308eeea1c66e39a72a677a3dd701da853bf390cfc0a58
a3d2> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 83 /S put
dup 122 /z put
pop
%ADOEndSubsetFont
/ArialMT*26 
[
40{/.notdef}repeat /parenleft /parenright 31{/.notdef}repeat /I 9{/.notdef}repeat /S 38{/.notdef}repeat 
/z 133{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 320.881 mov
(\() sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 316.211 mov
(n) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 308.422 mov
(o) sh
/ArialMT*13 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 300.633 mov
(r) sh
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 295.964 mov
(m) sh
/ArialMT*16 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 284.305 mov
(a) sh
/ArialMT*22 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 276.516 mov
(l) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 273.396 mov
(i) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 270.276 mov
(z) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 263.272 mov
(e) sh
/ArialMT*23 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 255.483 mov
(d) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 247.694 mov
( ) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 243.796 mov
(t) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 239.898 mov
(o) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 232.109 mov
( ) sh
/ArialMT*21 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 228.211 mov
(u) sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 220.422 mov
(n) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 212.633 mov
(o) sh
/ArialMT*19 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 204.844 mov
(p) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 197.055 mov
0 -0.0139771 (ti) ash
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 190.037 mov
(m) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 178.377 mov
(i) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 175.257 mov
(z) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 168.254 mov
(e) sh
/ArialMT*23 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 160.465 mov
(d) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 152.676 mov
( ) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 148.777 mov
(S) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 139.439 mov
(t) sh
/ArialMT*13 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 135.541 mov
(r) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 130.871 mov
(e) sh
/ArialMT*16 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 123.082 mov
(a) sh
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 115.293 mov
(m) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 103.634 mov
(I) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 99.736 mov
(t) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 95.8379 mov
(\)) sh
restore_ctm
save_ctm
/ArialMT*26 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
171.979 44.6606 mov
(S) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
181.304 44.6606 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
188.294 44.6606 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
196.069 44.6606 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
199.175 44.6606 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
202.281 44.6606 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
210.056 44.6606 mov
(g) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 67 /C put
dup 70 /F put
pop
%ADOEndSubsetFont
/ArialMT*27 
[
65{/.notdef}repeat /A /.notdef /C 2{/.notdef}repeat /F 185{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
274.34 44.6606 mov
(CAF) sh
restore_ctm
save_ctm
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
361.64 44.6606 mov
(CAF) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/ArialMT*28 
[
43{/.notdef}repeat /plus 212{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
389.6 44.6606 mov
(+) sh
/ArialMT*17 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
397.764 44.6606 mov
(s) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
404.754 44.6606 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
411.744 44.6606 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
419.519 44.6606 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
422.625 44.6606 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
425.731 44.6606 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
433.506 44.6606 mov
(g) sh
restore_ctm
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
494.78 44.6606 mov
(CAF) sh
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
522.74 44.6606 mov
(+) sh
/ArialMT*17 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
530.904 44.6606 mov
(s) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
537.894 44.6606 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
544.884 44.6606 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
552.659 44.6606 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
555.765 44.6606 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
558.871 44.6606 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
566.646 44.6606 mov
(g) sh
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
574.421 44.6606 mov
(+) sh
/ArialMT*7 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
582.585 44.6606 mov
(b) sh
/ArialMT*21 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
590.36 44.6606 mov
(u) sh
/ArialMT*12 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
598.135 44.6606 mov
(ff) sh
/ArialMT*15 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
605.904 44.6606 mov
(e) sh
/ArialMT*13 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
613.679 44.6606 mov
(r) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (p3-2.eps)
%%CreationDate: 4/18/2005 9:52 PM
%AI9_DataStream
%Gb"/LD3GntP31q+K`4>eEJ1uO9buTd]UpJ&T$n04db=8pkI_H8MG6[T+e(W2[VX4.r:eA^1BA7o7Ch/Gfo1iI)7e*:J4]h;SdEnZ
%T06?7?<o1dhEG*Br'ba:N3,e@X,nn34acbPBE)c;mJQ+NPo1ms-8Zare2h>[7aBSs!d]=+T&$R3=5+O\ok](uo5qZNDf3:fSpm&5
%<SpL-dP')7ch$7=rDWB"3M$,VgZRnqeX"oQhCPPIDdMFiJ!N;OSue9F;NojaGC+bO>g+jN9cohYqK>6aI8O8`QoFVRp%WS+HN%Y>
%Im7;o=-&u-b)C.:bAd>q[ND[(D`?/2G9=1t?(%C04S*29RPM:/eBSMapM@CQ^"I;#g\"#@4OS1lo8XU2defK,T5WR\YurnQ_a%W=
%)Xl5.Mrjm&ok$);<ad8=:4W6@L4H&$6!<NG?-S\EQh)$#1\46Dre>noYP=1Ik1_K$K@Z$[r:HICs092^?W8o_cW#sSr-&'__:)Sh
%YQ")Q>14tBHbZ%W:ZVg"O+ouJ/CBgU2q-OC<WK.CXf/c.]TP9>^IHHWpPSkuq3PI4s(b4qrniFGs*)`a-'W9..PL79n`!3S_b,P`
%=$G!W<]c]*$h1o$$m_//ja;3aS8RL`3S)`U:cXk36t>%;Eb!fGDTH`?>"l'KT6A.0J%qBNoL8H4W@[#OB4$.jqtkWErGM.Lg.*7=
%;6446UYtgSDf;!6c1b9I:l((`9)ih\Qh.'?U5nd:Ef,;4/dq\\>J-JDhTiSQSE2>Gi/=V7o5B,i>tq1<k*qi&@/K6bp&++:qVN1Q
%$eq&K8X@0/joeI)f/?Z1p(,B&Mg>3jYS[HejKTAAjoo2Po?H:^ip$mPNn<O7oQn7IG!=YY-*85l@eoO5!aV7]q4q)AfISY!fM%7-
%OoOp@7nr/RS,_a&BVDlhq3@,Y='(_af.62"#j&B?K_8D7'$KrPrH7i>s$lIi^"2$$MJj;tF/$D%m:J_<>SBUQOK.^1G$Ybtle`3p
%N0V4Zn##R:Di!RV=6j_r?Y*KH_%%8$Q]_[*j^P[#/oRqof4[`?U@FkQX*I]7]pujbqNi;,k<oNdMJoBHc/RpO7p:MUY1o1O*P6h!
%V:5A4c&Ce9*VQ&X0BZ5]iEUTnmq/'.op/)"<BVL'^rra9^g`.TiW%t_I!%;NK?mOU`+lm:9L&$rR!_9"ri6ruBP",ZFaYdHr^ZX9
%fZEg_>";[qj5o98^0Og`p%2-4=4MQ'IXb0SX2_M"LUBoq(X(""n"q$Ts8NpHiih372`K:bkLmI^r9Era]3N,MYanDjJT]R^][(ff
%`9lG6pbfH9V[f8A'=[TKFi2YPhGXq9c#S:+G5JFgoZ,9>Io8N/iP@5TH'd(RnhTsP'A.f*J*95D`EYW3?[q"IfPB]n];Wp4C-1=c
%T.Uk-?A(&aqjTSH0tXE@&adSbJ&Qm>i[muNbW(.t?MufLLahd5hFRi-S'Km808Z1Dk1)\p`IH9MTpg`9BlQ^[nW.GTB"kpGpYPli
%YJBY^k<I:*%j1_EHG-gd/0Q@l,J-0(#0(ahNW8cb^WP+0FUdX"s&\faY,Bns<sR`d[&^6_%kPjk%Yb5hMB&3GL2$q`-YYr]9dJ]K
%&pkpfotg/o9iD5DhCMX@5icEB'hH*7T<)h.BG1mhW<ZaqI,po5Agl+$@&uoZ)J;SEUj(=cnuYE_'Ilna'/(ZJ8IlcN2d4[KWNGCG
%`qYEq)rFU2%?YT;8PRRj,s8_@B;5%<flDKsQhgYK(]DTf\a6G!Ham6;=F(^JW_%HC_^Z6@GUdAT!a&*r"P>GQSW.bX-J5[\@?O^'
%*7:#$W(HD&g&u_KU^"i&2ViBu/:Ij]^P!?24H:eF0JqWYe$d9c52iJFLEc16]`Ym)LTUp`aD6BAaJ'PT7@EK.m]6#VLKgA,9V\_c
%kY-mNL&I_ne6,Cr:,,?Qbdg[%#(%X:b3g)9g>rfrHgLQpI0sZpVe_k-'cekR7^ej#IU;GGhW&H[*PTe*cs]sQ0JZ;,O`i#l?<Z1`
%4g+4dLNYgAIM%mh0udI[W3hQG-W&Jb/imB-j[fUu$Di%j7$UJ#ioo&.]+A9K=_m>*"X&8WVi*YSMV\r'J-7%O.M+`I`u#0S!*sjG
%(I?8r:u=(sH(s5aW!_J2Ug6>5UX0V.M,<$U^kj0;i-5=bM0;]PNMe*k.%UWZKj2t"OU.]_B;/aK=IfL8JOV>TlL+JAE)XkV_anhp
%`hpp;.grl%#DQWBKE]Rn'2JZl-kacjHc6Y[>K9/K#RF6o""]eJ&U8k5ltKqCOf+CL-sBH(&R%XW@s'5hMAl)rZ@`3?RRc%n`\Q:&
%ed+@@Gmo=JoCCD_TSPNG@c\c]X)pt?h<aQ\GG[l)\kA\CXM9Z[3M\TdLZ/c=5[.F%8A^!>)]$K#j9ab&##*Cd(=3-1?@j:^n<*F"
%3d]l!=T)WL&Z>ef'RL;g#38FoOJsXmgN3c0dp8kbH_a)d8`BcH'nqBRjWU!R0/ZP+V'VFqRKcU9mTQ3e,IG<SG]4V=3U]LZ"r=/)
%X_WG*<"3Xi3U9+c"D[<;kUWksk,2.XKLDtG$q8dRi/XcKI&$KUN$"=@@Ncp?773lB%)a\/;8Z$6JPC'Z@00;kVkpgOJ8'iH4`s*n
%ocuVY`Kq_h'!3`IlC/8pp`3q!%V=#ZnWSokeVN-A(>G`_-U4;\T*U?;Te,u([j$fajTWQmJt53;=Wr#W,Rm4O83nu4AQFPr@Xb[q
%ZkkP`JfHW.KH5Xr=R^PJpf/n=X,Il!g@St0rd/%7)e.)V$?IQ2+K0uAK;E2:9WO2JYCU/qV'-*ce5b8ON]:0g.h\C5S7A*45XurS
%ncYeQ^%N'9Nc<+K]NjAHY#PlRKJDDBJbcb[GEQP.Ujr1enj(iNIL7uR&O/'E2r#X(l/b4k">ZYkR'It':SsFL&`9JQE:c?6`oM<q
%(_do4!+a\j_`r^;"/G,\/:'&[X>r;'QS^C0h@Oiu@L\(-Mmen%#r8H]:6[N'4?mI&cV\d\@tS2")4a%Hi,,ht&7*6-q<<T\;'\CH
%:S43i-UFu!VX0_n*$_E$RbF-32-5A-ne3u6=u:4/$j+t6B'*2G:J;uU*B]U/:irsSrR52!9p:9gW2##<+j!Y>5STW!dYb@BBOE28
%+WXbVL6X5BUm)$)P:_k'$9YG$W'o<OH%MUW^c^fpNnLYX:t%1lVL:-.CqmiF"O6D<@T(MS9(D7N>=lXVB&!EWG#u&%,o5h+]4,f\
%CSk>>IECqs(eB/>9Xe-ehM8ZY9GV_V8NSV1m?37+9C]0+NP2m>";8NP:7$JHi6Bo_H:KAA'+.ai%BI6@j<\I]`8.`sTSN-UfSHAT
%(`cg+"rjUH6@umhBiCGs[!nnj2PM(P,e*jJ5fjSsAqoP9\?Os4&''VA=A]H5K$tgcaL.EhJ^e)U\/:W8Gj31&Njoqt-I>XB:WsJS
%Rj(K;+,L]Ir)GC@6=s&&4So:dVFK-SC2RT&9W3\?>btXl!/DmUFO<?3R%f5[3lM(4Y7Vi'VSXRJ'-72J_\*?I`JMO=b\TOKi"83o
%APHRKcp`JZ`/,]u3)guO-L^Nl5d:H7>?39aGUB,Ja&[e[aHLm7b=)EkQn-_BMcV[=IctJHR/Pqll2cbRcd8p+Y_((k;l_B7l2d\K
%c$Eo)'MI.,<'W>Knhd'@&;lS=0l4TC`^-icXDu*bnA5q8.BCY2"u_-bR-/c+^<gq:cu(qcb6@6@[=NKs*_'bDAcVo@D[.Pb^e$l-
%@gqa$5)AP/1Mtf5OUfaGBS6BGJ2O%9XHE$6Y]g\XDd.GeBK*$XEKOte_i+^/#I@HVMbV'8!e*%dgF>BTef$HVJ3j,*C-k5*CR?:i
%C`!EI.&)U!=iL!;B."S)P@>adSh2E5M2Onl-_R][,C"q_-%ZV':r=&!+l&\Y)f7T')JG.M9P4K3_ZZY>]?":tm*,Q_[gbu@+?0W;
%'%s<RDKZZG#Q\Be,*C8G`NEYF&#s,LZ7_"7(QE(J'e;G#ZX1=&*X]8e.H_kYk[!&ESC8tIChNkU[28>e_t1h#<0V$o71'5GFu3W%
%6g&SG>OXD3`(j9]&L`^E$?dVb7ARDoGDJe.\X,'@&3^Y]*Ar)!Q%gKi,W('F%86d$+13ZhB'<"$Y!UE".\)SVJLsEC9a#UW^eQf7
%L<28ffHN+^_&F5c0!LYagC:Oa9O5(=AtVuXOdpjGC4oMZ]HRft/QPi-3Yqm$IOoJK'=&VpZWst6SVn:6\Ri:!=_ui]pQF>pM2cJ!
%(1?Sdq\(f1:gVg],5MNVdg?7]>d+?4ZV(Q4+;]1Q]*j)F1C&MkfoH?=COi]EgK7Gl;%6*W$@4.[8atQIVun/XFsf^57?p*RfO8,)
%#RO6m4Hh``Jqtoj>%U$S%81."[&!eJ8s=j8LTOU.#9>T5)6gg`&HmGZPXZ/i8js8\K4b5A'B+WV^QFA=Q81L%Sq935"[C)Z77`pe
%R\s_65<rJ^_IohT<eF3-;Ka=VeZB0BK;'1qL/jWeSef4-Bda4X#o!e)M4,-tGbud;fh`FfV&E7'#UNKQ.%)lrer11_(b6e<F$`ps
%TE=jj=)*Z`k*+G=J_JKj)L`(N9\TpA,IK9DYud4<=<JR8#!d7rAl.HTZ/ZntePe%o@krJ[,\=q<^,e\9N_REK9IWGN>/SkU'U@J3
%I4M/BjZ\,dht+W&G(HflTVK!$;c<Xo]@VBrO60PNZ)cb!.";t`$P8Tm'PMH<F^Nlag"t)Am8`PidtV.aCVhL"6Y%pK1SRAsSYEE)
%i1YuO0[t4(,,CbAd1BK$6";`RBATk'L>E>&jMW<u/'L:=_s%NC/ZT#S\p;jY//qq-:l207`>XtM0R!+2i2Pu\M?p>g$S\fd;>Q!c
%b3g7:qVZp$4]Hq4RDD3\,Xb2W\9$guQ_]=dgF=nr_,hdZ&,'elK7[1@f`O/H3&,fg;2c7jL6tl3V$0FXo1<\MY_AL`=U^%X>QDRV
%f`6al/1T%3M!("NU>ge>cU,kb1l?!4;C03[+JKkeT>OUc<6uLJZA;^rcQn?Zed+Dh+sr."CF7mk-m4gpc9XIu_D'ZB!!V#\DXQ/V
%"#1uJ"W';+=4g(1=>tfu8QIY+9!dkX[oT)tQ(Lmk)Bj,;A<Dib<3.B$id%D]!H2gU5hU>=R0(;@7/(^M=o&@H$s"\O%o4Oj#?5r8
%'!Z#oP:G%.8j=k$FmLK!F[1sGlAjh88p>JlB!J6b!7@3'"C%C;^fXc&pcb'?U6e<AbsOIb@F..6?q"D<?g(M9JGO$"f4r6^MS5R;
%1hJnA>s1'GLL+dUX=$[DkenJ3J4ioK`W9qL'>k#cO.tY^l^UPH5QX\c1YK8&`1q1.6q>r#b(tuF#ka+1?"uVT[<7nlW)"&R[30c=
%ZujMq.0;Od]Wa#F*M#UZcbr,1,$5e/)6\Xd.PhkBTh[.Wq5I]:>27[+KFX!>e!XG6BLCNtfFngol7#2A*?cAhf7;@ca9G*Q#<Q\?
%IJ0Ln=oh#Z0Ij>tKO[\X,<ME/5T'e;nNB3VX5=gp/)`&#DTf1i2Yg&*j%sU2$7&@gfpej.6]:"Z[]g]/#\2"82S8MKp.E\NQLSs%
%(h$8Ank+eDS!d'fHOU9+7"UDO@>0t`'2.@T4d2!U%8:Ni"X:SZ&cC"]OpBQ5h3tX&YfiRN(EK*!EEin]ZNX_Ulo.`r;m.$$]G9q$
%_!.La+;@%"e1B,>`2q%;Hi_[20*%gT4:Vj9%?9OBhd%kTIW1"o^8NO>Y;Dni;O`QCY$9#11+2$KOVqQqd(A6/CkNq5KRs9;SahnT
%B.H'c)k4A@KIE>I@-B=V$K4fiM_L]78`857+AOd2JoJsXk)"%$gS7C&6L`Y#JF,Te4/r+NkVBDI.UMI>Lkd,X"7'!h"?'Bp>RH"i
%AO=742.@7#*eFS-d9ad=,S>tCK%N*Rp?.ufCB)/Y$?ZG"+@bO.fqPs8fTbc3m*Skd.(G/*:/N\Y$5Jp=5Ef1pd'9+ZqUcI`;n@`@
%kUCOk&^[\"%K\bf[*.I@C.sB3V$ng4FGM+J(BHM^c0![aId2M%?6]Il<Z$/dA/Sh&HVH]_`CI")(Z.d2nP;"]p+YT?&pONpJXOAn
%!cFPRcj5d[Q'IA>1dGboJ$9iak=dG`!<8[,7>*KZI"T_4nI==U<X"`^62T\!)E;cq(bmKYl((q)[XpY%Y/kIt/&VX(id[ZH(8DH`
%`*jF4Y;M5gW(I-GJo5NgGpXWN!Bb??nN1pa!k\Z?TTtA!mcHYDU)u.(K8'fgO=:U=h'k[VZP0%o?o$4hkc)l)6JY&<TPi?&YhGd&
%Wt!eqX3G,1ZKMT55d,m",]QgopTr2#20^5Y"H1U:4"*DOHa_b`6-n9i/[f6B\d&^3T,$*#jqXhepE7&Q#Bo:68"bm^bT\Q-2;6E<
%C4O^"<idl+*!P(%/Km#@9;k9f_!60QQ7XU2bj]EAO8u3:7,^Cq7^A#:2iJu"=^7=6"k:>O0T]8(cAp?mT\ErHZq!SK:-_E&KGARJ
%BZ_3A!aCEqlt]1[cmdcQJO5Em&1of'eJ,q2__))3L!9FIUEG`JY]&@I4"<PUZLb(L_p.GO!((\)7?625*`eo4Lai6)9X5:f<Ai.0
%c_>",9,KqLTqq/Zki53S!SJqqMIOju*=_qN)Mo8*LmT5O5:9m\$nTl<E@Q+Uc9Z>*,41Kl%[7`DL<8YH":W=`I1ETi-CR?E2Mi4R
%HDTTY.Bi:.+:-toJ#jopbsUC[6()QS9/t%R@r?%=Jd)f==Z,1r<S&K$5E.)7nAKq0&<-^:l>,j>1OTL$C=R1;lF",+_=Dfhi/HaU
%[<olicGc_O<eSWH7eY0S1sm^>f#--G*f@QLR1A4BLI86,n6'pFC=\W\-kjWk?mZ,e"Hn^\=t,&>fNdR#JFFJ8pgVFV"@l])B0?b7
%bFTC^ecZs65tn#M9WV1>"_bKD1?88AE9Q+@V_OQFOsDu^90g?]MrBmjgW>(i`/M4M:)p^hfib5u'F2R2jhrbm-Xlr]2,bZh0ArS'
%5m`:<a^u2jk6WH3;hU\Iq4d9bB8'7"YRAFiNY!op7%0YXi@rE*&<ZI]F(/Kb4=(9!VX1s.s'cIlU'2p,f"Ca"`X@TO6jJ"qUdcBC
%%GPn>E4$=<?`8mJL;$3AmVpP\qmeDlY,n*S;1:/,CCs#CR%r2(pscek>R.emGgusF:XLq&1la0[MkK$-HFoO-.2p#;N1iR<pABG^
%5[7kl(.FBHN>ne,82=,E,R_IL3:Thr(/,26^Cark:RaseQ$'fE12^LV)q>Q,l_$IQc\YM#$JpbCZuf-?3O_iPZs'c=OTAAG1T;XX
%XP8RW93%S34h+DIR>NgO=-l<"2)i+CW!P;S'YDO,R]?!\r/TT2l$G'UmNiM7]uNb!/Xr@V4J4KgT;U7!60AIC/N"25!.mP,=Y&8F
%ReV8@k._E"VaK-fFj@<VDVBgA-1o2`RPN):I8=<2a\n#AW]_(cfK*H\m)OlC$-jIm&&FQ2TYNV)66ff(lAoN=/Gc<1N(_)r+b&*p
%OX+7(Cj%Z\nD!/*#"2=Qbg\($aX#sl7tuUTaZtM'D;i4i`&:?t$(M4"J4)dN:^+ltEm$eeasVXIIi&JU\7K*6,4eZ2'[@hUj92*,
%CrB8f8!-)19rHnp]+d]Dr)*kJb2gO\MQf+rX6b^5ON[LE_a=tVc>nHQ!A/X+fl,5pe'NqE(J^,9`/NbG9UqXb?8H(j-mXoc0Wj$_
%COGOR;$D.g*(Var+n'G^hA66Lh,9dujBd)_:KZMLc*gFXEmZkQ$u*DFJ0>s`.gJR()$@t1G*'lrEqt`<gh'%n4HGMN/P]ao[J4,Q
%XeG^05f97b2=%Qp;WFWQE"Z@4@[%R1p0bbS&_e*+Z1mP7j`F#7]>.53BXO!?^aY>GdDcT)i)JN92U4-@LQ<P]+-ePn)V:JhNo6Ie
%F+2rsJIjdQ%B/)Ad!*L';ZiScP*4%cPD+"l;br"bC2h!\`qeS`FV$CC>*'dT2(Xhm*Q2'pCnO0R:fQ7b3pMa,'dn:EI0u%G`(QK8
%,W:Y@*8R0lna(?(8KAC<%@"OWMk*@s@l&l"4tQB#dq:>C</F+=;E;(s!/CtqKX<:*n?hKVK.(=Z\6"_nfQkEPSk%!>qc,,=+MrRZ
%/i:JV80>*DSX@LfLo'up`)?X!#DXT_\-]u')>)..3Vs87G!sj`FU``UR'kRnbmnSo72m?u=MI`SU>D"79:uP-:fcW>/c1^iV.(eY
%Sk2kW=q62hc=orb3Dloe&S6p3-d#i$R[p;k"oRo-.LY^Q;8$AaRlTq!B%N%$0NuZB-7Bo&,p1Yp=Uu,iYL^"cEeg5f\+@6n:0=mg
%dcJ-F<&+VSjBP0q:6$Q5aA(H"T)HWs,HQb]mn(\S%4=*E6TfGP_#"\=Jfo[>!Jq0Km,O$*@6],R!?!pZF"[W8!2>Sic$SI'^c@36
%NMJ!A$"lq_9k95Op''4e%XQ33THNS@NEO.&M6f$6,cD/HQDDUia`13Rj?h'_i]9V<f$ao'73Y;5[<4&Q0>8%b*8!4A1C<LV]69&\
%%6Jo:a[#B,68eEH!7\4kGjPKoSnO>kj\1-2G[<?E2m>?<3O9:,?JWO>)-$<f<6'_lF(%`2;tC>nA-Y`f,VCg41cJB=;/G=/WR?Bn
%M5?".'W`6Khj&/fdh<cle8O!*Ln_`gVRdlp(cFQKaomY](Y'XFR$k0#W0'Jf?gFC2Z,@(60a'\PUoFH)?(T_a,G$%!<Z.!_q4cqC
%^q7B787+].5SL'XZf?Zq2N)h,-?KB(;%O828Ple%3W0e\0WP\CB,lKs9@3qj1h0GDPm=jkDjWOd.uAn]3&*FM'Y\N_8DWbi!caaG
%b5f4VZLCk<i4M;@,V(JuK_/LRb=^E]I!gtQ!>q`s-lK=Ji0$KSWX(Bo1_U:+4nSq\SI?!k@Xb8Y-"Xp"Wpq$"o>G$]9-_7r<FV(m
%"[<(d,g_Cdm_BmZ\^5Ae#_]9Qb=Dt*_`=XQ<37SbZ)K$**AL13o,%C=3Bq@0\\'e4kod,SZuZc'eI)uI^gB^ec^7Umfr`GSc40Xu
%@7>a0lD\>a7r^j4-F4gjjVc/TIim24?*X2%>dp*=*SF!GS<WTjYuAf*1Y4(,ZF,>c*'AiR<(R9EA0n(Y'rOmJJdXS@I?Bng0(f&J
%QRmJh,Q]VCeg!rn;t)>P&;eA0al:Rf1>[Wqp3c6k+,BN+R54*`]-<d4\]CY4GZ6XjWTP3=3LKpmkIGr'Yn8`hNWat.!J+]WeO42g
%rXmO71!:t*-^H`=L<mMWeK#P7Uba%Ar3VX\_!s;t&`")8PnK]^CA7oAY[7Md/KMZ]Z_8tCkgFu%=M@2m)g8"b@$75aJ6>YBSXO/r
%RYJUA-i)r#Ik_m2p[^PD?FE"kLqHBbl6&@B"_5JuG52;t>"E0u&$mi6&M3flFpMtG+X1IS3$7*h*F0>VI*-UIT9]U-8)>aDg8I5c
%2cb3Tjm4ENkuC]PH]%+/I1356L2sY6.:?kh(**fIK?2_C)WoY9C%d%$<XZ<;&A(m3P5*-[V%t"!3Y(ekCi"G)gfS)KbIdB>f(YQk
%S-jW;<:IjF+1mHja2I*i%SY"_5Ph:eXHZ@YLk2<M?fZd].dkg,<G8C\BJr(YcL09`*B#8t`iX:YVYUmHc3IE'=<ShJP^GIWk5cL/
%cMcJ/p+mGmcMa>65N2Z4bn_b&_oNOq?*>2Z7?)At0D"N%)?KW+l!LVuW46j8p/PE.:3;c5!c5&=XLP6Q,4,1=acnbd,3d.,/$[^.
%WOQs9Ao]iJ_.(IQJ:=]1ijQCac+PZU00tV:*d.lmHto*3\K6EAYT)/b)Wu"P5_phC9WPYn!=2"dF/PBeW?$?P?,#=<\Q_ute/W?d
%`STp8[<DeVBT%A!lit-'Lf%'F%m*5HZ7fuaMst6I2(p&d.jA3*O,>3A\8gq+1Q.e"aD'7pOF>b1@Hi3.(N!O!W5'83#!2j4I6i2=
%`&]D3NJnFb!.YNiK`YX5)!-q!bTm13fWE-*@Te^n:b(UFBaDcqp_sT=73E<iL<gGm2u#9RE81IsOG\ZmEnY9dD,:JIFm^&<^ZK$i
%K-J17F2(g8J@WMS6:.+#VR]VT06>"4f\&CZ2J`COcQ0:H_L7ga9+7WR$O@WnI`Eg].Cg8cBa9"T^(h\*T9a]k<G`?Rl1a1SHWk_-
%B5E1Cmn-;14>5R!_AM<7"\72qe[C+D=<>Gu)<9<RHO\XifT5dnleF/DS[Yk6#bcdbNnCg?GUgi4/7kK(Ybts/(O/_*R%+L1F$s2l
%fad_n[\\SuUfJmY5s:I>;)0d#h8$?p_;nQL3C]hFemA7PYhuEfEbYrI0Trr^:)7&q$A0VC8is<7!i9J4(U'TK&k,mD2gXk5(&I1R
%""Gn*jHdFDosJ,%LWeYLngrYYlg=>!cT>Bg=7-,1n,IZgbOP-rI_-Qi84EIV2rsr;)tNu8^ELr$qA]#%7n;M%noE=u#:a^a*jH,$
%fc)s$%9K<gdrBbFMN?Fnc:92UKTFng`D8W*`<i,F&0n:mTr^/Vqpb1f+-YaUE:(M<DqT9jZL<1\Q[`/`*+8@Zd8iD&jk2l;$2e*>
%46Yo0FrPDq$&9PnA.h2EI^=r-)P>a3ElX.!_[\M4bi(9$8V`[Ri]$%>B4.WEcn%seA;2If*Q<%:JY(7gbFe6O&AL=LY0;)a^bl,T
%I'$K=e<9^)^ED+'rW?Mc=@\1>1\*CV3Q_4UEpcD%[6_Zsn-!_X^.)PCRF+J[nY=0QGT#&rb%J\U50"PpS4?[o(Jm:qdmulqj"mR8
%1A:(H*jP0QVQQ_NA1)V7i=k.>$sh/O8ZITm^iPB8@.s6a*<gK^/b@gg&)Qhr.:`Id&nBNt)`Y1Rl@iS?Ne<]q]]K'P0=hGUXKg1]
%*a$U@E\(]9hH/!Ee/V&$Hu"q92RL;3XN'Vp&Z"hBeG@+`eOku`q1Kt7E.VFlc2]#tJ-rg"C,tEdXA638#HQ'@cC:g%RKJKM)i"`j
%A>/R27^8bPE,M7RJ]6iHR2e"C)o_$W#=9>0^GTaGK]J9M`[@@!+O+Vb^ZHrIV!5-GWb-`dS&;2t/j3P>EsV^/m6H9M\5Rna!GVF3
%Y#`X#bh,NSP=C<&1.cJDBrl5+D-"0)AtR61-+OTkf`8b;(n1Z73SFRaLKLT--i\kW20).ehPOJb5KU/a^,1`9g1ki%XNjlmrot3C
%aP$qC7gY%0=?e(*ZD1@Y7Q@7Ko]M\o3K:@_G.F/0n,;<87Euk7>;'bdEI]Lkb&%n1HrcEjCADNh[`Q]]@i*L5EU`QdI),gc@ttmX
%I`SKY/ueHf2Vk)DY<:7.pc]%_LBlfk;d3$(ah_jTK^'l=&`q:dCcBr&k4DD%8ZdApX$P6'""0U^=jfCtSDNM`lpg3!H'Ot%,Ujt#
%'R5P<,k*%t'""B)QOmpK8J(QHmjt1.bI\`5#e7U(I4;ZBM\A:>Yp:u6Ro;?[a1Y<d7e0+aRH%O;Zru0^.[_CNMraB$`0Z'rd]"G0
%XJ!TtL>`+SjN^@Rfl0>2Wk\i;.S`&;l^[WVXkpjf%&'!JE@Z74o$($'09%[p+fE49H3[s,]/=D)Z8MEoXd5S!.7mG!Ke$9SjpNt*
%h#fqH?@l@P.:jSUU1J#Tq7&Jh]*Ge@8V0eMcbi_I6qIN>eYe?c*H!R5,m0H]T2>\NN[Yn`fQ*K.PjABFT*:iUe/mpiG&!2*PM_nV
%"o\nT@Wer-Us^U3I02es`?fI:j:`bnOL&9S0&;rBN@GN[=0Rk&Jth:1UfpO4,FY^SI.]P-&EI(2Xp`VcT>1bEP$?81e6N*I;[QBe
%j=GLk:!Pal37e4U5?&<+1[l*5Qu\"XnSqVq*&\U;puUQl[K^Z64GH>O@]*7kT7gHL$/6fj/Ij,>Y`"m+rXunFl"(J.S4-oVQn7f=
%OS6IMYdGJ1SOpsblUm\teaS9j+_RN/d?QOc_KF-][1^(Un\Uj?.3bclZmF?;];>O6Ag-^mSRa*h1!,thS0[BhHj2\%NNJ%?[#]7h
%XJV$JoTApfGoT?lFZES8&UhU]]k1?O?E;Jj>*!7$Id/oXX]Jf_]$)e[:.\!u\6ZrI?*TY6Z@E&8E\;!W),;6WH:7gHgDWZ!bnn.G
%,)Vcp.8:u<cYUeJ2$(5P/??=EkK8R_=uAZ(V#gDrPFN+p6G<U:73SLtJXi)*^QWi^B.,b`$6EtCkG5!nXQKNRa#%V^)hq'8qN0Ph
%k;bPUcRJ/,-U.N1o5uKY?h)@<U,^IEnWbMMgR;FWMtoXUo<BB#L2/h1@[d+&oUm9![,,(%8,Ti]K6lGl[;#iMOQ)tQNiHKc3HHOg
%3HC\i5,Yh?AQ19Rb(aKYdP+LdoB\I";U='<JnZ^$H8lZ<?B,>47[+tS6d`sq+.QrY2lq_W:\bDZFQ?U@^snfKgi1ZHg6hXl\(Mf"
%iREQN#3Mg)I;S'</=4ur[2HhgSLVX'84:!k*?loQ>6-7mXn+tMQ'3Z!>^"EJ5a)eS,d-]P_o1>4=ZiSs1]7JOok>9_PV.Pu=h$r.
%4O2sfT%JA0psRGAE,sSolu)4Ob9arGODrS7&prAo,kfr^R@GXRNsKjrC`+p6\Ralf;;kIoCQEd-H/]KYd"A!9@:iPc:+M'lj]P,p
%Y)sDdhMnJ%D'_MS&fGKq1^b9N#W*WCl23Gjk(DTVA'oXYi)Jo0@^oWjVm&t>_)ediAhbQ[3J'V^CH3N\K!l9S`a.RKni@Oj6-bAE
%,sJ%g)OXiO,d)/!+$l9HF71Cn,KEW11!EK=ZQXr\'QcUM.)cig!kR:1iK*9Nn+oVH+!HifJ%K!)k;W&1EaH.nr,slE5=\%1kD.[<
%S,)j(E_YaK[?n(nDSB@.Y&>(71qCfogUHd653Vb2CpBDaY21_m5EE#2S*di\mEP:gEr=a0\liC"hqfuO4SEgpAikJ@("fjON=$Sb
%bF?K*GMD[\DOUTeT3gDQm<2/r0thikT!.po>q@Ylj6^H)3F>K>J#0u!%ULWUfCSOoHFo^)gaqAP)ZTVR1#L?:DlW=:XVi,8IOs@s
%RXIGQp\=DnrR^kqlfj-7hMlUR0jN-fk2u6ZI'pJY9nCq;0@t+YZg%$q]cFlbE;a['2;[hH^Sp2SGVu#mXGqVCk^%N$6To@+`nR-:
%2n-/-MtL\pICGWjb?r`Om<1["h81<lk.41g7<l2mr/u<PPX\h`m<T=/X6ImqG0(:Q%=\60m;t^D:jb3-^6*VQjUM-4j2[)_#RAHj
%+*Vo"Z)mES1Af+Z_"dG$j/37$pabbrre`c^imR)j<U'6O>!8'N4R9A"<n_r/I5h-=^Q=1q/fgNVLZb3<cNU3/V;LQ]\QrGn5E)5l
%/:eJlk6ZPiS\OW8rkA%$Zi'Uhh0MH@1>f/=@p^m-``%0Q1s]ggkrk;5:WjkZ?B48t4Nko&QgSo4ID5#@6d89=KsY#SX$u1dMpc34
%bAeg]>YF[2L2#K.Ygt.thrWkr!Yr!X\'jqMhK6@7cY_q<6%7\]@XQ8I%j/I^9"mM*rq4gbS(lKkMs=)k8DR'bAR>(!odYGUX*egN
%a)S74hq!t'VjIG\@HL@>(V\\[c<kT3k'eu-1!0B%Aq%-gm"[7_$A?(]'g_>@p3FiWqkn6.oGR[`n',]6/Fd/anK4sc5@*edeJA`<
%4SnS@q1@L25-MsG6N*P+k.AUtH9!X<lKUD/e,<V1%o^u*S#c/$omV.ERe#&8r:R6mqEIsR;rt&uWZV7-$HGO1NV`32,Vd:lV?D,9
%0+T.(@fcl=L7P3sJXiW1<S`L<>]c=j`KW>80FogdnbNg,_[daX:I"atMfA1'$dtbU4P@ER%",hOT$WjO9AH/+2#674%DJujojW2>
%5Q5)t^:eu=ok$oOj&fpdJeZ)eac_>(c0(ACae+i?U"[WJIBFPa(Y>;Z_N7Qk,['pfRYt>AA93+hY'RWb0?`he^R&"Bl$JcK^;-*4
%2HS5.A4lgpC4jE*dK3(6]=apr*dRkcptm![e-eN$2"^cCAb^_8h0Y1@M5">UqW+!l/Q(_EYK"*SFGrFUf-_Q1DE^T[$rFLTc`"Z)
%)PeR.qg(E]>ZNZ[TVnb[N.2>/E/1</8Ru2a[INSEm9JBM$R>R_>MF_f(RoSVpr15n(sLBNg;%kM&>Q`ZF\J%(\!t?JFgLji*f79"
%-a[C3nerU\UgH^e1N1Z!\0QM#m<kq9T&4FJf(&,A9%`.lnc@:sG<7U:@B\-=F2EoDkgBW<^OZ^]nSbncj^S+\Rc)Z*g@S`+p5DtW
%q5%'WTaJnrolgB0]m3qdX7cAcjr-3^/ZrdK<nHZ,`HJs7]f/33b9(+D%#3S.2jFL9-UgI9R*N`IiQoQ@S:U&De4thi5N:7Zq7N/$
%nRRGb%oIi.Ah7OKVF'Ym"[Cmqp^1KknOJ8j?):g4NI6[F"@")'X]7<3I\F=BUR7u6H2-=7`DM8gFL\WUpFAo2aj?DSq<$Xu$"'&3
%fm9WWSLHdKnp!W^s6Y-e78TQMh]A)m=s$8CD;!7F?O?IL(R3sFkWV#nY*JGsrl;pWP6$,#2)2I$L:4!$eWG$2/FRM3B/g1kG:*L]
%h]B6$o'd1iTt'd)LNc7`!jAZRW3u0s[(XTdG;jU[T.<:`YAB2+9Rk9mfTGS1#N7kU*Jl@3R(PJYo$.0N%p&qL^D!I/%/-C=CB3?M
%gB6ogaP[9seR<#pS%V6T?A\*6TeXl&2nCdbK_sPJUpZuIe8Bb+:h^*ih'A"]UAJJ7bk'JLc3ss:5-l9o.NnVR^34q4@^*.$O<!*!
%hg\-#<NIg/T5mI$kn_WoGrOR+aOV2<'ZafSc765d>#Y<\<FdR2\2(JhQ)-/P*4>-nX[fAA"=T95lCV$P!i3Q3O:G99*iV4j)>Ki<
%5H8]&MQQn6n,LJh,Xjk:2%KW5@N`3rA6A:BiEE/IIkuQ'UUK+#?"fn3D\$UFGGg"]:PN6t6_pC,?+k5IENlc'qfq=<!F*9WglE(3
%%^G:um[5<N.M`LoQL9s10raa:ad0u#Ol`*n:`![tf6(N.DA;kTl%-FoG;:l/8YM,U<9&rjfo\4FI^uTh)6$\RG'&j"f9O(6JalLI
%[WN:"U+>1pAJ[6lb@Y#!Oi,>E/F8FC;NPZ0$d<%cQao"!^-f%@R7>[QXkJEXG*2^,Z?2]1a.oY5$G60HpE>S2+u[8t+tl#,KqYIl
%)`_!fbqIXW9+=pfmZX>!5P;2T,]r7,]8BHlWqN-G,F<^Tcq<[fl&U%;]12SV;p1Td,$%d9b3nUI;,@T)bb8"%mZX>!:V(>mP6/U.
%6>Rj&@R7A!\Ha.K:[g_OV<_Z*]MFJsQBm4F,JL"jjGTY@C*2$EkqoroUd*#TTpBOeK4>3]!%)B<X%qd5`!Bdte5RnjpW:dL-f$<9
%_Pg%HoS@TQOZ]JG$_8N<@EWl!Z?2]INVSFYbE:rI)k<\oZ&geD*g3o%m3i%p#:iIAaj?DfLMj7lX+QLG'V_gc;Rn_R*4e6,]6'JM
%NHESh,ElTT<sF\"Q',%o"j%G+0R=71QG/R>BV--N4K7%.Im,0g'3Ca)4\uI:HU>&<C?J0<]X,L*TA7Mm2mTE@s/T,ec&T$*7nfbb
%FIru$H.#tCgHriG$VoJ*X%qcJ>tMQdlN<]h<0ls9TeT?$BHplt'gk`L3%=+"d)N5kC[i94g/K)Q<,1mD^keo=7%>[%`%+;tfkRMN
%^dY9hc>YeFPFdup=Jn%Vg6';-/9G\]OQO.Bee8MdPkA9_qG%7740A;`>8SR(Kf"rk?DVDo9QGQD<[tNKUd*^MJ]/6I2WiOA[d$i[
%>6f"P6S4S"qdaBadpan&@6X6[ZY)ZhEE]oNK$ha6Q*jk"\ke(#4>"Y$g?"l9:KcYnV/d)->.^B3<[pc:aj?EQ"W9c@Iu1%GUIJ8*
%;Rr]S^kV.=.(QX*T+$^)>4!,\OG);gpjH57b!"smFosUuj()i1dfKnM!$@9p`:bu&F(I<r#mWiW:g04.dX<l-k%PPp=9AEG\9#QQ
%b'd"+pSE#3/DV[@@t&/%&=*=V?q`oXX%qb?]PU.U*`eTpPG']qJK?3h`r2.:7O&GhE@QTW=K^H2o@hTc$7o2RlXX\Adjfgngi0e(
%Tf*kmX&?@'hnb10<6\'Ikre3kG@HgjZH<EK9mhMo$N!Ru8%B!JeYH9uWa%b.mBdkRkh%JlAg`bUe9/RtFiPkX=I8n[#0&_R[%t19
%SIY*h`:XA9?!V[;S'Y5:Ea@ok)&VhLC)#0)>`$lQ3C7gOWS5geBZYQQaAQ/%:\s+B=QaHWhF']Vkh;?F4kOGuqX4;e=h7C``]U@]
%JsZfp:"t!A.or4`4^EnFY4%:lQ)4@gB["qW$nW;_!M\;H2-;@&e[r8nU6NgKI53YABfQ<\[_tZd^$*P<:?A)D@7'GOdV1HndV/`9
%[MJ\i-'_"OXm@K4:n;sU;m%\--UVC8=Pmo4/`D[<?@UPcg&ngpVmYhP@WH&E4rG:1[/(gX2S@qF:pMTDjW8NNFpDJ[X%M!cd!20f
%f5&mpf[Q'.[H^`Z6_!oq]i&"E:PQme'Y7V`^TIgtT4?St>G;k/Ec5-721=@oXt8BV6Xu]ghh0@3d(G>f;-'714nXghV`n)!94d?O
%)&i+b>$o0N?c\O!;>NW:EFq;db$e;tq"@3=/cF8cFQt9%V66lSFebdgFWKSH2r7-"D;p@9$aWe+Uo(cc,cH&N9!7J0FpDNJ<dTGe
%PJ8p%<VCIpStb9N@YLY!:Yk>rH!6<g"D(<*X755n4m8P"qnjtM>e-d%ou9+rp&mT.^U(!1jiT_TaUNpE9')Y]f,O>"$=>=?c@(CB
%/,,]h#(<GLE$aflHOAZhQmXcuK/eg+Zh*C"AP\Am"!OF;=h7C``]Pio:k:X>'1qBWW^f@K44L$eCu<]@8nI6N)&i+bHoS.\,h+-H
%W)W1V@H2]P(o\uj-UZpb(0i9)L:p_U8:8segk1U;XXC/BAa)Ar)Y6n.IQja;0c?XZXEgu(LH"qe)Ps`]T+$_T.9+(E=/^S-VE!-m
%bemGYE_g6jbiuYp94d?O)&i+RWZOn8^8I#-g>Ik#<Msk%G?DDs?tJRd)&i+B+<s*VZKCVH'`Hk*$^1?JNo/n+iK(H2IX&(:XXe7L
%*c&s@\D=U2#HmX6Use]+TqHF:B%Qb?EKtR3UU315OJ3^NkV(2c;kJDRl`?'VYADs-dN8<UY@g[U/Ts#-FsMaIFe0OqWk*-eg*t9A
%-nTXCHS&s&e06CpG?*Ib8=EJ00":1HmBpb8cH%LfG?*IbcoKVeSQg9;p0*X8Y*MCg\Z>#(o[[QMRTjs8p0*WMVFklC\Z>#(%*%GV
%B\B+ceR$E>U6Lt]\9$A6(GFBJdDE7DOSYI:KQRt)rL-s(J,%s`$SH9[P2rs5BV2u<plP1[s7YqJ\TF\-O#0oST'/)>e]Tm6i!j0@
%J+;X^hmiscAA$pL[JgEj@sSI)+-n"OhgK_GqI]Un[4C94QAYQ'7UH-PiBR@ds8@0*9;m7:nA,W2"Eo7Oe(qY3n,GY3\pF1-4M@'h
%m]WP'a`+1`p$s-TrCno]IJHpt^0G^GN;re(_Zu7fc`<Bs'24JdF$lcGW:]ZVkr,\c:h4JLUF'n`:WeUW>>p<#n.D)-^FO]7p(EoV
%$D7?Hi?OmHad:&.^__K%plL*Kd=J(^289NHR=k:s-tqae?+</n7l86uchqs>EHo;&+1efVV'ufN<R*Feb&THPL[fn`"#[XLA8&?l
%.5-YTW4'H&Vg5bhL\p]/5X';bn9!j\Nla#a<_>Q-fMB?Z/F%9cZ@JElWdGKb.\tCd2p.!U]:<G@#dIP,gHiEOl9JrPX'fL`\?Z*Z
%38TL#k%Fef5U.ABoc;RZW]K'@+2ej8Xt0PoNqY"#kV,(XY-<P(=4I>tV:8l8?"F'+E4ck%>iU!Q%Z/-[UM[-p:LLa,i#r=sjh*IV
%bBep'i<a`hU$tWK^^CAPnL#MVH!D?el*En&"\G)lVoDmMBg:rtWLVFRaqOV$Xu;$KqWRTj.D:1=mV::h4jT_piON/nW.>6al_fdZ
%g[gg8Tp;"(*\jn]R(ak9J`t^Hen5+La&<X8Pp;%C*OjsAEB\HJDH(u^@a_2<W_i,#_!Glf2b<&M(ZWEReb(k6"#1;CYic,$o9^<I
%-eZbt9YePkJkoeel#L>"%L@,>b>4"_`E1U2p(U50(j_B)^j)Edp>UHH&P-CCXKTT/FGDG-+,1HRW(m&Q6Vp;*?$YT1Co.1a0&R*K
%7*Y6](7cl`Uit8YpYBZ$\[#^=F,1$4lfm(r"./"8I"2K5^sUm]bl<'8Va58(hchiqdMIs"cUTqW"#AZ^U%'\<5(YA5\:-W+C-:Q/
%^*cD(EZ=>>?7C(f+HsL[T-L.`[mraP1!$iUk;*?0QGC\hC<k3els\.!JKIld0JtS0F4=E=51ZB`8BF[*%EFU1O+Q0)Re[h@oOLIK
%QedgT4hg90=L3<p55$*S+pDmINY^B]9%M7%IQg*@P#9ch)ALqb)LS=L/t6fDd+b;Rj&#J)kT??+em%<,Z%Y)mQsI'hopG>jgK<*W
%5S5aUD03f,OE3_rjOGSX(3)t2-sGDt&&b9o)Fb)ipV]K^%.`tJ5dhoX\fqG*Mbh$Y5:1Ho4VSW4O4qSoe]?(WI']g'<<hJsgem1o
%N2SCl3gfCG4P%B1ic8B[Se7H0d`Ah4#f5bPFP6ELioTudhc`aMJo9nf3JKESj!_3M(tGStCVkQhQCj3>.%-ten?!Y+`ZNY0c\S.%
%\l&.<P#01(&+=0k/C$cT39(]O^r8nD]*iJINtB1uK>umI-K+)X'u7QJ[Q,H,'=ZL0_cgmQ(lR;+K(Ish\1pgNM/MCV58m,)3ZjGT
%QI`27=B^)FqZt8m4X6&@R$NJcZl"g</n`*C4`YKRCU$D<$?qO"SeH;nPSQZlJ`Q#l6oe?:(kR(,/^BR!3t&!n@ZLi)Oat3.Ome>E
%laa=A7-lX=mU!r/]]P1*@q4SYVf;:'P^?0l&SHXi&-9gTi_fUK2pL1X.**GGP-h>NYA/EK36t,cpW+^nQB(`4PE+UB5Q5plesn*g
%.!Ms>nKl2eH-4G<HlkjQiXds;:64B0r[2daH$Sb(PdJ*p@?if1.ef^B17sU'mG?/Je$nKR.E,$JD.kr-+WV$`5'f:tYNF<kQH^Y(
%+9%.U<jMrMOYEDnr$^E4PgTMSdl;]]4o]dkj6p\_gVrHeh39\,<:2'_X8.cl_1+Y[>&RHjjl5b#bA+YlDQhXC"?$3N&Bq&QBA<Ia
%r:`0^&Sme#Y`[Fh]-SeP2kudG^&:+02::Qm#9SZodF6-CruUZ4ho]LoGC].SDgoHDFH)IeS9r'Ic`_9E]_S\(Ss.G9^A2!;r$gaR
%?4d-b\X>(9ptY5jS*Bfq28-T<;"JK!$(i'Kfrd:*lK6q!-e+efl+eBaIe@Nf]Y2/U`7LJ[oS.+nSSqPe.iP..45X)s/%Ooh].(JY
%:<f5g21(4!&O0LIl_nCm=Ng)elSX0-qnk)#HA3;bXMGMk#e%d/q<YGkSq$_._>a\e]?4.~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2203 3074 a Fs(Figur)o(e)f(19.)38 b FD(Impact)19
b(of)g(each)g(optimization)h(on)f(a)g(Pentium)g(3.)2042
4586 y @beginspecial 0 @llx 0 @lly 684 @urx 468 @ury
2448 @rwi @setspecial
%%BeginDocument: i2-2.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: i2-2.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 4/18/2005
%%CropBox: 0.000000 0.000000 683.040039 467.041016
%%BoundingBox: 0 0 684 468 
%%HiResBoundingBox: 0.000000 0.000000 683.040039 467.041016
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -467.041 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 467.041 ln
683.04 467.041 ln
683.04 0 ln
clp
678.96 4.08008 mo
678.96 463.021 ln
4.08008 463.021 ln
4.08008 4.08008 ln
678.96 4.08008 ln
false op
0 0 0 0 cmyk
f
671.1 17.2803 mo
671.1 386.641 ln
74.8799 386.64 ln
74.8799 17.2803 ln
671.1 17.2803 ln
f
gsave
74.8799 325.081 mo
74.8799 325.14 ln
671.1 325.141 ln
671.1 325.081 ln
74.8799 325.081 ln
clp
0.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 325.081 mo
671.1 325.081 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 263.521 mo
74.8799 263.581 ln
671.1 263.581 ln
671.1 263.521 ln
74.8799 263.521 ln
clp
0.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 263.521 mo
671.1 263.521 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 201.96 mo
74.8799 202.02 ln
671.1 202.02 ln
671.1 201.96 ln
74.8799 201.96 ln
clp
0.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 201.96 mo
671.1 201.96 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 140.4 mo
74.8799 140.46 ln
671.1 140.46 ln
671.1 140.4 ln
74.8799 140.4 ln
clp
0.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 140.4 mo
671.1 140.4 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 78.8403 mo
74.8799 78.9004 ln
671.1 78.9004 ln
671.1 78.8403 ln
74.8799 78.8403 ln
clp
0.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 78.8403 mo
671.1 78.8403 ln
0 0 0 1 cmyk
s
grestore
gsave
74.8799 17.2803 mo
74.8799 17.3403 ln
671.1 17.3403 ln
671.1 17.2803 ln
74.8799 17.2803 ln
clp
0.06 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
74.8799 17.2803 mo
671.1 17.2803 ln
0 0 0 1 cmyk
s
grestore
gsave
0 0 mo
0 467.04 ln
683.04 467.041 ln
683.04 0 ln
0 0 ln
cp
133.439 27.9004 mo
133.439 50.8804 ln
624.42 50.8804 ln
624.42 27.9004 ln
133.439 27.9004 ln
eclp
0.96 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
74.8799 17.2803 mo
74.8799 386.64 ln
671.1 386.641 ln
671.1 17.2803 ln
74.8799 17.2803 ln
cp
0.427451 0.309804 0.282353 0.12549 cmyk
s
grestore
81.1201 331.261 mo
81.1201 386.64 ln
89.3994 386.64 ln
89.3994 331.261 ln
81.1201 331.261 ln
0 0 0 1 cmyk
ef
0.96 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
81.1201 331.261 mo
81.1201 386.64 ln
89.3994 386.64 ln
89.3994 331.261 ln
81.1201 331.261 ln
cp
s
126.96 240.239 mo
126.96 386.64 ln
135.239 386.64 ln
135.239 240.239 ln
126.96 240.239 ln
ef
126.96 240.239 mo
126.96 386.64 ln
135.239 386.64 ln
135.239 240.239 ln
126.96 240.239 ln
cp
s
172.859 246.421 mo
172.859 386.64 ln
181.14 386.641 ln
181.14 246.421 ln
172.859 246.421 ln
ef
172.859 246.421 mo
172.859 386.64 ln
181.14 386.641 ln
181.14 246.421 ln
172.859 246.421 ln
cp
s
218.699 88.3804 mo
218.699 386.641 ln
226.979 386.641 ln
226.979 88.3804 ln
218.699 88.3804 ln
ef
218.699 88.3804 mo
218.699 386.641 ln
226.979 386.641 ln
226.979 88.3804 ln
218.699 88.3804 ln
cp
s
264.6 212.34 mo
264.6 386.641 ln
272.88 386.641 ln
272.88 212.34 ln
264.6 212.34 ln
ef
264.6 212.34 mo
264.6 386.641 ln
272.88 386.641 ln
272.88 212.34 ln
264.6 212.34 ln
cp
s
310.439 192.6 mo
310.439 386.641 ln
318.72 386.641 ln
318.72 192.6 ln
310.439 192.6 ln
ef
310.439 192.6 mo
310.439 386.641 ln
318.72 386.641 ln
318.72 192.6 ln
310.439 192.6 ln
cp
s
356.28 101.76 mo
356.279 386.641 ln
364.56 386.641 ln
364.56 101.76 ln
356.28 101.76 ln
ef
356.28 101.76 mo
356.279 386.641 ln
364.56 386.641 ln
364.56 101.76 ln
356.28 101.76 ln
cp
s
402.18 286.74 mo
402.18 386.641 ln
410.46 386.641 ln
410.46 286.74 ln
402.18 286.74 ln
ef
402.18 286.74 mo
402.18 386.641 ln
410.46 386.641 ln
410.46 286.74 ln
402.18 286.74 ln
cp
s
448.02 133.02 mo
448.02 386.641 ln
456.3 386.641 ln
456.3 133.02 ln
448.02 133.02 ln
ef
448.02 133.02 mo
448.02 386.641 ln
456.3 386.641 ln
456.3 133.02 ln
448.02 133.02 ln
cp
s
493.86 187.92 mo
493.859 386.641 ln
502.14 386.641 ln
502.14 187.92 ln
493.86 187.92 ln
ef
493.86 187.92 mo
493.859 386.641 ln
502.14 386.641 ln
502.14 187.92 ln
493.86 187.92 ln
cp
s
539.76 78.8403 mo
539.76 386.641 ln
548.039 386.641 ln
548.04 78.8403 ln
539.76 78.8403 ln
ef
539.76 78.8403 mo
539.76 386.641 ln
548.039 386.641 ln
548.04 78.8403 ln
539.76 78.8403 ln
cp
s
585.6 190.86 mo
585.6 386.641 ln
593.88 386.641 ln
593.88 190.86 ln
585.6 190.86 ln
ef
585.6 190.86 mo
585.6 386.641 ln
593.88 386.641 ln
593.88 190.86 ln
585.6 190.86 ln
cp
s
631.499 210.48 mo
631.499 386.641 ln
639.78 386.641 ln
639.78 210.48 ln
631.499 210.48 ln
ef
631.499 210.48 mo
631.499 386.641 ln
639.78 386.641 ln
639.78 210.48 ln
631.499 210.48 ln
cp
s
89.46 379.62 mo
89.46 386.64 ln
97.7393 386.64 ln
97.7393 379.62 ln
89.46 379.62 ln
ef
89.46 379.62 mo
89.46 386.64 ln
97.7393 386.64 ln
97.7393 379.62 ln
89.46 379.62 ln
cp
s
135.3 294.72 mo
135.3 386.64 ln
143.64 386.64 ln
143.64 294.72 ln
135.3 294.72 ln
0 0 0 0.6 cmyk
ef
135.3 294.72 mo
135.3 386.64 ln
143.64 386.64 ln
143.64 294.72 ln
135.3 294.72 ln
cp
0 0 0 1 cmyk
s
181.199 309.72 mo
181.199 386.641 ln
189.479 386.641 ln
189.479 309.72 ln
181.199 309.72 ln
0 0 0 0.6 cmyk
ef
181.199 309.72 mo
181.199 386.641 ln
189.479 386.641 ln
189.479 309.72 ln
181.199 309.72 ln
cp
0 0 0 1 cmyk
s
227.04 294.899 mo
227.04 386.641 ln
235.38 386.641 ln
235.38 294.899 ln
227.04 294.899 ln
0 0 0 0.6 cmyk
ef
227.04 294.899 mo
227.04 386.641 ln
235.38 386.641 ln
235.38 294.899 ln
227.04 294.899 ln
cp
0 0 0 1 cmyk
s
272.939 317.4 mo
272.939 386.641 ln
281.22 386.641 ln
281.22 317.4 ln
272.939 317.4 ln
0 0 0 0.6 cmyk
ef
272.939 317.4 mo
272.939 386.641 ln
281.22 386.641 ln
281.22 317.4 ln
272.939 317.4 ln
cp
0 0 0 1 cmyk
s
318.779 162.48 mo
318.779 386.641 ln
327.06 386.641 ln
327.06 162.48 ln
318.779 162.48 ln
0 0 0 0.6 cmyk
ef
318.779 162.48 mo
318.779 386.641 ln
327.06 386.641 ln
327.06 162.48 ln
318.779 162.48 ln
cp
0 0 0 1 cmyk
s
364.619 214.02 mo
364.619 386.641 ln
372.96 386.641 ln
372.96 214.02 ln
364.619 214.02 ln
0 0 0 0.6 cmyk
ef
364.619 214.02 mo
364.619 386.641 ln
372.96 386.641 ln
372.96 214.02 ln
364.619 214.02 ln
cp
0 0 0 1 cmyk
s
410.52 187.62 mo
410.52 386.641 ln
418.8 386.641 ln
418.8 187.62 ln
410.52 187.62 ln
0 0 0 0.6 cmyk
ef
410.52 187.62 mo
410.52 386.641 ln
418.8 386.641 ln
418.8 187.62 ln
410.52 187.62 ln
cp
0 0 0 1 cmyk
s
456.36 213.18 mo
456.359 386.641 ln
464.64 386.641 ln
464.64 213.18 ln
456.36 213.18 ln
0 0 0 0.6 cmyk
ef
456.36 213.18 mo
456.359 386.641 ln
464.64 386.641 ln
464.64 213.18 ln
456.36 213.18 ln
cp
0 0 0 1 cmyk
s
502.2 133.38 mo
502.199 386.641 ln
510.539 386.641 ln
510.54 133.38 ln
502.2 133.38 ln
0 0 0 0.6 cmyk
ef
502.2 133.38 mo
502.199 386.641 ln
510.539 386.641 ln
510.54 133.38 ln
502.2 133.38 ln
cp
0 0 0 1 cmyk
s
548.1 78.8403 mo
548.1 386.641 ln
556.38 386.641 ln
556.38 78.8403 ln
548.1 78.8403 ln
0 0 0 0.6 cmyk
ef
548.1 78.8403 mo
548.1 386.641 ln
556.38 386.641 ln
556.38 78.8403 ln
548.1 78.8403 ln
cp
0 0 0 1 cmyk
s
593.939 235.081 mo
593.939 386.641 ln
602.279 386.641 ln
602.28 235.081 ln
593.939 235.081 ln
0 0 0 0.6 cmyk
ef
593.939 235.081 mo
593.939 386.641 ln
602.279 386.641 ln
602.28 235.081 ln
593.939 235.081 ln
cp
0 0 0 1 cmyk
s
639.84 275.221 mo
639.84 386.641 ln
648.12 386.641 ln
648.12 275.221 ln
639.84 275.221 ln
0 0 0 0.6 cmyk
ef
639.84 275.221 mo
639.84 386.641 ln
648.12 386.641 ln
648.12 275.221 ln
639.84 275.221 ln
cp
0 0 0 1 cmyk
s
97.7998 380.341 mo
97.7998 386.64 ln
106.08 386.64 ln
106.08 380.341 ln
97.7998 380.341 ln
0 0 0 0.4 cmyk
ef
97.7998 380.341 mo
97.7998 386.64 ln
106.08 386.64 ln
106.08 380.341 ln
97.7998 380.341 ln
cp
0 0 0 1 cmyk
s
143.699 342.841 mo
143.699 386.64 ln
151.979 386.64 ln
151.979 342.841 ln
143.699 342.841 ln
0 0 0 0.4 cmyk
ef
143.699 342.841 mo
143.699 386.64 ln
151.979 386.64 ln
151.979 342.841 ln
143.699 342.841 ln
cp
0 0 0 1 cmyk
s
189.54 309.72 mo
189.54 386.641 ln
197.819 386.641 ln
197.819 309.72 ln
189.54 309.72 ln
0 0 0 0.4 cmyk
ef
189.54 309.72 mo
189.54 386.641 ln
197.819 386.641 ln
197.819 309.72 ln
189.54 309.72 ln
cp
0 0 0 1 cmyk
s
235.439 304.44 mo
235.439 386.641 ln
243.72 386.641 ln
243.72 304.44 ln
235.439 304.44 ln
0 0 0 0.4 cmyk
ef
235.439 304.44 mo
235.439 386.641 ln
243.72 386.641 ln
243.72 304.44 ln
235.439 304.44 ln
cp
0 0 0 1 cmyk
s
281.279 319.86 mo
281.279 386.641 ln
289.56 386.641 ln
289.56 319.86 ln
281.279 319.86 ln
0 0 0 0.4 cmyk
ef
281.279 319.86 mo
281.279 386.641 ln
289.56 386.641 ln
289.56 319.86 ln
281.279 319.86 ln
cp
0 0 0 1 cmyk
s
327.12 241.081 mo
327.12 386.641 ln
335.399 386.641 ln
335.399 241.081 ln
327.12 241.081 ln
0 0 0 0.4 cmyk
ef
327.12 241.081 mo
327.12 386.641 ln
335.399 386.641 ln
335.399 241.081 ln
327.12 241.081 ln
cp
0 0 0 1 cmyk
s
373.02 214.02 mo
373.02 386.641 ln
381.3 386.641 ln
381.3 214.02 ln
373.02 214.02 ln
0 0 0 0.4 cmyk
ef
373.02 214.02 mo
373.02 386.641 ln
381.3 386.641 ln
381.3 214.02 ln
373.02 214.02 ln
cp
0 0 0 1 cmyk
s
418.86 294.78 mo
418.859 386.641 ln
427.14 386.641 ln
427.14 294.78 ln
418.86 294.78 ln
0 0 0 0.4 cmyk
ef
418.86 294.78 mo
418.859 386.641 ln
427.14 386.641 ln
427.14 294.78 ln
418.86 294.78 ln
cp
0 0 0 1 cmyk
s
464.7 241.32 mo
464.699 386.641 ln
472.979 386.641 ln
472.979 241.32 ln
464.7 241.32 ln
0 0 0 0.4 cmyk
ef
464.7 241.32 mo
464.699 386.641 ln
472.979 386.641 ln
472.979 241.32 ln
464.7 241.32 ln
cp
0 0 0 1 cmyk
s
510.6 134.7 mo
510.6 386.641 ln
518.88 386.641 ln
518.88 134.7 ln
510.6 134.7 ln
0 0 0 0.4 cmyk
ef
510.6 134.7 mo
510.6 386.641 ln
518.88 386.641 ln
518.88 134.7 ln
510.6 134.7 ln
cp
0 0 0 1 cmyk
s
556.439 82.0801 mo
556.439 386.641 ln
564.72 386.641 ln
564.72 82.0801 ln
556.439 82.0801 ln
0 0 0 0.4 cmyk
ef
556.439 82.0801 mo
556.439 386.641 ln
564.72 386.641 ln
564.72 82.0801 ln
556.439 82.0801 ln
cp
0 0 0 1 cmyk
s
602.34 260.461 mo
602.34 386.641 ln
610.619 386.641 ln
610.62 260.461 ln
602.34 260.461 ln
0 0 0 0.4 cmyk
ef
602.34 260.461 mo
602.34 386.641 ln
610.619 386.641 ln
610.62 260.461 ln
602.34 260.461 ln
cp
0 0 0 1 cmyk
s
648.18 297.001 mo
648.18 386.641 ln
656.46 386.641 ln
656.46 297.001 ln
648.18 297.001 ln
0 0 0 0.4 cmyk
ef
648.18 297.001 mo
648.18 386.641 ln
656.46 386.641 ln
656.46 297.001 ln
648.18 297.001 ln
cp
0 0 0 1 cmyk
s
106.14 380.341 mo
106.14 386.64 ln
114.42 386.64 ln
114.42 380.341 ln
106.14 380.341 ln
0 0 0 0.2 cmyk
ef
106.14 380.341 mo
106.14 386.64 ln
114.42 386.64 ln
114.42 380.341 ln
106.14 380.341 ln
cp
0 0 0 1 cmyk
s
152.04 342.841 mo
152.04 386.64 ln
160.319 386.64 ln
160.319 342.841 ln
152.04 342.841 ln
0 0 0 0.2 cmyk
ef
152.04 342.841 mo
152.04 386.64 ln
160.319 386.64 ln
160.319 342.841 ln
152.04 342.841 ln
cp
0 0 0 1 cmyk
s
197.88 309.72 mo
197.88 386.641 ln
206.16 386.641 ln
206.16 309.72 ln
197.88 309.72 ln
0 0 0 0.2 cmyk
ef
197.88 309.72 mo
197.88 386.641 ln
206.16 386.641 ln
206.16 309.72 ln
197.88 309.72 ln
cp
0 0 0 1 cmyk
s
243.779 304.44 mo
243.779 386.641 ln
252.06 386.641 ln
252.06 304.44 ln
243.779 304.44 ln
0 0 0 0.2 cmyk
ef
243.779 304.44 mo
243.779 386.641 ln
252.06 386.641 ln
252.06 304.44 ln
243.779 304.44 ln
cp
0 0 0 1 cmyk
s
289.62 319.86 mo
289.62 386.641 ln
297.899 386.641 ln
297.899 319.86 ln
289.62 319.86 ln
0 0 0 0.2 cmyk
ef
289.62 319.86 mo
289.62 386.641 ln
297.899 386.641 ln
297.899 319.86 ln
289.62 319.86 ln
cp
0 0 0 1 cmyk
s
335.46 241.081 mo
335.46 386.641 ln
343.739 386.641 ln
343.739 241.081 ln
335.46 241.081 ln
0 0 0 0.2 cmyk
ef
335.46 241.081 mo
335.46 386.641 ln
343.739 386.641 ln
343.739 241.081 ln
335.46 241.081 ln
cp
0 0 0 1 cmyk
s
381.36 214.02 mo
381.359 386.641 ln
389.64 386.641 ln
389.64 214.02 ln
381.36 214.02 ln
0 0 0 0.2 cmyk
ef
381.36 214.02 mo
381.359 386.641 ln
389.64 386.641 ln
389.64 214.02 ln
381.36 214.02 ln
cp
0 0 0 1 cmyk
s
427.2 294.78 mo
427.199 386.641 ln
435.479 386.641 ln
435.479 294.78 ln
427.2 294.78 ln
0 0 0 0.2 cmyk
ef
427.2 294.78 mo
427.199 386.641 ln
435.479 386.641 ln
435.479 294.78 ln
427.2 294.78 ln
cp
0 0 0 1 cmyk
s
473.04 223.5 mo
473.039 386.641 ln
481.319 386.641 ln
481.319 223.5 ln
473.04 223.5 ln
0 0 0 0.2 cmyk
ef
473.04 223.5 mo
473.039 386.641 ln
481.319 386.641 ln
481.319 223.5 ln
473.04 223.5 ln
cp
0 0 0 1 cmyk
s
518.939 200.94 mo
518.939 386.641 ln
527.22 386.641 ln
527.22 200.94 ln
518.939 200.94 ln
0 0 0 0.2 cmyk
ef
518.939 200.94 mo
518.939 386.641 ln
527.22 386.641 ln
527.22 200.94 ln
518.939 200.94 ln
cp
0 0 0 1 cmyk
s
564.78 78.8403 mo
564.779 386.641 ln
573.06 386.641 ln
573.06 78.8403 ln
564.78 78.8403 ln
0.227451 0.160784 0.129412 0.0196078 cmyk
ef
564.78 78.8403 mo
564.779 386.641 ln
573.06 386.641 ln
573.06 78.8403 ln
564.78 78.8403 ln
cp
0 0 0 1 cmyk
s
610.68 264.601 mo
610.68 386.641 ln
618.96 386.641 ln
618.96 264.601 ln
610.68 264.601 ln
0 0 0 0.2 cmyk
ef
610.68 264.601 mo
610.68 386.641 ln
618.96 386.641 ln
618.96 264.601 ln
610.68 264.601 ln
cp
0 0 0 1 cmyk
s
656.52 298.44 mo
656.52 386.641 ln
664.8 386.641 ln
664.8 298.44 ln
656.52 298.44 ln
0 0 0 0.2 cmyk
ef
656.52 298.44 mo
656.52 386.641 ln
664.8 386.641 ln
664.8 298.44 ln
656.52 298.44 ln
cp
0 0 0 1 cmyk
s
0.06 lw
74.8799 17.2803 mo
74.8799 386.64 ln
71.1602 386.64 mo
74.8799 386.64 ln
71.1602 325.081 mo
74.8799 325.081 ln
71.1602 263.521 mo
74.8799 263.521 ln
71.1602 201.96 mo
74.8799 201.96 ln
71.1602 140.4 mo
74.8799 140.4 ln
71.1602 78.8403 mo
74.8799 78.8403 ln
71.1602 17.2803 mo
74.8799 17.2803 ln
74.8799 386.64 mo
671.1 386.641 ln
74.8799 390.36 mo
74.8799 386.64 ln
120.72 390.36 mo
120.72 386.64 ln
166.62 390.36 mo
166.62 386.64 ln
212.46 390.36 mo
212.46 386.641 ln
258.359 390.36 mo
258.359 386.641 ln
304.199 390.36 mo
304.199 386.641 ln
350.039 390.36 mo
350.039 386.641 ln
395.939 390.36 mo
395.939 386.641 ln
441.779 390.36 mo
441.779 386.641 ln
487.619 390.36 mo
487.619 386.641 ln
533.52 390.36 mo
533.52 386.641 ln
579.359 390.36 mo
579.359 386.641 ln
625.26 390.36 mo
625.26 386.641 ln
671.1 390.36 mo
671.1 386.641 ln
s
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT Initial
11 dict begin
/FontName /ArialMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a1b815a9489d0b76c2a7
a1a44437723fc43a852d949290ad7a94a1b5ad5d7322465603110eea2d34
77620e1e4669220215496cab2a0eab44d5f5a2aab469817248ea06bfb997
f90d6b2f8be1b84eb637a6b37416b9391721d5ec95d3f2f0eeec0c5e7a85
f8647832e3b8bcd2e059dfd8583597637d69623cfac7cc5daff6f821c790
30573bd941aa88a58c5fdad07dc0f98e8a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ArialMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ArialMT*1 
[
48{/.notdef}repeat /zero 207{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0996 390.421 mov
(0) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 328.86 mov
(0) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe190d27478cd71b680cdd27c584201637
c4fe4b4b405b52ad89527914216baf3bd85ff2c208cb4a52be16604c8a50
dcecbfd5642891867b96216314c81c0e3dfc8fa082d8d8198205214fcd51
241f5962d19caf30548d3aa5d6ec1b5522e103ca20bbd3a0a24f1b42f046
b615f5396ae95aa136f86bb447b4a68e017a7700f7b41cde733dee861b37
3d8f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 46 /period put
dup 50 /two put
pop
%ADOEndSubsetFont
/ArialMT*2 
[
46{/.notdef}repeat /period 3{/.notdef}repeat /two 205{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.7535 328.86 mov
(.2) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 267.3 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.7535 267.3 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ArialMT*3 
[
52{/.notdef}repeat /four 203{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*3 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0873 267.3 mov
(4) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 205.74 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.7535 205.74 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/six 
<10bf3170435d0d4425184fc061c7faa8dc6baee8c868da453cb6a6f891b2
5354e14cb1bc5e0a0fcae04743a9daec5483058e0dde89957524c8915b19
25146f588ef5a70cf81e2e4fc7890fddf0f5d4c16f77c4469f58479cdd1b
49f5c68eada3087814223d9b5aa8284ce9770f7175297744c20f41a48dc8
d286517deb8893f3230571eaf9ea1ba0abf787d646e1631373082ff4df40
4c74838bb86fd789e63cac0da4dceabebd4d0fc0472fd6a9ca90e64e3c08
8853c020aae52cb442800bb6081c0fefcb0a206f46cf4ec1e25c13c94cbb
330a8f2762> ND 
end end
end
/ArialMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ArialMT*4 
[
54{/.notdef}repeat /six 201{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*4 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0873 205.74 mov
(6) sh
restore_ctm
save_ctm
/ArialMT*1 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 144.18 mov
(0) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.7535 144.18 mov
(.) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6f92fe7d0382cbfbcdc7b1ae90f5804442d3ad6d5e65
ea646fb35cdd7e11033e2adda681e7c859039849d6dc5ed2ddeff6a08225
d8f51551f3de1fe8a008c3292192037d710bd142b0870ce031e718da3ef6
d3433e72ed0f460e2a4d68b080691bc3e7e1f307fb1e0e53bcb7db60f146
7b82fe22e2d41fbef278c3fdcb5b6d458b0439abc5768f2ce7c9570fa1d6
c4be1808a48200bf465a45f457def4538c8fb72d6cd74c82c40277b5b6e7
fea6be29486ac098b8cb486a6ef4b50bb3d786b334b9913c9609ad75ea2f
ed8e7505ac0f1bb96c923835d10b3ab9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/ArialMT*5 
[
56{/.notdef}repeat /eight 199{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*5 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0873 144.18 mov
(8) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa65d2deb616de
81764a74cb84561e60b2b8778364d43e0dccd64e05939ef2243c> ND 
end end
end
/ArialMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ArialMT*6 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*6 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
59.0996 82.6201 mov
(1) sh
restore_ctm
0 0 0 1 cmyk
/ArialMT*6 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
49.0801 21.0601 mov
(1) sh
/ArialMT*2 findfont [11.9993 0 0 -11.9993 0 0 ]mfnt sfnt
BuildWidthShowArray
55.7535 21.0601 mov
(.2) sh
624.36 27.9604 mo
624.36 50.8804 ln
133.5 50.8804 ln
133.5 27.9604 ln
624.36 27.9604 ln
0 0 0 0 cmyk
f
133.439 27.9004 mo
133.439 50.8804 ln
624.36 50.8804 ln
624.36 27.9004 ln
133.439 27.9004 ln
cp
0 0 0 1 cmyk
s
160.859 35.9404 mo
160.859 43.3203 ln
168.239 43.3203 ln
168.239 35.9404 ln
160.859 35.9404 ln
ef
0.96 lw
160.859 35.9404 mo
160.859 43.3203 ln
168.239 43.3203 ln
168.239 35.9404 ln
160.859 35.9404 ln
cp
s
263.52 35.9404 mo
263.52 43.3203 ln
270.899 43.3203 ln
270.899 35.9404 ln
263.52 35.9404 ln
0 0 0 0.6 cmyk
ef
263.52 35.9404 mo
263.52 43.3203 ln
270.899 43.3203 ln
270.899 35.9404 ln
263.52 35.9404 ln
cp
0 0 0 1 cmyk
s
350.88 35.9404 mo
350.88 43.3203 ln
358.26 43.3203 ln
358.26 35.9404 ln
350.88 35.9404 ln
0 0 0 0.4 cmyk
ef
350.88 35.9404 mo
350.88 43.3203 ln
358.26 43.3203 ln
358.26 35.9404 ln
350.88 35.9404 ln
cp
0 0 0 1 cmyk
s
482.52 35.9404 mo
482.52 43.3203 ln
489.899 43.3203 ln
489.899 35.9404 ln
482.52 35.9404 ln
0 0 0 0.2 cmyk
ef
482.52 35.9404 mo
482.52 43.3203 ln
489.899 43.3203 ln
489.899 35.9404 ln
482.52 35.9404 ln
cp
0 0 0 1 cmyk
s
74.8799 78.8403 mo
670.2 78.8403 ln
0 0 0 0.2 cmyk
f
2.5 lw
0 lc
1 lj
74.8799 78.8403 mo
670.2 78.8403 ln
0.0235294 0.0196078 0.0196078 0.992157 cmyk
s
save_ctm
restore_ctm
save_ctm
0 0 0 1 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0415702485e08c0
f77bc592e4a945edc8aefc27f1cc883c7c6cd2735a8b0e6e3a6451397aa4
97b27340262755a03b261d3a97c75d2b7376de5705dbe038fae0f2b63921
648e180bc7544e071f3547a31a704e5e674bee16ed9f79b34d65e93305ee
f05f76e02bb0fcbba2e58bb3dcb1c9352574698f9f72> ND 
end end
end
/ArialMT findfont /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/ArialMT*7 
[
98{/.notdef}repeat /b 157{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*7 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
65.04 436.021 mov
(b) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9d32cbb67063a44c2c579f
7dba63b8a612937552c38cfc68b9f17d05d08d58687391f101de93fd2f30
d5e833c8aacf98899b18432278e92a0d2275e63883c0cd03457cf82bca12
c1f9c768ea5fd825ff7fce65> ND 
end end
end
/ArialMT findfont /Encoding get
dup 105 /i put
dup 116 /t put
pop
%ADOEndSubsetFont
/ArialMT*8 
[
105{/.notdef}repeat /i 10{/.notdef}repeat /t 139{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
70.5596 430.561 mov
0.0197906 -0.0197906 (it) ash
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/o 
<10bf31705e921373942a1df751ebc6dc1f8ba1849e5d0b813201a0c14072
56efd5ac73b2cc94d73ea025d660f576b0dc46e6510eb657538743c037a9
ef3f1df5fa8600ba31cfa9fb018633830dedfb133aaa4477d4caef3c149d
68283dde65fde31ff05fe29c87c2dcf980686664a1ba1e9317bc4e3671a3
dde8af03d654a3b9278e18f5d604ca7d7f> ND 
end end
end
/ArialMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/ArialMT*9 
[
111{/.notdef}repeat /o 144{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*9 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
75.4795 425.582 mov
(o) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/n 
<10bf31703f932f5ecb68c849e33d657776fc333efe38edc6b37b1ff48956
90e91a6df105656658715dd87021b65972ac13dc8aee35ad2f1e0b304a70
d3e1196ff9e3f237aaac2ee9c5140172156ad6cf230f4b01e597d6a59503
d7dcf365e09d2dea787d9e411b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/ArialMT*10 
[
110{/.notdef}repeat /n 145{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*10 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
80.999 420.121 mov
(n) sh
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
86.5165 414.604 mov
(i) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/c 
<10bf317040c2e74a5fc1787aadb34082a974ca8bfdce94e11266bf025cb7
0165d6854d700d70cc5444b9f61253adefae30a0411da65b303e54163273
771b8917fdcb996d46a918dadbf0ac7f3fc07110b5e4794547b6eff7de49
7e69fc6e8381938653cd90c476c4aee37f40cb1165ebe6f2b5655eacf33b
1b7c58ec799cd6ac7895a51a3f59a1ac6ba84d> ND 
end end
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/ArialMT*11 
[
99{/.notdef}repeat /c 156{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*11 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
88.6787 412.382 mov
(c) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e31445dccaac51f
be5d2720e030d916d3be5da2de6f181ec6d47f432789c3f20d0f29179709
0d6dda936003a76baaf59048c547fb41b8377c0142c5f3b363c49f8779> ND 
end end
end
/ArialMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/ArialMT*12 
[
102{/.notdef}repeat /f 153{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
130.979 415.621 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
133.739 412.921 mov
(i) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3490b93b478f689beebddc801
f9ab05d95370b6f2d5e4eaf0e05d2c29f4d91b00084ec9f87aa58fda4ad7
8d5d66fcc7e8afb13d634e9fe58c768d42> ND 
end end
end
/ArialMT findfont /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/ArialMT*13 
[
114{/.notdef}repeat /r 141{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
135.955 410.705 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
157.198 434.94 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
159.958 432.24 mov
(f) sh
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
162.714 429.484 mov
(t) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
end end
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/ArialMT*14 
[
45{/.notdef}repeat /hyphen 210{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*14 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
165.471 426.728 mov
(-) sh
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
168.772 423.426 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
171.479 420.661 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
173.697 418.501 mov
(n) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170422fdb64737aa996af2c16ab61f139259ccfce996f56e5f89332
9f7b50633061a72210c8a6b5d13fe3bb9b88ba842302ec1ae1e32bf6cd49
8b054e2c54c7892b319ccb1b99d65997437b14ddcef375af397068617b4b
a8b59dc2e0e5b584c508b01db96b294c218d115c2d03379ed774785408d4
3e0cb3b8511668ef559f40e3101d956d8627deece251b2315f5de4af> ND 
end end
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/ArialMT*15 
[
101{/.notdef}repeat /e 154{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*15 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
179.215 412.983 mov
(e) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
188.878 448.74 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
191.639 446.04 mov
(f) sh
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
194.395 443.284 mov
(t) sh
/ArialMT*14 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
197.151 440.527 mov
(-) sh
/ArialMT*11 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
200.453 437.226 mov
(c) sh
/ArialMT*9 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
205.406 432.273 mov
(o) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/a 
<10bf31705d64e193f9f1f8a567d03549fa73483ae9b672d7b7797200c526
6d55e0abf05d082c89da2ef3d2f91996afd8e100af13d8e4b339158b9d4e
0256bc0329e2558ef3a479ac944060941a5a0ef5dc04c7a41bce2731b9f6
bac3899bfe4b490bb12e4abb60728f8dd08e79a22a9692e2e377b4d6d5c9
90d58983bd1034efca9e5a712e5fac945f9b4432273fa80564af2b96e4b5
70911aa8878cafbb79a548cdf67b5fd07c85ed1a9f7575ac0b1cdc57118f
0bc5ec90d16e3c70642d41ebc8d851a2770f7e9e3366dcaea1eeafe88adc
1075a75e7e694b5e09e5b68c30faa47727bbcc80df324abdee2341fefa79
33b84bfd3fdf5d94b0c28761234c47086bfdc62b798b> ND 
end end
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/ArialMT*16 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*16 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
210.913 426.765 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
216.358 421.32 mov
(r) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/s 
<10bf3170586c182310772ef569c52e8bfad70b259ad08351d1ee7f8301db
56e87b60c2698b50b73e6d27e51b4b4c4de13e01b73b0e93916fb4e9bc20
eb2383ce966a3f407cc2dd34fe3886d20337fe9b35727881532b2484bb21
37910e0951e4ed8d0834c0f1ea6967e8f5ec97508509903e613c902ab20a
2584a430e00608bec28b5ad77a90ca85cabc0e7931cda83a171815946dc1
e37a6e5968afc67def1b22528a96d5ff182bfd780f19cd36c8689597438e
a97ac397a0bce69309b562a1ba4d9173f5cede5262ffcd19389598a980ab
b12fde1b7188b7ce2e37fd5029f6095ff151c09be98b02a5038a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/ArialMT*17 
[
115{/.notdef}repeat /s 140{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*17 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
219.658 418.021 mov
(s) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
224.578 413.04 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d89951110b
adeffb560aa54e338c9127425b06cefdd1d949874d4622c9b30b369b86fa
41b317af240e3deeaa1e9f5a90a07b28e40380e054c3662afb1cf6f51c11
b6836151d28c225e6c4d1016d9fa730c1bf86c199f942682434f25971f32
ae953f8b74fbb716bed8520757e61bce7cf6be4a92865d3717d39c92f18c
1b406caa6c3ed07ea5ff15dde83aea7d31b62642cc5c322a42f14367085d
78b35ebe75a37abae90e77a72aa751401d5e1988c4445fb51991681b7fd3
6a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ArialMT*18 
[
51{/.notdef}repeat /three 204{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*18 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
253.738 429.42 mov
(3) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d72467d80a581885
24220eb6bee82e9b32f5b916df53626433a323d6d12473722cbcba013869
499dd3fb1dec583e9e14facd47321621de2b3f9ddf3cc6eb86fdec76a812
783b728a956498dd1c5c8de5262c828735f36e5b194a005655660bc84af2
55d132859316efaca31d3a694047b6098384c4c30c50971601792b4c1f0a
5b9c2fe963d7a927c7893353b47bcd78644a7e1009b67e7a9660e48eb4d1
99a373566b806d69acdcdb838640454b794e47e8e0135bdf> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79f07ea232bdef9ac901d627f1d7c
bbc695d54d248636f112e1e558138c8614732404711d922beb14f6e9da7a
f0f6424e78635561b81229fa2a64943f0a34dc93b34efd58286722f3cf61
311ea7fc7d9e5939d3363e9ede71cf70e1e3065ffc3ecb6cd91e476e222f
a9d3eab4d1de767ebebf490a414b0dffbb21fe8991e5077af9877088538e
7a8f585effec91> ND 
end end
end
/ArialMT findfont /Encoding get
dup 103 /g put
dup 112 /p put
pop
%ADOEndSubsetFont
/ArialMT*19 
[
103{/.notdef}repeat /g 8{/.notdef}repeat /p 143{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*19 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
259.258 423.96 mov
0.0198364 -0.0198212 (gp) ash
restore_ctm
save_ctm
/ArialMT*19 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
270.238 412.92 mov
(p) sh
restore_ctm
save_ctm
/ArialMT*7 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
267.958 460.739 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
273.478 455.279 mov
(e) sh
/ArialMT*16 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
278.995 449.762 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b1b2055ad20453a840
b3065aec0c8f0074b9f24b641ee16baa708b1406e6d86ab1aaf424b4283d
6f09747a700244de117dc5840f36eb1772072b40636599bce9d665b54bb3
43a89d88f9e201e5cc1b9fa51aab18b6ab707595fea1b90bfcbdaa8111e5
52483796392ca7d4a49e4e50222fb459739277857fc5f301e9aa1a7b4f6e
fc6a1a78fecb35743baedf> ND 
end end
end
/ArialMT findfont /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/ArialMT*20 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*20 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
284.458 444.239 mov
(m) sh
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
292.693 436.005 mov
(f) sh
/ArialMT*9 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
295.439 433.258 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
300.958 427.799 mov
(r) sh
/ArialMT*20 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
304.26 424.497 mov
(m) sh
/ArialMT*15 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
312.504 416.253 mov
(e) sh
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
318.012 410.745 mov
(r) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
331.678 442.559 mov
(m) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
339.958 434.338 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
345.418 428.818 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
348.178 426.117 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa6856179aa35682765
116a1fce2021f370819ea26a9108d7928db21a13158b5ced94492fe7e095
3993158ecb758a77b01eed67c0a218243c618920ead85b637cd5a89e8294
2747d1c7afc089a86d68b6aaa0f7ce5339d56f1a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/ArialMT*21 
[
117{/.notdef}repeat /u 138{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*21 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
356.398 417.838 mov
(u) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/ArialMT*22 
[
108{/.notdef}repeat /l 147{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*22 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
361.918 412.377 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
364.078 410.158 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
379.318 440.397 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
382.078 437.697 mov
(m) sh
restore_ctm
save_ctm
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
390.299 429.417 mov
(r) sh
/ArialMT*16 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
393.601 426.115 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f6786808342502285
ef1934ea8d92d83b04254379f7e54d6e29c5190a7a8ca45269bc25bf3fdc
c0176673c46f00ae3f8e682761317abadcd2563a67b0b9fa9aab272a6147
645b098862d36c4de3043b72728816e055e72b9d05f1053d17b6056c610c
a2f84c956990b8194da3eb3fb55dcc79196e6f19c531a623b8ce24d6522a
> ND 
end end
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/ArialMT*23 
[
100{/.notdef}repeat /d 155{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*23 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
399.118 420.657 mov
(d) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
404.579 415.137 mov
(i) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
406.798 412.977 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
417.658 447.597 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
420.418 444.896 mov
(i) sh
/ArialMT*22 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
422.634 442.681 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
424.798 440.457 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
427.558 437.756 mov
(e) sh
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
433.075 432.238 mov
(r) sh
/ArialMT*7 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
436.387 428.927 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
441.838 423.417 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
447.358 417.956 mov
(n) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19a6ff411b2
2c17bc61c1190513e75ea965b167f12b29a20e26eef42d582cb1> ND 
end end
end
/ArialMT findfont /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/ArialMT*24 
[
107{/.notdef}repeat /k 148{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*24 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
452.818 412.436 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
457.678 453.115 mov
(f) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
460.438 450.415 mov
(i) sh
/ArialMT*22 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
462.654 448.199 mov
(l) sh
restore_ctm
save_ctm
/ArialMT*8 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
464.818 445.976 mov
(t) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
467.578 443.274 mov
(e) sh
/ArialMT*13 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
473.096 437.757 mov
(r) sh
/ArialMT*7 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
476.407 434.445 mov
(b) sh
restore_ctm
save_ctm
/ArialMT*16 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
481.858 428.936 mov
(a) sh
restore_ctm
save_ctm
/ArialMT*10 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
487.378 423.475 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*24 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
492.839 417.955 mov
(k) sh
restore_ctm
save_ctm
/ArialMT*2 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
497.819 413.034 mov
(2) sh
restore_ctm
save_ctm
/ArialMT*9 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
526.919 429.354 mov
(o) sh
restore_ctm
save_ctm
/ArialMT*12 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
532.438 423.894 mov
(f) sh
/ArialMT*23 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
535.195 421.137 mov
(d) sh
restore_ctm
save_ctm
/ArialMT*20 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
540.659 415.614 mov
(m) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT Initial
11 dict begin
/FontName /Arial-BoldMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/a 
<10bf31705d64e193f644676913533d4f242c323584e641872a5c1de0a45b
c11c47ee3d23ae30ec51b7900366fc3318b4ef94c2953a10b5936c67bc95
df7d37c51b5487300f67d7441f8269f5ffc887ceba6bde7cff93c7f647b8
311cc86f0853364498b70618adebf5a2e115a1c20cfb7121a3dfe7a5b7c6
add7b2d5dcfe3b3af6bf0816da6c357f0ae9724881ff8f104b4595e63917
d60898e28a9be18eecaba21d899347bbf3b3e35b2af907ddcc3e7d8ba400
d792f1ad86a4f4b8ea1a66ecd59933affcb926ce97be7483e84631a143e2
e179131e4623f6ff518ffb182bef0db8119fa8d1563d701d2106ef6ee4> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/Arial-BoldMT*1 
[
97{/.notdef}repeat /a 158{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*1 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
558.599 443.214 mov
(a) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
27ce5de111138125f9093766174f312900bc907ba83f063c596c451528f2
8a3f9d1e22e4c33f68809148715a52e927c4da64b149239c9db47f7f7686
ed072ee6b7334e9d8f3063889e2ee63ce6f7e07b343f8999bbc054ae2b06
c6fa9f71ffbc2111aef9e940176dfcabb2a79aea515293> ND 
/g 
<10bf317046e845f3a98cff800425d1e47fcbf03f8b922783d5d36e307274
588ac60409269c037388a43cef04e921c8e3bf34e51e4a003e0b37bf8d31
c8fc8fb6ade393cdde44b4581b0ac925ec1f59a1fbaac3d1fb4e14f63283
84b7e26e832593dcad7ed930aa23e0b99c4561c07b07f1e2fa1eb18d1291
b9cf9003790fe409a130d99f5be39512a2ad37a7efa7c41860134fb79153
f4dd79307743390ebe3ee1401c0a499a781dcdce2157d130f5efa9fe3806
cc6c1819edacc0285ad54ab702e08879c56aefcc591124daf35783236ce0
3c246d126bb7a939> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184ac30254fb69f4898f904e779cc
cdf8991cca76a0c49ebb55db4360f969cdec63227973a8dbca70a1074b85
36761b137a1d527cb4c37dcbcb389ee07d6f305d1223> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf3991486ad73cd5c
e3c2a76ac4e66058f8979f25569ad46341a43f14e1e6f23cee3876> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 101 /e put
dup 103 /g put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
/Arial-BoldMT*2 
[
101{/.notdef}repeat /e /.notdef /g 10{/.notdef}repeat /r 3{/.notdef}repeat /v 
137{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*2 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
564.119 437.753 mov
(ver) sh
/Arial-BoldMT*1 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
578.962 422.91 mov
(a) sh
/Arial-BoldMT*2 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
584.459 417.413 mov
(ge) sh
restore_ctm
save_ctm
/Arial-BoldMT*2 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
598.679 448.673 mov
(ge) sh
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs

systemdict begin
/Arial-BoldMT 
findfont dup
/Private get begin
/CharStrings get begin
/m 
<10bf31703bc84f280bc926798acdec2516276f3d24aa85ca9a257a88e668
ad6a657479da889671cd25759330144397f939b3b43dbbb312036f39eb3b
73a321a0cd09c9f24d1815b01926ce18ac4a050fa89875f0ba26a9c289a2
96ce6616eb926ccbacea4e64f1080064c63a54d52aea5a1a640c06660ba7
9c303d2b7feb1ae62b835f35563410ff3552f3587e4d3552c5806bbf660e
e7049cf393e3b6172e6515fca5010cb65be9e382131e8cf3a71499b433> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073caa5a4880edc0519edde9
3b7e79d27ff1cc1a7f5a6acdc915e4245b62ae0fac07b1618eb64ef312c8
189ae1a0f41d9ffc939b577e79e262d221101176596e459e6e66acb6f95b
e4bfb69a69ecf51cfd34996ad9e4e4f1108e778b29c01f6f36d44356> ND 
/o 
<10bf317041f0d680f4930f6b0672f7541f6e2d601952218f891df4de7fb1
a12b8f6ef4b7411d7caf36d6c12165e362f948ed9301abab7dc334fe3032
f31dc6a43b76044be207fb11eb434d390e28b3a5cdd669883e371a67c337
c22a5647301810f5b9e291ddd0d763101639f297cd088e8dc2784d613e20
e44703e0623793a823e7cbab3e0f36e62433551b3dcbde6c93e4> ND 
end end
end
/Arial-BoldMT findfont /Encoding get
dup 109 /m put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/Arial-BoldMT*3 
[
109{/.notdef}repeat /m /n /o 144{/.notdef}repeat
] /Arial-BoldMT nfnt
/Arial-BoldMT*3 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
610.215 437.137 mov
(om) sh
/Arial-BoldMT*2 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
625.043 422.309 mov
(e) sh
/Arial-BoldMT*1 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
630.541 416.811 mov
(a) sh
/Arial-BoldMT*3 findfont [9.88521 -9.88522 -9.88521 -9.88521 0 0 ]mfnt sfnt
BuildWidthShowArray
636.038 411.313 mov
(n) sh
restore_ctm
save_ctm
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 251.222 mov
(e) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/space 
<10bf317079c7734bf7> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ec17368e1d77feeb4b1225ccfc3ea776d
c0dedd710bc8a7bca013c00e431d5cd9> ND 
end end
end
/ArialMT findfont /Encoding get
dup 32 /space put
dup 120 /x put
pop
%ADOEndSubsetFont
/ArialMT*25 
[
32{/.notdef}repeat /space 87{/.notdef}repeat /x 135{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 243.433 mov
(x) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 236.429 mov
(e) sh
/ArialMT*11 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 228.64 mov
(c) sh
/ArialMT*21 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 221.636 mov
(u) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 213.847 mov
0 -0.0139771 (ti) ash
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 206.829 mov
(o) sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 199.04 mov
(n) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 191.251 mov
( ) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 187.353 mov
0 -0.0139771 (ti) ash
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 180.335 mov
(m) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
15.4795 168.675 mov
(e) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31703a9458c05db7ba7a58bcd7a2c9e91ffe666c97ce46717156d1cb
9be91454dd31d143e460cb34ec06d1f2228e435638d9aa27a9bed7243c7e
cc188b1c2069f6d3ef0b0a370df45685e4ba> ND 
/parenright 
<10bf31703a9458c05d79d3ca9c0e25cc2a0a66a567f83e7a9d7321273dd6
91f0a03409afbde1e095be0f2f1ac4ecb4a098aeb71eedbaac852ce8b071
c8aa4ee4536be21e2fdb4e1b96f0c52789> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/S 
<10bf31704ab370a8a6c235279ed6c3fdd90391cf7962d0bccf3c0194207c
c985977a6da764734efebc21d6d1ae7133055444822d0fe1b965fdff1b05
ca2046c91bc219dee9d6de4fdbddec5d689eb735c6e0fa560831344d790e
3093e69a2340f4515581fc3f61c364582542aaf4a1803981e90247b3d87c
b4e83921ea1ea0fe7cb2d933b6761926389626e21ef635602b61796dffe5
8975cc1e5a348ada717869e184044d1b2d3ccec5d895b1b22a708b5514a1
fa0b8783acb9f99b94ec8c3dec98d4fe3f7d2f5da5a832e0f19d404c70f8
e5044360ab5b726faeaaff503556ef3182da97e4b93377852f62756de8dc
3b6de3f8b74afcc5f5fe> ND 
/z 
<10bf31706d7bdb7f5f74128c9bb1cf0445a721a78dcf191ad056927637c8
a135f0f22faf7df308eeea1c66e39a72a677a3dd701da853bf390cfc0a58
a3d2> ND 
end end
end
/ArialMT findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 73 /I put
dup 83 /S put
dup 122 /z put
pop
%ADOEndSubsetFont
/ArialMT*26 
[
40{/.notdef}repeat /parenleft /parenright 31{/.notdef}repeat /I 9{/.notdef}repeat /S 38{/.notdef}repeat 
/z 133{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 320.941 mov
(\() sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 316.272 mov
(n) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 308.483 mov
(o) sh
/ArialMT*13 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 300.694 mov
(r) sh
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 296.025 mov
(m) sh
/ArialMT*16 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 284.365 mov
(a) sh
/ArialMT*22 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 276.576 mov
(l) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 273.456 mov
(i) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 270.336 mov
(z) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 263.332 mov
(e) sh
/ArialMT*23 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 255.543 mov
(d) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 247.754 mov
( ) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 243.856 mov
(t) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 239.958 mov
(o) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 232.169 mov
( ) sh
/ArialMT*21 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 228.271 mov
(u) sh
/ArialMT*10 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 220.482 mov
(n) sh
/ArialMT*9 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 212.693 mov
(o) sh
/ArialMT*19 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 204.904 mov
(p) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 197.115 mov
0 -0.0139771 (ti) ash
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 190.097 mov
(m) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 178.438 mov
(i) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 175.318 mov
(z) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 168.314 mov
(e) sh
/ArialMT*23 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 160.525 mov
(d) sh
/ArialMT*25 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 152.736 mov
( ) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 148.838 mov
(S) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 139.499 mov
(t) sh
/ArialMT*13 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 135.601 mov
(r) sh
/ArialMT*15 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 130.932 mov
(e) sh
/ArialMT*16 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 123.143 mov
(a) sh
/ArialMT*20 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 115.354 mov
(m) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 103.695 mov
(I) sh
/ArialMT*8 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 99.7965 mov
(t) sh
/ArialMT*26 findfont [0 -13.98 -13.98 0 0 0 ]mfnt sfnt
BuildWidthShowArray
32.46 95.8984 mov
(\)) sh
restore_ctm
save_ctm
/ArialMT*26 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
174.979 44.7212 mov
(S) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
184.304 44.7212 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
191.294 44.7212 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
199.069 44.7212 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
202.175 44.7212 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
205.281 44.7212 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
213.056 44.7212 mov
(g) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac576702c4654165111c4e219216
925a1bbda37b8221ddb4f3d7ef9dc32fffa987a0f0ea03488171acb09982
96179b683649315a4b1534> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153f04f4f888
a9793af1cdd76cf42c98e3b7c6efff30aedf23874b961a5a7d8352571859
f2ee15399c0c2d0f0e789c04eb8ab69e8694b49d1cdc36041f81732689ae
c7de70103ef45c5aac1fa0ded9e2cebee882d4e31e26d9203d2435459b9d
1e92bd9bcf321ca456fc2c8b25bf9b414bd39bc63d4e221a0d6aa6fccdc3
c8a808e6ed39733b2c7e47> ND 
/F 
<10bf31702f7c4b31b7f92f61f70a9032d1addef58c81f5b8fed9651d8c00
81acb06eda84b504e7> ND 
end end
end
/ArialMT findfont /Encoding get
dup 65 /A put
dup 67 /C put
dup 70 /F put
pop
%ADOEndSubsetFont
/ArialMT*27 
[
65{/.notdef}repeat /A /.notdef /C 2{/.notdef}repeat /F 185{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
277.34 44.7212 mov
(CAF) sh
restore_ctm
save_ctm
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
362.64 44.7212 mov
(CAF) sh
%ADOBeginSubsetFont: ArialMT AddGlyphs

systemdict begin
/ArialMT 
findfont dup
/Private get begin
/CharStrings get begin
/plus 
<10bf317031d9337ef184b43be498749534943b6b82dfb721a4f1e6478fee
6c1f4763fef70c3e4be97d7fac720dea7a> ND 
end end
end
/ArialMT findfont /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/ArialMT*28 
[
43{/.notdef}repeat /plus 212{/.notdef}repeat
] /ArialMT nfnt
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
390.6 44.7212 mov
(+) sh
/ArialMT*17 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
398.764 44.7212 mov
(s) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
405.754 44.7212 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
412.744 44.7212 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
420.519 44.7212 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
423.625 44.7212 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
426.731 44.7212 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
434.506 44.7212 mov
(g) sh
restore_ctm
/ArialMT*27 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
495.78 44.7212 mov
(CAF) sh
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
523.74 44.7212 mov
(+) sh
/ArialMT*17 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
531.904 44.7212 mov
(s) sh
/ArialMT*11 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
538.894 44.7212 mov
(c) sh
/ArialMT*16 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
545.884 44.7212 mov
(a) sh
/ArialMT*22 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
553.659 44.7212 mov
(l) sh
/ArialMT*8 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
556.765 44.7212 mov
(i) sh
/ArialMT*10 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
559.871 44.7212 mov
(n) sh
/ArialMT*19 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
567.646 44.7212 mov
(g) sh
/ArialMT*28 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
575.421 44.7212 mov
(+) sh
/ArialMT*7 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
583.585 44.7212 mov
(b) sh
/ArialMT*21 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
591.36 44.7212 mov
(u) sh
/ArialMT*12 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
599.135 44.7212 mov
(ff) sh
/ArialMT*15 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
606.904 44.7212 mov
(e) sh
/ArialMT*13 findfont [13.98 0 0 -13.98 0 0 ]mfnt sfnt
BuildWidthShowArray
614.679 44.7212 mov
(r) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (i2-2.eps)
%%CreationDate: 4/18/2005 9:38 PM
%AI9_DataStream
%Gb"/L>B;%0Q0.ZfUAmTo-pjA*JsEgVBV)eXnS/J84]6XH?B(]^%ALJ>"pl1n-+,,uhtMNU3LM:gJ/5,X,fI]Wh5Y!01[AT6\Y#'g
%++F!$I<Th=]R'0crSo9UR<-)_Ff\L,naFR)++F""QJX62p05(!lhVAk-beu#ZuqSjlYQYc5?lJ&/f.TucSt1cio]CPokM1Nq5!lZ
%h<_0<CA(,GR8n`CXB+X/Wb8Bcr3+"%?`^GKV<uaVEjki0"b-8[rT!7tH?Go=\a?kMf@R(bio9.nOh%U_2?M__e[9pQZad-/?E@Kc
%?EP($038)6dk=Y]-GHL&\D9'Pn#k8\2RD_Yn#Tf#\O5aDo.Mb.b0mGTG2_q8?`mFR2n,:0m<W7E*bdUKGq4g8jaGsYT5WT3YZW_N
%8"_PjN;)n$j_F>)H?2*YXjTTfK*(ef)Z`^B#%ak8nnPnM]3%1^SQT2/p`'4\^>pBn/oGUh*O9RQnu#jnq=hdTrhQRi5?E:*h)C6N
%92995^A?$nBJ$9Xn,7EL4jtK`4;eLnYsb39?I/%?[gGs>D'd0UO"6dmf@Qt3@BYEhdXV)3r*NMTo)HuTrkE;./tqX4:dofYoB2b)
%*F9[AFVU,<m&bmZ]`A*0Ld5De?S!h5=0pWb.E@3iP,])IM9soEO5*hqL^j/,TuFJ7p=#=p(>gb]5C??ls&>?S`KsqZ@JfqDF8P@q
%n$8!/ool7fg,)CKIf&8F[FkEIC'b6p0mi<febWa[dTs47^0&XaYJXr1J$$\Jg#gQ=(50$*_[_&lF`m]N%sOAhft55c-4ebDr;(_Z
%oj[mgK_[1-Y3LBKYcp,:b/gu/.^/^Sk/1Zb^-!sd^^,5P(-D+mYjgu'o$-aj'*XE^oR(hqfR1#mhb'`H*`oWEpm$B4c-(LgQbV9+
%0=KLaN3C_1E6aYbn?:1<Chg7P\$q8G,D"1E/j<QJ@ZNc&+$L@>^Cl]3Xl%d7gHYJ&]^tRFG*`s$/2%c*IIk(q7L$C=N[Q#M\!suu
%-+%N=5Pa6m(gQ`WpAO!Yn@\%$I9ZYO)&I+.^]i%Waee933PV[Km]NTlBIQ0?nK2A0MlM_^Z$:-Y0A]tfKFG:(?d3IIb9*eRA-qP4
%mb:doEVRR]#0idsb[hjJiAde7Cn]Bl+UlEjG.q*choZ5ZWb4X*GZf0T.$eB\r[5J@o;h[*I'3%>WFhXEllDunnkH+[YNgKZ.jJo3
%lT:[15H<>P:9N4#2SuIT?S/Gs\*Ie:Sm>I[AT`I4rdM%k?Cf9Rm+4G5>HTSBI661kq>\K$-N<T5g#f/8r&B11S\KQ[]NqXH]t7Q`
%Kn+='DVXFPF^k6W9>7:Sk0d]-DW-ndP&=C5q=i;>9=%f,]t&PqIJ!Dt#Cf?1r"6b""aO2"m,B5`]GK4M?+_+Cc!miJYHQi'06S7g
%nh014]XhBb^7VM9IP/Jtf))M%!&;6fKFr(Aqu2J&"6*OXmQ#7g7D/J8Je0a+*Sr4J24r.N/hVgHc55"qUr@i*C8"gcs'^0rC[mI#
%q0K<W=cD5:/Q^m"gD<(,k"e298+gVBAQU-MDFAZ_IgV,P[Q=HeBB(IK+/nL%-i^qbr,=g:*ecXTB3ocSo#V+XAK_:+"9:k#:Z%s_
%%e:EM,J@A-_Q=XJ.O5s3i(mW[-.1R3<50^>j&;42^QY:;kc2Y3*2J]<GZbt)rZj9e;76^>2);<B:/jK(8+!>/8$m#0'h*<*V'7n\
%i>_J[C\b+".s\[HZ!qJb]BZI2'(-pB"Zj;LPFE(0.W:i\ei*u-s$(>I?S>K]d;&@OX6#P3=(/)>(9\3M,ln-E!t@[!lXc=]46CFe
%nKI-"]3Zj9o#d8nEFh"BOZT[]K"SdZ"tkckh6R\/5:)_)M\Yt+-ON6Y)K1mTHfqn7GhU`BaPE))@!D.F2$!]&9e[#^1oICQF.M3<
%[@W@s/'=>mZqDtTfAf;6[ho9k<n^qXCpXK14=FBcSWXHDGDg_5C(%i[pAD6OL%KuG2.n)O+NoV(rLeh9=50#OGh_EYDf\'`QqK"j
%SYat0gCf:n<qh)>W(6<=?#KdOK]NQZQno>>^@Q^RPs`Gu!&deR;uiUgWK0VNfbR&I4F:KQapT>-IGIj/Lu7JR1`QqC(kb=CJr"<0
%KH=&7L4VNQ(K(/h+QarJ+,P>A.(Euf$K0(&6RO-hcjAL0TR)]N>CdK=isCqdg-O,/;47ca6lE41DC+=%65U_&PPeV%l;[N]1k@ql
%pW/-+/L<%Z)k!`\2I!V8=hriVDurBO=?pKPEY@:rNR43a*1qc:#8TZ>+@$AVY[$'4i$EYgP_m@ST0[gtkWpLiBc4US\#&:V1Ti^?
%m\%FWk)Je"kK,WPGKS3HNo@3[;4mP#'_,c_X?8B2.\"k641baUSJtFim1Q?(lQ7%A*7:7l6h(@XTY2m],Jo)'%>tlKGnTnH!u(=<
%"gUD!QQV(iI$FSlc;?PS<^/TK"R,n1`En23!Voo1aAQ![m03`Hl+U*g,LR4C'_)1OC6XHqjWU!8Q^ZCgAVkQ,XohY/]:LegJlZ!0
%#]:kH(P>9(7"L6KL(:.*e\G4JZV`#>P1HlAI3jb\5(c]Y,]ZU6e:aEF]4j@G2jpkepl,k_;i&M/d0Ze]%UrIpW8j%-@*;bcQm>WG
%AZ<?L?s-r):YUsV4iL0kpi=5=)Xkk0`bn$ZED%0`5T)>*r1mh42&^EQO6s8dd%=.Q:P)#4:_rsYHBlLlF2>)n?tU$g?4#Hp8V9l"
%;,CNdaiZ;=bYPZ@p-RmhOFr:>Z9ti"%j!A*^T)EjN=hp.S%^B,rr<H7LR<.!PW9+[#h7"\_,<(-Q;pF0ej(s-BhF6fFk-5l,=0r<
%X$e=j$e,IqF9J;9-r:-(le$aF#ql%Fb6?`8HG^:[(^I42aM/t0P:fcJr@<%##K!q@WS#99IO7^3m*S5g'g^j]ZCi5*EY.SU?*0;'
%^+J(OjF+td2JfWQ))ae]kcQc`If_,*7a(f\H85oYS:\mV)&P4!"?RN1%8O]SI'3V[A5HK_.V6>RI*P``UDTZD-:\R!"GO5#gLR!#
%\qIE])3oSH'L2_t02ICfUt@(oNhisG"SGkqhdfd4.^38DJ]"KV$g5;J:i0`TJQd=l)?K*\Br$AjBPQh)!P@[//6#Rh'i[f-5#h\Q
%OZZQCS3im$S_P^ZaGP1@Wka_M/GMcE5Un2OZBD1bAY8Mr3tm0jcm]%LYf]eoP>B@c\,`sEiC/XdpK')Gk8pHfHIa^Vi*%o("AZQ\
%qF$0/?$ojmKB\hA/qUh0G;p#<IgBpoXE3iYh$YP;3aZV`0O*k+LTF/=^2n-\F+jprJd%[I"^6F8A)$9#U%h;0;H7p?IiFZ>TR@Aq
%:\c/p&='L,9*6mQ=sORsCKa%4Hf*#DP5FlkWu6)\)2]\!"85"%:uWh>N$)A-EIl#i;$&7_j\'RhK,KA,o-KJ:9Ua<bj:tO=;8rnY
%,B!W8eb[3HJ[K>^.2!RC"YbGT$X+i4W%a?__4K.ImA=JG(LTRP1i\LmSH,1kQI%K!ZG@7r7+S>/0_%3c&Udl.6jUp[^j[]:^fc7]
%/5Kj[g&d<8iYZG4$\g88'GXBuJ:g5^&SU_fchA,H:q*?3l+f(YSKbKTbXA)a!Bl>@-BKb.m)>6+W?4T4!4!\/<BWSZiYaec"'14\
%l"X-c6p6'bW2W;\7Br(o63Unp,#>*DJ=q](+%Q4Y&I6-uZc3<(+Y$RO;cf=)%Q8ulR-4;G^+aSCaDQdKjT>-PD33T&LXTCq=Wd^^
%gB!/1E/N!a(dhMl:F^_-9RE3Vg&\dNN0%Ee:_QH3NPt-NmikTcp[A7*DKsXj)U`MV)$q>oAo7)SRtUM]r9T6o-9bD[3Z;8=+?lQg
%:f-[C;FCU+-9s\nW01nqGd/.>8^?[uVGe5U(DT`a73b1/5[fF<MM)rqJIYLI_]C>%gn1<8[N$J#1ab7p1BO[eK$]0<6a$smAe2`T
%NY338%`3idN[Bn#X[I>)J=)6eAFqX^lR;d!FYkH2U'S!e+rs`aH3@lUH#"T<kX[-=+gC$50pnK;.cG2W!XPnEn2nMY6uAsOB<"r=
%-5&D/:t)XomEHEZbdD15R_K,m-WgO6&^MZLHg2V$dX1[C`X'Ed!msktVcmd_6;'WY\CA:si;YOT!cNh]AF$8VS?sIg3=FJs"P?+=
%8!E.I")YPAZ]5fh'+<[5&.OJ".^p@1+%]bP;eBE6hijSjaD-B,9YDVj]IdGiM)lH:=FQLE9p`.+f4;G[]/gbS9QKH<]<^)`2><8O
%SsDi*4:AB;ao3"!"-cm@91&Y$@TfD#M[Pg^C:])6!-6JA]t`Kd,BG"'-Mu2@FWF9oAfF`m("JE,W0!@_Qiu<KM`LjDVE:bS;q1RU
%N#hc;5Y,i,in:>Q,H81nW@%dg1b=p2bEaL5WD!YR*OaZ)*d#UqaFO+B6kJ]Z<>m)-W"^Iq%\<iK:QuY^r&,g(=ir'fGtJDe'`=b2
%f0J?FcoaJ!r<.,n/"`(V=:MN8QZ<Z%Ci38B)&1V_E)^CPos?^TUnJbr&h"T1X(kP-`j72sb_EDO.+OFM67?^$X-,JECX"m4JPd![
%Ro?VE#8OaE?)]Ks>AVi]9@?Sld.&]4ZYV/!O1*ZVKY<h5`WGs()Z\-fS&p>!`f:;Nf1<;kS]gXOPLL>&p_jjA3]7unR8RkNBan!Z
%:c*3FpT9ZPQ\Y>fj2_>kkQ8HIJrSVGK9H%#_h6g07PmV\79@6F;#VpI(Eb3d.Bq_7F^O#2h;6YJm5=8Sb(cIdCVgsh6Y$eXM<Kqe
%:5uMni1Xpc@$p2s,,Cc.d?&Zs6";`RB@0R36Z3/N$>L3k'c%p^iH0e2Q7@HbDNVMaVssokeWMC2et<_0Z((an:K-.I6th9,^dM=8
%oF$SBmMqVji.4]f9Rm/3_*UO81m#)hesunK;AKISX$hhtY<o30m+9^=JlfeA"#glQ0mpBg)D(pt0r6-g$^-8,e!^k8$aWiG0c5L^
%!<<L?!uQWoW)im`4L`ukW]iuH/C\4'NLC%q<>tWS<4(ZtF*J%^$9A8[(3-DAR2"%BNA+6BENT)Ck3Dns!oaCH!gHWe%$OEi.);Fc
%H(\(@@RO'#/pLg.Y`\-OGDZ#=eP*L$4It`nldPP''8fm:7.-3jZ3uPI[73V0B,V&#n$<'fgOV-aLi$&G/"ktb++u=MQ0pk!R1LH:
%iF,>84ZuT<9^aD.YVaV0hpU$U3Sp/cL<Y\Fma'+GOg4sT-]:O039PgsZ?YkeOA;7CM]eLEE(!4C,(6[FYM_'mVIr/Bp$-=8l:&\K
%c;bc]:T(7kVKs*0G/JXC1k8?FO9]$r8h^9Z".^8e-p<H=:[4IP<e1C*\n86d25j%"3K9'InOg_gGXVBcN\32^Q.`b02Wg2kF=jIu
%#V@('2N!%1$nlF1eW+NIjNl@BO!7[FGSsT!:mK6n5c@o0><^:^=KB'&:[$/M#+N0$7iU0*^n-'99i#bdlNl1Z]EY1g68gOO)!n2X
%qt-_`=oh#Z0WLt>KO[\Y,99N7TT4Y[qApfhc#4&keSl:7\#8PY-D)f9*3,!%J\pXjHIL)Ok`HiS$bN0"fX0>OVAg%aY7qH/)'='V
%&JbNm?YU0r1\h0df8q[Y,hPX)<`n%hV)7Va1YH`q^ndPS&EO(Oi2</=*a$$rlcKjW/e:6RFEf:TZ'[SX"^i;92c)9/=,e8="ahV8
%3g^Nc`=EG9%s>N2/+P/sJ2Ha'5\U:\K7hlEj*B)IQcmW5\3dX-WXAO%$tu-[\&D=UX^n4YBK/k##1u$0/pKN@,tP55TL?7FIe%Th
%dRi<kbU"B"Bmt].2f5E'L'i9\koqE>TI3!qC+oeLRR>:4iC)Cp7cd83f_'pb5X;q=pI!>>RUN1?YtLeD%l$%G[q[59A4:Gd!SX,u
%KVrP&-iuL6%3VC?M+pMb(`*6n#jUg'3u?-?KkhFg##[^Vc-t.9pRU$&rI4+\=4eq2MM"W#0bXm/Qk,gk=sVJ"K#[ZNM7+ir5T5Rq
%3Of?*=."U?c`$39qQ;lG+Ur:C'QH0%&XA7S*."qOqo#BaLuTC&n?Bdn&^Y*B5p%]SKStmnSLqS)@c1$>%==I_Et(55Mni$F2Z^D5
%&SM;=>*G5&0cH]A\3F()cuZ?*DhA!BoI<2=/\XO6bkMD2!*''[IF.t\7KZ-j*$``sUV%8@:FeDVj/UmX>Tk#Q/cVY2>Du=*&GoT5
%Z*l1bTdgLf/%WR]'M1KK!BbKCnK$A/!F>h0d)n52mH+K^@N7/ePD'GAPUR$A4X`X_dtuF-Qje*HH>88@:q)N<W1,gc<]ftc[:).+
%[416$78L2hHECGJ<ED&$5Po8q_#pYZ=CTS35md*GdWVO@T%aH$[\mn(!XGFFWbi7;$ImBbBL:AS^\-2':a]abOd2[[I2YU5_!#%,
%elGb1K'e2Vcu_]LW)[9Al9nh!Sr*dkISC=ZE!f>S#,3Z3m>S\d*(<YCiGoXZ!`-s(g>[2a9Q,H!Moj-`3V,32.BsFjbo(.CBD;dL
%*EmE`2.=A!oDf"d,E<tTfP+Ab;E#"i#fMG@qimiuP1%aemclBh+E9D0e!K%U$s<S(\?[;g\!Vr[B3W:gIKCjANPq8()!SBjWI$&r
%BXT=g]E%dfP$C8\`f_5tkFmn_5.j>DPnP@=#LUjC%%VqsS\&9-f52PhhBLAKq<pR_V.Q*RJL'.jT8bkT://)q-/5h4'^1gB_,IN,
%HnPa<a?M:7W@^HoMoh?&4-jiS*Ck#4MLl$EX][OH2)Wu2K:bo(AU%ZMCP]t14mfWf^mVH[V<uNE61nDeK4+N0@L>m%nG8\b=6F%&
%7TKVVX`*EqT3J$eC8cp8?(Qqc*17<%6&.h1B)!o=1+d:a>a-i#,;>;p/V-sCG.eYW2Dga<&l;op&RXm]95qiBE7T)D=SAJ^:_O+Z
%,W1Fi19j-](8)V4b)@G%_NB&'SAnr_XX:S%>lkW[=q"=Nr?)V+#W#qX:)mI$FOlj9,lk2Y3RPeZ1ou1=Ah'VJ)-dk5.)GH,qJ9Wq
%4JB\%MQda;?d*p1]M^3rG+mQ#+@M_+O_u[;(e30l+rWWS61$1]B*:M79'8A9M`DK/(/,pS\bC6d$]'7"#<?a=7NKDVD7MI4>(suB
%bf)&!T=(-UE7QQ:3HMX3eBNUq^LrR1K[U"bkcGI]2)^*Q+SQ&C3b.`F/AkU,BVD%E$_PSrUIJ&,#d.PDQ)_.QH^k2t.SI':-!@I^
%EEa5Nk%^)j8N@"h%s;a*e=ch'2.lCND2G>lkGpK##3NTT/O?TNqEstH3-1qSh.S*-#=Y)lKk@75RXL/(OP6;.8[=)^SP$2rb#<Td
%<uO/!O_,?nP%\Cg`j!rp!_k/`iNf>`._Q;+Rpi;gI1R]c&rChhj#-4ik,/Oskfi>TWU3F,\Uf,Yb=#6YT[7<%$?q4N4s-3gc\)2F
%6eR!4cEfZOg80QNoJWI$AXHKkSsF8WPno!2H`BqO)jD5hNt6FIS2U]pJh<BUJTZQu7_D4?+&D%#qP`#)9>k0\IVHT2&hbLg?-NZQ
%G4sDd;,ejJ*>F*;P-W0M:f8YYLesp"gm:]N@o>j,)Q3\b+<l@d34=rRQ9$Lfpkeu(&U\Q@_CA":UT,`d+GSq[T7Umt;o(tdTXEUK
%&2_!57C`9L2O,[h<#7(%k&@NP'oa?&O-td$Ucb/fJDl$MhEq&JH?C,1Fm6b7P*D>r]SMEn#n\aF`e6[Znc>UF]tH&\?4^+U2o:+K
%,8'K!8*4;)J7_o`1PS!tn&>\"41*ZWW^/6U1Wtm2b6/7H:jG2`_IO&t=$JsQ@)s&feo@<&@IQA`qHAKj2JVp$6<ZbRK7SbCR5Gqh
%cnaWn:^@tC@'S)n>'_l2iMc,OK/c>AlS@9no.KMG4BfEF"u,/$)Jt[H9MF!=FlQ`9Fnd@_n>M;pd(&1Z0S9%4SF_ZD%YVWSC-_a#
%J\EuOK,Nm38np,J9bt_LVqrmAS&#7U)=tb6Fc\/f>*0jU2(XjC*5ksoCnNUsTU<=>%FcD(.jfPZI0u%G`_4B]>+3HMNc*1r6onUO
%CQ=3Y#0K],`RZ9RfSj=qLJf3TIJ.\sQ$UA*Pr%/&E6'^XUo-2ge!oM2U6n^FBHFFcon]FbO'!h(X&_JOK`,(ZBTBVon$-5PR`OuS
%[1Dqd[H"#($qjcC'7sFEkfJUJr<>JJU2#Rs%_cl*>4'"@M`/8B%?M:*hl%#^mtQB>:]q1TDt3Fj^1;JfkTn!N[8a,sJ[!(_``=<3
%VU]jiN0/I]$jLM#BkC5X+0VcOn6Y">(CYUGo=g^\\oA.Roi*h8l#8;p`a"`#6"8niXTg;bms,@HcYHq*U,SDko=iqA.>T0h)'M'Z
%8$\5G]#Q#n`Kh`bMDt:*B1p;+L9Q_O_<lLiP#_iVn3.sl_45qt(f9qDUBnrfZ'e*&L]N<,;`#SPB*Z^Jlt@YMd7BWZ"ZDK#'&=@C
%><(giYCV;0F"Co4(F7;S"I5WDF]jkO]-kWjRE1)LQ,[s.^hfn\:l@`)*,6Er>#B\mfK$0SnhUaD.D$(E.34tmVIZ@pBL9*I*rr6J
%2/qp_P+?:9"Q`=+[<c/HMOUQi=O&H#DDX:,,D4!bOm:RR2&E\(T9`Q7+rr'@PIT+)ZJ89!7FB2-;l'^h;bI]'-s/E%hpl[fYS/'Q
%eSj*+Ln_`gB"B)s$lbfqAHG>*BZqUda@te&l82@#eoiH5/MY:.L;^DkVA^T.(!0K<o`RRhl@;RjCG]B"h?CJ5@gV)p9nJeZJHot<
%(@e%lkQoP0+<Ee3TP3e8qCsO0WX`;[NkkO'BEJp:R++Rb6"/gn-KjYOEA/(S-Bh!Z$O;C8*KLf2iriZmkd?k5Dn6&BrihSc>UY9l
%>R"acCf)7GUH\b=e;TP6WsC=LUo14HF3-2R&CrX5OLN?i+=ZH.l<7+%>]1Oqdkji/L:;7C*&8fUM,j$i^eY$&8F6oR!LsN\j$Y##
%@p2W+!'984JlD?F=N%Anb]LcORHLdOcSIe&V7F5rZZHa[;VHBrk8K$[E8[p:Z_+L>Mp1TV:3>pfT7dp_7V\ieM2pkSE$Vcc:ZE=0
%./lE/l.]\;pP!%\<HhuOR<)QS5<"3mG+=7P$']9Q"Q82U"JA4>=<XjsS\7(<1)?DE_<S@moQ4^.:K[2[\nD4Q7;PA`#c8.^Bb6-?
%>3Y%kb;)83&WV8+0cu11I@2j5mVNQ]p0=CBV&gA+..)CLV^GD.jIEiDRUIFOU`KgFmfNVK79*9g!W+64dkt8tkrH#7feYb^&l!T6
%1ltHnWql:Up:tpBM25RHi+e,3Ouf2M!VWSPQ),/(E&P)dM(T1gJ`UYM^S<#Z!Rh_d!),Bb[q_ATC)R0N9_-M"s-da<4j<ZINjA$a
%7H?);We1:/(Q;;a3TLu!C8$bI43Y.]7'Q$Mfcmq=6:Au1E?=)6Nc'\PZ-@G,:J6;',O^nS2Wi?CN`BEDR6@An]npLu5Z.K%N1kC6
%:e#e4$C6rle\U0"BUBfO@=Ck;VZ.l=/[StQlp3(8i[8k@.s>))%.s9N[\F%E4L1ONh0FA5#>B+\Kq3Q?Gd59cm\9KZV7DHcPBt5E
%rn/kRjcU?ei+U8k4E+HB^&!Bh9s'K#ju^oUDYr=?F5^SEQ.pN5GG'!u>WJQG,''WABtn!XB[Ss9lgNTS<G\6'4fc<7!K<H_.AF`$
%'X,EQ)eLCUF19Kdlg,Mjpn6a+W*?:S3-Y6^Y6GYGor\9ZlI8dLC7PM)^-aY%cBW)>0la$-FmCM8cJ;anjqoWZF9dbOobH6D?9\,S
%n@^)1^:E,M@I^1.mM&,%L4e<dp<kpEMZlF80m$ToPtsXVBpq+@\Wb^Oa5.O]2U:-i!i"dqlRDO)2lqEUBI-m\>sgR7)*i!p21!#9
%K3aLK%:p-cCLbWNj1?4?X,^%SKFo0dDDJPQWK0`b[Y4#G:+_bqQ?gUGAW07"W,SsSYW!>n(J\eQZI?l#&KCeT6ap"pC^NXc<b#_[
%!8Htn@pVl4Ni&IKPIn5XJF%j%9gPc`84CIQ3C4Ml^'tA'Ck4-.`?:J<[Q<n9Vupk,qk_`EHf*nWLp2$if9?^e2`S=/;!-CeGA>=E
%JoWA&Rh*1A>9M137r5YT?SZ)MJW+pV+e,dpc*P'Im"Ki@K>"d5KuZ'CQ?Vl!2N<?JHZ@e(/\QfnFt)Kr[9\!$?JMs*(n8hZNmK<,
%pBQ%B*]8X-2IGh<2.Z0lIb_7_Ekf%(]T%ppKE;X,`4iX5Vi&.5;?lt&4V``uJbQMTPM:]2N(E7hgOoI/D/DRM;(E'_TH7k%W#-?2
%DW"Z7_;r%4Emkj/:jX5W_g]&uPM<6J$'?JQm,YDTD./O#=BR$:/PoU\p>S-%-;elMI&#:o=-9,HHm#9IQ/6P*]tUq5oPcf1<1`4;
%I(c*,n9L'Fn]G.1kIZ6#j)Vg1P$d[44Ac^jrsa8Rs+\2df5J`O5Q?JNn^.qn\t\'S`BY^ZaWm)`1j^I&]&@B4H9.'FVSjfCbB['=
%-[bQh.R*5R'GEUZ+@]Nd6<S`2qpb5QO3;Ng\9?i/pN56coUX<Rq3PaV!6ojY>O<h=Ujn7.r)!tdf]`FJ%2aQ2@0\l^,Z)j+FuDnO
%1L"&OQjGnA+<rd)4Q\Kb&6!KBjrEe_FS[<,o!CesG_5--f#n?cN2BbW]_=_jniU0Fn!\cB!7(DoY26-8pW7kMXNCAFYu\,i&3huA
%/MFZbqe,QVNOikgL,%Wn@OAfX@>C8uc8+o/Q20o)Ra[O7`K<@)$uP,=f%C4k:XsP*O_0!\eQ'V\?.U=p*R</-/L&jShHBUVR$1t%
%R4LoEnJQRH&IZgSIbmqPK_;Jon*TK"*KNi:$_Z)g]A;2VbYi?qIK_kEi_o<4o,fWs89EF-m0+$%kFikkbej8"R?!_u[(on8oX(;f
%+_*BApOFCZ32&7=<37c1H'9TqH,'`83B[IthuYCdp8[eQO7P9_SdnelQ(Bojh_bLp$6-m96*jC5Ro**^8XPu[='uV'/<aSHB;:8(
%4:oq<rO/YE;NaOf)c&TZ5[(B?J'BCEVWlJK<RY=,k:gYa9oh75*!3lu4-1XCmM$ce+Dp$%eI(!!g%:`[A<C;,-E1l;MtQJ5bpmqB
%lr-'\Uc5"j)^*]IA(+gDUHROZLp_tXnk]'eVe6_%D5qaU><NbA9;?a`<kma,FhT'iB;]],e4p!(8kAm"qB6H9N_YKOiKtD-T/Th,
%NO/&]\Xgk1rFDWHo7hPVASik+0I;(Zc/O[p,oKe-7k:i=;(ihLK:\!RT4dEs:)Fg07*t_U;i`Jto?MQt@T9Nnd\D%/7BjZ3br/MT
%:'p1$DEWXk2;HUCSPe$WXM<*GSPbSSH%r@eeAMD99Y2k?STR]rN&8-Y\g+Dadu#>\1m.oYZ.B,-Uf`4L/EmdVmAs;U4l`(Z14O^R
%TRhXZHg",=]i[u'1rds5/c2'dM)apk&N5eJ\qV3f%&2#,Q;Z!*OC'i"%jbNhb+qs'MKqLK>n"UO5009fb@JL&[Di>-kgsc7W*!]`
%L\GroM_TlgPK1AnV95:&>.ZW2&ONA4G'4+#ZF_uA<O+K,iE"8P,:0Hm7HFm5p%cHuVL'Ga^a5rPfs]R(N+a)t0H\p/FoT8.3(^?Z
%_t,Q^2,P"&@e2#n:59c^CX%C+n$B8a:*=-.!aEZI;TTDVqCMCmU@q\b[oJX)T)<1a(\fXCMmpYtRS)=LmMc]m(bUB/+J0K2KZnbi
%]6*4.2l8u"gOe&T'bgakO_R#oO(bg>o<mo2;UTVd\1Y]THkI+81q0'Se3a8/.>=^8odk=9]:<rni`llHrD65HcG3?r@[f_)?#6qQ
%`*m_lLL3e0A*`VBc"#u(/9]dKo$\da<Pu6soTfK@?.hZq(B((d<b7Uh,]FNY_.0dlP<mn)F'rcH`&lS8Fm;TClKWWQC!)hl6$4JH
%PR)n_9teQL6+h1"1.B-gMS93tRUPHqQW].Bae7>//@Kk;(6_-rQd9%ehUpPF7E7m$S@-j$:*5="bi:t*BZS;AM!-'Q+"b*fHEBUD
%CHIhVrA64nD-($?]$.>MK9DC\$ep8ogL@?FA,uqNj[.5sF%dYEG!uD;D4N$3k)3S^'ua]M7T0TdPANb%-3.,<AMmQ\>^>P52`&BM
%)PCH!jD6N:nh$4W.OjHfjLjjZS[:bUTk$J(4P"i(a\FX:bPgVE1jidl%(fL2+hM;<1-($N'^b)tO2'5X/d:MjT(u>"o1W=oM8J#u
%lsa)@&&O^SId@oS)rufXk)Zj$HJ$\mHVL%"hd-iYJR?p(&a2Q]LDDsdJtZf=9[\"C2Z6oVm3uU?/nrI_-YqrPPiY"4k$6VCHR>,g
%j\h.IU-Iot6"WO<0g6;BhXSE="5^8J1-ak<Ep1TP/qBuST=ACY;f->rRbMZir\/Jgdt.>%UT^6&SoTZgW6Z%Slr5^r+joMul4?6Q
%h[3I/DF5s)Wh)oKos/XZ"%u*s1i\eY%9mj_A+<5C-N,5`p$%;B7MeY&/4-7<*qOW,-beFm^349/"?l+C[^UGNEX=E?,TQI2`8:JV
%M7l)c-Kg4M+9F\e>6`;1/ibn&<&bV&m>YCJhX\T)oH5PgR$fn)e#OYU3=AR,Fddp'h.S@GX[K*\,(n3mAqf7W!mO5?3knF_GqV,l
%.!k=oS4^[i%(k'a$N%1j=;NRGXG4Yh7rW!Z4Thu([%06:mLp\if26?14Y(iNpkSt8FE63"\B8-*"CVf&hJ4r;O.lP`R%m&];[2bg
%ciN+"[X"Z>_!i:'r2>YRDP,GS%Pm;HDg1O%`Jsf0>#]okramt`IY!04_%3_]2iI:ZX0nV,em?#;]#AEl]Y7P*aQ+scDr*$'p5n1X
%kKD-Jmdg$cn`0H<@WVEiI<RKZ\iB_55230BcJRD/<ucRpG^Xr<p#f`/3]8Hu4I.qL2fEWX/(lcZTg-6%PM4c4=c1nWg[iB1+1KGD
%`T$f=1V6aoc8L0;_/AsQWh%b"o8E;/C2n=$KGWnNcPOdD7V7$HS_qMW_;QE\ot*T_G=_3eJ$iGZF`I(h[c,'7oA'<b/nl8GF7FQr
%\\+)"J_3+mXkt\mZdmV&pAF<ilaMeQo*rJ3,onYa05#?V[F#L%?*E[6V!$RYq<\^YRlac[ja(usqf];JPeUi%]A(=#jW,=-kH)9\
%:kYUg(DjrHAhqg2C>2)U\t%U#moG+?lgWrlmUdF&KAtY=lF"@D.W=7c4+BjZ5WD<lpiNa0:N_)XQJ"LA"O<WgIf?<tE;hl0T7>/3
%Lq!l)IpVu"WNEna=+!#Ao4;Y-q<cr.5Oa@^bh(S-C[LWaTYo@ge(:GRjk]3FH+eNJrq4MC3:Y$OTg*;T57TaSZ1Rn!rqPL?H6_(J
%fN\d'^09?_ch,2_4J1<"pInpW.tc'U*4*W[4>4`A].\9u`O<)][4)!>g1mUhQ@i6i9:LVda-FAXXj,H8VY-V"g7"7T(X)96W6iMn
%e#mokVRmjnmRj*qqXZ9Tj'Ag:o"g71p%r7`?XLOW\[u*o;Z/lmC&#fQbf`2L?KU]hQ-X;qGFn-C\$\']l,E[OP5/&8KeG?.M\h>i
%4R@b^-Fk)>bceI4h=0NSJ^>4I'F:;R52VNFs);hi8[mY3B4jH^Vq9hqNOmkg.st%[r:a:Y+0PB?ouWC.55O\'rT`9I5-E0KG5\&]
%k1f"ZokI>Be^`:HcgVm'J"!(nRp;LKaS2U1W%!50_dEEnV>hc_5?+oaWqu-:U80o6hkVn1&h.o$HmWf6s756'l<M+jJ[!=F#E\uX
%&j2cm[g';#jj.:NJ_U2E,%/%!jS,[HMoPGfg%JEW^kXN5<6!]rg@9Qtaj8bmmcF&jSc&8pc2-l)bH'61Go>Y6eT4S/X(Npp=>q='
%<i:FJg-obSbO9N6A@B/Mpa:goF='nQ+5C,HX(Rp6S%$q+om0Vm5Oa#FeWIT?H0o[#j_o55op&9dr*F0Cs%6F%m;nndPfAJb+@#k7
%"rC8B&0;a9pSTeE\B";+a7.#D07TtlZe;HWk(bV9Es:bDIu7MS3'Q*0du#J<4[8sE)LNf_<$Ii>X_4,]C<hli\k5Bia5@-qB_k3:
%qpg*6^KTGFXDRM^fT3K6!uQKmkn&TACcm6a*GoEur1JTpMCVQ[<+1-[=^G&dbJ35&7.YmT4/OU5nNfkE<V-Fb(2JO1e^)!5bcK@H
%GIL*Dq.9hbD>ADSf]r/LT,GSSe*3oei5SQ7)$4[4bClhi\%C=.H2Fb5i\S3toNs<G>h$:&Ki[Q5MTCJDmI'F)o=S7.lgGXZCZ&a2
%]TSPl]O'JHD\q0U7fs10q]=>*\Cc8'dl8I75H;$+%6f^Xh`ia_9XJq=3u*MM&R/?)j(`nZaU#lRU].^H\XLm4MR8$.qfiM.98JY,
%mh($CQ#`j<-_=D=kJH>Rdad0lpO-+;EQr[_:7Atoj?p>Oe+D"c;Yg12OXZp5M-,LLh[Ck1m+Kju/H7ZpgEDI.e5PW[TnP!D`JGX]
%/QJs3PGT'V*l*JAdc%&G<d+.RV0/Aia*Ucns7W8$dDokYiInrcJ:U=*YSBE*BsZHkAG>=ppK[OfaaZF`H8NEuBM_I.aU'lUPI_?Z
%Ecq'*i>E\iqqFUCn)'`/po*bUrkh:cDboe^o`a1pf\6Im0D?t+hD0rJQ'i7SA"LW!$tjermShl&7UX/_fU)K#FhP9Z7k;u8H>(OO
%fTEuY&&Na(3tanDl.t3VTX&A,f]UXSG+Tfoo-AKi35^AfTA#=tIM-jM(97ktm1bR]mW,CGeHtS2RG.au:M_,]lGoPI9U)^jP_oQC
%=jK(#NVrKsE'UPZK(hq+_*?`VZHqs:^cL9[kM2k%fJ9jP&eN:%*7h\^:4-\P,.Crkg[A1/_XucbAS6Di,mL1uSg_'/?Vb,bMK=6p
%f!R_?R<q^7]a&]VY(-<.;+';T@)?Oo*@;Ar7;<F,38>qJK*8K:UV/G!eQ'NeAonW.=A\+W$"9cQ+&pPS7gq>k(q'lIVh/^Yoc#qZ
%aMF&+,,N?j&a'"Oh5!f7[oOu&X:an1,nF"AmaFO59'**D>99-\:^b*6lHU#8X_nE6&!OqIZObQN^=*2E4Y!guRlGj1cc8W/pI)]"
%2hXl3.MC5BnT%q"4$>:Sj0!7T9_oNk#'GCC#A"dLEX8/PZDC5Yqj"#To[&td$?Al:5^&XqiO+WlC#[Yg7-1bOEX,q0GKP7C<L3(%
%6XraMA'2N@OSD##;c7e\:HE7SWLKh(<N:6)#8Co.Z0YOqkNR6(a$mALdmXbK'YJa59'$U>I^itXn'YorBV\-%eAjO?p^U+7C/"C>
%iMBPO9YhT#XB4&LLf.Be:CiH\$WD]h^$]cSj2>u%F4DnMjtAeuBq;0^nP5)[HnUojN\X#!g<3C%1Gb\!gg>\==ZT@!j#u[V"]6Ug
%JO?>aK$-IA&@N/1R#.*NdX?FTb[24+!fYJE)5EoE;K'4t8d_O<GZ,':ks/853^#=VaWXduH0-s.2,$E@l1^NA)>70"!;c%TpJP/*
%:CiH\W;@?Ya+Z.CX&TSeMLmki3I%;kVBQfiGB^,q(qlXlRLRgop8pr`9<6iTlPRT1C%oHiQ)4BMd$Q29@^-@hK0(i]b<a\(r.$^&
%gq6TikNR6(8)6&MXEBXm,@k_==/ju[W.6o?J-RStpZ\A+*u/>=0<3"bY&LL[jj;Fqn;Yr^87h3Q4Z)<]d`*P5Dq'pNe+[]8C$OD_
%qER(YLgnm+L%FZ]Q+k]Lj#sO[,aJj4!&&)!L,RWmEM..rmClG[lUp(!Jajd_3>F>>X]ekdL`G[&6058O&15XmQd1kmqt/7&Nsi6E
%KSL?0iPRHY:T<."oL7q*:fBDM%up:m3d'8Y?Qdp*@2,PY7iB4ENHFGj=h7B>NVU(,6][!L'2i%VZr4F:*S,,(<9D?OI<oSN`s!?<
%CsT:TDDe^t\YG!hm7(i%Xt8D,LW4^H9it@t8n=<Z/umpVb)o.>CY+V(Wa&]<:CiH\\0+.slZcKM><F76guiO+Z'0'4Y@8gNWn`#K
%BZsgeH1-pa23dLp0e&AL3^ra4+07$LVh`:i"gfeFKb%+]TZI[q24&rq?'R.)=aR+fW53i@rR-QWlltH/:_?1Y5/+u=8,</`jiST4
%GVnQ>Cm?EQ'LT6>/QniJmS$8%B&o%^,o+S,:$WXWq7&Ji.'[#ah`$b1='nV"gei:WrNY4c]h2l#5!:ab,:eufG)!RZ3GNKRF?-EB
%C;">sO8%s\kNSZP+.)R[*Rr:'7"[GM%7,pF=I[WZV=4&lG`N36BX-Xi6Oc$,%5FN^/O!,me94@B4g$gp.P.-j^1dq@.@!!;A+68.
%9;h$JOWIZom?R0hEb6G\WZA=J?MfUjWO0t"nT^+qObr'il@s@1o<V?*UG'K;B_O[K\[$=L*ZFWi6&+AkKl<pak/psE[ibJo9BD2j
%3u[^1q1:#tFJ6P!8dr57C8=1*j[L_1Y-cL'nT^*&/6(2\19.cYHB':s^k1sC`MF21VgBXOZARBcj[.L3]P6K<E`Wih&%J<RAa)BA
%2!-HniqC31lKBVXSOV.#CN<b?3EU!dVrR;r$&tp0\AffjWPpLeOsF<_G87qJqR^j<*ZF8Z=)@d#@A^m'<3bg$pnG`hgPb,p<TuP-
%1u=(*OXNT8V;UW1QS]q[<:9%Th:TDk9#a:lpZ\A++'5Fq<XSgBFYbXCeW0&)N7iE&PfhF"3ZdaPe_,uJCbf]]e7R1^5AEbbLT6*/
%m/C[Z$F4??l5CXUZFOjCC[K,U3Os%+[>r7R<+n]>,s*2`ZFOk_og3gVmccU>DQ't'`d:qo0mN@!mV&o:E^q(eZAhi%>e-WYNlHHO
%O@:`IM%=^^>dXZ<B1FTb<Xs6*^%!.F6%j]jku.\T2HT>1Jljn>-Z2T=N_VYSo9"1L5'mEf3c.+T14$%W^5?#BGBMX<0d#*"9r`%=
%FBVY'1e"M$85m`t".aUR]Z12aYsd(Qbt,OTb)uE3k/"d>>:N;?l(KgRR00q\'l%OWk$8HHG?)I9g".'<;`[YaNV:F+c>-=ZYg&3]
%YW\.YCOCl3QCZ#306SBB4,\QcdFEg&'3-9T)&@Oj$^SqdgN.;G?WoOUD)]N$_!RO?G@>@.&WTc"j7XIPq+GCWh9XFZ44Jtq;%<H/
%<:+@"FZYU>Q-.O#3Zda0F[IR%4dh3])cJ51e#:/DSkpn0pZ\A+*u/>Imd"S=#A/a@qrB:<rQM4S8)'eo.CVeV9AALIr5p1mD;1fj
%d)tm[de;nPW9qEpD;-:jG4sgCn5.7#nATWTNh(XTBj4AR')MKc`0SO\](^i+rSBF<7&E!+(>G9d4'1$:B?:Sf<C:/bCn7O4V<,.#
%V^7X'ATVXsXW"Y?8CLN-=I0H@DCdN=V>On&WO1G]%9l/G1B*kL%]X\U[OGFLV<,.#fJ;Fh8ADK.K;tK.9tS/4K;rA'j8sFb_$9"Y
%SQ8t=.I@Tie)MK<H*IRG<mH,ZMK?iO)s-g0[eg!F#;;[T[!>I4f2eu$pp/n1q`k&6P7PfI4-alN^?6keom%>62,1#U]]RR"`(>FL
%kJc=]KA01.ni^%R-Xgn9%F=KDn#kPsHhZgfp605q`iV?<q`[GUJ2ZM]J*)7\*P*"9?Tn5C:X=+uI,CjVGOt;'5QX=Gicf[B0:(sC
%BDTT;Ws%duXS\JnL&Bqi[XGDim@=4TiQ2<HeK7jGIMA/5qTk.crZn<V?U*B_%M$tSlt'\KK0K,<0?ZMcP95Xeop\8aC>l+_\,%.s
%0E/EL2<Gf;$=ECo_A@X$=W^/ml[BNB1+0n`'"XQm^up0qeOrL'^T#+Jk^G\[fY9ELk7_QLj"+Y"V-YVV-Q+)"E3Ab>?1'g<1ue-^
%YLe$&%Br"MqN+(6UT*ZTiI-J>+7HSr0j.#QVH>YnIS1i$Xm96Tou(jF-hI'3bWVg.7X8OFRL(GrR5QjSF^++tBN201[aEt7d)I:n
%1;&V/!S^JA+hZQ%Kb)0mMYhl4^`&:)aKX)"L-&qQ[bFE.%`c)6CV0Ol!8;[n7u"Lm[g%^c`?'Hr4[4`<qRqY*][_Z"IZh^:jm]R+
%c2rd?VL%rl`!A7RCK%^FZH(YTT.j:/23t*1IFfLi@E7YK3S==ATX$<VhNd8,S0Zm.%@-U]=21X)qMAqL;ie1aDs6.oHg9*GJ;u,E
%8'BZ9R0-@<BTL.iBg[)</?<'L.eZBu'*>qg!R2D;9:CYV3i;M-[btnG3cje!;Fc0oCXVMR6%3hZjsL8ElR+l=p_m5&1rhQ5UXpjq
%Z-P-L=mp=bi#Yhak%(>#&Z<Gmd;kuN4](9_2B[/V%o+@<QTAjl6gsRM\7d\.4Zf3+LjIW%hM]sLNoL#_(7Yl\Bon^>DgL?SM!L+A
%rA!&3SBM[N0u=U<"=!L9*cJlOdQlP_H@G&'-bZ5:r\Q<9cVA'j\4`d:LSu1GqE2jp:PWfH\kYk"Q\))m*Wc*!F?gW-]1ZG*[!E7W
%m%F1=&?/#D,<l"e6s!uRjN*46'*>]ZCST?FBT@[,if.lZ:M1/h/;_O[bOG;4mpOBhJ_uiLi+h6<m\m&VFDO5_Df&FrcZi?W^F.G\
%:5G7G?7eG*>J7H0*_:AJqK.Z^LU:Mc+GNJYm[,:X&uqGE`T[XW0,@QK:S7K$dPe8Af.NR'oY)aJc(sOQHA>)dFR\.B+I4N78J,"f
%GhD)!S2MG1c9MuH"+;2MZH!VF$QO2(W@-\a_f<&n3usE&XHdH"^J#&+6!g)naF4c#/Fr'`IhXV4#aH@V[X)U:80#M0&5V25KFCPW
%1)Pd2)TY#al>&g/D"/B2C>n..f&l+J\9'+PGY^]*Si"\hVRIcd02;cMhWlU/kdIW%8!?;8a%,4f1o]5)XbdV,;/>uL1r)p81[pO!
%mZ4RBl#;h_GG]e5>iKgHQ,i=Vduc`."iD&2JU`p!m*OnZa<7!XkQ3qP,7H^mnX/,d2Vp?i@t5a4dlD0JmJD/+c5rJcHOh927q.j=
%-6AGP=/Q/+#h-@D-VN(1U\sYc-NnHfgX:qD<i;_hi<cd0LoYb4BCWLE1Yk,jED#R0#82h@5)CDApG1u/LcqVG/nj+eR?"91Vp-8O
%Bm8Vk@cW=)`-SHMYncu"N4X9g*CHN!@ZR)4TFOEr3I3aO=#hGt=Dl8iYbaA&++Mi=mIu3kPCh#*TkPl&Er&CSjCS*ol%7++2oe0)
%a$*;>SARe7I:*[ZP+&/5;P0hQ2F\ZABDB$,\@O]_gY2UDni/9U9t[#B3?_]Hi<A6r,HCA&;9.MeMp:V5l,62hE1]>e9PA*KHh;R&
%S&P5E1&H)24VIO@j(H'%$O.b`l87ruS;]8thdIShLq4Be0'<(0C3@/$r,m4[bc^@#%_%*Yf%j29jF;W#[GG06<m/62/umZKFa(7-
%(9%&,5d6V]IX1g_+9*+s/=N4f8A;ospNuG,Ds&m>X#Ics\?8DLB&tDurTM_.?i1]/!>0RHocEW$o?D3_NhXqddJ4$_q9Q84?GHKI
%!h[rX\(g_D?[a9t_rnme?Yj>t'g<o@k%=>cU7,@n@Aq/Qr.L,$hqY@nMsBHlq?PNC;sD(nG/*rq[CWudQf?VdQh#mrr-#?U>[GM`
%eXONp"hp.hhRoCb#gh#$HXF*TnWi>l0BI?)Z?]g#gNV7bIRX4k:VD(7)8*/h$D2e@a+sK[_p?*silMH*(XUGo'`~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2192 4669 a Fs(Figur)o(e)f(20.)38 b FD(Impact)19
b(of)g(each)h(optimization)f(on)h(an)f(Itanium)g(2.)2141
4932 y(Ex)o(ecution)46 b(scaling)f(impro)o(v)o(es)g(performance)h(o)o
(v)o(er)f(unoptimized)2042 5015 y(StreamIt,)28 b(with)g(a)o(v)o(erage)i
(speedups)h(of)e(145\045)h(for)f(StrongARM,)g(58\045)2042
5098 y(for)23 b(Pentium)f(3,)h(and)h(57\045)g(for)e(Itanium)i(2.)e(The)
h(90-10)h(heuristic)f(w)o(orks)2042 5181 y(quite)36 b(well)f(\(see)h
([18)q(])f(for)h(full)g(details\))f(and)i(there)f(is)f(only)i(one)f
(in-)2042 5264 y(stance)d(where)g(scaling)h(results)e(in)h(a)g
(performance)h(de)o(gradation.)g(The)2042 5347 y(granularity-adjusted)
29 b Fu(3gpp)e FD(on)i(StrongARM)f(has)g(a)g(17\045)h(slo)n(wdo)n(wn)
2042 5430 y(due)i(to)g(scaling)g(\(compare)h Fu(CAF)e
FD(to)h Fu(CAF+scaling)e FD(in)h(Figure)h(15\).)p eop
%%Page: 11 11
11 10 bop -150 66 a FD(This)32 b(is)g(possibly)i(due)f(to)g(items)f(in)
h(\003ight)f(between)h(the)g(granularity-)-150 149 y(adjusted)28
b(actors)g(o)o(v)o(erwriting)f(the)g(state)g(of)h(an)f(e)o(x)o(ecuting)
i(actor)e(in)g(the)-150 232 y(data)22 b(cache.)g(Since)f(StrongARM)g
(has)h(no)g(L2)f(cache)i(then)f(such)g(e)n(viction)-150
315 y(can)d(be)h(quite)f(e)o(xpensi)n(v)o(e.)-50 399
y(Independently)-5 b(,)26 b(cache)f(a)o(w)o(are)g(fusion)g(also)f
(impro)o(v)o(es)h(performance)-150 482 y(by)16 b(84\045)g(on)g
(StrongARM,)f(101\045)i(on)f(Pentium)f(3)h(and)g(a)f(103\045)h(on)g
(the)g(Ita-)-150 565 y(nium)24 b(2.)f(cache)h(a)o(w)o(are)g(fusion)g
(de)o(grades)g(performance)h(only)f(for)f Fu(fil-)-150
648 y(ter)p FD(-)p Fu(bank2)k FD(\(by)i(6\045)h(on)f(StrongARM\).)g
(When)g(we)g(combine)g(cache)-150 731 y(a)o(w)o(are)22
b(fusion)h(with)e(e)o(x)o(ecution)i(scaling,)f(the)g(performance)i
(consistently)-150 814 y(impro)o(v)o(es.)f(The)g(speedup)i(of)e
Fu(CAF+scaling)e FD(o)o(v)o(er)i(baseline)h(is)e(241\045)-150
897 y(on)d(StrongARM,)g(146\045)h(on)g(Pentium)e(3)h(and)h(144\045)g
(on)f(Itanium)h(2.)-50 980 y(Ho)n(we)n(v)o(er)m(,)k(after)g(coarsening)
i(the)f(actors)f(with)g(cache)h(a)o(w)o(are)g(fusion,)-150
1063 y(scaling)d(results)g(in)f(less)h(additional)g(speedup)h(than)f
(it)f(did)h(relati)n(v)o(e)g(to)f(the)-150 1146 y(baseline.)31
b(The)g(speedup)h(of)e Fu(CAF+scaling)f FD(o)o(v)o(er)i
Fu(CAF)f FD(is)g(86\045)h(for)-150 1229 y(StrongARM,)19
b(22\045)h(for)f(Pentium)g(3)g(and)h(only)g(20\045)f(for)g(Itanium)h
(2.)f(This)-150 1312 y(is)30 b(because)h(some)g(actors)f(are)g
(implicitly)g(scaled)h(by)f(fusion)h(to)f(match)-150
1395 y(input/output)20 b(rates)f(of)g(successi)n(v)o(e)h(actors)f
(within)g(a)f(fused)i(block.)-50 1478 y(Note)29 b(that)h(the)g
Fu(ofmd)e FD(benchmark)k(does)e(not)g(bene\002t)g(from)g(fusion)-150
1561 y(or)d(scaling.)g(This)f(is)g(because)i Fu(ofmd)e
FD(has)i(fe)n(w)e(actors,)h(some)g(of)g(which)-150 1644
y(consume)22 b(and)f(produce)i(a)d(total)h(of)f(16-66)i(Kb)f(data;)g
(consequently)-5 b(,)22 b(e)o(x)o(e-)-150 1727 y(cution)h(scaling)g
(does)g(not)g(apply)-5 b(.)23 b(Also)g(there)f(is)g(limited)g
(opportunity)i(to)-150 1810 y(fuse)h(actors)g(within)g
Fu(ofmd)p FD(,)e(as)i(there)g(are)g(actors)g(that)f(ha)o(v)o(e)h(an)g
(instruc-)-150 1893 y(tion)e(size)f(of)h(9)f(Kb)h(and)g(fusing)g(them)g
(with)f(other)h(actors)g(w)o(ould)g(e)o(xceed)-150 1976
y(the)c(instruction)g(cache.)-50 2059 y(The)25 b(last)g(bar)m(,)g
Fu(CAF+scaling+buffer)p FD(,)d(illustrates)j(the)g(bene\002t)-150
2142 y(of)k(b)o(uf)n(fer)f(management)i(optimizations)f(for)g
(\002lters)e(that)i(peek.)g(As)f(de-)-150 2225 y(tailed)j(in)g(Section)
h(5,)f(such)h(\002lters)e(demand)j(specialized)f(b)o(uf)n(fer)f(man-)
-150 2308 y(agement,)37 b(as)f(the)o(y)h(reuse)g(items)e(on)i(the)g
(input)f(tape)h(across)g(succes-)-150 2391 y(si)n(v)o(e)21
b(iterations.)g(In)h(our)f(benchmark)i(suite,)e(peeking)i(occurs)f
(only)g(in)f(the)-150 2474 y(last)26 b(four)g(applications)h(\(i.e.,)e
Fu(fmradio)p FD(,)f Fu(filterbank)p FD(,)g Fu(filter-)-150
2557 y(bank2)k FD(and)i Fu(ofdm)p FD(\).)e(Thus,)h(the)h
Fu(CAF+scaling)d FD(bar)i(is)g(equi)n(v)n(alent)-150
2640 y(to)24 b Fu(CAF+scaling+buffer)e FD(for)i(all)g(benchmarks)i
(from)f Fu(bitonic)-150 2723 y FD(through)20 b Fu(matmult)p
FD(.)-50 2806 y(The)30 b(b)o(uf)n(fer)g(optimization)g(applied)h(in)f
(Figures)g(15,)g(16,)g(and)h(17)g(is)-150 2889 y(termed)i
Fu(cutpeek)p FD(.)e(In)i(this)g(optimization,)g(the)g(cache)h(a)o(w)o
(are)f(fusion)-150 2972 y(algorithm)27 b(is)f(modi\002ed)h(so)f(that)g
(tw)o(o)h(adjacent)g(\002lters)e(are)i(ne)n(v)o(er)g(fused)-150
3055 y(if)c(the)h(do)n(wnstream)h(\002lter)d(performs)j(an)o(y)f
(peeking)h(\(i.e.,)d(it)h(has)h Fy(peek)32 b Fr(>)-150
3138 y Fy(pop)q FD(\).)21 b(F)o(ollo)n(wing)g(e)o(x)o(ecution)i
(scaling,)e(the)h(li)n(v)o(e)f(items)g(are)h(copied)g(to)f(the)-150
3221 y(start)j(of)g(the)g(b)o(uf)n(fer)g(once)h(per)f(scaled)h(e)o(x)o
(ecution)g(\(using)g(the)f(cop)o(y-shift)-150 3304 y(strate)o(gy)-5
b(,)20 b(Section)g(5\),)g(thereby)h(reducing)g(the)f(o)o(v)o(erhead)i
(of)e(cop)o(ying)h(li)n(v)o(e)-150 3387 y(items.)28 b(Optimized)h(b)o
(uf)n(fer)g(management)i(of)n(fers)e(the)g(lar)o(gest)f(gains)h(for)
-150 3470 y Fu(filterbank2)p FD(:)h(45\045)i(on)h(StrongARM,)f(38\045)g
(on)h(Pentium)f(3,)g(and)-150 3553 y(36\045)f(on)f(Itanium)g(2.)g(This)
f(is)h(due)g(to)g(a)g(lar)o(ge)g(peek)g(rate)g(\(100)h(items\))-150
3636 y(in)23 b(addition)g(a)g(lar)o(ge)g(scaling)g(f)o(actor)h(of)e
(300)i(that)f(amortizes)g(the)g(cost)g(of)-150 3719 y(cop)o(ying)e
(items.)-50 3802 y(While)i(we)h(found)i(that)e Fu(cutpeek)f
FD(is,)g(on)i(a)o(v)o(erage,)g(the)f(best)g(b)o(uf)n(fer)-150
3885 y(management)d(strate)o(gy)e(across)h(the)g(three)f(platforms,)g
(we)g(also)h(e)n(v)n(aluated)-150 3968 y(se)n(v)o(eral)j(others.)f(F)o
(or)g Fu(fmradio)p FD(,)f(up)i(to)f(a)g(5\045)h(impro)o(v)o(ement)h(is)
e(of)n(fered)-150 4051 y(by)29 b(a)g(strate)o(gy)g(called)g
Fu(peekscale)p FD(,)d(in)j(which)g(\(prior)g(to)f(other)h(opti-)-150
4134 y(mizations\))e(\002lters)e(with)h Fy(peek)36 b
Fr(>)f Fy(pop)28 b FD(are)e(scaled)h(to)f(perform)h(se)n(v)o(eral)-150
4218 y(e)o(x)o(ecutions)19 b(at)f(once.)h(As)f(scaling)h(is)e
(performed,)i(the)g Fy(pop)g FD(and)g Fy(peek)f FD(rates)-150
4301 y(increase)28 b(b)o(ut)g Fy(peek)d FC(\000)e Fy(pop)29
b FD(remains)f(constant;)h(scaling)f(continues)h(un-)-150
4384 y(til)24 b(the)h Fy(pop)h FD(rate)e(is)h(at)g(least)f
Fo(4)e FC(\003)g Fo(\()p Fy(peek)h FC(\000)e Fy(pop)q
Fo(\))p FD(.)j(Lik)o(e)h Fu(cutpeek)p FD(,)f(this)-150
4467 y(serv)o(es)d(to)g(amortize)g(the)g(o)o(v)o(erhead)i(of)e(cop)o
(y-shift,)g(b)o(ut)g(it)f(can)i(also)f(ham-)-150 4550
y(per)27 b(the)g(e)o(x)o(ecution)h(scaling)f(optimization.)g(Because)g
(certain)g(other)g(ac-)-150 4633 y(tors)d(in)h(the)f(graph)h(must)g
(\002re)f(more)g(frequently)i(to)e(compensate)i(for)e(the)-150
4716 y(scaled)h(peeking)g(\002lter)m(,)e(there)i(is)e(less)h(room)h
(for)f(global)h(e)o(x)o(ecution)g(scal-)-150 4799 y(ing.)20
b(The)f(only)i(other)f(case)g(where)g Fu(peekscale)e
FD(is)h(the)h(best)g(strate)o(gy)g(is)-150 4882 y(for)i
Fu(ofdm)g FD(on)h(StrongARM,)f(where)h(there)f(is)g(a)h(7\045)g(impro)o
(v)o(ement)g(o)o(v)o(er)-150 4965 y Fu(cutpeek)p FD(.)18
b(Finally)-5 b(,)19 b(on)h(the)f Fu(filterbank)f FD(benchmark,)j
(highest)f(per)o(-)-150 5048 y(formance)g(results)f(from)h(unoptimized)
g(cop)o(y-shift)h(b)o(uf)n(fer)e(management.)-150 5131
y(W)-6 b(e)19 b(also)g(e)n(v)n(aluated)i(b)o(uf)n(fer)e(management)h
(using)g(modulation)h(for)e(inde)o(x-)-150 5214 y(ing,)h(b)o(ut)g(this)
g(did)h(not)g(yield)f(the)g(best)h(performance)g(for)g(an)o(y)g
(benchmark)-150 5297 y(or)e(platform.)2042 66 y FA(7.)91
b(Related)22 b(W)-7 b(ork)2042 183 y FD(There)37 b(is)f(a)h(lar)o(ge)g
(body)h(of)f(literature)f(on)h(scheduling)i(synchronous)2042
266 y(data\003o)n(w)c(\(SDF\))f(graphs)i(to)g(optimize)f(v)n(arious)h
(metrics)f([4,)g(5)q(].)f(The)2042 349 y(w)o(ork)25 b(most)h(closely)f
(related)g(to)g(ours)h(is)f(a)g(recent)g(study)h(by)f(K)m(ohli)h([11])
2042 432 y(on)k(cache)g(a)o(w)o(are)f(scheduling)i(of)e(SDF)g(graphs,)h
(implemented)g(as)f(part)2042 515 y(of)18 b(the)g(Ptolemy)f(frame)n(w)o
(ork)i(for)f(simulating)g(heterogeneous)i(embedded)2042
598 y(systems)30 b([12)q(].)g(K)m(ohli)g(de)n(v)o(elops)i(a)e(Cache)h
(A)-7 b(w)o(are)30 b(Scheduling)h(\(CAS\))2042 681 y(heuristic)19
b(for)f(an)h(embedded)i(tar)o(get)d(with)h(a)f(softw)o(are-managed)j
(scratch-)2042 764 y(pad)28 b(instruction)h(cache.)f(His)f(algorithm)i
(greedily)f(decides)h(ho)n(w)f(man)o(y)2042 847 y(times)19
b(to)g(e)o(x)o(ecute)h(a)g(gi)n(v)o(en)g(actor)f(based)i(on)e
(estimates)h(of)f(the)h(data)f(cache)2042 930 y(and)32
b(instruction)g(cache)g(penalties)g(associated)g(with)f(switching)h(to)
f(the)2042 1013 y(ne)o(xt)e(actor)l(.)h(In)f(contrast,)g(our)h
(algorithm)g(considers)g(the)g(b)o(uf)n(fering)f(re-)2042
1096 y(quirements)20 b(of)f(all)f(\002lters)g(in)h(a)g(gi)n(v)o(en)h
(container)g(and)f(increases)h(the)f(mul-)2042 1179 y(tiplicity)27
b(so)h(long)g(as)g(90\045)g(of)g(b)o(uf)n(fers)g(are)g(contained)h
(within)e(the)h(data)2042 1262 y(cache.)23 b(K)m(ohli)h(does)f(not)h
(consider)f(b)o(uf)n(fer)g(management)i(strate)o(gies,)d(and)2042
1345 y(the)g(e)n(v)n(aluation)i(is)d(limited)h(to)g(one)h(6-\002lter)e
(pipeline)i(and)g(an)g(assortment)2042 1428 y(of)d(random)h(SDF)d
(graphs.)j(An)f(empirical)g(comparison)h(of)f(our)g(heuristics)2042
1511 y(on)g(a)f(common)i(architectural)e(tar)o(get)g(w)o(ould)i(be)e
(an)h(interesting)g(direction)2042 1594 y(for)f(future)g(w)o(ork.)2141
1677 y(It)25 b(is)g(recognized)i(that)e(there)h(is)f(a)g(tradeof)n(f)h
(between)g(code)g(size)f(and)2042 1760 y(b)o(uf)n(fer)i(size)f(when)i
(determining)g(an)f(SDF)f(schedule.)h(Most)h(techniques)2042
1843 y(to)g(date)g(ha)o(v)o(e)h(focused)g(on)g(\223single)g(appearance)
h(schedules\224)g(in)e(which)2042 1926 y(each)f(\002lter)e(appears)i
(at)f(only)h(one)g(position)g(in)f(the)g(loop)h(nest)g(denoting)2042
2009 y(the)22 b(schedule.)g(Such)g(schedules)h(guarantee)h(minimal)d
(code)i(size)f(and)g(f)o(a-)2042 2092 y(cilitate)e(the)h(inlining)h(of)
f(\002lters.)f(There)h(are)g(a)h(number)g(of)f(approaches)i(to)2042
2175 y(minimizing)28 b(the)g(b)o(uf)n(fer)g(requirements)h(for)e
(single-appearance)j(sched-)2042 2258 y(ules)d(\(see)g([4])f(for)h(a)g
(re)n(vie)n(w\).)g(While)f(it)g(has)h(been)h(sho)n(wn)g(that)f(obtain-)
2042 2341 y(ing)g(the)g(minimal)g(memory)h(requirements)g(for)f
(general)g(graphs)h(is)f(NP-)2042 2424 y(complete)36
b([3],)f(there)g(are)h(tw)o(o)f(complimentary)i(heuristics,)e(APGAN)
2042 2507 y(\(P)o(airwise)14 b(Grouping)i(of)f(Adjacent)h(Nodes\))g
(and)f(RPMC)g(\(Recursi)n(v)o(e)g(P)o(ar)o(-)2042 2590
y(titioning)22 b(by)g(Minimum)g(Cuts\),)f(that)h(ha)o(v)o(e)g(been)g
(sho)n(wn)h(to)f(be)g(ef)n(fecti)n(v)o(e)2042 2673 y(when)k(applied)g
(together)h([3].)e(Buf)n(fer)g(mer)o(ging[15)r(,)g(16])h(represents)g
(an-)2042 2756 y(other)h(technique)i(for)e(decreasing)h(b)o(uf)n(fer)f
(sizes,)g(which)h(could)g(be)f(inte-)2042 2839 y(grated)19
b(with)g(our)g(approach)i(in)d(the)h(future.)2141 2922
y(Go)o(vindarajan)29 b(et)f(al.)f(de)n(v)o(elop)i(a)e(linear)h
(programming)h(frame)n(w)o(ork)2042 3005 y(for)41 b(determining)h(the)f
(\223rate-optimal)h(schedule\224)g(with)f(the)g(minimal)2042
3088 y(memory)20 b(requirement)g([7)q(].)e(A)i(rate-optimal)f(schedule)
i(is)e(one)h(that)g(tak)o(es)2042 3171 y(adv)n(antage)i(of)e(parallel)g
(resources)h(to)f(e)o(x)o(ecute)h(the)g(graph)g(with)e(the)i(max-)2042
3254 y(imal)d(throughput.)i(Ho)n(we)n(v)o(er)m(,)e(the)h(technique)g
(is)f(speci\002c)h(to)f(rate-optimal)2042 3337 y(schedules)h(and)g(can)
g(result)f(in)g(a)g(code)h(size)f(e)o(xplosion,)h(as)f(the)h(same)f
(node)2042 3421 y(is)g(potentially)i(e)o(x)o(ecuted)g(in)e(man)o(y)i
(dif)n(ferent)f(conte)o(xts.)2141 3504 y(The)i(w)o(ork)h(described)g
(abo)o(v)o(e)g(is)e(related)h(to)g(ours)g(in)g(that)g(minimizing)2042
3587 y(b)o(uf)n(fer)i(requirements)h(can)g(also)f(impro)o(v)o(e)h
(caching)g(beha)o(vior)l(.)g(Ho)n(we)n(v)o(er)m(,)2042
3670 y(our)18 b(goal)h(is)f(dif)n(ferent)g(in)g(that)h(we)f(aim)g(to)g
(impro)o(v)o(e)h(spatial)f(and)h(temporal)2042 3753 y(locality)25
b(instead)h(of)f(simply)g(decreasing)i(the)e(size)g(of)h(the)f(li)n(v)o
(e)g(data)h(set.)2042 3836 y(In)17 b(f)o(act,)g(our)h(scaling)g
(transformation)g(actually)g Fy(incr)m(eases)h FD(the)e(size)h(of)f
(the)2042 3919 y(data)22 b(b)o(uf)n(fers,)g(leading)h(to)f(higher)h
(performance)h(across)f(our)f(benchmark)2042 4002 y(suite.)29
b(Our)h(transformations)g(also)g(tak)o(e)g(into)f(account)i(the)f(size)
f(of)h(the)2042 4085 y(instruction)i(and)g(data)g(caches)h(to)e(select)
h(an)g(appropriate)g(scaling)g(and)2042 4168 y(partitioning)19
b(for)g(the)g(stream)g(graph.)2141 4251 y(Proebsting)24
b(and)g(W)-6 b(atterson)24 b([17])f(gi)n(v)o(e)h(a)f(fusion)h
(algorithm)g(that)f(in-)2042 4334 y(terlea)o(v)o(es)c(the)h(control)g
(\003o)n(w)f(graphs)i(of)f(adjacent)g(\002lters.)e(Ho)n(we)n(v)o(er)m
(,)i(their)2042 4417 y(algorithm)33 b(only)h(supports)g(synchronous)h
Fu(get)d FD(and)i Fu(put)e FD(operations;)2042 4500 y(StreamIt')l(s)j
Fu(peek)g FD(operation)i(necessitates)f(b)o(uf)n(fer)g(management)i
(be-)2042 4583 y(tween)19 b(\002lters.)2141 4666 y(There)29
b(are)g(a)g(lar)o(ge)g(number)h(of)f(stream)g(programming)i(languages;)
2042 4749 y(see)19 b([19])g(for)g(a)g(re)n(vie)n(w)-5
b(.)19 b(The)g(Brook)g(language)h([6)q(])e(e)o(xtends)i(C)f(to)f
(include)2042 4832 y(data-parallel)d(k)o(ernels)h(and)f
(multi-dimensional)h(streams)f(that)g(can)g(be)g(ma-)2042
4915 y(nipulated)j(via)g(prede\002ned)h(operators.)f(Synchronous)i
(languages)g(such)e(as)2042 4998 y(Esterel)h([2])h(and)g(LUSTRE)e([8])i
(also)g(tar)o(get)f(the)h(embedded)i(domain,)e(b)o(ut)2042
5081 y(the)o(y)e(are)f(more)h(control-oriented)h(than)e(StreamIt)g(and)
h(are)g(less)f(amenable)2042 5164 y(to)24 b(compile-time)g
(optimizations.)h(Ben)m(v)o(eniste)g(et)f(al.)g([1])g(also)g(pro)o
(vides)2042 5247 y(an)18 b(o)o(v)o(ervie)n(w)i(of)e(data\003o)n(w)h
(synchronous)i(languages.)e(Sisal)f(\(Stream)f(and)2042
5330 y(Iteration)h(in)g(a)g(Single)g(Assignment)h(Language\))g(is)f(a)g
(high-performance,)p eop
%%Page: 12 12
12 11 bop -150 66 a FD(implicitly)17 b(parallel)g(functional)h
(language)g([9].)f(W)-6 b(e)17 b(are)g(not)g(a)o(w)o(are)h(of)f(an)o(y)
-150 149 y(cache)j(a)o(w)o(are)f(optimizations)g(in)g(these)g(stream)g
(languages.)-50 232 y(There)25 b(is)g(a)g(lar)o(ge)h(body)g(of)g(w)o
(ork)g(co)o(v)o(ering)g(cache)g(miss)f(equations,)-150
315 y(and)20 b(an)g(equally)g(lar)o(ge)g(body)h(of)e(w)o(ork)h
(concerned)i(with)d(analytical)h(mod-)-150 399 y(els)29
b(for)f(reasoning)i(about)g(data)f(reuse)g(distances)h(and)f(cache)h
(beha)o(vior)l(.)-150 482 y(The)22 b(model)i(introduced)f(in)g(this)f
(paper)h(is)f(loosely)i(based)f(on)g(the)g(notion)-150
565 y(of)k(stack)g(reuse)g(distances)g([14)q(].)f(Our)g(model)h(is)g
(especially)g(tailored)f(to)-150 648 y(streaming)20 b(computations,)h
(and)f(unique)h(in)f(le)n(v)o(eraging)h(the)f(concept)h(of)e(a)-150
731 y(steady)h(state)e(e)o(x)o(ecution.)-150 971 y FA(8.)91
b(Conclusions)-150 1088 y FD(In)17 b(this)h(paper)m(,)f(we)h(present)g
(a)f(simple)h(yet)f(highly)h(ef)n(fecti)n(v)o(e)g(methodology)-150
1171 y(for)h(running)i(streaming)e(programs)i(on)e(common)i
(cache-based)g(architec-)-150 1254 y(tures.)c(The)g(w)o(ork)h(sho)n(ws)
g(that)f(we)g(can)g(e)o(xploit)h(the)f(ab)o(undant)h(parallelism)-150
1337 y(in)j(streaming)g(codes)h(to)f(impro)o(v)o(e)h(the)f(beha)o(vior)
h(of)f(the)g(cache)h(hierarchy)-150 1420 y(and)f(deli)n(v)o(er)f
(signi\002cant)h(performance)g(impro)o(v)o(ements)g(on)g(e)o(xisting)f
(ma-)-150 1503 y(chines.)29 b(W)-6 b(e)28 b(e)n(v)n(aluate)i(our)f
(methodology)i(on)e(three)g(architectures:)g(the)-150
1586 y(embedded)e(StrongARM)e(processor)m(,)h(the)f(superscalar)h
(Pentium)f(3,)g(and)-150 1669 y(the)19 b(VLIW)f(Itanium)h(2.)-50
1752 y(Our)32 b(optimizations)i(are)f(simple)f(b)o(ut)h(yield)g
(surprisingly)g(big)h(sa)o(v-)-150 1835 y(ings)24 b(in)f(performance.)i
(First,)d(we)h(introduce)i Fy(e)o(xecution)f(scaling)p
FD(,)g(which)-150 1918 y(increases)36 b(the)g(e)o(x)o(ecution)h
(frequenc)o(y)f(of)g(e)n(v)o(ery)g(actor)g(in)g(the)f(stream)-150
2001 y(graph.)25 b(Intuiti)n(v)o(ely)-5 b(,)25 b(scaling)g(impro)o(v)o
(es)h(instruction)f(locality)g(because)h(it)-150 2084
y(increases)16 b(the)g(amount)h(of)f(reuse)g(from)f(the)h(instruction)g
(cache.)h(Concomi-)-150 2167 y(tantly)-5 b(,)23 b(it)f(leads)i(to)f
(performance)i(gains)e(of)g(145\045)h(on)g(the)f(StrongARM,)-150
2250 y(58\045)h(on)g(the)f(Pentium)g(3,)g(and)h(57\045)f(on)h(the)f
(Itanium)h(2.)f(It)f(is)h(w)o(orthy)g(to)-150 2333 y(note)28
b(that)f(e)o(x)o(ecution)h(scaling)g(is)f(a)g(departure)h(from)f(past)h
(optimization)-150 2416 y(strate)o(gies)18 b(for)g(streaming)g
(programs,)h(which)g(try)e(to)h(minimize)h(b)o(uf)n(fer)f(re-)-150
2499 y(quirements.)k(Our)g(scaling)g(transformation)h(actually)f
Fy(incr)m(eases)h FD(the)e(size)-150 2582 y(of)e(the)g(data)g(b)o(uf)n
(fers)g(between)h(actors.)-50 2665 y(W)-6 b(e)30 b(also)i(sho)n(wed)g
(that)g(scaling)f(presents)h(a)g(tradeof)n(f)f(between)i(in-)-150
2748 y(struction)28 b(locality)g(and)h(data)f(locality)-5
b(.)28 b(Using)g(a)g(simple)g(cache)h(model,)-150 2831
y(we)20 b(sho)n(w)h(ho)n(w)g(scaling)g(impacts)g(the)f(instruction)h
(and)g(data)f(caches.)h(The)-150 2914 y(model)e(serv)o(es)f(to)h(moti)n
(v)n(ate)f(a)h(heuristic)f(for)g(calculating)h(the)f(scaling)h(f)o(ac-)
-150 2997 y(tor)l(.)d(The)h(heuristic,)g(which)g(accounts)h(for)f(the)g
(size)g(of)f(the)h(instruction)h(and)-150 3080 y(data)h(caches,)h(w)o
(orks)f(quite)g(well)g(in)f(practice.)-50 3163 y(This)k(paper)h(also)g
(introduces)h Fy(cac)o(he)f(awar)m(e)g(fusion)p FD(.)g(The)g(fusion)g
(op-)-150 3246 y(timization)c(helps)h(to)g(reduce)g(the)g(data)g
(requirements)g(of)g(a)f(program,)i(and)-150 3329 y(can)29
b(reduce)h(the)f(total)g(number)h(of)f(memory)h(requests)f(by)h(as)f
(much)g(as)-150 3412 y(50\045.)g(The)f(fusion)h(of)g(actors)f(in)h(the)
f(stream)h(graph)g(is)f(carried)h(out)g(ju-)-150 3495
y(diciously)-5 b(,)29 b(and)f(our)h(algorithms)f(are)h(sensiti)n(v)o(e)
f(to)g(the)g(instruction)h(and)-150 3578 y(data)20 b(w)o(orking)h(sets)
e(of)h(the)f(coarsened)i(e)o(x)o(ecution)g(units,)e(as)h(well)f(as)h
(their)-150 3661 y(impact)f(on)h(the)f(cache)h(hierarchy)-5
b(.)20 b(Cache)g(a)o(w)o(are)f(fusion)h(leads)f(to)h(perfor)o(-)-150
3744 y(mance)j(gains)f(of)g(84\045)h(on)g(the)f(StrongARM,)g(101\045)i
(on)e(the)g(Pentium)g(3,)-150 3827 y(and)e(103\045)g(on)f(the)g
(Itanium)g(2.)-50 3910 y(Cache)j(a)o(w)o(are)h(fusion)g(also)f(enables)
h(a)f(set)g(of)g(no)o(v)o(el)h(b)o(uf)n(fer)f(manage-)-150
3993 y(ment)29 b(strate)o(gies)h(for)f(handling)h(the)f(streams)h(of)f
(data)g(between)h(actors.)-150 4076 y(Due)e(to)f(the)h(static)f(nature)
h(of)g(stream)g(programs,)g(we)f(can)i(often)f(apply)-150
4159 y Fy(scalar)18 b(r)m(eplacement)h FD(to)f(remo)o(v)o(e)h(array)f
(references,)g(and)g(thus)g(communi-)-150 4242 y(cation)25
b(between)g(fused)h(actors)e(is)h(done)g(through)h(re)o(gisters,)e
(rather)h(than)-150 4325 y(through)i(memory)-5 b(.)27
b(T)-6 b(o)25 b(allo)n(w)h(scalar)g(replacement)h(to)f(apply)g(to)g
(sliding)-150 4408 y(windo)n(w)j(computations,)h(we)e(introduce)i(a)f
Fy(copy-shift)g FD(b)o(uf)n(fer)f(manage-)-150 4491 y(ment)19
b(polic)o(y)g(that)g(out-performs)h(a)f(traditional)g(rotating)g(b)o
(uf)n(fer)l(.)-50 4575 y(In)k(summary)-5 b(,)25 b(the)f(application)g
(of)g(e)o(x)o(ecution)h(scaling,)e(cache)i(a)o(w)o(are)-150
4658 y(fusion,)31 b(and)h(our)f(ne)n(w)g(b)o(uf)n(fer)g(management)i
(strate)o(gies,)d(can)i(impro)o(v)o(e)-150 4741 y(performance)c(of)e
(StreamIt)g(programs)h(by)g(249\045)h(on)f(the)f(StrongARM,)-150
4824 y(154\045)20 b(on)f(the)g(Pentium)g(3,)g(and)g(152\045)h(on)g(the)
f(Itanium)g(2.)-150 5064 y FA(9.)91 b(Ackno)o(wledgments)-150
5181 y FD(W)-6 b(e)27 b(thank)g(Michael)h(Gordon)g(and)g(Jasper)f(Lin)g
(for)g(their)g(helpful)g(com-)-150 5264 y(ments)c(as)g(well)f(as)h
(their)f(contrib)o(utions)i(to)f(the)f(StreamIt)g(infrastructure.)-150
5347 y(W)-6 b(e)27 b(also)g(thank)h(K)n(en)f(Steele)g(for)g(pro)o
(viding)h(an)f(IP)-7 b(A)l(Q)27 b(for)g(our)g(e)o(xperi-)-150
5430 y(ments.)22 b(The)h(StreamIt)e(project)i(is)f(supported)h(by)g(D)m
(ARP)-7 b(A)22 b(grants)g(PCA-)2042 66 y(F29601-03-2-0065)40
b(and)e(HPCA/PERCS-W0133890;)e(NSF)g(a)o(w)o(ards)2042
149 y(CNS-0305453)20 b(and)g(EIA-0071841;)g(and)g(the)f(MIT)f(Oxygen)j
(Alliance.)2042 340 y FA(Refer)n(ences)2089 448 y Fk([1])29
b(A.)16 b(Ben)m(v)o(eniste,)j(P)-7 b(.)15 b(Caspi,)h(P)-7
b(.)15 b(L.)g(Guernic,)j(and)e(N.)g(Halbw)o(achs.)24
b(Data-Flo)n(w)2195 523 y(Synchronous)g(Languages.)42
b(In)22 b Fa(REX)e(Sc)o(hool/Symposium)p Fk(,)26 b(pages)d(1\22645,)
2195 598 y(1993.)2089 703 y([2])29 b(G.)20 b(Berry)i(and)g(G.)e
(Gonthier)l(.)39 b(The)20 b(Esterel)i(Synchronous)h(Programming)2195
778 y(Language:)c(Design,)f(Semantics,)g(Implementation.)27
b Fa(Science)19 b(of)f(Computer)2195 853 y(Pr)m(o)o(g)o(.)p
Fk(,)e(19\(2\),)h(1992.)2089 958 y([3])29 b(C.)24 b(S.)f
(Bhattacharyya,)28 b(P)-7 b(.)23 b(K.)g(Murthy)l(,)h(and)h(E.)e(A.)g
(Lee.)47 b(APGAN)24 b(and)2195 1033 y(RPMC:)31 b(Complementary)h
(Heuristics)f(for)f(T)n(ranslating)h(DSP)e(Block)2195
1108 y(Diagrams)16 b(into)f(Ef)n(\002cient)h(Softw)o(are)h
(Implementations.)k Fa(J)n(ournal)16 b(of)f(Design)2195
1182 y(A)o(utomation)k(for)e(Embedded)h(Systems.)p Fk(,)f(pages)h
(33\22660,)f(January)h(1997.)2089 1288 y([4])29 b(S.)23
b(Bhattacharyya,)j(P)-7 b(.)22 b(Murthy)l(,)h(and)h(E.)e(Lee.)43
b(Synthesis)25 b(of)e(embedded)2195 1362 y(softw)o(are)e(from)d
(synchronous)i(data\003o)n(w)g(speci\002cations.)32 b
Fa(J)n(ournal)20 b(of)f(VLSI)2195 1437 y(Signal)g(Pr)m(ocessing)e
(Systems)p Fk(,)h(21\(2\),)f(June)g(1999.)2089 1543 y([5])29
b(S.)17 b(S.)f(Bhattacharyya,)21 b(P)-7 b(.)16 b(K.)h(Murthy)l(,)g(and)
g(E.)f(A.)h(Lee.)25 b Fa(Softwar)n(e)18 b(Synthesis)2195
1617 y(fr)m(om)f(Data\003ow)i(Gr)o(aphs)p Fk(.)k(Kluwer)18
b(Academic)h(Publishers,)f(1996.)2089 1723 y([6])29 b(I.)18
b(Buck,)h(T)-5 b(.)17 b(F)o(ole)o(y)l(,)i(D.)e(Horn,)h(J.)g(Sugerman,)h
(K.)e(F)o(atahalian,)k(M.)d(Houston,)2195 1797 y(and)i(P)-7
b(.)19 b(Hanrahan.)34 b(Brook)20 b(for)g(GPUs:)f(Stream)i(Computing)g
(on)f(Graphics)2195 1872 y(Hardw)o(are.)26 b(In)17 b
Fa(SIGGRAPH)p Fk(,)e(2004.)2089 1978 y([7])29 b(R.)g(Go)o(vindarajan,)j
(G.)c(Gao,)h(and)h(P)-7 b(.)27 b(Desai.)64 b(Minimizing)31
b(memory)2195 2052 y(requirements)22 b(in)e(rate-optimal)j(schedules.)
35 b(In)20 b Fa(Pr)m(oceedings)h(of)f(the)h(1994)2195
2127 y(Int.)e(confer)n(ence)j(on)d(Application)i(Speci\002c)g(Arr)o(ay)
e(Pr)m(ocessor)o(s)p Fk(,)f(pages)i(75\226)2195 2202
y(86,)d(August)g(1994.)2089 2307 y([8])29 b(N.)14 b(Halbw)o(achs,)i(P)
-7 b(.)13 b(Caspi,)h(P)-7 b(.)13 b(Raymond,)i(and)g(D.)e(Pilaud.)19
b(The)c(synchronous)2195 2382 y(data-\003o)n(w)i(programming)g
(language)h(LUSTRE.)g Fa(Pr)m(oc.)d(of)g(the)h(IEEE)p
Fk(,)e(79\(9\),)2195 2457 y(1991.)2089 2562 y([9])29
b(J.)23 b(Gaudiot)i(and)f(W)-6 b(.)22 b(Bohm)i(and)g(T)-5
b(.)23 b(DeBoni)h(and)g(J.)f(Feo)h(and)g(P)-7 b(.)22
b(Mille.)2195 2637 y(The)17 b(Sisal)h(Model)g(of)f(Functional)i
(Programming)f(and)g(its)f(Implementation.)2195 2711
y(In)24 b Fa(Pr)m(oc.)f(of)h(the)h(Second)g(Aizu)f(International)i
(Symposium)f(on)f(P)-5 b(ar)o(allel)2195 2786 y(Algorithms/Ar)n(c)o
(hitectur)n(es)21 b(Synthesis)p Fk(,)d(1997.)2056 2892
y([10])29 b(M.)19 b(Karczmarek,)j(W)-6 b(.)18 b(Thies,)h(and)h(S.)f
(Amarasinghe.)34 b(Phased)21 b(scheduling)2195 2966 y(of)c(stream)h
(programs.)24 b(In)17 b Fa(LCTES)p Fk(,)f(2003.)2056
3072 y([11])29 b(S.)15 b(K)n(ohli.)20 b(Cache)d(a)o(w)o(are)g
(scheduling)g(of)e(synchronous)i(data\003o)n(w)g(programs.)2195
3147 y(Master')l(s)25 b(Report)g(T)-5 b(echnical)26 b(Memorandum)e
(UCB/URL)f(M04/03,)h(UC)2195 3221 y(Berk)o(ele)o(y)l(,)19
b(2004.)2056 3327 y([12])29 b(E.)18 b(A.)g(Lee.)29 b(Ov)o(ervie)n(w)21
b(of)d(the)i(Ptolemy)f(Project.)31 b(T)-5 b(echnical)22
b(report,)d(T)-5 b(ech)2195 3401 y(Memo)17 b(UCB/ERL)g(M03/25,)h(UC)f
(Berk)o(ele)o(y)l(,)i(2003.)2056 3507 y([13])29 b(E.)15
b(A.)g(Lee)g(and)i(D.)d(G.)h(Messerschmitt.)23 b(Static)18
b(scheduling)g(of)e(synchronous)2195 3582 y(data)k(\003o)n(w)f
(programs)g(for)f(digital)j(signal)f(processing.)30 b
Fa(IEEE)17 b(T)l(r)o(ansactions)2195 3656 y(on)g(Computer)o(s)p
Fk(,)h(January)h(1987.)2056 3762 y([14])29 b(R.)20 b(L.)g(Mattson,)h
(J.)e(Gecsei,)j(D.)d(R.)h(Slutz,)i(and)e(I.)g(L.)f(T)n(raiger)l(.)36
b(Ev)n(aluation)2195 3836 y(techniques)20 b(for)d(storage)h
(hierarchies.)27 b Fa(IBM)17 b(Systems)h(J)n(ournal)p
Fk(,)g(1970.)2056 3942 y([15])29 b(P)-7 b(.)18 b(K.)f(Murthy)i(and)g
(S.)f(S.)f(Bhattacharyya.)33 b(A)18 b(Buf)n(fer)i(Mer)o(ging)f(T)-5
b(echnique)2195 4017 y(for)29 b(Reducing)i(Memory)e(Requirements)i(of)d
(Synchronous)i(Data\003o)n(w)2195 4091 y(Speci\002cations.)51
b(In)24 b Fa(International)j(Symposium)f(on)e(System)h(Synthesis)p
Fk(,)2195 4166 y(1999.)2056 4271 y([16])k(P)-7 b(.)15
b(K.)f(Murthy)i(and)g(S.)f(S.)f(Bhattacharyya.)25 b(Buf)n(fer)16
b(Mer)o(ging)h(\227)f(A)e(Po)n(werful)2195 4346 y(T)-5
b(echnique)29 b(for)d(Reducing)i(Memory)f(Requirements)i(of)d
(Synchronous)2195 4421 y(Data\003o)n(w)d(Speci\002cations.)39
b(T)-5 b(echnical)23 b(report,)f(Inst.)e(for)h(Adv)l(.)f(Computer)2195
4496 y(Studies,)e(UMD)f(Colle)o(ge)i(P)o(ark,)e(2000.)2056
4601 y([17])29 b(T)-5 b(.)16 b(A.)g(Proebsting)j(and)f(S.)e(A.)g(W)-5
b(atterson.)25 b(Filter)19 b(Fusion.)24 b(In)17 b Fa(POPL)p
Fk(,)e(1996.)2056 4707 y([18])29 b(J.)16 b(Sermulins.)25
b(In)17 b(preparation.)27 b(Master')l(s)19 b(thesis,)e(MIT)f(CSAIL,)g
(2005.)2056 4812 y([19])29 b(R.)24 b(Stephens.)47 b(A)23
b(Surv)o(e)o(y)h(of)g(Stream)h(Processing.)47 b Fa(Acta)24
b(Informatica)p Fk(,)2195 4887 y(34\(7\),)17 b(1997.)2056
4992 y([20])29 b(D.)d(T)-5 b(ennenhouse)28 b(and)f(V)-9
b(.)26 b(Bose.)54 b(The)27 b(SpectrumW)-5 b(are)28 b(Approach)g(to)2195
5067 y(W)m(ireless)19 b(Signal)f(Processing.)25 b(W)m(ireless)19
b(Netw)o(orks,)e(1999.)2056 5172 y([21])29 b(W)-6 b(.)28
b(Thies,)i(M.)e(Karczmarek,)j(and)f(S.)f(Amarasinghe.)65
b(StreamIt:)31 b(A)2195 5247 y(Language)26 b(for)f(Streaming)h
(Applications.)51 b(In)25 b Fa(Pr)m(oc.)f(of)h(the)g(Int.)f(Conf)o(.)
2195 5322 y(on)17 b(Compiler)i(Construction)g(\(CC\))p
Fk(,)e(2002.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
