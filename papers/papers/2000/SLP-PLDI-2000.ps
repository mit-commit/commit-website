%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: main.dvi
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips main.dvi -o main.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.04.23:2139
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (main.dvi)
@start
%DVIPSBitmapFont: Fa cmtt9 9 9
/Fa 9 120 df<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C712
07A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0
FF6CB612806C15C07E000313F1C69038807F8022207C9F27>97 D<EB0FFF017F13C048B5
12E04814F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127E
A2007F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0F
F81D207B9F27>99 D<130F497E497EA46D5A6DC7FC90C8FCA7383FFF80487FA37EEA000F
B3A4007FB512F0B6FC15F815F07E1D2F7BAE27>105 D<397F07C01F3AFF9FF07FC09039
FFF9FFE091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FF
C3FF486C01E3138001F913E701F813E36C4801C313002920819F27>109
D<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0393F8007F0EB00034814
F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F8007F0A2391FE01FE0390F
F03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27>111
D<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC
383FFFF06C13FC000713FF00011480D8000F13C09038003FE014070078EB03F000FC1301
A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C207B9F27>115
D<133C137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE6D13FC1483
ECFFF86D13F06D13E0010313C0010013001F297EA827>I<3A7FFC0FFF80486C4813C0A3
6C486C13803A07C000F800EBE00100035CA2EBF00300015CA2EBF80700005CA390387C0F
80A36D48C7FCA3EB3F3FEB1F3EA214FE6D5AA36D5AA26D5A22207E9F27>118
D<3A7FFE07FFE000FF15F06D5A497E007F15E03A0F80001F00A36D5B0007143EA414F0EB
C1F83903E3FC7CA4EBE79EA200011478A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E0
24207F9F27>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmtt8 5 4
/Fb 4 110 df<EA03E0EA0FF8487EEA1E3CEA380EEA780FEA7007A238E00380A8EAF007
00701300A2EA780FEA3C1E6C5AEA1FFC6C5AEA03E011197E9816>48
D<12035A5AA25AB4FCA212F71207AEEAFFF8A30D197B9816>I<137013F8A313701300A3
EA0FF8121F120FEA0038B3EA6078EAF0F0EAFFE0EA7FC0EA3F800D237E9916>106
D<38FBC78038FFEFC0EBFFE0EA3E7CEA3C78A2EA3870A938FE7CF8A31512809116>109
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr5 5 2
/Fc 2 51 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi5 5 8
/Fd 8 119 df<137F3803FF80380781C0EA0E005A5A38780780387FFF00EAFFF800F0C7
FCA3127014406C13E0383C03C0380FFF00EA07F813127C911C>101
D<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C01203EA0780A3EA0F
001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105 D<3A0F01F807E03A3F87FE
1FF83A33CE1F387C3A63D80F603CD8C3F013C001E01380D803C01300A22607801E5BA3EE
F04048484814C0ED01E0EEE18016E3001E90397800FF00000C0130137C2A127D9133>
109 D<380F03F0383F87FC3833DC1EEA63F8EAC3F013E0EA03C0A248485AA3EC7820D80F
00136014F015C014F1001EEB7F80000CEB3E001B127D9125>I<3803C0F8380FE3FE380C
FF0F3918FC07803830F80313F01200A23801E007A3EC0F00EA03C0141E6D5A6D5A3807BF
E0EB8F800180C7FCA248C8FCA4EA7FE012FF191A7F911F>112 D<380F07E0383F8FF838
33D81CEA63F038C3E03CEBC07C1203143838078000A448C7FCA4121E120C16127D911C>
114 D<137E3801FF80EA0381380703C0380E0780EB0300EA0F80EA07F86CB4FC6C1380EA
000FEA3003127812F8EB0700EAF00EEA7FFCEA1FF012127C911C>I<380F8038381FC07C
EA39E00061133C141C00C1130CEA03C0A21418EA0780A214301470146014C03803C38038
01FF00EA00FC16127D911E>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy5 5 1
/Fe 1 49 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278A21270A2
5AA20A157D9612>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx7 7 16
/Ff 16 120 df<EBFFF0000713FE486D7E391FE03FE06E7E140F6E7EA2EA0780C7FCA2EB
3FFF0003B5FC380FFE07EA3FE0EA7F80EAFF005AA36C130F141F387FC07F3A3FFFFBFFC0
000F13E100011300221A7E9925>97 D<EB1FFC90B51280000314C0390FF81FE0EA1FE0EA
3FC01380127FEC078048C8FCA86C7EA26C6C13F0EBE001D81FF013E0380FFC070003B512
C0C61400EB1FF81C1A7E9921>99 D<913807FF80A3EC007FABEB1FF890B5FC000314FF38
0FF807381FE00148487E49137F127FA248C7FCA87E7F003F14FF6D5A6C6C5A380FF80F00
03B612F8C6EBFE7FEB1FF025287EA72A>I<EB3FF83801FFFE48EBFF80390FF83FC0391F
E007E0383FC003018013F0007F1301010013F85AA290B5FCA390C8FCA36C7EA2003F1478
6C7E6C6C13F83907F807F06CB512E0C614C090381FFE001D1A7E9922>I<EB03FE90381F
FF80017F13C03901FF1FE0EA03FE13FCEA07F8A2EC0FC091C7FCA5B512F0A3D807F8C7FC
B3A2387FFFC0A31B287EA717>I<EAFFF0A3120FABEC1FE0ECFFFC01F17F9038F7C1FFEB
FF0049EB7F805B5BA25BAEB53807FFF8A325287DA72A>104 D<EA0780EA0FC0EA1FE0EA
3FF0A4EA1FE0EA0FC0EA0780C7FCA5EAFFF0A3120FB3A2EAFFFEA30F297DA815>I<EAFF
F0A3120FB3B0B5FCA310287DA715>108 D<39FFE01FE0ECFFFC01E17F390FE7C1FFEBEF
0001EEEB7F8013FC5BA25BAEB53807FFF8A3251A7D992A>110 D<EB1FFC90B57E000314
E03907F80FF0390FE003F8391F8000FC003F8048C7127FA3481580A76C15006D5B003F5C
EBC0016C6C485A390FF80FF80003B512E0C61480D91FFCC7FC211A7E9926>I<39FFF07F
C09038F3FFF890B512FE000F903880FF809039FC007FC049EB3FE049131FED0FF0A216F8
1507A6150F16F0A2ED1FE06D133F01FEEB7FC09039FF01FF00ECFFFE01F313F89038F07F
C091C8FCA8B5FCA325257E992A>I<38FFE0FCEBE1FF01E71380000FEBBFC0EBEE3F13FC
A213F8EC0F0091C7FC5BADB57EA31A1A7E991F>114 D<3801FFCE000F13FE123F387E00
7E007C133E48131EA26C90C7FCEAFFE0EBFF8014F06C7F6C13FE000F7F1203C66C138013
0138F0001F140F7E7E6CEB1F0038FF807EEBFFFC14F000E013C0191A7E991E>I<1378A4
13F8A21201A212031207121FB512FCA33807F800AD141EA5143E3803FC7C3801FFF86C13
F0EB3FC017257FA41D>I<3AFFF007FF80A3000FEB007FB015FFA25C3807F8076CB5EA7F
F86C13FC38003FF0251A7D992A>I<3CFFFC1FFF03FF80A33C1FE003F8007C00D80FF06D
1378140701F86D13F800075ED9FC0F13010003027F5B141F9039FE1E3F8300015E9039FF
3C1FC76C5E027C13CF90277FF80FEFC7FCA24A6CB4FC013F5CA26D486C5AA2ECC001010F
5C6D486C5A311A7E9936>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy7 7 21
/Fg 21 107 df<B712FEA327037A8F34>0 D<1238127C12FEA3127C123807077A9114>I<
0060140600F0140E0078141E6C143C6C14786C14F039078001E03903C003C03901E00780
3900F00F00EB781E6D5A6D5A6D5A6D5A6D5A497E497EEB1E78497E497E497E3901E00780
3903C003C039078001E048C712F0001E147848143C48141E48140E006014061F1F769D34
>I<B812E0A27ECBFCABB812E0A3CBFCAB007FB712E0B8FCA22B1F7C9D34>17
D<12E012F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00FEEC3F80EC0F
E0EC03F8EC00FEED3F80ED0FE0ED03F8ED00FE163E16FEED03F8ED0FE0ED3F80EDFE00EC
03F8EC0FE0EC3F8002FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03F8EA0FE0EA3F80007E
C9FC12F812E0CAFCAB007FB612FCB712FEA227357AA734>21 D<1303497E91CBFCA25B13
0E131E131C133C5B5B485A485AEA0F80007FB91280BAFC7ED80F80CBFCEA03C06C7E6C7E
13787F131C131E130E130F7FA2806DCBFC391F7C9D42>32 D<176017F01770A217781738
173C171C171E83717E717E717EEF00F8BAFC19801900CB12F8EF01E04D5A4D5A4DC7FC17
1E171C173C173817781770A217F01760391F7C9D42>I<49B5FC130F133F01FFC7FCEA01
F8EA03E0EA078048C8FC121E121C123C123812781270A212F05AA2B7FCA300E0C8FCA27E
1270A212781238123C121C121E7E6C7EEA03E0EA01F86CB4FC013FB5FC130F130120277A
A12D>50 D<150EA2151E151C153C1578157015F015E0140115C0140315801407EC0F0014
0E141E141C143C14381478147014F0495A5C13035C130791C7FC5B131E131C133C133813
78137013F05B1201485A5B120790C8FC5A120E121E121C123C5A127012F05A12601F3576
A800>54 D<0060156000E015E06C1401007015C0A20078140300381580003C1407001C15
00001E5C000E140EA2000F141E6CB512FCA26C5C9038C0007800011470A26D13F000005C
EBF00101705BA2EB780301385BEB3C07011C90C7FCEB1E0FEB0E0EA2EB0F1EEB071C14BC
EB03B814F86D5AA36D5AA223297FA726>56 D<B612F8A3C81238AF003FB512F85AA2C812
38B0B612F8A31D287CA726>I<140C141CA2143CEB3FB8EBFFF8EA03E03807807C380F00
7E001E13FF001C13E7003C1480A2D87C0113C0007813C3A2130300F8EB83E0A213071403
A2130F130EA3131E131CA2133C1338A21378D8787013C0A2387CF00713E0003C1480A200
1FEB0F0013C0000F131E00075B3803E0F8EBFFF03807BF8090C8FCA31B317DAC22>59
D<007FB712E0B8FC7EC7000EC8FCB3B214062B287CA734>62 D<0060153000E01570B3A7
6C15F0007015E0007814016CEC03C0001FEC0F80D80FC0EB3F003907F801FE0001B512F8
6C6C13E0010F90C7FC24247CA22D>91 D<146014F0A2497EA2497E149CEB079E140EEB0F
0FEB0E07011E7FEB1C03013C7FEB380101787FEB700001F07F4913700001147849133800
03143C49131C0007141E90C7120E48140F000E80001E1580001C1403003C15C000381401
007815E00070140000F015F0481570163024247CA22D>94 D<00E0153016706C15F00070
15E000781401003815C0003C1403001C1580001E1407000E1500000F5C6C140E6D131E00
03141C6D133C000114386D1378000014706D13F001705BEB780101385BEB3C03011C5BEB
1E07010E90C7FCEB0F0FEB070E149EEB039C14FC6D5AA26D5AA2146024247CA22D>I<14
7EEB03FEEB0FE0EB1F00133E5BB35BA2485AEA07E0EAFF8000FCC7FCB47EEA07E0EA01F0
6C7EA2137CB37F7FEB0FE0EB03FEEB007E173B7BAB22>102 D<12FCB47EEA0FE0EA01F0
6C7E137CB37FA27FEB0FC0EB03FEEB007EEB03FEEB0FC0EB1F00133EA25BB35B485AEA0F
E0EAFF8000FCC7FC173B7BAB22>I<1306130E131E131CA2133C13381378137013F013E0
120113C0A212031380120713005A120EA2121E121C123C123812781270A212F05A7E1270
A212781238123C121C121E120EA2120F7E1380120313C01201A213E0120013F013701378
1338133C131CA2131E130E13060F3B79AB1B>I<12E0A27E1270A212781238123C121C12
1E120EA27EA21380120313C0120113E01200A213F0137013781338133C131CA2131E130E
131E131CA2133C13381378137013F013E0A2120113C012031380120713005AA2120E121E
121C123C123812781270A212F05AA20F3B7CAB1B>I<12E0B3B3B3A5033B78AB14>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi7 7 19
/Fh 19 119 df<1238127C12FEA3127C123807077A8614>58 D<1238127C12FE12FFA212
7F123B1203A31206A3120C121812381270122008127A8614>I<160E163E16FEED03F8ED
0FE0ED3F80EDFE00EC03F8EC0FE0EC3F8002FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03
F8EA0FE0EA3F8000FEC9FC12F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8
EB00FEEC3F80EC0FE0EC03F8EC00FEED3F80ED0FE0ED03F8ED00FE163E160E27277AA134
>I<EC0180140314071500A25C140E141E141CA2143C143814781470A214F05CA213015C
13035CA2130791C7FC5B130EA2131E131C133C1338A21378137013F05BA212015B12035B
A2120790C8FCA25A120E121E121CA2123C123812781270A212F05AA2193B7CAB22>I<12
E012F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8EB00FEEC3F80EC0FE0EC
03F8EC00FEED3F80ED0FE0ED03F8ED00FE163E16FEED03F8ED0FE0ED3F80EDFE00EC03F8
EC0FE0EC3F8002FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03F8EA0FE0EA3F8000FEC9FC
12F812E027277AA134>I<013FB512F816FF903A01FC001FC04AEB07E0EE03F001031401
A24A14F8A2130717F04A130317E0010F1407EE0FC04AEB1F80EE7E00011F495A91B512F0
A291388001FC013FEB007E8291C7EA1F80160F4915C0A2137EA213FEEE1F805BEE3F0000
01153E16FE49EB01F84B5A0003EC1FC0B7C7FC15F82D287DA732>66
D<013FB512F816FF903A01FC001FC04AEB07E0EE01F0010315F816005CA2130716015CA2
010FEC03F0A24AEB07E0EE0FC0011FEC1F80EE3E0091388001FC91B512E093C7FCD93F80
C8FC91C9FCA35B137EA313FE5BA312015BA21203B512C0A22D287DA72A>80
D<EB1F80EB7FC0EBF0E73803C03FEA078048487EA2121E003E133E123C127CA2485BA448
5B1530A3903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E001C1B7C9924
>97 D<EB01F0EB07FC90381E0CE0EB3C071378EBF003EA01E0A20003EB07C013C01207A2
390F800F80A49038001F00A4143E3807807E14FE3803C3BE6CB45AEA007C1300A25CA212
38387C01F012FC495A48485A38701F80D83FFEC7FCEA0FF01B267E9920>103
D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA
01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11287DA6
17>105 D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C1318EB303E13
6013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC12FC133E
485AEA70F8EA7FE0EA1F80193380A61B>I<137CEA0FFCA2EA00F8A21201A213F0A21203
A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2EA7C18A3EAF8
30A21320EA786013C0EA3F80EA0F000E297EA715>108 D<3B07801FC007E03B0FE07FF0
1FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F005B49133E00C14A
133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F8003E003E060A218C0933801
E180271F0007C013E3933800FF00000E6D48137C341B7D993B>I<3907801FC0390FE07F
F03918F0E0F83930F1807CEBFB00D860FE133C5B5B00C1147C5B1201A248485BA34A5AEA
07C01660EC03E0A23A0F8007C0C0A2EDC180913803C300D81F0013C7EC01FE000EEB00F8
231B7D9929>I<9038F007C03901FC1FF039031E78780006EBE03C90381FC01C000CEB80
1E14005B0018141F133E1200137E153E137CA213FC157C5B1578000114F0A2EC01E0EC03
C03903FC07809038FE1F00EBE7FCEBE1F0D807E0C7FCA25BA2120FA25B121FEAFFF8A220
25809922>112 D<EB0FE0EB7FF8EBF03C3801C00E0003131E3807803EA2143C000F1318
EBE0006CB4FC14C06C13E06C13F06C13F813071301EA3C00007E1378A24813F05A387001
E0EB03C0383C0F80381FFE00EA07F8171B7C991F>115 D<131C133EA25BA45BA4485AB5
12E0A23801F000485AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA
1F1CEA0FF8EA03E013267EA419>I<EA03E0486C1338D80C78137CEA187C00305CA21260
5B00C0495AA2EA01F0A24A5AEA03E0A34848485AEDC180A391380F8300A20003131F9038
E037863901F0E7CE3900FFC3FC90383F00F0211B7D9927>I<3903E001C03907F003E038
0C7807EA187C0030130314011260EBF80000C014C0A2EA01F0A2EC0180EA03E0A2EC0300
EA07C0A21406A25CA200035B6D5A3801F0E06CB45A013FC7FC1B1B7D9921>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmss8 7 28
/Fi 28 123 df<90383E07C0137F13FF5AEA03E301C1C7FCEA07C0A9B5EA07C0A4EA07C0
B3A41A297FA821>12 D<12FCB3B2B61280A419287BA722>76 D<B512F014FE8015C039FC
003FE0EC07F01403EC01F8140015FCA2157CA215FCA215F81401EC03F01407EC3FE0B612
C015005C14F000FCC8FCB01E287BA727>80 D<EB3FC03801FFFC000713FF481480381FC0
7F383F000F007EEB0700007C7F487F91C7FCA47E127E127FEA3FC013FE381FFFC06C13F8
00037FC67FEB1FFF010113809038003FC0140F140715E01403A412400060EB07C0127000
F8EB0F8000FE131F39FFC07F00387FFFFE001F5B000713F038007F801B2A7DA822>83
D<EA01FCEA07FF001F13804813C0383E07E0383803F0EA3001002013F8C7FCA5131FEA01
FF120FEA1FFEEA3F80EA7E0012F8A31301EAFC03EA7E0FEA7FFFEA3FFEEA1FF8380FE000
151D7D9B1E>97 D<12F8AD133FEBFFC000FB13E0B512F0EB03F838FE00FC48137C48137E
143EA2141FA8143EA2147E6C137C38FE01F8EAFF07EBFFF000FB13E000F9138038007E00
18297BA720>I<EB7F803801FFE04813F84813FC380FC07C381F001C003E130814005AA3
5AA8127CA2007E1304003E130C6C131C380FC0FC13FF000313F86C13E038007F80161D7E
9B1B>I<141FAD13FE3803FF9F4813DF4813FFEA1FE0383F803F383E001F127E127CA25A
A8127CA2127E003E133F003F137F381FC1FF6CB5FC6C13DF6C131F3800FC0018297EA720
>I<137E3801FF80000713C04813E0381FC3F01300003E13785A14380078133C12F8B512
FCA400F0C7FC7EA31278127C123C003E13046C131CEBC0FCEA0FFF000313F86C13E03800
7F00161D7E9B1B>I<EB1F80EB7FE013FF5AEBF0603803E020EBC0001207A8B5FCA4EA07
C0B3A413297FA813>I<90387C03C03901FF3FE0000713FF5A903883E000381E00F0A248
1378A66C5BA2380F83E013FF485B001D90C7FCEA3C7C90C8FCA2123E381FFFE014FC6C7F
487F481480387E003F48EB0FC0481307A36C130F007EEB1F80393F807F00381FFFFE6C5B
000313F0C613C01B287E9A1F>I<12F8AD133FEBFFC000F913E000FB13F0EAFF8338FE01
F813005AA25AB215287BA720>I<12FCA61200A9127CB3A806297DA80E>I<13FCA61300A9
137CB3AEEA40FCEAF1F812FF13F0EA7FE0EA0F800E3583A810>I<12F8AE14FCEB01F8EB
03F0EB07E0EB0FC0EB1F80EB3F00137E5BEAF9F8EAFBF0B47E7FA2133E487E487E00F813
80EB07C0130314E0EB01F0EB00F8A2147C143E17287BA71E>I<12F8B3B3A405287CA70E>
I<90393F801FC03AF8FFE07FF000F99038F0FFF800FB01F913FC39FF83FBC13AFE00FF00
7C167E48017E133EA248137CB2271B7B9A32>I<133F38F8FFC000F913E000FB13F0EAFF
8338FE01F813005AA25AB2151B7B9A20>I<133F3801FFE0487F487F380FC0FC381F807E
48487E003E7F48EB0F80A20078130700F814C0A8007CEB0F80A2007E131F6CEB3F00381F
807EEBC0FE6CB45A000313F06C5BD8003FC7FC1A1D7E9B1F>I<133F38F8FFC000FB13E0
B512F0EB03F838FE01FCEAFC0048137E143EA2141FA7143F143EA2147E6C13FC38FE01F8
EAFF07EBFFF000FB13E000F9138038F87E0090C7FCAA18267B9A20>I<133CEAF0FC12F1
12F312F713E0EAFF8013005A5AA25AB00E1B7B9A15>114 D<EA03FE380FFF80003F13E0
A2EA7E0338FC00C0481300A47EEA7F80EA3FFC6CB4FC6C13806C13C038007FE01307EB03
F01301A21240126038F003E0EAFE07B512C06C1380001F1300EA03FC141D7E9B18>I<EA
07C0A7B512C0A43807C000B1EBE040EBE1C03803FFE0A26C13803800FC0013227FA016>
I<00F813F8B3A213011303EAFC0FEA7FFF13FEEA3FF8381FC000151B7B9920>I<00F8EB
0F807E007CEB1F00A26C131E143EA26C5BA36C6C5AA26C6C5A13C1A200035B13E3A20001
5B13F33800F780A3017FC7FCA3191A7F991C>I<00F8017C133E14FC007C6D133C02EE13
7C1301003E157802CF13F8A21303001F9038C781F014871307D80F8714E0EC83C31403D8
078F14C09038CF01E315E7D803CE1480A2EBDE00D801DC140015F701FC137F5B0000147E
271A7F992A>I<007CEB0FC06CEB1F80003F1400381F803E000F5B6C6C5AEA03E03801F1
F03800FBE0EB7FC05C6DC7FC7F5B80497EEBF3E03801F1F03803E0F83807C078EB807C00
0F7F48487E003EEB0F804814C000FCEB07E01B1A80991C>I<387FFFFCA314F8EA0001EB
03F0EB07E0EB0FC01480131FEB3F00137E5BA2485A485A485A5B120F485A48C7FC127E38
7FFFFCB5FCA3161A7E991B>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmss9 9 23
/Fj 23 121 df<903907E03F80EB1FF8133F137FA2EBFC183801F80891C8FC5B1203ABB5
38F81F80A53803F000B3AA21357FB429>12 D<EB3FC03803FFF0000F13FC487F809038C0
7F80381E001F001814C00010130FC713E01407A6EB03FF137F48B5FC1207001F13C7383F
F007EA7F80EA7E005AA3140F7E007F133FEBC0FF90B5FC7E6C13E76C1387D803FCC7FC1B
247DA225>97 D<12FCB2EB03F8EB1FFEEB7FFF00FDB51280B612C09038E07FE0EB801F90
380007F04813034814F81401A215FC1400A9EC01F8A3EC03F06C13076CEB0FE0EB801F90
38E07FC090B5128000FD140000FC5BEB3FFC380007E01E357AB328>I<EB0FF8EB3FFF90
B512E04814F05A3807F807390FE001E0391FC0006049130048C8FCA2127EA35AA9127EA3
6C14106D1330001F14F0380FE001EBF80F6CB5FC6C14E0C6148090387FFE00EB0FF01C24
7DA222>I<15FCB2EB3F80EBFFF0000313FC4813FE4813FFEBF81F381FE007383FC00113
8048C7FC127EA35AA9127EA3007F1301EA3F801403381FE007380FF81F90B5FC6C13FC6C
13F8C613E090383F80001E357DB328>I<EB1FC0EB7FF848487E487F487F390FF07F8038
1FC01F90388007C0EA3F00EC03E0007E1301A2127C00FCEB00F0B6FCA500F8C8FCA27EA2
127C127EA27E6D13106C6C1370390FE001F0EBF80F6CB5FC6C14E0C6148090387FFE00EB
0FF01C247DA222>I<EB01FCEB0FFF5B5B5BEBFE07EBF801000113005B1203ABB512F0A5
3803F000B3AA18357FB417>I<90391FC00F8090387FF0FF90B612C05A5A2607F07FC7FC
390FC01F80EB800FA248486C7EA76C6C485AA2EBC01F2607F07FC7FCEBFFFE485B5C486C
5AEB1FC090C9FCA37F380FFFFEECFFE06C804814FC48805A397F8003FF007EC77E00FEEC
3F8048141FA46C143F007FEC7F006D5B393FF007FE6CB55A6C5C000314E0C61480D91FFC
C7FC22337EA126>I<12FCB2EB07F0EB3FFE497E90B51280B6FC9038E07FC0EB801F9038
000FE0A2481307A35AB3A41B347AB328>I<12FEA71200AC127EB3AF07347BB313>I<EB3F
80A790C7FCACEB1F80B3B3A5EA403F00601300EAF8FFB45AA26C5AEA1FF8EA07E0114484
B314>I<12FCB3EC0FF0EC1FE0EC3FC0EC7F80ECFF00495A495A495A495A495A495A495A
49C7FC12FDB57EA280EBE7E013C7EB83F0EB01F800FE7FEAFC00147E801580141FEC0FC0
EC07E0A2EC03F0EC01F815FC1E347AB326>I<12FCB3B3B006347AB313>I<D907F0EB3F80
3BFC3FFE01FFF0496C4813F890B5008713FCB6129F903AE07FDF03FE9039801FFC00496C
48137FA2486D48133FA3485CB3A430227AA13D>I<EB07F038FC3FFE497E90B51280B6FC
9038E07FC0EB801F9038000FE0A2481307A35AB3A41B227AA128>I<EB07F0EB3FFE90B5
7E488048803907F80FF0390FE003F848486C7EEB800048C7127EA2007E80A2007C8000FC
1580A86C143F007E1500A2007F5C6C147E6D13FE6C6C485A6C6C485AEBF80F6CB55A0001
14C06C5CD93FFEC7FCEB07F021247EA226>I<EB03F838FC1FFEEB7FFF00FDB51280B612
C09038E07FE0EB801F9038000FF048130748EB03F8A2140115FC1400A8140115F8A21403
15F06C13076CEB0FE0EB801F9038E07FC090B5128000FD140000FC5BEB3FFCEB07E090C8
FCAE1E317AA128>I<EB03C0EAF81F133F13FF12F912FBEBFC00EAFFF013C05B90C7FCA2
5AA35AB312227AA11A>114 D<EBFF80000713F04813FC487F5AEA7F00007E131C48130C
91C7FCA47EEA7F8013F86CB47E6C13E06C13F800037FC67FEB0FFF1300EC3F80A2141FA3
12400060133F00781400B413FFEBFFFE5C6C5B000F5B0001138019247EA21D>I<EA03F0
AAB512FEA53803F000B3A37F14023801FC1E90B5FCA27EEB7FFCEB3FC0182C7FAA1C>I<
00FCEB07E0B3A7140F141F6C133F6C13FF6CB5FC14F76C13E76C1307D807F8C7FC1B227A
A028>I<00FC143F007E143E157E127F6C14FCA27F001FEB01F8A2390FC003F0A33907E0
07E0A2D803F013C0140FA2D801F81380141FA2D800FC13005CEB7C3E137E147EEB3E7CA3
EB1F7814F86D5AA320217FA023>I<007E143F6C5C6C6C13FE6D5B6C6C485A0007495A6C
6C485A3801F80FD800FC5B90387E1F80D97F3FC7FCEB3F7E6D5A6D5A13076D5AA2497E49
7E131FEB3F3EEB3E1F017C7F9038FC0FC048486C7E48486C7EEA07E06E7E48486C7E4848
137E48C7127F48EC3F8000FEEC1FC0222180A023>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmmi6 6 1
/Fk 1 111 df<000F13FC381FC3FF3931C707803861EC0301F813C0EAC1F0A213E03903
C00780A3EC0F00EA0780A2EC1E041506D80F00130C143C15181538001EEB1C70EC1FE000
0CEB07801F177D9526>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr6 6 1
/Fl 1 50 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi9 9 3
/Fm 3 116 df<123C127E12FFA4127E123C08087A8715>58 D<123C127EB4FCA21380A2
127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>I<EB01FCEB
0FFF90383E03C090387800E04913603901E001E014030003130713C013E0EC03806DC7FC
13FF14F014FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700FE1480A3EC0F00
5A00C0131E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>115
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy9 9 3
/Fn 3 106 df<EB1FC0EBFFF8487F000713FF4814804814C04814E0A24814F0A2B612F8
AA6C14F0A26C14E0A26C14C06C14806C1400000113FC6C5BEB1FC01D1E7CA126>15
D<EB0180EB03C01307A21480130FA2EB1F00A2131E133EA25BA2137813F8A2485AA25B12
03A2485AA25B120FA248C7FCA2121E123EA25AA2127812F8A41278127CA27EA2121E121F
A26C7EA212077FA26C7EA212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A21307
14C0A21303EB0180124A79B71E>104 D<126012F07EA21278127CA27EA2121E121FA26C
7EA212077FA26C7EA212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0
A41480130FA2EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A2485AA25B120FA2
48C7FCA2121E123EA25AA2127812F8A25A1260124A7CB71E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx9 9 28
/Fo 28 122 df<DA07FFEB1FF0027F9038E1FFFC0103B500F77F903B0FFE01FFF8FF9026
1FF00301E1138090267FE00713C1D9FFC01481148048160102006E130081183C6F91C7FC
A7B9FCA40001D9000190C8FCB3A7003FD9F83F13FCA439347FB334>11
D<EC07FF91B512E001078090391FFC01FC90383FE0009039FFC001FE48EB80031400484A
7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA43903FE0001B3A7277FFFF03F13F8A42D
347FB331>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>46
D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317AB02C>49
D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380D8FFC014
C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3FC04A5A
02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B4848130748B6FC
5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F01FF83907C0
0FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C485AD803805BC7FC4A5A4A
5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13C0A2000F
15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF01FFE6CB5
12F8000314E0C61480D91FFCC7FC23327CB02C>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0
EA3FC0EA0F00C7FCA9120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>
58 D<B712FCEEFFC017F817FEC69039E0003FFF040313C004007F717EEF1FF8717E8417
07848319808319C0A419E0AB19C0A419805FA219004D5A170F604D5A4D5AEFFFE004035B
041F5BB848C7FC17F817C004FCC8FC3B337DB244>68 D<B812FEA4C69038E0000FEE01FF
82838383A283A3DB01E013801707A4030390C7FCA21507151F91B5FCA4ECE01F15071503
18F01501A2EF01E0A392C7FCA21703A2EF07C0A2170F171F173F17FF1607B91280A43433
7DB23A>I<B712F8EEFF8017E017F8C69039E0007FFCEE0FFE707E701380A27013C0A218
E0A718C0A24C1380A24C13004C5AEE7FFC91B612F017C04CC7FC02E0C9FCB3B612E0A433
337DB23C>80 D<B712E016FEEEFFC017F0C6D9E00013FCEE1FFEEE07FF707FA2707FA284
A660A24C5B95C7FC4C5AEE1FFCEEFFF891B612C094C8FC83DAE0037F03007FEE3FF08370
7EA2707EA583A4193CA2188082F0C07CB6D8E003147870EBE1F070EBFFE0053F13C0CA00
0313803E347DB242>82 D<D90FFC137090397FFF80F048B512E1000714FB390FF803FF39
1FE0007F4848133F49130F007F140790C7FC1503481401A36D1300A27F6D140013F8387F
FFC014FCECFFE06C14F86C14FE816C1580000315C06C15E06C6C14F0131F010014F8140F
9138007FFC153F151F150F00F01407A21503A27EA216F86C14076C15F07E6DEB0FE001E0
131F01FEEB7FC000FDB61200D8F87F5BD8F01F13F8D8E00113C026357BB331>I<EB7FFE
0003B512E04814F8390FF00FFC391FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC
7FFF010FB5FC90B6FC0003EBF07F000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D
4813E03A3FF80FBFFF000FB5121F0003EBFC0F39007FE00728217EA02B>97
D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512E09039FFF00FF89138C007FC
91380003FE496D7E496D1380A217C0167FA217E0A917C0A216FF1780A26D4913006D495A
9138C007FC9039F3F01FF801E1B512E0D9C07F13809026800FF8C7FC2B347EB331>I<90
3807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2007F6D5A49
6C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807FE133E3903
FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<903803FF80013F13F090B512FC
48EB03FE3907FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF150790B6
FCA301C0C8FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01FF807F
806C6CB51200011F13FC010313E024217EA029>101 D<EA03F0487E487E487EA66C5A6C
5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>105
D<EA01FC12FFA4120F1207B3B3A6B512E0A413347DB318>108 D<2703F803FEEB03FE00
FF903B1FFFC01FFFC0027FD9E07F7F913BF81FF0F81FF0903CF9E00FF9E00FF8260FFBC0
EBFBC06CB4486CB4486C7E02001400495CA3495CB2B500E0B500E0B512E0A443217CA04A
>I<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC06CB4486C
7E1400A25BA25BB2B539E07FFFF0A42C217DA031>I<903803FF80011F13F090B512FE48
EB01FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300FF
15FEA8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF01
FF006CEBFFFE013F13F80103138027217EA02C>I<3901FC07FC00FF90387FFF8001FDB5
12E09039FFF01FF89138C007FC000790380003FE4980496D1380A26F13C0A3EE7FE0A9EE
FFC0A34B1380A26D4913006D495A9138C00FFC9138F03FF801FDB512E0D9FC7F1380DA0F
F8C7FC91C9FCABB512E0A42B307EA031>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC
9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA0
24>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FC
EBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037E
A26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<13
3CA5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE
078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA400
0F140700071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807
FE032C217DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5A
A2ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378EC
FEF801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I<B539C007FFC0A4
D807FEC7EAF80000035D6D13016C5D14806C4A5AA2ECC007017F5CECE00F013F91C7FC6E
5A011F131EECF83E010F133CECFC7C01071378ECFEF801035B14FF6D5BA26D5BA26E5AA2
6EC8FCA2141EA25CA2147C003E1378007F13F8486C5A1381EB83E0EB87C0495AD87F3FC9
FCEA3FFEEA1FF8EA07E02A307EA02F>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmtt8 7 38
/Fp 38 126 df<123812FEB3A4127C1200A6123812FEA51238072574A41F>33
D<130C133E137E13FCEA01F8EA03F0EA07E0EA0FC01380121F13005A123E127E127CA212
FCA25AA97EA2127CA2127E123E123F7E1380120F13C0EA07E0EA03F0EA01F8EA00FC137E
133E130C0F2D76A71F>40 D<126012F87E127E7EEA1F80EA0FC0EA07E0120313F0120113
F8120013FC137CA2137EA2133EA9137EA2137CA213FC13F8120113F0120313E01207EA0F
C0EA1F80EA3F00127E5A5A12600F2D7BA71F>I<130E131FAA007FB51280B612C0A36C14
80D8001FC7FCAA130E1A1B7E9E1F>43 D<387FFFFEB6FCA36C13FE18057D931F>45
D<133FEBFFC0487F000713F813E1380F807C48487EA2003E7FA248EB0F80A30078130700
F814C0AA007CEB0F80A3007E131F003E1400A26C133EEB807E6C6C5A3807E1F813FF0001
13E06C5B013FC7FC1A267EA41F>48 D<1330137813F81201A212031207127F12FF12FE12
7C1200B3A4387FFFF0B512F8A26C13F015257BA41F>I<EA01FE3807FFC04813E0003F13
F8EB83FCEA7E0048137E143E143FA2141FA21278C7FC143FA2143E147E14FE14FCEB01F8
EB03F0EB07E0EB0FC0EB1F80EB3F0013FE485A485A485A380FE00E381F801FEA3F0048B5
FCB6FCA26C13FE18257DA41F>I<48B4FC000713C0001F13F04813F8EB83FCEA7E00147E
143EA2123C1218C7127EA214FC1301EB03F8EBFFF04813E0A26C13F8EB03FCEB00FE147E
143FA2141F123012FCA2143FA2147E6C13FE387F83FC383FFFF86C13E0000713C0000113
0018267DA41F>I<EB03E0497E130FA2131F133E133C137C13F8A2EA01F013E01203EA07
C01380120FEA1F00A2123E123C127C5AB6128015C0A26C1480C7EAF000A790381FFF8049
13C0A26D13801A257EA41F>I<EB0FE0EB7FF0EBFFFC12033807F87EEA0FE013C0EA1F80
EA3F00143C007E1300A2127CEAFC7F38FDFFC0B512E014F8EBC1FC130048137EA248133F
A2141FA4127C143F127E003E137E123F381F80FCEBC3F8380FFFF06C13E0000113C03800
7F0018267DA41F>54 D<121E123FEA7F80A4EA3F00121EC7FCA9121E123FEA7F80A4123F
121F120FA2EA1F005A127E5A5A1260092176981F>59 D<140E141F147F14FFEB03FEEB07
FCEB1FF0EB3FE0EBFF80481300EA07FC485AEA3FE0485A48C7FC5A7EEA7FC06C7EEA0FF8
6C7EEA01FF6C1380EB3FE0EB1FF0EB07FCEB03FEEB00FF147F141F140E181F7DA01F>I<
007FB51280B612C0A36C1480C9FCA5007FB51280B612C0A36C14801A0F7E981F>I<1270
12F812FE7EEA7FC06C7EEA0FF86C7EEA01FF6C1380EB3FE0EB1FF0EB07FCEB03FEEB00FF
147F14FFEB03FEEB07FCEB1FF0EB3FE0EBFF80481300EA07FC485AEA3FE0485A48C7FC5A
12F81270181F7DA01F>I<007FB512E0B612F0A338F80F81A40070EB80E000001400B3A5
EBFFF8487FA26C5B1C247FA31F>84 D<EA7FFFB51280A2140000F8C7FCB3B3B5FC1480A2
6C1300112D75A71F>91 D<EA7FFFB51280A27EEA000FB3B3EA7FFFB5FCA26C1300112D7E
A71F>93 D<EA0FFE383FFF804813E080387E03F86D7EEA3C00C7127CEB07FC13FF120712
1F383FFC7CEA7F80EAFE005A5AA26C13FCA2EA7F076CB512C06C14E06C13BF3903FC0FC0
1B197D981F>97 D<EA7F80487EA2127F1207A7EBC7F0EBDFFCEBFFFEECFF809038FC1FC0
EBF00F9038E007E0A29038C003F0A21401A5140313E0EC07E013F09038F80FC09038FC3F
8090B512005CEBDFFC380387E01C2480A31F>I<EB7FE03801FFF8000713FC5AEA1FC0EA
3F00007E137814005AA25AA57EA2007E1338147C6C13FCEA1FC1380FFFF86C13F0000113
E038007F8016197C981F>I<EB03FC497EA21303EB003EA7137E3803FFBE4813FE5AEA1F
C3EA3F00007E137EA248133EA25AA57E147E127E14FEEA3F0113836CB512E0000714F06C
13BF3900FE1FE01C247EA31F>I<137F3801FFC0000713E04813F8EA1FC1383F00FC007E
137C147E5A143EB512FEA314FC00F8C7FC7EA2007E131C007F133E383F807E381FE0FE38
0FFFFC6C13F8000113F038007F8017197D981F>I<EB01FCEB07FF011F13805B141F137E
90387C0F0091C7FCA4387FFFFCB57EA26C5BD8007CC7FCB1383FFFF8487FA26C5B19247F
A31F>I<EC1F809038FC3FC00003B512E0120F4813F7383F87F3903803F1C0397E01F800
EA7C00A4EA7E016C485A1387EBFFE05C91C7FCEA3CFC90C8FCA2123E383FFFE06C13FC48
7F487F397C003F8048EB0FC01407481303A36C1307A2007EEB1F80387F807F391FFFFE00
6C5B000313F0C613C01B287E991F>I<EA7F80487EA2127F1207A7EBC3F8EBCFFC90B5FC
A29038FE1F8013F8EBF00F13E0A213C0AC397FFC3FF839FFFE7FFCA2397FFC3FF81E2480
A31F>I<1370EA01FCA5EA007090C7FCA5EA7FF8487EA2127FEA007CB1387FFFFCB5FCA2
7E16257CA41F>I<EA7FFC487EA2127FEA003EB3AA007FB5FCB61280A26C140019247DA3
1F>108 D<387F83F838FFCFFC90B5FC7E3907FE1F8013F8EBF00F13E0A213C0AC397FFC
3FF839FFFE7FFCA2397FFC3FF81E1980981F>110 D<137E3803FFC04813E04813F0381F
C3F8383F00FC007E137E007C133EA248131FA66C133F007C133EA2007E137E6C13FC381F
C3F8380FFFF06C13E06C13C038007E0018197D981F>I<387FE03F39FFF0FFC001F313E0
EA7FF73801FFE714879038FE03C091C7FC5B5BA35BA9387FFFF0B5FCA27E1B197F981F>
114 D<3803FFE0001F13F05A5AEAFE03EAF80112F038F800E06C1300EAFFC06CB4FC001F
13C06C13E0C613F8EB07FCEA700000F8137C6C133CA26C137C38FF01FCEBFFF814F014C0
0071130016197C981F>I<13E0487EA6387FFFFCB57EA26C5BD801F0C7FCAB1407EC0F80
A2141F13F89038FC3F006CB5FC6D5AEB3FF8EB0FE019207F9F1F>I<387F80FFD8FFC113
80A2EA7FC00007130FAE141F143FEBE07F90B512F86C14FCC6FC90387FC7F81E1980981F
>I<397FE07FE039FFF0FFF0A2397FE07FE0391E000780A4001F130F6C1400130FEB1F8F
EB3FCFA3000713CE1339A2EBB9DEA2EBF0FE00035BA33801E0781C197F981F>119
D<397FE1FF80EAFFF3A2EA7FE13907C0F000EA03E13801E3E0EBF3C06CB45A137F6DC7FC
133E131E133F497E13F7EBF3C03801E1E000037F13C038078078397FE1FF80D8FFF313C0
A2D87FE113801A197E981F>I<14FEEB03FF130FEB1FFEEB3FC01400133EAC137E13FEEA
7FFC12FF13F013FC127FC67E137E133EAC133F14C0EB1FFEEB0FFF1303EB00FE182D7DA7
1F>123 D<EA7F80EAFFE013F86C7EEA01FEEA007E133EAC133F1480EB1FFE14FF130713
1F14FEEB3F801400133EAC137EEA01FEEA7FFC485A13E0EA7F80182D7DA71F>125
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmti7 7 6
/Fq 6 81 df<EB01FCEB07FF90381E0F8090383C03C01370EBF001D801E013E0EA03C0A2
EA0780A2000F130313005AA3003EEB07C0A448EB0F80A40078EB1F0012F8141E143EA214
3C48137C147800705B00785B13016C485AD83E0FC7FCEA0FFEEA03F01B2778A523>48
D<EB01FC903807FF8090380F07C090383C01E090387000F05BD801C2137813C7EA038315
7CEA0703A2D80E0613F8A25B90381C01F013383907F003E03903C007C0C7EA0F80EC3E00
14FCEB01F0EB07E0EB1F80017EC7FC13F8EA01E0D80380137048C7FC120E4814E0003C13
01393FC003C0397FFC07800070B5120038F03FFE38E00FFCEB01F01E277AA523>50
D<017FB512C016F8903903F000FE4A133FEE0F800107EC07C016034A14E01601010F15F0
A25CA2011F15F8A291C7FCA24915F0A2013E1403A2137E17E0017C140717C001FC140F17
805BEE1F000001153EA2495C5E00034A5A4B5A49EB0F80033FC7FC0007EB01FCB612F015
802D287AA733>68 D<90387FFF80A2903803F0005CA21307A25CA2130FA25CA2131FA291
C7FCA25BA2133EA2137EA2137CA213FCA25BA21201A25BA21203A25BA21207B5FCA21928
7BA71A>73 D<90387FFFE0A2D903F0C7FC5CA21307A25CA2130FA25CA2131FA291C8FCA2
5BA2133EA2137EA2137CA201FCEB01E016C05B15030001158015074914005D00035C153E
49137E5D00071307B6FC5D23287AA72B>76 D<017FB512C016F0903903F000FC4A133E82
01071580160F5CA2130F161F5CA2011FEC3F00A291C7127E167C495CED03E0013EEB1FC0
013FB5C7FC15F8017EC9FC137CA313FC5BA312015BA312035BA21207B5FCA229287AA72E
>80 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmr7 7 67
/Fr 67 122 df<14FF010F13C090383F01E090387C00F0EBF001EA01E01203EA07C06E5A
92C7FCA6EC0FF8B6FCA23807C000B3A2486C487E3A7FFC0FFF80A221297FA826>12
D<ECFF80010F13D890383F01F8137CEBF003EA01E0000313013807C000A9B6FCA23807C0
00B3A2486C487E3A7FFC0FFF80A221297FA826>I<130CA3EB7F803803FFE038078C7838
0E0C1C0018130600307F12700060EB018000E0130F141FA300F0EB0F00140600F890C7FC
127EEA7FCCEA3FFC6CB47E6C13E06C13F800017FEA007FEB0FFEEB0C7F141FEC0F801407
127800FC1303A312F800F0140000605B14060030130E0038130C001C1338380F8CF03803
FFC0C690C7FC130CA2192F7DAB21>36 D<D801E01403D807F85CD80E1C5C486C141E486C
6C137C3A7803E001F80070EB7E1F91381FFEF03AF00180C0E015014B5A4B5A93C7FC5D15
1E5D3970030038157800785CD838065B381C0E016C48485A3907F80780D801E090C8FCC7
48133E021EEB7F804AEBE1C091393801C0E0913978038060DAF007133002E01300010115
384948481318EB078014005B131E5B133801786D13384915304914800001020313604848
903801C0E04848903800E1C090C8EA7F806CED3E002D2F7CAB37>I<1306130C13181330
136013E0EA01C0EA0380A2EA07005A120E121EA2121C123CA35AA512F85AAB7E1278A57E
A3121C121EA2120E120F7EEA0380A2EA01C0EA00E0136013301318130C13060F3B7AAB1A
>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0120013F0A213701378A3133CA513
3E131EAB133E133CA51378A3137013F0A213E0120113C0EA0380A2EA0700120E120C5A5A
5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<1238127C12FE12FFA2127F123B1203A31206A3120C121812381270122008127B8613>
I<B5FCA410047F8E16>I<1238127C12FEA3127C123807077B8613>I<EC01801403140715
00A25C140E141E141CA2143C143814781470A214F05CA213015C13035CA2130791C7FC5B
130EA2131E131C133C1338A21378137013F05BA212015B12035BA2120790C8FCA25A120E
121E121CA2123C123812781270A212F05AA2193B7DAB21>I<EB3F803801FFF03803E0F8
3807803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB
0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>I<13381378EA
01F8121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313E0380E03F038
1800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A49
5A5C495A010EC7FC5B5B903870018013E0EA0180390300030012065A001FB5FC5A485BB5
FCA219267DA521>I<13FF000313E0380F01F8381C007C0030137E003C133E007E133FA4
123CC7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C80143F801580
A21238127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C690C7FC19277D
A521>I<1438A2147814F81301A2130313071306130C131C131813301370136013C01201
1380EA03005A120E120C121C5A12305A12E0B612E0A2C7EAF800A7497E90383FFFE0A21B
277EA621>I<0018130C001F137CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FF
E0381F81F0381E0078001C7F0018133EC7FC80A21580A21230127C12FCA3150012F00060
133E127000305B001C5B380F03E03803FFC0C648C7FC19277DA521>I<EB0FE0EB3FF8EB
F81C3801E0063803C01F48485AEA0F005A121E003E131E91C7FC5AA21304EB3FC038FCFF
F038FDC078B4C67E143E48131E141FA2481480A4127CA4003C1400123E001E131E143E6C
133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>I<1230123C003FB512E0A215C0
481480A239700007000060130E140C48131C5C5CC75A5C1301495AA249C7FC5B130E131E
A3133E133CA2137CA413FCA813781B287DA621>I<137F3803FFE0380781F8380E007C48
131E5A801278A3127C007E131EEA3F80EBE03C6C6C5A380FFCF03807FFC06C5BC613E048
7F38079FFC380F07FEEA1E0348C67E48133FEC1F8048130FA21407A315001278140E6C5B
6C5B380F80F03803FFE0C66CC7FC19277DA521>I<137F3801FFC03807C1E0380F007000
1E1378003E7F003C133E007C131EA200FC131FA41580A4007C133FA2123C003E137F121E
380F01DF3807FF9F3801FE1FD8001013001300A2143E123C007E133CA25C5C007C5B3830
03C0381C0780D80FFFC7FCEA03F819277DA521>I<1238127C12FEA3127C12381200AB12
38127C12FEA3127C123807197B9813>I<B812E0A3CBFCABB812E0A32B117D9633>61
D<140EA2141FA34A7EA3EC6FC0A2ECEFE014C7A290380183F0A390380301F8A201067F14
00A249137EA2011C137F01187FA24980013FB5FCA2903960000FC0A201E080491307A248
486D7EA200038115011207D81FC0497ED8FFF890383FFFE0A22B2A7EA931>65
D<B612E015FC3907F0003F0003EC0FC0ED07E01503ED01F016F8A6ED03F016E01507ED1F
C0ED7F0090B512FC819039F0003F80ED07E0ED03F0ED01F8ED00FCA2167EA616FCA2ED01
F8ED03F0ED07E00007EC3FC0B7120015F827287EA72E>I<91387FC002903903FFF80690
390FE01E0E90383F0007017CEB019ED801F0EB00FE4848147E4848143E5B000F151E48C8
FC48150E123EA2007E1506A2127C00FC1500A8127C007E1506A2123EA2003F150C7E6C7E
000715186D14386C6C14306C6C1460D8007CEB01C0013FEB038090390FE01E00903803FF
F89038007FC0272A7DA82F>I<B612F015FE3A07F0003F800003EC07C0ED01F06F7E167C
82A282EE0F80A3EE07C0A317E0A917C0A2160F1780A2EE1F00A2163E5E5E4B5AED07E000
07EC3F80B600FEC7FC15F02B287EA732>I<B712C0A23907F0001F0003EC03E015011500
A21660A31630A215C01600A31401A2140790B5FCA2EBF0071401A21400A492C7FCA9487E
B512E0A224287EA72B>70 D<91387FC002903903FFF80690390FE01E0E90383F0007017C
EB019ED801F0EB00FE4848147E4848143E5B000F151E48C8FC48150E123EA2007E1506A2
127C00FC92C7FCA792387FFFE0127C007E02001300167E123EA2123F7E6C7E6C7EA26C7E
D801F814FEEA007C013FEB039E90390FE00F0E903903FFFC029026007FE0C7FC2B2A7DA8
33>I<B512C0A23807F8006C5AB3B0487EB512C0A212287EA718>73
D<B512E0A2D807F8C8FC6C5AB3A416C0A315011680A31503A21507150FED3F00000714FF
B7FCA222287EA729>76 D<D8FFF0EDFFF06D5C0007EEFE0000035E017CEC037CA26D1406
A26D140CA36D6C1318A26D6C1330A36D6C1360A26D6C13C0A3903900F80180A291387C03
00A2EC3E06A36E5AA2EC0F98A3EC07F0A26E5AEA0780D80FC015FE3CFFFC01C01FFFF0A2
34287DA73C>I<D8FFF0903807FFE07FD803FC9038007E006D143C1618137F6D7E6D7EA2
6D7E6D7E6D7EA26D7E6D7E147FA2EC3F80EC1FC0EC0FE015F01407EC03F8EC01FCEC00FE
A2157FED3F98ED1FD8A2ED0FF815071503A215011500486C1478487ED8FFFC143816182B
287EA731>I<EC7FC0903803FFF890381FC07F90393E000F8001F8EB03E048486D7E4848
6D7E4848147C484880A248C87E481680003E150F007E16C0A2007C1507A200FC16E0A900
7EED0FC0A36CED1F80A26C16006D5C6C6C147E0007157C6C6C5C6C6C495AD800FCEB07E0
013EEB0F8090261FC07FC7FC903807FFFC9038007FC02B2A7DA833>I<B612E015FC3907
F0003F0003EC0FC0ED03E0ED01F016F8150016FCA616F8150116F0ED03E0ED0FC0ED3F00
90B512FC15E001F0C8FCAF487EB512C0A226287EA72D>I<B67E15F03907F000FC000314
3FED0F806F7E82150382A55E15075E4B5A033FC7FC15FC90B512F0A29038F001FCEC007F
6F7E151F82150FA71730A3923807E070486C1560B539C003F0E0923800FFC0C9EA3F002C
297EA730>82 D<90387F80203903FFF06039078078E0380E000E48130748130300781301
0070130012F0A21560A27E1500127C127FEA3FE013FF6C13F06C13FC000313FFC6148001
0F13C0010013E0EC0FF014031401EC00F8A200C01478A46C1470A26C14F06C14E06CEB01
C000EFEB078039E3E01F0038C0FFFC38801FF01D2A7DA825>I<007FB7FCA23A7E003F00
3F0078150F007081006081A200E01680481501A5C791C7FCB3A64A7E013FB5FCA229287E
A72F>I<B539C007FFE0A2D807F8C7EA7E006C48143C1618B3A816386C6C143016706C6C
1460017C14E0017E495A6D495A90260F8007C7FC903807E03E903801FFF89038003FC02B
297EA731>I<B56CEBFFF8A2D807F8C7EA1FC06C48EC0F00160E6C7E160C6D141C000015
18A2017E5CA2017F14706D146080011F5CA26D6C485AA2ECE003010791C7FC14F0010313
06A2ECF80E0101130CECFC1C01001318A2EC7E30A2EC7F70EC3F6015E06E5AA26E5AA36E
C8FCA22D297FA731>I<B56CEB7FF8A2D807FCC7EA1FC06C48EC0F006C6C140E5E6C6C14
18017F14385E6D6C13606D6C13E05E6D6C485A903807F00302F890C7FC01031306903801
FC0E903800FE0C5DEC7F38EC3FB015E0141F6E5AAE4A7E0103B5FCA22D287FA731>89
D<EAFFC0A3EAE000B3B3B1EAFFC0A30A3B7AAB13>91 D<EAFFC0A31201B3B3B112FFA30A
3B7FAB13>93 D<13FE3807FFC0380F03E0381C00F0003E1378003F137C143C143E121EC7
FCA3EB3FFEEA01FF3807F03EEA1FC0EA3F00127EA2481418A3147E127EECDF38393F838F
F0390FFE0FE03903F807C01D1C7E9A21>97 D<EA0F8012FFA2121F120FAAEB81FCEB8FFF
9038BC0FC09038F003E09038C001F0EB800015F815FC157CA2157EA7157CA215FC15F890
38C001F015E090387003C0390E3C0F80390C0FFF00380003F81F297EA725>I<EB3FC0EB
FFF83803E03C3807C00E380F801F381F003F123EA2007E131E007C1300A212FCA7127C12
7E1403123E6C1306EA0F803807C00C3803F0383800FFE0EB3F80181C7E9A1E>I<EC03E0
143FA214071403AAEB3F833801FFE33803E03B3807800F380F0007481303123E127E127C
A212FCA7127CA2127E123E001E1307001F130F390F801FF03903E073FE3801FFE339007F
03E01F297EA725>I<133F3801FFE03803E1F0380F80F8381F007C143E123E007E131E14
1F127C12FCA2B6FCA200FCC7FCA4127C127E1403123E6C1307380F800E3807C01C3803E0
783800FFE0EB3F80181C7E9A1E>I<EB07E0EB3FF0EB7C78EBF0FCEA01E01203EBC07800
0713301400A8B51280A23807C000B3A2487EEA7FFEA216297FA815>I<90387E03E03901
FF9FF03807C3FC380F00F048EBF800001E1378003E137CA6001E1378001F13F86C5BEBC3
E0380DFF80D81C7EC7FC90C8FCA3121E380FFFF014FC6C13FF001F1480393E001FC00078
1307EC03E0481301A40078EB03C0007C13076CEB0F80390FC07E003803FFF838007FC01C
277E9921>I<EA0F8012FFA2121F120FAAEB81FCEB8FFF90389C0F809038B007C013E090
38C003E0A31380AF391FC007F039FFF83FFEA21F287EA725>I<120EEA3F80A5EA0E00C7
FCA7EA078012FFA2121F120FB3121FEAFFF8A20D287EA713>I<EA0F8012FFA2121F120F
ABEC3FF8A2EC1FC01500143C5C14E0EB81C0EB8380018FC7FCEB9F8013BFEBF7C0EBC3E0
EB81F0801380147C80143FEC1F80EC0FC0D81FC013E039FFF83FFCA21E287EA723>107
D<EA0F8012FFA2121F120FB3AFEA1FC0EAFFF8A20D287EA713>I<260F81FC137F3BFF8F
FF03FFC0903A9C0F8703E03B1FB007CC01F0D80FE013D8903AC003F000F8A301805BAF48
6C486C487E3CFFF83FFE0FFF80A2311A7E9937>I<380F81FC38FF8FFF90389C0F80391F
B007C0EA0FE09038C003E0A31380AF391FC007F039FFF83FFEA21F1A7E9925>I<EB3F80
EBFFE03803E0F83807803C48487E001E7F003E1480A248EB07C0A300FC14E0A7007C14C0
A2007E130F003E1480001E1400001F5B380F803E3803E0F86CB45A38003F801B1C7E9A21
>I<380F81FC38FF8FFF9038BC0FC0391FF007E0390FC003F0EB800115F8EC00FCA2157C
157EA7157C15FCA2EC01F801C013F0EC03E09038F007C09038BC1F8090388FFF00EB83F8
0180C7FCA7487EEAFFF8A21F257E9925>I<90383F80603901FFE0E03803F0703807C019
380F800D381F00075A007E1303A2127C12FCA7127C127EA27E6C1307EB800F380FC01B38
03E0733801FFE338007F031300A7EC07F0EC3FFEA21F257E9923>I<380F07C038FF1FF0
EB38F8EA1F71EA0F6113C1EBC0F014005BAF487EEAFFFCA2151A7E991A>I<3803F84038
0FFEC0EA3C07EA7803EA7001EAF000A37E6C1300EA7FC013FC6CB4FC6C1380000713C0C6
13E0130738C003F0130113007EA26C13E0130100F813C038EE078038C7FF00EA81FC141C
7E9A1A>I<13C0A41201A312031207120F121FB512E0A23807C000AC1430A73803E060A2
3801F0C03800FF80EB3F0014257FA31A>I<390F8003E000FF133FA2001F1307000F1303
B01407A20007130F9038C01BF03903E073FE3801FFE339007F83E01F1B7E9925>I<39FF
F807FEA2390FE001F001C013E0000714C013E000031480EBF00300011400A23800F806A2
EB7C0CA2EB7E1CEB3E18A26D5AA2EB0FE0A36D5AA26D5AA21F1A7F9823>I<3BFFF8FFF0
7FE0A23B1FC01FC01F80000F90390F800E00A20007150CEC1FC02603E01B5B15E0143B26
01F0315B15F0D9F86013700000156015F89039FCC078E0017CEB7CC0137D90393F803D80
153FEC001F6D91C7FCA2011E7F010E130EA22B1A7F982F>I<39FFF81FFCA2390FF00FE0
D807E01380D803F013003801F80E00005BEB7C386D5AEB3FE06D5A130F130780497EEB1D
F8EB38FCEB707EEBE03E48487E0003EB0F80000714C0001F14E039FFE01FFEA21F197F98
23>I<39FFF807FEA2390FE001F001C013E0000714C0EA03E01580EBF003000114006D5A
0000130613FCEB7C0CA26D5AA26D5AA214F06D5AA26D5AA26D5AA291C7FCA213061230EA
780EEAFC0C131C1318485AEA70E0EA3FC06CC8FC1F257F9823>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmti9 9 54
/Fs 54 125 df<923803FF80031F13F092383F00F803F8133C4A48133E4A48137E17FE4A
5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E0007147C16
0F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEEF83C0107
15385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9FCA3133E
A21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B>12
D<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A
5A5A0B176FB318>39 D<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C49
C7FC5B131E5B137C137813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123EA3
123C127CA31278A212F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A75
B71F>I<14301438A28080A2140F801580A2140315C0A4140115E0A81403A415C0A31407
A31580140FA315005CA3141E143EA2143C147CA25CA25C13015C13035C13075C130F91C7
FC131E133E133C5B5B485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<EA0380
EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B17
7A8718>44 D<B51280A46C1300110579911B>I<121C127F12FFA412FE12380808778718>
I<EC1FC0EC7FF0903801E0F8903807C03CEB0F00011E131E133E013C131F5B13F85B1201
A2485AA20007143F5BA2120F153E49137E121FA348C712FCA4007EEB01F8A4007CEB03F0
12FCA2EC07E0A24814C0A2EC0F80A2EC1F00A2141E5C0078137C5C387C01F0383C03E038
1F0F80D80FFEC7FCEA03F8203477B127>48 D<EC01801403A21407140FEC1F005C14FF5B
EB1FFEEB7FBEEB7E7E1320EB007CA214FCA25CA21301A25CA21303A25CA21307A25CA213
0FA25CA2131FA291C7FCA25BA2133EA2137EA2137C13FCB512FCA3193277B127>I<EC07
F0EC3FFCECF81E903803E00F903907800780D90F0013C0011E13035B013814E0EB7980EB
71C00170130701F014C013E0A201E1130FD9E380138090387F001F013C140090C7123E5D
5D4A5AEC1FE0903807FF804AC7FC6D7E90380007C06E7EA26E7EA514031218127EA21407
485C5A00E0495AA26C495A007049C7FC147E00785B383C01F0381E07E03807FF80D801FC
C8FC233479B127>51 D<EC07E0EC3FFC4A7E903801F81F903903E00F809038078007D90F
0013C0491303131E5BA21507017C1480A2150F1600017E131E017F133E6E5A6D6C5AECE1
E090381FFBC06DB4C7FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C7E3807C0
07EB8003380F0001001E1300123E003C1478127C1278A215F800F85C5A6C495A00781303
5D007C495A003C011FC7FC003E133E381F81FC380FFFF0000313C0C648C8FC223479B127
>56 D<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F00013E7F017E14805B
A2485AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA21401140300035CEBE007
0001130E3900F03DF8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E
133E00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127
>I<1370EA01FC1203A413F8EA00E01300B0121C127F5AA45A12380E20779F18>I<161C16
3CA2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A2
913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80
A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F36
7BB539>65 D<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF9139
FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A484815
3CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F127E16
0794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC6C6C
133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>67
D<0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0
147E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A14
0F18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A
047EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B712F05B18
E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E0304
1C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F01
015BEEC00E0280141E92C7121C133F173C91C812381778495DA2017E14014C5A01FE1407
4C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<92391FE001809238FFF8
030207EBFE07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FCD907F05C49
481300495A4948147E49C8127C137E13FE485A48481578A2485AA248481570A2485A94C7
FC123F5BA3127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E5DA2167EA2
007F15FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC3090387F
FFF0011F01C0C8FCD903FEC9FC313775B43B>71 D<0107B548B512C0495CA2903C003FC0
000FF0004B5CA292C75BA24A141F60147EA202FE143F95C7FC5CA201015D177E5CA20103
15FE5F5C91B6FC5B5F9138E00001A2010F14035F5CA2011F14075F5CA2013F140F5F91C7
FCA249141F5F137EA201FE143F94C8FC5B00015D3B7FFFF01FFFFCB55BA23A337BB239>
I<010FB51280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA21301A25CA213
03A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA25B12
01B512F8A25C21337BB21E>I<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA214
7EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C16
03013F1580160791C7FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007F
B6FCB7FC5E2B337CB230>76 D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023B
ED077CA2027BED0EFC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1
EC0383EF070301031607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C0
90C7FC130EEE0380011E017C5C933807003E011C140EA2013C4A137E187C01385C5E0178
16FC6F485B1370ED3FC001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB
3C01151C46337BB245>I<902607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D
5A6060EC3BF0027B140360EC71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14
C0810103151EEE801CEC801FA20107ECC03C030F1338140016E049010713781770010E14
F01503011E15F0705A011C1301A2013C14FD03005B133816FF0178147F5F0170143FA213
F070C8FC1201EA07F8267FFF807FB5140EA23A337BB239>I<0107B612C04915F883903A
003F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F
4A1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25C
A2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234
>80 D<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C188014
7EA214FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F0
16C09138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913
015E137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8
EE07E032357BB238>82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801
FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D
7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2
001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80F
C000F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F
260FC001141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E127800
705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FE
A25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<3B3FFF
F801FFFE485CA2D801FEC7EA1FC049EC0F80170049140EA2161E120349141CA2163C1207
491438A21678120F491470A216F0121F495CA21501123F90C75BA215035A007E5DA21507
12FE4892C7FCA25D150E48141E151C153C153815786C5C5D007C1301007E495A003EEB0F
806C011EC8FC380FC0FC6CB45A000113E06C6CC9FC2F3570B239>I<B500C090383FFF80
A3D807F8C73807F80049EC03E05F00034B5A94C7FC5E160E5EA25E167816705E7F00014A
5A15035E4BC8FCA2150E151E151C5D7F5D000014F05D4A5AA24A5AA24AC9FC140EA26D5A
137E5C147814705CA2EB7FC0A25C91CAFCA2133EA2133C1338313570B239>I<EB03F0EB
0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0
EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E007C141EEC
FE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C0202278A027>
97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EBCFF838
0FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F1580127CA214
3F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A35
78B323>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807E00F13
C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB
0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680
EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F49
6C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5CA2141F
12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C393E07BE
38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F9038F807
803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFFE048
48C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8380F03E0
3807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316
E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC
5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE
7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E6903807C0
FF90380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC12074913F8
A21401A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0FF3800
7FCF90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A387803E038
7C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2
133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC007849137C
485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048ECC1E002
0F13C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F80070EB01F0
23357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E12
0E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA2000713C0
EBC1E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337AB118>I<
EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137CA213FCA2491378EC01FE
0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1C01C9038E38000D807E7C7
FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C48141E151C123EA2007E
143C1538127C157800FCEB787015E048EB3FC00070EB0F8020357BB323>107
D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A21207
A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEAF838
A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003F8137F3C0F
F00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001FC7F
D97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F1303
60491400A200034A13076049013E130FF081800007027EEC83C0051F138049017C1403A2
000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB03E0
3A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F26383FC0
1380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA20003
147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F016E0
001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090383E
03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8127E
A2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0380F83
E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039E3EF
03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C01200
010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00017F
133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A25BA2
1207A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0391E78F078391C7DE03C393C
3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F812001201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF
8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813
F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA214
00A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207
A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07
F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002
031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038
F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC13FCEA0F1E120E12
1C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A1578000114705BA215
F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A3800F878EB7FE0EB1F
801E227AA023>I<D801F01538D803FC010E13FCD80F1E131E000E143E121C123C003802
7E137CD8783E137C0070163CA2017E13FCD8F07C491338EA60FCC65A0201147800014A13
7013F0A2020314F0000316E001E05BA2160117C001C013C00207EB0380A29039E00FE007
1700021F130E3A01F03DF01E3A00F878F83C90393FF03FF090390FC00FC02E227AA033>
I<011F137C90387FC1FF3A01E1E787803A03C0F703C0903880FE0FEA07004813FC000E15
80001E9038F80700001C91C7FC1301003C5B1218120013035CA31307A25C1506010F130F
150E14800038141ED87C1F131C00FC143C1538013F5B39F07FC0E03970F3C3C0393FE1FF
80260F807EC7FC22227CA023>I<13F0D803FC1307D80F1E130F000E141F121C123C0038
143FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA214010003
14F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007F
EFEB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C
1FC7FCEA0FFCEA07F020317AA025>I<903807801C90381FE03C90383FF038017F137890
38FFF8F03901F07CE0EBE01F3903C003C09038800780EC0F00C7121E141C143C5C5C495A
EB07C0495A011EC7FC5B5B4913704913F0000114E0485A38078001390FC003C0381FF807
90383E0F80393C1FFF00127838700FFE38F007F838E001E01E227CA01F>I<BB12F8A245
0277944E>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmr9 9 83
/Ft 83 124 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<DA1FF0EBFFC09126FFFC0713FE903B03F00F1F807E903B0FC007FE00FE90391F801FFC
D93F005B017E5C495C187E48486D5AACB912FEA33C01F8000FC0007EB3A7486C496C13FF
267FFFE3B5001F13F8A33D357FB440>I<137813FCA212011203EA07F813E0EA0FC0EA1F
801300123C5A5A12400E0E71B326>19 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F
81383D80F600011306A40003130EEB000CA248131C00061318000E1338000C1330001C13
704813E0387001C00060138017177EB326>34 D<017C1503D803FEED078026078780140F
260F01C0141F261E00E0EC3F00003E01F8147E003C017CEB01FE007C90397F8007FC9139
33FFFEF800789038307FF900F89039380001F00218495A16075F4C5A161F4CC7FC163E5E
023813FC007801305B007C4A5AEC7003003C01605B003E9038E007C0001EEBC00FD80F01
5C270787801FC8FC3903FE003FD8007C133E90C748131F03FCEBFF809239F801E1E0913A
01F003C07002039038078030DBE00F1338DA07C0EB0018020F49131C0380140C91381F00
1E4A013E130E023E15065C14FC495A5C495A13075C4948150E011F021E130C91C7121F01
3E161C017E6E1318017CED803849020713300001923803C07049913801E1E049913800FF
806C48ED1F00373C7CB740>37 D<123C127EB4FCA21380A2127F123D1201A412031300A2
5A1206120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C
5B5BA2485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C12
3EA3121E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300
124A79B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C
133EA2131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813
F85BA2485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A400
7FB812C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>I<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<15
30157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C14
7CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137C
A2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2
127812F8A25A12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB80
03000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB
01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F34
7DB126>I<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A31932
7AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F
15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F
801500147E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7
FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F
80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15
F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015
F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001F
EB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A214
0F141FA2143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013
C0EA0180120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107
B51280A321337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC
90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F0
1403A215F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806C
EB7F00380F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13
E090383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8
FCA35A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01
F8130015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC00300
07EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C00
3FB6FCA34814FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA070014
06140E5C141814385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20
347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F000
1E1300001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C039
0FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F
007FF8001E131F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278
007C14787E6C14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>
I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048
EB01F8127EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C0
0E3803E01C3801F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E038
3F800715C0140FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F
347DB126>I<123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>
I<007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C>61
D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E0
7FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77E
A24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A33336
7DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17
F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80
EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC0000391
3803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE
01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B48
48157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F
161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB
0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150F
EE03E01601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E
151E150EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812
E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760
150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512
FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF000
3C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C48
5A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F
7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903
FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3
000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335
337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA3
9038003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F0
3803FFC0C690C7FC20357DB227>I<B500FE903807FFF8A3000190C7000113006C48EC00
FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC
0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E70
7E160F83707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<B512FEA3
D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337D
B230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC0
1418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E13
06A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C13
3ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE91381FFFF87F80C6030013
006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E
6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FF
A2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A2
171835337EB23A>I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013F
C76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848
ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17
006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FC
D907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016
F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE
3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<B612
FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A
047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167F
A583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE0
9338003F8036357EB239>82 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF
48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F0
6C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC015
0F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B5
12E0011F138026C003FEC7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC00
3E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA3
30337DB237>I<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530
A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC
91383FFFF0020F13C0020190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7F
C06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA2
6D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070
023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A2
35357EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB00
7C1A386D140F00001930836D020715706D1860A26E496C14E0013F60A26ED919FC130101
1F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170C
A2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5E
A2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207
157EA24B143E0203153CA24B141C020115184C357FB24F>I<267FFFFC90B512C0A30001
01E090381FF80026007F80EB0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C1338
01035C6E13606D6C13E06D6C485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7E
A26E7E815C6F7E9138063FC0140E4A6C7E9138180FF0EC380702707F91386003FCECC001
0101804A6C7E49C77E4981010E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFE
B56C90B512F8A335337EB23A>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE
0E006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C
13065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90
C8FC5D1400B14A7E91B512FCA337337FB23A>I<003FB612FCA39039F80007F813C090C7
EA0FF0003EEC1FE0123C0038EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A
5AC7FC4A5A4A5AA24A5A4AC7FCA2495A495AA2495A495AA24948130C495AA2495A49C7FC
A24848141CA2485A485A1638485A4848147816F84848130148481307153FB7FCA326337C
B22F>I<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>I<0003130C48131C000E1338
48137000181360003813E0003013C0EA700100601380A2EAE00300C01300A400DE137800
FF13FCEB83FEA2EA7F81A2383F00FC001E1378171774B326>I<EAFFF0A41200B3B3B3AD
12FFA40C4B7FB715>I<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E
7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05A
A3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA1
26>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB
1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB
3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC
07C03901F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12
FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F809038
3FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F0
03BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C
5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB
7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127E
A212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E039
01F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E
0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFF
E0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC0
1F83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF0
7C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F
0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F0
07E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF090
38F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA32634
7EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6
EA0FF0B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F0
13FFA313071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07
F0144384B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A
5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E
7E8114016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3
B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C
0F03E0903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB348
6C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC
9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B
>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248
147E003E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00
075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFF
E09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9
150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F0
7FC7FC91C8FCAA487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8
038F3807E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D
5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFC
A326307DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC
0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E
48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0F
FF1300EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C0
7F8019237EA11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000
AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F
00FFEB0FFFA30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073F
EB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E15
0C6D131C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90
C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C
07F801FC003F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE
1330A290267E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E39026
0FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37
>I<B53801FFF8A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090
381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC0903806
0FE0EB0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA32620
7F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D13
1C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC
14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA
701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC0
0030EB3F800070137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013
FE485A12035B48481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F
22>I<B712F8A22502809426>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmssbx10 9 51
/Fu 51 123 df<387FFFF0B512F8A46C13F015067F931B>45 D<EAFFC0AA0A0A7A8917>
I<EB01E0497E130F131F13FF127FB5FCA413BFEA003FB3B3003FB512E04814F0A46C14E0
1C367AB529>49 D<EB1FF0EBFFFE486D7E0007804814F048804880A2397FF03FFE38FFC0
1F496C7E497E7E007E6D1380123E121E121C000C7FC7FC5CA316005CA24A5A5D141F4A5A
5D4A5A4A5A495B4990C7FC495A495A5C495A495A495A49C8FC485A485A485A485A485A48
B6FC481580A66C150021367DB529>I<EB0FF8EB7FFF0003B512C04880001F8048804880
EBF01F383FC00F01807FEA1F00001E1307120CC7FCA2140FA25D141FA24A5A4A5A14FF01
3F5B158092C7FC15C015F015FC9038001FFEEC07FFA26E1380A26E13C0A900605B007015
80127C007F5B26FFE01F130090B6FC5DA26C5C001F14F000075CC61480D91FF8C7FC2238
7DB529>I<EC7FF04A7EA25BA25BA25B14EF130FA2EB1FCFA2133F148F137F140F13FF13
FE120113FC1203EA07F8A2EA0FF0A2EA1FE0A2EA3FC0A2EA7F80A2EAFF0090B612E016F0
A56C15E0C7380FF800AB6E5A24347EB329>I<000FB512F84880A65D01F8C8FCAAEBFBFC
90B57E15E08181819038FE0FFEEBF80701F07F13E080D80FC01480C7FCA81218A2123C4A
1300127E127F486C5A9038E03FFE6CB5FC5D6C5C6C5C6C5C00031480C649C7FCEB1FF021
367DB329>I<ECFF80010713E0011F7F137F90B5FC5A5A48EBC07048EB003001FC90C7FC
485AA2485AA2485AA3147F9038C1FFE0D8FFC77F01CF7F01DF7F819038FE07FF497E496C
138013F0A2496C13C0A35BA8127F7FA3003F5B01F01480A26C6C5A6D4813006CB6FC5D6C
5C6C5C6C5C6C5C013F1380D907FCC7FC22387DB529>I<007FB61280B712C0A66C1580C8
13005C4A5A4A5A4A5AA24A5A143F4A5A5D14FF5D5B4990C7FCA25B5C130F5CA2131F5C13
3FA25C137FA35C13FFA55A5CA96C5B22357DB329>I<EB0FFC90B512C04880000714F848
804880A2393FF807FF497E497E48486C1380A9003F15006D5A6C6C485AEBFC0F6CB55A00
0314F0C614C04880000714F84880391FFC0FFE393FF003FF497E007F1580497E00FF15C0
AA6C6C481380A26D5A6C6C48130090B6FC6C5CA26C5C6C5C000114E06C6C1380D90FFCC7
FC22387DB529>I<EB0FF8EB7FFF48B512C04880488048804880393FFC0FFEEBF007007F
6D7E13E080D8FFC01480A380A216C0A75CA36C6C5AA25C6C6C5A6D5A381FFFFE7E6C5B6C
5B6C13E026003F801380EB0001A44A1300A24A5A0003130F3807801F9038E07FFC48B55A
A2485C5D6C14806C49C7FC000113F838003FC022387DB529>I<EC3FFC4A7E91B5FCA349
80A34980A25C49487FA2157F010F8014F8A2011F6D7E14F0013F80151F14E0017F80150F
A2D9FFC07F81A2480180148081A248010014C081A24890B612E0A34816F0A34816F801F8
C7123F5B003F16FC161F484815FEA2160F484815FFA249806CC8EA03FE30347DB337>65
D<007FB512F0B612FEEDFFC082828282D9E0007F151F150F6F7EA281A45D5E150F4B5A15
3F4AB45A90B65A16C093C7FC16E016F8829039E0007FFF150F030313806F13C0A28117E0
A2167FA316FFA24B13C05D5D033F138090B7FC17005E5E16F016C06C02FCC7FC2B3479B3
37>I<91380FFF8091B512F8010714FF011F15C05B90B7FC5A48168048EBFC019138E000
3F480180130F4890C71207491403003FED01004991C7FC5B127FA25BA212FFA25BAC7FA2
127FA27FA2123F7F7F001F16C06D14016C6D13076C01E0130F02FCEB7FE06C90B6FC7E7E
133F6D15800107ECFE00010014F8020F13802B387BB535>I<007FB512F0B7FC16E016F8
8216FF17809026E0007F13C0150F030313E06F13F081EE7FF8163FA2EE1FFCA3160F17FE
AE17FCA2161FA217F8163F167F17F016FF030313E0150F037F13C090B7128017005E16F8
16E016806C02F8C7FC2F3479B33B>I<007FB612E0B712F0A616E001E0C8FCAE90B6FC16
80A5160001E0C8FCAE90B612F016F8A76C15F0253479B330>I<913807FFC091B512FC01
0314FF010F15C0013F15F05B48B7FC5A4AC613E04801F0131F4801C013074849130391C7
1201484814004915401700485AA25BA312FF5BA792381FFFF8A57F127FED001FA27FA26C
7EA27F6C7E806C7F6C13F06C01FE137F91B6FC7E6C7E7F010F15E0010315800100ECFC00
020713802D387CB537>71 D<EA7FC0EAFFE0B3B3AEEA7FC00B3479B319>73
D<D87F80EC3FF0486CEC7FF8EEFFF04B13E04B13C04B13804B13004B5A4B5A4B5A4B5A4A
5B4A5B4A5B4A90C7FC4A5A4A5A4A5A4A5A01C15B01C35B01C75B13CF01DF7F90B57EA281
8114BFEC1FFC01FE7F496C7E497E496C7F01E080496C7F80826F7E153F6F7E826F7E8117
806F13C0816F13E017F0EE7FF8163F6C48EC1FF02D3479B339>75
D<EA7FC0487EB3B3A790B512FE15FFA66C14FE203479B32B>I<D87FF8923807FF80486C
4B13C06D5DA36D5DA36E5CA2D9BFC0ECFF7FA2019F15FE6E1301A26E1303018F15FCA26E
1307018715F86E130FA2018315F06E131F018115E06E133FA2018015C0ED807FA2027F14
80EDC0FF023F1400A215E1021F5B15F3020F5BA36EB45AA26E5BA36E5BA25E806F5A92C8
FC6CCAEA3F803A3479B349>I<007FB512F0B7FC16C08216F8A2829039E0007FFE151FED
07FFA2811780A281A55DA217005DA2ED1FFE157F90B65A5E5E5E168003FCC7FC01E0C9FC
B36C5A293479B335>80 D<007FB512E0B612FEEDFFC08216F882829038E0007FED0FFF81
811780A281A45DA217005D4B5A157F90B65A5E5E16C093C7FC15F89038E01FFC140F816E
7EA26E7F80826E7FA26F7EA26F7E151F826F7EA26F7EA26F13806F13C0A26C486D13802A
3479B335>82 D<EB07FF017F13F048B512FC000714FF4815C05A5AA2481580EBFC019038
F0003F4848130F1507491303ED010092C7FCA27F7F7F6C7EEBFFC06C13FEECFFC06C14F0
6C14FC6C806C806C15806C6C14C0011F14E01301D9001F13F0140180ED7FF8153FA2151F
A2122012701278007E143F007F15F001C0137F9038FC01FFB712E0A216C0A2003F158000
0FECFE0000035CC66C13F0010790C7FC25387CB52E>I<D87FC0EC7F80486CECFFC0B3B3
A36C6C491380A36C6C4913006D5B6C6C495A9038FF807F6C90B55A6C5D6C5D6C5D6C6C14
80011F49C7FC010113F02A3679B339>85 D<D87FC0ED7F80486CEDFFC07F5E007F17807F
5E003F17007F001F4B5AA26D140F000F5E7F161F6C5E80163F6C5E806C4B5AA2806C4B5A
A26E5A017F5DA26D6C4890C7FCA214FC011F495AA214FE010F495AA214FF6D495AA26D5C
159F15BF6DEBFFE0A36D5CA36E5BA26E90C8FC6E5A32347EB337>I<EB1FFE90B5128000
0714E0001F14F815FCA29038E00FFEEB8007D80F0013FF000E7F120CC7FCA40107B5FC13
7F0003B6FC000F13C3381FFC03EA3FF8EA7FF013E012FF13C0A25CA26D5A6C6C5A6D5A90
B6FC6C13FB6C13F36C13C36CEB81FED800FCC7FC20257EA327>97
D<EA7F80487EB0EC7F809038C3FFE001CF13F801DF7F90B57E81EBF80FD9E0071380497E
80A216C080AC4A1380A36D5A6D481300EBF81F90B55A5D01DF5B01CF5BD87F8713C0C748
C7FC22357CB32A>I<EB0FFE90387FFFC048B512F04814FC5A5A381FFC03393FF800F849
1378484813381500A25B12FFAC6C7E150C151C6C6C133C6D13FC391FFC07FE90B5FC7E7E
000114F86C6C13C090380FFE001F257DA325>I<ED7F80EDFFC0B0EB3FC0EBFFF0000313
FC000F90B5FC5AA2383FFE07EBF80148487E5BA212FF5BAC7F127FA26D5A6C6C5AEBFC0F
6CB6FCA26C5B00035BC69038F07F80D93F80C7FC22357DB32A>I<EB0FFE90387FFF8048
B512E0488048804880391FFE0FFE383FF803496C7E48487EA2491480157F12FFA390B6FC
A316000180C8FC7FA3127FA27F003F14036D130F6C6C133F9038FE01FF6CB6FC7E7EC614
FC013F13F0010790C7FC21257EA326>I<EB03FE90381FFFC05B90B5FC5AA24813831401
3807FE001500AA387FFFF8B57EA46C5BD807FEC7FCB3A96C5A1A357FB419>I<90393FF8
01F048B5120F0007ECFFF85A5A3A3FF01FF838D9E00F1300A248486C7EA86C6C485AA2EB
F01F6CB55A6C5C5D001D91C7FC381C3FF890C9FC123EA2123F90B512C015F86C14FEEDFF
806C15C0A2003F15E05A903980007FF000FF141F90C7FC150FA46D131F007F15E06D133F
3A3FF801FFC090B6FC000F15006C5C000114F8D8001F138025347EA229>I<EA7F80487E
B0EC3FE0ECFFF801C37F01C77F01CF7F13DFD9FE071380EBF803497EA213E0A213C0B3A4
6C486C130021347CB32A>I<EA7FC0EAFFE0A9EA7FC0C7FCA8EA3FC0EA7FE0B3AEEA3FC0
0B357DB413>I<EB1FF0EB3FF8A9EB1FF090C7FCA8EB0FF0EB1FF8B3B3A4EA603F007013
F0B5FCA214E0A2003F13C0000F1300EA03FC154585B415>I<127F487EB1EC07FCEC0FFE
EC3FFCEC7FF8ECFFF0018113E0018313C001871380018F1300EB9FFEEBBFFCEBFFF05C5C
80A2808080A2EBE7FEEBC3FF0181138015C01380EC7FE0EC3FF0EC1FF8A2EC0FFCEC07FE
EC03FFA26C487E20347BB328>I<EA7F80EAFFC0B3B3AEEA7F800A347CB313>I<DA3FE0EB
7FC03C7F80FFF801FFF0D8FFC3D9FC0713F801C76D4813FC01CF6D4813FE01DF5CD9FE07
9038FC0FFFD9F803EBF007496C497EA201E014C0A201C01480B3A46C486C90380001FE38
237CA241>I<EC3FE0397F80FFF8D8FFC37F01C77F01CF7F13DFD9FE071380EBF803497E
A213E0A213C0B3A46C486C130021237CA22A>I<EB07FE90387FFFE048B512F848804880
4880261FFE071380EBF80148486C13C049137F007F15E0A249133F00FF15F0AC6C6CEB7F
E0A36C6CEBFFC06D5A261FFE07138090B6FC6C1500000314FC6C5C6C6C13E0010F90C7FC
24257EA329>I<EC7F80397F83FFE0D8FFCF13F801DF7F90B57E81EBF80FD9E007138049
7EA28016C0A280AA5C1680A25C13E06D481300EBF81F90B55A5D01DF5B01CF5B01C713C0
D9C0FEC7FC91C8FCAD6C5A22327CA22A>I<143C007F13FCEAFF831387138F139FA213BF
1480EBFE005B13F0A25BA25BB36C5A16237CA21C>114 D<EB7FE03803FFFC000F13FF48
14C0A25AEBC03F397F800F80EB0007140391C7FC7F7F13F8EBFFC06C13F014FC6C7F6C7F
6C1480000114C06C7E010313E0EB003F141F0060130F12701278127C007F131F39FFC03F
C090B5FC1580A2003FEBFE0000075B38007FE01B257EA320>I<EA03FC487EA9387FFFFE
B6FCA46C5BD807FEC7FCB3A29038FF01801403EC0FC06C13FFA36C14006C13F8EB3FC01A
2D7FAB1E>I<D87F8013FF486C481380B3A55CA25CA26D5A007F133FEBFFFD6C13F96C13
F16C01C01300000190C8FC21237CA12A>I<B4147F6D13FF5CA2397FC003FEA313E0003F
EB07FCA213F0001FEB0FF8A213F8000FEB1FF0A33907FC3FE0A313FE0003EB7FC0A213FF
6CEBFF80A36C1400A36D5AA36D5A20227EA125>I<00FED903F8EB0FE06C496C131FD980
0F143FA281D87FC0ED7FC0141FA201E07F003FEEFF804A7E8213F0001F013E0181130014
7E16C1D80FF8013F5B02FE13C314FC16E3D807FC90381FE7FC13FDA2D9FFF813F76C6EB4
5AA214F06C5E81A214E06C5E816D486C5B33227EA138>I<397F8003FE38FFC00713E000
7FEB0FFC393FF01FF8D81FF813F0380FFC3F0007EB7FE09038FEFFC06CB512806C14007E
6D5A5C6D5A131F6D5A497E497E137F8090B5FC484813800003EB7FC0EA07FCEC3FE0390F
F81FF0D81FF013F8003FEB0FFCEBE007D87FC013FE00FFEB03FF497E90C7FC20227EA125
>I<007F147F486C13FF6D5A127F01E013FE003F130313F015FC001F130713F8000F14F8
EBFC0F120715F0EBFE1F120315E0EA01FF143F6C14C0A214BF017F1380A2EB3FFF15007F
A26D5AA313075C1303A2495AA3495AA2495A12C038F07FC0B5FC5C91C7FC5B5B6C5AEA1F
C020327EA125>I<003FB512F84814FCA47EC7EA3FF8EC7FF0ECFFE015C05B4913804913
00495A5C131F495A495A495A5C5A485B4890C7FC485A5B121F485A485A90B512FCB612FE
A46C14FC1F227EA124>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmss10 10.95 15
/Fv 15 118 df<EA7F80A8120FEA1F00A2121E123EA2123C127C1278A212F80913798719
>44 D<12FFA80808788719>46 D<ED7FC0913807FFF8021F13FE027F6D7E49B67E010781
499038C07FF0903A1FFC000FF8D93FF01307D97FC06D7E49486D7E4890C7FC4848EB07F8
4990381FFEFF4848017FB5FC484890B6FC4A158048485A9039C007FC0F91380FF0034848
48487E4B7E007F013F15C0010049137F147F92C7123FA212FE02FE141FA9027FEC3F8012
7FA26F137F023F150001806D5B003F011F5CEDE0016C6C6C6C485A913907FC0FF86D6CB5
5A6C6C6C5C6E5C6C6C6D5B6C6CD91FFEC7FC6DEB07F86C6C90C9FC6C7F6D7ED93FF0EC1F
C0D91FFCECFF8090270FFFC00F13006D90B55A010115F86D6C14E0021F5C020749C7FC91
38007FE032417BBF3D>64 D<EB0FF890B5FC00031480000F14E04814F0A29038F00FF890
388003FC381E0001001814FE00101300C812FF157FA7EC7FFF010FB5FC137F48B6FC1207
48EBF07F383FFC0013C048C7FC12FE5AA315FF7E5C387F8007EBE01F6CB6FCA26C147F6C
13FC6C13F0000190C7FC202B7CA92C>97 D<49B47E010F13F0013F13FC4913FF90B61280
5A481300D807FCEB1F00D80FF0130748487F4990C7FC123F5B127F90C9FCA312FEAA127F
A36C7EA26C6C14406DEB01C06C6C13036C6C131F01FF13FF6C90B5FC7E6C6C14806DEBFE
00010F13F001011380222B7DA928>99 D<ED07F0B3A4EB07F8EB3FFF4913C748B512F748
14FF5A1480390FFC003FD81FF0131F49130F48481307A2485A90C7FCA312FEAA127FA37F
003F140F7F6C6C131F6D133F6C6C137F9038FF01FF6C90B5FC6C14F76C14E76C14879038
3FFE07D90FF0C7FC24407DBE2F>I<EB03F8EB1FFF017F13C090B57E488048803807FE07
390FF801FC9038E000FE4848137E003F143E49133F90C77E5A127EED0F80B7FCA600FCC9
FCA37E127EA2127FA26C7EA26C7E6D14806C6C1303D807FC131F01FF13FF6C90B5FC7E6C
6C14006D13FC010F13E0010190C7FC212B7DA928>I<12FFA81200AF127FB3B3A4083F7A
BE16>105 D<12FEB3B3B3A9073F79BE16>108 D<26FC01FFECFF800107D9C00313E0011F
D9F00F13F8017FD9F83F7F90B56C487F00FD92B5FC3CFFF80FFFFC07FFD9E003EBF00149
6C497E496C49EB7F80A290C76C48133FA34892C7FCB3A9392979A848>I<38FC01FF0107
13C0011F13F0017F13F890B512FC12FD39FFF80FFEEBE003EBC00190388000FFA290C712
7FA35AB3A9202979A82F>I<00FC137CEB03FC130F131F133F137FEBFFC038FDFE00EAFF
F85B5B5BA25BA290C7FCA25AB3A6162979A81F>114 D<EB1FF890B51280000314E04814
F85A5A393FE00FF0EB8000007F143090C8FCA57F6C7E13F06CB4FC14F06C13FE6C7F0001
14C06C14E0011F13F013019038001FF81407EC03FCA21401A3124012700078EB03F8007E
130738FFE01F90B512F015E06C14C0001F14800003EBFE0038003FF01E2B7EA923>I<EA
01F8ACB612E0A6D801F8C7FCB3A77F152015E03800FE0790B512F0A27F6D13C06D1300EB
0FF01C357EB321>I<00FE147FB3AC15FFA25C6C5B6C130FEBC03F90B6FC6CEBFE7F6C13
FC6C13E0000390C7FC202979A72F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmsy10 10.95 2
/Fw 2 104 df<153FEC03FFEC0FE0EC3F80EC7E00495A5C495AA2495AB3AA130F5C131F
495A91C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE133F806D7E130F801307B3
AA6D7EA26D7E80EB007EEC3F80EC0FE0EC03FFEC003F205B7AC32D>102
D<12FCEAFFC0EA07F0EA01FCEA007E6D7E131F6D7EA26D7EB3AA801303806D7E1300147F
EC1FC0EC07FEEC00FFEC07FEEC1FC0EC7F0014FC1301495A5C13075CB3AA495AA2495A13
3F017EC7FC485AEA07F0EAFFC000FCC8FC205B7AC32D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr10 10.95 32
/Fx 32 122 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A120E5A1218123812300B1C798919>44 D<EB01FE90380FFFC090383F03F0
90387C00F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290
C712034815F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB
1F80000315006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D
>48 D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A3
1D3D78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E
6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E015
3FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A
495A495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FC
A3243D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F00
0E6D7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA2
4A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7F
C0A216E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C
4913006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<EB
03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C000F147E4848137F81
003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C
13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A416
80157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E000FE0001F495A260FC0
7FC7FC3803FFFE6C13F838003FC0243F7CBC2D>57 D<15074B7EA34B7EA34B7EA34B7EA3
4B7E15E7A2913801C7FC15C3A291380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA3
4A6D7EA34A6D7EA349486D7E91B6FCA249819138800001A249C87EA24982010E157FA201
1E82011C153FA2013C820138151FA2017882170F13FC00034C7ED80FFF4B7EB500F0010F
B512F8A33D417DC044>65 D<DB3FF01306912603FFFE130E020F9038FF801E913A3FF007
E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140FD93FE0140749481403495A
91C812014848150012034848167E5B000F173EA24848161EA2123F5B180E127FA3491600
12FFAC127F7F180EA2123FA27F001F171E181C6C7EA20007173C6D16386C6C1678000117
706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6CEC1F00D903FE143E902600
FF8013F891393FF007F0020FB512C0020391C7FC9138003FF037427BBF42>67
D<B612F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>73
D<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA35FA25F5F5F4C5A16
0748486C133FB8FCA3313E7DBD39>76 D<B500C093383FFFF0A300016D93387FF800D800
7F18E0D977F016EFA3D973F8ED01CFA2D971FCED038FA3D970FEED070FA26E150E80A26E
6C141CA36E6C1438A26E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700
A2037F130EA36F6C5AA26F6C5AA36F6C5AA25FED07F0A2923803F9C0A36FB45AA26F90C7
FCA213F8486C147ED807FFEF3FF8B500F8013C011FB512F0A34C3E7DBD53>I<D907FC13
0C90391FFF801C017FEBF03C3901FC03F83A03F0007E7CD807C0EB1FFC4848130F001F14
0748C71203003E1401007E1400A2007C157C12FCA2163CA36C151CA27EA26C6C14007F7F
EA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0010714F0EB007F
020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27EA3163E7E16
7E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090391F
FFFE00D8E00713F839C0007FC028427BBF33>83 D<003FB91280A3903AF0007FE0010180
90393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00E0A5C81600B3
B14B7E4B7E0107B612FEA33B3D7DBC42>I<EB0FF8EBFFFE3903F01F8039078007E0000F
6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87F
EB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF
3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D
>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F090
39FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160F
A217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC0
9026C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E4848
131F4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C
7EA3003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C13789038
3F01F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114FF01
0713E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B12
7FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C
017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380FFFC0
90383F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130F
A2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C
13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA8
28>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00
FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C903903
F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC0600000F6E
C7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0FC026
071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C810003
813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C5D6C
6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D>I<
EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E001F8
D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33>
I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC487E
B512F0A3143E7DBD1A>I<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE
1A>108 D<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C
01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF
4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F8
01FE00FF903807FFC091381E07E091387803F000079038E001F82603F9C07F0001138001
FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713
E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848
EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03
F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090
C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A03FFC0
01FC6C496C7E91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0
A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FC
EC07F891C9FCAD487EB512F8A32D3A7EA733>I<3901F807E000FFEB1FF8EC787CECE1FE
3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FEA31F287E
A724>114 D<90383FC0603901FFF8E03807C03F381F000F003E1307003C1303127C0078
130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0D800
3F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E06CEB03
C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137CA213
FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F
03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA3000714
030003140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913FC9038
1FC078903807FFE00100903880FE002E297DA733>I<B539E00FFFE0A32707FE00031300
6C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A01
0F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8
FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD87E07C9FC
EA780EEA3C3CEA1FF8EA07E02B3A7EA630>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmr12 14.4 25
/Fy 25 121 df<BB1280A426007FFCC8123F6D48030313C0011F1600193F191F190F1907
A21903A2F101E0A31900A6050E1470A41A00A3171EA3173E177E17FE160791B6FCA49138
F800071600177E173E171EA3170EA31A0EA31A1C94C8FCA41A3C1A38A31A78A31AF0A219
01A21903A21907F10FE0193F19FF013F1603496C153FBBFC1AC0A347527BD150>69
D<B7FCA439007FFE006D5A6D5AB3B3B3B0497E497EB7FCA420527BD12A>73
D<B712E0A4C66C90CAFCEB3FFC6D5AB3B3A9191CA51938A61978A319F819F0A218011803
A21807180F181F183F18FF013F1503496C023F13E0BAFCA43E527BD149>76
D<B500FC95B512FCA36E5FD8007FF2F800D93DFF943803BFF0011D62A2011C6DEE073FA3
6E6C160EA36E6C161CA26E6C1638A36E6C1670A36E6C16E0A36E6CED01C0A26E6CED0380
A36E6DEC0700A36F6C140EA36F6C5CA26F6C5CA36F6C5CA36F6C5CA26F6C495AA36F6C49
5AA36F6D48C7FCA393387FC00EA2706C5AA3706C5AA3706C5AA3706C5AA270B45AA3705B
A3013E6E90C8FC137F496C4E7E000701F0027E4B7EB66C4BB612FC173CA35E527AD16B>
I<B812FCEFFFC018F818FE26007FFCC7381FFF806D4802017F011F9238007FF0F01FF872
7E727E727E841A807213C0A21AE0197FA21AF0A91AE0A219FF1AC0A24E13801A00604E5A
4E5A4E5AF07FE04D485A051F90C7FC91B712FC18F0188002F8CBFCB3AE497E497EB7FCA4
44527BD150>80 D<DA3FF0130349B55B010714C0011FECF00F903A7FE00FF81F49C712FE
D801FCEC3F3F4848EC1FBF48486EB4FC48481403485A4980003F8190C97E5A83127E8312
FEA283A37E837FA27F007F93C7FC7F7FEA3FFC7F6C6C7E14F86CEBFF806C14F8EDFF806C
15F06C15FE6C6C806D15C0010F81010315F8D9007F80140F020080030F7F03001480161F
040713C0160182EF7FE0A2173FEF1FF0A200E0160FA31707A37EA318E07E170F7E18C06C
161F6C17806D153F6D16006D157E6D15FED8FCFC4A5A017F4A5A26F83FC0EB0FF0D90FFE
EB7FC0D8F003B65A48C64AC7FC023F13F848010113C034567AD341>83
D<ECFFC0010F13F8013F13FE9039FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F8
6D7E000F816D13016F7EA3707E6C5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F010713
00EB1FF0EB7FC04848C7FCEA03FC485A485A485A123F5B485A187012FF90C8FCA216FFA3
5D6D14BF007F14036DEB073F6C6C90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01
F013FF0001B5486C13806C6C90398003FE00D907FCC712F834367BB43B>97
D<EC0FFE91387FFFE049B512F8903907F801FE90391FE0001FD93F80EB078049C7EA0FC0
01FE143F484815E00003157F485A485AA2485AEE3FC0003FED0F004991C7FCA2127FA35B
12FFAB127F7FA3123F6D1570121F6D15F0000F16E06D140112076C6CEC03C06D15806C6C
14076C6DEB0F00D93FC0131E6D6C137C903907FC03F06DB55AD9007F1380DA0FF8C7FC2C
367CB434>99 D<17FF4BB5FCA4ED0007160182B3A6EC0FF8EC7FFF49B512E0903907FC03
F090391FE0007C49487F49C7120F01FE80484880485A000781484880A2485AA2485AA212
7FA35B12FFAB127FA27FA2123FA27F121FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E7F
6D6C017C13E0D91FC049EBFF8090390FF807E00103B512800100495ADA1FF091C7FC3954
7CD241>I<EC0FF891B5FC010314C090390FF80FF090391FC003FC90397F8001FE49C77E
4848EC7F804848143F49EC1FC0485A000FED0FE05B001F16F01607485AA2007F16F8A25B
160312FF90B7FCA30180C9FCA8127F7FA2123FA26D1538121F17786C6C1570000716F06D
15E06C6C14016C6CEC03C06C6C15806D6C130F6D6CEB1F00D90FF0133C903907FE01F801
01B512E06D6C1380DA07FCC7FC2D367DB434>I<EF1FC0DA3FE0EBFFE0902701FFFC0313
F001079039FF07E1F8903A1FE03FCF01903A3F800FFC03903A7F0007F80101FE010314F0
4848903901FC004000036F1300491300000781A24980000F82A8000793C7FC6D5CA20003
5D6D130100015D6C6C495A017F495A6E485A9039FFE03FC0D801C7B5C8FC01C113FC3903
803FE091CAFCA57FA27F7F7F6CB612E016FF6C16C017F0013F15FC8390B8FCD803F8C700
1F1380D80FE0020113C04848EC007F4848ED1FE090C9120F127EEF07F012FE481603A56C
1607007E17E0007F160F6C6CED1FC06C6CED3F806C6CED7F006C6C15FED803FCEC03FCC6
B4EC0FF0D93FF0EBFFC0010FB6C7FC010114F8D9001F1380354E7DB43B>103
D<EB7F80B5FCA41203C6FC137FB3A6ED07FC92383FFF8092B512E0913981F00FF8913983
C007FC9139870003FE028E1301029C6D7E14B814B002F06E7E5CA25CA35CB3AD2601FFE0
903801FFE0B600C0B612C0A43A537CD241>I<1378EA01FE487E487FA66C90C7FC6C5AEA
007890C8FCB0EB7F80B5FCA41203C6FC137FB3B3A43801FFE0B61280A419507CCF21>I<
EB7F80B5FCA41203C6FC137FB3B3B3B13801FFE0B612C0A41A537CD221>108
D<01FFD907FEEC03FFB590261FFFC0010F13E0037F01F0013F13F8912701F80FFC9038FC
07FE913D03C003FE01E001FF000390260700019038038000C6010E6D6C48C76C7E6D48DA
7F8E6E7E4A159CA24ADA3FF86E7E02605D14E04A5DA34A5DB3AD2601FFE0DAFFF0EC7FF8
B6D8C07F9026FFE03FB512F0A45C347CB363>I<01FFEB07FCB590383FFF8092B512E091
3901F00FF8913903C007FC000349C66C7EC6010E13016D486D7E5C143002706E7E146014
E05CA35CB3AD2601FFE0903801FFE0B600C0B612C0A43A347CB341>I<EC0FFC91387FFF
8049B512E0903907F807F890391FE001FE90393F80007F017EC7EA1F80496E7E48486E7E
00038248486E7EA248486E7EA248486E7EA2003F82A24848ED7F80A400FF17C0AB007F17
80A26D15FFA2003F1700A2001F5E6D1401000F5E6D140300075E6C6C4A5A6C6C4A5AA2D8
007FEC3F806D6C49C7FC90391FE001FE903907F807F86DB55AD9007F1380DA0FFCC8FC32
367CB43B>I<90397F8007FCB590387FFF800281B512E0913987F00FF891398F8003FC00
0190399E0001FF6C01BC6D7FD97FF86E7E4A6E7E4A6E7E4A140F844A6E7EA2717EA3717E
A4711380AB4D1300A44D5AA24D5AA2606E140F4D5A6E5D6E4A5A6E4A5A02BC4AC7FC029E
495A028FEB07FC913987E01FF00281B512C0DA807F90C8FCED0FF892CAFCB13801FFE0B6
12C0A4394B7DB341>I<01FFEB1F80B5EB7FF0913801FFF8913803E1FC91380783FE0003
EB0F07C6131EEB7F1C1438143091387003FC91386000F0160014E05CA45CB3AA8048487E
B612F0A427347DB32E>114 D<D907FE13C090387FFF8148B512E33907F803FF390FC000
7F4848133F48C7121F003E140F007E1407127C00FC1403A315017EA27E7F6C6C90C7FC13
F013FF6C13F86CEBFF806C14E06C14F86C14FEC680013F1480010714C0D9003F13E01403
9138007FF0151F00E0140FED07F8A26C1403A215017EA36C15F0A26C14036C15E015076D
EB0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F13E0D8C00390C7FC2536
7CB42E>I<EB01C0A71303A41307A3130FA2131FA2133F137F13FF5A5A001F90B512E0B7
FCA326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13F016E0903807F801903903FC
03C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>I<D97F80EC7F80B591B5FCA4
00031503C61500017F157FB3AC17FFA35EA3013F5C6EEB077FA2011F020E7F6D6C011C13
F06E0178EBFFC0903903FC01F06DB512E06D6C1380912607FC00EB80003A357CB341>I<
B60103B51280A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC133F171E6D
7E171C6E143C010F1538A26E1478010715708001035DA26E130101015D806D4A5AA2ED80
07027F91C8FC15C0023F130EA2EDE01E021F131CA26E6C5AA2EDF87802071370A26E6C5A
A215FF6E5BA26E5BA36FC9FCA2153EA3151C39347EB23E>I<B60007B5D8F007B5FCA400
039027E0001FFEC713F06C0180D90FF8EC7FC06C0307ED3F80F21F00017F0203151EA26D
6C801A1CA26D6C496C5CA26E6E1478010FDA0E7F1470A26E6F13F00107DA1C3F5CA26EED
C0010103DA381F5CA26E0178EBE0030101DA700F5CA26E01F0EBF0076DDAE00791C7FCA2
DA7F81ECF80EEEC003A2DA3FC36E5AEE8001A2DA1FE76E5A93C7FCA2DA0FFEEC7F70A219
F06E486E5AA36E486E5AA36E486E5AA36E486EC8FC50347EB255>I<007FB5D8800FB512
80A4C69026FC0003EBF000D93FF86D1380011F4BC7FC010F15F801075D6D6C5C6E495A6D
6C5C6D14076E6C48C8FCEDC01E6E6C5A021F133891380FF0786F5A913807FDE002035BEC
01FF5E80157F6F7E824B7E15FFEDE7F802017F913803C3FEEC07814AC67E020E80021E6D
7E4A133F4A6D7E4A80707E4948130749486D7E010781010F6E7E013F8201FF8200076D01
0713F0B500F8011FEBFFE0A43B337FB23E>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 926 85 a Fy(Exploiting)36 b(Sup)s(erw)m(ord)h(Lev)m(el)i(P)m
(arallelism)1088 234 y(with)f(Multimedia)d(Instruction)i(Sets)1139
462 y Fx(Sam)m(uel)29 b(Larsen)h(and)g(Saman)g(Amarasinghe)1168
575 y(MIT)g(Lab)s(oratory)h(for)f(Computer)f(Science)1492
688 y(Cam)m(bridge,)h(MA)h(02139)1402 801 y Fw(f)p Fv(sla)m(rsen,saman)
p Fw(g)p Fv(@lcs.mit.edu)-152 1376 y Fu(Abstract)-152
1533 y Ft(Increasing)h(fo)r(cus)g(on)f(m)n(ultimedia)f(applications)i
(has)f(prompted)-152 1616 y(the)24 b(addition)h(of)g(m)n(ultimedia)e
(extensions)i(to)f(most)g(existing)h(gen-)-152 1699 y(eral)47
b(purp)r(ose)g(micropro)r(cessors.)98 b(This)47 b(added)e(functionalit)
n(y)-152 1782 y(comes)33 b(primarily)f(with)h(the)f(addition)g(of)i
(short)e(SIMD)g(instruc-)-152 1865 y(tions.)40 b(Unfortunately)-6
b(,)27 b(access)h(to)g(these)f(instructions)g(is)h(limited)-152
1948 y(to)f(in-line)f(assem)n(bly)g(and)f(library)i(calls.)37
b(Generally)-6 b(,)27 b(it)g(has)f(b)r(een)-152 2031
y(assumed)40 b(that)f(v)n(ector)h(compilers)g(pro)n(vide)g(the)f(most)h
(promis-)-152 2114 y(ing)29 b(means)e(of)i(exploiting)g(m)n(ultimedia)e
(instructions.)42 b(Although)-152 2197 y(v)n(ectorization)28
b(tec)n(hnology)e(is)h(w)n(ell)h(understo)r(o)r(d,)e(it)h(is)g(inheren)
n(tly)-152 2280 y(complex)f(and)g(fragile.)40 b(In)25
b(addition,)j(it)e(is)i(incapable)f(of)g(lo)r(cating)-152
2363 y(SIMD-st)n(yle)e(parallelism)i(within)f(a)g(basic)g(blo)r(c)n(k.)
-40 2446 y(In)40 b(this)h(pap)r(er)f(w)n(e)h(in)n(tro)r(duce)f(the)g
(concept)h(of)g Fs(Sup)l(erwor)l(d)-152 2529 y(L)l(evel)27
b(Par)l(al)t(lelism)g(\(SLP\))p Ft(,)e(a)g(no)n(v)n(el)g(w)n(a)n(y)g
(of)g(viewing)h(parallelism)-152 2612 y(in)32 b(m)n(ultimedia)d(and)i
(scien)n(ti\014c)h(applications.)53 b(W)-6 b(e)30 b(b)r(eliev)n(e)i
(SLP)-152 2695 y(is)39 b(fundamen)n(tally)e(di\013eren)n(t)g(from)h
(the)f(lo)r(op)i(lev)n(el)g(parallelism)-152 2778 y(exploited)23
b(b)n(y)e(traditional)j(v)n(ector)f(pro)r(cessing,)i(and)d(therefore)h
(de-)-152 2861 y(mands)29 b(a)i(new)f(metho)r(d)f(of)i(extracting)f
(it.)48 b(W)-6 b(e)30 b(ha)n(v)n(e)f(dev)n(elop)r(ed)-152
2944 y(a)35 b(simple)f(and)h(robust)f(compiler)g(for)i(detecting)e(SLP)
h(that)f(tar-)-152 3027 y(gets)23 b(basic)g(blo)r(c)n(ks)f(rather)g
(than)f(lo)r(op)i(nests.)34 b(As)21 b(with)i(tec)n(hniques)-152
3110 y(designed)31 b(to)f(extract)f(ILP)-6 b(,)30 b(ours)g(is)h(able)f
(to)g(exploit)h(parallelism)-152 3193 y(b)r(oth)24 b(across)h(lo)r(op)f
(iterations)h(and)e(within)h(basic)g(blo)r(c)n(ks.)34
b(The)24 b(re-)-152 3276 y(sult)k(is)h(an)f(algorithm)h(that)e(pro)n
(vides)h(excellen)n(t)h(p)r(erformance)f(in)-152 3359
y(sev)n(eral)k(application)g(domains.)50 b(In)30 b(our)h(exp)r(erimen)n
(ts,)g(dynamic)-152 3442 y(instruction)e(coun)n(ts)g(w)n(ere)h(reduced)
e(b)n(y)g(46\045.)46 b(Sp)r(eedups)28 b(ranged)-152 3525
y(from)e(1.24)h(to)f(6.70.)-152 3721 y Fu(1)83 b(Intro)r(duction)-152
3878 y Ft(The)33 b(recen)n(t)f(shift)h(to)n(w)n(ard)f(computation-in)n
(tensiv)n(e)f(m)n(ultimedia)-152 3961 y(w)n(orkloads)i(has)e(resulted)g
(in)h(a)f(v)l(ariet)n(y)g(of)h(new)f(m)n(ultimedia)f(ex-)-152
4044 y(tensions)20 b(to)f(curren)n(t)f(micropro)r(cessors)39
b([6,)19 b(10)q(,)g(16)q(,)g(18)q(,)g(20)q(].)32 b(Man)n(y)-152
4127 y(new)c(designs)g(are)g(targeted)g(sp)r(eci\014cally)g(at)f(the)g
(m)n(ultimedia)f(do-)-152 4210 y(main)20 b([3,)h(7,)f(11)q(].)33
b(This)21 b(trend)e(is)h(lik)n(ely)g(to)h(con)n(tin)n(ue)e(as)i(it)f
(has)g(b)r(een)-152 4293 y(pro)t(jected)28 b(that)f(m)n(ultimedia)e
(pro)r(cessing)k(will)f(so)r(on)g(b)r(ecome)e(the)-152
4376 y(main)f(fo)r(cus)i(of)f(micropro)r(cessor)h(design)g([8].)-40
4459 y(While)i(di\013eren)n(t)e(pro)r(cessors)j(v)l(ary)d(in)h(the)f(t)
n(yp)r(e)g(and)h(n)n(um)n(b)r(er)-152 4542 y(of)20 b(m)n(ultimedia)e
(instructions)h(o\013ered,)i(at)e(the)f(core)i(of)g(eac)n(h)f(is)g(a)h
(set)-152 4625 y(of)26 b(short)g(SIMD)e(or)i(sup)r(erw)n(ord)g(op)r
(erations.)35 b(These)26 b(instructions)-152 4708 y(op)r(erate)21
b(concurren)n(tly)f(on)h(data)f(that)g(are)h(pac)n(k)n(ed)f(in)g(a)h
(single)h(reg-)-152 4857 y Fr(P)n(ermission)16 b(to)h(mak)n(e)f
(digital)g(or)g(hard)g(copies)g(of)g(all)h(or)g(part)f(of)h(this)f(w)n
(ork)h(for)-152 4924 y(p)r(ersonal)i(or)i(classro)r(om)e(use)h(is)g
(gran)n(ted)g(without)g(fee)e(pro)n(vided)h(that)h(copies)-152
4990 y(are)25 b(not)h(made)e(or)h(distributed)f(for)h(pro\014t)g(or)g
(commercial)e(adv)l(an)n(tage)i(and)-152 5057 y(that)c(copies)g(b)r
(ear)f(this)h(notice)f(and)h(the)f(full)g(citation)h(of)g(the)f
(\014rst)h(page.)29 b(T)-5 b(o)-152 5123 y(cop)n(y)23
b(otherwise,)g(or)h(republish,)e(to)i(p)r(ost)f(on)h(serv)n(ers)f(or)h
(to)f(redistribute)f(to)-152 5189 y(lists,)h(requires)e(prior)g(sp)r
(eci\014c)f(p)r(ermission)h(and/or)h(a)h(fee.)-152 5256
y Fq(PLDI)j(2000)p Fr(,)c(V)-5 b(ancouv)n(er,)20 b(British)j(Colum)n
(bia,)e(Canada.)-152 5322 y(Cop)n(yrigh)n(t)i(2000)f(A)n(CM)h
(1-58113-199-2/00/0006...$5.00.)2040 1376 y Ft(ister)31
b(or)g(memory)e(lo)r(cation.)50 b(In)30 b(the)g(past,)j(suc)n(h)d
(systems)f(could)2040 1459 y(accommo)r(date)k(only)f(small)h(data)g(t)n
(yp)r(es)g(of)g(8)g(or)h(16)f(bits,)i(mak-)2040 1542
y(ing)g(them)f(suitable)i(for)g(a)f(limited)g(set)g(of)h(applications.)
64 b(With)2040 1625 y(the)26 b(emergence)f(of)i(128-bit)g(sup)r(erw)n
(ords,)f(new)h(arc)n(hitectures)f(are)2040 1708 y(capable)33
b(of)g(p)r(erforming)f(four)h(32-bit)f(op)r(erations)i(with)e(a)g
(single)2040 1791 y(instruction.)j(By)25 b(adding)g(\015oating)h(p)r
(oin)n(t)f(supp)r(ort)g(as)h(w)n(ell,)g(these)2040 1874
y(extensions)19 b(can)g(no)n(w)g(b)r(e)g(used)f(to)h(p)r(erform)g(more)
f(general)i(purp)r(ose)2040 1957 y(computation.)2152
2040 y(It)27 b(is)h(not)g(surprising)g(that)f(SIMD)g(execution)h(units)
f(ha)n(v)n(e)g(ap-)2040 2123 y(p)r(eared)36 b(in)g(desktop)f(micropro)r
(cessors.)67 b(Their)37 b(simple)f(con)n(trol,)2040 2206
y(replicated)g(functional)h(units,)h(and)e(absence)g(of)g(hea)n(vily-p)
r(orted)2040 2289 y(register)j(\014les)g(mak)n(e)e(them)g(inheren)n
(tly)g(simple)h(and)g(extremely)2040 2372 y(amenable)d(to)h(scaling.)65
b(As)36 b(the)f(n)n(um)n(b)r(er)e(of)k(a)n(v)l(ailable)f(transis-)2040
2455 y(tors)e(increases)i(with)e(adv)l(ances)f(in)h(semiconductor)f
(tec)n(hnology)-6 b(,)2040 2538 y(datapaths)26 b(are)g(lik)n(ely)g(to)g
(gro)n(w)g(ev)n(en)f(larger.)2152 2621 y(T)-6 b(o)r(da)n(y)g(,)24
b(use)g(of)g(m)n(ultimedia)e(extensions)i(is)g(di\016cult)g(since)g
(ap-)2040 2704 y(plication)36 b(writers)h(are)e(largely)i(restricted)e
(to)h(using)f(in-line)g(as-)2040 2787 y(sem)n(bly)25
b(routines)i(or)f(sp)r(ecialized)i(library)f(calls.)37
b(The)27 b(problem)e(is)2040 2870 y(exacerbated)33 b(b)n(y)e
(inconsistencies)j(among)e(di\013eren)n(t)g(instruction)2040
2953 y(sets.)53 b(One)31 b(solution)h(to)g(this)f(incon)n(v)n(enience)g
(is)h(to)g(emplo)n(y)e(v)n(ec-)2040 3036 y(torization)d(tec)n(hniques)e
(that)g(ha)n(v)n(e)g(b)r(een)g(used)g(to)h(parallelize)h(sci-)2040
3119 y(en)n(ti\014c)c(co)r(de)i(for)f(v)n(ector)g(mac)n(hines)47
b([5,)24 b(14)q(,)g(15)q(].)34 b(Since)24 b(a)g(n)n(um)n(b)r(er)2040
3202 y(of)34 b(m)n(ultimedia)e(applications)j(are)f(v)n(ectorizable,)i
(this)d(approac)n(h)2040 3285 y(promises)27 b(go)r(o)r(d)h(results.)39
b(Ho)n(w)n(ev)n(er,)27 b(man)n(y)f(imp)r(ortan)n(t)g(m)n(ultime-)2040
3368 y(dia)f(applications)h(are)f(di\016cult)f(to)h(v)n(ectorize.)35
b(Complicated)25 b(lo)r(op)2040 3451 y(transformation)c(tec)n(hniques)f
(suc)n(h)g(as)h(lo)r(op)g(\014ssion)g(and)f(scalar)i(ex-)2040
3534 y(pansion)29 b(are)g(required)f(to)h(parallelize)i(lo)r(ops)e
(that)f(are)i(only)e(par-)2040 3618 y(tially)k(v)n(ectorizable)g([2,)f
(4)q(,)g(17)q(].)50 b(Consequen)n(tly)-6 b(,)32 b(no)f(commercial)2040
3701 y(compiler)17 b(curren)n(tly)g(implemen)n(ts)e(this)j
(functionalit)n(y)-6 b(.)32 b(This)18 b(pap)r(er)2040
3784 y(presen)n(ts)28 b(a)g(metho)r(d)e(for)j(extracting)f(SIMD)f
(parallelism)i(b)r(ey)n(ond)2040 3867 y(v)n(ectorizable)e(lo)r(ops.)
2152 3950 y(W)-6 b(e)31 b(b)r(eliev)n(e)h(that)f(short)h(SIMD)f(op)r
(erations)i(are)f(w)n(ell)h(suited)2040 4033 y(to)22
b(exploit)g(a)g(fundamen)n(tally)f(di\013eren)n(t)g(t)n(yp)r(e)g(of)i
(parallelism)g(than)2040 4116 y(the)e(v)n(ector)f(parallelism)i(asso)r
(ciated)h(with)e(traditional)h(v)n(ector)f(and)2040 4199
y(SIMD)31 b(sup)r(ercomputers.)53 b(W)-6 b(e)32 b(denote)g(this)g
(parallelism)h Fs(Sup)l(er-)2040 4282 y(wor)l(d)d(L)l(evel)g(Par)l(al)t
(lelism)f(\(SLP\))g Ft(since)f(it)g(comes)f(in)h(the)f(form)h(of)2040
4365 y(sup)r(erw)n(ords)34 b(con)n(taining)h(pac)n(k)n(ed)d(data.)59
b(V)-6 b(ector)33 b(sup)r(ercomput-)2040 4448 y(ers)28
b(require)f(large)h(amoun)n(ts)f(of)h(parallelism)g(in)g(order)f(to)h
(ac)n(hiev)n(e)2040 4531 y(sp)r(eedups,)21 b(whereas)g(SLP)e(can)h(b)r
(e)f(pro\014table)h(when)f(parallelism)i(is)2040 4614
y(scarce.)39 b(F)-6 b(rom)26 b(this)h(p)r(ersp)r(ectiv)n(e,)g(w)n(e)h
(ha)n(v)n(e)e(dev)n(elop)r(ed)g(a)h(general)2040 4697
y(algorithm)22 b(for)h(detecting)f(SLP)g(that)g(targets)h(basic)f(blo)r
(c)n(ks)g(rather)2040 4780 y(than)j(lo)r(op)i(nests.)2152
4863 y(In)39 b(some)f(resp)r(ects,)44 b(sup)r(erw)n(ord)39
b(lev)n(el)h(parallelism)g(is)f(a)h(re-)2040 4946 y(stricted)21
b(form)g(of)h(ILP)-6 b(.)21 b(ILP)g(tec)n(hniques)g(ha)n(v)n(e)f(b)r
(een)h(v)n(ery)f(success-)2040 5029 y(ful)27 b(in)f(the)h(general)g
(purp)r(ose)g(computing)e(arena,)j(partly)e(b)r(ecause)2040
5112 y(of)34 b(their)f(abilit)n(y)g(to)h(\014nd)e(parallelism)i(within)
f(basic)h(blo)r(c)n(ks.)57 b(In)2040 5195 y(the)28 b(same)g(w)n(a)n(y)g
(that)g(lo)r(op)g(unrolling)h(translates)h(lo)r(op)f(lev)n(el)f(par-)
2040 5278 y(allelism)23 b(in)n(to)e(ILP)-6 b(,)21 b(v)n(ector)h
(parallelism)g(can)g(b)r(e)f(transformed)h(in)n(to)2040
5361 y(SLP)-6 b(.)21 b(This)g(realization)i(allo)n(ws)g(for)f(the)f
(parallelization)i(of)f(v)n(ector-)p eop
%%Page: 2 2
2 1 bop 232 -152 a
 9472573 6346617 1907671 31246336 20852817 44073779 startTexFig

 doclip
 232 -152 a
%%BeginDocument: isomorph.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: isomorph2.fm
%%BoundingBox: 29 475 317 670
%%Creator: PSCRIPT.DRV Version 4.0
%%CreationDate: 12/28/99 00:42:15
%%Pages: 1
%%Requirements: None
%%DocumentNeededFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%LanguageLevel: 1
%%EndComments

%%BeginProlog 
%%BeginProcSet: Pscript_Res_Emul 1.0 0
/defineresource where{pop}{userdict begin/defineresource{userdict/Resources 2
copy known{get begin}{15 dict dup begin put}ifelse exch readonly exch
currentdict 1 index known not{dup 30 dict def}if load 3 -1 roll 2 index put
end}bind readonly def/findresource{userdict/Resources get exch get exch get}
bind readonly def/resourceforall{pop pop pop pop}bind readonly def
/resourcestatus{userdict/Resources 2 copy known{get exch 2 copy known{get exch
known{0 -1 true}{pop pop false}ifelse}{pop pop pop false}ifelse}{pop pop false
}ifelse}bind readonly def end}ifelse
%%EndProcSet
%%BeginResource: procset Pscript_Win_Driver 2.0 0
/Pscript_Win_Driver 200 dict dup begin
%%BeginResource: file Pscript_FatalError 2.0 0
/FatalErrorIf{{initgraphics findfont exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def
%%EndResource
/VM? {vmstatus exch sub exch pop gt { [
(This job requires more memory than is available in this printer.) 100 500
(Try one or more of the following, and then print again:) 100 485
(In the PostScript dialog box, click Optimize For Portability.) 115 470
(In the Device Options dialog box, make sure the Available Printer Memory is accurate.) 115 455
(Reduce the number of fonts in the document.) 115 440
(Print the document in parts.) 115 425
12 /Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%) =
true FatalErrorIf}if} bind def
%%BeginResource: file Pscript_Win_Utils 2.0 0
/|/def load def/,/load load |/~/exch , |/?/ifelse , |/!/pop , |/`/begin , |/^
/index , |/@/dup , |/+/translate , |/$/roll , |/U/userdict , |/M/moveto , |/-
/rlineto , |/&/currentdict , |/:/gsave , |/;/grestore , |/F/false , |/T/true ,
|/N/newpath , |/E/end , |/Ac/arc , |/An/arcn , |/A/ashow , |/D/awidthshow , |
/C/closepath , |/V/div , |/O/eofill , |/L/fill , |/I/lineto , |/-C/rcurveto ,
|/-M/rmoveto , |/+S/scale , |/Ji/setfont , |/Lc/setlinecap , |/Lj/setlinejoin
, |/Lw/setlinewidth , |/S/show , |/LH/showpage , |/K/stroke , |/W/widthshow ,
|/R/rotate , |/b{bind |}bind |/bd{bind |}bind |/xd{~ |}bd/ld{, |}bd/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/L2? F/languagelevel where{! languagelevel 2
ge{! T}if}if |/g{@ not{U/DefIf_save save put}if U/DefIf_bool 2 ^ put}b
/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e{DefIf_El !
}b/self & |/reinitialize{[/TextInit/GraphInit/UtilsInit counttomark{@ where{
self eq}{F}?{cvx exec}{!}?}repeat cleartomark}b/initialize{`{/ADO_mxRot ~ |
/TextInitialised? F | reinitialize E}{U/Pscript_Win_Data 200 dict @ ` put
/ADO_mxRot ~ |/TextInitialised? F | reinitialize}?}b/terminate{!{& self eq{
exit}{E}?}loop E}b/suspend/terminate , |/resume{` Pscript_Win_Data `}b/snap{
transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~ itransform}b
/dsnap{dtransform round ~ round ~ idtransform}b<04>cvn{}|/setjn{{statusdict
/jobname known{statusdict/jobname 3 -1 $ put}if}stopped cleartomark}b/solid{[]
0 setdash}b/setdsh{0 setdash}b/colspRefresh{}b/rp{4 2 $ M 1 ^ 0 - 0 ~ - neg 0
-}b/rr{1 ^ 0 - 0 ~ - neg 0 - C}b
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L1 2.0 0
L2? not g{/rf{N rp L}b/fx{1 1 dtransform @ 0 ge{1 sub 1}{1 add -0.25}? 3 -1 $
@ 0 ge{1 sub 1}{1 add -0.25}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{
4 -2 $ snap + +S fx rf}b/rs{N rp C K}b/rc{N rp clip N}b/sg{setgray}b/sco{
setrgbcolor}b/sgco{{sg}{sco}?}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 2.0 0
L2? g{/colspA/DeviceGray |/colspABC/DeviceRGB |/setAorABC{{colspA}{colspABC}?
setcolorspace}b/rf/rectfill , |/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5
}? 3 -1 $ @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $
idtransform}b/BZ{4 -2 $ snap + +S fx rf}b/rs/rectstroke , |/rc/rectclip , |/sg
{@ @ setcolor}b/sco{setcolor}b/colspRefresh{colspABC setcolorspace}b/sgco{{sg
}{sco}?}b/UtilsInit{F setglobal}b/definecolorrendering{/ColorRendering
defineresource !}b/findcolorrendering{@/ColorRendering resourcestatus{! !
/ColorRendering findresource T}{! F}?}b/selectcolorrendering{@/ColorRendering
resourcestatus{! !/ColorRendering}{!/DefaultColorRendering/ColorRendering}?
findresource setcolorrendering}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Encoding 2.0 0
/bullets{{/bullet}repeat}b/ANSIEncoding[/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18
bullets StandardEncoding 32 95 getinterval aload ! 3 bullets/quotesinglbase
/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron
/guilsinglleft/OE 4 bullets/quoteleft/quoteright/quotedblleft/quotedblright
/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe 2 bullets
/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]| ANSIEncoding @ 39/quotesingle put 96/grave
put/ANSIEncodingOld ANSIEncoding 256 array copy | ANSIEncodingOld @[138 153
154 169 172 174 177 178 179 181 185 188 189 190 208 215 221 222 240 247 253
254]{/bullet put @}forall 166/bar put 176/ring put
%%EndResource
%%BeginResource: file Pscript_Win_Text 2.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & |/TextInitialised? T |
/fM[1 0 0 -1 0 0]|/mFM matrix |/iMat[1 0 0.212557 neg 1 0 0]|}if}b/xUP null |
/yUP null |/uW null |/xSP null |/ySP null |/sW null |/copyfont{1 ^ length add
dict `{1 ^/FID ne{|}{! !}?}forall & E}b/rF{3 copyfont @ `/Encoding
ANSIEncoding &/CharStrings known{CharStrings/Eth known not{! ANSIEncodingOld}
if}if | E}b/mF{findfont ~{@/Encoding get @ StandardEncoding eq{! T}{{
ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{rF}{3 copyfont}? `
/OrigFontType ~ |/OrigFontName ~ | & E 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0
put fM makefont Pscript_Windows_Font 3 1 $ put}b/xF{scalefont
Pscript_Windows_Font 3 1 $ put}b/xMF{mFM astore makefont Pscript_Windows_Font
3 1 $ put}b/xF2/scalefont , |/xMF2{mFM astore makefont}b/sLT{: Lw -M
currentpoint snap M 0 - 0 Lc K ;}b/sSU{N/uW ~ |/yUP ~ |/xUP ~ |}b/sU{xUP yUP
uW sLT}b/sST{N/sW ~ |/ySP ~ |/xSP ~ |}b/sT{xSP ySP sW sLT}b/sR{: + R 0 0 M}b
/sRxy{: matrix astore concat 0 0 M}b/eR/; , |
%%EndResource
%%BeginResource: file Pscript_Win_Text_Bold 2.0 0
/mBF{@ 4 copyfont `/FontName ~ |/OrigFontType ~ |/OrigFontName ~ | 0
FontMatrix idtransform ! &/PaintType known{PaintType 0 eq{/PaintType 2 |
/StrokeWidth ~ |}{PaintType 1 eq PaintType 2 eq or PaintType 3 eq or &
/StrokeWidth known and{StrokeWidth add/StrokeWidth ~ |}{!}?}?}{!}? @ & E
definefont Pscript_Windows_Font 3 1 $ put}b/xBF{Pscript_Windows_Font ` 1 ^
/FontName get 1 ^ scalefont 3 1 $ scalefont 2 copy ~ | ~ ! | E}b/xMBF{mFM
astore Pscript_Windows_Font ` 1 ^/FontName get 1 ^ makefont 3 1 $ makefont 2
copy ~ | ~ ! | E}b/xBF2{/sB0 ~ mBF/sB1 sB0 3 -1 $ xBF sB1}b/xMBF2{/sB0 ~ mBF
mFM astore/sB1 sB0 3 -1 $ xMBF sB1}b/sB{: Pscript_Windows_Font currentfont get
Ji @ S ; S}b/asB{: Pscript_Windows_Font currentfont get Ji 3 copy A ; A}b/wsB{
: Pscript_Windows_Font currentfont get Ji 4 copy W ; W}b/awsB{:
Pscript_Windows_Font currentfont get Ji 6 copy D ; D}b/sBT3{: @ S ; 1 1 -M S}b
/asBT3{: 3 copy A ; 1 1 -M A}b/wsBT3{: 4 copy W ; 1 1 -M W}b/awsBT3{: 6 copy D
; 1 1 -M D}b/mIF{iMat 4 3 -1 $ put 2 copyfont `/OrigFontType ~ |/OrigFontName
~ | @ & E definefont iMat makefont Pscript_Windows_Font 3 1 $ put}b
%%EndResource
%%BeginResource: file Pscript_Win_Graphics 2.0 0
/SavedCTM null |/CTMsave{/SavedCTM SavedCTM currentmatrix |}b/CTMrestore{
SavedCTM setmatrix}b/mp null |/ADO_mxRot null |/GDIHMatrix null |
/GDIHPatternDict 22 dict | GDIHPatternDict `/PatternType 1 |/PaintType 2 |
/Reps L2?{1}{5}? |/XStep 8 Reps mul |/YStep XStep |/BBox[0 0 XStep YStep]|
/TilingType 1 |/PaintProc{` 1 Lw[]0 setdash PaintData , exec E}b/FGnd null |
/BGnd null |/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b
/HS_BDiagonal{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep
XStep YStep gt{XStep}{YStep}? |/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8
Reps mul + K}b/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag
{Reps{0 0 M MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps
mul + 0 YStep M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M
MaxXYStep @ neg - 0 8 +}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E
/makehatch{GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0/HS_Horizontal
makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal makehatch}b/h3{
/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5/HS_DiagCross
makehatch}b/GDIBWPatternDict 17 dict @ `/PatternType 1 |/PaintType L2?{1}{2}?
|/RepsV L2?{1}{6}? |/RepsH L2?{1}{5}? |/BBox[0 0 RepsH 1]|/TilingType 1 |
/XStep 1 |/YStep 1 |/Height 8 RepsV mul |/Width 8 |/mx[Width 0 0 Height neg 0
Height]|/FGnd null |/BGnd null |/SetBGndFGnd L2?{{BGnd null ne{BGnd aload !
sgco BBox aload ! 2 ^ sub ~ 3 ^ sub ~ rf}if FGnd null ne{FGnd aload ! sgco}if}
}{{}}? b/PaintProc{` SetBGndFGnd RepsH{Width Height F mx PaintData imagemask
Width 0 +}repeat E}b E |/GDIBWPatternMx null |/pfprep{save 4 1 $
/PatternOfTheDay 4 1 $ GDIBWPatternDict `/PaintData ~ |/BGnd ~ |/FGnd ~ | E
CTMsave GDIBWPatternMx setmatrix GDIBWPatternDict matrix mp CTMrestore ~ !}b
/hrf null |/prf{pfprep ~ 6 1 $ 5 hrf restore}b/GraphInit{GDIHMatrix null eq{
/SavedCTM matrix | : ADO_mxRot concat 0 0 snap + : 0.48 @ GDIHPatternDict `
YStep mul ~ XStep mul ~ dsnap YStep V ~ XStep V ~ E +S/GDIHMatrix matrix
currentmatrix readonly | ; : 0.24 -0.24 +S GDIBWPatternDict ` Width Height E
dsnap +S/GDIBWPatternMx matrix currentmatrix readonly | ; ;}if}b/cirp{360 0 An
C}b/ellp{CTMsave + +S 0.5 0 M 0 0 0.5 360 0 An C CTMrestore}b/rrp{/rad ~ |/y2
~ |/x2 ~ |/y1 ~ |/x1 ~ | x2 x1 add 2 V y1 M x1 y1 x1 y2 rad arct x1 y2 x2 y2
rad arct x2 y2 x2 y1 rad arct x2 y1 x1 y1 rad arct C}b/RRp{CTMsave + +S/dyS ~
|/dxS ~ | dxS 2 V 0 M 0 0 0 dyS 0.5 arct 0 dyS dxS dyS 0.5 arct dxS dyS dxS 0
0.5 arct dxS 0 0 0 0.5 arct C CTMrestore}b
%%EndResource
%%BeginResource: file Pscript_Win_Graphics_L1 2.0 0
L2? not g{/arct{arcto ! ! ! !}b/GDIpattfill{@ ` BGnd null ne PaintType 2 eq
and{: BGnd aload ! sgco fEOFill{O}{L}? ; FGnd aload ! U/fGray 2 ^ put{2}{4}?
-1 $}if E @ patterncalc : 4 ^/PaintType get 2 eq{fGray{6 -1 $ sg}{8 -3 $ sco}?
}if fEOFill{eoclip}{clip}? N patternfill ; N}b/hrf{/fGray 1 ^ 6 eq | -4 $ N rp
C/fEOFill F | GDIpattfill}b/hfMain{/fEOFill ~ |/fGray ~ | GDIpattfill}b/hf{T
hfMain}b/hfW{F hfMain}b/hs{currentpoint strokepath M hfW}b/pfMain{/fEOFill ~ |
pfprep GDIpattfill restore N}b/pf{T pfMain}b/pfW{F pfMain}b/ps{currentpoint
strokepath M pfW}b/mpstr 1 string |/mp{~ @ length 12 add dict copy `
/PatternCTM matrix currentmatrix |/PatternMatrix ~ |/PatWidth XStep mpstr
length mul |/PatHeight YStep |/FontType 3 |/Encoding 256 array | 3 string 0 1
255{Encoding ~ @ 3 ^ cvs cvn put}for !/FontMatrix matrix |/FontBBox BBox |
/BuildChar{! @ ` XStep 0 FontBBox aload ! setcachedevice/PaintProc , E : exec
;}b & E ~ @ 3 -1 $ definefont}b/patterncalc{` : PatternCTM setmatrix
PatternMatrix concat BBox aload ! ! ! + pathbbox ; PatHeight V ceiling 4 1 $
PatWidth V ceiling 4 1 $ PatHeight V floor 4 1 $ PatWidth V floor 4 1 $ 2 ^
sub cvi abs ~ 3 ^ sub cvi abs ~ 4 2 $ PatHeight mul ~ PatWidth mul ~ E}b
/patternfill{5 -1 $ @ ` Ji PatternCTM setmatrix PatternMatrix concat 0 2 ^ 2 ^
M 0 1 mpstr length 1 sub{1 ^ mpstr 3 1 $ put}for ! 2 ^{currentpoint 5 ^{mpstr
S}repeat YStep add M}repeat ! ! ! ! E}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Graphics_L2 2.0 0
L2? g{/mp/makepattern , |/hrf{6 eq setAorABC setpattern rectfill}b/hf{
setAorABC setpattern O}b/hfW{setAorABC setpattern L}b/hs{setAorABC setpattern
K}b/pf{pfprep setpattern O restore N}b/pfW{pfprep setpattern L restore N}b/ps{
pfprep setpattern K restore N}b}e
%%EndResource
%%BeginResource: file Pscript_Win_BW_Images 2.0 0
/iw 0 |/ih 0 |/im_save 0 |/s 0 |/polarity 0 |/smoothflag 0 |/mystring 0 |/bpc
0 |/setup1asciiproc{[currentfile mystring/readhexstring cvx/! cvx]cvx bind}b
/setup1binaryproc{[currentfile mystring/readstring cvx/! cvx]cvx bind}b
/setup2asciiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}b
/setup2binaryproc{currentfile/RunLengthDecode filter}b/mycolorspace{colspABC}|
/myimagedict{/myimagedict 10 dict | myimagedict @ `/ImageType 1 |
/MultipleDataSource F | E}b/imageprocarray[/setup1binaryproc/setup1asciiproc
/setup2binaryproc/setup2asciiproc/setup1binarydecodeproc/setup1asciidecodeproc
]|/L2Polarity{{[1 0]}{[0 1]}?}b/Q{/im_save save | imageprocarray ~ get/s ~ , |
L2Polarity/polarity ~ |/smoothflag ~ | snap +/dx 2 ^ |/dy 1 ^ | +S/mystring ~
string |/bpc ~ |/ih ~ |/iw ~ |}b/X{/im_save save | imageprocarray ~ get/s ~ ,
| L2Polarity/polarity ~ |/smoothflag ~ | snap +/dx 2 ^ |/dy 1 ^ | +S/mystring
~ string |/bpc ~ |/ih ~ |/iw ~ |}b/Z{im_save restore}b/Y{sgco myimagedict @ `
/Width iw |/Height ih |/Decode polarity |/ImageMatrix[iw 0 0 ih 0 0]|
/DataSource s |/BitsPerComponent 1 |/Interpolate smoothflag | E imagemask}b
%%EndResource
%%BeginResource: file Pscript_Win_BW_Images_L1 2.0 0
L2? not g{/setup2asciiproc{[/Level2ImagesError , aload ! T FatalErrorIf}b
/setup2binaryproc/setup2asciiproc , |/L2Polarity{}|/Y{sgco iw ih polarity[iw 0
0 ih 0 0]s imagemask}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Co_Images_L1 2.0 0
L2? not g{/testsystemdict{where{systemdict eq{T}{F}?}{F}?}b/c 1 |/colorimage
where{! T}{F}?{/c 0 statusdict `/processcolors where{! ! processcolors}{
/deviceinfo where{! deviceinfo/Colors known{!{deviceinfo/Colors get}}if}if}? E
| c 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict/currentcmykcolor testsystemdict and and
and not{/c 0 |}if}if}if c @ 1 ne ~ @ 3 ne ~ 4 ne and and{/c 0 |}if c 1 eq g{
/expandbw{expandfactor mul round cvi bwclut ~ get 255 V}b/doclutimage{!/bwclut
~ | bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/expandfactor ~ |[/expandbw ,/exec , @
currenttransfer ~]cvx bind settransfer iw ih bpc[iw 0 0 ih 0 0]s image}b}e c @
3 eq ~ 4 eq or g{/nullproc{{}}|/concatutil{/exec , 7 -1 $/exec ,}b/defsubclut{
1 add getinterval |}b/spconcattransfer{/Dclut ~ |/Cclut ~ |/Bclut ~ |/Aclut ~
|/ncompute ~ , | currentcolortransfer[{Aclut ncompute}concatutil]cvx[{Bclut
ncompute}concatutil]cvx[{Cclut ncompute}concatutil]cvx[{Dclut ncompute}
concatutil]cvx setcolortransfer}b/setuprgbcluts{/bit3x rgbclut length 3 sub |
/bit1x bit3x 3 idiv |/rclut rgbclut |/gclut rclut 1 bit3x defsubclut/bclut
rclut 2 bit3x defsubclut}b}e c 3 eq g{/3compute{~ bit3x mul round cvi get 255
V}b/doclutimage{/rgbclut ~ | ! setuprgbcluts/3compute rclut gclut bclut @
spconcattransfer iw ih bpc[iw 0 0 ih 0 0][s/exec ,/@ , @]cvx nullproc nullproc
T 3 colorimage}b}e c 4 eq g{/ftoint{1 ~ sub 255 mul round cvi}b/stuffclut{
cmykindex 3 -1 $ put}b/4compute{~ bit4x mul round cvi get 255 V}b
/invalidcolortable? T |/computecmykclut{setuprgbcluts/bit4x rgbclut length 3
idiv 4 mul 4 sub |/cmykclut bit4x 4 add string |/cclut cmykclut |/mclut cclut
1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x
defsubclut/cmykindex 0 | 0 1 bit1x{@/cmykindex ~ bit1x ~ sub 4 mul | 3 mul @
rclut ~ get 255 V ~ @ gclut ~ get 255 V ~ bclut ~ get 255 V setrgbcolor
currentcmykcolor ftoint kclut stuffclut ftoint yclut stuffclut ftoint mclut
stuffclut ftoint cclut stuffclut}for}b/doclutimage{/rgbclut ~ | !
invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut
spconcattransfer iw ih bpc[iw 0 0 ih 0 0][s/exec ,/@ , @ @]cvx nullproc
nullproc nullproc T 4 colorimage}b}e c 0 eq g{/a{3 mul 3 getinterval
putinterval ~ 3 add ~ 3 copy}b/8lookup/a , |/4lookup{/byte 1 ^ | -4 bitshift a
byte 15 and a}b/2lookup{/byte 1 ^ | -6 bitshift a byte -4 bitshift 3 and a
byte -2 bitshift 3 and a byte 3 and a}b/colorexpand{mystringexp 0 rgbclut 3
copy 7 -1 $/mylookup , forall ! ! ! ! !}b/createexpandstr{/mystringexp ~
mystring length mul string |}b/doclutimage{/rgbclut ~ | !/mylookup bpc 8 eq{3
createexpandstr/8lookup}{bpc 4 eq{6 createexpandstr/4lookup}{12
createexpandstr/2lookup}?}? , | iw ih bpc[iw 0 0 ih 0 0][s/exec ,/colorexpand
,/exec ,]cvx F 3 colorimage}b}e/colorimage where{! T}{F}? g{/do24image{iw ih 8
[iw 0 0 ih 0 0]s F 3 colorimage}b}DefIf_El{/rgbtogray{/str ~ |/len str length
|/smlen len 3 idiv |/rstr str |/gstr str 1 len 1 sub getinterval |/bstr str 2
len 2 sub getinterval | str @ 0 1 smlen 1 sub{@ 3 mul rstr 1 ^ get 0.3 mul
gstr 2 ^ get 0.59 mul add bstr 3 -1 $ get 0.11 mul add round cvi put @}for ! 0
smlen getinterval}b/do24image{iw ih 8[iw 0 0 ih 0 0][s/exec ,/rgbtogray ,/exec
,]cvx bind image}b}e/doNimage{bpc 24 eq{do24image}{iw ih bpc[iw 0 0 ih 0 0]s
image}?}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Co_Images_L2 2.0 0
L2? g{/doclutimage{/rgbclut ~ | ! bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ |[
/Indexed colspABC hival rgbclut]setcolorspace myimagedict @ `/Width iw |
/Height ih |/Decode[0 hival]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |
/BitsPerComponent bpc |/Interpolate smoothflag | E image}b/doCMYKclutimage{
/CMYKclut ~ | ! bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ |[/Indexed/DeviceCMYK
hival CMYKclut]setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode[0
hival]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent bpc |
/Interpolate smoothflag | E image}b/doNimage{bpc 24 eq{colspABC}{colspA}?
setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode bpc 24 eq{[0 1 0 1
0 1]}{[0 1]}? |/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent
bpc 24 eq{8}{bpc}? |/Interpolate smoothflag | E image}b/doCMYKimage{
/DeviceCMYK setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode[0 1 0
1 0 1 0 1]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent 8 |
/Interpolate smoothflag | E image}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Type3_Hdr 2.0 0
/GreNewFont{10 dict @ 3 1 $ | @ ` 4 1 $/FontType 3 |/FontMatrix ~ |/FontBBox ~
|/Encoding 256 array | 0 1 255{Encoding ~/.notdef put}for/CharProcs 257 dict |
CharProcs/.notdef{}put/Metrics 257 dict | Metrics/.notdef 3 -1 $ put/BuildChar
{/char ~ |/fontdict ~ |/charname fontdict/Encoding get char get | fontdict
/Metrics get charname get aload ! setcachedevice fontdict ` Encoding char get
CharProcs ~ get E exec}| E definefont !}|/AddChar{` Encoding 3 1 $ put
CharProcs 3 1 $ put Metrics 3 1 $ put E}|
%%EndResource
%%BeginResource: file Pscript_Win_Type1_Hdr 2.0 0
/FEbuf 2 string |/FEglyph 3 string |/FE{(G00)FEglyph copy ! 1 ~{@ 16 lt{
/offset 2 store}{/offset 1 store}? @ 16 FEbuf cvrs FEglyph ~ offset ~
putinterval 1 ^ ~ FEglyph cvn put}for}bind |/Type1Hdr{11 dict `/FontName ~ |
/PaintType ~ |/FontType 1 |/FontMatrix[1 3 ^ V 0 0 1 6 ^ V 0 0]| !/Encoding
256 array 0 1 255{1 ^ ~/.notdef put}for 3 ^ 3 ^ FE | ! !/FontBBox{0 0 0 0}| &
E currentfile eexec}bind |
%%EndResource
/pp 1 string |/ss 1 string |/rledecodebinary{/DC 0 |/BC 0 |{DC mystring length
ge{exit}if currentfile ss readstring ! 0 get/BC ~ | BC 127 le{/BC BC 1 add |
DC 1 DC BC add 1 sub{mystring ~ currentfile ss readstring ! 0 get put}for}{/BC
257 BC sub | currentfile ss readstring ! 0 get/pp ~ | DC 1 DC BC add 1 sub{
mystring ~ pp put}for}?/DC DC BC add |}loop mystring}b/rledecodeascii{/DC 0 |
/BC 0 |{DC mystring length ge{exit}if currentfile ss readhexstring ! 0 get/BC
~ | BC 127 le{/BC BC 1 add | DC 1 DC BC add 1 sub{mystring ~ currentfile ss
readhexstring ! 0 get put}for}{/BC 257 BC sub | currentfile ss readhexstring !
0 get/pp ~ | DC 1 DC BC add 1 sub{mystring ~ pp put}for}?/DC DC BC add |}loop
mystring}b/setup1asciidecodeproc{[/rledecodeascii cvx]cvx bind}b
/setup1binarydecodeproc{[/rledecodebinary cvx]cvx bind}b
%%BeginResource: file Pscript_Win_Compat 2.0 0
userdict/Pscript_Win_Compat 13 dict dup begin/bd{bind def}bind def/ld{load def
}bd/CB{pop pop pop pop}bind def/B{pop pop pop pop}bind def/$x matrix def/SS{
/pagesave save def}bind def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}bind def/ANSIVec[0/grave 1/acute 2/circumflex 3
/tilde 4/macron 5/breve 6/dotaccent 7/dieresis 8/ring 9/cedilla 10
/hungarumlaut 11/ogonek 12/caron 13/dotlessi 39/quotesingle 96/grave 124/bar
130/quotesinglbase 131/florin 132/quotedblbase 133/ellipsis 134/dagger 135
/daggerdbl 136/circumflex 137/perthousand 138/Scaron 139/guilsinglleft 140/OE
145/quoteleft 146/quoteright 147/quotedblleft 148/quotedblright 149/bullet 150
/endash 151/emdash 152/tilde 153/trademark 154/scaron 155/guilsinglright 156
/oe 159/Ydieresis 160/space 161/exclamdown 164/currency 165/yen 166/brokenbar
167/section 168/dieresis 169/copyright 170/ordfeminine 171/guillemotleft 172
/logicalnot 173/hyphen 174/registered 175/macron 176/degree 177/plusminus 178
/twosuperior 179/threesuperior 180/acute 181/mu 182/paragraph 183
/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 187
/guillemotright 188/onequarter 189/onehalf 190/threequarters 191/questiondown
192/Agrave 193/Aacute 194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198
/AE 199/Ccedilla 200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204
/Igrave 205/Iacute 206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve
211/Oacute 212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 223
/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 229
/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 235/edieresis
236/igrave 237/iacute 238/icircumflex 239/idieresis 240/eth 241/ntilde 242
/ograve 243/oacute 244/ocircumflex 245/otilde 246/odieresis 247/divide 248
/oslash 249/ugrave 250/uacute 251/ucircumflex 252/udieresis 253/yacute 254
/thorn 255/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{
pop pop}ifelse}forall/initialize{currentdict exch begin begin}bind def
/terminate{/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate
load def/resume/initialize load def/M/moveto load def end put/Courier findfont
10 scalefont setfont
%%EndResource
end /ProcSet defineresource pop
%%EndResource
%%EndProlog

%%BeginSetup 
Pscript_Win_Compat dup /initialize get exec
[ 1.000 0 0 1.000 0 0 ] false /Pscript_Win_Driver /ProcSet findresource dup /initialize get exec


/mysetup [ 0.120 0 0 -0.120 12.960 778.920 ] | 
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
userdict begin /pagesave save def end mysetup concat colspRefresh : 1.000 1.000 1.000 sco 0 0 5100 6600 rf ; 
%%EndPageSetup

Pscript_Win_Compat begin /$x mysetup def end
/Pscript_Win_Driver /ProcSet findresource dup /suspend get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
 /FmPD/pdfmark FmLD
 currentdistillerparams /CoreDistVersion get 2000 ge {
  /FmPD2/pdfmark FmLD
  /FmPA { mark exch /Dest exch 5 3 roll 
	/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
  }FmBD
 } if
} if

%%EndDocument
Pscript_Win_Compat dup /suspend get exec
/Pscript_Win_Driver /ProcSet findresource dup /resume get exec
colspRefresh

: : : ; : 631 955 4252 124 rc 0 0 0 sco %%IncludeFont: Courier
(F0) cvn
0.793 
 (Courier) cvn /Type1 
T 
(Courier) cvn
mF 
(F0_116) cvn
F0
116 
xF 
F0_116
Ji 
707 955 M 
0.400 0 (a = b + c * z[i+0])A 
; : 631 1087 4252 124 rc 0 0 0 sco F0_116
Ji 
707 1087 M 
0.400 0 (d = e + f * z[i+1])A 
; : 631 1219 4252 124 rc 0 0 0 sco F0_116
Ji 
707 1219 M 
0.400 0 (r = s + t * z[i+2])A 
; : 631 1351 4252 124 rc 0 0 0 sco F0_116
Ji 
707 1351 M 
0.400 0 (w = x + y * z[i+3])A 
; 
1992 1883 N M 491 8 rr : 0 0 0 sco O ; 
2475 1887 N M 8 604 rr : 0 0 0 sco O ; 
1988 2483 N M 491 8 rr : 0 0 0 sco O ; 
1988 1883 N M 8 604 rr : 0 0 0 sco O ; 
1392 1883 N M 154 8 rr : 0 0 0 sco O ; 
1538 1887 N M 8 604 rr : 0 0 0 sco O ; 
1388 2483 N M 154 8 rr : 0 0 0 sco O ; 
1388 1883 N M 8 604 rr : 0 0 0 sco O ; 
792 1883 N M 154 8 rr : 0 0 0 sco O ; 
938 1887 N M 8 604 rr : 0 0 0 sco O ; 
788 2483 N M 154 8 rr : 0 0 0 sco O ; 
788 1883 N M 8 604 rr : 0 0 0 sco O ; 
192 1883 N M 154 8 rr : 0 0 0 sco O ; 
338 1887 N M 8 604 rr : 0 0 0 sco O ; 
188 2483 N M 154 8 rr : 0 0 0 sco O ; 
188 1883 N M 8 604 rr : 0 0 0 sco O ; 
1317 1754 N M 24 0 - 6 0 - -3 6 - -24 42 - -3 7 - -4 -7 - -24 -42 - -3 -6 - 7 0 - 3 2 - 24 42 - -7 4 - 0 -4 - 24 -42 - 7 4 - -3 2 - -24 0 - 0 -8 - C : 0 0 0 sco L ; 
1293 1754 N M 24 0 - 0 8 - -24 0 - 0 -8 - C : 0 0 0 sco L ; 
1317 1758 N M 24 0 - -24 42 - -24 -42 - 24 0 - C : 0 0 0 sco O ; 
1321 1546 N M -8 -4 rr : 0 0 0 sco O ; 
1321 1754 N M -8 4 rr : 0 0 0 sco O ; 
1321 1546 N M -8 208 rr : 0 0 0 sco O ; : 153 1886 228 140 rc 0 0 0 sco (F0_117_124) cvn
F0
117 0 0 124 0 0 
xMF 
F0_117_124
Ji 
229 1886 M 
-0.200 0 (a)A 
; : 153 2026 228 140 rc 0 0 0 sco F0_117_124
Ji 
229 2026 M 
-0.200 0 (d)A 
; : 153 2167 228 140 rc 0 0 0 sco F0_117_124
Ji 
229 2167 M 
-0.200 0 (r)A 
; : 153 2308 228 140 rc 0 0 0 sco F0_117_124
Ji 
229 2308 M 
-0.200 0 (w)A 
; : 753 1927 228 124 rc 0 0 0 sco F0_116
Ji 
829 1927 M 
0.400 0 (b)A 
; : 753 2059 228 124 rc 0 0 0 sco F0_116
Ji 
829 2059 M 
0.400 0 (e)A 
; : 753 2191 228 124 rc 0 0 0 sco F0_116
Ji 
829 2191 M 
0.400 0 (s)A 
; : 753 2323 228 124 rc 0 0 0 sco F0_116
Ji 
829 2323 M 
0.400 0 (x)A 
; : 1353 1927 228 124 rc 0 0 0 sco F0_116
Ji 
1429 1927 M 
0.400 0 (c)A 
; : 1353 2059 228 124 rc 0 0 0 sco F0_116
Ji 
1429 2059 M 
0.400 0 (f)A 
; : 1353 2191 228 124 rc 0 0 0 sco F0_116
Ji 
1429 2191 M 
0.400 0 (t)A 
; : 1353 2323 228 124 rc 0 0 0 sco F0_116
Ji 
1429 2323 M 
0.400 0 (y)A 
; : 1953 1927 2930 124 rc 0 0 0 sco F0_116
Ji 
2029 1927 M 
0.400 0 (z[i+0])A 
; : 1953 2059 2930 124 rc 0 0 0 sco F0_116
Ji 
2029 2059 M 
0.400 0 (z[i+1])A 
; : 1953 2191 2930 124 rc 0 0 0 sco F0_116
Ji 
2029 2191 M 
0.400 0 (z[i+2])A 
; : 1953 2323 2930 124 rc 0 0 0 sco F0_116
Ji 
2029 2323 M 
0.400 0 (z[i+3])A 
; : 1541 2113 228 124 rc 0 0 0 sco F0_116
Ji 
1617 2113 M 
0.400 0 (*)A 
; : 1626 2160 3257 99 rc 0 0 0 sco (F0_93) cvn
F0
93 
xF 
F0_93
Ji 
1687 2160 M 
0.200 0 (SIM)A 
-0.800 0 (D)A 
; : 941 2113 228 124 rc 0 0 0 sco F0_116
Ji 
1017 2113 M 
0.400 0 (+)A 
; : 1026 2160 3857 99 rc 0 0 0 sco F0_93
Ji 
1087 2160 M 
0.200 0 (SIM)A 
-0.800 0 (D)A 
; : 468 2123 183 99 rc 0 0 0 sco F0_93
Ji 
529 2123 M 
0.200 0 (=)A 
; ; ; 
LH 
pagesave restore
%%PageTrailer

%%Trailer
%%DocumentNeededFonts: 
%%DocumentSuppliedFonts: 
/Pscript_Win_Driver /ProcSet findresource dup /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 -152 818 a Ft(Figure)36 b(1:)54 b(Isomorphic)34 b(statemen)n(ts)h
(that)g(can)g(b)r(e)g(pac)n(k)n(ed)f(and)-152 901 y(executed)25
b(in)h(parallel.)-152 1140 y(izable)c(lo)r(ops)f(using)f(the)g(same)g
(basic)h(blo)r(c)n(k)g(analysis.)34 b(As)20 b(a)g(result,)-152
1223 y(our)26 b(algorithm)h(do)r(es)f(not)g(require)g(an)n(y)f(of)i
(the)f(complicated)g(lo)r(op)-152 1306 y(transformations)31
b(t)n(ypically)f(asso)r(ciated)h(with)f(v)n(ectorization.)47
b(In)-152 1389 y(fact,)26 b(v)n(ector)e(parallelism)i(alone)f(can)f(b)r
(e)g(unco)n(v)n(ered)g(using)g(a)h(sim-)-152 1472 y(pli\014ed)h(v)n
(ersion)g(of)g(the)f(SLP)h(compiler)g(algorithm.)-40
1555 y(The)d(remainder)e(of)i(this)g(pap)r(er)f(is)h(organized)g(as)g
(follo)n(ws:)35 b(Sec-)-152 1638 y(tion)d(2)f(de\014nes)g(sup)r(erw)n
(ord)h(lev)n(el)f(parallelism)i(and)d(compares)i(it)-152
1721 y(to)c(other)g(forms)h(of)f(parallelism.)43 b(Section)28
b(3)g(describ)r(es)h(the)f(com-)-152 1804 y(piler)f(algorithm)g(used)f
(to)g(extract)g(sup)r(erw)n(ord)h(lev)n(el)f(parallelism.)-152
1887 y(A)g(v)l(ariation)g(of)g(this)g(algorithm)g(targeting)h(v)n
(ector)e(parallelism)i(is)-152 1970 y(discussed)33 b(in)f(Section)h(4.)
55 b(Section)32 b(5)h(presen)n(ts)f(results)h(on)f(m)n(ul-)-152
2053 y(timedia)f(and)g(scien)n(ti\014c)g(b)r(enc)n(hmarks.)49
b(Section)31 b(6)h(discusses)g(ar-)-152 2136 y(c)n(hitectural)21
b(features)h(that)f(complemen)n(t)d(SLP)j(compilation.)33
b(Sec-)-152 2219 y(tion)28 b(7)g(outlines)g(reasons)h(wh)n(y)e(w)n(e)h
(b)r(eliev)n(e)g(SLP)f(algorithms)h(will)-152 2302 y(b)r(e)e
(successful,)h(and)f(Section)f(8)h(concludes.)-152 2496
y Fu(2)83 b(Sup)r(erw)n(o)n(rd)26 b(Level)i(P)n(a)n(rallelism)-152
2653 y Ft(This)38 b(section)g(b)r(egins)g(b)n(y)f(elab)r(orating)i(on)e
(the)g(notion)h(of)g(SLP)-152 2736 y(and)30 b(the)f(means)g(b)n(y)g
(whic)n(h)g(it)h(is)g(detected.)46 b(T)-6 b(erminology)30
b(is)g(in-)-152 2819 y(tro)r(duced)25 b(that)g(facilitates)i(the)e
(discussion)h(of)g(our)f(algorithms)h(in)-152 2902 y(Sections)k(3)f
(and)g(4.)45 b(W)-6 b(e)29 b(then)g(con)n(trast)g(SLP)g(to)h(other)f
(forms)g(of)-152 2985 y(parallelism)g(and)e(discuss)h(their)f(in)n
(teractions.)41 b(This)28 b(helps)g(moti-)-152 3068 y(v)l(ate)e(the)f
(need)g(for)i(a)f(new)g(compilation)g(tec)n(hnique.)-152
3254 y Fu(2.1)83 b(Description)27 b(of)g(Sup)r(erw)n(o)n(rd)f(Level)j
(P)n(a)n(rallelism)-152 3385 y Ft(Sup)r(erw)n(ord)24
b(lev)n(el)h(parallelism)h(is)f(de\014ned)e(as)i(short)g(SIMD)e(paral-)
-152 3468 y(lelism)32 b(in)f(whic)n(h)h(the)f(source)g(and)g(result)h
(op)r(erands)g(of)g(a)f(SIMD)-152 3551 y(op)r(eration)40
b(are)e(pac)n(k)n(ed)g(in)g(a)g(storage)i(lo)r(cation.)74
b(Detection)38 b(is)-152 3634 y(done)24 b(through)g(a)h(short,)g
(simple)f(analysis)i(in)e(whic)n(h)g(indep)r(enden)n(t)-152
3717 y(isomorphic)35 b(statemen)n(ts)e(are)i(iden)n(ti\014ed)f(within)g
(a)h(basic)f(blo)r(c)n(k.)-152 3800 y(Isomorphic)27 b(statemen)n(ts)g
(are)g(those)h(that)f(con)n(tain)g(the)g(same)g(op-)-152
3883 y(erations)21 b(in)e(the)g(same)g(order.)32 b(Suc)n(h)18
b(statemen)n(ts)h(can)g(b)r(e)h(executed)-152 3966 y(in)27
b(parallel)h(b)n(y)d(a)i(tec)n(hnique)e(w)n(e)i(call)h
Fs(statement)i(p)l(acking)p Ft(,)e(an)f(ex-)-152 4049
y(ample)d(of)g(whic)n(h)g(is)h(sho)n(wn)f(in)g(Figure)g(1.)34
b(Here,)25 b(source)f(op)r(erands)-152 4132 y(in)32 b(corresp)r(onding)
g(p)r(ositions)g(ha)n(v)n(e)f(b)r(een)g(pac)n(k)n(ed)g(in)n(to)g
(registers)-152 4215 y(and)23 b(the)f(addition)h(and)g(m)n
(ultiplication)g(op)r(erators)h(ha)n(v)n(e)e(b)r(een)h(re-)-152
4298 y(placed)28 b(b)n(y)f(their)g(SIMD)g(coun)n(terparts.)40
b(Since)28 b(the)f(result)h(of)g(the)-152 4381 y(computation)d(is)h
(also)g(pac)n(k)n(ed,)f(unpac)n(king)g(ma)n(y)f(b)r(e)h(required)f(de-)
-152 4464 y(p)r(ending)34 b(on)h(ho)n(w)g(the)f(data)h(are)g(used)f(in)
h(later)g(computations.)-152 4547 y(The)21 b(p)r(erformance)f(b)r
(ene\014t)g(of)h(statemen)n(t)e(pac)n(king)h(is)h(determined)-152
4630 y(b)n(y)30 b(the)h(sp)r(eedup)f(gained)i(from)f(parallelization)j
(min)n(us)29 b(the)i(cost)-152 4713 y(of)c(pac)n(king)e(and)h(unpac)n
(king.)-40 4796 y(Dep)r(ending)i(on)g(what)g(op)r(erations)h(an)f(arc)n
(hitecture)g(pro)n(vides)-152 4879 y(to)i(facilitate)i(general)e(pac)n
(king)f(and)g(unpac)n(king,)h(this)g(tec)n(hnique)-152
4962 y(can)d(actually)f(result)g(in)g(a)h(p)r(erformance)f(degradation)
h(if)g(pac)n(king)-152 5045 y(and)34 b(unpac)n(king)e(costs)j(are)f
(high)g(relativ)n(e)g(to)g(ALU)e(op)r(erations.)-152
5129 y(One)27 b(of)i(the)e(main)f(ob)t(jectiv)n(es)j(of)f(our)g(SLP)f
(detection)h(tec)n(hnique)-152 5212 y(is)j(to)f(minimize)f(pac)n(king)h
(and)g(unpac)n(king)f(b)n(y)g(lo)r(cating)j(cases)f(in)-152
5295 y(whic)n(h)24 b(pac)n(k)n(ed)g(data)g(pro)r(duced)g(as)g(a)h
(result)f(of)h(one)f(computation)-152 5378 y(can)i(b)r(e)g(used)f
(directly)h(as)g(a)g(source)g(in)g(another)g(computation.)2287
-35 y Fp(for)31 b(\(i=0;)f(i<16;)g(i++\))g({)2349 31
y(localdiff)g(=)g(ref[i])g(-)h(curr[i];)2349 98 y(diff)f(+=)h
(abs\(localdiff\);)2287 164 y(})2040 307 y Fr(\(a\))22
b(Original)g(lo)r(op.)2287 450 y Fp(for)31 b(\(i=0;)f(i<16;)g(i++\))g
({)2349 516 y(T[i])g(=)h(ref[i])f(-)h(curr[i];)2287 583
y(})2287 716 y(for)g(\(i=0;)f(i<16;)g(i++\))g({)2349
782 y(diff)g(+=)h(abs\(T[i]\);)2287 848 y(})2040 941
y Fr(\(b\))22 b(After)f(scalar)i(expansion)e(and)g(lo)r(op)h
(\014ssion.)2256 1084 y Fp(for)31 b(\(i=0;)f(i<16;)g(i+=4\))g({)2349
1151 y(localdiff)g(=)g(ref[i+0])g(-)h(curr[i+0];)2349
1217 y(diff)f(+=)h(abs\(localdiff\);)2349 1350 y(localdiff)f(=)g
(ref[i+1])g(-)h(curr[i+1];)2349 1416 y(diff)f(+=)h(abs\(localdiff\);)
2349 1549 y(localdiff)f(=)g(ref[i+2])g(-)h(curr[i+2];)2349
1616 y(diff)f(+=)h(abs\(localdiff\);)2349 1748 y(localdiff)f(=)g
(ref[i+3])g(-)h(curr[i+3];)2349 1815 y(diff)f(+=)h(abs\(localdiff\);)
2287 1881 y(})2040 2024 y Fr(\(c\))22 b(Sup)r(erw)n(ord)f(lev)n(el)g
(parallelism)g(exp)r(osed)f(after)i(unrolling.)2287 2167
y Fp(for)31 b(\(i=0;)f(i<16;)g(i+=4\))g({)2349 2233 y(localdiff0)f(=)i
(ref[i+0])f(-)h(curr[i+0];)2349 2300 y(localdiff1)e(=)i(ref[i+1])f(-)h
(curr[i+1];)2349 2366 y(localdiff2)e(=)i(ref[i+2])f(-)h(curr[i+2];)2349
2432 y(localdiff3)e(=)i(ref[i+3])f(-)h(curr[i+3];)2349
2565 y(diff)f(+=)h(abs\(localdiff0\);)2349 2632 y(diff)f(+=)h
(abs\(localdiff1\);)2349 2698 y(diff)f(+=)h(abs\(localdiff2\);)2349
2765 y(diff)f(+=)h(abs\(localdiff3\);)2287 2831 y(})2040
2924 y Fr(\(d\))22 b(P)n(ac)n(k)l(able)f(statemen)n(ts)h(group)r(ed)f
(together)g(after)g(renaming.)2040 3090 y Ft(Figure)f(2:)32
b(A)19 b(comparison)h(b)r(et)n(w)n(een)g(SLP)g(and)f(v)n(ector)h
(paralleliza-)2040 3173 y(tion)26 b(tec)n(hniques.)2152
3420 y(P)n(ac)n(k)n(ed)i(statemen)n(ts)f(that)h(con)n(tain)g(adjacen)n
(t)g(memory)e(refer-)2040 3503 y(ences)34 b(among)g(corresp)r(onding)h
(op)r(erands)f(are)g(particularly)g(w)n(ell)2040 3586
y(suited)29 b(for)g(SLP)f(execution.)43 b(This)29 b(is)g(b)r(ecause)g
(op)r(erands)g(are)g(ef-)2040 3669 y(fectiv)n(ely)34
b(pre-pac)n(k)n(ed)f(in)h(memory)e(and)i(require)g(no)g(resh)n
(u\017ing)2040 3752 y(within)h(a)f(register.)62 b(In)33
b(addition,)k(an)d(address)h(calculation)h(fol-)2040
3835 y(lo)n(w)n(ed)i(b)n(y)e(a)h(load)h(or)f(store)h(need)f(only)g(b)r
(e)f(executed)h(once)g(in-)2040 3918 y(stead)e(of)h(individually)f(for)
h(eac)n(h)f(elemen)n(t.)61 b(The)36 b(com)n(bined)d(ef-)2040
4001 y(fect)c(can)g(lead)g(to)g(a)g(signi\014can)n(t)g(p)r(erformance)f
(increase.)45 b(This)29 b(is)2040 4084 y(not)23 b(surprising)g(since)g
(v)n(ector)f(mac)n(hines)g(ha)n(v)n(e)g(b)r(een)g(successful)i(at)2040
4167 y(exploiting)33 b(the)f(same)g(phenomenon.)52 b(In)32
b(our)g(exp)r(erimen)n(ts,)h(in-)2040 4250 y(structions)i(eliminated)f
(from)g(op)r(erating)h(on)g(adjacen)n(t)g(memory)2040
4333 y(lo)r(cations)27 b(had)d(the)h(greatest)g(impact)f(on)h(sp)r
(eedup.)34 b(F)-6 b(or)25 b(this)f(rea-)2040 4416 y(son,)h(lo)r(cating)
h(adjacen)n(t)g(memory)c(references)k(forms)e(the)g(basis)i(of)2040
4499 y(our)g(algorithm,)g(discussed)g(in)g(Section)g(3.)2040
4687 y Fu(2.2)82 b(V)n(ecto)n(r)27 b(P)n(a)n(rallelism)2040
4818 y Ft(V)-6 b(ector)21 b(parallelism)h(is)g(a)g(subset)f(of)h(sup)r
(erw)n(ord)f(lev)n(el)h(parallelism.)2040 4901 y(Our)i(results)i(in)e
(Section)h(5)g(sho)n(w)h(that)e(20\045)i(of)g(dynamic)d(instruc-)2040
4984 y(tion)38 b(sa)n(vings)g(on)g(the)f(SPEC95fp)j(b)r(enc)n(hmark)c
(suite)h(are)i(from)2040 5067 y(non-v)n(ectorizable)26
b(co)r(de)g(sequences.)2152 5150 y(T)-6 b(o)19 b(b)r(etter)f(explain)g
(the)g(di\013erences)h(b)r(et)n(w)n(een)f(sup)r(erw)n(ord)g(lev)n(el)
2040 5233 y(parallelism)26 b(and)e(v)n(ector)g(parallelism,)j(w)n(e)e
(presen)n(t)f(t)n(w)n(o)h(short)f(ex-)2040 5316 y(amples,)34
b(sho)n(wn)f(in)f(Figures)i(2)e(and)g(3.)55 b(Although)32
b(the)g(\014rst)g(ex-)p eop
%%Page: 3 3
3 2 bop 95 -35 a Fp(do)31 b({)157 31 y(dst[0])f(=)h(\(src1[0])f(+)h
(src2[0]\))e(>>)i(1;)157 98 y(dst[1])f(=)h(\(src1[1])f(+)h(src2[1]\))e
(>>)i(1;)157 164 y(dst[2])f(=)h(\(src1[2])f(+)h(src2[2]\))e(>>)i(1;)157
231 y(dst[3])f(=)h(\(src1[3])f(+)h(src2[3]\))e(>>)i(1;)157
364 y(dst)61 b(+=)31 b(4;)157 430 y(src1)f(+=)h(4;)157
496 y(src2)f(+=)h(4;)95 563 y(})95 629 y(while)g(\(dst)f(!=)h(end\);)
-152 795 y Ft(Figure)22 b(3:)32 b(An)20 b(example)h(of)g(a)g
(hand-optimized)f(matrix)g(op)r(eration)-152 878 y(that)26
b(pro)n(v)n(es)f(un)n(v)n(ectorizable.)-152 1202 y(ample)k(can)f(b)r(e)
h(molded)f(in)n(to)h(a)g(v)n(ectorizable)h(form,)f(w)n(e)g(kno)n(w)g
(of)-152 1285 y(no)j(v)n(ector)f(compilers)g(that)g(can)h(b)r(e)f(used)
g(to)g(v)n(ectorize)h(the)f(sec-)-152 1368 y(ond.)36
b(F)-6 b(urthermore,)25 b(the)h(transformations)h(required)f(in)g(the)g
(\014rst)-152 1451 y(example)36 b(are)i(unnecessarily)f(complex)g(and)f
(ma)n(y)g(not)h(w)n(ork)g(in)-152 1534 y(more)27 b(complicated)g
(circumstances.)39 b(In)26 b(general,)j(a)f(v)n(ector)f(com-)-152
1617 y(piler)22 b(m)n(ust)d(emplo)n(y)h(a)h(rep)r(ertoire)g(of)h(to)r
(ols)g(in)f(order)g(to)g(parallelize)-152 1700 y(lo)r(ops)i(on)e(a)h
(case)g(b)n(y)f(case)h(basis.)34 b(By)22 b(comparison,)g(our)g(metho)r
(d)e(is)-152 1783 y(simple)f(and)h(robust,)g(y)n(et)f(still)i(capable)f
(of)g(detecting)g(the)f(a)n(v)l(ailable)-152 1866 y(parallelism.)-40
1949 y(Figure)33 b(2\(a\))g(presen)n(ts)f(the)g(inner)g(lo)r(op)i(of)f
(the)f(motion)g(esti-)-152 2032 y(mation)e(algorithm)g(used)f(for)i
(MPEG)g(enco)r(ding.)47 b(V)-6 b(ectorization)-152 2115
y(is)36 b(inhibited)e(b)n(y)g(the)g(presence)h(of)h(a)f(lo)r(op)g
(carried)h(dep)r(endence)-152 2198 y(and)24 b(a)h(function)f(call)h
(within)g(the)f(lo)r(op)h(b)r(o)r(dy)-6 b(.)33 b(T)-6
b(o)25 b(o)n(v)n(ercome)e(this,)-152 2281 y(a)h(v)n(ector)f(compiler)f
(can)i(p)r(erform)e(a)i(series)g(of)g(transformations)g(to)-152
2364 y(mold)30 b(the)h(lo)r(op)g(in)n(to)g(a)g(v)n(ectorizable)g(form.)
50 b(The)31 b(\014rst)f(is)h(scalar)-152 2447 y(expansion,)37
b(whic)n(h)e(allo)r(cates)h(a)f(new)f(elemen)n(t)g(in)g(a)h(temp)r
(orary)-152 2530 y(arra)n(y)27 b(for)h(eac)n(h)e(iteration)i(of)f(the)f
(lo)r(op)i([4)q(].)37 b(Lo)r(op)27 b(\014ssion)g(is)g(then)-152
2613 y(used)g(to)f(divide)h(the)f(statemen)n(ts)g(in)n(to)h(separate)g
(lo)r(ops)h([12)q(].)38 b(The)-152 2696 y(result)23 b(of)g(these)f
(transformations)h(is)f(sho)n(wn)h(in)f(Figure)h(2\(b\).)33
b(The)-152 2779 y(\014rst)d(lo)r(op)g(is)g(v)n(ectorizable,)i(but)d
(the)g(second)h(m)n(ust)e(b)r(e)i(executed)-152 2862
y(sequen)n(tially)-6 b(.)-40 2945 y(Figure)26 b(2\(c\))g(sho)n(ws)h
(the)e(lo)r(op)h(from)f(the)g(p)r(ersp)r(ectiv)n(e)h(of)g(SLP)-6
b(.)-152 3028 y(After)36 b(unrolling,)j(the)d(four)g(statemen)n(ts)f
(corresp)r(onding)h(to)g(the)-152 3111 y(\014rst)27 b(statemen)n(t)f
(in)h(the)f(original)j(lo)r(op)f(can)f(b)r(e)g(pac)n(k)n(ed)f
(together.)-152 3194 y(The)k(pac)n(king)g(pro)r(cess)h(e\013ectiv)n
(ely)f(mo)n(v)n(es)f(pac)n(k)l(able)g(statemen)n(ts)-152
3277 y(to)37 b(con)n(tiguous)g(p)r(ositions,)k(as)c(sho)n(wn)g(in)f
(part)g(\(d\).)67 b(The)36 b(co)r(de)-152 3360 y(motion)25
b(is)g(legal)i(b)r(ecause)e(it)h(do)r(es)f(not)g(violate)h(an)n(y)e
(dep)r(endences)-152 3443 y(\(once)32 b(scalar)i(renaming)e(is)g(p)r
(erformed\).)53 b(The)32 b(\014rst)g(four)h(state-)-152
3526 y(men)n(ts)17 b(in)i(the)f(resulting)h(lo)r(op)g(b)r(o)r(dy)e(can)
i(b)r(e)f(pac)n(k)n(ed)g(and)g(executed)-152 3609 y(in)27
b(parallel.)41 b(Their)27 b(results)h(are)g(then)e(unpac)n(k)n(ed)g(so)
h(they)g(can)g(b)r(e)-152 3692 y(used)h(in)f(the)g(sequen)n(tial)h
(computation)f(of)h(the)g(\014nal)f(statemen)n(ts.)-152
3775 y(In)32 b(the)h(end,)h(this)f(metho)r(d)f(has)h(the)g(same)f
(e\013ect)h(as)h(the)e(trans-)-152 3858 y(formations)23
b(used)f(for)h(v)n(ector)g(compilation,)g(while)h(only)e(requiring)-152
3941 y(lo)r(op)27 b(unrolling)f(and)g(scalar)h(renaming.)-40
4024 y(Figure)37 b(3)g(sho)n(ws)g(a)g(co)r(de)g(segmen)n(t)e(that)h(a)n
(v)n(erages)i(the)e(ele-)-152 4107 y(men)n(ts)g(of)i(t)n(w)n(o)f(16x16)
h(matrices.)68 b(As)37 b(is)g(the)g(case)g(with)g(man)n(y)-152
4190 y(m)n(ultimedia)30 b(k)n(ernels,)j(our)e(example)g(has)g(b)r(een)g
(hand-optimized)-152 4273 y(for)36 b(a)e(sequen)n(tial)h(mac)n(hine.)60
b(In)34 b(order)g(to)h(v)n(ectorize)g(this)g(lo)r(op,)-152
4357 y(a)f(v)n(ector)g(compiler)g(w)n(ould)g(need)f(to)h(rev)n(erse)g
(the)f(programmer-)-152 4440 y(applied)f(optimizations.)54
b(W)-6 b(ere)32 b(suc)n(h)g(metho)r(ds)f(a)n(v)l(ailable,)k(they)-152
4523 y(w)n(ould)29 b(in)n(v)n(olv)n(e)g(constructing)g(a)g
Fs(for)37 b Ft(lo)r(op,)31 b(restoring)e(the)g(induc-)-152
4606 y(tion)h(v)l(ariable,)g(and)f(re-rolling)h(the)f(lo)r(op.)45
b(In)29 b(con)n(trast,)h(lo)r(cating)-152 4689 y(SLP)j(within)h(the)e
(lo)r(op)i(b)r(o)r(dy)f(is)h(simple.)57 b(Since)33 b(the)f(optimized)
-152 4772 y(co)r(de)k(is)h(amenable)e(to)h(SLP)g(analysis,)j
(hand-optimization)c(has)-152 4855 y(had)23 b(no)g(detrimen)n(tal)f
(e\013ects)i(on)f(our)g(abilit)n(y)g(to)g(detect)g(the)g(a)n(v)l(ail-)
-152 4938 y(able)j(parallelism.)-152 5125 y Fu(2.3)83
b(Lo)r(op)28 b(Level)g(P)n(a)n(rallelism)-152 5257 y
Ft(V)-6 b(ector)25 b(parallelism,)i(exploited)e(b)n(y)f(v)n(ector)h
(computers,)g(is)g(a)h(sub-)-152 5340 y(set)21 b(of)f(lo)r(op)h(lev)n
(el)f(parallelism.)34 b(General)21 b(lo)r(op)g(lev)n(el)f(parallelism)h
(is)2040 -69 y(t)n(ypically)29 b(exploited)f(b)n(y)g(a)h(m)n(ultipro)r
(cessor)g(or)g(MIMD)g(mac)n(hine.)2040 14 y(In)37 b(man)n(y)f(cases,)42
b(parallel)d(lo)r(ops)g(ma)n(y)d(not)i(yield)f(p)r(erformance)2040
97 y(gains)c(b)r(ecause)g(of)g(\014ne-grain)f(sync)n(hronization)g(or)g
(lo)r(op-carried)2040 180 y(comm)n(unication.)f(It)18
b(is)h(therefore)h(necessary)f(to)f(\014nd)g(coarse-grain)2040
263 y(parallel)31 b(lo)r(ops)f(when)f(compiling)h(for)g(MIMD)f(mac)n
(hines.)45 b(T)-6 b(radi-)2040 346 y(tionally)g(,)20
b(a)e(MIMD)g(mac)n(hine)f(is)h(comp)r(osed)g(of)g(m)n(ultiple)f
(micropro-)2040 429 y(cessors.)35 b(It)20 b(is)i(conceiv)l(able)g(that)
f(lo)r(op)h(lev)n(el)g(parallelism)g(could)g(b)r(e)2040
512 y(exploited)f(orthogonally)i(to)e(sup)r(erw)n(ord)h(lev)n(el)f
(parallelism)h(within)2040 596 y(eac)n(h)i(pro)r(cessor.)36
b(Since)24 b(coarse-grain)i(parallelism)f(is)g(required)e(to)2040
679 y(get)36 b(go)r(o)r(d)h(MIMD)g(p)r(erformance,)i(extracting)d(SLP)g
(should)g(not)2040 762 y(detract)26 b(from)f(existing)h(MIMD)g
(parallel)h(p)r(erformance.)2040 949 y Fu(2.4)82 b(SIMD)27
b(P)n(a)n(rallelism)2040 1080 y Ft(SIMD)37 b(parallelism)i(came)f(in)n
(to)g(prominence)f(with)h(the)g(adv)n(en)n(t)2040 1163
y(of)c(massiv)n(ely)f(parallel)h(sup)r(ercomputers)e(suc)n(h)h(as)g
(the)g(Illiac)h(IV)2040 1246 y([9)q(].)45 b(The)30 b(asso)r(ciation)h
(of)f(the)f(term)f(\\SIMD")i(with)f(this)g(t)n(yp)r(e)g(of)2040
1329 y(computer)21 b(is)h(what)f(led)h(us)g(to)f(utilize)i(the)e(term)f
(Sup)r(erw)n(ord)i(Lev)n(el)2040 1413 y(P)n(arallelism)27
b(when)f(discussing)h(short)e(SIMD)h(op)r(erations.)2152
1496 y(SIMD)43 b(sup)r(ercomputers)g(w)n(ere)h(implemen)n(ted)e(using)h
(thou-)2040 1579 y(sands)33 b(of)g(small)g(pro)r(cessors)i(that)d(w)n
(ork)n(ed)h(sync)n(hronously)f(on)g(a)2040 1662 y(single)d(instruction)
f(stream.)42 b(While)28 b(the)g(cost)h(of)f(massiv)n(e)g(SIMD)2040
1745 y(parallel)44 b(execution)e(and)g(near-neigh)n(b)r(or)g(comm)n
(unication)f(w)n(as)2040 1828 y(lo)n(w,)28 b(distribution)e(of)h(data)g
(to)f(these)h(pro)r(cessors)h(w)n(as)f(exp)r(ensiv)n(e.)2040
1911 y(F)-6 b(or)22 b(this)f(reason,)i(automatic)f(SIMD)e
(parallelization)25 b(cen)n(tered)c(on)2040 1994 y(solving)33
b(the)f(data)g(distribution)g(problem)f([1)q(].)54 b(In)31
b(the)h(end,)h(the)2040 2077 y(class)22 b(of)e(applications)i(for)f
(whic)n(h)f(SIMD)f(compilers)h(w)n(ere)h(success-)2040
2160 y(ful)i(w)n(as)g(ev)n(en)e(more)h(restrictiv)n(e)h(than)f(that)f
(of)i(v)n(ector)g(and)e(MIMD)2040 2243 y(mac)n(hines.)2040
2430 y Fu(2.5)82 b(Instruction)27 b(Level)h(P)n(a)n(rallelism)2040
2562 y Ft(Sup)r(erw)n(ord)21 b(lev)n(el)g(parallelism)i(is)f(closely)g
(related)g(to)f(ILP)-6 b(.)21 b(In)f(fact,)2040 2645
y(SLP)34 b(can)g(b)r(e)h(view)n(ed)f(as)h(a)f(subset)g(of)h
(instruction)g(lev)n(el)f(paral-)2040 2728 y(lelism.)h(Most)26
b(pro)r(cessors)h(that)f(supp)r(ort)f(SLP)g(also)i(supp)r(ort)e(ILP)
2040 2811 y(in)h(the)f(form)h(of)g(sup)r(erscalar)h(execution.)35
b(Because)27 b(of)f(their)g(simi-)2040 2894 y(larities,)h(metho)r(ds)d
(for)i(lo)r(cating)g(SLP)f(and)f(ILP)h(ma)n(y)e(extract)i(the)2040
2977 y(same)30 b(information.)47 b(Under)29 b(circumstances)h(where)g
(these)g(t)n(yp)r(es)2040 3060 y(of)19 b(parallelism)h(completely)e(o)n
(v)n(erlap,)j(SLP)d(execution)g(is)h(preferred)2040 3143
y(b)r(ecause)g(it)f(pro)n(vides)g(a)g(less)h(exp)r(ensiv)n(e)e(and)h
(more)g(energy)f(e\016cien)n(t)2040 3226 y(solution.)2152
3309 y(In)24 b(practice,)i(the)e(ma)t(jorit)n(y)h(of)g(ILP)f(is)h
(found)g(in)f(the)g(presence)2040 3392 y(of)30 b(lo)r(ops.)46
b(Therefore,)32 b(unrolling)d(the)g(lo)r(op)h(m)n(ultiple)e(times)h(ma)
n(y)2040 3475 y(pro)n(vide)19 b(enough)g(parallelism)i(to)e(satisfy)i
(b)r(oth)e(ILP)g(and)g(SLP)g(pro-)2040 3558 y(cessor)26
b(utilization.)35 b(In)24 b(this)h(situation,)h(ILP)e(p)r(erformance)h
(w)n(ould)2040 3641 y(not)31 b(noticeably)h(degrade)g(after)g(SLP)g(is)
g(extracted)f(from)g(a)h(pro-)2040 3724 y(gram.)2040
3920 y Fu(3)82 b(SLP)27 b(Compiler)g(Algo)n(rithm)2040
4077 y Ft(Our)21 b(SLP)g(compiler)g(algorithm)h(can)f(b)r(e)g(divided)g
(in)n(to)g(sev)n(eral)h(dis-)2040 4160 y(tinct)k(phases.)35
b(First,)27 b(lo)r(op)g(unrolling)f(is)h(used)e(to)h(transform)g(v)n
(ec-)2040 4243 y(tor)g(parallelism)i(in)n(to)e(SLP)-6
b(.)25 b(Alignmen)n(t)g(analysis)i(then)f(attempts)2040
4326 y(to)k(determine)f(the)h(address)g(alignmen)n(t)g(of)g(eac)n(h)h
(load)f(and)g(store)2040 4409 y(instruction.)60 b(This)34
b(is)h(needed)e(for)i(compiling)f(to)g(arc)n(hitectures)2040
4492 y(that)27 b(do)g(not)g(supp)r(ort)g(unaligned)g(memory)e
(accesses.)41 b(Next,)27 b(the)2040 4575 y(in)n(termediate)i(represen)n
(tation)i(is)f(transformed)g(in)n(to)g(a)g(lo)n(w)h(lev)n(el)2040
4658 y(form)c(and)f(a)h(series)h(of)g(standard)e(compiler)h
(optimizations)h(is)f(ap-)2040 4741 y(plied.)2152 4824
y(The)e(core)g(of)g(our)f(algorithm)g(b)r(egins)h(b)n(y)e(lo)r(cating)j
(statemen)n(ts)2040 4907 y(with)41 b(adjacen)n(t)g(memory)d(references)
k(and)e(pac)n(king)g(them)g(in)n(to)2040 4990 y(groups)29
b(of)g(size)g(t)n(w)n(o.)43 b(F)-6 b(rom)27 b(this)i(initial)g(seed,)h
(more)d(groups)i(are)2040 5073 y(disco)n(v)n(ered)19
b(based)f(on)h(the)f(activ)n(e)h(set)g(of)g(pac)n(k)n(ed)f(data.)32
b(All)19 b(groups)2040 5156 y(are)k(then)e(merged)h(in)n(to)g(larger)h
(clusters)g(of)g(a)g(size)g(consisten)n(t)f(with)2040
5239 y(the)31 b(sup)r(erw)n(ord)g(datapath)h(width.)51
b(Finally)-6 b(,)33 b(a)e(new)h(sc)n(hedule)f(is)p eop
%%Page: 4 4
4 3 bop -152 -69 a Ft(pro)r(duced)20 b(for)h(eac)n(h)f(basic)h(blo)r(c)
n(k,)g(where)g(groups)f(of)h(pac)n(k)n(ed)f(state-)-152
14 y(men)n(ts)25 b(are)h(replaced)g(with)g(SIMD)f(instructions.)-40
97 y(The)30 b(follo)n(wing)h(subsections)f(describ)r(e)f(eac)n(h)h(of)f
(these)g(phases)-152 180 y(in)i(detail.)52 b(Figure)32
b(4)g(presen)n(ts)f(a)h(simple)f(example)f(to)h(highligh)n(t)-152
263 y(the)d(core)h(routines)f(and)f(Figure)i(5)f(lists)h(the)f(pseudo)g
(co)r(de.)42 b(Both)-152 346 y(will)27 b(b)r(e)f(referenced)g
(throughout)f(this)h(section.)-152 534 y Fu(3.1)83 b(Lo)r(op)28
b(Unrolling)-152 665 y Ft(Lo)r(op)20 b(unrolling)h(is)f(p)r(erformed)f
(early)h(since)g(it)f(is)h(most)f(easily)i(done)-152
748 y(at)32 b(a)h(high)e(lev)n(el.)54 b(As)31 b(discussed,)k(it)d(is)g
(used)g(to)g(transform)g(v)n(ec-)-152 831 y(tor)24 b(parallelism)g(in)n
(to)f(basic)h(blo)r(c)n(ks)g(with)f(sup)r(erw)n(ord)h(lev)n(el)f
(paral-)-152 914 y(lelism.)48 b(In)29 b(order)h(to)h(ensure)e(full)i
(utilization)g(of)g(the)e(sup)r(erw)n(ord)-152 997 y(datapath)h(in)g
(the)g(presence)h(of)g(a)f(v)n(ectorizable)h(lo)r(op,)i(the)c(unroll)
-152 1080 y(factor)c(m)n(ust)e(b)r(e)h(customized)f(to)h(the)g(data)g
(sizes)h(used)f(within)g(the)-152 1163 y(lo)r(op.)34
b(F)-6 b(or)20 b(example,)h(a)g(v)n(ectorizable)g(lo)r(op)h(con)n
(taining)f(16-bit)f(v)l(al-)-152 1246 y(ues)27 b(should)f(b)r(e)h
(unrolled)g(8)g(times)f(for)h(a)g(128-bit)g(datapath.)37
b(Our)-152 1329 y(system)c(curren)n(tly)f(unrolls)i(lo)r(ops)g(based)g
(on)f(the)g(smallest)h(data)-152 1413 y(t)n(yp)r(e)25
b(presen)n(t.)-152 1600 y Fu(3.2)83 b(Alignment)27 b(Analysis)-152
1731 y Ft(Alignmen)n(t)20 b(analysis)j(determines)d(the)h(alignmen)n(t)
g(of)h(memory)d(ac-)-152 1814 y(cesses)28 b(with)f(resp)r(ect)g(to)g(a)
g(certain)g(sup)r(erw)n(ord)g(datapath)g(width.)-152
1897 y(F)-6 b(or)38 b(arc)n(hitectures)g(that)g(do)g(not)f(supp)r(ort)h
(unaligned)g(memory)-152 1980 y(accesses,)j(alignmen)n(t)36
b(analysis)h(can)g(greatly)f(impro)n(v)n(e)f(the)h(p)r(er-)-152
2063 y(formance)c(of)f(our)g(system.)50 b(Without)31
b(it,)h(memory)d(accesses)k(are)-152 2146 y(assumed)22
b(to)h(b)r(e)g(unaligned)f(and)h(the)f(prop)r(er)h(merging)f(co)r(de)h
(m)n(ust)-152 2229 y(b)r(e)j(emitted)f(for)h(ev)n(ery)f(wide)h(load)h
(and)e(store.)-40 2313 y(One)k(situation)h(in)g(whic)n(h)f(merging)h(o)
n(v)n(erhead)f(can)g(b)r(e)g(amor-)-152 2396 y(tized)41
b(is)h(when)f(a)g(con)n(tiguous)h(blo)r(c)n(k)f(of)h(memory)d(is)j
(accessed)-152 2479 y(within)33 b(a)g(lo)r(op.)55 b(In)32
b(this)g(situation,)k(o)n(v)n(erhead)c(can)g(b)r(e)g(reduced)-152
2562 y(to)22 b(one)g(additional)h(merge)e(op)r(eration)i(p)r(er)e(load)
i(or)f(store)g(b)n(y)e(using)-152 2645 y(data)26 b(from)g(previous)f
(iterations.)-40 2728 y(Alignmen)n(t)19 b(analysis,)j(ho)n(w)n(ev)n
(er,)f(can)e(completely)g(remo)n(v)n(e)g(this)-152 2811
y(o)n(v)n(erhead.)54 b(F)-6 b(or)32 b(F)n(OR)-6 b(TRAN)30
b(sources,)35 b(a)e(simple)e(in)n(terpro)r(cedu-)-152
2894 y(ral)24 b(analysis)f(can)g(determine)e(alignmen)n(t)h
(information)h(in)g(a)g(single)-152 2977 y(pass.)60 b(This)35
b(analysis)g(is)f(\015o)n(w-insensitiv)n(e,)j(con)n(text-insensitiv)n
(e,)-152 3060 y(and)43 b(visits)h(the)f(call)i(graph)e(in)h
(breadth-\014rst)e(order.)88 b(F)-6 b(or)43 b(C)-152
3143 y(sources,)38 b(w)n(e)e(use)e(an)h(enhanced)f(p)r(oin)n(ter)h
(analysis)h(pac)n(k)l(age)e(de-)-152 3226 y(v)n(elop)r(ed)i(b)n(y)f
(Rugina)h(and)g(Rinard)f([21)q(].)66 b(Since)36 b(this)g(pass)g(also)
-152 3309 y(pro)n(vides)e(lo)r(cation)i(set)f(information,)i(w)n(e)e
(can)f(consider)h(dep)r(en-)-152 3392 y(dences)29 b(more)f(carefully)i
(when)e(com)n(bining)g(pac)n(king)h(candidates.)-152
3475 y(A)f(full)h(discussion)h(of)f(alignmen)n(t)f(analysis)i(is)f(b)r
(ey)n(ond)e(the)h(scop)r(e)-152 3558 y(of)f(this)f(pap)r(er.)34
b(A)25 b(complete)h(description)g(will)h(b)r(e)e(giv)n(en)h(in)f([13)r
(].)-40 3641 y(Our)17 b(compilation)h(system)e(is)i(capable)g(of)g(op)r
(erating)h(b)r(oth)e(with)-152 3724 y(and)32 b(without)h(alignmen)n(t)f
(constrain)n(ts.)55 b(F)-6 b(or)32 b(simplicit)n(y)-6
b(,)34 b(w)n(e)e(de-)-152 3807 y(scrib)r(e)e(subsequen)n(t)f(phases)h
(of)g(the)f(algorithm)h(assuming)f(no)h(ar-)-152 3890
y(c)n(hitectural)35 b(supp)r(ort)e(for)i(unaligned)f(accesses.)61
b(As)33 b(suc)n(h,)j(later)-152 3973 y(phases)g(assume)e(alignmen)n(t)h
(information)g(has)g(b)r(een)g(annotated)-152 4056 y(to)26
b(eac)n(h)g(load)g(and)g(store)g(instruction)g(where)g(p)r(ossible.)
-152 4244 y Fu(3.3)83 b(Pre-optimization)-152 4375 y
Ft(SLP)27 b(analysis)g(is)g(most)f(useful)h(when)g(p)r(erformed)f(on)g
(a)h(three)f(ad-)-152 4458 y(dress)j(represen)n(tation.)42
b(This)29 b(w)n(a)n(y)-6 b(,)29 b(the)e(algorithm)i(has)f(full)h
(\015ex-)-152 4541 y(ibilit)n(y)g(in)g(c)n(ho)r(osing)h(whic)n(h)f(op)r
(erations)i(to)e(pac)n(k.)44 b(If)29 b(isomorphic)-152
4624 y(statemen)n(ts)23 b(are)i(instead)f(matc)n(hed)e(b)n(y)h(the)g
(tree)h(structure)f(inher-)-152 4707 y(ited)k(from)h(the)e(source)i(co)
r(de,)h(long)e(expressions)h(m)n(ust)e(b)r(e)h(iden)n(ti-)-152
4790 y(cal)33 b(in)e(order)h(to)f(parallelize.)55 b(On)30
b(the)h(other)h(hand,)h(iden)n(tifying)-152 4873 y(adjacen)n(t)26
b(memory)e(references)j(is)f(m)n(uc)n(h)d(easier)k(if)g(address)f
(calcu-)-152 4956 y(lations)h(main)n(tain)e(their)h(original)i(form.)34
b(W)-6 b(e)26 b(therefore)g(annotate)-152 5039 y(eac)n(h)e(load)g(and)f
(store)h(instruction)f(with)h(this)f(information)h(b)r(efore)-152
5122 y(\015attening.)-40 5205 y(After)30 b(\015attening,)i(sev)n(eral)e
(standard)g(optimizations)h(are)f(ap-)-152 5288 y(plied)35
b(to)f(an)h(input)e(program.)61 b(This)35 b(ensures)f(that)h
(parallelism)-152 5371 y(is)41 b(not)g(extracted)f(from)g(computation)g
(that)g(w)n(ould)g(otherwise)2040 -69 y(b)r(e)i(eliminated.)83
b(Optimizations)42 b(include)g(constan)n(t)g(propaga-)2040
14 y(tion,)21 b(cop)n(y)d(propagation,)j(dead)e(co)r(de)g(elimination,)
h(common)d(sub-)2040 97 y(expression)28 b(elimination,)h(lo)r(op-in)n
(v)l(arian)n(t)e(co)r(de)h(motion,)g(and)f(re-)2040 180
y(dundan)n(t)i(load/store)j(elimination.)50 b(As)30 b(a)h(\014nal)f
(step,)i(scalar)g(re-)2040 263 y(naming)17 b(is)i(p)r(erformed)e(to)h
(remo)n(v)n(e)f(output)g(and)g(an)n(ti-dep)r(endences)2040
346 y(since)26 b(they)f(can)h(inhibit)f(parallelization.)2040
534 y Fu(3.4)82 b(Identifying)28 b(Adjacent)g(Memo)n(ry)f(References)
2040 665 y Ft(Because)19 b(of)f(their)f(ob)n(vious)h(impact,)g
(statemen)n(ts)f(con)n(taining)h(adja-)2040 748 y(cen)n(t)23
b(memory)f(references)j(are)g(the)e(\014rst)g(candidates)i(for)f(pac)n
(king.)2040 831 y(W)-6 b(e)21 b(therefore)h(b)r(egin)f(the)f(core)i(of)
g(our)f(analysis)h(b)n(y)e(scanning)h(eac)n(h)2040 914
y(basic)37 b(blo)r(c)n(k)f(to)g(\014nd)f(indep)r(enden)n(t)g(pairs)h
(of)h(suc)n(h)f(statemen)n(ts.)2040 997 y(Adjacency)27
b(is)i(determined)d(using)i(b)r(oth)f(alignmen)n(t)g(information)2040
1080 y(and)e(arra)n(y)h(analysis.)2152 1163 y(In)52 b(general,)61
b(duplicate)53 b(memory)d(op)r(erations)k(can)f(in)n(tro-)2040
1246 y(duce)40 b(sev)n(eral)g(di\013eren)n(t)g(pac)n(king)g(p)r
(ossibilities.)80 b(Dep)r(endences)2040 1329 y(will)44
b(eliminate)e(man)n(y)f(of)h(these)h(p)r(ossibilities)h(and)e(redundan)
n(t)2040 1412 y(load/store)24 b(elimination)f(will)g(usually)g(remo)n
(v)n(e)e(the)h(rest.)33 b(In)22 b(prac-)2040 1495 y(tice,)32
b(nearly)f(ev)n(ery)e(memory)g(reference)i(is)g(directly)f(adjacen)n(t)
h(to)2040 1578 y(at)e(most)e(t)n(w)n(o)i(other)f(references.)44
b(These)29 b(corresp)r(ond)g(to)f(the)g(ref-)2040 1661
y(erences)j(that)f(access)i(memory)c(on)i(either)h(side)g(of)g(the)f
(reference)2040 1744 y(in)24 b(question.)34 b(When)24
b(lo)r(cated,)i(the)e(\014rst)g(o)r(ccurrence)h(of)h(eac)n(h)e(pair)
2040 1827 y(is)i(added)f(to)h(the)g Fs(PackSet)p Ft(.)2040
1985 y Fo(De\014nition)31 b(3.1)37 b Fs(A)43 b(Pack)h(is)f(an)g
(n-tuple,)48 b Fn(h)p Fm(s)3499 1993 y Fl(1)3533 1985
y Fm(;)13 b(:::;)h(s)3701 1993 y Fk(n)3743 1985 y Fn(i)p
Fs(,)46 b(wher)l(e)2040 2068 y Fm(s)2076 2076 y Fl(1)2110
2068 y Fm(;)14 b(:::;)g(s)2279 2076 y Fk(n)2353 2068
y Fs(ar)l(e)33 b(indep)l(endent)h(isomorphic)e(statements)j(in)d(a)g(b)
l(asic)2040 2151 y(blo)l(ck.)2040 2309 y Fo(De\014nition)f(3.2)37
b Fs(A)28 b(PackSet)h(is)e(a)h(set)g(of)g(Packs.)2152
2467 y Ft(In)c(this)h(phase)g(of)h(the)f(algorithm,)g(only)g(groups)g
(of)h(t)n(w)n(o)f(state-)2040 2550 y(men)n(ts)c(are)i(constructed.)33
b(W)-6 b(e)22 b(refer)h(to)f(these)h(as)g Fs(p)l(airs)29
b Ft(with)22 b(a)h Fs(left)2040 2633 y Ft(and)i Fs(right)34
b Ft(elemen)n(t.)2040 2791 y Fo(De\014nition)d(3.3)37
b Fs(A)j(Pair)f(is)g(a)h(Pack)g(of)f(size)h(two,)i(wher)l(e)f(the)2040
2874 y(\014rst)36 b(statement)g(is)e(c)l(onsider)l(e)l(d)i(the)f(left)f
(element,)i(and)f(the)g(se)l(c-)2040 2957 y(ond)28 b(statement)i(is)d
(c)l(onsider)l(e)l(d)j(the)e(right)h(element.)2152 3115
y Ft(As)i(an)g(in)n(termediate)f(step,)j(statemen)n(ts)d(are)i(allo)n
(w)n(ed)g(to)f(b)r(e-)2040 3198 y(long)j(to)g(t)n(w)n(o)g(groups)g(as)g
(long)g(as)g(they)f(o)r(ccup)n(y)f(a)i Fs(left)41 b Ft(p)r(osition)2040
3281 y(in)28 b(one)f(of)i(the)e(groups)h(and)f(a)h Fs(right)35
b Ft(p)r(osition)29 b(in)f(the)f(other.)40 b(En-)2040
3364 y(forcing)25 b(this)e(discipline)h(here)f(allo)n(ws)j(the)d
Fs(Combination)29 b Ft(phase)23 b(to)2040 3447 y(easily)32
b(merge)f(groups)h(in)n(to)f(larger)i(clusters.)52 b(These)32
b(details)g(are)2040 3530 y(discussed)26 b(in)g(Section)g(3.6.)2152
3613 y(Figure)e(4\(a\))g(presen)n(ts)f(an)g(example)f(sequence)h(of)h
(statemen)n(ts.)2040 3696 y(Figure)36 b(4\(b\))g(sho)n(ws)g(the)g
(results)g(of)g(adjacen)n(t)g(memory)e(iden)n(ti-)2040
3779 y(\014cation)g(in)f(whic)n(h)g(t)n(w)n(o)h(pairs)g(ha)n(v)n(e)f(b)
r(een)g(added)g(to)g(the)g Fs(Pack-)2040 3862 y(Set)p
Ft(.)i(The)25 b(pseudo)f(co)r(de)h(for)g(this)g(phase)f(is)h(sho)n(wn)g
(in)f(Figure)h(5)g(as)2040 3945 y Fj(\014nd)p 2166 3945
24 4 v 27 w(adj)p 2290 3945 V 28 w(refs)q Ft(.)2040 4132
y Fu(3.5)82 b(Extending)28 b(the)g(P)n(ackSet)2040 4264
y Ft(Once)37 b(the)g Fs(PackSet)47 b Ft(has)37 b(b)r(een)h(seeded)f
(with)h(an)f(initial)i(set)f(of)2040 4347 y(pac)n(k)n(ed)22
b(statemen)n(ts,)i(more)e(groups)h(can)h(b)r(e)e(added.)34
b(This)23 b(is)h(done)2040 4430 y(b)n(y)h(\014nding)g(new)h(candidates)
g(that)f(can)h(either:)2151 4588 y Fn(\017)38 b Ft(Pro)r(duce)26
b(needed)f(source)h(op)r(erands)g(in)g(pac)n(k)n(ed)f(form,)h(or)2151
4730 y Fn(\017)38 b Ft(Use)26 b(existing)g(pac)n(k)n(ed)f(data)h(as)g
(source)g(op)r(erands.)2152 4888 y(This)39 b(is)f(accomplished)g(b)n(y)
f(follo)n(wing)k(def-use)d(and)g(use-def)2040 4971 y(c)n(hains)33
b(of)g(existing)h Fs(PackSet)41 b Ft(en)n(tries.)56 b(If)33
b(these)f(c)n(hains)h(lead)g(to)2040 5054 y(fresh)21
b(pac)n(k)l(able)f(statemen)n(ts,)g(a)h(new)f(group)g(is)h(created)f
(and)g(added)2040 5137 y(to)35 b(the)e Fs(PackSet)p Ft(.)62
b(F)-6 b(or)35 b(t)n(w)n(o)g(statemen)n(ts)e(to)i(b)r(e)f(pac)n(k)l
(able,)i(they)2040 5220 y(m)n(ust)24 b(meet)h(the)g(follo)n(wing)k
(criteria:)2151 5378 y Fn(\017)38 b Ft(The)26 b(statemen)n(ts)f(are)h
(isomorphic.)p eop
%%Page: 5 5
5 4 bop 578 251 a
 21313290 33248727 0 0 37758730 59006238 startTexFig
 578 251 a
%%BeginDocument: algorithm.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: algorithm.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Wed Apr 19 23:30:54 2000
%%For: slarsen@regulus (Sam Larsen)
%%Orientation: Portrait
%%BoundingBox: 0 0 574 897
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-35.0 918.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 16300 m -1000 -1000 l 11137 -1000 l 11137 16300 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
 [60] 0 sd
n 600 5625 m 2250 5625 l 2250 6825 l 600 6825 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
750 6000 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
750 6285 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
750 6570 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
2700 8625 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
2700 8925 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
2700 7725 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
2700 8025 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
2700 6825 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
2700 7125 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
2700 6000 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
2700 6285 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
% Polyline
 [60] 0 sd
n 2550 5625 m 4800 5625 l 4800 9150 l 2550 9150 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
1725 14325 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
1725 14025 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
1725 13725 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
1725 13200 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
1725 12900 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
1725 12600 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
1725 12075 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
1725 11775 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
1725 11475 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
% Polyline
 [60] 0 sd
n 1575 11100 m 3825 11100 l 3825 14550 l 1575 14550 l cp gs col0 s gr  [] 0 sd
/Courier-Oblique ff 270.00 scf sf
2400 14925 m
gs 1 -1 sc (\(e\)) col0 sh gr
/Courier ff 210.00 scf sf
5550 2985 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
5550 2700 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
5550 2130 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
5550 1845 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
5550 1275 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
5550 990 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
% Polyline
 [60] 0 sd
n 5400 600 m 7575 600 l 7575 3225 l 5400 3225 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
8025 2025 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
8025 1725 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
8025 1260 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
8025 975 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
% Polyline
 [60] 0 sd
n 7875 600 m 10125 600 l 10125 2250 l 7875 2250 l cp gs col0 s gr  [] 0 sd
/Courier ff 210.00 scf sf
6750 5385 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6750 5100 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
6750 5925 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6750 6225 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
6750 7050 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
6750 6765 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
/Courier ff 210.00 scf sf
6750 7650 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
6750 7950 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
6750 8865 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
6750 8580 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
6750 9450 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
6750 9750 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
% Polyline
 [60] 0 sd
n 6600 4725 m 8850 4725 l 8850 9975 l 6600 9975 l cp gs col0 s gr  [] 0 sd
/Courier-Oblique ff 270.00 scf sf
7650 4650 m
gs 1 -1 sc (P) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
7425 10350 m
gs 1 -1 sc (\(d\)) col0 sh gr
/Courier ff 210.00 scf sf
1800 3255 m
gs 1 -1 sc (\(7\)  h = a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
1800 3540 m
gs 1 -1 sc (\(8\)  j = 7) col0 sh gr
/Courier ff 210.00 scf sf
1800 3825 m
gs 1 -1 sc (\(9\)  k = h + j) col0 sh gr
/Courier ff 210.00 scf sf
1800 2115 m
gs 1 -1 sc (\(4\)  e = a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
1800 2400 m
gs 1 -1 sc (\(5\)  f = 6) col0 sh gr
/Courier ff 210.00 scf sf
1800 2685 m
gs 1 -1 sc (\(6\)  g = e + f) col0 sh gr
/Courier ff 210.00 scf sf
1800 975 m
gs 1 -1 sc (\(1\)  b = a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
1800 1260 m
gs 1 -1 sc (\(2\)  c = 5) col0 sh gr
/Courier ff 210.00 scf sf
1800 1545 m
gs 1 -1 sc (\(3\)  d = b + c) col0 sh gr
% Polyline
 [60] 0 sd
n 1650 600 m 3900 600 l 3900 4050 l 1650 4050 l cp gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6525 11100 m 9000 11100 l 9000 14925 l 6525 14925 l cp gs col0 s gr  [] 0 sd
% Polyline
n 6750 11325 m 7125 11325 l 7125 12300 l 6750 12300 l cp gs col0 s gr 
% Polyline
n 7575 13725 m 7950 13725 l 7950 14700 l 7575 14700 l cp gs col0 s gr 
% Polyline
n 6750 13725 m 7125 13725 l 7125 14700 l 6750 14700 l cp gs col0 s gr 
% Polyline
n 7575 12525 m 7950 12525 l 7950 13500 l 7575 13500 l cp gs col0 s gr 
% Polyline
n 6750 12525 m 7125 12525 l 7125 13500 l 6750 13500 l cp gs col0 s gr 
% Polyline
n 7575 11325 m 8475 11325 l 8475 12300 l 7575 12300 l cp gs col0 s gr 
% Polyline
n 8325 13725 m 8700 13725 l 8700 14700 l 8325 14700 l cp gs col0 s gr 
/Courier-Oblique ff 270.00 scf sf
3600 5550 m
gs 1 -1 sc (P) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
2475 9525 m
gs 1 -1 sc (\(c\)) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
9000 525 m
gs 1 -1 sc (P) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
7575 3675 m
gs 1 -1 sc (\(b\)) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
7500 15300 m
gs 1 -1 sc (\(f\)) col0 sh gr
/Courier ff 210.00 scf sf
6900 11625 m
gs 1 -1 sc (b     a[i+0]) col0 sh gr
/Courier ff 210.00 scf sf
6900 11865 m
gs 1 -1 sc (e  =  a[i+1]) col0 sh gr
/Courier ff 210.00 scf sf
6900 12105 m
gs 1 -1 sc (h     a[i+2]) col0 sh gr
/Courier ff 210.00 scf sf
6900 14550 m
gs 1 -1 sc (k     h     j) col0 sh gr
/Courier ff 210.00 scf sf
6900 14085 m
gs 1 -1 sc (d     b     c) col0 sh gr
/Courier ff 210.00 scf sf
6900 14325 m
gs 1 -1 sc (g  =  e  +  f) col0 sh gr
/Courier ff 210.00 scf sf
6900 12810 m
gs 1 -1 sc (c     5) col0 sh gr
/Courier ff 210.00 scf sf
6900 13290 m
gs 1 -1 sc (j     7) col0 sh gr
/Courier ff 210.00 scf sf
6900 13050 m
gs 1 -1 sc (f  =  6) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
2475 4425 m
gs 1 -1 sc (\(a\)) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
2700 525 m
gs 1 -1 sc (U) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
6450 525 m
gs 1 -1 sc (U) col0 sh gr
/Courier-Oblique ff 270.00 scf sf
1350 5550 m
gs 1 -1 sc (U) col0 sh gr
$F2psEnd
rs

%%EndDocument

 endTexFig
 -152 4629 a Ft(Figure)22 b(4:)33 b(V)-6 b(arious)22
b(phases)g(of)g(SLP)f(analysis.)34 b Fs(U)g Ft(and)21
b Fs(P)29 b Ft(represen)n(t)21 b(the)g(curren)n(t)g(set)h(of)g(unpac)n
(k)n(ed)e(and)h(pac)n(k)n(ed)g(statemen)n(ts,)h(resp)r(ectiv)n(ely)-6
b(.)-152 4712 y(\(a\))30 b(Initial)f(sequence)g(of)h(instructions.)46
b(\(b\))28 b(Statemen)n(ts)g(with)i(adjacen)n(t)f(memory)e(references)k
(are)f(paired)f(and)g(added)f(to)i(the)f Fs(PackSet)p
Ft(.)-152 4795 y(\(c\))c(The)g Fs(PackSet)33 b Ft(is)26
b(extended)d(b)n(y)h(follo)n(wing)j(def-use)e(c)n(hains)g(of)g
(existing)h(en)n(tries.)34 b(\(d\))24 b(The)h Fs(PackSet)34
b Ft(is)25 b(further)g(extended)e(b)n(y)h(follo)n(wing)-152
4878 y(use-def)35 b(c)n(hains.)62 b(\(e\))35 b Fs(Combination)41
b Ft(merges)35 b(groups)g(con)n(taining)g(the)g(same)f(expression.)62
b(\(f)6 b(\))35 b(Eac)n(h)g(group)g(is)g(sc)n(heduled)g(and)f(SIMD)-152
4961 y(op)r(erations)27 b(are)f(emitted)f(in)h(their)f(place.)p
eop
%%Page: 6 6
6 5 bop -3 424 a Fi(SLP)p 108 424 19 4 v 23 w(extract)r
Fr(:)29 b(BasicBlo)r(c)n(k)12 b Fh(B)22 b Fg(!)d Fr(BasicBlo)r(c)n(k)
107 490 y(P)n(ac)n(kSet)i Fh(P)28 b Fg( )20 b(;)107 556
y Fh(P)28 b Fg( )23 b Fi(\014nd)p 367 556 V 22 w(adj)p
467 556 V 22 w(refs)p Fr(\()p Fh(B)s(;)11 b(P)e Fr(\))107
623 y Fh(P)28 b Fg( )23 b Fi(extend)p 438 623 V 24 w(packlist)p
Fr(\()p Fh(B)s(;)12 b(P)d Fr(\))107 689 y Fh(P)28 b Fg( )23
b Fi(combine)p 483 689 V 23 w(packs)p Fr(\()p Fh(P)9
b Fr(\))107 756 y Ff(return)23 b Fi(schedule)p Fr(\()p
Fh(B)s(;)12 b Fr([)19 b(])p Fh(;)11 b(P)e Fr(\))-3 1021
y Fi(\014nd)p 98 1021 V 22 w(adj)p 198 1021 V 23 w(refs)p
Fr(:)29 b(BasicBlo)r(c)n(k)12 b Fh(B)18 b Fg(\002)d Fr(P)n(ac)n(kSet)c
Fh(P)28 b Fg(!)19 b Fr(P)n(ac)n(kSet)107 1088 y Ff(foreac)n(h)k
Fr(Stm)n(t)e Fh(s)f Fg(2)e Fh(B)26 b Ff(do)181 1156 y(foreac)n(h)c
Fr(Stm)n(t)g Fh(s)634 1131 y Fe(0)675 1156 y Fg(2)d Fh(B)25
b Ff(where)f Fh(s)19 b Fg(6)p Fr(=)g Fh(s)1184 1131 y
Fe(0)1229 1156 y Ff(do)254 1224 y(if)k Fi(has)p 411 1224
V 21 w(mem)p 559 1224 V 21 w(ref)p Fr(\()p Fh(s)p Fr(\))g
Fg(^)f Fi(has)p 906 1224 V 21 w(mem)p 1054 1224 V 21
w(ref)p Fr(\()p Fh(s)1195 1199 y Fe(0)1218 1224 y Fr(\))h
Ff(then)327 1292 y(if)g Fi(adjacent)p Fr(\()p Fh(s;)12
b(s)730 1267 y Fe(0)753 1292 y Fr(\))22 b Ff(then)401
1358 y Fr(In)n(t)g Fh(alig)r(n)e Fg( )j Fi(get)p 856
1358 V 22 w(alignment)p Fr(\()p Fh(s)p Fr(\))401 1426
y Ff(if)f Fi(stmts)p 613 1426 V 22 w(can)p 724 1426 V
22 w(pack)p Fr(\()p Fh(B)s(;)11 b(P)r(;)g(s;)g(s)1139
1401 y Fe(0)1162 1426 y Fh(;)g(alig)r(n)p Fr(\))24 b
Ff(then)474 1494 y Fh(P)k Fg( )19 b Fh(P)25 b Fg([)14
b(fh)p Fh(s;)e(s)910 1469 y Fe(0)932 1494 y Fg(ig)107
1561 y Ff(return)23 b Fh(P)-3 1826 y Fi(extend)p 169
1826 V 24 w(packlist)r Fr(:)29 b(BasicBlo)r(c)n(k)12
b Fh(B)18 b Fg(\002)d Fr(P)n(ac)n(kSet)10 b Fh(P)29 b
Fg(!)19 b Fr(P)n(ac)n(kSet)107 1893 y Ff(rep)r(eat)181
1959 y Fr(P)n(ac)n(kSet)10 b Fh(P)465 1967 y Fd(pr)q(ev)608
1959 y Fg( )19 b Fh(P)181 2026 y Ff(foreac)n(h)j Fr(P)n(ac)n(k)g
Fh(p)d Fg(2)g Fh(P)31 b Ff(do)254 2092 y Fh(P)d Fg( )23
b Fi(follo)n(w)p 566 2092 V 23 w(use)p 672 2092 V 23
w(defs)p Fr(\()p Fh(B)s(;)11 b(P)r(;)g(p)p Fr(\))254
2159 y Fh(P)28 b Fg( )23 b Fi(follo)n(w)p 566 2159 V
23 w(def)p 667 2159 V 23 w(uses)p Fr(\()p Fh(B)s(;)11
b(P)r(;)g(p)p Fr(\))107 2225 y Ff(un)n(til)23 b Fh(P)28
b Fg(\021)19 b Fh(P)466 2233 y Fd(pr)q(ev)107 2291 y
Ff(return)k Fh(P)-3 2557 y Fi(combine)p 214 2557 V 23
w(packs)p Fr(:)29 b(P)n(ac)n(kSet)11 b Fh(P)28 b Fg(!)19
b Fr(P)n(ac)n(kSet)107 2623 y Ff(rep)r(eat)181 2690 y
Fr(P)n(ac)n(kSet)10 b Fh(P)465 2698 y Fd(pr)q(ev)608
2690 y Fg( )19 b Fh(P)181 2756 y Ff(foreac)n(h)j Fr(P)n(ac)n(k)g
Fh(p)d Fr(=)g Fg(h)p Fh(s)781 2764 y Fc(1)814 2756 y
Fh(;)11 b(:::;)f(s)966 2764 y Fd(n)1007 2756 y Fg(i)19
b(2)f Fh(P)32 b Ff(do)254 2824 y(foreac)n(h)22 b Fr(P)n(ac)n(k)g
Fh(p)707 2799 y Fe(0)749 2824 y Fr(=)d Fg(h)p Fh(s)877
2799 y Fe(0)877 2841 y Fc(1)909 2824 y Fh(;)11 b(:::;)g(s)1062
2799 y Fe(0)1062 2841 y Fd(m)1117 2824 y Fg(i)19 b(2)f
Fh(P)32 b Ff(do)327 2892 y(if)23 b Fh(s)425 2900 y Fd(n)485
2892 y Fg(\021)c Fh(s)587 2867 y Fe(0)587 2909 y Fc(1)642
2892 y Ff(then)401 2960 y Fh(P)28 b Fg( )19 b Fh(P)24
b Fg(\000)15 b(f)p Fh(p;)c(p)822 2935 y Fe(0)845 2960
y Fg(g)k([)g(fh)p Fh(s)1046 2968 y Fc(1)1079 2960 y Fh(;)c(:::;)f(s)
1231 2968 y Fd(n)1272 2960 y Fh(;)h(s)1334 2935 y Fe(0)1334
2977 y Fc(2)1367 2960 y Fh(;)g(:::;)f(s)1519 2935 y Fe(0)1519
2977 y Fd(m)1575 2960 y Fg(ig)107 3027 y Ff(un)n(til)23
b Fh(P)28 b Fg(\021)19 b Fh(P)466 3035 y Fd(pr)q(ev)107
3093 y Ff(return)k Fh(P)-3 3361 y Fi(schedule)r Fr(:)29
b(BasicBlo)r(c)n(k)12 b Fh(B)18 b Fg(\002)d Fr(BasicBlo)r(c)n(k)d
Fh(B)1108 3335 y Fe(0)1145 3361 y Fg(\002)j Fr(P)n(ac)n(kSet)c
Fh(P)254 3427 y Fg(!)19 b Fr(BasicBlo)r(c)n(k)107 3493
y Ff(for)k Fh(i)c Fg( )g Fr(0)j Ff(to)h Fg(j)p Fh(B)s
Fg(j)f Ff(do)181 3560 y(if)g Fg(9)p Fh(p)d Fr(=)g Fg(h)p
Fh(:::;)10 b(s)556 3568 y Fd(i)583 3560 y Fh(;)h(:::)p
Fg(i)18 b(2)g Fh(P)32 b Ff(then)254 3628 y(if)23 b Fg(8)p
Fh(s)18 b Fg(2)h Fh(p:)j Fi(deps)p 667 3628 V 23 w(scheduled)p
Fr(\()p Fh(s;)12 b(B)1075 3603 y Fe(0)1098 3628 y Fr(\))22
b Ff(then)327 3694 y(foreac)n(h)h Fr(Stm)n(t)e Fh(s)f
Fg(2)e Fh(p)23 b Ff(do)401 3761 y Fh(B)f Fg( )d Fh(B)f
Fg(\000)d Fh(s)401 3829 y(B)454 3804 y Fe(0)495 3829
y Fg( )k Fh(B)633 3804 y Fe(0)671 3829 y Fg(\001)c Fh(s)327
3897 y Ff(return)23 b Fi(schedule)p Fr(\()p Fh(B)s(;)12
b(B)938 3872 y Fe(0)961 3897 y Fh(;)f(P)e Fr(\))181 3965
y Ff(else)23 b(if)f Fi(deps)p 508 3965 V 22 w(scheduled)p
Fr(\()p Fh(s)830 3973 y Fd(i)858 3965 y Fh(;)11 b(B)942
3940 y Fe(0)965 3965 y Fr(\))22 b Ff(then)254 4033 y(return)h
Fi(schedule)p Fr(\()p Fh(B)c Fg(\000)c Fh(s)894 4041
y Fd(i)921 4033 y Fh(;)c(B)1005 4008 y Fe(0)1042 4033
y Fg(\001)k Fh(s)1108 4041 y Fd(i)1135 4033 y Fh(;)c(P)e
Fr(\))107 4099 y Ff(if)23 b Fg(j)p Fh(B)s Fg(j)18 b(6)p
Fr(=)h(0)k Ff(then)181 4166 y Fh(P)28 b Fg( )19 b Fh(P)24
b Fg(\000)15 b(f)p Fh(p)p Fg(g)23 b Ff(where)g Fh(p)c
Fr(=)j Fi(\014rst)p Fr(\()p Fh(B)s(;)12 b(P)d Fr(\))181
4234 y Ff(return)22 b Fi(schedule)p Fr(\()p Fh(B)s(;)13
b(B)792 4209 y Fe(0)814 4234 y Fh(;)e(P)e Fr(\))107 4302
y Ff(return)23 b Fh(B)392 4277 y Fe(0)1680 424 y Fi(stmts)p
1826 424 V 21 w(can)p 1936 424 V 23 w(pack)p Fr(:)29
b(BasicBlo)r(c)n(k)12 b Fh(B)18 b Fg(\002)d Fr(P)n(ac)n(kSet)c
Fh(P)e Fg(\002)2157 492 y Fr(Stm)n(t)i Fh(s)16 b Fg(\002)f
Fr(Stm)n(t)c Fh(s)2608 467 y Fe(0)2646 492 y Fg(\002)k
Fr(In)n(t)d Fh(alig)r(n)20 b Fg(!)f Fr(Bo)r(olean)1790
560 y Ff(if)k Fi(isomo)n(rphic)p Fr(\()p Fh(s;)12 b(s)2251
535 y Fe(0)2274 560 y Fr(\))22 b Ff(then)1864 628 y(if)g
Fi(indep)r(endent)p Fr(\()p Fh(s;)13 b(s)2362 603 y Fe(0)2385
628 y Fr(\))22 b Ff(then)1937 696 y(if)h Fg(8h)p Fh(t;)10
b(t)2149 671 y Fe(0)2172 696 y Fg(i)18 b(2)h Fh(P)r(:t)g
Fg(6)p Fr(=)g Fh(s)j Ff(then)2010 764 y(if)h Fg(8h)p
Fh(t;)10 b(t)2222 739 y Fe(0)2245 764 y Fg(i)19 b(2)f
Fh(P)r(:t)2443 739 y Fe(0)2485 764 y Fg(6)p Fr(=)g Fh(s)2585
739 y Fe(0)2631 764 y Ff(then)2084 830 y Fr(In)n(t)k
Fh(alig)r(n)2346 838 y Fd(s)2398 830 y Fg( )h Fi(get)p
2571 830 V 22 w(alignment)p Fr(\()p Fh(s)p Fr(\))2084
898 y(In)n(t)f Fh(alig)r(n)2346 913 y Fd(s)2374 901 y
Fe(0)2420 898 y Fg( )h Fi(get)p 2593 898 V 23 w(alignment)p
Fr(\()p Fh(s)2921 873 y Fe(0)2944 898 y Fr(\))2084 965
y Ff(if)f Fh(alig)r(n)2305 973 y Fd(s)2357 965 y Fg(\021)d(>)c(_)g
Fh(alig)r(n)2710 973 y Fd(s)2762 965 y Fg(\021)k Fh(alig)r(n)24
b Ff(then)2157 1033 y(if)f Fh(alig)r(n)2379 1048 y Fd(s)2407
1036 y Fe(0)2453 1033 y Fg(\021)c(>)c(_)g Fh(alig)r(n)2806
1048 y Fd(s)2834 1036 y Fe(0)2881 1033 y Fg(\021)j Fh(alig)r(n)p
Fr(+)p Fi(data)p 3275 1033 V 23 w(size)p Fr(\()p Fh(s)3443
1008 y Fe(0)3467 1033 y Fr(\))k Ff(then)2230 1099 y(return)h
Fr(true)1790 1165 y Ff(return)g Fr(false)1680 1564 y
Fi(follo)n(w)p 1834 1564 V 25 w(use)p 1941 1564 V 22
w(defs)p Fr(:)29 b(BasicBlo)r(c)n(k)12 b Fh(B)18 b Fg(\002)d
Fr(P)n(ac)n(kSet)c Fh(P)24 b Fg(\002)15 b Fr(P)n(ac)n(k)d
Fh(p)19 b Fg(!)g Fr(P)n(ac)n(kSet)1937 1632 y Ff(where)k
Fh(p)c Fr(=)g Fg(h)p Fh(s;)11 b(s)2398 1607 y Fe(0)2421
1632 y Fg(i)p Fh(;)22 b(s)d Fr(=)g([)12 b Fp(x)2672 1640
y Fb(0)2717 1632 y Fr(:=)19 b Fp(f)p Fr(\()p Fp(x)2894
1640 y Fb(1)2919 1632 y Fh(;)12 b(:::;)e Fp(x)3072 1640
y Fb(m)3098 1632 y Fr(\))i(])p Fh(;)22 b(s)3228 1607
y Fe(0)3269 1632 y Fr(=)d([)12 b Fp(x)3401 1607 y Fe(0)3401
1649 y Fb(0)3446 1632 y Fr(:=)19 b Fp(f)p Fr(\()p Fp(x)3623
1607 y Fe(0)3623 1649 y Fb(1)3649 1632 y Fh(;)11 b(:::;)f
Fp(x)3801 1607 y Fe(0)3801 1649 y Fb(m)3827 1632 y Fr(\))i(])1790
1698 y(In)n(t)22 b Fh(alig)r(n)f Fg( )h Fi(get)p 2245
1698 V 23 w(alignment)p Fr(\()p Fh(s)p Fr(\))1790 1765
y Ff(for)g Fh(j)27 b Fg( )22 b Fr(1)h Ff(to)f Fh(m)g
Ff(do)1864 1833 y(if)g Fg(9)p Fh(t)d Fg(2)f Fh(B)s(:t)h
Fr(=)g([)12 b Fp(x)2324 1841 y Fb(j)2369 1833 y Fr(:=)18
b Fh(:::)12 b Fr(])i Fg(^)h(9)p Fh(t)2685 1808 y Fe(0)2726
1833 y Fg(2)k Fh(B)s(:t)2888 1808 y Fe(0)2929 1833 y
Fr(=)g([)12 b Fp(x)3061 1808 y Fe(0)3061 1850 y Fb(j)3106
1833 y Fr(:=)18 b Fh(:::)12 b Fr(])22 b Ff(then)1937
1907 y(if)h Fi(stmts)p 2150 1907 V 21 w(can)p 2260 1907
V 22 w(pack)p Fr(\()p Fh(B)s(;)11 b(P)r(;)g(t;)g(t)2663
1882 y Fe(0)2686 1907 y Fh(;)g(alig)r(n)p Fr(\))2010
1975 y Ff(if)23 b Fi(est)p 2154 1975 V 23 w(savings)f
Fr(\()p Fg(h)p Fh(t;)11 b(t)2512 1950 y Fe(0)2534 1975
y Fg(i)p Fh(;)g(P)e Fr(\))19 b Fg(\025)g Fr(0)k Ff(then)2084
2043 y Fh(P)28 b Fg( )19 b Fh(P)24 b Fg([)15 b(fh)p Fh(t;)c(t)2507
2018 y Fe(0)2530 2043 y Fg(i)o(g)2084 2111 y Fi(set)p
2161 2111 V 22 w(alignment)p Fr(\()p Fh(s;)h(s)2551 2086
y Fe(0)2574 2111 y Fh(;)f(alig)r(n)p Fr(\))1790 2177
y Ff(return)23 b Fh(P)1680 2576 y Fi(follo)n(w)p 1834
2576 V 25 w(def)p 1940 2576 V 27 w(uses)o Fr(:)30 b(BasicBlo)r(c)n(k)11
b Fh(B)18 b Fg(\002)d Fr(P)n(ac)n(kSet)c Fh(P)24 b Fg(\002)16
b Fr(P)n(ac)n(k)11 b Fh(p)19 b Fg(!)g Fr(P)n(ac)n(kSet)1937
2644 y Ff(where)k Fh(p)c Fr(=)g Fg(h)p Fh(s;)11 b(s)2398
2619 y Fe(0)2421 2644 y Fg(i)p Fh(;)22 b(s)d Fr(=)g([)12
b Fp(x)2672 2652 y Fb(0)2717 2644 y Fr(:=)19 b Fp(f)p
Fr(\()p Fp(x)2894 2652 y Fb(1)2919 2644 y Fh(;)12 b(:::;)e
Fp(x)3072 2652 y Fb(m)3098 2644 y Fr(\))i(])p Fh(;)22
b(s)3228 2619 y Fe(0)3269 2644 y Fr(=)d([)12 b Fp(x)3401
2619 y Fe(0)3401 2661 y Fb(0)3446 2644 y Fr(:=)19 b Fp(f)p
Fr(\()p Fp(x)3623 2619 y Fe(0)3623 2661 y Fb(1)3649 2644
y Fh(;)11 b(:::;)f Fp(x)3801 2619 y Fe(0)3801 2661 y
Fb(m)3827 2644 y Fr(\))i(])1790 2710 y(In)n(t)22 b Fh(alig)r(n)f
Fg( )h Fi(get)p 2245 2710 V 23 w(alignment)p Fr(\()p
Fh(s)p Fr(\))1790 2777 y(In)n(t)g Fh(sav)r(ing)r(s)f
Fg( )e(\000)p Fr(1)1790 2843 y Ff(foreac)n(h)k Fr(Stm)n(t)e
Fh(t)e Fg(2)g Fh(B)25 b Ff(where)e Fh(t)c Fr(=)g([)12
b Fh(:::)18 b Fr(:=)h Fp(g)p Fr(\()p Fh(:::;)10 b Fp(x)3103
2851 y Fb(0)3129 2843 y Fh(;)h(:::)p Fr(\))g(])22 b Ff(do)1864
2911 y(foreac)n(h)g Fr(Stm)n(t)g Fh(t)2311 2886 y Fe(0)2352
2911 y Fg(2)d Fh(B)25 b Ff(where)e Fh(t)c Fg(6)p Fr(=)g
Fh(t)2848 2886 y Fe(0)2890 2911 y Fr(=)f([)12 b Fh(:::)18
b Fr(:=)h Fp(h)p Fr(\()p Fh(:::;)10 b Fp(x)3335 2886
y Fe(0)3335 2928 y Fb(0)3361 2911 y Fh(;)h(:::)p Fr(\))g(])22
b Ff(do)1937 2979 y(if)h Fi(stmts)p 2150 2979 V 21 w(can)p
2260 2979 V 22 w(pack)p Fr(\()p Fh(B)s(;)11 b(P)r(;)g(t;)g(t)2663
2954 y Fe(0)2686 2979 y Fh(;)g(alig)r(n)p Fr(\))24 b
Ff(then)2010 3047 y(if)f Fi(est)p 2154 3047 V 23 w(savings)p
Fr(\()p Fg(h)p Fh(t;)10 b(t)2489 3022 y Fe(0)2512 3047
y Fg(i)p Fh(;)h(P)e Fr(\))19 b Fh(>)g(sav)r(ing)r(s)24
b Ff(then)2084 3115 y Fh(sav)r(ing)r(s)c Fg( )j Fi(est)p
2501 3115 V 23 w(savings)p Fr(\()p Fg(h)p Fh(t;)11 b(t)2837
3090 y Fe(0)2859 3115 y Fg(i)p Fh(;)g(P)e Fr(\))2084
3182 y(Stm)n(t)21 b Fh(u)e Fg( )h Fh(t)2084 3250 y Fr(Stm)n(t)h
Fh(u)2286 3225 y Fe(0)2328 3250 y Fg( )e Fh(t)2438 3225
y Fe(0)1790 3316 y Ff(if)k Fh(sav)r(ing)r(s)e Fg(\025)e
Fr(0)j Ff(then)1864 3384 y Fh(P)28 b Fg( )19 b Fh(P)24
b Fg([)15 b(fh)p Fh(u;)c(u)2315 3359 y Fe(0)2338 3384
y Fg(ig)1864 3452 y Fi(set)p 1941 3452 V 22 w(alignment)p
Fr(\()p Fh(u;)h(u)2347 3427 y Fe(0)2370 3452 y Fr(\))1790
3519 y Ff(return)23 b Fh(P)-152 4545 y Ft(Figure)36 b(5:)54
b(Pseudo)36 b(co)r(de)g(for)g(the)f(SLP)g(extraction)h(algorithm.)63
b(Only)35 b(k)n(ey)f(pro)r(cedures)i(are)g(listed.)64
b(Help)r(er)35 b(functions)h(include:)53 b(1\))-152 4628
y Fj(has)p -41 4628 24 4 v 28 w(mem)p 143 4628 V 28 w(ref)p
Ft(,)31 b(whic)n(h)e(returns)g(true)g(if)h(a)g(statemen)n(t)e(accesses)
j(memory)-6 b(,)28 b(2\))i Fj(adjacent)p Ft(,)g(whic)n(h)f(c)n(hec)n
(ks)g(adjacency)h(b)r(et)n(w)n(een)f(t)n(w)n(o)h(memory)-152
4711 y(references,)24 b(3\))d Fj(get)p 413 4711 V 28
w(alignment)p Ft(,)f(whic)n(h)h(retriev)n(es)g(alignmen)n(t)g
(information,)i(4\))e Fj(set)p 2282 4711 V 28 w(alignment)p
Ft(,)f(whic)n(h)h(sets)h(alignmen)n(t)e(information)i(when)e(it)-152
4794 y(is)h(not)g(already)g(set,)h(5\))f Fj(deps)p 692
4794 V 27 w(scheduled)p Ft(,)g(whic)n(h)f(returns)h(true)f(when,)i(for)
f(a)g(giv)n(en)f(statemen)n(t,)h(all)h(statemen)n(ts)e(up)r(on)g(whic)n
(h)g(it)h(is)g(dep)r(enden)n(t)-152 4877 y(ha)n(v)n(e)g(b)r(een)h(sc)n
(heduled,)g(6\))g Fj(\014rst)p Ft(,)h(whic)n(h)e(returns)h(the)f
Fs(PackSet)30 b Ft(mem)n(b)r(er)19 b(con)n(taining)k(the)e(earliest)i
(unsc)n(heduled)d(statemen)n(t,)i(7\))g Fj(est)p 3761
4877 V 28 w(savings)p Ft(,)-152 4961 y(whic)n(h)j(estimates)f(the)g(sa)
n(vings)h(of)g(a)g(p)r(oten)n(tial)g(group,)g(8\))f Fj(isomo)n(rphic)p
Ft(,)g(whic)n(h)h(c)n(hec)n(ks)f(for)h(statemen)n(t)e(isomorphism,)h
(and)g(9\))h Fj(indep)r(endent)p Ft(,)-152 5044 y(whic)n(h)h(returns)f
(true)h(when)f(t)n(w)n(o)h(statemen)n(ts)f(are)h(indep)r(enden)n(t.)p
eop
%%Page: 7 7
7 6 bop -41 -69 a Fn(\017)38 b Ft(The)26 b(statemen)n(ts)f(are)h(indep)
r(enden)n(t.)-41 74 y Fn(\017)38 b Ft(The)28 b(left)g(statemen)n(t)f
(is)h(not)f(already)h(pac)n(k)n(ed)f(in)h(a)g Fs(left)34
b Ft(p)r(o-)35 157 y(sition.)-41 300 y Fn(\017)k Ft(The)32
b(righ)n(t)g(statemen)n(t)g(is)g(not)g(already)g(pac)n(k)n(ed)g(in)g(a)
g Fs(right)35 383 y Ft(p)r(osition.)-41 526 y Fn(\017)38
b Ft(Alignmen)n(t)25 b(information)h(is)g(consisten)n(t.)-41
669 y Fn(\017)38 b Ft(Execution)33 b(time)f(of)h(the)g(new)f(parallel)j
(op)r(eration)e(is)h(esti-)35 752 y(mated)25 b(to)h(b)r(e)f(less)i
(than)e(the)g(sequen)n(tial)h(v)n(ersion.)-40 911 y(The)c(analysis)h
(computes)e(an)h(estimated)f(sp)r(eedup)h(of)g(eac)n(h)g(p)r(o-)-152
994 y(ten)n(tial)j(SIMD)f(instruction)g(based)h(on)f(a)h(cost)g(mo)r
(del)f(for)h(eac)n(h)f(in-)-152 1077 y(struction)h(added)f(and)g(remo)n
(v)n(ed.)33 b(This)25 b(includes)g(an)n(y)f(pac)n(king)g(or)-152
1160 y(unpac)n(king)i(that)h(m)n(ust)f(b)r(e)g(p)r(erformed)h(in)g
(conjunction)g(with)g(the)-152 1243 y(new)e(instruction.)34
b(If)25 b(the)e(prop)r(er)i(pac)n(k)n(ed)e(op)r(erand)i(data)f(already)
-152 1326 y(exist)i(in)g(the)f Fs(PackSet)p Ft(,)j(then)d(pac)n(king)g
(cost)h(is)h(set)f(to)f(zero.)-40 1409 y(As)j(new)h(groups)f(are)h
(added)e(to)h(the)g Fs(PackSet)p Ft(,)j(alignmen)n(t)c(in-)-152
1492 y(formation)f(is)g(propagated)f(from)g(existing)h(groups)f(via)g
(use-def)g(or)-152 1575 y(def-use)38 b(c)n(hains.)70
b(Once)37 b(set,)k(a)c(statemen)n(t's)g(alignmen)n(t)g(deter-)-152
1658 y(mines)e(whic)n(h)h(p)r(osition)h(it)f(will)h(o)r(ccup)n(y)e(in)h
(the)f(datapath)h(dur-)-152 1741 y(ing)28 b(its)g(computation.)38
b(F)-6 b(or)28 b(this)f(reason,)i(a)f(statemen)n(t)e(can)h(ha)n(v)n(e)
-152 1824 y(only)33 b(one)h(alignmen)n(t.)56 b(New)33
b(groups)h(are)f(created)h(only)f(if)h(their)-152 1907
y(alignmen)n(t)23 b(requiremen)n(ts)f(are)i(consisten)n(t)f(with)h
(those)f(already)h(in)-152 1990 y(place.)-40 2073 y(When)29
b(a)h(single)g(de\014nition)g(has)f(m)n(ultiple)g(uses,)i(there)e(is)h
(the)-152 2156 y(p)r(oten)n(tial)39 b(for)g(man)n(y)e(di\013eren)n(t)h
(pac)n(king)g(p)r(ossibilities.)74 b(If)39 b(this)-152
2239 y(o)r(ccurs,)e(the)c(cost)h(mo)r(del)f(is)h(used)f(to)h(estimate)g
(the)f(most)g(prof-)-152 2322 y(itable)22 b(p)r(ossibilities)i(based)d
(on)g(what)h(is)f(curren)n(tly)g(pac)n(k)n(ed.)32 b(These)-152
2405 y(groups)24 b(are)g(added)f(to)h(the)g Fs(PackSet)32
b Ft(in)23 b(order)h(of)h(their)e(estimated)-152 2488
y(pro\014tabilit)n(y)32 b(as)g(long)g(as)g(there)f(are)h(no)f
(con\015icts)h(with)f(existing)-152 2571 y Fs(PackSet)k
Ft(en)n(tries.)-40 2654 y(In)17 b(the)h(example,)h(part)e(\(c\))h(sho)n
(ws)g(new)g(groups)h(that)e(are)h(added)-152 2737 y(after)j(follo)n
(wing)h(def-use)e(c)n(hains)f(of)i(the)e(t)n(w)n(o)h(existing)g
Fs(PackSet)28 b Ft(en-)-152 2821 y(tries.)39 b(P)n(art)28
b(\(d\))e(in)n(tro)r(duces)h(new)h(groups)f(disco)n(v)n(ered)g(b)n(y)f
(follo)n(w-)-152 2904 y(ing)h(use-def)g(c)n(hains.)38
b(The)28 b(pseudo)e(co)r(de)h(for)h(this)f(phase)g(is)g(listed)-152
2987 y(as)g Fj(extend)p 159 2987 24 4 v 27 w(packset)e
Ft(in)h(Figure)g(5.)-152 3174 y Fu(3.6)83 b(Combination)-152
3305 y Ft(Once)20 b(all)i(pro\014table)f(pairs)g(ha)n(v)n(e)f(b)r(een)g
(c)n(hosen,)i(they)e(can)g(b)r(e)h(com-)-152 3388 y(bined)e(in)n(to)g
(larger)i(groups.)33 b(Tw)n(o)20 b(groups)g(can)g(b)r(e)f(com)n(bined)f
(when)-152 3471 y(the)g Fs(left)24 b Ft(statemen)n(t)17
b(of)h(one)g(is)g(the)f(same)g(as)i(the)e Fs(right)25
b Ft(statemen)n(t)17 b(of)-152 3554 y(the)25 b(other.)35
b(In)25 b(fact,)h(groups)g(m)n(ust)e(b)r(e)h(com)n(bined)g(in)g(this)h
(fashion)-152 3637 y(in)20 b(order)g(to)f(prev)n(en)n(t)g(a)g(statemen)
n(t)g(from)g(app)r(earing)i(in)e(more)g(than)-152 3721
y(one)31 b(group)g(in)g(the)g(\014nal)g Fs(PackSet)p
Ft(.)51 b(This)32 b(pro)r(cess,)i(pro)n(vided)c(b)n(y)-152
3804 y(the)22 b Fj(combine)p 248 3804 V 27 w(packs)g
Ft(routine,)h(c)n(hec)n(ks)f(all)i(groups)e(against)i(one)e(an-)-152
3887 y(other)k(and)f(rep)r(eats)h(un)n(til)f(all)h(p)r(ossible)h(com)n
(binations)e(ha)n(v)n(e)g(b)r(een)-152 3970 y(made.)64
b(Figure)36 b(4\(e\))g(sho)n(ws)h(the)e(result)h(of)g(our)g(example)f
(after)-152 4053 y(com)n(bination.)-40 4136 y(Since)48
b(the)e(adjacen)n(t)i(memory)e(iden)n(ti\014cation)h(phase)g(uses)-152
4219 y(alignmen)n(t)36 b(information,)i(it)e(will)h(nev)n(er)e(create)h
(pairs)h(of)f(mem-)-152 4302 y(ory)28 b(accesses)i(that)e(cross)i(an)e
(alignmen)n(t)f(b)r(oundary)-6 b(.)41 b(All)29 b(pac)n(k)n(ed)-152
4385 y(statemen)n(ts)h(are)h(aligned)g(based)g(on)f(this)h(initial)g
(seed.)49 b(As)30 b(a)h(re-)-152 4468 y(sult,)24 b(the)e(com)n
(bination)g(phase)h(will)h(nev)n(er)e(pro)r(duce)g(a)h(group)g(that)
-152 4551 y(spans)28 b(an)f(alignmen)n(t)f(b)r(oundary)-6
b(.)38 b(Com)n(bined)26 b(groups)i(are)f(there-)-152
4634 y(fore)33 b(guaran)n(teed)e(to)h(b)r(e)f(less)i(than)e(or)g(equal)
h(to)f(the)g(sup)r(erw)n(ord)-152 4717 y(datapath)26
b(size.)-152 4904 y Fu(3.7)83 b(Scheduling)-152 5036
y Ft(Dep)r(endence)19 b(analysis)j(b)r(efore)f(pac)n(king)f(ensures)g
(that)f(statemen)n(ts)-152 5119 y(within)26 b(a)f(group)h(can)f(b)r(e)g
(executed)g(safely)h(in)g(parallel.)36 b(Ho)n(w)n(ev)n(er,)-152
5202 y(it)f(ma)n(y)e(b)r(e)h(the)g(case)h(that)f(executing)g(t)n(w)n(o)
h(groups)f(pro)r(duces)g(a)-152 5285 y(dep)r(endence)28
b(violation.)45 b(An)28 b(example)g(of)i(this)e(is)i(sho)n(wn)f(in)f
(Fig-)-152 5368 y(ure)k(6.)55 b(Here,)33 b(dep)r(endence)f(edges)h(are)
f(dra)n(wn)g(b)r(et)n(w)n(een)g(groups)2274 -152 y
 11840716 5091505 855162 12498534 30654300 25391759 startTexFig

 doclip
 2274
-152 a
%%BeginDocument: cycle.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: cycle.fm
%%BoundingBox: 13 190 466 386
%%Creator: PSCRIPT.DRV Version 4.0
%%CreationDate: 12/16/99 19:50:13
%%Pages: 1
%%Requirements: None
%%DocumentNeededFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%LanguageLevel: 1
%%EndComments

%%BeginProlog 
%%BeginProcSet: Pscript_Res_Emul 1.0 0
/defineresource where{pop}{userdict begin/defineresource{userdict/Resources 2
copy known{get begin}{15 dict dup begin put}ifelse exch readonly exch
currentdict 1 index known not{dup 30 dict def}if load 3 -1 roll 2 index put
end}bind readonly def/findresource{userdict/Resources get exch get exch get}
bind readonly def/resourceforall{pop pop pop pop}bind readonly def
/resourcestatus{userdict/Resources 2 copy known{get exch 2 copy known{get exch
known{0 -1 true}{pop pop false}ifelse}{pop pop pop false}ifelse}{pop pop false
}ifelse}bind readonly def end}ifelse
%%EndProcSet
%%BeginResource: procset Pscript_Win_Driver 2.0 0
/Pscript_Win_Driver 200 dict dup begin
%%BeginResource: file Pscript_FatalError 2.0 0
/FatalErrorIf{{initgraphics findfont exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def
%%EndResource
/VM? {vmstatus exch sub exch pop gt { [
(This job requires more memory than is available in this printer.) 100 500
(Try one or more of the following, and then print again:) 100 485
(In the PostScript dialog box, click Optimize For Portability.) 115 470
(In the Device Options dialog box, make sure the Available Printer Memory is accurate.) 115 455
(Reduce the number of fonts in the document.) 115 440
(Print the document in parts.) 115 425
12 /Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%) =
true FatalErrorIf}if} bind def
%%BeginResource: file Pscript_Win_Utils 2.0 0
/|/def load def/,/load load |/~/exch , |/?/ifelse , |/!/pop , |/`/begin , |/^
/index , |/@/dup , |/+/translate , |/$/roll , |/U/userdict , |/M/moveto , |/-
/rlineto , |/&/currentdict , |/:/gsave , |/;/grestore , |/F/false , |/T/true ,
|/N/newpath , |/E/end , |/Ac/arc , |/An/arcn , |/A/ashow , |/D/awidthshow , |
/C/closepath , |/V/div , |/O/eofill , |/L/fill , |/I/lineto , |/-C/rcurveto ,
|/-M/rmoveto , |/+S/scale , |/Ji/setfont , |/Lc/setlinecap , |/Lj/setlinejoin
, |/Lw/setlinewidth , |/S/show , |/LH/showpage , |/K/stroke , |/W/widthshow ,
|/R/rotate , |/b{bind |}bind |/bd{bind |}bind |/xd{~ |}bd/ld{, |}bd/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/L2? F/languagelevel where{! languagelevel 2
ge{! T}if}if |/g{@ not{U/DefIf_save save put}if U/DefIf_bool 2 ^ put}b
/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e{DefIf_El !
}b/self & |/reinitialize{[/TextInit/GraphInit/UtilsInit counttomark{@ where{
self eq}{F}?{cvx exec}{!}?}repeat cleartomark}b/initialize{`{/ADO_mxRot ~ |
/TextInitialised? F | reinitialize E}{U/Pscript_Win_Data 200 dict @ ` put
/ADO_mxRot ~ |/TextInitialised? F | reinitialize}?}b/terminate{!{& self eq{
exit}{E}?}loop E}b/suspend/terminate , |/resume{` Pscript_Win_Data `}b/snap{
transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~ itransform}b
/dsnap{dtransform round ~ round ~ idtransform}b<04>cvn{}|/setjn{{statusdict
/jobname known{statusdict/jobname 3 -1 $ put}if}stopped cleartomark}b/solid{[]
0 setdash}b/setdsh{0 setdash}b/colspRefresh{}b/rp{4 2 $ M 1 ^ 0 - 0 ~ - neg 0
-}b/rr{1 ^ 0 - 0 ~ - neg 0 - C}b
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L1 2.0 0
L2? not g{/rf{N rp L}b/fx{1 1 dtransform @ 0 ge{1 sub 1}{1 add -0.25}? 3 -1 $
@ 0 ge{1 sub 1}{1 add -0.25}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{
4 -2 $ snap + +S fx rf}b/rs{N rp C K}b/rc{N rp clip N}b/sg{setgray}b/sco{
setrgbcolor}b/sgco{{sg}{sco}?}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 2.0 0
L2? g{/colspA/DeviceGray |/colspABC/DeviceRGB |/setAorABC{{colspA}{colspABC}?
setcolorspace}b/rf/rectfill , |/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5
}? 3 -1 $ @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $
idtransform}b/BZ{4 -2 $ snap + +S fx rf}b/rs/rectstroke , |/rc/rectclip , |/sg
{@ @ setcolor}b/sco{setcolor}b/colspRefresh{colspABC setcolorspace}b/sgco{{sg
}{sco}?}b/UtilsInit{F setglobal}b/definecolorrendering{/ColorRendering
defineresource !}b/findcolorrendering{@/ColorRendering resourcestatus{! !
/ColorRendering findresource T}{! F}?}b/selectcolorrendering{@/ColorRendering
resourcestatus{! !/ColorRendering}{!/DefaultColorRendering/ColorRendering}?
findresource setcolorrendering}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Encoding 2.0 0
/bullets{{/bullet}repeat}b/ANSIEncoding[/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18
bullets StandardEncoding 32 95 getinterval aload ! 3 bullets/quotesinglbase
/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron
/guilsinglleft/OE 4 bullets/quoteleft/quoteright/quotedblleft/quotedblright
/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe 2 bullets
/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]| ANSIEncoding @ 39/quotesingle put 96/grave
put/ANSIEncodingOld ANSIEncoding 256 array copy | ANSIEncodingOld @[138 153
154 169 172 174 177 178 179 181 185 188 189 190 208 215 221 222 240 247 253
254]{/bullet put @}forall 166/bar put 176/ring put
%%EndResource
%%BeginResource: file Pscript_Win_Text 2.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & |/TextInitialised? T |
/fM[1 0 0 -1 0 0]|/mFM matrix |/iMat[1 0 0.212557 neg 1 0 0]|}if}b/xUP null |
/yUP null |/uW null |/xSP null |/ySP null |/sW null |/copyfont{1 ^ length add
dict `{1 ^/FID ne{|}{! !}?}forall & E}b/rF{3 copyfont @ `/Encoding
ANSIEncoding &/CharStrings known{CharStrings/Eth known not{! ANSIEncodingOld}
if}if | E}b/mF{findfont ~{@/Encoding get @ StandardEncoding eq{! T}{{
ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{rF}{3 copyfont}? `
/OrigFontType ~ |/OrigFontName ~ | & E 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0
put fM makefont Pscript_Windows_Font 3 1 $ put}b/xF{scalefont
Pscript_Windows_Font 3 1 $ put}b/xMF{mFM astore makefont Pscript_Windows_Font
3 1 $ put}b/xF2/scalefont , |/xMF2{mFM astore makefont}b/sLT{: Lw -M
currentpoint snap M 0 - 0 Lc K ;}b/sSU{N/uW ~ |/yUP ~ |/xUP ~ |}b/sU{xUP yUP
uW sLT}b/sST{N/sW ~ |/ySP ~ |/xSP ~ |}b/sT{xSP ySP sW sLT}b/sR{: + R 0 0 M}b
/sRxy{: matrix astore concat 0 0 M}b/eR/; , |
%%EndResource
%%BeginResource: file Pscript_Win_Text_Bold 2.0 0
/mBF{@ 4 copyfont `/FontName ~ |/OrigFontType ~ |/OrigFontName ~ | 0
FontMatrix idtransform ! &/PaintType known{PaintType 0 eq{/PaintType 2 |
/StrokeWidth ~ |}{PaintType 1 eq PaintType 2 eq or PaintType 3 eq or &
/StrokeWidth known and{StrokeWidth add/StrokeWidth ~ |}{!}?}?}{!}? @ & E
definefont Pscript_Windows_Font 3 1 $ put}b/xBF{Pscript_Windows_Font ` 1 ^
/FontName get 1 ^ scalefont 3 1 $ scalefont 2 copy ~ | ~ ! | E}b/xMBF{mFM
astore Pscript_Windows_Font ` 1 ^/FontName get 1 ^ makefont 3 1 $ makefont 2
copy ~ | ~ ! | E}b/xBF2{/sB0 ~ mBF/sB1 sB0 3 -1 $ xBF sB1}b/xMBF2{/sB0 ~ mBF
mFM astore/sB1 sB0 3 -1 $ xMBF sB1}b/sB{: Pscript_Windows_Font currentfont get
Ji @ S ; S}b/asB{: Pscript_Windows_Font currentfont get Ji 3 copy A ; A}b/wsB{
: Pscript_Windows_Font currentfont get Ji 4 copy W ; W}b/awsB{:
Pscript_Windows_Font currentfont get Ji 6 copy D ; D}b/sBT3{: @ S ; 1 1 -M S}b
/asBT3{: 3 copy A ; 1 1 -M A}b/wsBT3{: 4 copy W ; 1 1 -M W}b/awsBT3{: 6 copy D
; 1 1 -M D}b/mIF{iMat 4 3 -1 $ put 2 copyfont `/OrigFontType ~ |/OrigFontName
~ | @ & E definefont iMat makefont Pscript_Windows_Font 3 1 $ put}b
%%EndResource
%%BeginResource: file Pscript_Win_Graphics 2.0 0
/SavedCTM null |/CTMsave{/SavedCTM SavedCTM currentmatrix |}b/CTMrestore{
SavedCTM setmatrix}b/mp null |/ADO_mxRot null |/GDIHMatrix null |
/GDIHPatternDict 22 dict | GDIHPatternDict `/PatternType 1 |/PaintType 2 |
/Reps L2?{1}{5}? |/XStep 8 Reps mul |/YStep XStep |/BBox[0 0 XStep YStep]|
/TilingType 1 |/PaintProc{` 1 Lw[]0 setdash PaintData , exec E}b/FGnd null |
/BGnd null |/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b
/HS_BDiagonal{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep
XStep YStep gt{XStep}{YStep}? |/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8
Reps mul + K}b/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag
{Reps{0 0 M MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps
mul + 0 YStep M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M
MaxXYStep @ neg - 0 8 +}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E
/makehatch{GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0/HS_Horizontal
makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal makehatch}b/h3{
/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5/HS_DiagCross
makehatch}b/GDIBWPatternDict 17 dict @ `/PatternType 1 |/PaintType L2?{1}{2}?
|/RepsV L2?{1}{6}? |/RepsH L2?{1}{5}? |/BBox[0 0 RepsH 1]|/TilingType 1 |
/XStep 1 |/YStep 1 |/Height 8 RepsV mul |/Width 8 |/mx[Width 0 0 Height neg 0
Height]|/FGnd null |/BGnd null |/SetBGndFGnd L2?{{BGnd null ne{BGnd aload !
sgco BBox aload ! 2 ^ sub ~ 3 ^ sub ~ rf}if FGnd null ne{FGnd aload ! sgco}if}
}{{}}? b/PaintProc{` SetBGndFGnd RepsH{Width Height F mx PaintData imagemask
Width 0 +}repeat E}b E |/GDIBWPatternMx null |/pfprep{save 4 1 $
/PatternOfTheDay 4 1 $ GDIBWPatternDict `/PaintData ~ |/BGnd ~ |/FGnd ~ | E
CTMsave GDIBWPatternMx setmatrix GDIBWPatternDict matrix mp CTMrestore ~ !}b
/hrf null |/prf{pfprep ~ 6 1 $ 5 hrf restore}b/GraphInit{GDIHMatrix null eq{
/SavedCTM matrix | : ADO_mxRot concat 0 0 snap + : 0.48 @ GDIHPatternDict `
YStep mul ~ XStep mul ~ dsnap YStep V ~ XStep V ~ E +S/GDIHMatrix matrix
currentmatrix readonly | ; : 0.24 -0.24 +S GDIBWPatternDict ` Width Height E
dsnap +S/GDIBWPatternMx matrix currentmatrix readonly | ; ;}if}b/cirp{360 0 An
C}b/ellp{CTMsave + +S 0.5 0 M 0 0 0.5 360 0 An C CTMrestore}b/rrp{/rad ~ |/y2
~ |/x2 ~ |/y1 ~ |/x1 ~ | x2 x1 add 2 V y1 M x1 y1 x1 y2 rad arct x1 y2 x2 y2
rad arct x2 y2 x2 y1 rad arct x2 y1 x1 y1 rad arct C}b/RRp{CTMsave + +S/dyS ~
|/dxS ~ | dxS 2 V 0 M 0 0 0 dyS 0.5 arct 0 dyS dxS dyS 0.5 arct dxS dyS dxS 0
0.5 arct dxS 0 0 0 0.5 arct C CTMrestore}b
%%EndResource
%%BeginResource: file Pscript_Win_Graphics_L1 2.0 0
L2? not g{/arct{arcto ! ! ! !}b/GDIpattfill{@ ` BGnd null ne PaintType 2 eq
and{: BGnd aload ! sgco fEOFill{O}{L}? ; FGnd aload ! U/fGray 2 ^ put{2}{4}?
-1 $}if E @ patterncalc : 4 ^/PaintType get 2 eq{fGray{6 -1 $ sg}{8 -3 $ sco}?
}if fEOFill{eoclip}{clip}? N patternfill ; N}b/hrf{/fGray 1 ^ 6 eq | -4 $ N rp
C/fEOFill F | GDIpattfill}b/hfMain{/fEOFill ~ |/fGray ~ | GDIpattfill}b/hf{T
hfMain}b/hfW{F hfMain}b/hs{currentpoint strokepath M hfW}b/pfMain{/fEOFill ~ |
pfprep GDIpattfill restore N}b/pf{T pfMain}b/pfW{F pfMain}b/ps{currentpoint
strokepath M pfW}b/mpstr 1 string |/mp{~ @ length 12 add dict copy `
/PatternCTM matrix currentmatrix |/PatternMatrix ~ |/PatWidth XStep mpstr
length mul |/PatHeight YStep |/FontType 3 |/Encoding 256 array | 3 string 0 1
255{Encoding ~ @ 3 ^ cvs cvn put}for !/FontMatrix matrix |/FontBBox BBox |
/BuildChar{! @ ` XStep 0 FontBBox aload ! setcachedevice/PaintProc , E : exec
;}b & E ~ @ 3 -1 $ definefont}b/patterncalc{` : PatternCTM setmatrix
PatternMatrix concat BBox aload ! ! ! + pathbbox ; PatHeight V ceiling 4 1 $
PatWidth V ceiling 4 1 $ PatHeight V floor 4 1 $ PatWidth V floor 4 1 $ 2 ^
sub cvi abs ~ 3 ^ sub cvi abs ~ 4 2 $ PatHeight mul ~ PatWidth mul ~ E}b
/patternfill{5 -1 $ @ ` Ji PatternCTM setmatrix PatternMatrix concat 0 2 ^ 2 ^
M 0 1 mpstr length 1 sub{1 ^ mpstr 3 1 $ put}for ! 2 ^{currentpoint 5 ^{mpstr
S}repeat YStep add M}repeat ! ! ! ! E}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Graphics_L2 2.0 0
L2? g{/mp/makepattern , |/hrf{6 eq setAorABC setpattern rectfill}b/hf{
setAorABC setpattern O}b/hfW{setAorABC setpattern L}b/hs{setAorABC setpattern
K}b/pf{pfprep setpattern O restore N}b/pfW{pfprep setpattern L restore N}b/ps{
pfprep setpattern K restore N}b}e
%%EndResource
%%BeginResource: file Pscript_Win_BW_Images 2.0 0
/iw 0 |/ih 0 |/im_save 0 |/s 0 |/polarity 0 |/smoothflag 0 |/mystring 0 |/bpc
0 |/setup1asciiproc{[currentfile mystring/readhexstring cvx/! cvx]cvx bind}b
/setup1binaryproc{[currentfile mystring/readstring cvx/! cvx]cvx bind}b
/setup2asciiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}b
/setup2binaryproc{currentfile/RunLengthDecode filter}b/mycolorspace{colspABC}|
/myimagedict{/myimagedict 10 dict | myimagedict @ `/ImageType 1 |
/MultipleDataSource F | E}b/imageprocarray[/setup1binaryproc/setup1asciiproc
/setup2binaryproc/setup2asciiproc/setup1binarydecodeproc/setup1asciidecodeproc
]|/L2Polarity{{[1 0]}{[0 1]}?}b/Q{/im_save save | imageprocarray ~ get/s ~ , |
L2Polarity/polarity ~ |/smoothflag ~ | snap +/dx 2 ^ |/dy 1 ^ | +S/mystring ~
string |/bpc ~ |/ih ~ |/iw ~ |}b/X{/im_save save | imageprocarray ~ get/s ~ ,
| L2Polarity/polarity ~ |/smoothflag ~ | snap +/dx 2 ^ |/dy 1 ^ | +S/mystring
~ string |/bpc ~ |/ih ~ |/iw ~ |}b/Z{im_save restore}b/Y{sgco myimagedict @ `
/Width iw |/Height ih |/Decode polarity |/ImageMatrix[iw 0 0 ih 0 0]|
/DataSource s |/BitsPerComponent 1 |/Interpolate smoothflag | E imagemask}b
%%EndResource
%%BeginResource: file Pscript_Win_BW_Images_L1 2.0 0
L2? not g{/setup2asciiproc{[/Level2ImagesError , aload ! T FatalErrorIf}b
/setup2binaryproc/setup2asciiproc , |/L2Polarity{}|/Y{sgco iw ih polarity[iw 0
0 ih 0 0]s imagemask}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Co_Images_L1 2.0 0
L2? not g{/testsystemdict{where{systemdict eq{T}{F}?}{F}?}b/c 1 |/colorimage
where{! T}{F}?{/c 0 statusdict `/processcolors where{! ! processcolors}{
/deviceinfo where{! deviceinfo/Colors known{!{deviceinfo/Colors get}}if}if}? E
| c 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict/currentcmykcolor testsystemdict and and
and not{/c 0 |}if}if}if c @ 1 ne ~ @ 3 ne ~ 4 ne and and{/c 0 |}if c 1 eq g{
/expandbw{expandfactor mul round cvi bwclut ~ get 255 V}b/doclutimage{!/bwclut
~ | bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/expandfactor ~ |[/expandbw ,/exec , @
currenttransfer ~]cvx bind settransfer iw ih bpc[iw 0 0 ih 0 0]s image}b}e c @
3 eq ~ 4 eq or g{/nullproc{{}}|/concatutil{/exec , 7 -1 $/exec ,}b/defsubclut{
1 add getinterval |}b/spconcattransfer{/Dclut ~ |/Cclut ~ |/Bclut ~ |/Aclut ~
|/ncompute ~ , | currentcolortransfer[{Aclut ncompute}concatutil]cvx[{Bclut
ncompute}concatutil]cvx[{Cclut ncompute}concatutil]cvx[{Dclut ncompute}
concatutil]cvx setcolortransfer}b/setuprgbcluts{/bit3x rgbclut length 3 sub |
/bit1x bit3x 3 idiv |/rclut rgbclut |/gclut rclut 1 bit3x defsubclut/bclut
rclut 2 bit3x defsubclut}b}e c 3 eq g{/3compute{~ bit3x mul round cvi get 255
V}b/doclutimage{/rgbclut ~ | ! setuprgbcluts/3compute rclut gclut bclut @
spconcattransfer iw ih bpc[iw 0 0 ih 0 0][s/exec ,/@ , @]cvx nullproc nullproc
T 3 colorimage}b}e c 4 eq g{/ftoint{1 ~ sub 255 mul round cvi}b/stuffclut{
cmykindex 3 -1 $ put}b/4compute{~ bit4x mul round cvi get 255 V}b
/invalidcolortable? T |/computecmykclut{setuprgbcluts/bit4x rgbclut length 3
idiv 4 mul 4 sub |/cmykclut bit4x 4 add string |/cclut cmykclut |/mclut cclut
1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x
defsubclut/cmykindex 0 | 0 1 bit1x{@/cmykindex ~ bit1x ~ sub 4 mul | 3 mul @
rclut ~ get 255 V ~ @ gclut ~ get 255 V ~ bclut ~ get 255 V setrgbcolor
currentcmykcolor ftoint kclut stuffclut ftoint yclut stuffclut ftoint mclut
stuffclut ftoint cclut stuffclut}for}b/doclutimage{/rgbclut ~ | !
invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut
spconcattransfer iw ih bpc[iw 0 0 ih 0 0][s/exec ,/@ , @ @]cvx nullproc
nullproc nullproc T 4 colorimage}b}e c 0 eq g{/a{3 mul 3 getinterval
putinterval ~ 3 add ~ 3 copy}b/8lookup/a , |/4lookup{/byte 1 ^ | -4 bitshift a
byte 15 and a}b/2lookup{/byte 1 ^ | -6 bitshift a byte -4 bitshift 3 and a
byte -2 bitshift 3 and a byte 3 and a}b/colorexpand{mystringexp 0 rgbclut 3
copy 7 -1 $/mylookup , forall ! ! ! ! !}b/createexpandstr{/mystringexp ~
mystring length mul string |}b/doclutimage{/rgbclut ~ | !/mylookup bpc 8 eq{3
createexpandstr/8lookup}{bpc 4 eq{6 createexpandstr/4lookup}{12
createexpandstr/2lookup}?}? , | iw ih bpc[iw 0 0 ih 0 0][s/exec ,/colorexpand
,/exec ,]cvx F 3 colorimage}b}e/colorimage where{! T}{F}? g{/do24image{iw ih 8
[iw 0 0 ih 0 0]s F 3 colorimage}b}DefIf_El{/rgbtogray{/str ~ |/len str length
|/smlen len 3 idiv |/rstr str |/gstr str 1 len 1 sub getinterval |/bstr str 2
len 2 sub getinterval | str @ 0 1 smlen 1 sub{@ 3 mul rstr 1 ^ get 0.3 mul
gstr 2 ^ get 0.59 mul add bstr 3 -1 $ get 0.11 mul add round cvi put @}for ! 0
smlen getinterval}b/do24image{iw ih 8[iw 0 0 ih 0 0][s/exec ,/rgbtogray ,/exec
,]cvx bind image}b}e/doNimage{bpc 24 eq{do24image}{iw ih bpc[iw 0 0 ih 0 0]s
image}?}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Co_Images_L2 2.0 0
L2? g{/doclutimage{/rgbclut ~ | ! bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ |[
/Indexed colspABC hival rgbclut]setcolorspace myimagedict @ `/Width iw |
/Height ih |/Decode[0 hival]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |
/BitsPerComponent bpc |/Interpolate smoothflag | E image}b/doCMYKclutimage{
/CMYKclut ~ | ! bpc @ 8 eq{! 255}{4 eq{15}{3}?}?/hival ~ |[/Indexed/DeviceCMYK
hival CMYKclut]setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode[0
hival]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent bpc |
/Interpolate smoothflag | E image}b/doNimage{bpc 24 eq{colspABC}{colspA}?
setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode bpc 24 eq{[0 1 0 1
0 1]}{[0 1]}? |/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent
bpc 24 eq{8}{bpc}? |/Interpolate smoothflag | E image}b/doCMYKimage{
/DeviceCMYK setcolorspace myimagedict @ `/Width iw |/Height ih |/Decode[0 1 0
1 0 1 0 1]|/ImageMatrix[iw 0 0 ih 0 0]|/DataSource s |/BitsPerComponent 8 |
/Interpolate smoothflag | E image}b}e
%%EndResource
%%BeginResource: file Pscript_Win_Type3_Hdr 2.0 0
/GreNewFont{10 dict @ 3 1 $ | @ ` 4 1 $/FontType 3 |/FontMatrix ~ |/FontBBox ~
|/Encoding 256 array | 0 1 255{Encoding ~/.notdef put}for/CharProcs 257 dict |
CharProcs/.notdef{}put/Metrics 257 dict | Metrics/.notdef 3 -1 $ put/BuildChar
{/char ~ |/fontdict ~ |/charname fontdict/Encoding get char get | fontdict
/Metrics get charname get aload ! setcachedevice fontdict ` Encoding char get
CharProcs ~ get E exec}| E definefont !}|/AddChar{` Encoding 3 1 $ put
CharProcs 3 1 $ put Metrics 3 1 $ put E}|
%%EndResource
%%BeginResource: file Pscript_Win_Type1_Hdr 2.0 0
/FEbuf 2 string |/FEglyph 3 string |/FE{(G00)FEglyph copy ! 1 ~{@ 16 lt{
/offset 2 store}{/offset 1 store}? @ 16 FEbuf cvrs FEglyph ~ offset ~
putinterval 1 ^ ~ FEglyph cvn put}for}bind |/Type1Hdr{11 dict `/FontName ~ |
/PaintType ~ |/FontType 1 |/FontMatrix[1 3 ^ V 0 0 1 6 ^ V 0 0]| !/Encoding
256 array 0 1 255{1 ^ ~/.notdef put}for 3 ^ 3 ^ FE | ! !/FontBBox{0 0 0 0}| &
E currentfile eexec}bind |
%%EndResource
/pp 1 string |/ss 1 string |/rledecodebinary{/DC 0 |/BC 0 |{DC mystring length
ge{exit}if currentfile ss readstring ! 0 get/BC ~ | BC 127 le{/BC BC 1 add |
DC 1 DC BC add 1 sub{mystring ~ currentfile ss readstring ! 0 get put}for}{/BC
257 BC sub | currentfile ss readstring ! 0 get/pp ~ | DC 1 DC BC add 1 sub{
mystring ~ pp put}for}?/DC DC BC add |}loop mystring}b/rledecodeascii{/DC 0 |
/BC 0 |{DC mystring length ge{exit}if currentfile ss readhexstring ! 0 get/BC
~ | BC 127 le{/BC BC 1 add | DC 1 DC BC add 1 sub{mystring ~ currentfile ss
readhexstring ! 0 get put}for}{/BC 257 BC sub | currentfile ss readhexstring !
0 get/pp ~ | DC 1 DC BC add 1 sub{mystring ~ pp put}for}?/DC DC BC add |}loop
mystring}b/setup1asciidecodeproc{[/rledecodeascii cvx]cvx bind}b
/setup1binarydecodeproc{[/rledecodebinary cvx]cvx bind}b
%%BeginResource: file Pscript_Win_Compat 2.0 0
userdict/Pscript_Win_Compat 13 dict dup begin/bd{bind def}bind def/ld{load def
}bd/CB{pop pop pop pop}bind def/B{pop pop pop pop}bind def/$x matrix def/SS{
/pagesave save def}bind def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}bind def/ANSIVec[0/grave 1/acute 2/circumflex 3
/tilde 4/macron 5/breve 6/dotaccent 7/dieresis 8/ring 9/cedilla 10
/hungarumlaut 11/ogonek 12/caron 13/dotlessi 39/quotesingle 96/grave 124/bar
130/quotesinglbase 131/florin 132/quotedblbase 133/ellipsis 134/dagger 135
/daggerdbl 136/circumflex 137/perthousand 138/Scaron 139/guilsinglleft 140/OE
145/quoteleft 146/quoteright 147/quotedblleft 148/quotedblright 149/bullet 150
/endash 151/emdash 152/tilde 153/trademark 154/scaron 155/guilsinglright 156
/oe 159/Ydieresis 160/space 161/exclamdown 164/currency 165/yen 166/brokenbar
167/section 168/dieresis 169/copyright 170/ordfeminine 171/guillemotleft 172
/logicalnot 173/hyphen 174/registered 175/macron 176/degree 177/plusminus 178
/twosuperior 179/threesuperior 180/acute 181/mu 182/paragraph 183
/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 187
/guillemotright 188/onequarter 189/onehalf 190/threequarters 191/questiondown
192/Agrave 193/Aacute 194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198
/AE 199/Ccedilla 200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204
/Igrave 205/Iacute 206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve
211/Oacute 212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 223
/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 229
/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 235/edieresis
236/igrave 237/iacute 238/icircumflex 239/idieresis 240/eth 241/ntilde 242
/ograve 243/oacute 244/ocircumflex 245/otilde 246/odieresis 247/divide 248
/oslash 249/ugrave 250/uacute 251/ucircumflex 252/udieresis 253/yacute 254
/thorn 255/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{
pop pop}ifelse}forall/initialize{currentdict exch begin begin}bind def
/terminate{/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate
load def/resume/initialize load def/M/moveto load def end put/Courier findfont
10 scalefont setfont
%%EndResource
end /ProcSet defineresource pop
%%EndResource
%%EndProlog

%%BeginSetup 
Pscript_Win_Compat dup /initialize get exec
[ 1.000 0 0 1.000 0 0 ] false /Pscript_Win_Driver /ProcSet findresource dup /initialize get exec


/mysetup [ 0.120 0 0 -0.120 12.960 778.920 ] | 
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
userdict begin /pagesave save def end mysetup concat colspRefresh : 1.000 1.000 1.000 sco 0 0 5100 6600 rf ; 
%%EndPageSetup

Pscript_Win_Compat begin /$x mysetup def end
/Pscript_Win_Driver /ProcSet findresource dup /suspend get exec
%%BeginDocument: Pscript_Win_PassThrough
% Copyright (c) 1986-1995 Frame Technology Corporation.
/FMcmyk 100 dict def
/FmBD{bind def}bind def
/FmLD{load def}FmBD
/FMc {
 FMcmyk length FMcmyk maxlength ge { /FMcmyk FMcmyk dup length dup add dict copy def } if
 4 array astore 4 1 roll 8 bitshift add 8 bitshift add exch FMcmyk 3 1 roll put
}FmBD
/setcmykcolor where { pop
 /sc where { pop /sc load 0 get /scignore eq {
  /FMsc /sc FmLD
  /sc { 3 copy 8 bitshift add 8 bitshift add FMcmyk 1 index known
   { FMcmyk exch get aload pop setcmykcolor pop pop pop } { pop FMsc } ifelse
  }FmBD
 } if } if
} if
mark { /S load
 dup 0 get /PenW eq { dup 1 get /sl load eq {
  dup 0 { PenW .75 sub sl } bind put 1 /exec load put
 } if } if
} stopped cleartomark       
/FmX matrix defaultmatrix def
/FmDC {transform FmX defaultmatrix itransform cvi exch cvi exch} def
/FmBx { dup 3 index lt {3 1 roll exch} if 
 1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmPD/cleartomark FmLD
/FmPD2/cleartomark FmLD
/FmPT/pop FmLD
/FmPA{pop pop pop}FmBD
systemdict /pdfmark known systemdict /currentdistillerparams known and {
 /FmPD/pdfmark FmLD
 currentdistillerparams /CoreDistVersion get 2000 ge {
  /FmPD2/pdfmark FmLD
  /FmPA { mark exch /Dest exch 5 3 roll 
	/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
  }FmBD
 } if
} if

%%EndDocument
Pscript_Win_Compat dup /suspend get exec
/Pscript_Win_Driver /ProcSet findresource dup /resume get exec
colspRefresh

: : : ; : 
-108 2442 N M 4500 2550 rr clip 
0 2442 N M 4392 2441 rr : 1.000 1.000 1.000 sco O ; : 0 3459 6392 159 rc 0 0 0 sco %%IncludeFont: Courier
(F0) cvn
0.787 
 (Courier) cvn /Type1 
T 
(Courier) cvn
mF 
(F0_150) cvn
F0
150 
xF 
F0_150
Ji 
42 3459 M 
(x = a)S 
-1.000 0 ([)A 
(i+0] + k1)S 
; : 0 3609 6392 159 rc 0 0 0 sco F0_150
Ji 
42 3609 M 
(y = a)S 
-1.000 0 ([)A 
(i+1] + k2)S 
; : 0 4529 6392 159 rc 0 0 0 sco F0_150
Ji 
42 4529 M 
(z = a)S 
-1.000 0 ([)A 
(i+2] + s)S 
; : 0 3909 6392 159 rc 0 0 0 sco F0_150
Ji 
43 3909 M 
(q = b[i+0] + y)S 
; : 0 4059 6392 159 rc 0 0 0 sco F0_150
Ji 
43 4059 M 
(r = b[i+1] + k3)S 
; : 0 4209 6392 159 rc 0 0 0 sco F0_150
Ji 
43 4209 M 
(s = b[i+2] + k4)S 
; : 2207 3367 4185 159 rc 0 0 0 sco F0_150
Ji 
2305 3367 M 
(x = a[i+0] + k1)S 
; : 2207 3517 4185 159 rc 0 0 0 sco F0_150
Ji 
2305 3517 M 
(y = a[i+1] + k2)S 
; : 2208 3667 4184 159 rc 0 0 0 sco F0_150
Ji 
2306 3667 M 
(z = a[i+2])S 
-1.000 0 32 ( +)W 
( s)S 
; : 2198 4351 4194 159 rc 0 0 0 sco F0_150
Ji 
2296 4351 M 
(q = b[i+0] + y)S 
; : 2198 4501 4194 159 rc 0 0 0 sco F0_150
Ji 
2296 4501 M 
(r = b[i+1] + k3)S 
; : 2198 4651 4194 159 rc 0 0 0 sco F0_150
Ji 
2296 4651 M 
(s = b[i+2] + k4)S 
; 
2217 3338 N M 1504 8 rr : 0 0 0 sco O ; 
3713 3342 N M 8 529 rr : 0 0 0 sco O ; 
2213 3863 N M 1504 8 rr : 0 0 0 sco O ; 
2213 3338 N M 8 529 rr : 0 0 0 sco O ; 
2217 4313 N M 1504 8 rr : 0 0 0 sco O ; 
3713 4317 N M 8 529 rr : 0 0 0 sco O ; 
2213 4838 N M 1504 8 rr : 0 0 0 sco O ; 
2213 4313 N M 8 529 rr : 0 0 0 sco O ; 
3571 4092 N M -8 -4 rr : 0 0 0 sco O ; 
3571 4092 N M -1 23 - 0 1 - -2 22 - -4 22 - -5 21 - -6 19 - 0 1 - -8 19 - -8 17 - -10 16 - -1 1 - -11 15 - -11 13 - -12 11 - -1 1 - -14 9 - -13 8 - -15 5 - -1 0 - -2 -8 - 15 -5 - -1 1 - 13 -8 - 14 -9 - 12 -11 - -1 1 - 11 -13 - 11 -15 - 10 -16 - 0 1 - 8 -17 - 8 -19 - -1 0 - 6 -19 - 5 -21 - 0 1 - 4 -22 - 2 -22 - 1 -23 - 8 0 - C : 0 0 0 sco L ; 
3448 4316 N M -15 4 - -1 -8 - -1 0 - 15 -4 - 2 8 - C : 0 0 0 sco L ; 
3418 4321 N M -4 0 - -1 -8 - 4 0 - 1 8 - C : 0 0 0 sco L ; 
3433 4320 N M -1 -8 - -15 1 - 1 8 - 15 -1 - C : 0 0 0 sco L ; 
3520 3929 N M -15 24 - -3 4 - -3 -3 - -72 -76 - -10 -11 - 14 4 - 101 27 - 5 2 - -3 4 - -4 2 - -101 -27 - 2 -8 - 2 1 - 72 76 - -6 6 - 0 -5 - 15 -24 - 6 4 - C : 0 0 0 sco L ; 
3534 3904 N M -14 25 - -6 -4 - 14 -25 - 6 4 - C : 0 0 0 sco L ; 
3517 3927 N M -15 24 - -72 -76 - 101 27 - -14 25 - C : 0 0 0 sco O ; 
3522 3926 N M -3 -2 - -4 7 - 3 2 - 4 -7 - C : 0 0 0 sco L ; 
3522 3926 N M 8 5 - 1 0 - 7 6 - 1 1 - 5 8 - -1 0 - 6 8 - 1 1 - 8 19 - 6 21 - 0 1 - 4 23 - -8 1 - -4 -23 - -6 -21 - 1 1 - -8 -19 - 0 1 - -6 -8 - 0 -1 - -5 -8 - 1 1 - -7 -6 - 0 1 - -8 -5 - 4 -7 - C : 0 0 0 sco L ; 
3568 4019 N M 2 24 - -8 0 - 0 1 - -2 -24 - 8 -1 - C : 0 0 0 sco L ; 
3571 4092 N M -8 4 rr : 0 0 0 sco O ; 
3570 4043 N M -8 0 - 1 49 - 8 0 - -1 -49 - C : 0 0 0 sco L ; 
2363 4092 N M 8 4 rr : 0 0 0 sco O ; 
2363 4092 N M 1 -23 - 2 -22 - 4 -22 - 0 -1 - 5 -21 - 6 -19 - 1 0 - 8 -19 - 8 -17 - 0 -1 - 10 -16 - 11 -15 - 11 -13 - 1 -1 - 12 -11 - 14 -9 - 13 -8 - 1 -1 - 15 -5 - 2 8 - 1 0 - -15 5 - -13 8 - -14 9 - 1 -1 - -12 11 - -11 13 - -11 15 - 1 -1 - -10 16 - -8 17 - -8 19 - 0 -1 - -6 19 - -5 21 - -4 22 - -2 22 - 0 -1 - -1 23 - -8 0 - C : 0 0 0 sco L ; 
2486 3868 N M 15 -4 - 1 0 - 1 8 - -15 4 - -2 -8 - C : 0 0 0 sco L ; 
2517 3863 N M 4 0 - 1 8 - -4 0 - -1 -8 - C : 0 0 0 sco L ; 
2502 3864 N M 1 8 - 15 -1 - -1 -8 - -15 1 - C : 0 0 0 sco L ; 
2414 4256 N M 15 -25 - 3 -4 - 3 3 - 72 76 - 10 11 - -14 -4 - -101 -27 - -5 -2 - 3 -4 - 4 -2 - 101 27 - -2 8 - -2 -1 - -72 -76 - 6 -6 - 0 5 - -15 25 - -6 -4 - C : 0 0 0 sco L ; 
2400 4280 N M 14 -24 - 6 4 - -14 24 - -6 -4 - C : 0 0 0 sco L ; 
2417 4258 N M 15 -25 - 72 76 - -101 -27 - 14 -24 - C : 0 0 0 sco O ; 
2412 4259 N M 3 2 - 4 -7 - -3 -2 - -4 7 - C : 0 0 0 sco L ; 
2412 4259 N M -8 -5 - 0 -1 - -7 -6 - -1 0 - -6 -8 - 0 -1 - -5 -8 - -8 -19 - -1 -1 - -6 -21 - -4 -23 - 8 -1 - 4 23 - 0 -1 - 6 21 - 8 19 - 0 -1 - 5 8 - -1 0 - 6 8 - 0 -1 - 7 6 - -1 0 - 8 5 - -4 7 - C : 0 0 0 sco L ; 
2366 4166 N M -2 -24 - 0 -1 - 8 0 - 2 24 - -8 1 - C : 0 0 0 sco L ; 
2363 4092 N M 8 -4 rr : 0 0 0 sco O ; 
2364 4141 N M 8 0 - -1 -49 - -8 0 - 1 49 - C : 0 0 0 sco L ; 
1872 4017 N M 0 -29 - 0 -5 - 5 1 - 101 29 - 14 4 - -14 4 - -101 29 - -5 1 - 0 -5 - 3 -4 - 101 -29 - 2 8 - -2 0 - -101 -29 - 2 -8 - 3 4 - 0 29 - -8 0 - C : 0 0 0 sco L ; 
1872 4046 N M 0 -29 - 8 0 - 0 29 - -8 0 - C : 0 0 0 sco L ; 
1876 4017 N M 0 -29 - 101 29 - -101 29 - 0 -29 - C : 0 0 0 sco O ; 
1617 4013 N M -4 8 rr : 0 0 0 sco O ; 
1872 4013 N M 4 8 rr : 0 0 0 sco O ; 
1617 4013 N M 255 8 rr : 0 0 0 sco O ; ; ; ; 
LH 
pagesave restore
%%PageTrailer

%%Trailer
%%DocumentNeededFonts: 
%%DocumentSuppliedFonts: 
/Pscript_Win_Driver /ProcSet findresource dup /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 2040 659 a Ft(Figure)45 b(6:)72 b(Example)44 b(of)h(a)f(dep)r(endence)
g(b)r(et)n(w)n(een)g(groups)h(of)2040 742 y(pac)n(k)n(ed)25
b(statemen)n(ts.)2040 989 y(if)j(a)f(statemen)n(t)f(in)h(one)g(group)g
(is)g(dep)r(enden)n(t)f(on)g(a)i(statemen)n(t)e(in)2040
1072 y(the)d(other.)34 b(As)24 b(long)g(as)g(there)f(are)i(no)e(cycles)
h(in)g(this)f(dep)r(endence)2040 1155 y(graph,)31 b(all)g(groups)f(can)
f(b)r(e)h(sc)n(heduled)f(suc)n(h)g(that)g(no)h(violations)2040
1238 y(o)r(ccur.)68 b(Ho)n(w)n(ev)n(er,)40 b(a)d(cycle)g(indicates)g
(that)g(the)f(set)h(of)g(c)n(hosen)2040 1321 y(groups)22
b(is)g(in)n(v)l(alid)f(and)g(at)h(least)g(one)g(group)f(will)i(need)e
(to)h(b)r(e)f(elim-)2040 1404 y(inated.)36 b(Although)26
b(exp)r(erimen)n(tal)f(data)h(has)h(sho)n(wn)f(this)g(case)h(to)2040
1488 y(b)r(e)22 b(extremely)e(rare,)j(care)g(m)n(ust)d(b)r(e)i(tak)n
(en)f(to)h(ensure)f(correctness.)2152 1571 y(The)35 b(sc)n(heduling)g
(phase)h(b)r(egins)f(b)n(y)f(sc)n(heduling)h(statemen)n(ts)2040
1654 y(based)24 b(on)g(their)g(order)g(in)g(the)g(original)i(basic)e
(blo)r(c)n(k.)34 b(Eac)n(h)24 b(state-)2040 1737 y(men)n(t)30
b(is)h(sc)n(heduled)g(as)g(so)r(on)h(as)g(all)g(statemen)n(ts)e(on)h
(whic)n(h)g(it)g(is)2040 1820 y(dep)r(enden)n(t)20 b(ha)n(v)n(e)h(b)r
(een)g(sc)n(heduled.)33 b(F)-6 b(or)22 b(groups)f(of)i(pac)n(k)n(ed)d
(state-)2040 1903 y(men)n(ts,)j(this)h(prop)r(ert)n(y)f(m)n(ust)f(b)r
(e)i(satis\014ed)g(for)g(eac)n(h)g(statemen)n(t)f(in)2040
1986 y(the)h(group.)35 b(If)24 b(sc)n(heduling)h(is)g(ev)n(er)f
(inhibited)g(b)n(y)g(the)g(presence)h(of)2040 2069 y(a)e(cycle,)g(the)g
(group)f(con)n(taining)h(the)f(earliest)i(unsc)n(heduled)d(state-)2040
2152 y(men)n(t)16 b(is)j(split)f(apart.)32 b(Sc)n(heduling)17
b(con)n(tin)n(ues)h(un)n(til)f(all)i(statemen)n(ts)2040
2235 y(ha)n(v)n(e)25 b(b)r(een)h(sc)n(heduled.)2152 2318
y(Whenev)n(er)i(a)h(group)g(of)g(pac)n(k)n(ed)f(statemen)n(ts)g(is)h
(sc)n(heduled,)g(a)2040 2401 y(new)e(SIMD)g(op)r(eration)h(is)g
(emitted)e(instead.)39 b(If)28 b(this)f(new)g(op)r(era-)2040
2484 y(tion)k(requires)g(op)r(erand)f(pac)n(king)h(or)g(resh)n
(u\017ing,)h(the)e(necessary)2040 2567 y(op)r(erations)h(are)f(sc)n
(heduled)f(\014rst.)46 b(Similarly)-6 b(,)30 b(if)g(an)n(y)f(statemen)n
(ts)2040 2650 y(require)k(unpac)n(king)g(of)h(their)g(source)g(data,)h
(the)e(required)g(steps)2040 2733 y(are)c(tak)n(en.)44
b(Since)29 b(our)g(analysis)h(op)r(erates)f(at)h(the)e(lev)n(el)h(of)h
(basic)2040 2816 y(blo)r(c)n(ks,)23 b(eac)n(h)e(basic)h(blo)r(c)n(k)f
(assumes)g(all)h(data)f(are)h(in)f(an)g(unpac)n(k)n(ed)2040
2899 y(con\014guration)30 b(up)r(on)f(en)n(try)g(to)h(the)f(blo)r(c)n
(k.)46 b(F)-6 b(or)30 b(this)g(reason,)i(all)2040 2982
y(v)l(ariables)22 b(that)f(are)h(liv)n(e)g(on)f(exit)g(are)h(unpac)n(k)
n(ed)e(at)h(the)g(end)g(of)h(the)2040 3065 y(blo)r(c)n(k.)2152
3148 y(Sc)n(heduling)35 b(is)h(pro)n(vided)f(b)n(y)f(the)h
Fj(schedule)f Ft(routine)i(in)f(Fig-)2040 3231 y(ure)29
b(5.)44 b(In)28 b(the)g(example)g(of)h(Figure)h(4,)g(the)e(result)h(of)
g(sc)n(heduling)2040 3314 y(is)24 b(sho)n(wn)g(in)g(part)f(\(f)6
b(\).)34 b(A)n(t)23 b(the)g(completion)h(of)g(this)g(phase,)g(a)g(new)
2040 3397 y(basic)38 b(blo)r(c)n(k)e(has)h(b)r(een)g(constructed)f
(wherev)n(er)h(parallelization)2040 3480 y(w)n(as)30
b(successful.)47 b(These)30 b(blo)r(c)n(ks)f(con)n(tain)g(SIMD)g
(instructions)h(in)2040 3563 y(place)e(of)h(pac)n(k)n(ed)e(isomorphic)h
(statemen)n(ts.)40 b(As)28 b(w)n(e)g(will)h(sho)n(w)g(in)2040
3646 y(Section)22 b(5,)i(the)e(algorithm)h(can)f(b)r(e)g(used)g(to)g
(ac)n(hiev)n(e)h(sp)r(eedups)f(on)2040 3729 y(a)k(micropro)r(cessor)h
(with)f(m)n(ultimedia)e(extensions.)2040 3925 y Fu(4)82
b(A)28 b(Simple)f(V)n(ecto)n(rizing)f(Compiler)2040 4082
y Ft(The)g(SLP)f(concepts)g(presen)n(ted)g(in)g(the)g(previous)g
(section)h(lead)f(to)2040 4165 y(an)31 b(elegan)n(t)h(implemen)n
(tation)e(of)i(a)f(v)n(ectorizing)h(compiler.)51 b(V)-6
b(ec-)2040 4248 y(tor)25 b(parallelism)g(is)g(c)n(haracterized)h(b)n(y)
d(the)h(execution)g(of)h(m)n(ultiple)2040 4331 y(iterations)k(of)g(an)f
(instruction)g(using)h(a)f(single)h(v)n(ector)f(op)r(eration.)2040
4414 y(This)d(same)f(computation)g(can)h(b)r(e)f(unco)n(v)n(ered)g
(with)g(unrolling)i(b)n(y)2040 4497 y(limiting)d(pac)n(king)g(to)g
(unrolled)g(v)n(ersions)g(of)g(the)g(same)f(statemen)n(t.)2040
4580 y(With)30 b(this)h(tec)n(hnique,)f(eac)n(h)h(statemen)n(t)e(has)i
(only)f(one)g(p)r(ossible)2040 4663 y(grouping,)37 b(whic)n(h)d(means)f
(that)g(no)h(searc)n(hing)h(is)f(required.)59 b(In-)2040
4746 y(stead,)23 b(ev)n(ery)f(statemen)n(t)f(can)h(b)r(e)f(pac)n(k)n
(ed)g(automatically)i(with)f(its)2040 4829 y(siblings)i(if)g(they)e
(are)i(found)e(to)h(b)r(e)g(indep)r(enden)n(t.)33 b(The)23
b(pro\014tabil-)2040 4912 y(it)n(y)e(of)h(eac)n(h)f(group)g(can)h(then)
e(b)r(e)h(ev)l(aluated)g(in)h(the)e(con)n(text)h(of)h(the)2040
4995 y(en)n(tire)27 b(set)g(of)h(pac)n(k)n(ed)e(data.)39
b(An)n(y)25 b(groups)j(that)f(are)g(deemed)f(un-)2040
5078 y(pro\014table)g(can)h(b)r(e)f(dropp)r(ed)g(in)g(fa)n(v)n(or)g(of)
h(their)g(sequen)n(tial)f(coun-)2040 5161 y(terparts.)59
b(The)34 b(pseudo)g(co)r(de)g(for)g(this)g(algorithm)g(is)h(sho)n(wn)f
(in)2040 5244 y(Figure)26 b(7.)2152 5327 y(While)32 b(not)e(as)i
(general)g(as)g(the)e(algorithm)i(describ)r(ed)f(in)g(the)p
eop
%%Page: 8 8
8 7 bop -152 -29 a Fi(vecto)n(r)p 7 -29 19 4 v 25 w(pa)n(rallelize)t
Fr(:)29 b(BasicBlo)r(c)n(k)12 b Fh(B)22 b Fg(!)d Fr(BasicBlo)r(c)n(k)
-42 38 y(P)n(ac)n(kSet)11 b Fh(P)28 b Fg( )19 b(;)-42
104 y Fh(P)28 b Fg( )23 b Fi(\014nd)p 218 104 V 22 w(all)p
298 104 V 23 w(packs)p Fr(\()p Fh(B)s(;)11 b(P)e Fr(\))-42
170 y Fh(P)28 b Fg( )23 b Fi(eliminate)p 351 170 V 24
w(unp)n(ro\014table)p 679 170 V 23 w(packs)p Fr(\()p
Fh(P)9 b Fr(\))-42 237 y Ff(return)23 b Fi(schedule)p
Fr(\()p Fh(B)s(;)12 b Fr([)19 b(])p Fh(;)11 b(P)e Fr(\))-152
436 y Fi(\014nd)p -51 436 V 22 w(all)p 29 436 V 24 w(packs)p
Fr(:)29 b(BasicBlo)r(c)n(k)12 b Fh(B)18 b Fg(\002)d Fr(P)n(ac)n(kSet)c
Fh(P)28 b Fg(!)19 b Fr(P)n(ac)n(kSet)-42 503 y Ff(foreac)n(h)k
Fr(Stm)n(t)e Fh(s)f Fg(2)e Fh(B)26 b Ff(do)32 569 y(if)c
Fg(8)p Fh(p)d Fg(2)g Fh(P)r(:s)26 b(=)-41 b Fg(2)18 b
Fh(p)23 b Ff(then)105 635 y Fr(P)n(ac)n(k)f Fh(p)d Fg( )g
Fr([)p Fh(s)p Fr(])105 703 y Ff(foreac)n(h)j Fr(Stm)n(t)g
Fh(s)558 678 y Fe(0)600 703 y Fg(2)c Fh(B)26 b Ff(where)d
Fh(s)988 678 y Fe(0)1030 703 y Fg(6)p Fr(=)18 b Fh(s)23
b Ff(do)178 771 y(if)g Fi(stmts)p 391 771 V 21 w(a)n(re)p
488 771 V 23 w(pack)n(able)p Fr(\()p Fh(s;)12 b(s)847
746 y Fe(0)870 771 y Fr(\))22 b Ff(then)252 839 y Fh(p)d
Fg( )g Fh(p)c Fg(\001)g Fh(s)505 814 y Fe(0)105 906 y
Ff(if)23 b Fg(j)p Fh(p)p Fg(j)18 b Fh(>)h Fr(1)j Ff(then)178
972 y Fh(P)28 b Fg( )20 b Fh(P)k Fg([)15 b(f)p Fh(p)p
Fg(g)-42 1039 y Ff(return)23 b Fh(P)-152 1240 y Fi(stmts)p
-6 1240 V 22 w(a)n(re)p 92 1240 V 22 w(pack)n(able)q
Fr(:)30 b(Stm)n(t)11 b Fh(s)k Fg(\002)g Fr(Stm)n(t)d
Fh(s)831 1215 y Fe(0)872 1240 y Fg(!)20 b Fr(Bo)r(olean)-42
1308 y Ff(if)j Fi(same)p 160 1308 V 21 w(o)n(rig)p 276
1308 V 23 w(stmt)p Fr(\()p Fh(s;)11 b(s)532 1283 y Fe(0)555
1308 y Fr(\))22 b Ff(then)32 1376 y(if)g Fi(indep)r(endent)p
Fr(\()p Fh(s;)13 b(s)530 1351 y Fe(0)553 1376 y Fr(\))22
b Ff(then)105 1442 y(return)h Fr(true)-42 1509 y Ff(return)g
Fr(false)-152 1708 y Fi(eliminate)p 82 1708 V 25 w(unp)n(ro\014table)p
411 1708 V 23 w(packs)p Fr(:)29 b(P)n(ac)n(kSet)11 b
Fh(P)28 b Fg(!)19 b Fr(P)n(ac)n(kSet)-42 1774 y Ff(rep)r(eat)32
1842 y Fr(P)n(ac)n(kSet)10 b Fh(P)325 1817 y Fe(0)367
1842 y Fg( )19 b Fh(P)32 1909 y Ff(foreac)n(h)j Fr(P)n(ac)n(k)g
Fh(p)d Fg(2)g Fh(P)31 b Ff(do)105 1975 y(if)23 b Fi(est)p
249 1975 V 22 w(savings)p Fr(\()p Fh(p;)11 b(P)e Fr(\))19
b Fh(<)g Fr(0)k Ff(then)178 2042 y Fh(P)28 b Fg( )20
b Fh(P)k Fg(\000)15 b(f)p Fh(p)p Fg(g)-42 2110 y Ff(un)n(til)23
b Fh(P)28 b Fg(\021)19 b Fh(P)326 2084 y Fe(0)-42 2176
y Ff(return)k Fh(P)-152 2485 y Ft(Figure)29 b(7:)40 b(Pseudo)28
b(co)r(de)h(for)g(the)f(v)n(ector)g(extraction)g(algorithm.)-152
2568 y(Pro)r(cedures)e(that)f(are)h(iden)n(tical)f(to)h(those)f(in)g
(Figure)h(5)f(are)h(omit-)-152 2651 y(ted.)51 b Fj(same)p
193 2651 24 4 v 28 w(o)n(rig)p 340 2651 V 28 w(stmt)30
b Ft(returns)h(true)g(if)h(t)n(w)n(o)f(statemen)n(ts)f(are)i(un-)-152
2734 y(rolled)27 b(v)n(ersions)f(of)g(the)g(same)f(original)j(statemen)
n(t.)-152 2981 y(previous)36 b(section,)k(this)d(tec)n(hnique)e(shares)
i(man)n(y)d(of)j(the)f(same)-152 3064 y(desirable)d(prop)r(erties.)55
b(First,)34 b(the)e(analysis)h(itself)g(is)g(extremely)-152
3147 y(simple)26 b(and)g(robust.)37 b(Second,)27 b(partially)g(v)n
(ectorizable)g(lo)r(ops)h(can)-152 3230 y(b)r(e)36 b(parallelized)i
(without)e(complicated)h(lo)r(op)f(transformations.)-152
3313 y(Most)31 b(imp)r(ortan)n(tly)-6 b(,)31 b(this)f(analysis)i(is)e
(able)h(to)f(ac)n(hiev)n(e)h(go)r(o)r(d)g(re-)-152 3396
y(sults)26 b(on)g(scien)n(ti\014c)g(and)f(m)n(ultimedia)g(b)r(enc)n
(hmarks.)-40 3479 y(The)j(dra)n(wbac)n(k)g(to)g(this)f(metho)r(d)g(is)h
(that)f(it)h(ma)n(y)e(not)i(b)r(e)f(ap-)-152 3562 y(plicable)e(to)f
(long)g(v)n(ector)g(arc)n(hitectures.)34 b(Since)24 b(the)f(unroll)i
(factor)-152 3645 y(m)n(ust)h(b)r(e)g(consisten)n(t)h(with)g(the)f(v)n
(ector)h(size,)h(unrolling)f(ma)n(y)e(pro-)-152 3728
y(duce)f(basic)h(blo)r(c)n(ks)f(that)g(o)n(v)n(erwhelm)f(the)h
(analysis)h(and)f(the)f(co)r(de)-152 3811 y(generator.)36
b(As)26 b(suc)n(h,)g(this)g(metho)r(d)e(is)j(mainly)e(applicable)i(to)f
(ar-)-152 3894 y(c)n(hitectures)g(with)g(short)g(v)n(ectors.)-40
3977 y(In)f(Section)g(5,)h(w)n(e)f(will)i(pro)n(vide)d(data)i(that)e
(compare)h(this)g(ap-)-152 4060 y(proac)n(h)h(to)g(the)f(algorithm)h
(describ)r(ed)g(in)g(Section)f(3.)-152 4256 y Fu(5)83
b(Results)-152 4413 y Ft(This)33 b(section)f(presen)n(ts)g(p)r(oten)n
(tial)g(p)r(erformance)g(gains)g(for)h(SLP)-152 4496
y(compiler)40 b(tec)n(hniques)e(and)h(substan)n(tiates)h(them)e(using)i
(a)f(Mo-)-152 4579 y(torola)d(MPC7400)g(micropro)r(cessor)g(with)e(the)
g(AltiV)-6 b(ec)33 b(instruc-)-152 4662 y(tion)h(set.)60
b(All)34 b(results)h(w)n(ere)f(gathered)h(using)f(the)g(compiler)g(al-)
-152 4745 y(gorithms)d(describ)r(ed)g(in)g(Sections)h(3)f(and)g(4.)51
b(Both)31 b(w)n(ere)h(imple-)-152 4828 y(men)n(ted)24
b(within)i(the)f(SUIF)g(compiler)h(infrastructure)g([23)q(].)-152
5015 y Fu(5.1)83 b(Benchma)n(rks)-152 5147 y Ft(W)-6
b(e)28 b(measure)g(the)g(success)h(of)g(our)f(SLP)g(algorithm)g(on)h(b)
r(oth)e(sci-)-152 5230 y(en)n(ti\014c)c(and)h(m)n(ultimedia)e
(applications.)35 b(F)-6 b(or)23 b(scien)n(ti\014c)h(co)r(des,)h(w)n(e)
p 2177 -72 1720 4 v 2175 -6 4 67 v 2222 -25 a Fr(Name)p
2444 -6 V 101 w(Description)p 3415 -6 V 638 w(Datat)n(yp)r(e)p
3894 -6 V 2177 -2 1720 4 v 2177 13 V 2175 79 4 67 v 2222
59 a(FIR)p 2444 79 V 153 w(Finite)c(impulse)g(resp)r(onse)g(\014lter)p
3415 79 V 125 w(32-bit)i(\015oat)p 3894 79 V 2177 82
1720 4 v 2175 149 4 67 v 2222 129 a(I)r(IR)p 2444 149
V 170 w(In\014nite)e(impulse)g(resp)r(onse)g(\014lter)p
3415 149 V 88 w(32-bit)i(\015oat)p 3894 149 V 2177 152
1720 4 v 2175 219 4 67 v 2222 199 a(VMM)p 2444 219 V
99 w(V)-5 b(ector-matrix)21 b(m)n(ultiply)p 3415 219
V 300 w(32-bit)i(\015oat)p 3894 219 V 2177 222 1720 4
v 2175 288 4 67 v 2222 268 a(MMM)p 2444 288 V 88 w(Matrix-matrix)f(m)n
(ultiply)p 3415 288 V 289 w(32-bit)h(\015oat)p 3894 288
V 2177 292 1720 4 v 2175 358 4 67 v 2222 338 a(YUV)p
2444 358 V 121 w(R)n(GB)h(to)e(YUV)h(con)n(v)n(ersion)p
3415 358 V 251 w(16-bit)g(in)n(teger)p 3894 358 V 2177
361 1720 4 v 2040 505 a Ft(T)-6 b(able)29 b(1:)39 b(Multimedia)28
b(k)n(ernels)g(used)f(to)h(ev)l(aluate)h(the)e(e\013ectiv)n(e-)2040
588 y(ness)f(of)h(SLP)e(analysis.)2040 911 y(use)20 b(the)g(SPEC95fp)i
(b)r(enc)n(hmark)c(suite.)33 b(Our)19 b(m)n(ultimedia)g(b)r(enc)n(h-)
2040 994 y(marks)25 b(are)h(pro)n(vided)f(b)n(y)g(the)g(k)n(ernels)h
(listed)g(in)f(T)-6 b(able)27 b(1.)2040 1182 y Fu(5.2)82
b(SLP)27 b(Availabilit)n(y)2040 1313 y Ft(T)-6 b(o)22
b(ev)l(aluate)g(the)f(a)n(v)l(ailabilit)n(y)h(of)g(sup)r(erw)n(ord)g
(lev)n(el)g(parallelism)h(in)2040 1396 y(our)32 b(b)r(enc)n(hmarks,)h
(w)n(e)f(calculated)h(the)f(p)r(ercen)n(tage)g(of)h(dynamic)2040
1479 y(instructions)22 b(eliminated)f(from)f(a)i(sequen)n(tial)f
(program)g(after)h(par-)2040 1562 y(allelization.)36
b(All)21 b(instructions)h(w)n(ere)g(coun)n(ted)e(equally)-6
b(,)22 b(including)2040 1645 y(SIMD)i(op)r(erations.)35
b(When)24 b(pac)n(king)g(w)n(as)i(required,)e(w)n(e)h(assumed)2040
1728 y(that)i Fs(n-1)37 b Ft(instructions)28 b(w)n(ere)f(required)g(to)
g(pac)n(k)f Fs(n)33 b Ft(v)l(alues)27 b(in)n(to)g(a)2040
1811 y(single)33 b(SIMD)d(register.)54 b(These)32 b(v)l(alues)f(w)n
(ere)h(also)h(used)e(for)i(un-)2040 1894 y(pac)n(king)26
b(costs.)2152 1977 y(Measuremen)n(ts)40 b(w)n(ere)h(obtained)g(b)n(y)e
(instrumen)n(ting)g(source)2040 2060 y(co)r(de)g(with)g(coun)n(ters)g
(in)g(order)g(to)g(determine)f(the)g(n)n(um)n(b)r(er)f(of)2040
2143 y(times)29 b(eac)n(h)h(basic)h(blo)r(c)n(k)e(w)n(as)i(executed.)46
b(These)30 b(n)n(um)n(b)r(ers)e(w)n(ere)2040 2226 y(then)i(m)n
(ultiplied)g(b)n(y)g(the)g(n)n(um)n(b)r(er)e(of)k(static)f(SUIF)f
(instructions)2040 2309 y(in)35 b(eac)n(h)f(basic)i(blo)r(c)n(k.)61
b(Results)35 b(for)g(b)r(oth)g(sets)g(of)g(b)r(enc)n(hmarks)2040
2392 y(are)c(listed)g(in)f(T)-6 b(able)31 b(2)f(and)g(illustrated)h(in)
f(Figure)h(8.)49 b(The)30 b(p)r(er-)2040 2475 y(formance)j(of)g(eac)n
(h)f(b)r(enc)n(hmark)f(is)i(sho)n(wn)f(for)h(a)g(v)l(ariet)n(y)f(of)h
(h)n(y-)2040 2558 y(p)r(othetical)27 b(datapath)e(widths.)35
b(It)25 b(is)i(assumed)e(that)g(eac)n(h)h(datap-)2040
2641 y(ath)h(can)g(accommo)r(date)g(SIMD)g(v)n(ersions)h(of)g(an)n(y)e
(standard)h(data)2040 2724 y(t)n(yp)r(e.)32 b(F)-6 b(or)22
b(example,)g(a)g(datapath)g(of)g(512)h(bits)f(can)g(p)r(erform)f(eigh)n
(t)2040 2807 y(64-bit)28 b(\015oating)h(p)r(oin)n(t)f(op)r(erations)h
(in)f(parallel.)42 b(T)-6 b(o)29 b(unco)n(v)n(er)e(the)2040
2890 y(maxim)n(um)f(amoun)n(t)i(of)h(sup)r(erw)n(ord)h(lev)n(el)f
(parallelism)h(a)n(v)l(ailable,)2040 2973 y(w)n(e)19
b(compiled)g(eac)n(h)f(b)r(enc)n(hmark)f(without)i(alignmen)n(t)f
(constrain)n(ts.)2040 3056 y(This)i(allo)n(w)n(ed)g(for)g(a)f(maxim)n
(um)d(degree)j(of)h(freedom)f(when)f(making)2040 3139
y(pac)n(king)26 b(decisions.)2152 3222 y(F)-6 b(or)35
b(the)g(m)n(ultimedia)f(b)r(enc)n(hmarks,)i(YUV)d(greatly)j(outp)r(er-)
2040 3305 y(forms)29 b(the)f(other)g(k)n(ernels.)43 b(This)29
b(is)g(b)r(ecause)g(it)f(op)r(erates)i(on)e(16-)2040
3388 y(bit)17 b(v)l(alues)h(and)f(is)h(en)n(tirely)g(v)n(ectorizable.)
32 b(The)18 b(remaining)g(k)n(ernels)2040 3471 y(are)k(partially)h(v)n
(ectorizable)g(and)e(still)i(exhibit)e(large)i(p)r(erformance)2040
3554 y(gains.)2152 3637 y(F)-6 b(or)30 b(the)g(SPEC95fp)h(b)r(enc)n
(hmark)d(suite,)k(some)d(of)i(the)f(appli-)p 2167 3881
1740 4 v 2165 3948 4 67 v 2212 3928 a Fr(Benc)n(hmark)p
2580 3948 V 2595 3948 V 103 w(128)22 b(bits)p 2914 3948
V 90 w(256)g(bits)p 3233 3948 V 90 w(512)g(bits)p 3552
3948 V 90 w(1024)g(bits)p 3904 3948 V 2167 3951 1740
4 v 2167 3966 V 2165 4032 4 67 v 2212 4012 a(swim)p 2580
4032 V 2595 4032 V 306 w(61.59\045)p 2914 4032 V 113
w(64.45\045)p 3233 4032 V 113 w(73.44\045)p 3552 4032
V 146 w(77.17\045)p 3904 4032 V 2167 4036 1740 4 v 2165
4102 4 67 v 2212 4082 a(tomcatv)p 2580 4102 V 2595 4102
V 215 w(40.91\045)p 2914 4102 V 113 w(61.28\045)p 3233
4102 V 113 w(69.50\045)p 3552 4102 V 146 w(73.85\045)p
3904 4102 V 2167 4105 1740 4 v 2165 4172 4 67 v 2212
4152 a(mgrid)p 2580 4172 V 2595 4172 V 283 w(43.49\045)p
2914 4172 V 113 w(55.13\045)p 3233 4172 V 113 w(60.51\045)p
3552 4172 V 146 w(61.52\045)p 3904 4172 V 2167 4175 1740
4 v 2165 4241 4 67 v 2212 4222 a(su2cor)p 2580 4241 V
2595 4241 V 268 w(33.99\045)p 2914 4241 V 113 w(48.73\045)p
3233 4241 V 113 w(56.06\045)p 3552 4241 V 146 w(59.63\045)p
3904 4241 V 2167 4245 1740 4 v 2165 4311 4 67 v 2212
4291 a(w)n(a)n(v)n(e5)p 2580 4311 V 2595 4311 V 281 w(26.69\045)p
2914 4311 V 113 w(37.25\045)p 3233 4311 V 113 w(41.97\045)p
3552 4311 V 146 w(43.87\045)p 3904 4311 V 2167 4315 1740
4 v 2165 4381 4 67 v 2212 4361 a(apsi)p 2580 4381 V 2595
4381 V 338 w(24.19\045)p 2914 4381 V 113 w(29.93\045)p
3233 4381 V 113 w(31.32\045)p 3552 4381 V 146 w(29.85\045)p
3904 4381 V 2167 4384 1740 4 v 2165 4451 4 67 v 2212
4431 a(h)n(ydro2d)p 2580 4451 V 2595 4451 V 217 w(18.53\045)p
2914 4451 V 113 w(26.17\045)p 3233 4451 V 113 w(28.88\045)p
3552 4451 V 146 w(30.80\045)p 3904 4451 V 2167 4454 1740
4 v 2165 4520 4 67 v 2212 4501 a(turb3d)p 2580 4520 V
2595 4520 V 257 w(21.16\045)p 2914 4520 V 113 w(24.76\045)p
3233 4520 V 113 w(21.55\045)p 3552 4520 V 146 w(15.13\045)p
3904 4520 V 2167 4524 1740 4 v 2165 4590 4 67 v 2212
4570 a(applu)p 2580 4590 V 2595 4590 V 290 w(15.54\045)p
2914 4590 V 113 w(22.56\045)p 3233 4590 V 113 w(10.29\045)p
3552 4590 V 180 w(0.01\045)p 3904 4590 V 2167 4593 1740
4 v 2165 4660 4 67 v 2212 4640 a(fpppp)p 2580 4660 V
2595 4660 V 317 w(4.22\045)p 2914 4660 V 146 w(8.14\045)p
3233 4660 V 146 w(8.27\045)p 3552 4660 V 180 w(8.27\045)p
3904 4660 V 2167 4663 1740 4 v 2167 4678 V 2165 4745
4 67 v 2212 4725 a(FIR)p 2580 4745 V 2595 4745 V 338
w(38.72\045)p 2914 4745 V 113 w(45.37\045)p 3233 4745
V 113 w(48.56\045)p 3552 4745 V 146 w(49.84\045)p 3904
4745 V 2167 4748 1740 4 v 2165 4814 4 67 v 2212 4794
a(I)r(IR)p 2580 4814 V 2595 4814 V 355 w(51.83\045)p
2914 4814 V 113 w(60.59\045)p 3233 4814 V 113 w(64.77\045)p
3552 4814 V 146 w(66.45\045)p 3904 4814 V 2167 4818 1740
4 v 2165 4884 4 67 v 2212 4864 a(VMM)p 2580 4884 V 2595
4884 V 284 w(36.92\045)p 2914 4884 V 113 w(43.37\045)p
3233 4884 V 113 w(46.63\045)p 3552 4884 V 146 w(51.90\045)p
3904 4884 V 2167 4887 1740 4 v 2165 4954 4 67 v 2212
4934 a(MMM)p 2580 4954 V 2595 4954 V 273 w(61.75\045)p
2914 4954 V 113 w(73.63\045)p 3233 4954 V 113 w(79.76\045)p
3552 4954 V 146 w(82.86\045)p 3904 4954 V 2167 4957 1740
4 v 2165 5024 4 67 v 2212 5004 a(YUV)p 2580 5024 V 2595
5024 V 306 w(87.21\045)p 2914 5024 V 113 w(93.59\045)p
3233 5024 V 113 w(96.79\045)p 3552 5024 V 146 w(98.36\045)p
3904 5024 V 2167 5027 1740 4 v 2040 5170 a Ft(T)-6 b(able)29
b(2:)42 b(P)n(ercen)n(tage)29 b(of)h(dynamic)e(instructions)h
(eliminated)g(b)n(y)2040 5253 y(SLP)c(analysis)i(for)f(a)g(v)l(ariet)n
(y)f(of)h(h)n(yp)r(othetical)g(datapath)f(widths.)p eop
%%Page: 9 9
9 8 bop -128 -152 a
 15156103 10306148 5130977 4012687 48810065 34009169 startTexFig

 doclip
 -128 -152 a
%%BeginDocument: gr1.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000418222549)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 78 61 742 517

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



78 61 moveto

742 61 lineto

742 517 lineto

78 517 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font HGBNKM+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /HGBNKM+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/a 273 RD 

b8f8880df7a097159a7f9f85a58b08a18b9f909c96089d979b9c9ba3087e

960581808385828b08878b878c888e08878d898f8990088a928a978ba008

f745078bbc89ab869908849e7aa0729d08729e6994608b08668b69856a80

086980727b787608787482768b74088b78927e997f08987e9c85a08b089f

8b9a91979608979691998b9b088a9785997f9908829586938b92088c948f

9193910899949c90a08b08998b9688958408978491838f82088f838d758b

69085d07265c4a666d6f086d717c6b8b68088b7194769c7a089c79a183a5

8b08b78bbda4c3bc088e7294789a7f080937cb157d8b808f8394087f9787

988b9a08899c929d989d089ea5a8a4b2a2088dfb2c05747879827b8b088a

06090e ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/d 200 RD 

b2f8c00df77ff92b157607a18b9a89938608918792848f82088d838d778b

6808fb1f0778a0799a7a93087a94788f758b086a8b6b816e77086d78746d

7a64087b65825f8b5a088b4d9958a66108ac55b972c58b08a38b9f909d95

089c95a09ea2a7084307f755b0059c07798c7e8e84900883928692889608

8b9089a08bae08f8a207fb5f8c0509cdfcba15725e70756f8b087d8b818e

8491087c98809f83a70882a587b68bc4088bc18fb193a40891a5959d9795

089490948f978b08ae8ba874a35d08fb8407090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/f 182 RD 

abf7e10df7a1f82d15bb0747068ac505e1078b9b8e989193089293928f94

8b08958b90899086088f878d868b84088b888a858a860889808a868b8808

8b819081958208958299879c8b089d8b9c90979608979691988b9a088b9b

819d789a0878996d93638b08518b5c7b696c08696c7a648b5c0874076a07

4b065b07cb068cfbd1058b70897c8883088882858582870882877c88768b

088d7a05f79f068d9c056d8a79918197088492889f8baa088af7d105cf06

090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/l 70 RD 

a0f7aa0d8af92b157a07a18a9a8693820892818f778b6b08fc6d078b6888

7884830881817c84768a087a07f78d069c07758e7c8f8394088495879f8b

ac08f8cc07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/s 223 RD 

b3f8190df79df86915837f85848789088988858a858b08878b838e829008

75967392728b085d8b687d736f08736d7f6c8b68088b6b966da070089a7b

ab70bd6908ab72a17b958008967f8f7e8b7b088b7e867f81810882827e86

7b8b08748b739672a00872a077ab7cb6087a0693fb38059c06929c949396

8b088e8b9289958708ae7ea884a18b08a88ba492a29808a1979d9e98a308

98a491a38ba4088ba983a37ca2087da16ba75bab085dab6ea28198088294

89938b94088b96909694940894939690988b08a28b9f83a07a08a079a06c

9f5d089a0686f730057906090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/y 201 RD 

93f8880df7725215795a7c6c7e7d0882828386838b08868b878d888f0889

8d89948b97088ba2859b81960883947d917b8b08798b7d857f7f08817d84

7c8b78088c7693789c7b089b7ca183a68b08ad8ba799a1a6089c9ea3bfac

e008f715f7e705a3c59aad949508959697909a8d088a9c05fb2a06897a05

a18a988793840894848f818b7f088a77826878590855fb1f053df748057b

b383a28b98088a928f929291089090978f9b8c089c07fb87067a079a8498

84967f0894809c6ba15708f728fbe7057d6505090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HGBNKM+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 121 /y put

pop

%%EndResource

[/N21/HGBNKM+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font HGBNFM+TimesNewRomanPSMT

11 dict begin

/FontName /HGBNFM+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/F 175 RD 

9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08

9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f

8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d

0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06

a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685

6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 

/I 108 RD 

a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8

41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b

87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b

7783708b0873067907f7b0069d077306090e ND 

/M 168 RD 

9cfa0d0df82c16f793f8c205fc4f078b668773848108807977836e8b0873

067907f7b0069d077406708b78927f9908819487a58bb408f845078bb08f

a3929508979d9f93a88b08a2069d07fb5006fb81fc9a05fb83f89a05fb52

067907a68b9f8897850899849384908208907b8f778b6e08fc45078b6687

738481087f7977836f8b0873067907f77d069d077306718b77927f990883

9486a58bb408f84f07f794fcc2059b06090e ND 

/R 220 RD 

9cf92f0df9279d15678f6e94759908739a71a86cb708fb1df75205c296b4

a1a6a908a6a998ae8bb4088bb27fac74a70874a46f9f6a95086896589045

8b08fb87068d7905a206a68b9d84987d08938090728b6108fc41078b6588

738481087f7977826f8b0872067907f7b0069d077106738b78927f990881

9687a48bb508f75507908b908b908b088f89908c8f8b08958b988b9b8c08

f776fbca05f745069d0709fc6af8eb15ab91a48e9e8b08b58bad7ea57108

a47198698b62088b617b686b70086c6f5b7e4d8b08888a878c878b08868b

868b858b08f7a807090e ND 

/U 194 RD 

90f9660df886f91915a48b9e84987d08938090728b6208fba0078b42855a

7e6e087f6d737369780869796481608b08698b6f9174970872977a9a7f9e

087e9e83a586ac0886ac89a98ba508f7b5078bae8fa4939708979d9e93a6

8b08a606899d05fbb006897905a606a28b9e85967e08977e90708b6208fb

97078b3d9054956e089c60a56ab07208b171c27fd38b08cc8bc098b2a508

b1a6a5aa98b00899af91bf8bcd08f7a1078bb08ea292950899a19f96a58b

08a4069d07fb7d067907a406090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/Y 188 RD 

94f9660df869f919159c8b9889948708948792869084088e828e848b8208

8c7b8175776c08fb16fb6005fb1ef76a0577a881a18b97088b9991969892

089993998e9a8b0899068c9d05fbaf067907978b9489928808a4809b8193

830891839b77a06b08f749fbac05fb2f078b6487748481087f7977836f8b

0873067907f7b0069d077506708b77927e9908839486a58bb408f73d07f7

33f78d059faa9ba2989908999a99959b93089d92968f938b089a06889d05

fb78068a7905090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/b 170 RD 

89f8880df730f94b157506fb1b54059279059890978e948b08938b918990

870892868e848d7f088e7e8c6c8b5808fc6207a77aa67ca68208a680a587

a58b08c48bbda0b8b508c0baa5cb8bda088bd27abf69b20869b3639e5d8b

08598b5c6d604e08f7d90709bdfbd1159c949c8f9c8b08ad8ba87ca56c08

a26c995f8b52088b4e7e5b716b08736a6f7b6d8b08788b798f7993087a94

79977a9b088df79f059d9e9d989892088b06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/d 205 RD 

acf8880df7ce7e15a206f719c205869d057c858088828b08828c858d8690

08868f879489970888948aac8bbf08f899077506fb1a54059179059a9096

8e948b08918b928990870892868e848d7f088e7f8c6c8b5808380771a56a

97648b084c8b5770635608625677508b4b088b4c9d56af6208b163b576bc

8b08a28ba290a09508a095a09ca1a2084a070935c115688b6b9c6eae086e

af7dbd8bcd088bcb9abda9ad08a1a4a598a88b08998b9b869b82089c8297

7d957908967990778d7508fb79076f6b6e7d6d8b088c06090e ND 

/e 146 RD 

b0f8500df80ef7ab158bc27bb76bac086aad629b598b08508b5a76646008

636078508b3f088b439e54b16108b261b976c18b08bb8bb59dacb008abaf

9fb492b8087c95057c64796f757b08767b71836e8b085f8b659e6ab1086b

af7bbf8bcd08f7c98c0509fba4f70815a1a0a395a68b089c8b9c869b8108

9c7f977d93790890808f768d6e08fb650691b296a7a0a108090e ND 

/f 179 RD 

b2f7e10df7aef83115ae07fb0706ab078bd18db6909c088f9a9398959308

9693978f9a8b08988b96889585089685967f977908967a967f9386089486

9388938b08938b958f93940894938f948b95088b9d829b789a086da16c96

698b08668b6a826d78086e7775737d6c087c6c84658b5f086e0734066807

e206fbbb078b6b89768780088780848280850880847f887e8b0877067907

f7a0069d076206778b7b927f9908819787a58bb408f7bb07f70706090e ND 

/g 385 RD 

a9f8880dc4ee15827b867e8b80088b808e82928308938396829c81086d6b

7a798988087976807a857f08888389838b83088b7a977aa37b08b76ebf7d

ca8b08de8bcda3bebb08acaa9dae8bb0088ba582a2799d08799e73966d8f

08768e608d488d08668d748c828c087d8d808f869008849189908b91088b

908e939094088f979595999708a384a188a18b08c18bb59aaba908aba79b

af8bb5088bb082a979a208c4069b8b928b8d8c088e8d8c8c8c8d088e8d8b

928b93088b928a90898e088a8e898c898c08898b838c7d8b082c066da066

95608b08578b617b6a6b08686c7b658b5f088b6c92719a73089975a077a6

7e086b6f7575827c0809f768f7c615a26e96638b57088b63836e7b79087b

787782728b08728b75967aa00875a780b38bbe088bb393a89b9e089c9f9f

94a38b08a48ba1809c76088a06099bfc3415bd8aac879c84089c8293808b

7a088b747d756f760870766081518b084c8b5d956b9f08779782988b9b08

8b978f98939908929b979a9a9c08b384c388d489088b06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/l 103 RD 

a9f7aa0df71af94b15fb1954059379059990958e938b08948b9189908708

8f868f848d80088e7e8c6d8b5908fc2b078b708978878108868286848487

0882857e8a768b087907f76f069d07748b7b8d8390088290859287940887

93899e8ba708f8e6077506090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/p 235 RD 

88f8880d93f818159790958d938b08948b938991870890878f858e83088e

848c788b6e08fc3d078b6d8976888308878286868587087f847b87798b08

7f067907f77f069d07728d7a8c829008829184918793088994889e8baa08

f71c079b7d9a819886089d85a087a38b08c28bb9a0b0b408b6bda2cb8bd8

088bd179c366b6086dad669d5e8b08708b7383747b08737c746f746408f3

077806fb1d5405917b0509f76482159b939a8f9b8b08a78ba47ea07208a9

669a568b46088b507e5b716a087672717e6a8b08708b74927999087b9a7f

9b869e08899789a28baf08f73b07a6ab9e9b9791088b06090e ND 

/r 168 RD 

91f7e10df71cf86115fb1b54059079059790968d958b08958c9188918608

91878f838d81088d838c6b8b5708fb41078b718a7b898508898185828386

087f837b88748b087907f779069d07778b7c8e8091088090849387940883

97899e8ba408f76a079baa9aa19a98089092928e918b08928b9585998008

9a809785968b08988b958f939408929490968b98088b9985987f96088095

7c91798b08658b6469664808f0077606090e ND 

/s 212 RD 

bcf8190df793f86115878388868889088888878a868b08858b808e7a9008

7392758f798b08648b6a7f72720871727f6c8b66088b6f92739a7808997a

aa75ba7408bb73aa789b7c089b7b93788b75088b79847b7d7e087c7d7985

758b086b8b6e9771a20872a279ae82b9087b06fb34079b068f919190938b

08918b9489968808ae82aa86a68b08b28bad97aaa408aaa59bab8bb40889

bf6bb649ab0844ae056b997799819808829a85998b9d088b9c9297999708

99979d91a28b08a98ba4829e7a089d7a9b6a975b089d0689f72c057c8c05

090e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/u 171 RD 

8cf8880df7a2f854157907a88a9e8694820896838f798b7108fb91077372

767b79820879817b877d8b08778b79927d98087c9784a78bb508f7c007fb

31067907a38b9b89948708948692859083088e838e7c8b7608fb5c078b62

8f6a927408927598789d7d089d7ca184a48b08a28ba0909f96089f96a8a5

b1b4088d2d059f06f71cc205829d0581857e88818b08848c858d86900884

8f889389960888978aaa8bbe08f7a407fb2d06090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

/y 212 RD 

91f8880d8af842159c8797869386088e889383938008967a937f908108f7

34fbe5056d3d057e6e80787f810880818086818b08898b828d7e90087892

7c8e808b087d8b7e87828308828287808b7d088a7e927e978008977f9b86

9e8b08a68ba696a8a108a7a2a2ac9db608f74af85405939d91998e900892

949393928f08908f958d978c089d07fb25068a79059a8d94899189089189

8f888e87088c898d868b85088a7e897e857e0828fb8c05fb02f77705819f

859e8b98088b948e939291089592958e9a8b0894068c9d05fb67068c7905

090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HGBNFM+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 70 /F put

dup 73 /I put

dup 77 /M put

dup 82 /R put

dup 85 /U put

dup 86 /V put

dup 89 /Y put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N19/HGBNFM+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

78 61 664 456 re W n

[ 0 1 -1 0 803 -17 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

181.08 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

181.2 646.2 m

181.2 66.84 l

S 

0 0 0 RG

181.2 646.2 m

181.2 66.84 l

S 

Q

q

1 i

215.03999 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

215.16 646.2 m

215.16 66.84 l

S 

0 0 0 RG

215.16 646.2 m

215.16 66.84 l

S 

Q

q

1 i

249 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

249.12 646.2 m

249.12 66.84 l

S 

0 0 0 RG

249.12 646.2 m

249.12 66.84 l

S 

Q

q

1 i

282.96001 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

283.08 646.2 m

283.08 66.84 l

S 

0 0 0 RG

283.08 646.2 m

283.08 66.84 l

S 

Q

q

1 i

316.92 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

317.03999 646.2 m

317.03999 66.84 l

S 

0 0 0 RG

317.03999 646.2 m

317.03999 66.84 l

S 

Q

q

1 i

350.75999 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

350.88 646.2 m

350.88 66.84 l

S 

0 0 0 RG

350.88 646.2 m

350.88 66.84 l

S 

Q

q

1 i

384.72 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

384.84 646.2 m

384.84 66.84 l

S 

0 0 0 RG

384.84 646.2 m

384.84 66.84 l

S 

Q

q

1 i

418.67999 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

418.8 646.2 m

418.8 66.84 l

S 

0 0 0 RG

418.8 646.2 m

418.8 66.84 l

S 

Q

q

1 i

452.64 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

452.75999 646.2 m

452.75999 66.84 l

S 

0 0 0 RG

452.75999 646.2 m

452.75999 66.84 l

S 

Q

q

1 i

486.60001 66.84 0.12 579.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

486.72 646.2 m

486.72 66.84 l

S 

0 0 0 RG

486.72 646.2 m

486.72 66.84 l

S 

Q

0 0 0 RG

1 J

1 j

0.12 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

147.24001 66.84 339.48 579.36 re

S 

1 1 1 rg

0 j

0.96001 w

147.24001 635.39999 209.03999 7.2 re

B* 

147.24001 599.16 138.84 7.2 re

B* 

147.24001 563.03999 147.60001 7.08 re

B* 

147.24001 526.8 115.44 7.2 re

B* 

147.24001 490.56 90.60001 7.2 re

B* 

147.24001 454.32001 82.08 7.2 re

B* 

147.24001 418.2 62.88 7.08 re

B* 

147.24001 381.96001 71.88 7.2 re

B* 

147.24001 345.72 52.8 7.2 re

B* 

147.24001 309.48 14.28 7.2 re

B* 

147.24001 237.12 131.39999 7.2 re

B* 

147.24001 200.88 175.92 7.2 re

B* 

147.24001 164.64 125.28 7.2 re

B* 

147.24001 128.52 209.64 7.08 re

B* 

q

147.24001 86.16 302.03999 19.32001 re

W n 

147.24001 92.28 296.03999 7.2 re

B* 

Q

0.754 0.754 0.754 rg

147.24001 628.2 218.75999 7.08 re

B* 

147.24001 591.96001 208.08 7.08 re

B* 

147.24001 555.72 187.2 7.2 re

B* 

147.24001 519.60001 165.48 7.08 re

B* 

147.24001 483.36 126.48 7.08 re

B* 

147.24001 447.12 101.64 7.08 re

B* 

147.24001 410.88 88.8 7.2 re

B* 

147.24001 374.75999 84 7.08 re

B* 

147.24001 338.52 76.56 7.08 re

B* 

147.24001 302.28 27.60001 7.08 re

B* 

147.24001 229.92 154.08 7.08 re

B* 

147.24001 193.67999 205.67999 7.08 re

B* 

147.24001 157.44 147.24001 7.08 re

B* 

q

147.24001 115.08 255.96001 19.32001 re

W n 

147.24001 121.2 249.96001 7.2 re

B* 

Q

q

147.24001 78.96001 323.75999 19.2 re

W n 

147.24001 85.08 317.75999 7.08 re

B* 

Q

q

147.24001 614.75999 255.36 19.32001 re

W n 

0.5 0.5 0.5 rg

147.24001 620.88 249.36 7.2 re

B* 

Q

0.5 0.5 0.5 rg

147.24001 584.64 235.92 7.2 re

B* 

147.24001 548.52 205.44 7.08 re

B* 

147.24001 512.28 190.32001 7.2 re

B* 

147.24001 476.03999 142.44 7.2 re

B* 

147.24001 439.8 106.32001 7.2 re

B* 

147.24001 403.67999 98.03999 7.08 re

B* 

147.24001 367.44 73.2 7.2 re

B* 

147.24001 331.2 34.92 7.2 re

B* 

147.24001 294.96001 28.08 7.2 re

B* 

147.24001 222.60001 164.88 7.2 re

B* 

147.24001 186.36 219.84 7.2 re

B* 

147.24001 150.12 158.28 7.2 re

B* 

q

147.24001 107.88 276.72 19.2 re

W n 

147.24001 114 270.72 7.08 re

B* 

Q

q

147.24001 71.64 334.56 19.32001 re

W n 

147.24001 77.75999 328.56 7.2 re

B* 

Q

q

147.24001 607.56 267.96001 19.2 re

W n 

0 0 0 rg

147.24001 613.67999 261.96001 7.08 re

B* 

Q

q

147.24001 571.32001 256.67999 19.2 re

W n 

0 0 0 rg

147.24001 577.44 250.67999 7.08 re

B* 

Q

0 0 0 rg

147.24001 541.32001 208.8 7.08 re

B* 

147.24001 505.08 202.44 7.08 re

B* 

147.24001 468.84 148.92 7.08 re

B* 

147.24001 432.60001 101.28 7.08 re

B* 

147.24001 396.48 104.52 7.08 re

B* 

147.24001 360.24001 51.36 7.08 re

B* 

147.24001 287.75999 28.08 7.08 re

B* 

147.24001 215.39999 169.2 7.08 re

B* 

147.24001 179.16 225.60001 7.08 re

B* 

147.24001 142.92 176.16 7.08 re

B* 

q

147.24001 100.67999 287.28 19.2 re

W n 

147.24001 106.8 281.28 7.08 re

B* 

Q

q

147.24001 64.92 339.96001 18.72 re

W n 

147.24001 70.56 333.96001 7.08 re

B* 

Q

0.12 w

486.72 646.2 m

147.24001 646.2 l

147.24001 651 m

147.24001 646.2 l

181.2 651 m

181.2 646.2 l

215.16 651 m

215.16 646.2 l

249.12 651 m

249.12 646.2 l

283.08 651 m

283.08 646.2 l

317.03999 651 m

317.03999 646.2 l

350.88 651 m

350.88 646.2 l

384.84 651 m

384.84 646.2 l

418.8 651 m

418.8 646.2 l

452.75999 651 m

452.75999 646.2 l

486.72 651 m

486.72 646.2 l

147.24001 646.2 m

147.24001 66.84 l

142.44 646.2 m

147.24001 646.2 l

142.44 609.96001 m

147.24001 609.96001 l

142.44 573.72 m

147.24001 573.72 l

142.44 537.60001 m

147.24001 537.60001 l

142.44 501.36 m

147.24001 501.36 l

142.44 465.12 m

147.24001 465.12 l

142.44 428.88 m

147.24001 428.88 l

142.44 392.75999 m

147.24001 392.75999 l

142.44 356.52 m

147.24001 356.52 l

142.44 320.28 m

147.24001 320.28 l

142.44 284.03999 m

147.24001 284.03999 l

142.44 247.92 m

147.24001 247.92 l

142.44 211.67999 m

147.24001 211.67999 l

142.44 175.44 m

147.24001 175.44 l

142.44 139.2 m

147.24001 139.2 l

142.44 103.08 m

147.24001 103.08 l

142.44 66.84 m

147.24001 66.84 l

S 

BT

/N19 1 Tf

0 -15.48 15.48 0 142.32001 678.48 Tm

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.50391 2.1938 TD

/N19 1 Tf (10%)Tj

T*

/N19 1 Tf (20%)Tj

T*

/N19 1 Tf (30%)Tj

T*

/N19 1 Tf (40%)Tj

T*

/N19 1 Tf (50%)Tj

0 2.186 TD

/N19 1 Tf (60%)Tj

0 2.1938 TD

/N19 1 Tf (70%)Tj

T*

/N19 1 Tf (80%)Tj

T*

/N19 1 Tf (90%)Tj

-0.50391 2.1938 TD

/N19 1 Tf (100%)Tj

10.9463 -10.9458 10.9458 10.9458 102.96001 655.92 Tm

/N19 1 Tf (s)Tj

0.38921 -0.00549 TD

0.0014 Tc

/N19 1 Tf [(wi)5.2 ]TJ /N19 1 Tf [(m)]TJ

0.2028 -1.64999 TD

0 Tc

/N19 1 Tf (t)Tj

0.2796 -0.00549 TD

/N19 1 Tf (o)Tj

0.49879 0.00549 TD

0.0005 Tc

/N19 1 Tf (mc)Tj

1.2224 -0.00549 TD

0 Tc

/N19 1 Tf (a)Tj

0.444 0.00549 TD

/N19 1 Tf (t)Tj

0.2796 -0.00549 TD

/N19 1 Tf (v)Tj

-0.25211 -1.6445 TD

0.0005 Tc

/N19 1 Tf (mg)Tj

1.27721 -0.00549 TD

0 Tc

/N19 1 Tf (r)Tj

0.3344 0.00549 TD

/N19 1 Tf (i)Tj

0.2796 -0.00549 TD

/N19 1 Tf (d)Tj

-0.52071 -1.6499 TD

/N19 1 Tf (s)Tj

0.38921 -0.00549 TD

/N19 1 Tf (u)Tj

0.49879 0.00549 TD

/N19 1 Tf (2)Tj

0.49879 -0.00549 TD

0.0056 Tc

/N19 1 Tf [(co)12.3 ]TJ /N19 1 Tf [(r)]TJ

0.32339 -1.64999 TD

0.0014 Tc

/N19 1 Tf (wa)Tj

1.1675 -0.00549 TD

0 Tc

/N19 1 Tf (v)Tj

0.49879 0.00549 TD

/N19 1 Tf (e)Tj

0.444 -0.00549 TD

/N19 1 Tf (5)Tj

0.54269 -1.64999 TD

/N19 1 Tf (a)Tj

0.444 -0.00549 TD

/N19 1 Tf (p)Tj

0.49879 0.00549 TD

/N19 1 Tf (s)Tj

0.38921 -0.00549 TD

/N19 1 Tf (i)Tj

-1.4142 -1.64439 TD

/N19 1 Tf (h)Tj

0.49879 -0.00549 TD

0.0051 Tc

/N19 1 Tf [(yd)11.8 ]TJ /N19 1 Tf [(ro)11.8 ]TJ /N19 1 Tf [(2d)]TJ

1.8801 -1.64999 TD

0 Tc

/N19 1 Tf (t)Tj

0.2796 -0.00549 TD

/N19 1 Tf (u)Tj

0.49879 0.00549 TD

/N19 1 Tf (r)Tj

0.3344 -0.00549 TD

/N19 1 Tf (b)Tj

0.49879 0.00549 TD

/N19 1 Tf (3)Tj

0.49879 -0.00549 TD

/N19 1 Tf (d)Tj

-0.0603 -1.6499 TD

/N19 1 Tf (a)Tj

0.444 -0.00549 TD

/N19 1 Tf (p)Tj

0.49879 0.00549 TD

/N19 1 Tf (p)Tj

0.49879 -0.00549 TD

/N19 1 Tf (l)Tj

0.2796 0.00549 TD

/N19 1 Tf (u)Tj

-0.1754 -1.6554 TD

/N19 1 Tf (f)Tj

0.3344 -0.00549 TD

/N19 1 Tf (p)Tj

0.49879 0.00549 TD

/N19 1 Tf (p)Tj

0.49879 -0.00549 TD

0.0043 Tc

/N19 1 Tf (pp)Tj

2.75169 -3.3 TD

0 Tc

/N19 1 Tf (F)Tj

0.5536 -0.00549 TD

/N19 1 Tf (I)Tj

0.3344 0.00549 TD

/N19 1 Tf (R)Tj

0.9976 -1.6555 TD

/N19 1 Tf (I)Tj

0.3344 -0.00549 TD

-0.0041 Tc

/N19 1 Tf (IR)Tj

0.14799 -1.64999 TD

0.00011 Tc

/N19 1 Tf (VMM)Tj

1.4855 -1.64999 TD

-0.00121 Tc

/N19 1 Tf (MM)Tj

1.78149 -0.00549 TD

0 Tc

/N19 1 Tf (M)Tj

0.3782 -1.64999 TD

0.0014 Tc

/N19 1 Tf (YU)Tj

1.4416 -0.00549 TD

0 Tc

/N19 1 Tf (V)Tj

/N21 1 Tf

18 0 0 18 172.32001 705.84 Tm

0.0005 Tc

0.00279 Tw

/N21 1 Tf (% of dynamic instructions eliminated)Tj

ET

1 1 1 rg

508.08 523.32001 24.96001 -333.60001 rf

508.08 189.72 25.08 333.72 re

S 

0.96001 w

514.32001 507.12 11.03999 11.03999 re

B* 

BT

/N19 1 Tf

0 -18 18 0 513.84 502.8 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (128 bits)Tj

ET

0.754 0.754 0.754 rg

514.32001 426.48 11.03999 11.03999 re

B* 

BT

0 -18 18 0 513.84 422.16 Tm

0 0 0 rg

/N19 1 Tf (256 bits)Tj

ET

0.5 0.5 0.5 rg

514.32001 345.84 11.03999 11.03999 re

B* 

BT

0 -18 18 0 513.84 341.52 Tm

0 0 0 rg

/N19 1 Tf (512 bits)Tj

ET

514.32001 265.2 11.03999 11.03999 re

B* 

BT

0 -18 18 0 513.84 260.8801 Tm

/N19 1 Tf (1024 bits)Tj

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font HGBNFM+TimesNewRomanPSMT

%%+ font HGBNKM+TimesNewRomanPS-BoldMT

%%EOF


%%EndDocument

 endTexFig
 -152 1320 a Ft(Figure)26 b(8:)34 b(P)n(ercen)n(tage)26
b(of)f(dynamic)f(instructions)h(eliminated)g(b)n(y)-152
1403 y(SLP)h(analysis)g(for)h(a)e(v)l(ariet)n(y)g(of)i(h)n(yp)r
(othetical)e(datapath)g(widths.)-152 1650 y(cations)30
b(exhibit)d(a)i(p)r(erformance)f(degradation)h(as)g(the)f(datapath)-152
1733 y(width)35 b(is)g(increased.)62 b(This)35 b(is)g(due)f(to)h(the)f
(large)i(unroll)f(factor)-152 1816 y(required)e(to)g(\014ll)g(a)h(wide)
f(datapath.)56 b(If)34 b(the)e(dynamic)g(iteration)-152
1899 y(coun)n(ts)22 b(for)h(these)f(lo)r(ops)h(are)f(smaller)h(than)e
(the)h(unroll)g(factor,)i(the)-152 1982 y(unrolled)j(lo)r(op)h(is)g
(nev)n(er)e(executed.)38 b(F)-6 b(or)27 b(turb3d)f(and)h(applu,)g(the)
-152 2065 y(optimal)21 b(unroll)f(factor)i(is)f(four.)33
b(A)20 b(256-bit)h(datapath)f(is)h(therefore)-152 2148
y(su\016cien)n(t)30 b(since)g(it)g(can)g(accommo)r(date)f(four)h
(64-bit)g(op)r(erations.)-152 2231 y(In)i(fpppp,)g(the)g(most)f
(time-in)n(tensiv)n(e)g(lo)r(op)i(is)f(already)h(unrolled)-152
2314 y(b)n(y)f(a)h(factor)h(of)f(three.)56 b(A)32 b(192-bit)h(datapath)
g(can)g(supp)r(ort)f(the)-152 2397 y(a)n(v)l(ailable)27
b(parallelism)g(in)f(this)f(situation.)-40 2480 y(In)18
b(Figure)g(9)g(and)g(T)-6 b(able)18 b(3)g(w)n(e)h(compare)e(the)h(SLP)f
(algorithm)i(to)-152 2563 y(the)28 b(v)n(ectorization)h(tec)n(hnique)d
(describ)r(ed)i(in)g(Section)g(4.)41 b(F)-6 b(or)28 b(the)-152
2646 y(m)n(ultimedia)d(b)r(enc)n(hmarks,)f(b)r(oth)i(metho)r(ds)f(p)r
(erform)g(iden)n(tically)-6 b(.)-152 2729 y(Ho)n(w)n(ev)n(er,)26
b(there)f(are)h(man)n(y)e(cases)i(in)g(the)f(scien)n(ti\014c)g
(applications)-152 2812 y(for)f(whic)n(h)g(the)f(SLP)g(algorithm)g(is)h
(able)g(to)f(\014nd)f(additional)j(pac)n(k-)-152 2895
y(ing)19 b(opp)r(ortunities.)33 b(In)18 b(Figure)i(10,)h(w)n(e)e(sho)n
(w)h(the)e(a)n(v)l(ailable)i(v)n(ector)-152 2978 y(parallelism)26
b(as)f(a)g(subset)g(of)g(the)g(a)n(v)l(ailable)g(sup)r(erw)n(ord)g(lev)
n(el)g(par-)-152 3061 y(allelism.)-152 3249 y Fu(5.3)83
b(SLP)26 b(P)n(erfo)n(rmance)-152 3380 y Ft(T)-6 b(o)27
b(test)g(the)f(p)r(erformance)h(of)g(our)g(SLP)f(algorithm)h(in)f(a)h
(real)g(en-)-152 3463 y(vironmen)n(t,)32 b(w)n(e)g(targeted)g(our)f
(compilation)h(system)f(to)g(the)g(Al-)-152 3546 y(tiV)-6
b(ec)23 b([19)q(])f(instruction)h(set.)34 b(Of)23 b(the)f(p)r(opular)h
(m)n(ultimedia)e(exten-)-128 3714 y
 15156103 10306148 5065195 3815342 48941629 33877606 startTexFig

 doclip
 -128 3714 a
%%BeginDocument: gr2.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000418223434)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 77 58 744 515

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



77 58 moveto

744 58 lineto

744 515 lineto

77 515 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font HOCCAL+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /HOCCAL+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/a 273 RD 

b8f8880df7a097159a7f9f85a58b08a18b9f909c96089d979b9c9ba3087e

960581808385828b08878b878c888e08878d898f8990088a928a978ba008

f745078bbc89ab869908849e7aa0729d08729e6994608b08668b69856a80

086980727b787608787482768b74088b78927e997f08987e9c85a08b089f

8b9a91979608979691998b9b088a9785997f9908829586938b92088c948f

9193910899949c90a08b08998b9688958408978491838f82088f838d758b

69085d07265c4a666d6f086d717c6b8b68088b7194769c7a089c79a183a5

8b08b78bbda4c3bc088e7294789a7f080937cb157d8b808f8394087f9787

988b9a08899c929d989d089ea5a8a4b2a2088dfb2c05747879827b8b088a

06090e ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/d 200 RD 

b2f8c00df77ff92b157607a18b9a89938608918792848f82088d838d778b

6808fb1f0778a0799a7a93087a94788f758b086a8b6b816e77086d78746d

7a64087b65825f8b5a088b4d9958a66108ac55b972c58b08a38b9f909d95

089c95a09ea2a7084307f755b0059c07798c7e8e84900883928692889608

8b9089a08bae08f8a207fb5f8c0509cdfcba15725e70756f8b087d8b818e

8491087c98809f83a70882a587b68bc4088bc18fb193a40891a5959d9795

089490948f978b08ae8ba874a35d08fb8407090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/f 182 RD 

abf7e10df7a1f82d15bb0747068ac505e1078b9b8e989193089293928f94

8b08958b90899086088f878d868b84088b888a858a860889808a868b8808

8b819081958208958299879c8b089d8b9c90979608979691988b9a088b9b

819d789a0878996d93638b08518b5c7b696c08696c7a648b5c0874076a07

4b065b07cb068cfbd1058b70897c8883088882858582870882877c88768b

088d7a05f79f068d9c056d8a79918197088492889f8baa088af7d105cf06

090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/l 70 RD 

a0f7aa0d8af92b157a07a18a9a8693820892818f778b6b08fc6d078b6888

7884830881817c84768a087a07f78d069c07758e7c8f8394088495879f8b

ac08f8cc07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/s 223 RD 

b3f8190df79df86915837f85848789088988858a858b08878b838e829008

75967392728b085d8b687d736f08736d7f6c8b68088b6b966da070089a7b

ab70bd6908ab72a17b958008967f8f7e8b7b088b7e867f81810882827e86

7b8b08748b739672a00872a077ab7cb6087a0693fb38059c06929c949396

8b088e8b9289958708ae7ea884a18b08a88ba492a29808a1979d9e98a308

98a491a38ba4088ba983a37ca2087da16ba75bab085dab6ea28198088294

89938b94088b96909694940894939690988b08a28b9f83a07a08a079a06c

9f5d089a0686f730057906090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/y 201 RD 

93f8880df7725215795a7c6c7e7d0882828386838b08868b878d888f0889

8d89948b97088ba2859b81960883947d917b8b08798b7d857f7f08817d84

7c8b78088c7693789c7b089b7ca183a68b08ad8ba799a1a6089c9ea3bfac

e008f715f7e705a3c59aad949508959697909a8d088a9c05fb2a06897a05

a18a988793840894848f818b7f088a77826878590855fb1f053df748057b

b383a28b98088a928f929291089090978f9b8c089c07fb87067a079a8498

84967f0894809c6ba15708f728fbe7057d6505090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HOCCAL+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 97 /a put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 121 /y put

pop

%%EndResource

[/N21/HOCCAL+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font HOCBMK+TimesNewRomanPSMT

11 dict begin

/FontName /HOCBMK+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/F 175 RD 

9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08

9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f

8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d

0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06

a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685

6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 

/I 108 RD 

a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8

41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b

87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b

7783708b0873067907f7b0069d077306090e ND 

/L 132 RD 

9ff8f70df88be8157a78787e76840878826688588b085c065f8b728d838e

08838e85908792088595899e8ba608f836078bb28ea49095089095959499

92089990a48fae8b089d07fbc0067907a406a48b9e84987d08938090728b

6208fc41078b6388748481087f7977826f8b0872067907f89506c4f74805

7b8e057a627a6d7a7808090e ND 

/M 168 RD 

9cfa0d0df82c16f793f8c205fc4f078b668773848108807977836e8b0873

067907f7b0069d077406708b78927f9908819487a58bb408f845078bb08f

a3929508979d9f93a88b08a2069d07fb5006fb81fc9a05fb83f89a05fb52

067907a68b9f8897850899849384908208907b8f778b6e08fc45078b6687

738481087f7977836f8b0873067907f77d069d077306718b77927f990883

9486a58bb408f84f07f794fcc2059b06090e ND 

/P 190 RD 

9cf8c00df78cf7c0159d899c8a9b8b08cd8bbd9cafad08aead9db78bc108

8bb27fae74a80873a86ea069970869975c91508b08fb87067907a406a48b

9e84987d08938090728b6108fc41078b6588738481087f7977826f8b0872

067907f7b0069d077206718b79927f9908819687a48bb508f75607a0869f

889e8808094ff7ce15a591a08e9c8b08a68ba485a07f08a07e9c79977208

967491708b6e088b617f6973710871716f7e698b08818b808c7e8d087d8c

7c8e7a8e08f7a707090e ND 

/R 220 RD 

9cf92f0df9279d15678f6e94759908739a71a86cb708fb1df75205c296b4

a1a6a908a6a998ae8bb4088bb27fac74a70874a46f9f6a95086896589045

8b08fb87068d7905a206a68b9d84987d08938090728b6108fc41078b6588

738481087f7977826f8b0872067907f7b0069d077106738b78927f990881

9687a48bb508f75507908b908b908b088f89908c8f8b08958b988b9b8c08

f776fbca05f745069d0709fc6af8eb15ab91a48e9e8b08b58bad7ea57108

a47198698b62088b617b686b70086c6f5b7e4d8b08888a878c878b08868b

868b858b08f7a807090e ND 

/S 263 RD 

caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308

639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975

9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b

8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3

087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893

8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f

b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77

a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08

a67ca1769a71089b719568915f089d06f779077906090e ND 

/U 194 RD 

90f9660df886f91915a48b9e84987d08938090728b6208fba0078b42855a

7e6e087f6d737369780869796481608b08698b6f9174970872977a9a7f9e

087e9e83a586ac0886ac89a98ba508f7b5078bae8fa4939708979d9e93a6

8b08a606899d05fbb006897905a606a28b9e85967e08977e90708b6208fb

97078b3d9054956e089c60a56ab07208b171c27fd38b08cc8bc098b2a508

b1a6a5aa98b00899af91bf8bcd08f7a1078bb08ea292950899a19f96a58b

08a4069d07fb7d067907a406090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/Y 188 RD 

94f9660df869f919159c8b9889948708948792869084088e828e848b8208

8c7b8175776c08fb16fb6005fb1ef76a0577a881a18b97088b9991969892

089993998e9a8b0899068c9d05fbaf067907978b9489928808a4809b8193

830891839b77a06b08f749fbac05fb2f078b6487748481087f7977836f8b

0873067907f7b0069d077506708b77927e9908839486a58bb408f73d07f7

33f78d059faa9ba2989908999a99959b93089d92968f938b089a06889d05

fb78068a7905090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/b 170 RD 

89f8880df730f94b157506fb1b54059279059890978e948b08938b918990

870892868e848d7f088e7e8c6c8b5808fc6207a77aa67ca68208a680a587

a58b08c48bbda0b8b508c0baa5cb8bda088bd27abf69b20869b3639e5d8b

08598b5c6d604e08f7d90709bdfbd1159c949c8f9c8b08ad8ba87ca56c08

a26c995f8b52088b4e7e5b716b08736a6f7b6d8b08788b798f7993087a94

79977a9b088df79f059d9e9d989892088b06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/d 205 RD 

acf8880df7ce7e15a206f719c205869d057c858088828b08828c858d8690

08868f879489970888948aac8bbf08f899077506fb1a54059179059a9096

8e948b08918b928990870892868e848d7f088e7f8c6c8b5808380771a56a

97648b084c8b5770635608625677508b4b088b4c9d56af6208b163b576bc

8b08a28ba290a09508a095a09ca1a2084a070935c115688b6b9c6eae086e

af7dbd8bcd088bcb9abda9ad08a1a4a598a88b08998b9b869b82089c8297

7d957908967990778d7508fb79076f6b6e7d6d8b088c06090e ND 

/e 146 RD 

b0f8500df80ef7ab158bc27bb76bac086aad629b598b08508b5a76646008

636078508b3f088b439e54b16108b261b976c18b08bb8bb59dacb008abaf

9fb492b8087c95057c64796f757b08767b71836e8b085f8b659e6ab1086b

af7bbf8bcd08f7c98c0509fba4f70815a1a0a395a68b089c8b9c869b8108

9c7f977d93790890808f768d6e08fb650691b296a7a0a108090e ND 

/f 179 RD 

b2f7e10df7aef83115ae07fb0706ab078bd18db6909c088f9a9398959308

9693978f9a8b08988b96889585089685967f977908967a967f9386089486

9388938b08938b958f93940894938f948b95088b9d829b789a086da16c96

698b08668b6a826d78086e7775737d6c087c6c84658b5f086e0734066807

e206fbbb078b6b89768780088780848280850880847f887e8b0877067907

f7a0069d076206778b7b927f9908819787a58bb408f7bb07f70706090e ND 

/g 385 RD 

a9f8880dc4ee15827b867e8b80088b808e82928308938396829c81086d6b

7a798988087976807a857f08888389838b83088b7a977aa37b08b76ebf7d

ca8b08de8bcda3bebb08acaa9dae8bb0088ba582a2799d08799e73966d8f

08768e608d488d08668d748c828c087d8d808f869008849189908b91088b

908e939094088f979595999708a384a188a18b08c18bb59aaba908aba79b

af8bb5088bb082a979a208c4069b8b928b8d8c088e8d8c8c8c8d088e8d8b

928b93088b928a90898e088a8e898c898c08898b838c7d8b082c066da066

95608b08578b617b6a6b08686c7b658b5f088b6c92719a73089975a077a6

7e086b6f7575827c0809f768f7c615a26e96638b57088b63836e7b79087b

787782728b08728b75967aa00875a780b38bbe088bb393a89b9e089c9f9f

94a38b08a48ba1809c76088a06099bfc3415bd8aac879c84089c8293808b

7a088b747d756f760870766081518b084c8b5d956b9f08779782988b9b08

8b978f98939908929b979a9a9c08b384c388d489088b06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/l 103 RD 

a9f7aa0df71af94b15fb1954059379059990958e938b08948b9189908708

8f868f848d80088e7e8c6d8b5908fc2b078b708978878108868286848487

0882857e8a768b087907f76f069d07748b7b8d8390088290859287940887

93899e8ba708f8e6077506090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/p 235 RD 

88f8880d93f818159790958d938b08948b938991870890878f858e83088e

848c788b6e08fc3d078b6d8976888308878286868587087f847b87798b08

7f067907f77f069d07728d7a8c829008829184918793088994889e8baa08

f71c079b7d9a819886089d85a087a38b08c28bb9a0b0b408b6bda2cb8bd8

088bd179c366b6086dad669d5e8b08708b7383747b08737c746f746408f3

077806fb1d5405917b0509f76482159b939a8f9b8b08a78ba47ea07208a9

669a568b46088b507e5b716a087672717e6a8b08708b74927999087b9a7f

9b869e08899789a28baf08f73b07a6ab9e9b9791088b06090e ND 

/r 168 RD 

91f7e10df71cf86115fb1b54059079059790968d958b08958c9188918608

91878f838d81088d838c6b8b5708fb41078b718a7b898508898185828386

087f837b88748b087907f779069d07778b7c8e8091088090849387940883

97899e8ba408f76a079baa9aa19a98089092928e918b08928b9585998008

9a809785968b08988b958f939408929490968b98088b9985987f96088095

7c91798b08658b6469664808f0077606090e ND 

/s 212 RD 

bcf8190df793f86115878388868889088888878a868b08858b808e7a9008

7392758f798b08648b6a7f72720871727f6c8b66088b6f92739a7808997a

aa75ba7408bb73aa789b7c089b7b93788b75088b79847b7d7e087c7d7985

758b086b8b6e9771a20872a279ae82b9087b06fb34079b068f919190938b

08918b9489968808ae82aa86a68b08b28bad97aaa408aaa59bab8bb40889

bf6bb649ab0844ae056b997799819808829a85998b9d088b9c9297999708

99979d91a28b08a98ba4829e7a089d7a9b6a975b089d0689f72c057c8c05

090e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/u 171 RD 

8cf8880df7a2f854157907a88a9e8694820896838f798b7108fb91077372

767b79820879817b877d8b08778b79927d98087c9784a78bb508f7c007fb

31067907a38b9b89948708948692859083088e838e7c8b7608fb5c078b62

8f6a927408927598789d7d089d7ca184a48b08a28ba0909f96089f96a8a5

b1b4088d2d059f06f71cc205829d0581857e88818b08848c858d86900884

8f889389960888978aaa8bbe08f7a407fb2d06090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

/y 212 RD 

91f8880d8af842159c8797869386088e889383938008967a937f908108f7

34fbe5056d3d057e6e80787f810880818086818b08898b828d7e90087892

7c8e808b087d8b7e87828308828287808b7d088a7e927e978008977f9b86

9e8b08a68ba696a8a108a7a2a2ac9db608f74af85405939d91998e900892

949393928f08908f958d978c089d07fb25068a79059a8d94899189089189

8f888e87088c898d868b85088a7e897e857e0828fb8c05fb02f77705819f

859e8b98088b948e939291089592958e9a8b0894068c9d05fb67068c7905

090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HOCBMK+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 70 /F put

dup 73 /I put

dup 76 /L put

dup 77 /M put

dup 80 /P put

dup 82 /R put

dup 83 /S put

dup 85 /U put

dup 86 /V put

dup 89 /Y put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N19/HOCBMK+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

77 58 667 457 re W n

[ 0 1 -1 0 802 -19 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

187.2 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

187.32001 637.44 m

187.32001 66.84 l

S 

0 0 0 RG

187.32001 637.44 m

187.32001 66.84 l

S 

Q

q

1 i

219.96001 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

220.08 637.44 m

220.08 66.84 l

S 

0 0 0 RG

220.08 637.44 m

220.08 66.84 l

S 

Q

q

1 i

252.84 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

252.96001 637.44 m

252.96001 66.84 l

S 

0 0 0 RG

252.96001 637.44 m

252.96001 66.84 l

S 

Q

q

1 i

285.72 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

285.84 637.44 m

285.84 66.84 l

S 

0 0 0 RG

285.84 637.44 m

285.84 66.84 l

S 

Q

q

1 i

318.48 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

318.60001 637.44 m

318.60001 66.84 l

S 

0 0 0 RG

318.60001 637.44 m

318.60001 66.84 l

S 

Q

q

1 i

351.36 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

351.48 637.44 m

351.48 66.84 l

S 

0 0 0 RG

351.48 637.44 m

351.48 66.84 l

S 

Q

q

1 i

384.24001 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

384.36 637.44 m

384.36 66.84 l

S 

0 0 0 RG

384.36 637.44 m

384.36 66.84 l

S 

Q

q

1 i

417.12 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

417.24001 637.44 m

417.24001 66.84 l

S 

0 0 0 RG

417.24001 637.44 m

417.24001 66.84 l

S 

Q

q

1 i

449.88 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

450 637.44 m

450 66.84 l

S 

0 0 0 RG

450 637.44 m

450 66.84 l

S 

Q

q

1 i

482.75999 66.84 0.12 570.60001 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

482.88 637.44 m

482.88 66.84 l

S 

0 0 0 RG

482.88 637.44 m

482.88 66.84 l

S 

Q

0 0 0 RG

1 J

1 j

0.12 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

154.44 66.84 328.44 570.60001 re

S 

1 1 1 rg

0 j

0.96001 w

154.44 619.8 204.60001 11.75999 re

B* 

154.44 584.16 186.84 11.75999 re

B* 

154.44 548.39999 112.67999 11.88 re

B* 

154.44 512.75999 145.2 11.75999 re

B* 

154.44 477.12 94.32001 11.75999 re

B* 

154.44 441.48 52.2 11.75999 re

B* 

154.44 405.84 75.24001 11.75999 re

B* 

154.44 370.08 66.84 11.88 re

B* 

154.44 334.44 48.24001 11.75999 re

B* 

154.44 227.52 149.03999 11.75999 re

B* 

154.44 191.88 198.96001 11.75999 re

B* 

154.44 156.12 142.44 11.88 re

B* 

q

154.44 114.36 247.8 23.88 re

W n 

154.44 120.48 241.8 11.75999 re

B* 

Q

q

154.44 78.72 313.44 23.88 re

W n 

154.44 84.84 307.44 11.75999 re

B* 

Q

0.19901 0.19901 0.19901 rg

154.44 607.92 211.67999 11.75999 re

B* 

154.44 572.28 201.24001 11.75999 re

B* 

154.44 536.52 181.08 11.75999 re

B* 

154.44 500.88 160.08 11.75999 re

B* 

154.44 465.24001 122.39999 11.75999 re

B* 

154.44 429.60001 98.28 11.75999 re

B* 

154.44 393.96001 85.92 11.75999 re

B* 

154.44 358.2 81.36 11.75999 re

B* 

154.44 322.56 74.03999 11.75999 re

B* 

154.44 286.92 26.75999 11.75999 re

B* 

154.44 215.64 149.03999 11.75999 re

B* 

154.44 180 198.96001 11.75999 re

B* 

154.44 144.24001 142.44 11.75999 re

B* 

q

154.44 102.48 247.8 23.88 re

W n 

154.44 108.60001 241.8 11.75999 re

B* 

Q

q

154.44 66.84 313.44 23.88 re

W n 

154.44 72.96001 307.44 11.75999 re

B* 

Q

0.12 w

482.88 637.44 m

154.44 637.44 l

154.44 642.84 m

154.44 637.44 l

187.32001 642.84 m

187.32001 637.44 l

220.08 642.84 m

220.08 637.44 l

252.96001 642.84 m

252.96001 637.44 l

285.84 642.84 m

285.84 637.44 l

318.60001 642.84 m

318.60001 637.44 l

351.48 642.84 m

351.48 637.44 l

384.36 642.84 m

384.36 637.44 l

417.24001 642.84 m

417.24001 637.44 l

450 642.84 m

450 637.44 l

482.88 642.84 m

482.88 637.44 l

154.44 637.44 m

154.44 66.84 l

149.03999 637.44 m

154.44 637.44 l

149.03999 601.8 m

154.44 601.8 l

149.03999 566.16 m

154.44 566.16 l

149.03999 530.39999 m

154.44 530.39999 l

149.03999 494.75999 m

154.44 494.75999 l

149.03999 459.12 m

154.44 459.12 l

149.03999 423.48 m

154.44 423.48 l

149.03999 387.84 m

154.44 387.84 l

149.03999 352.08 m

154.44 352.08 l

149.03999 316.44 m

154.44 316.44 l

149.03999 280.8 m

154.44 280.8 l

149.03999 245.16 m

154.44 245.16 l

149.03999 209.52 m

154.44 209.52 l

149.03999 173.88 m

154.44 173.88 l

149.03999 138.12 m

154.44 138.12 l

149.03999 102.48 m

154.44 102.48 l

149.03999 66.84 m

154.44 66.84 l

S 

BT

/N19 1 Tf

0 -17.28 17.28 0 148.92 673.44 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.5 1.9028 TD

/N19 1 Tf (10%)Tj

0 1.8958 TD

/N19 1 Tf (20%)Tj

0 1.9028 TD

/N19 1 Tf (30%)Tj

T*

/N19 1 Tf (40%)Tj

0 1.8958 TD

/N19 1 Tf (50%)Tj

0 1.9028 TD

/N19 1 Tf (60%)Tj

T*

/N19 1 Tf (70%)Tj

T*

/N19 1 Tf (80%)Tj

0 1.8958 TD

/N19 1 Tf (90%)Tj

-0.5 1.9028 TD

/N19 1 Tf (100%)Tj

12.2189 -12.2184 12.2184 12.2184 104.75999 650.52 Tm

/N19 1 Tf (s)Tj

0.38789 0.0049 TD

0.00459 Tc

/N19 1 Tf [(wi)7.39999 ]TJ /N19 1 Tf [(m)]TJ

0.0098 -1.46339 TD

0 Tc

/N19 1 Tf (t)Tj

0.27991 0.0049 TD

-0.0014 Tc

/N19 1 Tf (omcat)Tj

2.44051 -0.005 TD

0 Tc

/N19 1 Tf (v)Tj

-0.4272 -1.4585 TD

/N19 1 Tf (m)Tj

0.78081 0.0049 TD

/N19 1 Tf (g)Tj

0.496 -0.0049 TD

0.0009 Tc

/N19 1 Tf (ri)Tj

0.6138 0.0049 TD

0 Tc

/N19 1 Tf (d)Tj

-0.7169 -1.46339 TD

/N19 1 Tf (s)Tj

0.38789 0.0049 TD

0.00031 Tc

/N19 1 Tf (u2cor)Tj

1.1196 -1.46339 TD

0 Tc

/N19 1 Tf (w)Tj

0.7218 0.0049 TD

-0.00121 Tc

/N19 1 Tf (ave5)Tj

1.74319 -1.46831 TD

0 Tc

/N19 1 Tf (a)Tj

0.4469 0.0049 TD

/N19 1 Tf (p)Tj

0.496 -0.0049 TD

/N19 1 Tf (s)Tj

0.38789 0.0049 TD

/N19 1 Tf (i)Tj

-1.591 -1.4633 TD

0.0009 Tc

/N19 1 Tf (hy)Tj

0.9968 0.0049 TD

/N19 1 Tf (dro2d)Tj

1.1785 -1.46339 TD

0 Tc

/N19 1 Tf (t)Tj

0.27991 0.0049 TD

0.0009 Tc

/N19 1 Tf (ur)Tj

0.8299 -0.0049 TD

/N19 1 Tf (b3d)Tj

0.7415 -1.4585 TD

0 Tc

/N19 1 Tf (a)Tj

0.4469 0.0049 TD

/N19 1 Tf (p)Tj

0.496 -0.0049 TD

0.0009 Tc

/N19 1 Tf (pl)Tj

0.78081 0.0049 TD

0 Tc

/N19 1 Tf (u)Tj

-0.3732 -1.46339 TD

0.0009 Tc

/N19 1 Tf (fp)Tj

0.8299 0.0049 TD

/N19 1 Tf (ppp)Tj

2.86771 -2.9268 TD

0 Tc

/N19 1 Tf (F)Tj

0.5549 0.0049 TD

0.0009 Tc

/N19 1 Tf (IR)Tj

1.1196 -1.46339 TD

/N19 1 Tf (II)Tj

0.6629 0.0049 TD

0 Tc

/N19 1 Tf (R)Tj

-0.3634 -1.46339 TD

/N19 1 Tf (V)Tj

0.7218 0.0049 TD

/N19 1 Tf (M)Tj

0.88879 -0.0049 TD

/N19 1 Tf (M)Tj

-0.3192 -1.4584 TD

/N19 1 Tf (M)Tj

0.88879 0.0049 TD

/N19 1 Tf (M)Tj

0.88879 -0.0049 TD

/N19 1 Tf (M)Tj

0.1817 -1.4585 TD

/N19 1 Tf (Y)Tj

0.7218 0.0049 TD

/N19 1 Tf (U)Tj

0.7218 -0.0049 TD

/N19 1 Tf (V)Tj

/N21 1 Tf

20.03999 0 0 20.03999 157.8 703.44 Tm

0.00031 Tc

0.00121 Tw

/N21 1 Tf (% of dynamic instructions eliminated)Tj

ET

1 1 1 rg

505.92 570.36 27.12 -436.32001 rf

505.92 134.03999 27.24001 436.44 re

S 

0.96001 w

512.28 552.36 12.36 12.36 re

B* 

BT

/N19 1 Tf

0 -20.03999 20.03999 0 511.8 547.56 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (Vector Parallelism)Tj

ET

0.19901 0.19901 0.19901 rg

512.28 377.39999 12.36 12.36 re

B* 

BT

0 -20.03999 20.03999 0 511.8 372.60001 Tm

0 0 0 rg

/N19 1 Tf (Superword Level Parallelism)Tj

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font HOCCAL+TimesNewRomanPS-BoldMT

%%+ font HOCBMK+TimesNewRomanPSMT

%%EOF


%%EndDocument

 endTexFig
 -152 5186 a Ft(Figure)41 b(9:)64 b(P)n(ercen)n(tage)41
b(of)g(dynamic)d(instructions)j(eliminated)-152 5269
y(with)28 b(SLP)g(parallelization)i(and)e(with)g(v)n(ector)f
(parallelization)k(on)-152 5352 y(a)26 b(256-bit)h(datapath.)2064
-152 y
 15156103 10609270 5065195 4341596 48415375 34864332 startTexFig

 doclip
 2064 -152 a
%%BeginDocument: gr3.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000418223541)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 77 66 736 530

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



77 66 moveto

736 66 lineto

736 530 lineto

77 530 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font HPCHOG+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /HPCHOG+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/a 273 RD 

b8f8880df7a097159a7f9f85a58b08a18b9f909c96089d979b9c9ba3087e

960581808385828b08878b878c888e08878d898f8990088a928a978ba008

f745078bbc89ab869908849e7aa0729d08729e6994608b08668b69856a80

086980727b787608787482768b74088b78927e997f08987e9c85a08b089f

8b9a91979608979691998b9b088a9785997f9908829586938b92088c948f

9193910899949c90a08b08998b9688958408978491838f82088f838d758b

69085d07265c4a666d6f086d717c6b8b68088b7194769c7a089c79a183a5

8b08b78bbda4c3bc088e7294789a7f080937cb157d8b808f8394087f9787

988b9a08899c929d989d089ea5a8a4b2a2088dfb2c05747879827b8b088a

06090e ND 

/b 184 RD 

a0f8c00df92b047a079c8a9788928708918791848e82088c848d7b8b7008

fcd9079c06d6bc059e7a9e7f9e83089e82a188a48b08b58bb196aca008ad

a0a5aa9fb4089fb395b88bbd088bb883b27bad087cab75a66f9d08709e6d

946c8b085e8b617765630889f79105fb500609f7a1fb8d15a18b9c829878

089c71945b8b45088b428759836f08836f81787f820880827c867a8b0879

8b7b917f97087d96849b889e0889978aa58bb408f75f07a5aaa69ba78b08

8a06090e ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/d 200 RD 

b2f8c00df77ff92b157607a18b9a89938608918792848f82088d838d778b

6808fb1f0778a0799a7a93087a94788f758b086a8b6b816e77086d78746d

7a64087b65825f8b5a088b4d9958a66108ac55b972c58b08a38b9f909d95

089c95a09ea2a7084307f755b0059c07798c7e8e84900883928692889608

8b9089a08bae08f8a207fb5f8c0509cdfcba15725e70756f8b087d8b818e

8491087c98809f83a70882a587b68bc4088bc18fb193a40891a5959d9795

089490948f978b08ae8ba874a35d08fb8407090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/l 70 RD 

a0f7aa0d8af92b157a07a18a9a8693820892818f778b6b08fc6d078b6888

7884830881817c84768a087a07f78d069c07758e7c8f8394088495879f8b

ac08f8cc07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/s 223 RD 

b3f8190df79df86915837f85848789088988858a858b08878b838e829008

75967392728b085d8b687d736f08736d7f6c8b68088b6b966da070089a7b

ab70bd6908ab72a17b958008967f8f7e8b7b088b7e867f81810882827e86

7b8b08748b739672a00872a077ab7cb6087a0693fb38059c06929c949396

8b088e8b9289958708ae7ea884a18b08a88ba492a29808a1979d9e98a308

98a491a38ba4088ba983a37ca2087da16ba75bab085dab6ea28198088294

89938b94088b96909694940894939690988b08a28b9f83a07a08a079a06c

9f5d089a0686f730057906090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/y 201 RD 

93f8880df7725215795a7c6c7e7d0882828386838b08868b878d888f0889

8d89948b97088ba2859b81960883947d917b8b08798b7d857f7f08817d84

7c8b78088c7693789c7b089b7ca183a68b08ad8ba799a1a6089c9ea3bfac

e008f715f7e705a3c59aad949508959697909a8d088a9c05fb2a06897a05

a18a988793840894848f818b7f088a77826878590855fb1f053df748057b

b383a28b98088a928f929291089090978f9b8c089c07fb87067a079a8498

84967f0894809c6ba15708f728fbe7057d6505090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HPCHOG+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 121 /y put

pop

%%EndResource

[/N21/HPCHOG+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font HPCHIG+TimesNewRomanPSMT

11 dict begin

/FontName /HPCHIG+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/hyphen 19 RD 

b4f7e10df75004f79106d507fb91064107090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/C 170 RD 

aff92f0df8b8f93a15877b857f83820884858388828b08878b808f7d9208

5ea25b975b8b084f8b527c576d08586b62616d54086e537c4f8b49088b37

a144b84e08c83ce061f7018b08c78bc099b7a608b7a6b2b6acc6087c9505

635467676a79086c786482608b085b8b5f9765a20863a36fad78b70877b6

82c08bc7088bd295c89fbc08a0bda6aeaea108b0a2b296b78b08be8bb87c

b06d08b26ea75a9f48089a067cf775057906090e ND 

/N 146 RD 

7ef9660df919049e8b998a948808a084998595840894839a7d9e75088cfc

61058a6488748481087e7977836e8b0875068a7905f77e068a9d05740670

8b78927e9908849486a58bb4088af82c05f849fcaa059c068cf8c3058ab0

8fa3929508979d9f93a78b08a4068a9d05fb7c068a7905a306a58b9f8497

7d08938290718b62088cfc1305fc2cf88605fb44068a7905090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/b 170 RD 

89f8880df730f94b157506fb1b54059279059890978e948b08938b918990

870892868e848d7f088e7e8c6c8b5808fc6207a77aa67ca68208a680a587

a58b08c48bbda0b8b508c0baa5cb8bda088bd27abf69b20869b3639e5d8b

08598b5c6d604e08f7d90709bdfbd1159c949c8f9c8b08ad8ba87ca56c08

a26c995f8b52088b4e7e5b716b08736a6f7b6d8b08788b798f7993087a94

79977a9b088df79f059d9e9d989892088b06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/d 205 RD 

acf8880df7ce7e15a206f719c205869d057c858088828b08828c858d8690

08868f879489970888948aac8bbf08f899077506fb1a54059179059a9096

8e948b08918b928990870892868e848d7f088e7f8c6c8b5808380771a56a

97648b084c8b5770635608625677508b4b088b4c9d56af6208b163b576bc

8b08a28ba290a09508a095a09ca1a2084a070935c115688b6b9c6eae086e

af7dbd8bcd088bcb9abda9ad08a1a4a598a88b08998b9b869b82089c8297

7d957908967990778d7508fb79076f6b6e7d6d8b088c06090e ND 

/e 146 RD 

b0f8500df80ef7ab158bc27bb76bac086aad629b598b08508b5a76646008

636078508b3f088b439e54b16108b261b976c18b08bb8bb59dacb008abaf

9fb492b8087c95057c64796f757b08767b71836e8b085f8b659e6ab1086b

af7bbf8bcd08f7c98c0509fba4f70815a1a0a395a68b089c8b9c869b8108

9c7f977d93790890808f768d6e08fb650691b296a7a0a108090e ND 

/f 179 RD 

b2f7e10df7aef83115ae07fb0706ab078bd18db6909c088f9a9398959308

9693978f9a8b08988b96889585089685967f977908967a967f9386089486

9388938b08938b958f93940894938f948b95088b9d829b789a086da16c96

698b08668b6a826d78086e7775737d6c087c6c84658b5f086e0734066807

e206fbbb078b6b89768780088780848280850880847f887e8b0877067907

f7a0069d076206778b7b927f9908819787a58bb408f7bb07f70706090e ND 

/g 385 RD 

a9f8880dc4ee15827b867e8b80088b808e82928308938396829c81086d6b

7a798988087976807a857f08888389838b83088b7a977aa37b08b76ebf7d

ca8b08de8bcda3bebb08acaa9dae8bb0088ba582a2799d08799e73966d8f

08768e608d488d08668d748c828c087d8d808f869008849189908b91088b

908e939094088f979595999708a384a188a18b08c18bb59aaba908aba79b

af8bb5088bb082a979a208c4069b8b928b8d8c088e8d8c8c8c8d088e8d8b

928b93088b928a90898e088a8e898c898c08898b838c7d8b082c066da066

95608b08578b617b6a6b08686c7b658b5f088b6c92719a73089975a077a6

7e086b6f7575827c0809f768f7c615a26e96638b57088b63836e7b79087b

787782728b08728b75967aa00875a780b38bbe088bb393a89b9e089c9f9f

94a38b08a48ba1809c76088a06099bfc3415bd8aac879c84089c8293808b

7a088b747d756f760870766081518b084c8b5d956b9f08779782988b9b08

8b978f98939908929b979a9a9c08b384c388d489088b06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/l 103 RD 

a9f7aa0df71af94b15fb1954059379059990958e938b08948b9189908708

8f868f848d80088e7e8c6d8b5908fc2b078b708978878108868286848487

0882857e8a768b087907f76f069d07748b7b8d8390088290859287940887

93899e8ba708f8e6077506090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/n 207 RD 

91f8880df730f861157606fb1b54059279059890968d948b08938c928990

870890858f848d7f088e7f8c6a8b5508fb3a078b6d8774838008837e7c86

748b0881067907f772069d07738b7b8d838f08829085918694088894899c

8ba908f78107b1b8b19fb28b08a48b9d829679089477916e8b6208fb4c07

8b718a7c8a8608887f858183850882867d87768b0882067907f771069d07

768b7c8d839008838f85928793088894889e8ba708f753078bb687a8849f

0881a67da07997087a977691738b085b8b5a6c574c088ae905090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/p 235 RD 

88f8880d93f818159790958d938b08948b938991870890878f858e83088e

848c788b6e08fc3d078b6d8976888308878286868587087f847b87798b08

7f067907f77f069d07728d7a8c829008829184918793088994889e8baa08

f71c079b7d9a819886089d85a087a38b08c28bb9a0b0b408b6bda2cb8bd8

088bd179c366b6086dad669d5e8b08708b7383747b08737c746f746408f3

077806fb1d5405917b0509f76482159b939a8f9b8b08a78ba47ea07208a9

669a568b46088b507e5b716a087672717e6a8b08708b74927999087b9a7f

9b869e08899789a28baf08f73b07a6ab9e9b9791088b06090e ND 

/r 168 RD 

91f7e10df71cf86115fb1b54059079059790968d958b08958c9188918608

91878f838d81088d838c6b8b5708fb41078b718a7b898508898185828386

087f837b88748b087907f779069d07778b7c8e8091088090849387940883

97899e8ba408f76a079baa9aa19a98089092928e918b08928b9585998008

9a809785968b08988b958f939408929490968b98088b9985987f96088095

7c91798b08658b6469664808f0077606090e ND 

/s 212 RD 

bcf8190df793f86115878388868889088888878a868b08858b808e7a9008

7392758f798b08648b6a7f72720871727f6c8b66088b6f92739a7808997a

aa75ba7408bb73aa789b7c089b7b93788b75088b79847b7d7e087c7d7985

758b086b8b6e9771a20872a279ae82b9087b06fb34079b068f919190938b

08918b9489968808ae82aa86a68b08b28bad97aaa408aaa59bab8bb40889

bf6bb649ab0844ae056b997799819808829a85998b9d088b9c9297999708

99979d91a28b08a98ba4829e7a089d7a9b6a975b089d0689f72c057c8c05

090e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/u 171 RD 

8cf8880df7a2f854157907a88a9e8694820896838f798b7108fb91077372

767b79820879817b877d8b08778b79927d98087c9784a78bb508f7c007fb

31067907a38b9b89948708948692859083088e838e7c8b7608fb5c078b62

8f6a927408927598789d7d089d7ca184a48b08a28ba0909f96089f96a8a5

b1b4088d2d059f06f71cc205829d0581857e88818b08848c858d86900884

8f889389960888978aaa8bbe08f7a407fb2d06090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

/y 212 RD 

91f8880d8af842159c8797869386088e889383938008967a937f908108f7

34fbe5056d3d057e6e80787f810880818086818b08898b828d7e90087892

7c8e808b087d8b7e87828308828287808b7d088a7e927e978008977f9b86

9e8b08a68ba696a8a108a7a2a2ac9db608f74af85405939d91998e900892

949393928f08908f958d978c089d07fb25068a79059a8d94899189089189

8f888e87088c898d868b85088a7e897e857e0828fb8c05fb02f77705819f

859e8b98088b948e939291089592958e9a8b0894068c9d05fb67068c7905

090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/HPCHIG+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 45 /hyphen put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 67 /C put

dup 78 /N put

dup 86 /V put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 102 /f put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N19/HPCHIG+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

77 66 659 464 re W n

[ 0 1 -1 0 802 -11 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

190.92 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

191.03999 643.2 m

191.03999 66.84 l

S 

0 0 0 RG

191.03999 643.2 m

191.03999 66.84 l

S 

Q

q

1 i

223.44 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

223.56 643.2 m

223.56 66.84 l

S 

0 0 0 RG

223.56 643.2 m

223.56 66.84 l

S 

Q

q

1 i

255.96001 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

256.08 643.2 m

256.08 66.84 l

S 

0 0 0 RG

256.08 643.2 m

256.08 66.84 l

S 

Q

q

1 i

288.48 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

288.60001 643.2 m

288.60001 66.84 l

S 

0 0 0 RG

288.60001 643.2 m

288.60001 66.84 l

S 

Q

q

1 i

321 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

321.12 643.2 m

321.12 66.84 l

S 

0 0 0 RG

321.12 643.2 m

321.12 66.84 l

S 

Q

q

1 i

353.39999 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

353.52 643.2 m

353.52 66.84 l

S 

0 0 0 RG

353.52 643.2 m

353.52 66.84 l

S 

Q

q

1 i

385.92 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

386.03999 643.2 m

386.03999 66.84 l

S 

0 0 0 RG

386.03999 643.2 m

386.03999 66.84 l

S 

Q

q

1 i

418.44 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

418.56 643.2 m

418.56 66.84 l

S 

0 0 0 RG

418.56 643.2 m

418.56 66.84 l

S 

Q

q

1 i

450.96001 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

451.08 643.2 m

451.08 66.84 l

S 

0 0 0 RG

451.08 643.2 m

451.08 66.84 l

S 

Q

q

1 i

483.48 66.84 0.12 576.36 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

483.60001 643.2 m

483.60001 66.84 l

S 

0 0 0 RG

483.60001 643.2 m

483.60001 66.84 l

S 

Q

0 0 0 RG

1 J

1 j

0.12 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

158.52 66.84 325.08 576.36 re

S 

q

158.52 596.88 320.16 35.03999 re

W n 

1 1 1 rg

0 j

0.96001 w

158.52 603 314.16 22.92 re

B* 

Q

q

158.52 539.16 307.67999 35.16 re

W n 

1 1 1 rg

0 j

0.96001 w

158.52 545.28 301.67999 23.03999 re

B* 

Q

1 1 1 rg

0 j

0.96001 w

158.52 487.67999 202.2 22.92 re

B* 

q

158.52 423.96001 300.84 35.03999 re

W n 

158.52 430.08 294.84 22.92 re

B* 

Q

q

158.52 366.24001 256.67999 35.16 re

W n 

158.52 372.36 250.67999 23.03999 re

B* 

Q

158.52 314.75999 172.56 22.92 re

B* 

q

158.52 251.03999 290.64 35.03999 re

W n 

158.52 257.16 284.64 22.92 re

B* 

Q

q

158.52 193.44 273.24001 35.03999 re

W n 

158.52 199.56 267.24001 22.92 re

B* 

Q

158.52 141.84 211.44 23.03999 re

B* 

0.19901 0.19901 0.19901 rg

472.8 603 10.8 22.92 re

B* 

460.32001 545.28 23.28 23.03999 re

B* 

360.84 487.67999 122.75999 22.92 re

B* 

453.48 430.08 30.12 22.92 re

B* 

409.32001 372.36 74.28 23.03999 re

B* 

331.2 314.75999 152.39999 22.92 re

B* 

443.28 257.16 40.32001 22.92 re

B* 

425.88 199.56 57.72 22.92 re

B* 

370.08 141.84 113.52 23.03999 re

B* 

158.64 84.24001 324.96001 22.92 re

B* 

0.12 w

483.60001 643.2 m

158.52 643.2 l

158.52 648.48 m

158.52 643.2 l

191.03999 648.48 m

191.03999 643.2 l

223.56 648.48 m

223.56 643.2 l

256.08 648.48 m

256.08 643.2 l

288.60001 648.48 m

288.60001 643.2 l

321.12 648.48 m

321.12 643.2 l

353.52 648.48 m

353.52 643.2 l

386.03999 648.48 m

386.03999 643.2 l

418.56 648.48 m

418.56 643.2 l

451.08 648.48 m

451.08 643.2 l

483.60001 648.48 m

483.60001 643.2 l

158.52 643.2 m

158.52 66.84 l

153.24001 643.2 m

158.52 643.2 l

153.24001 585.60001 m

158.52 585.60001 l

153.24001 527.88 m

158.52 527.88 l

153.24001 470.28 m

158.52 470.28 l

153.24001 412.67999 m

158.52 412.67999 l

153.24001 354.96001 m

158.52 354.96001 l

153.24001 297.36 m

158.52 297.36 l

153.24001 239.75999 m

158.52 239.75999 l

153.24001 182.16 m

158.52 182.16 l

153.24001 124.44 m

158.52 124.44 l

153.24001 66.84 m

158.52 66.84 l

S 

BT

/N19 1 Tf

0 -17.03999 17.03999 0 153.12 678.60001 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.5 1.90849 TD

/N19 1 Tf (10%)Tj

T*

/N19 1 Tf (20%)Tj

T*

/N19 1 Tf (30%)Tj

T*

/N19 1 Tf (40%)Tj

T*

/N19 1 Tf (50%)Tj

0 1.9014 TD

/N19 1 Tf (60%)Tj

0 1.9084 TD

/N19 1 Tf (70%)Tj

T*

/N19 1 Tf (80%)Tj

T*

/N19 1 Tf (90%)Tj

-0.5 1.90849 TD

/N19 1 Tf (100%)Tj

12.04919 -12.04871 12.04871 12.04871 104.28 645 Tm

-0.0007 Tc

/N19 1 Tf (sw)Tj

1.1105 -0.005 TD

0.00101 Tc

/N19 1 Tf (im)Tj

0.23399 -2.3853 TD

-0.00079 Tc

/N19 1 Tf (tomc)Tj

1.9969 -0.005 TD

0.0027 Tc

/N19 1 Tf (atv)Tj

1.22501 -2.3903 TD

-0.00101 Tc

/N19 1 Tf (mg)Tj

1.2798 -0.005 TD

-0.0043 Tc

/N19 1 Tf [(ri)-5.3 ]TJ /N19 1 Tf [(d)]TJ

0.8316 -2.3853 TD

-0.0007 Tc

/N19 1 Tf (su)Tj

0.8914 -0.005 TD

-0.002 Tc

/N19 1 Tf (2c)Tj

0.94119 0.005 TD

0 Tc

/N19 1 Tf (o)Tj

0.5029 -0.005 TD

/N19 1 Tf (r)Tj

0.1046 -2.3853 TD

/N19 1 Tf (w)Tj

0.72211 -0.005 TD

/N19 1 Tf (a)Tj

0.44321 0.005 TD

/N19 1 Tf (v)Tj

0.5029 -0.005 TD

/N19 1 Tf (e)Tj

0.44321 0.005 TD

/N19 1 Tf (5)Tj

1.2897 -2.39529 TD

/N19 1 Tf (a)Tj

0.44321 -0.005 TD

-0.002 Tc

/N19 1 Tf (ps)Tj

0.8914 0.005 TD

0 Tc

/N19 1 Tf (i)Tj

-0.6772 -2.3903 TD

-0.002 Tc

/N19 1 Tf (hy)Tj

1.0009 -0.005 TD

/N19 1 Tf (dr)Tj

0.8316 0.005 TD

0 Tc

/N19 1 Tf (o)Tj

0.5029 -0.005 TD

-0.002 Tc

/N19 1 Tf (2d)Tj

0.7818 -2.3853 TD

-0.0005 Tc

/N19 1 Tf (tur)Tj

1.1105 -0.005 TD

-0.002 Tc

/N19 1 Tf (b3)Tj

1.0009 0.005 TD

0 Tc

/N19 1 Tf (d)Tj

0.6723 -2.39529 TD

/N19 1 Tf (a)Tj

0.44321 -0.005 TD

-0.002 Tc

/N19 1 Tf (pp)Tj

1.0009 0.005 TD

0.00101 Tc

/N19 1 Tf (lu)Tj

0.83659 -2.3903 TD

0 Tc

/N19 1 Tf (f)Tj

0.3336 -0.005 TD

-0.002 Tc

/N19 1 Tf (pp)Tj

1.0009 0.005 TD

/N19 1 Tf (pp)Tj

/N21 1 Tf

17.03999 0 0 17.03999 136.92 706.92 Tm

-0.00079 Tc

0.0043 Tw

/N21 1 Tf (% contribution to dynamic instructions eliminated)Tj

ET

1 1 1 rg

506.28 550.67999 26.75999 -391.32001 rf

506.28 159.36 26.88 391.44 re

S 

0.96001 w

512.64 533.03999 12.12 12.12 re

B* 

BT

/N19 1 Tf

0 -19.8 19.8 0 512.16 528.2401 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (Vector Component)Tj

ET

0.19901 0.19901 0.19901 rg

512.64 356.64 12.12 12.12 re

B* 

BT

0 -19.8 19.8 0 512.16 351.84 Tm

0 0 0 rg

/N19 1 Tf (Non-vector Component)Tj

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font HPCHIG+TimesNewRomanPSMT

%%+ font HPCHOG+TimesNewRomanPS-BoldMT

%%EOF


%%EndDocument

 endTexFig
 2040 1358 a Ft(Figure)18 b(10:)31 b(Con)n(tribution)17
b(of)h(v)n(ectorizable)g(and)f(non-v)n(ectorizable)2040
1441 y(co)r(de)47 b(sequences)f(in)g(total)h(SLP)f(sa)n(vings)h(for)g
(the)f(SPEC95fp)2040 1524 y(b)r(enc)n(hmark)24 b(suite.)2040
1757 y(sions)39 b(a)n(v)l(ailable)g(in)f(commercial)f(micropro)r
(cessors,)43 b(w)n(e)38 b(b)r(eliev)n(e)2040 1840 y(AltiV)-6
b(ec)33 b(b)r(est)g(matc)n(hes)g(the)g(compilation)g(tec)n(hnique)f
(describ)r(ed)2040 1923 y(in)26 b(this)g(pap)r(er.)35
b(AltiV)-6 b(ec)26 b(de\014nes)f(128-bit)i(\015oating)g(p)r(oin)n(t)e
(and)h(in-)2040 2006 y(teger)c(SIMD)f(op)r(erations)h(and)f(pro)n
(vides)g(a)h(complemen)n(tary)d(set)j(of)2040 2089 y(32)30
b(general)g(purp)r(ose)e(registers.)46 b(It)28 b(also)i(de\014nes)f
(load)g(and)g(store)2040 2172 y(instructions)d(capable)h(of)f(mo)n
(ving)f(a)h(full)g(128)h(bits)f(of)g(data.)2152 2255
y(Our)33 b(compiler)f(automatically)i(generates)g(C)f(co)r(de)h(with)f
(Al-)2040 2338 y(tiV)-6 b(ec)19 b(macros)h(inserted)f(where)h
(parallelization)i(is)e(successful.)34 b(W)-6 b(e)2040
2421 y(then)18 b(use)g(an)g(extended)f(gcc)i(compiler)f(to)g(generate)h
(mac)n(hine)f(co)r(de.)2040 2504 y(This)31 b(compiler)f(w)n(as)g(pro)n
(vided)g(b)n(y)e(Motorola)33 b(and)c(supp)r(orts)h(the)2040
2587 y(AltiV)-6 b(ec)28 b(ABI)g(\(application)h(binary)f(in)n
(terface\).)43 b(Due)27 b(to)i(the)e(ex-)2040 2670 y(p)r(erimen)n(tal)
21 b(nature)h(of)g(the)f(AltiV)-6 b(ec)21 b(compiler)h(extensions,)h
(it)f(w)n(as)2040 2753 y(necessary)29 b(to)f(compile)h(all)g(b)r(enc)n
(hmarks)e(without)h(optimization.)2040 2836 y(Base)35
b(measuremen)n(ts)e(w)n(ere)i(made)e(b)n(y)g(compiling)h(the)g
(unparal-)2040 2919 y(lelized)i(v)n(ersion)f(for)h(execution)f(on)g
(the)f(MPC7400)k(sup)r(erscalar)2040 3002 y(unit.)33
b(In)22 b(b)r(oth)g(cases,)j(the)d(same)g(set)h(of)g(SUIF)f
(optimizations)h(and)2040 3085 y(the)34 b(same)g(gcc)h(bac)n(k)n(end)f
(w)n(ere)h(used.)60 b(Since)35 b(AltiV)-6 b(ec)34 b(do)r(es)h(not)2040
3168 y(supp)r(ort)h(unaligned)g(memory)e(accesses,)41
b(all)c(b)r(enc)n(hmarks)e(w)n(ere)2040 3251 y(compiled)25
b(with)h(alignmen)n(t)g(constrain)n(ts)g(in)g(place)g([13)q(].)2152
3334 y(T)-6 b(able)45 b(4)g(and)f(Figure)h(11)g(presen)n(t)f(p)r
(erformance)g(compar-)2040 3417 y(isons)c(on)e(a)h(450MHz)h(G4)f(P)n(o)
n(w)n(erMac)h(w)n(orkstation.)74 b(Most)40 b(of)2040
3500 y(the)c(SPEC95fp)h(b)r(enc)n(hmarks)e(require)h(double)g
(precision)h(\015oat-)2040 3583 y(ing)h(p)r(oin)n(t)f(supp)r(ort)g(to)h
(op)r(erate)g(correctly)-6 b(.)71 b(Since)37 b(this)h(is)g(not)p
2526 3827 1021 4 v 2524 3893 4 67 v 2571 3874 a Fr(Benc)n(hmark)p
2939 3893 V 2954 3893 V 186 w(SLP)p 3250 3893 V 107 w(V)-5
b(ector)p 3545 3893 V 2526 3897 1021 4 v 2526 3912 V
2524 3978 4 67 v 2571 3958 a(swim)p 2939 3978 V 2954
3978 V 283 w(64.45\045)p 3250 3978 V 89 w(62.29\045)p
3545 3978 V 2526 3981 1021 4 v 2524 4048 4 67 v 2571
4028 a(tomcatv)p 2939 4048 V 2954 4048 V 192 w(61.28\045)p
3250 4048 V 89 w(56.87\045)p 3545 4048 V 2526 4051 1021
4 v 2524 4118 4 67 v 2571 4098 a(mgrid)p 2939 4118 V
2954 4118 V 260 w(55.13\045)p 3250 4118 V 89 w(34.29\045)p
3545 4118 V 2526 4121 1021 4 v 2524 4187 4 67 v 2571
4167 a(su2cor)p 2939 4187 V 2954 4187 V 245 w(48.73\045)p
3250 4187 V 89 w(44.20\045)p 3545 4187 V 2526 4191 1021
4 v 2524 4257 4 67 v 2571 4237 a(w)n(a)n(v)n(e5)p 2939
4257 V 2954 4257 V 258 w(37.25\045)p 3250 4257 V 89 w(28.73\045)p
3545 4257 V 2526 4260 1021 4 v 2524 4327 4 67 v 2571
4307 a(apsi)p 2939 4327 V 2954 4327 V 315 w(29.93\045)p
3250 4327 V 89 w(15.89\045)p 3545 4327 V 2526 4330 1021
4 v 2524 4397 4 67 v 2571 4377 a(h)n(ydro2d)p 2939 4397
V 2954 4397 V 194 w(26.17\045)p 3250 4397 V 89 w(22.91\045)p
3545 4397 V 2526 4400 1021 4 v 2524 4466 4 67 v 2571
4446 a(turb3d)p 2939 4466 V 2954 4466 V 234 w(24.76\045)p
3250 4466 V 89 w(20.35\045)p 3545 4466 V 2526 4470 1021
4 v 2524 4536 4 67 v 2571 4516 a(applu)p 2939 4536 V
2954 4536 V 267 w(22.56\045)p 3250 4536 V 89 w(14.67\045)p
3545 4536 V 2526 4539 1021 4 v 2524 4606 4 67 v 2571
4586 a(fpppp)p 2939 4606 V 2954 4606 V 294 w(8.14\045)p
3250 4606 V 122 w(0.00\045)p 3545 4606 V 2526 4609 1021
4 v 2526 4624 V 2524 4690 4 67 v 2571 4671 a(FIR)p 2939
4690 V 2954 4690 V 315 w(45.37\045)p 3250 4690 V 89 w(73.63\045)p
3545 4690 V 2526 4694 1021 4 v 2524 4760 4 67 v 2571
4740 a(I)r(IR)p 2939 4760 V 2954 4760 V 332 w(60.59\045)p
3250 4760 V 89 w(43.63\045)p 3545 4760 V 2526 4764 1021
4 v 2524 4830 4 67 v 2571 4810 a(VMM)p 2939 4830 V 2954
4830 V 261 w(43.37\045)p 3250 4830 V 89 w(60.59\045)p
3545 4830 V 2526 4833 1021 4 v 2524 4900 4 67 v 2571
4880 a(MMM)p 2939 4900 V 2954 4900 V 250 w(73.63\045)p
3250 4900 V 89 w(45.37\045)p 3545 4900 V 2526 4903 1021
4 v 2524 4969 4 67 v 2571 4949 a(YUV)p 2939 4969 V 2954
4969 V 283 w(93.59\045)p 3250 4969 V 89 w(93.59\045)p
3545 4969 V 2526 4973 1021 4 v 2040 5116 a Ft(T)f(able)20
b(3:)31 b(P)n(ercen)n(tage)20 b(of)g(dynamic)e(instructions)h
(eliminated)g(with)2040 5199 y(SLP)h(parallelization)k(and)c(with)h(v)n
(ector)f(parallelization)j(on)e(a)g(256-)2040 5282 y(bit)26
b(datapath.)p eop
%%Page: 10 10
10 9 bop 470 -72 749 4 v 468 -6 4 67 v 515 -25 a Fr(Benc)n(hmark)p
884 -6 V 88 w(Sp)r(eedup)p 1217 -6 V 470 -2 749 4 v 470
13 V 468 79 4 67 v 515 59 a(swim)p 884 79 V 268 w(1.24)p
1217 79 V 470 82 749 4 v 468 149 4 67 v 515 129 a(tomcatv)p
884 149 V 177 w(1.57)p 1217 149 V 470 152 749 4 v 468
219 4 67 v 515 199 a(FIR)p 884 219 V 300 w(1.26)p 1217
219 V 470 222 749 4 v 468 288 4 67 v 515 268 a(I)r(IR)p
884 288 V 317 w(1.41)p 1217 288 V 470 292 749 4 v 468
358 4 67 v 515 338 a(VMM)p 884 358 V 246 w(1.70)p 1217
358 V 470 361 749 4 v 468 428 4 67 v 515 408 a(MMM)p
884 428 V 235 w(1.79)p 1217 428 V 470 431 749 4 v 468
498 4 67 v 515 478 a(YUV)p 884 498 V 268 w(6.70)p 1217
498 V 470 501 749 4 v -152 644 a Ft(T)-6 b(able)19 b(4:)32
b(Sp)r(eedup)17 b(on)i(an)f(MPC7400)j(pro)r(cessor)f(using)f(SLP)g
(com-)-152 727 y(pilation.)-152 1046 y(supp)r(orted)k(b)n(y)e(AltiV)-6
b(ec,)24 b(w)n(e)f(w)n(ere)g(unable)g(to)g(compile)g(v)n(ectorized)-152
1129 y(v)n(ersions)f(for)f(all)h(but)e(t)n(w)n(o)h(of)g(the)f(b)r(enc)n
(hmarks.)32 b Fa(swim)21 b Ft(utilizes)h(sin-)-152 1212
y(gle)34 b(precision)g(\015oating)f(p)r(oin)n(t)g(op)r(erations,)j(and)
d(the)f(SPEC92fp)-152 1295 y(v)n(ersion)k(of)g Fa(tomcatv)h
Ft(pro)n(vides)e(a)h(result)g(similar)g(to)g(the)f(64-bit)-152
1378 y(v)n(ersion.)-40 1461 y(Our)d(compiler)h(curren)n(tly)e(assumes)i
(that)f(all)i(pac)n(k)n(ed)d(op)r(era-)-152 1544 y(tions)37
b(are)f(executed)g(on)f(the)h(AltiV)-6 b(ec)36 b(unit)f(and)h(all)h
(sequen)n(tial)-152 1627 y(op)r(erations)d(are)f(p)r(erformed)f(on)g
(the)g(sup)r(erscalar)h(unit.)54 b(Op)r(era-)-152 1710
y(tions)28 b(to)g(pac)n(k)g(and)f(unpac)n(k)f(data)i(are)g(therefore)h
(required)e(to)h(go)-152 1793 y(through)k(memory)e(since)j(AltiV)-6
b(ec)31 b(pro)n(vides)h(no)g(instructions)h(to)-152 1876
y(mo)n(v)n(e)22 b(data)h(b)r(et)n(w)n(een)g(register)h(\014les.)34
b(Despite)23 b(this)g(high)f(cost,)j(our)-152 1959 y(compiler)30
b(is)h(still)g(able)f(to)g(exploit)g(sup)r(erw)n(ord)g(lev)n(el)h
(parallelism)-152 2042 y(and)26 b(pro)n(vide)f(sp)r(eedups.)-152
2237 y Fu(6)83 b(Architectural)26 b(Supp)r(o)n(rt)h(fo)n(r)g(SLP)-152
2394 y Ft(The)e(compiler)g(algorithm)h(presen)n(ted)e(in)h(Section)g(3)
g(w)n(as)h(inspired)-152 2477 y(b)n(y)j(the)h(m)n(ultimedia)f
(extensions)h(in)g(mo)r(dern)f(pro)r(cessors.)50 b(Ho)n(w-)-152
2560 y(ev)n(er,)26 b(sev)n(eral)g(limitations)g(mak)n(e)f(it)g
(di\016cult)h(to)f(fully)h(realize)h(the)-152 2643 y(p)r(oten)n(tial)k
(pro)n(vided)e(b)n(y)g(SLP)h(analysis.)48 b(W)-6 b(e)30
b(list)g(some)g(of)h(these)-152 2726 y(limitations)c(b)r(elo)n(w:)-41
2880 y Fn(\017)38 b Ft(Man)n(y)27 b(m)n(ultimedia)f(instructions)i(are)
g(designed)f(for)h(a)g(sp)r(e-)35 2963 y(ci\014c)i(high-lev)n(el)f(op)r
(eration.)48 b(F)-6 b(or)29 b(example,)h(HP's)g(MAX-2)35
3046 y(extensions)21 b(o\013er)h(matrix)e(transform)h(instructions)h
([16)q(])f(and)35 3129 y(SUN's)h(VIS)g(extensions)i(include)e
(instructions)i(to)f(compute)35 3212 y(pixel)g(distances)h([18)q(].)34
b(The)23 b(complex)g(CISC-lik)n(e)g(seman)n(tics)35 3295
y(of)29 b(these)e(instructions)h(mak)n(e)f(automatic)h(co)r(de)g
(generation)35 3378 y(di\016cult.)-41 3519 y Fn(\017)38
b Ft(SLP)25 b(hardw)n(are)h(is)f(t)n(ypically)g(view)n(ed)h(as)f(a)h(m)
n(ultimedia)d(en-)35 3602 y(gine)42 b(alone)g(and)e(is)i(not)f
(designed)g(for)h(general)g(purp)r(ose)35 3685 y(computation.)33
b(Floating)23 b(p)r(oin)n(t)f(capabilities,)j(for)d(example,)35
3768 y(ha)n(v)n(e)29 b(only)g(recen)n(tly)g(b)r(een)g(added)f(to)i
(some)f(arc)n(hitectures.)35 3851 y(F)-6 b(urthermore,)26
b(ev)n(en)g(the)g(most)g(adv)l(anced)g(m)n(ultimedia)f(ex-)35
3934 y(tensions)33 b(lac)n(k)f(certain)g(fundamen)n(tal)f(op)r
(erations)i(suc)n(h)e(as)35 4017 y(32-bit)26 b(in)n(teger)g(m)n
(ultiplication)g(and)f(division)h([19)q(].)-41 4158 y
Fn(\017)38 b Ft(In)i(curren)n(t)g(arc)n(hitectures,)46
b(data)41 b(sets)g(are)g(usually)g(con-)35 4241 y(sidered)31
b(to)h(b)r(elong)f(exclusiv)n(ely)g(to)h(either)f(m)n(ultimedia)e(or)35
4324 y(sup)r(erscalar)i(hardw)n(are.)46 b(This)30 b(design)g(philosoph)
n(y)f(is)h(p)r(or-)35 4407 y(tra)n(y)n(ed)22 b(in)h(the)g(lac)n(k)g(of)
h(in)n(ter)f(register)h(\014le)f(mo)n(v)n(e)f(op)r(erations)35
4490 y(in)c(the)f(AltiV)-6 b(ec)18 b(instruction)g(set.)32
b(If)18 b(SLP)f(compilation)i(tec)n(h-)35 4573 y(niques)26
b(can)g(sho)n(w)h(a)g(need)f(for)h(a)g(b)r(etter)f(coupling)h(b)r(et)n
(w)n(een)35 4656 y(these)i(t)n(w)n(o)f(units,)i(future)e(arc)n
(hitectures)h(ma)n(y)e(pro)n(vide)h(the)35 4739 y(necessary)e(supp)r
(ort.)-41 4879 y Fn(\017)38 b Ft(Most)25 b(curren)n(t)d(m)n(ultimedia)h
(instruction)g(sets)h(are)h(designed)35 4962 y(with)36
b(the)g(assumption)f(that)h(data)g(are)h(alw)n(a)n(ys)g(stored)f(in)35
5045 y(the)i(prop)r(er)g(pac)n(k)n(ed)g(con\014guration.)73
b(As)38 b(a)g(result,)43 b(data)35 5129 y(pac)n(king)30
b(and)f(unpac)n(king)f(instructions)i(are)g(generally)h(not)35
5212 y(w)n(ell)d(supp)r(orted.)38 b(This)28 b(imp)r(ortan)n(t)e(op)r
(eration)i(is)f(useful)h(to)35 5295 y(our)34 b(system.)59
b(With)34 b(b)r(etter)g(supp)r(ort,)i(SLP)e(p)r(erformance)35
5378 y(can)26 b(b)r(e)f(further)h(increased.)2040 -75
y
 14208860 8809492 6249267 2368143 52099153 31246336 startTexFig
 2040 -75 a
%%BeginDocument: gr4.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (slp.xls)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.0.1)

%%CreationDate: (D:20000420005528)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 95 36 792 475

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ font: (atend)

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



95 36 moveto

792 36 lineto

792 475 lineto

95 475 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 150 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 1

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 1

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/sfc {

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load 5 dict begin settransfer end

0 i

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} bd

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} bd

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} bd

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} bd

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} bind def

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor

_op? setoverprint

}

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor _OP? setoverprint} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/OP here { /_OP? xdd } if

/op here

{ /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 1

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

currentpoint iTm moveto

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font CFHFNJ+TimesNewRomanPS-BoldMT

11 dict begin

/FontName /CFHFNJ+TimesNewRomanPS-BoldMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/space 5 RD 

8bf78e0d0e ND 

/percent 330 RD 

d0fa7c0df90df93815fc6afd5405cd06f869f954054a0609fcde59156c6a

7b608b55088b569a61aa6b08aa6db27aba8b08b98bb39babac08abad9bb6

8bc0088bbe7bb66bac086caa649c5d8b085b8b657a6b6a0809f71a9e1594

83917f8f7a088e728f648b54088b5e8868857208897e857f838408868785

89848b08858b858d868f088493859588990884a589ae8bb9088bc48db18f

9d088f9f91979392089191908c928b08938b90898f87088c0709f822fc03

156c6a7c608b57088b589b60ab6a08aa69b27bb88b08b98bb29cabac08ab

ab9bb68bc0088bc17bb56bab086caa639c5c8b085d8b647b6c6a0809f71a

9e159384917f8f7a0891748d668b58088b5a8867857308887c847e838408

8886858a858b08858b858d878f0882928597879c0887a288b18bc0088bbf

8dac8f9d08909c91989392088f8f918d928b08918b91898f87088c07090e

 ND 

/c 160 RD 

b1f8500df7d1d7157d847c877b8b08718b7692799908759e77a87db2087e

b384b48bb6088bbd93b29ca408979c98939b8b08948b9487938308928290

7d8d77088e6a9375987e08967e9c859e8b089d8b9a919696089795909a8b

9e088ba87da66fa30870a265975c8b08448b546f635208695b7b558b4d08

8b4b9d54b05d08af5dbc74c88b08af8bad95ab9f08ac9ea5aaa1b3087c97

0577757a7d7d8408090e ND 

/e 147 RD 

b2f8500df7dbf8311569b1639e5d8b08538b5b75625e08615d774f8b3f08

8b4d9957a76108ae57be71cf8b08b28bae95a9a008a9a1a6aea4bd087a96

057a6f79777b80087b817985778b086d8b6f9975a6086dad7bbb88c808f7

8f0688d579c369b10809fb5afb1c159c078bbe95b39ea808959a99949c8b

08978b94889285089781947c91770890798e668b5708fb1906090e ND 

/f 182 RD 

abf7e10df7a1f82d15bb0747068ac505e1078b9b8e989193089293928f94

8b08958b90899086088f878d868b84088b888a858a860889808a868b8808

8b819081958208958299879c8b089d8b9c90979608979691988b9a088b9b

819d789a0878996d93638b08518b5c7b696c08696c7a648b5c0874076a07

4b065b07cb068cfbd1058b70897c8883088882858582870882877c88768b

088d7a05f79f068d9c056d8a79918197088492889f8baa088af7d105cf06

090e ND 

/h 186 RD 

adf8c00d8cf92b157a079f88988591820892858e748b6808fc65078b6888

7686840882807e857889087a07f77b069c07788e7e92859608879288a08b

ac08f7890799a0989b9794089995978f988b08938b938892860892869084

8e81088d808d748b6508fb5f078b6a8876858308847f7f857b8908897a05

f77d06899c05798d7d90859408849588a08bae08f746078bbf88b084a108

84a17e9e779b08769c73936e8b08758b7586768008777f7479727108f79d

07fb4e06090e ND 

/i 131 RD 

a0f7aa0dd0f924157c7c84798b76088b7792799a7c089a7c9d84a08b089e

8b9e929a9a08999a939d8ba0088b9e849e7c9a087c997993768b08778b79

847c7c080944fb5b157a07a18a9a8693820892818f778b6a08fb9f078b6a

887784830881817c84768a087a07f78d069c07758e7c8f8394088495879f

8bac08f7fe07fb5506090e ND 

/m 296 RD 

b0f9d50df85d047a079f88988591820892858e748b6808fb97078b688876

86840882807e857889087a07f77f069c07778d7e91859508849688a08bab

08f78a079ca39b9d9a95089791968f988b08948b9388938508928691838e

81088f7e8d728b620889fb59058d70897a89830887838784848508838681

877e8a088d7a05f77e068d9c05748e7e91849708849389a08bac08f78a07

9a9f9a9b99950898959a91998b0895899389928608918690838e8008907e

8c728b6208fb59078b6d8876858208837f7d837889087a07f780069c0777

907e90859308849388a18bae08f74f078bbc87ae84a10884a37e9c789a08

789a72926b8b08728b7284737e08727f7375716e087fa77da07799087698

73926e8b08718b7486768008757f7478727008c807fb4e06090e ND 

/n 176 RD 

adf8c00d8cf85d157a079f88988591820892858e748b6808fb97078b6888

7686840882807e857889087a07f77b069c077a8d7f91859408849488a18b

ad08f78a07a3b2a59fa78b08938b9388928608928690838e81088d828d73

8b6608fb5f078b698878868308847e7e847a89087a07f77b069c07778d7e

90859408849488a18bae08f746078bc088af869e0885a17ea0789b08769e

73926d8b08738b7385768008767f7479747208c607fb4e06090e ND 

/o 164 RD 

aff8880dc5f82115655b78528b4a088b4a9e54b05b08af5bc073d08b08d0

8bc2a5b3c008abb69cc18bcc088bb882b479b1087ab171a8699f0869a066

95638b084a8b5773655a0809f753a8159781947c91760891788e648b5408

8b2d884d856c088576837c7e800883837e877c8b087d8b7d917f97088197

839d87a20886a989ac8bae088bcb8dbf8fb0088eb093a497980897969992

9c8b08988b97889384088b06090e ND 

/p 202 RD 

9ef8c00df7878f15a180a285a48b08ae8baa95a79f08a89fa0a89ab10899

b293b58bb9088bb584b37db0087cb277a770a0086da16e956a8b086e8b72

84737c087a807b7a7b7408c707fb55067a07a18a9a8693820892818f778b

6a08fc77078b6b887784830881837c84768a087a07f79a069c07748b7c8d

838f08838f85918794088993899b8ba30889f73f059f779b7c9b83088b06

0958f7e315a0baa6a3ac8b08a08b9b81977808a06f93558b3d088b3d8358

7a70087f787d82798b086b8b6d9f6fb308f78607090e ND 

/r 171 RD 

b0f8500d8af85d157a079b899688918708918790848e82088e838c7a8b71

08fb91078b63877284820885827d857789087a07f78c069c07798e7e8d83

8f08838e85928794088a9089978b9e08a607f4078ab291ad95ab08929f95

9b9896089493948e948b088f8b8f8a8e89088e8a9285988008967f9a869c

8b089c8b97919697089497919c8ba1088b9f869b8096087f977d90798b08

768b7583747c08757b706c6d5c08f307fb4f06090e ND 

/t 108 RD 

9ef7e10df748f90515756372676e6b086e6c686c626e087a07c706fb8b07

8b5a8d6d8e8008907898799f7b089f79a384a88b08c88bb5aaa5c9087c96

05796b777b768b08858b868d8590088490879189930888928a9c8ba508f7

ae07f70006bb07fb0006f73c077b8c05090e ND 

/u 152 RD 

aaf8c00df796f85d157a079f88988591820892858e748b6808fb88077970

7b7a7e8308828580887f8b08838b838d8490088591869288940887948aa0

8bac08f7cc07fb4e067a079f88988591820892858e748b6808fb49078b56

8e66927608927698789f7b08a07da182a58b08a78ba391a19708a096a19e

a1a5084e07f74e069c07778d7e90859408849588a08bae08f7fa07fb4e06

090e ND 

/v 117 RD 

94f8880df7937e15f72bf7fa059eb798a594940895939691998d088c9c05

fb2a068c7a059d8a988792850893858e828b81088c7a826c7a60084efb28

0541f73f057baf85a08b97088a978f939392089190958e9a8b088c9c05fb

87067a079a88968593820894819a6f9e6008f72efbf605a206090e ND 

/x 230 RD 

a2f8880df7ddf7f515a0ad9ea29c97089e969d929f8c088a9c05fb36067a

079a87958991860891878e858b84088a7c7e727167087a700566ce05849a

86948a8d0889928a8f8b90088c918c8f8e8d08af94058d8c05899c05fb8e

06897a059d88988698800897809f6ea55b08d8fb26056754056655716c79

7f08787e7785758b087a07f747069c077d8b818c868d08848f888e889008

87908a918b93088b908c918e91088c8f94999aa208aebc05b1410597758f

7d8b82088c86888586870887897f87788908897a05f79406889c057f8e7d

8e8293087c9875ad70c00839f72b05bed305090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/CFHFNJ+TimesNewRomanPS-BoldMT findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 37 /percent put

dup 99 /c put

dup 101 /e put

dup 102 /f put

dup 104 /h put

dup 105 /i put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 114 /r put

dup 116 /t put

dup 117 /u put

dup 118 /v put

dup 120 /x put

pop

%%EndResource

[/N21/CFHFNJ+TimesNewRomanPS-BoldMT 1 TZ

%%BeginResource: font CFHFJJ+TimesNewRomanPSMT

11 dict begin

/FontName /CFHFJJ+TimesNewRomanPSMT def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/percent 315 RD 

aef9d50df8eef93a15fc77fd5505b606f878f955055f0609fca57615747d

79767e6e087f6d846c8b69088b68916c986f0898709c75a07d08a27da284

a58b08b08bac9aa6aa08a8ab98b68bc4088bba7fb573af0872b0699d5f8b

08748b7384757d0809f66b159b7293608b4d088b5083617b72087f7b7e82

7b8b08838b828e8491087e948399869d0883a388ad8bb8088bcb91b3989f

08989e99959c8b089b8b9883957a088b0609f80bfbd115757d79767e6f08

7f6e846c8b69088b68916c987008986f9c76a17c08a37ea183a38b08b18b

ac9aa7a908a6ab99b68bc5088bac85aa7ea7087fa779a0749a08749a7492

748b08748b7584747d0809f7016d159a7393608b4e088b5183627b730880

7b7d817c8b087c8b7d93809c087da283b48bc5088bca92b69aa208969c99

949b8b089a8b9983967a088b06090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/F 175 RD 

9bf8c00df7e3f90715ad8ba4889b84089d859880967c08977d9474936c08

9e0682f72605fc7e06897905a506988b9c87998308948692848e8308917f

8c768b6a08fc41078b6187738381087f7b7783708b0873067907f7b0069d

0773067c8b7c8f7d93088090859288930885978aa08bad08f76507f70c06

a18b9c8896850897859382917f08937e8d788b71089f0689f775057b0685

6883727e7f087e7f76856f8b08fb0a0689f79805f72706090e ND 

/I 108 RD 

a4f7e10df7989d157c8b7c8f7d930880908492889308879789a08bad08f8

41078bb38fa4939508989b9e93a68b08a3069d07fbb0067907a3069a8b9b

87998308948692848e8308917f8c768b6a08fc41078b6187738381087f7b

7783708b0873067907f7b0069d077306090e ND 

/M 168 RD 

9cfa0d0df82c16f793f8c205fc4f078b668773848108807977836e8b0873

067907f7b0069d077406708b78927f9908819487a58bb408f845078bb08f

a3929508979d9f93a88b08a2069d07fb5006fb81fc9a05fb83f89a05fb52

067907a68b9f8897850899849384908208907b8f778b6e08fc45078b6687

738481087f7977836f8b0873067907f77d069d077306718b77927f990883

9486a58bb408f84f07f794fcc2059b06090e ND 

/R 220 RD 

9cf92f0df9279d15678f6e94759908739a71a86cb708fb1df75205c296b4

a1a6a908a6a998ae8bb4088bb27fac74a70874a46f9f6a95086896589045

8b08fb87068d7905a206a68b9d84987d08938090728b6108fc41078b6588

738481087f7977826f8b0872067907f7b0069d077106738b78927f990881

9687a48bb508f75507908b908b908b088f89908c8f8b08958b988b9b8c08

f776fbca05f745069d0709fc6af8eb15ab91a48e9e8b08b58bad7ea57108

a47198698b62088b617b686b70086c6f5b7e4d8b08888a878c878b08868b

868b858b08f7a807090e ND 

/S 263 RD 

caf8c00df80ef93a15887c878186860884858589838b08828b7f8f799308

639d6693688b08518b5d7a666908686878638b5b088b6f91729774089975

9d76a37808a278b472c46b08c36cae769881089e7d997c947a089379907b

8b7b088b6d7f7273750874766a80628b086a8b6a936e9b086b9a769f7da3

087da17faf83bb087906fb77079d068d9a8f959090088f91928d938b0893

8b9f86ab8108ab80a0869589089c879d8a9e8b08c98bbd9db2af08b1b09f

b68bbd088ba685a47fa3087ea37aa0749d08759c60a54dac0840b45aab77

a3087d9e849c8b9f088ba696a2a1a008a2a0a795ad8b08a88ba983a77c08

a67ca1769a71089b719568915f089d06f779077906090e ND 

/T 117 RD 

a9f8f70d92f92b1584fb30059e068ca993a3979d08979c99979c91089990

a08daa8b08db06fc8e078b6687738481087f7977836f8b0873067907f7ae

069d077406728b78927f9908819487a58bb408f88e07e806a78ba1879c82

089b81997e957808917f90788f70089c0686f73005fcb38a05090e ND 

/U 194 RD 

90f9660df886f91915a48b9e84987d08938090728b6208fba0078b42855a

7e6e087f6d737369780869796481608b08698b6f9174970872977a9a7f9e

087e9e83a586ac0886ac89a98ba508f7b5078bae8fa4939708979d9e93a6

8b08a606899d05fbb006897905a606a28b9e85967e08977e90708b6208fb

97078b3d9054956e089c60a56ab07208b171c27fd38b08cc8bc098b2a508

b1a6a5aa98b00899af91bf8bcd08f7a1078bb08ea292950899a19f96a58b

08a4069d07fb7d067907a406090e ND 

/V 132 RD 

94f9660df885f92b1579078f8a8e8b8d8b08a0869c8594820895858f818b

82088c7b83727c6508fb31fc1305fb3cf818057bac84a58b9b088b988f94

94930896919e91aa8e088a9d05fba20679079f899b879785089787958293

810890859479986e08f78cfccf059d06f77af8c80598a99aa59c9b089997

9c92a28f089d07fb5f06090e ND 

/Y 188 RD 

94f9660df869f919159c8b9889948708948792869084088e828e848b8208

8c7b8175776c08fb16fb6005fb1ef76a0577a881a18b97088b9991969892

089993998e9a8b0899068c9d05fbaf067907978b9489928808a4809b8193

830891839b77a06b08f749fbac05fb2f078b6487748481087f7977836f8b

0873067907f7b0069d077506708b77927e9908839486a58bb408f73d07f7

33f78d059faa9ba2989908999a99959b93089d92968f938b089a06889d05

fb78068a7905090e ND 

/a 268 RD 

aff8500df79b9415948098859b8b08ac8baea4b0bc08a60777787e7f8487

088888868a868b08858b878d878e08888e88928995088a938aa68bb608f7

2c078bb488a985990882a07d9b78950871986b92638b08578b637f6e7408

6e737d718b6f088b7d8f7f93830892829587978b08988b958f9393089294

8f968b9a088aa7058b9a919797960898979b909f8b08a68b9f83997a089b

7b916c8b5f0879073e6f54736a77086a7974767e7508817986798b75088b

69956f9f76089f75a481aa8b08a08b9d8f9d93089691a89fb9af088b7190

7895800809fb05b215788b7b937d9a087d9b849e8ba2088b9e919c969b08

969a9e9aa599089894ac98bc9f08fb3e07626a6a7b728b088c06090e ND 

/c 154 RD 

adf8500df800f745157a637a70797c0871766f806b8b085e8b689f71b408

6fb57fba8bc1088bbe98b6a5ab08a0a3a597ac8b089d8b9c869681089781

917c8d78088d788f7e918408947e9a859e8b08998b978f93930891929096

8b97088ba37da46fa2086ea267975f8b08518b5975615f08615f76528b45

088b429e52b16008b060b876be8b08b58bb29baeab08afa9a2b997c6087d

9205090e ND 

/i 163 RD 

a8f7aa0ddcf93d158281867f8b7d088b7f907f95810894819787998b0898

899791959508949490978b99088b98869781950883947f907d8b087d8b7f

8681820809c2fb7015fb1b54059279059890968d948b08938c9289908708

90858f858d81088d7c8d6c8b5b08fb41078b708978878108868286848487

0881857e8a758b087907f76d069d07768b7c8d839008838f859287940887

95899d8ba708f7fc077606090e ND 

/m 352 RD 

93f99e0df731f861157606fb1b54059279059890968d948b08938c928990

870890858f848d80088d7f8d6a8b5a08fb3f078b70897887810886828584

83870883867d89768b087907f771069d07738b7b8d838f08839085918794

088794899e8ba808f784079a9da09ba699089b969d8f9d8b08a38ba08099

7608967c90708b6708fb55078b708a7b898608897f848282850881877b87

738b08897905f77706899d05768b7a8e829008828f84928892088893899e

8ba908f76a0789a0058c9005a4a2a09b9c94089d949c8f9c8b08a88b9f81

987608937b90728b6708fb55078b718a7b8a8608888086838486087e827d

88788b0882067907f76f069d07788b7d8e829008828f8592889208879589

9e8ba708f755078bb387a9849e0881a67c9f79970877997690738b08758b

7285747f08737e6f7269640885a97da3779b08779c73936f8b087b8b7a88

7a84087b847b827c7f08868478796b6a088aeb05090e ND 

/o 151 RD 

adf8880df704f844156a78706d776208766381628b62088b529c58ad5e08

b156c170ce8b08b78baf95ada008aca0a6aa9eb4089fb494b48bb3088bc3

7abe68b70861be55a5478b08678b67816a780809f7475915ad5e9c4d8b3c

088b4a815f7771087571727e6b8b08618b69a371ba0871b97ec38bcc088b

b590ab96a50896a4999d9c95089d979c8f9c8b08b08ba87ba26c088b0609

0e ND 

/t 122 RD 

95f7aa0df71df8e7157e6a8174837f087b747b77787a087879797f798408

7b07d206fbc2078b6d8e72927b08927c957f9983089b8299879a8b08a18b

a093a09b08a19c9ba396ab087806857e838181840882858088808b087f89

80918395088295879e8ba808f7b607f38c058cac0521068df727057b8c05

090e ND 

/v 134 RD 

93f8880d8cf842159b889688918808958794849283088f84937e927908f7

34fc0d059f06f732f8130594a3969b9695089190978f9c8c088a9d05fb24

068a79059d8b968a9189088f8a90878f86088d898d878b86088a82887d84

790821fb940524f78b05839988998b96088b978e939291089291958e988b

0897068d9d05fb68068c7905090e ND 

/w 177 RD 

91f9660df842049f8799859483089481947c947308f726fc0c059a06f71a

f7b305f702fbb305a006f728f816059aac9f9ea78f088c9d05fb22068c79

059d8c988791860892878e858b85088b81887d8479082dfb8a0525f79405

899089928b91088c988e9391900895939b8fa28c088a9d05fb6606897905

a18a97889286089885957d937708a44a052afb66052bf79505859988978b

95088c968d91909008928f968e9c8c088a9d05fb4e068a7a05090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/CFHFJJ+TimesNewRomanPSMT findfont /Encoding get

dup 0 /.notdef put

dup 37 /percent put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 53 /five put

dup 55 /seven put

dup 70 /F put

dup 73 /I put

dup 77 /M put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 85 /U put

dup 86 /V put

dup 89 /Y put

dup 97 /a put

dup 99 /c put

dup 105 /i put

dup 109 /m put

dup 111 /o put

dup 116 /t put

dup 118 /v put

dup 119 /w put

pop

%%EndResource

[/N19/CFHFJJ+TimesNewRomanPSMT 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

95 36 697 439 re W n

[ 0 1 -1 0 828 -58.968 ] concat

/N25 currentfile /ASCII85Decode filter /LZWDecode filter 512 string

%%BeginData: 807 ASCII Bytes

{readstring pop} bind exec

J04gt"9J]-JO#lY80efV#(o48!/O#e'FKO\Tn(3p1)pdZ6_XSeKL-psM+"(h8>K-7
(5kVV!Jn['1`D?CUOgMIE]bD(8#-1m"G0#cO[u:"8L0Hm-Bh#t!f9=><%=/*V1Qg"
Z<T#K9;VdtKYh7TR7sK18YjdN2OdF=",XtUF?5sfVh<+PnpEWn:T+C'"Tj?DThq\@
8gP+/7\`h["H#VlPY.cMWJ&E*17V+;;lU!.KgMS5WDomO8u5Fe<i]6$"cC9.Zs'S4
X+e^XEkG_^=0)T6"bO[%Yun)^9-obFB!YXB#)bpEe7uBpXbP#1ZJ9?,>HS2=Ku2nk
\Ql:m9;U)'G.V%`#E-R\oQn2WYD:<_o)*rDQf\9u?l0(RJmarm&;4I/7MpkgQt@Is
@MjhJMIMsM0T9KY`]/ugR-$YqA/PSBP%9t-:m>N/7TbsfR:]ioAf6>:RV%tbE1CPY
`d"(fRHB$mBGq)2U1fuBOJHS/7[U&eRV&4kC)Vi*WbS!"YcMUY`ji0eRc_DiC`<T"
Z>?!Wd'RX/7bG.dRqCTgDB">o\o+"7n@WZY`q[8dS*'deE#])g_Jl"m&B&Q.7i96c
S7`tcEZBi_b&X#M0[+SXa#M@cSEE/aF<(TWdWD$-:t0V.7p+>bSS)?_Frc?Og30$b
E85XXa*?HbS`bO]GTI*Gicq%BOQ:[.8!rFaSnF_[H6.j?l?]&"Yj?]Xa11PaT'*oY
HliU7npI&Wd.D`.8(dN`T4d*WINO@/qL5'7nGIbXa8#X`TBHO~>

%%EndData

15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 16 mul -3 bitshift /byte-offset exch def

0 0 1 1 {byte-offset add Sample exch get exch 8 bitshift or} for

]} def

/rnd {65536 mul 0.5 add floor 65536 div} def

f0 aload pop

dup 65535 ge {pop 1}

{dup 0 le {pop -1}

{2 65535 div mul 1 sub 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N24 (\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !"#$%&'\(\)*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\200\201\202\203\204\205\206\207\210\211\
\212\213\214\215\216\217\220\221\222\223\224\225\226\227\230\231\232\233\234\235\236\237\240\241\242\243\244\245\246\247\250\251\252\253\254\255\256\257\260\261\262\263\264\265\266\267\270\271\272\273\274\275\276\277\300\301\302\303\304\305\306\307\310\311\
\312\313\314\315\316\317\320\321\322\323\324\325\326\327\330\331\332\333\334\335\336\337\340\341\342\343\344\345\346\347\350\351\352\353\354\355\356\357\360\361\362\363\364\365\366\367\370\371\372\373\374\375\376\377)15 dict begin

/Sample exch def

currentdict end

[exch {begin

/_x0 exch def

/_tmp0 _x0

dup 1 ge {pop 255}

{dup 0 le {pop 0}

{255 mul 

} ifelse

} ifelse

def

/min0 _tmp0 cvi def

/max0 _tmp0 ceiling cvi def

/f0

min0 max0 eq

{{min0 f1}}

{{

[min0 f1 max0 f1

0 1 0 {dup 3 index exch get exch 2 index exch get

_tmp0 min0 max0 5 3 roll int

3 1 roll} for pop pop]

}} ifelse

def

/f1

{/prm0 exch def [

 0 255 prm0 limit 8 mul -3 bitshift Sample exch get ]} def

/rnd {256 mul 0.5 add floor 256 div} def

f0 aload pop

dup 255 ge {pop 1}

{dup 0 le {pop 0}

{255 div 

} ifelse

} ifelse

rnd

end

} bind aload pop] cvx readonly

/Function defineRes pop

/N26 <<

/SA false 

/OP false 

/BG /N24 /Function findRes 

/UCR /N25 /Function findRes 

/TR {}

/SM 0.02 

>> /ExtGState defineRes pop

q

1 i

215.88 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

216 656.16 m

216 59.64 l

S 

0 0 0 RG

216 656.16 m

216 59.64 l

S 

Q

q

1 i

297.24001 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

297.36 656.16 m

297.36 59.64 l

S 

0 0 0 RG

297.36 656.16 m

297.36 59.64 l

S 

Q

q

1 i

378.48 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

378.60001 656.16 m

378.60001 59.64 l

S 

0 0 0 RG

378.60001 656.16 m

378.60001 59.64 l

S 

Q

q

1 i

459.84 59.64 0.12 596.52 re

W n 

1 1 1 RG

1 J

1 j

0.12 w

10 M

[2.88 2.88 2.88 2.88 2.88 2.88 2.88 2.88 ]0 d

/N26 /ExtGState findRes gs

459.96001 656.16 m

459.96001 59.64 l

S 

0 0 0 RG

459.96001 656.16 m

459.96001 59.64 l

S 

Q

0.5 0.5 0.5 rg

0 0 0 RG

1 J

0 j

0.96001 w

10 M

[]0 d

/N26 /ExtGState findRes gs

1 i

134.64 592.44 76.67999 42.48 re

B* 

134.64 507.24001 183.96001 42.48 re

B* 

134.64 422.03999 85.8 42.48 re

B* 

134.64 336.72 132.96001 42.60001 re

B* 

134.64 251.52 227.52 42.48 re

B* 

q

134.64 160.2 262.56 54.60001 re

W n 

134.64 166.32001 256.56 42.48 re

B* 

Q

q

134.64 75 376.08 54.60001 re

W n 

134.64 81.12 2430.60001 42.48 re

B* 

Q

0.12 w

508.8 656.16 m

134.64 656.16 l

134.64 660.12 m

134.64 656.16 l

216 660.12 m

216 656.16 l

297.36 660.12 m

297.36 656.16 l

378.60001 660.12 m

378.60001 656.16 l

459.96001 660.12 m

459.96001 656.16 l

134.64 661.44 m

134.64 656.16 l

216 661.44 m

216 656.16 l

297.36 661.44 m

297.36 656.16 l

378.60001 661.44 m

378.60001 656.16 l

459.96001 661.44 m

459.96001 656.16 l

134.64 656.16 m

134.64 59.64 l

129.36 656.16 m

134.64 656.16 l

129.36 570.96001 m

134.64 570.96001 l

129.36 485.75999 m

134.64 485.75999 l

129.36 400.56 m

134.64 400.56 l

129.36 315.24001 m

134.64 315.24001 l

129.36 230.03999 m

134.64 230.03999 l

129.36 144.84 m

134.64 144.84 l

129.36 59.64 m

134.64 59.64 l

S 

BT

/N19 1 Tf

0 -17.03999 17.03999 0 129.24001 691.56 Tm

0 0 0 rg

0 Tc

0 Tw

/N19 1 Tf (0%)Tj

-0.5 4.7746 TD

/N19 1 Tf (25%)Tj

T*

/N19 1 Tf (50%)Tj

0 4.76759 TD

/N19 1 Tf (75%)Tj

-0.5 4.7747 TD

/N19 1 Tf (100%)Tj

3.8028 -20.5634 TD

/N19 1 Tf [(Tomcatv)-2058.5 ]TJ /N19 1 Tf [(Swim)-3053.3 ]TJ /N19 1 Tf [(FIR)-3563.60001 ]TJ /N19 1 Tf [(IIR)-3082.5 ]TJ /N19 1 Tf [(VMM)-2415 ]TJ /N19 1 Tf [(MMM)-2579 ]TJ /N19 1 Tf [(YUV)]TJ

/N21 1 Tf

20.03999 0 0 20.03999 161.64 711.48 Tm

0.0006 Tc

0.0009 Tw

/N21 1 Tf (% improvement of the execution time)Tj

/N19 1 Tf

0 -20.03999 20.03999 0 516.24001 123.60001 Tm

0 Tc

0 Tw

/N19 1 Tf (570%)Tj

ET

1 1 1 rg

494.88 128.28 m

484.44 125.03999 l

500.03999 73.67999 l

510.48 76.92 l

f* 

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%DocumentSuppliedResources:

%%+ font CFHFNJ+TimesNewRomanPS-BoldMT

%%+ font CFHFJJ+TimesNewRomanPSMT

%%EOF


%%EndDocument

 endTexFig
 2040 1207 a Ft(Figure)d(11:)33 b(P)n(ercen)n(tage)23
b(impro)n(v)n(emen)n(t)d(of)j(execution)f(time)f(on)i(an)2040
1290 y(MPC7400)28 b(pro)r(cessor)g(using)d(SLP)h(compilation.)2151
1682 y Fn(\017)38 b Ft(Although)30 b(our)g(system)g(is)h(capable)g(of)g
(compiling)f(for)i(ma-)2227 1765 y(c)n(hines)18 b(that)h(do)f(not)g
(supp)r(ort)g(unaligned)h(memory)d(accesses,)2227 1848
y(the)k(algorithm)g(is)h(p)r(oten)n(tially)f(more)g(e\013ectiv)n(e)g
(without)g(this)2227 1931 y(constrain)n(t.)33 b(Arc)n(hitectures)21
b(supplying)f(e\016cien)n(t)h(unaligned)2227 2014 y(load)28
b(and)f(store)h(instructions)g(migh)n(t)e(impro)n(v)n(e)g(the)h(p)r
(erfor-)2227 2097 y(mance)e(of)h(SLP)g(analysis.)2152
2256 y(The)f(\014rst)g(three)g(p)r(oin)n(ts)g(discuss)g(simple)g(pro)r
(cessor)h(mo)r(di\014ca-)2040 2339 y(tions)32 b(that)f(w)n(e)h(hop)r(e)
g(will)g(b)r(e)g(incorp)r(orated)g(in)n(to)g(future)f(m)n(ulti-)2040
2422 y(media)26 b(instruction)h(sets)h(as)f(they)f(mature.)37
b(The)27 b(last)g(t)n(w)n(o)g(p)r(oin)n(ts)2040 2505
y(address)h(di\016cult)f(issues.)39 b(Solving)28 b(them)d(in)i(either)h
(hardw)n(are)f(or)2040 2588 y(soft)n(w)n(are)32 b(is)g(not)e(trivial.)
50 b(More)32 b(researc)n(h)f(is)g(required)f(to)h(deter-)2040
2671 y(mine)25 b(the)g(b)r(est)h(approac)n(h.)2040 2867
y Fu(7)82 b(Keys)28 b(to)g(General)f(Acceptance)g(of)g(SLP)2040
3024 y Ft(Man)n(y)21 b(of)i(the)e(tec)n(hniques)g(dev)n(elop)r(ed)g(b)n
(y)g(the)g(academic)h(compiler)2040 3107 y(comm)n(unit)n(y)27
b(are)k(not)e(accepted)h(in)g(mainstream)f(computing.)46
b(A)2040 3190 y(go)r(o)r(d)29 b(example)d(is)i(the)f(w)n(ork)h(on)g(lo)
r(op)g(lev)n(el)g(parallelization)i(that)2040 3273 y(has)k(con)n(tin)n
(ued)f(for)h(o)n(v)n(er)f(three)g(decades.)59 b(Ho)n(w)n(ev)n(er,)35
b(in)f(a)g(v)n(ery)2040 3356 y(short)26 b(p)r(erio)r(d)h(of)g(time,)f
(ILP)g(compilers)h(ha)n(v)n(e)e(b)r(ecome)h(univ)n(ersal.)2040
3439 y(W)-6 b(e)33 b(b)r(eliev)n(e)h(the)f(follo)n(wing)j(c)n
(haracteristics)f(are)f(critical)h(to)f(the)2040 3522
y(general)27 b(acceptance)f(of)h(a)f(compiler)f(optimization:)2151
3681 y Fn(\017)38 b Fo(Robustness:)79 b Ft(If)48 b(simple)g(source)h
(co)r(de)f(mo)r(di\014cations)2227 3764 y(drastically)h(alter)g
(program)f(p)r(erformance,)54 b(success)49 b(b)r(e-)2227
3847 y(comes)42 b(dep)r(enden)n(t)f(up)r(on)h(the)h(user's)g
(understanding)f(of)2227 3930 y(compiler)33 b(in)n(tricacies.)59
b(F)-6 b(or)33 b(example,)i(tec)n(hniques)d(to)i(un-)2227
4014 y(co)n(v)n(er)d(lo)r(op)h(lev)n(el)f(parallelism)h(are)g(prone)e
(to)i(wide)f(\015uctu-)2227 4097 y(ations)f(in)f(p)r(erformance.)45
b(A)28 b(c)n(hange)h(in)g(one)h(statemen)n(t)e(of)2227
4180 y(the)36 b(lo)r(op)g(b)r(o)r(dy)g(ma)n(y)f(result)h(in)g(a)g(v)n
(ector)g(compiler's)h(se-)2227 4263 y(quen)n(tialization)31
b(of)f(the)f(en)n(tire)h(lo)r(op.)48 b(In)29 b(the)g(case)i(of)g(ILP)
2227 4346 y(and)j(SLP)-6 b(,)34 b(failure)i(to)f(parallelize)h(a)f(few)
g(statemen)n(ts)f(will)2227 4429 y(not)28 b(signi\014can)n(tly)h
(impact)f(aggregate)j(p)r(erformance.)44 b(This)2227
4512 y(mak)n(es)20 b(metho)r(ds)g(for)i(their)f(extraction)g(m)n(uc)n
(h)e(more)h(robust.)2151 4654 y Fn(\017)38 b Fo(Scalabilit)n(y:)68
b Ft(Compiler)42 b(tec)n(hniques)f(m)n(ust)g(b)r(e)g(able)h(to)2227
4737 y(handle)30 b(large)i(programs)e(if)i(they)d(are)i(to)g(gain)g
(acceptance)2227 4820 y(for)e(real)g(applications.)44
b(Some)28 b(analyses)h(required)f(b)n(y)g(lo)r(op)2227
4904 y(optimizations)f(do)f(not)g(scale)i(w)n(ell)f(to)f(large)i(co)r
(de)f(sizes)g(b)r(e-)2227 4987 y(cause)j(of)h(dep)r(endence)e(on)h
(global)h(program)f(analysis.)48 b(Al-)2227 5070 y(though)21
b(global)h(analysis)h(can)e(impro)n(v)n(e)f(the)h(e\013ectiv)n(eness)h
(of)2227 5153 y(ILP)28 b(and)g(SLP)-6 b(,)28 b(it)h(is)g(not)f
(required.)42 b(Therefore,)31 b(complex-)2227 5236 y(it)n(y)g(gro)n(ws)
i(linearly)f(with)g(program)f(size.)53 b(This)32 b(results)g(in)2227
5319 y(smo)r(oth)25 b(scaling)i(to)f(larger)h(applications.)p
eop
%%Page: 11 11
11 10 bop -41 -69 a Fn(\017)38 b Fo(Simplicit)n(y:)63
b Ft(Complex)39 b(compiler)h(transformations)g(are)35
14 y(more)32 b(prone)h(to)g(bugs)f(than)h(simple)f(analyses.)57
b(Problems)35 97 y(are)19 b(lik)n(ely)f(to)h(app)r(ear)g(only)f(under)g
(v)n(ery)f(sp)r(eci\014c)i(conditions,)35 180 y(making)35
b(them)g(di\016cult)h(to)g(detect.)65 b(Man)n(y)35 b(time-critical)35
263 y(pro)t(jects)d(are)g(compiled)e(without)h(optimizations)h(in)f
(order)35 346 y(to)d(a)n(v)n(oid)f(p)r(ossible)i(compiler)f(errors.)41
b(Coarse-grain)29 b(paral-)35 429 y(lelization)35 b(and)d(v)n
(ectorization)i(require)f(in)n(v)n(olv)n(ed)f(analyses)35
512 y(that)21 b(are)g(more)g(lik)n(ely)g(to)g(exhibit)f(this)h(b)r(eha)
n(vior.)34 b(Ho)n(w)n(ev)n(er,)35 596 y(most)g(ILP)g(tec)n(hniques,)i
(as)f(w)n(ell)h(as)e(the)g(SLP)h(tec)n(hniques)35 679
y(presen)n(ted)23 b(in)h(Section)g(3,)g(are)h(extremely)d(simple)h(to)h
(under-)35 762 y(stand,)g(implemen)n(t)e(and)i(v)l(alidate.)34
b(In)23 b(addition,)i(it)f(is)g(often)35 845 y(the)h(case)i(that)e
(simplicit)n(y)h(leads)g(to)g(faster)h(compilation.)-41
987 y Fn(\017)38 b Fo(P)n(ortabilit)n(y:)64 b Ft(Optimizations)39
b(that)h(are)g(dep)r(enden)n(t)e(on)35 1070 y(particular)c(features)h
(of)f(a)g(source)g(language)h(or)e(program-)35 1153 y(ming)c(st)n(yle)h
(will)h(not)e(b)r(ecome)g(univ)n(ersal.)47 b(T)-6 b(ec)n(hniques)29
b(for)35 1236 y(extracting)36 b(lo)r(op)h(lev)n(el)f(parallelism)h(are)
g(limited)e(b)r(ecause)35 1319 y(they)d(only)g(apply)g(to)h(programs)g
(written)g(with)f(lo)r(ops)i(and)35 1402 y(arra)n(ys.)g(Alternativ)n
(ely)-6 b(,)23 b(ILP)g(and)f(SLP)h(tec)n(hniques)f(are)h(ap-)35
1485 y(plied)37 b(at)f(the)g(lev)n(el)h(of)g(basic)g(blo)r(c)n(ks,)j
(making)c(them)f(less)35 1568 y(dep)r(enden)n(t)24 b(on)i(source)g(co)r
(de)g(c)n(haracteristics.)-41 1711 y Fn(\017)38 b Fo(E\013ectiv)n
(eness:)54 b Ft(No)37 b(compiler)f(tec)n(hnique)g(will)i(b)r(e)e(used)
35 1794 y(if)g(it)g(do)r(es)g(not)g(substan)n(tially)g(impro)n(v)n(e)e
(program)h(p)r(erfor-)35 1877 y(mance.)58 b(In)33 b(Section)g(5,)k(w)n
(e)d(sho)n(w)n(ed)f(that)h(our)f(algorithm)35 1960 y(for)21
b(detecting)e(SLP)h(can)f(pro)n(vide)h(remark)l(able)f(p)r(erformance)
35 2043 y(gains.)-40 2202 y(W)-6 b(e)30 b(b)r(eliev)n(e)g(SLP)g
(compiler)g(tec)n(hniques)f(ha)n(v)n(e)h(the)f(p)r(oten)n(tial)-152
2285 y(to)21 b(b)r(ecome)g(univ)n(ersally)f(accepted)h(as)g(viable)h
(and)e(e\013ectiv)n(e)h(meth-)-152 2368 y(o)r(ds)28 b(of)f(extracting)h
(SIMD)e(parallelism.)39 b(As)27 b(a)g(result,)h(w)n(e)f(exp)r(ect)-152
2451 y(future)g(arc)n(hitectures)g(to)g(place)g(increasing)h(imp)r
(ortance)e(on)h(SLP)-152 2534 y(op)r(erations.)-152 2730
y Fu(8)83 b(Conclusion)-152 2887 y Ft(In)21 b(this)h(pap)r(er)g(w)n(e)g
(in)n(tro)r(duced)g(sup)r(erw)n(ord)g(lev)n(el)g(parallelism,)i(the)
-152 2970 y(notion)j(of)g(viewing)h(parallelism)g(from)e(the)g(p)r
(ersp)r(ectiv)n(e)h(of)g(parti-)-152 3053 y(tioned)32
b(op)r(erations)h(on)e(pac)n(k)n(ed)g(sup)r(erw)n(ords.)53
b(W)-6 b(e)31 b(sho)n(w)n(ed)h(that)-152 3136 y(SLP)22
b(can)f(b)r(e)h(exploited)f(with)h(a)g(simple)f(and)g(robust)g
(compiler)h(im-)-152 3219 y(plemen)n(tation)34 b(that)f(exhibits)h(sp)r
(eedups)g(ranging)g(from)g(1.24)i(to)-152 3302 y(6.70)27
b(on)f(a)g(set)g(of)g(scien)n(ti\014c)h(and)e(m)n(ultimedia)f(b)r(enc)n
(hmarks.)-40 3385 y(W)-6 b(e)20 b(also)i(sho)n(w)n(ed)f(that)f(SLP)g
(concepts)g(lead)h(to)g(an)f(elegan)n(t)h(im-)-152 3468
y(plemen)n(tation)30 b(of)i(a)f(v)n(ectorizing)g(compiler.)50
b(By)31 b(comparing)f(the)-152 3551 y(p)r(erformance)25
b(of)g(this)g(compiler)g(to)f(the)h(more)f(general)h(SLP)g(algo-)-152
3634 y(rithm,)k(w)n(e)g(demonstrated)f(that)g(v)n(ector)h(parallelism)h
(is)f(a)g(subset)-152 3717 y(of)e(sup)r(erw)n(ord)f(lev)n(el)g
(parallelism.)-40 3800 y(Our)36 b(curren)n(t)f(compiler)h(implemen)n
(tation)e(is)j(still)g(in)f(its)g(in-)-152 3883 y(fancy)-6
b(.)47 b(While)30 b(successful,)i(w)n(e)f(b)r(eliev)n(e)f(its)g
(e\013ectiv)n(eness)g(can)g(b)r(e)-152 3966 y(impro)n(v)n(ed.)77
b(By)40 b(extending)g(the)g(SLP)g(analysis)i(b)r(ey)n(ond)d(basic)-152
4049 y(blo)r(c)n(ks,)h(more)35 b(pac)n(king)h(opp)r(ortunities)g(could)
h(b)r(e)e(found.)66 b(F)-6 b(ur-)-152 4132 y(thermore,)33
b(SLP)f(could)f(o\013er)h(a)g(form)g(of)g(predication,)i(in)e(whic)n(h)
-152 4215 y(un\014lled)c(slots)i(of)f(a)g(wide)g(op)r(eration)h(could)e
(b)r(e)h(\014lled)f(with)h(sp)r(ec-)-152 4298 y(ulativ)n(e)f
(computation.)39 b(If)28 b(data)g(are)g(in)n(v)l(alidated)f(due)g(to)h
(con)n(trol)-152 4381 y(\015o)n(w,)f(they)d(could)i(simply)f(b)r(e)h
(discarded.)-40 4464 y(Recen)n(t)36 b(researc)n(h)h(has)g(sho)n(wn)g
(that)f(compiler)h(analysis)h(can)-152 4547 y(signi\014can)n(tly)c
(reduce)e(the)h(size)h(of)g(data)f(t)n(yp)r(es)f(needed)h(to)g(store)
-152 4630 y(program)26 b(v)l(ariables)h([22)q(].)36 b(Incorp)r(orating)
27 b(this)f(analysis)i(in)n(to)e(our)-152 4713 y(o)n(wn)g(has)g(the)g
(p)r(oten)n(tial)g(of)h(drastically)g(impro)n(ving)e(p)r(erformance)
-152 4796 y(b)n(y)32 b(increasing)h(the)f(n)n(um)n(b)r(er)f(of)i(op)r
(erands)g(that)f(can)g(b)r(e)h(pac)n(k)n(ed)-152 4879
y(and)26 b(executed)f(in)g(parallel.)-40 4962 y(T)-6
b(o)r(da)n(y)g(,)28 b(most)e(desktop)g(pro)r(cessors)j(are)e(equipp)r
(ed)f(with)h(m)n(ul-)-152 5045 y(timedia)20 b(extensions.)34
b(Non)n(uniformities)20 b(in)g(the)g(di\013eren)n(t)g(instruc-)-152
5129 y(tion)i(sets,)h(exacerbated)f(b)n(y)e(a)i(lac)n(k)f(of)i
(compiler)e(supp)r(ort,)h(has)g(left)-152 5212 y(these)35
b(extensions)g(underutilized.)60 b(W)-6 b(e)34 b(ha)n(v)n(e)g(sho)n(wn)
h(that)f(SLP)-152 5295 y(compilation)i(is)h(not)e(only)h(p)r(ossible,)j
(but)c(also)i(applicable)g(to)e(a)-152 5378 y(wider)23
b(class)g(of)f(application)h(domains.)33 b(As)21 b(suc)n(h,)i(w)n(e)f
(b)r(eliev)n(e)g(SLP)2040 -69 y(compilation)k(tec)n(hniques)f(ha)n(v)n
(e)g(the)g(p)r(oten)n(tial)h(to)g(b)r(ecome)f(an)h(in-)2040
14 y(tegral)e(part)e(of)h(general)h(purp)r(ose)e(computing)f(in)i(the)f
(near)g(future.)2040 210 y Fu(9)82 b(Ackno)n(wledgments)2040
367 y Ft(W)-6 b(e)32 b(thank)f(Krste)h(Asano)n(vi)n(\023)-36
b(c)32 b(for)h(his)f(input)f(on)h(v)n(ector)g(pro)r(cess-)2040
450 y(ing)k(and)f(the)g(CA)n(G)g(group)h(mem)n(b)r(ers)d(who)j(pro)n
(vided)f(feedbac)n(k)2040 533 y(during)28 b(the)h(writing)g(of)h(this)e
(pap)r(er,)i(particularly)f(Mic)n(hael)h(T)-6 b(a)n(y-)2040
616 y(lor,)44 b(Derek)39 b(Bruening,)k(Mik)n(e)c(Zhang,)k(Dark)n(o)d
(Marino)n(v,)j(Matt)2040 699 y(F)-6 b(rank)25 b(and)h(Mark)h
(Stephenson.)35 b(Radu)25 b(Rugina)h(con)n(tributed)f(his)2040
782 y(p)r(oin)n(ter)31 b(analysis)h(pac)n(k)l(age)f(as)g(w)n(ell)h(as)f
(his)g(o)n(wn)h(time)e(to)h(imple-)2040 865 y(men)n(t)25
b(new)h(extensions.)37 b(Manas)27 b(Mandal,)g(Kalp)r(esh)g(Gala,)h
(Brian)2040 948 y(Gra)n(yson)36 b(and)e(James)i(Y)-6
b(ang)34 b(at)h(Motorola)j(pro)n(vided)c(access)i(to)2040
1031 y(m)n(uc)n(h)19 b(needed)g(dev)n(elopmen)n(t)g(to)r(ols)j(and)e
(tec)n(hnical)h(exp)r(ertise.)33 b(W)-6 b(e)2040 1114
y(also)33 b(thank)e(the)h(anon)n(ymous)f(review)n(ers)i(for)g(their)f
(constructiv)n(e)2040 1197 y(commen)n(ts.)g(Finally)-6
b(,)24 b(w)n(e)f(thank)f(Matt)h(Deeds)f(for)i(his)f(help)f(in)h(the)
2040 1280 y(completion)j(of)g(this)g(pap)r(er.)2152 1363
y(This)63 b(researc)n(h)f(w)n(as)h(funded)f(in)f(part)h(b)n(y)f(NSF)g
(gran)n(t)2040 1446 y(EIA9810173)28 b(and)d(D)n(ARP)-6
b(A)24 b(gran)n(t)i(DBT63-96-C-0036.)2040 1641 y Fu(References)2078
1798 y Ft([1])39 b(E.)44 b(Alb)r(ert,)k(K.)c(Knob)r(e,)k(J.)c(Luk)l
(as,)k(and)43 b(G.)h(Steele,)49 b(Jr.)2197 1881 y(Compiling)36
b(F)-6 b(ortran)36 b(8x)f(arra)n(y)h(features)g(for)g(the)g(Connec-)
2197 1964 y(tion)31 b(Mac)n(hine)h(computer)e(system.)50
b(In)31 b Fs(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)f(the)2197
2047 y(A)n(CM)25 b(SIGPLAN)g(Symp)l(osium)h(on)f(Par)l(al)t(lel)g(Pr)l
(o)l(gr)l(amming:)2197 2130 y(Exp)l(erienc)l(e)31 b(with)e(Applic)l
(ations,)h(L)l(anguages,)h(and)f(Systems)2197 2213 y(\(PPEALS\))p
Ft(,)d(New)f(Ha)n(v)n(en,)f(CT,)i(July)e(1988.)2078 2356
y([2])39 b(J.)25 b(R.)f(Allen)g(and)f(K.)h(Kennedy)-6
b(.)30 b(PF)n(C:)25 b(A)f(Program)g(to)h(Con-)2197 2439
y(v)n(ert)34 b(F)-6 b(ortran)35 b(to)g(P)n(arallel)i(F)-6
b(orm.)62 b(In)34 b(K.)h(Hw)n(ang,)j(editor,)2197 2522
y Fs(Sup)l(er)l(c)l(omputers:)48 b(Design)32 b(and)h(Applic)l(ations)p
Ft(,)g(pages)f(186{)2197 2605 y(203.)24 b(IEEE)g(Computer)e(So)r(ciet)n
(y)g(Press,)j(Silv)n(er)e(Spring,)g(MD,)2197 2688 y(1984.)2078
2830 y([3])39 b(Krste)74 b(Asano)n(vi)n(\023)-36 b(c,)87
b(James)75 b(Bec)n(k,)87 b(Bertrand)75 b(Irissou,)2197
2913 y(Brian)48 b(E.)g(D.)f(Kingsbury)-6 b(,)52 b(Nelson)47
b(Morgan,)55 b(and)46 b(John)2197 2996 y(W)-6 b(a)n(wrzynek.)55
b(The)32 b(T0)i(V)-6 b(ector)32 b(Micropro)r(cessor.)59
b(In)32 b Fs(Pr)l(o-)2197 3079 y(c)l(e)l(e)l(dings)d(of)e(Hot)h(Chips)g
(VII)p Ft(,)d(August)g(1995.)2078 3221 y([4])39 b(D.)27
b(Callahan)j(and)d(P)-6 b(.)28 b(Ha)n(vlak.)40 b(Scalar)28
b(expansion)g(in)g(PF)n(C:)2197 3304 y(Mo)r(di\014cations)g(for)g(P)n
(arallelization.)42 b(Sup)r(ercomputer)25 b(Soft-)2197
3387 y(w)n(are)38 b(Newsletter)g(5,)j(Dept.)c(of)h(Computer)f(Science,)
j(Rice)2197 3470 y(Univ)n(ersit)n(y)-6 b(,)25 b(Octob)r(er)g(1986.)2078
3612 y([5])39 b(Derek)17 b(J.)i(DeV)-6 b(ries.)21 b(A)d(V)-6
b(ectorizing)18 b(SUIF)f(Compiler:)31 b(Imple-)2197 3695
y(men)n(tation)17 b(and)g(P)n(erformance.)22 b(Master's)d(thesis,)i
(Univ)n(ersit)n(y)2197 3778 y(of)26 b(T)-6 b(oron)n(to,)27
b(June)f(1997.)2078 3920 y([6])39 b(Keith)31 b(Diefendor\013.)51
b(P)n(en)n(tium)29 b(I)r(I)r(I)i(=)g(P)n(en)n(tium)e(I)r(I)i(+)g(SSE.)
2197 4003 y Fs(Micr)l(opr)l(o)l(c)l(essor)f(R)l(ep)l(ort)p
Ft(,)e(13\(3\):1,6{11,)h(Marc)n(h)e(1999.)2078 4145 y([7])39
b(Keith)30 b(Diefendor\013.)48 b(Son)n(y's)30 b(Emotionally)h(Charged)g
(Chip.)2197 4228 y Fs(Micr)l(opr)l(o)l(c)l(essor)f(R)l(ep)l(ort)p
Ft(,)e(13\(5\):1,6{11,)h(April)d(1999.)2078 4370 y([8])39
b(Keith)27 b(Diefendor\013)g(and)g(Pradeep)h(K.)f(Dub)r(ey)-6
b(.)38 b(Ho)n(w)27 b(Multi-)2197 4453 y(media)21 b(W)-6
b(orkloads)22 b(Will)h(Change)f(Pro)r(cessor)i(Design.)k
Fs(IEEE)2197 4536 y(Computer)p Ft(,)f(30\(9\):43{45,)i(Septem)n(b)r(er)
24 b(1997.)2078 4678 y([9])39 b(G.)31 b(H.)f(Barnes,)j(R.)e(Bro)n(wn,)i
(M.)e(Kato,)h(D.)f(J.)g(Kuc)n(k,)g(D.)f(L.)2197 4761
y(Slotnic)n(k,)35 b(and)e(R.)g(A.)g(Stok)n(es.)56 b(The)33
b(Illiac)i(IV)d(Computer.)2197 4844 y Fs(IEEE)26 b(T)-6
b(r)l(ansactions)28 b(on)e(Computers)p Ft(,)h(C\(17\):746{757,)i(Au-)
2197 4927 y(gust)d(1968.)2040 5069 y([10])39 b(Linley)26
b(Gw)n(ennap.)36 b(AltiV)-6 b(ec)26 b(V)-6 b(ectorizes)26
b(P)n(o)n(w)n(erPC.)38 b Fs(Micr)l(o-)2197 5152 y(pr)l(o)l(c)l(essor)30
b(R)l(ep)l(ort)p Ft(,)e(12\(6\):1,6{9,)h(Ma)n(y)d(1998.)2040
5295 y([11])39 b(Craig)28 b(Hansen.)36 b(MicroUnit)n(y's)27
b(MediaPro)r(cessor)i(Arc)n(hitec-)2197 5378 y(ture.)34
b Fs(IEEE)27 b(Micr)l(o)p Ft(,)f(16\(4\):34{41,)j(Aug)d(1996.)p
eop
%%Page: 12 12
12 11 bop -152 -69 a Ft([12])39 b(D.J.)j(Kuc)n(k,)h(R.H.)e(Kuhn,)i(D.)e
(P)n(adua,)k(B.)d(Leasure,)j(and)5 14 y(M.)20 b(W)-6
b(olfe.)24 b(Dep)r(endence)18 b(Graphs)i(and)e(Compiler)i(Optimiza-)5
97 y(tions.)57 b(In)33 b Fs(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)e(the)i
(8th)f(A)n(CM)f(Symp)l(osium)h(on)5 180 y(Priciples)k(of)g(Pr)l(o)l(gr)
l(amming)g(L)l(anguages)p Ft(,)44 b(pages)39 b(207{218,)5
263 y(Williamsburg,)27 b(V)-9 b(A,)25 b(Jan)h(1981.)-152
406 y([13])39 b(Sam)n(uel)k(Larsen,)50 b(Radu)43 b(Rugina,)49
b(and)44 b(Saman)g(Amaras-)5 489 y(inghe.)73 b(Alignmen)n(t)37
b(Analysis.)74 b(T)-6 b(ec)n(hnical)39 b(Rep)r(ort)f(LCS-)5
572 y(TM-605,)f(Massac)n(h)n(usetts)d(Institute)f(of)h(T)-6
b(ec)n(hnology)g(,)35 b(June)5 655 y(2000.)-152 798 y([14])k(Corina)25
b(G.)f(Lee)g(and)f(Derek)h(J.)g(DeV)-6 b(ries.)31 b(Initial)24
b(Results)g(on)5 881 y(the)32 b(P)n(erformance)i(and)e(Cost)i(of)f(V)-6
b(ector)32 b(Micropro)r(cessors.)5 964 y(In)f Fs(Pr)l(o)l(c)l(e)l(e)l
(dings)k(of)d(the)i(30th)f(A)n(nnual)g(International)h(Sym-)5
1047 y(p)l(osium)27 b(on)g(Micr)l(oA)n(r)l(chite)l(cutr)l(e)p
Ft(,)h(pages)e(171{182,)i(Researc)n(h)5 1130 y(T)-6 b(riangle)27
b(P)n(ark,)f(USA,)f(Decem)n(b)r(er)f(1997.)-152 1273
y([15])39 b(Corina)33 b(G.)g(Lee)f(and)f(Mark)i(G.)f(Sto)r(o)r(dley)-6
b(.)53 b(Simple)31 b(V)-6 b(ector)5 1356 y(Micropro)r(cessors)33
b(for)d(Multimedia)g(Applications.)46 b(In)29 b Fs(Pr)l(o-)5
1439 y(c)l(e)l(e)l(dings)38 b(of)d(the)i(31st)g(A)n(nnual)f
(International)h(Symp)l(osium)5 1522 y(on)22 b(Micr)l(oA)n(r)l(chite)l
(cutr)l(e)p Ft(,)i(pages)c(25{36,)j(Dallas,)f(TX,)d(Decem-)5
1605 y(b)r(er)26 b(1998.)-152 1748 y([16])39 b(Rub)n(y)32
b(Lee.)59 b(Sub)n(w)n(ord)33 b(P)n(arallelism)i(with)f(MAX-2.)58
b Fs(IEEE)5 1831 y(Micr)l(o)p Ft(,)26 b(16\(4\):51{59,)j(Aug)d(1996.)
-152 1974 y([17])39 b(Glenn)c(Luec)n(k)n(e)e(and)h(W)-6
b(aqar)34 b(Haque.)60 b(Ev)l(aluation)35 b(of)g(F)-6
b(or-)5 2057 y(tran)31 b(V)-6 b(ector)31 b(Compilers)g(and)g(Prepro)r
(cessors.)52 b Fs(Softwar)l(e|)5 2140 y(Pr)l(actic)l(e)29
b(and)f(Exp)l(erienc)l(e)p Ft(,)g(21\(9\),)f(Septem)n(b)r(er)d(1991.)
-152 2283 y([18])39 b(Marc)30 b(T)-6 b(rem)n(bla)n(y)27
b(and)h(Mic)n(hael)i(O'Connor)f(and)f(V)-6 b(enk)l(atesh)5
2366 y(Nara)n(y)n(anan)23 b(and)g(Liang)g(He.)30 b(VIS)22
b(Sp)r(eeds)h(New)g(Media)h(Pro-)5 2449 y(cessing.)36
b Fs(IEEE)27 b(Micr)l(o)p Ft(,)f(16\(4\):10{20,)j(Aug)c(1996.)-152
2591 y([19])39 b(Motorola.)62 b Fs(A)n(ltiV)-6 b(e)l(c)36
b(T)-6 b(e)l(chnolo)l(gy)36 b(Pr)l(o)l(gr)l(amming)h(Envir)l(on-)5
2674 y(ments)29 b(Manual)p Ft(,)d(No)n(v)n(em)n(b)r(er)d(1998.)-152
2817 y([20])39 b(Alex)30 b(P)n(eleg)h(and)e(Uri)h(W)-6
b(eiser.)48 b(MMX)30 b(T)-6 b(ec)n(hnology)31 b(Exten-)5
2900 y(sion)j(to)g(In)n(tel)g(Arc)n(hitecture.)58 b Fs(IEEE)34
b(Micr)l(o)p Ft(,)i(16\(4\):42{50,)5 2983 y(Aug)25 b(1996.)-152
3126 y([21])39 b(Radu)25 b(Rugina)g(and)h(Martin)g(Rinard.)34
b(P)n(oin)n(ter)26 b(Analysis)g(for)5 3209 y(Multithreaded)35
b(Programs.)62 b(In)34 b Fs(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)e(the)g
(SIG-)5 3292 y(PLAN)c('99)f(Confer)l(enc)l(e)i(on)f(Pr)l(o)l(gr)l
(amming)g(L)l(anguage)h(De-)5 3375 y(sign)28 b(and)g(Implementation)p
Ft(,)e(A)n(tlan)n(ta,)g(GA,)g(Ma)n(y)g(1999.)-152 3518
y([22])39 b(Mark)34 b(Stephenson,)i(Jonathon)e(Babb,)j(and)c(Saman)g
(Ama-)5 3601 y(rasinghe.)56 b(Bit)n(width)34 b(Analysis)f(with)g
(Application)g(to)g(Sili-)5 3684 y(con)c(Compilation.)44
b(In)29 b Fs(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)e(the)h(SIGPLAN)g('00)5
3767 y(Confer)l(enc)l(e)d(on)e(Pr)l(o)l(gr)l(amming)i(L)l(anguage)g
(Design)e(and)h(Im-)5 3850 y(plementation)p Ft(,)g(V)-6
b(ancouv)n(er,)25 b(BC,)i(June)f(2000.)-152 3993 y([23])39
b(R.)21 b(P)-6 b(.)22 b(Wilson,)h(R.)f(S.)f(F)-6 b(renc)n(h,)22
b(C.)g(S.)f(Wilson,)j(S.)d(P)-6 b(.)22 b(Amaras-)5 4076
y(inghe,)f(J.)f(M.)g(Anderson,)g(S.)f(W.)h(K.)f(Tjiang,)k(S.-W.)c
(Liao,)i(C.-)5 4159 y(W.)i(Tseng,)i(M.)e(W.)g(Hall,)i(M.)e(S.)g(Lam,)g
(and)g(J.)g(L.)h(Hennessy)-6 b(.)5 4242 y(SUIF:)31 b(An)f
(Infrastructure)h(for)h(Researc)n(h)f(on)g(P)n(arallelizing)5
4325 y(and)h(Optimizing)h(Compilers.)56 b Fs(A)n(CM)33
b(SIGPLAN)h(Notic)l(es)p Ft(,)5 4408 y(29\(12\):31{37,)c(Decem)n(b)r
(er)24 b(1994.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
