%!PS-Adobe-2.0
%%Creator: dvipsk 5.66a Copyright 1986-97 Radical Eye Software (www.radicaleye.com)
%%Title: paper.dvi
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips paper -o paper.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 1999.01.23:2115
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmti8 8 6
/Fa 6 114 df<121C127F12FFA412FE12380808788716>46 D<011FB512E016FC903900
FE003FEE0FC04AEB07E016030101EC01F0A24A14F8A21303EE03F05CA20107EC07E017C0
4AEB0F80EE1F00010F143E16FC9138C007F091B512805B9138C00FE091388003F06F7E13
3F6F7E91C7FCA2491301A2017E5CA201FE1303A2495C17080001163C17384914E0EEF078
00031670B5D8C00113E09238007FC0C9EA1F002E2E7BAC34>82 D<91380FF00C91383FFC
1C9138F80F3C903903C007BC9039078003FC90390F0001F8131E491300A24914F0A313F8
16E0A216007F7F6D7EEB7FF8ECFF806D13E06D13F801077F01017FEB001FEC01FF6E7E81
81A281121CA35D003C141EA25DA2007E5C5D007F495A6D485A26F1F01FC7FC38E07FFC38
C00FF0262F7BAD28>I<000FB712F0A23A1FE00FE00701001401001E02C013E048150014
1F12380078EC8001A20070013F14C012F0481400A25CC791C7FC147EA214FEA25CA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F003FB57EA22C2D74AC33>
I<EB03F8EB0FFEEB3E0FEBF8073901F00380EA03E0EA07C0000F1307D81F8013005C383F
001E5C387F03F8EBFFE049C7FC007EC8FC12FE5AA4127CEC0180EC03C0EC07806CEB0F00
141E6C137C380F83F03803FFC0C648C7FC1A1F799D21>101 D<903807C06090381FF0E0
EB7C39EBF81FEA01F03903E00FC0EA07C0120FEA1F801580EA3F00A248131F007E1400A3
00FE5B48133EA3147E48137CA214FCEA7801387C03F8A2EA3C0FEA1E1F380FF9F0EA03E1
EA000113035CA313075CA2130FA23801FFFCA21B2B799D21>113
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr8 8 33
/Fb 33 123 df<B512C0A412047F9018>45 D<123C127E12FFA4127E123C08087A8714>
I<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E82167E167FA6167E16FE5E4B5A4B
5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC6F7E167F821780161F17C0A61780
163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A2D7DAC32>66
D<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F
4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600AB127F17C0
A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F147890
390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<DA1FF013C09138FF
FE01903903F00F8390390F8001E3013FC71277017C143F4848141F4848140F48481407A2
48481403121F491401123F90C8FC481500A300FE1600A992381FFFFEA2007F9138001FE0
EE0FC0A27E7F121F7F120F6C7EA26C7E6C6C141FEA007C013F143FD90F8013F3903903F0
07C10100B51200DA1FF813002F2F7CAD37>71 D<B539F03FFFFCA2D803FCC713006C4814
7EB290B612FEA201F8C7127EB3486C14FFB5D8F03F13FCA22E2D7DAC35>I<B512F0A238
03FC006C5AB3B3A3487EB512F0A2142D7EAC19>I<D8FFF8923807FFC06D5D0003EFF000
00015F01BE151BA2019F1533A3D98F801463A2D987C014C3A2D983E0EB0183A3D981F0EB
0303A2D980F81306A3027C130CA26E1318A36E1330A291380F8060A2913807C0C0A39138
03E180A2913801F300A3EC00FEA2157C487ED80FF04B7EB5D93801B512C0A23A2D7DAC41
>77 D<B612FCEDFF803A03F8000FE00001EC03F0ED00F882167E167F821780A617005E16
7E5E5EED03F0ED0FE090B6128003FCC7FC01F8C9FCB2487EB512F0A2292D7EAC30>80
D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813011400127000F0
1470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8003F
13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C14F0
6CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>83
D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F3801
FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C391F
83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE9038
C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9ED1F
80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC222F
7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB0F00
007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007003801F0
3E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F81E38
03E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017EEB80
03000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB1F80
EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FCA3B6
FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801F03C
38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C
1400AAB512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<013F13F89038FFC3FE
3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C6C5A00071378380F
E1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C04814F0391E0007F8
48130048147C12F848143CA46C147C007C14F86CEB01F06CEB03E03907E01F803901FFFE
0038003FF01F2D7E9D23>I<EA07C012FFA2120F1207AC14FE9038C3FF809038C703E090
38DE01F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA
0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E
7EAD14>I<130FEB1F80EB3FC0A4EB1F80EB0F0090C7FCA8EB07C013FFA2130F1307B3AD
1230127838FC0F80A21400485AEA783EEA3FF8EA07E0123C83AD16>I<EA07C012FFA212
0F1207ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9
EBF0F8497EEBC07E143E80816E7E14076E7E816E7E486C487E3AFFFE07FF80A2212E7EAD
25>I<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14>I<2607C07FEB07F0
3BFFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C0
4990387F000749137EA249137CB2486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>
I<3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3A
FFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF83801F03E3803C00F3907800780390F0003
C04814E0003EEB01F0A248EB00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A239
0F8007C03907C00F803901F03E0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF
809038CF03E0390FDC01F03907F800FC49137E49133E49133FED1F80A3ED0FC0A8151F16
80A2ED3F00A26D137E6D137C5D9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8
FCA9487EEAFFFEA2222B7E9D27>I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF0
1EEBE000A45BB0487EB5FCA2181E7E9D1C>114 D<3801FE183807FFB8381E01F8EA3C00
481378481338A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC13
0138C0007E143EA26C131EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E
9E1C>I<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A714383801F0
3014703800F860EB3FE0EB0F80152A7FA81B>I<D807C013F800FF131FA2000F13010007
1300B21401A314033803E007EC0EFC3A01F81CFFC038007FF890391FE0F800221F7E9D27
>I<3BFFFC3FFE07FFA23B0FE003F001F801C09038E000F00007010114E0812603E00314
C0A2913807F8012701F006781380A29039F80E7C030000D90C3C1300A290397C181E06A2
151F6D486C5AA2168C90391F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F
9C33>119 D<3AFFFC01FFC0A23A0FE0007E000007147C1538000314306D137000011460
A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2EB03
F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0EA0F
80222B7F9C25>121 D<003FB51280A2EB003F003C14000038137E00305BEA700100605B
495A495A130F00005B495A49C7FC5B137E9038FC0180EA01F8120313F03807E003EA0FC0
001F1400138048485A007E5B00FE133FB6FCA2191D7E9C1F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy7 7 1
/Fc 1 3 df<0060140600F0140E0078141E6C143C6C14786C14F039078001E03903C003
C03901E007803900F00F00EB781E6D5A6D5A6D5A6D5A6D5A497E497EEB1E78497E497E49
7E3901E007803903C003C039078001E048C712F0001E147848143C48141E48140E006014
061F1F769D34>2 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt9 9 30
/Fd 30 125 df<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A5B485A
A2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C7EEB7F
80EB3FC0EB1FE0130F1303EB01C0133A73B327>40 D<127012F812FE7E6C7E6C7EEA0FE0
6C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80A3EB3F
00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327>I<13
0F497EA60078EB81E000FEEB87F000FF138FEBDFBF6CB512E06C14C0000F1400000313FC
C613F0A2000313FC000F13FF003F14C04814E039FFDFBFF0EB1F8F00FE13870078EB81E0
0000EB8000A66DC7FC1C207BA627>I<EB03C0497EAD007FB512FEB7FCA46C14FE390007
E000AD6D5A20227DA727>I<EB3FE03801FFF84813FE000FEBFF804814C0393FE07FE0EB
800F397F0007F0007EEB03F800FE13015A6C14FC1400A3127CC8FCA2140115F8A2140315
F01407EC0FE0EC1FC0143FEC7F80ECFF00495A495A495A495A495A495A495A01FEC7FC48
5AD807F81378484813FC485A485A48B5FCB6FCA36C14F81E2F7CAE27>50
D<EC3F804A7EA214FF5BA2EB03F7EB07E7A2EB0FC71487131FEB3F07A2137E13FCA2EA01
F813F01203EA07E0A2EA0FC0EA1F80A2EA3F00123E127E5AB7128016C0A36C1580C73807
C000A849B5FC491480A36D1400222F7EAE27>52 D<153815FC14011407140FEC3FF8EC7F
E0ECFFC001031300495AEB1FF8495A495A3801FF804890C7FCEA0FFC485AEA7FF0EAFFC0
5BA27FEA7FF0EA1FF86C7EEA03FF6C7F38007FE06D7E6D7EEB07FE6D7E010013C0EC7FE0
EC3FF8EC0FFC14071401140015381E287CAA27>60 D<EB03F0497EA2497EA4143CEB1F3E
A5EB3F3FA3EB3E1FA2017E7FA4496C7EA548486C7EA390B5FCA24880A3EBF003A248486C
7EA4000F803A7FFC0FFF8000FF15C06D5A497E007F1580222F7EAE27>65
D<007FB5FCB612C08115F87E3907E003FCEC00FE157E157F81A6157EA25D1403EC0FF890
B55A15C015F081819038E000FE157FED3F80151FA2ED0FC0A6151F1680153FED7F004A5A
007FB55AB65A5D15E06C1480222E7FAD27>I<387FFFFC14FFB612C06C80813907E00FF8
1407EC01FC6E7EA2157E157F811680151FA316C0150FABED1F80A3153F1600A25D15FEA2
4A5A4A5A140F007FB55A5DB65A6C91C7FC14FC222E7FAD27>68 D<903807F03890381FFC
7C90387FFFFC90B5FC5A3803FC1F3807F00F380FE007EBC003001F13011380123F90C7FC
A2127EA2157892C7FC5AA8EC1FFF4A1380A3007E6D1300EC00FCA36C1301A21380121FEB
C003120FEBE0073807F00F3803FC1F6CB5FC7EEB7FFE90381FFC78D907F0C7FC21307DAE
27>71 D<007FB512E0B612F0A36C14E039001F8000B3B2007FB512E0B612F0A36C14E01C
2E7BAD27>73 D<387FFFC080B5FC7E5CD803F0C8FCB3AAED0780ED0FC0A7007FB6FCA2B7
FC7E1680222E7FAD27>76 D<D87FE0EB7FE0486CEBFFF0A26D5A007F15E0000F150001B8
13DFEBBC03A3EBBE07019E139FA3EB9F0FA2018F131FA2149FA2EB879EA4EB839C14FCA3
EB81F8A2EB80F01400AAD87FF0EBFFE0486C4813F0A36C486C13E0242E7FAD27>I<EBFF
FC0007EBFF80001F14E0A24814F0EBC00F397F8007F8EB0003007E1301A348EB00FCB3A7
6C1301007E14F8A3007F1303EB8007393FE01FF090B5FC6C14E0A200071480C6EBFC001E
307CAE27>79 D<3A7FFC03FFE06D5A00FF15F0007F15E0497E3A07F000FE0000035CEBF8
0100015CA2EBFC0300005CEBFE07017E5BA26D485AA290381F9F80A3010F90C7FCA2EB07
FEA26D5AA26D5AAF90381FFF80497FA36D5B242E7FAD27>89 D<387FFFF0B512F8A314F0
00FCC7FCB3B3ACB512F014F8A36C13F0153A71B327>91 D<387FFFF0B512F8A37EEA0001
B3B3ACEA7FFFB5FCA36C13F0153A7EB327>93 D<3803FFC0000F13F04813FC4813FF8113
80EC1FC0381F000F000480C71207A2EB0FFF137F0003B5FC120F5A383FFC07EA7FC01300
12FE5AA46C130F007F131FEBC0FF6CB612806C15C07E000313F1C69038807F8022207C9F
27>97 D<EB0FFF017F13C048B512E04814F05A380FF807EA1FE0393FC003E09038800080
48C8FC127EA212FE5AA67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5
FC6C14E06C14C06C6C1300EB0FF81D207B9F27>99 D<EC3FF04A7EA3143F1401A9EB0FE1
EB7FFD48B5FC5A5A380FF83F381FE00F383FC007EB8003EA7F00007E1301A212FE5AA67E
007E1303A2127F6C1307EB800F381FE01F380FF03F6CB612C06C15E06C13FD38007FF9D9
1FE013C0232E7EAD27>I<153F90391FC0FF80D97FF313C048B612E05A4814EF390FF07F
873A1FC01FC3C0EDC000EB800F48486C7EA66C6C485AEBC01FA2390FF07F8090B5C7FC5C
485BEB7FF0EB1FC090C9FCA27F6CB5FC15E015F84814FE4880EB8001007EC7EA3F80007C
140F00FC15C0481407A46C140F007C1580007F143F6C6CEB7F009038F807FF6CB55A0007
14F86C5CC614C0D90FFCC7FC23337EA027>103 D<130F497E497EA46D5A6DC7FC90C8FC
A7383FFF80487FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>105
D<143C147E14FFA4147E143C1400A73801FFFE4813FFA37EC7123FB3B0147E1238007C13
FE38FE01FC1303B512F814F06C13E06C13803807FE0018407CAE27>I<387FFF80B57EA3
7EEA000FB3B2007FB512F8B612FCA36C14F81E2E7CAD27>108 D<387FE07F39FFF1FFC0
01F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A3
6C018313E024207F9F27>110 D<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391F
C00FE0393F8007F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303
393F8007F0A2391FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F
27>I<387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49EB3F8049131F16C0
49130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038FF83FEECFFFC5D5D
01F313C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>I<397FFC03FC39FF
FE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004AC7FC5C
A291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>114 D<127812FCB3B3B3A21278
063A70B327>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr7 7 58
/Fe 58 123 df<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA212
1C123CA35AA512F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E0
136013301318130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013
E0120013F0A213701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E01201
13C0EA0380A2EA0700120E120C5A5A5A5A0F3B7DAB1A>I<1238127C12FE12FFA2127F12
3B1203A31206A3120C121812381270122008127B8613>44 D<B5FCA410047F8E16>I<12
38127C12FEA3127C123807077B8613>I<EB3F803801FFF03803E0F83807803C48487E00
1E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C
131E6C6C5A3803E0F86CB45A38003F801B277EA521>48 D<13381378EA01F8121F12FE12
E01200B3AB487EB512F8A215267BA521>I<13FF000313E0380E03F0381800F848137C48
137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7
FC5B5B903870018013E0EA0180390300030012065A001FB5FC5A485BB5FCA219267DA521
>I<13FF000313E0380F01F8381C007C0030137E003C133E007E133FA4123CC7123E147E
147C5C495AEB07E03801FF8091C7FC380001E06D7E147C80143F801580A21238127C12FE
A21500485B0078133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1438A2
147814F81301A2130313071306130C131C131813301370136013C012011380EA03005A12
0E120C121C5A12305A12E0B612E0A2C7EAF800A7497E90383FFFE0A21B277EA621>I<00
18130C001F137CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E
0078001C7F0018133EC7FC80A21580A21230127C12FCA3150012F00060133E127000305B
001C5B380F03E03803FFC0C648C7FC19277DA521>I<EB0FE0EB3FF8EBF81C3801E00638
03C01F48485AEA0F005A121E003E131E91C7FC5AA21304EB3FC038FCFFF038FDC078B4C6
7E143E48131E141FA2481480A4127CA4003C1400123E001E131E143E6C133C6C6C5A3803
C1F03801FFC06C6CC7FC19277DA521>I<1230123C003FB512E0A215C0481480A2397000
07000060130E140C48131C5C5CC75A5C1301495AA249C7FC5B130E131EA3133E133CA213
7CA413FCA813781B287DA621>I<137F3803FFE0380781F8380E007C48131E5A801278A3
127C007E131EEA3F80EBE03C6C6C5A380FFCF03807FFC06C5BC613E0487F38079FFC380F
07FEEA1E0348C67E48133FEC1F8048130FA21407A315001278140E6C5B6C5B380F80F038
03FFE0C66CC7FC19277DA521>I<137F3801FFC03807C1E0380F0070001E1378003E7F00
3C133E007C131EA200FC131FA41580A4007C133FA2123C003E137F121E380F01DF3807FF
9F3801FE1FD8001013001300A2143E123C007E133CA25C5C007C5B383003C0381C0780D8
0FFFC7FCEA03F819277DA521>I<140EA2141FA34A7EA3EC6FC0A2ECEFE014C7A2903801
83F0A390380301F8A201067F1400A249137EA2011C137F01187FA24980013FB5FCA29039
60000FC0A201E080491307A248486D7EA200038115011207D81FC0497ED8FFF890383FFF
E0A22B2A7EA931>65 D<B612E015FC3907F0003F0003EC0FC0ED07E01503ED01F016F8A6
ED03F016E01507ED1FC0ED7F0090B512FC819039F0003F80ED07E0ED03F0ED01F8ED00FC
A2167EA616FCA2ED01F8ED03F0ED07E00007EC3FC0B7120015F827287EA72E>I<91387F
C002903903FFF80690390FE01E0E90383F0007017CEB019ED801F0EB00FE4848147E4848
143E5B000F151E48C8FC48150E123EA2007E1506A2127C00FC1500A8127C007E1506A212
3EA2003F150C7E6C7E000715186D14386C6C14306C6C1460D8007CEB01C0013FEB038090
390FE01E00903803FFF89038007FC0272A7DA82F>I<B612F015FE3A07F0003F800003EC
07C0ED01F06F7E167C82A282EE0F80A3EE07C0A317E0A917C0A2160F1780A2EE1F00A216
3E5E5E4B5AED07E00007EC3F80B600FEC7FC15F02B287EA732>I<B712F0A23907F00007
0003EC00F816781638A21618A3160C1560A21600A215E0A2140390B5FCA2EBF0031400A2
1560A21606A2ED000CA4161C16181638A21678ED01F80007EC07F0B7FCA227287EA72D>
I<91387FC002903903FFF80690390FE01E0E90383F0007017CEB019ED801F0EB00FE4848
147E4848143E5B000F151E48C8FC48150E123EA2007E1506A2127C00FC92C7FCA792387F
FFE0127C007E02001300167E123EA2123F7E6C7E6C7EA26C7ED801F814FEEA007C013FEB
039E90390FE00F0E903903FFFC029026007FE0C7FC2B2A7DA833>71
D<B539C07FFFE0A23B07F80003FC006C486D5AAF90B6FCA29038F00001B1486C497EB539
C07FFFE0A22B287EA731>I<90B512C0A2903801FE006D5AB3A9123812FEA3130100FC5B
387803F000705B383C0FC0D80FFFC7FCEA03FC1A297EA722>74 D<B539C001FFF0A2D807
F8C7EA7F806C48EC7C00167816E04B5A4B5A4BC7FC151E15385D5D4A5A4A5A020FC8FC5C
4A7E4A7EECEFE0EBF1CF9038F787F09038FE03F8496C7E13F8496C7E157F6F7EA26F7E6F
7E6F7EA26F7E6F7E6F7E82486C491380B5D8C00713F8A22D287EA733>I<B512E0A2D807
F8C8FC6C5AB3A416C0A315011680A31503A21507150FED3F00000714FFB7FCA222287EA7
29>I<D8FFF0EDFFF06D5C0007EEFE0000035E017CEC037CA26D1406A26D140CA36D6C13
18A26D6C1330A36D6C1360A26D6C13C0A3903900F80180A291387C0300A2EC3E06A36E5A
A2EC0F98A3EC07F0A26E5AEA0780D80FC015FE3CFFFC01C01FFFF0A234287DA73C>I<EC
7FC0903803FFF890381FC07F90393E000F8001F8EB03E048486D7E48486D7E4848147C48
4880A248C87E481680003E150F007E16C0A2007C1507A200FC16E0A9007EED0FC0A36CED
1F80A26C16006D5C6C6C147E0007157C6C6C5C6C6C495AD800FCEB07E0013EEB0F809026
1FC07FC7FC903807FFFC9038007FC02B2A7DA833>79 D<B612E015FC3907F0003F0003EC
0FC0ED03E0ED01F016F8150016FCA616F8150116F0ED03E0ED0FC0ED3F0090B512FC15E0
01F0C8FCAF487EB512C0A226287EA72D>I<B67E15F03907F000FC0003143FED0F806F7E
82150382A55E15075E4B5A033FC7FC15FC90B512F0A29038F001FCEC007F6F7E151F8215
0FA71730A3923807E070486C1560B539C003F0E0923800FFC0C9EA3F002C297EA730>82
D<90387F80203903FFF06039078078E0380E000E481307481303007813010070130012F0
A21560A27E1500127C127FEA3FE013FF6C13F06C13FC000313FFC61480010F13C0010013
E0EC0FF014031401EC00F8A200C01478A46C1470A26C14F06C14E06CEB01C000EFEB0780
39E3E01F0038C0FFFC38801FF01D2A7DA825>I<007FB7FCA23A7E003F003F0078150F00
7081006081A200E01680481501A5C791C7FCB3A64A7E013FB5FCA229287EA72F>I<B539
C007FFE0A2D807F8C7EA7E006C48143C1618B3A816386C6C143016706C6C1460017C14E0
017E495A6D495A90260F8007C7FC903807E03E903801FFF89038003FC02B297EA731>I<
B56CEBFFF8A2D807F8C7EA1FC06C48EC0F00160E6C7E160C6D141C00001518A2017E5CA2
017F14706D146080011F5CA26D6C485AA2ECE003010791C7FC14F001031306A2ECF80E01
01130CECFC1C01001318A2EC7E30A2EC7F70EC3F6015E06E5AA26E5AA36EC8FCA22D297F
A731>I<13FE3807FFC0380F03E0381C00F0003E1378003F137C143C143E121EC7FCA3EB
3FFEEA01FF3807F03EEA1FC0EA3F00127EA2481418A3147E127EECDF38393F838FF0390F
FE0FE03903F807C01D1C7E9A21>97 D<EA0F8012FFA2121F120FAAEB81FCEB8FFF9038BC
0FC09038F003E09038C001F0EB800015F815FC157CA2157EA7157CA215FC15F89038C001
F015E090387003C0390E3C0F80390C0FFF00380003F81F297EA725>I<EB3FC0EBFFF838
03E03C3807C00E380F801F381F003F123EA2007E131E007C1300A212FCA7127C127E1403
123E6C1306EA0F803807C00C3803F0383800FFE0EB3F80181C7E9A1E>I<EC03E0143FA2
14071403AAEB3F833801FFE33803E03B3807800F380F0007481303123E127E127CA212FC
A7127CA2127E123E001E1307001F130F390F801FF03903E073FE3801FFE339007F03E01F
297EA725>I<133F3801FFE03803E1F0380F80F8381F007C143E123E007E131E141F127C
12FCA2B6FCA200FCC7FCA4127C127E1403123E6C1307380F800E3807C01C3803E0783800
FFE0EB3F80181C7E9A1E>I<EB07E0EB3FF0EB7C78EBF0FCEA01E01203EBC07800071330
1400A8B51280A23807C000B3A2487EEA7FFEA216297FA815>I<90387E03E03901FF9FF0
3807C3FC380F00F048EBF800001E1378003E137CA6001E1378001F13F86C5BEBC3E0380D
FF80D81C7EC7FC90C8FCA3121E380FFFF014FC6C13FF001F1480393E001FC000781307EC
03E0481301A40078EB03C0007C13076CEB0F80390FC07E003803FFF838007FC01C277E99
21>I<EA0F8012FFA2121F120FAAEB81FCEB8FFF90389C0F809038B007C013E09038C003
E0A31380AF391FC007F039FFF83FFEA21F287EA725>I<120EEA3F80A5EA0E00C7FCA7EA
078012FFA2121F120FB3121FEAFFF8A20D287EA713>I<EA0F8012FFA2121F120FABEC3F
F8A2EC1FC01500143C5C14E0EB81C0EB8380018FC7FCEB9F8013BFEBF7C0EBC3E0EB81F0
801380147C80143FEC1F80EC0FC0D81FC013E039FFF83FFCA21E287EA723>107
D<EA0F8012FFA2121F120FB3AFEA1FC0EAFFF8A20D287EA713>I<260F81FC137F3BFF8F
FF03FFC0903A9C0F8703E03B1FB007CC01F0D80FE013D8903AC003F000F8A301805BAF48
6C486C487E3CFFF83FFE0FFF80A2311A7E9937>I<380F81FC38FF8FFF90389C0F80391F
B007C0EA0FE09038C003E0A31380AF391FC007F039FFF83FFEA21F1A7E9925>I<EB3F80
EBFFE03803E0F83807803C48487E001E7F003E1480A248EB07C0A300FC14E0A7007C14C0
A2007E130F003E1480001E1400001F5B380F803E3803E0F86CB45A38003F801B1C7E9A21
>I<380F81FC38FF8FFF9038BC0FC0391FF007E0390FC003F0EB800115F8EC00FCA2157C
157EA7157C15FCA2EC01F801C013F0EC03E09038F007C09038BC1F8090388FFF00EB83F8
0180C7FCA7487EEAFFF8A21F257E9925>I<90383F80603901FFE0E03803F0703807C019
380F800D381F00075A007E1303A2127C12FCA7127C127EA27E6C1307EB800F380FC01B38
03E0733801FFE338007F031300A7EC07F0EC3FFEA21F257E9923>I<380F07C038FF1FF0
EB38F8EA1F71EA0F6113C1EBC0F014005BAF487EEAFFFCA2151A7E991A>I<3803F84038
0FFEC0EA3C07EA7803EA7001EAF000A37E6C1300EA7FC013FC6CB4FC6C1380000713C0C6
13E0130738C003F0130113007EA26C13E0130100F813C038EE078038C7FF00EA81FC141C
7E9A1A>I<13C0A41201A312031207120F121FB512E0A23807C000AC1430A73803E060A2
3801F0C03800FF80EB3F0014257FA31A>I<390F8003E000FF133FA2001F1307000F1303
B01407A20007130F9038C01BF03903E073FE3801FFE339007F83E01F1B7E9925>I<39FF
F807FEA2390FE001F001C013E0000714C013E000031480EBF00300011400A23800F806A2
EB7C0CA2EB7E1CEB3E18A26D5AA2EB0FE0A36D5AA26D5AA21F1A7F9823>I<3BFFF8FFF0
7FE0A23B1FC01FC01F80000F90390F800E00A20007150CEC1FC02603E01B5B15E0143B26
01F0315B15F0D9F86013700000156015F89039FCC078E0017CEB7CC0137D90393F803D80
153FEC001F6D91C7FCA2011E7F010E130EA22B1A7F982F>I<39FFF81FFCA2390FF00FE0
D807E01380D803F013003801F80E00005BEB7C386D5AEB3FE06D5A130F130780497EEB1D
F8EB38FCEB707EEBE03E48487E0003EB0F80000714C0001F14E039FFE01FFEA21F197F98
23>I<39FFF807FEA2390FE001F001C013E0000714C0EA03E01580EBF003000114006D5A
0000130613FCEB7C0CA26D5AA26D5AA214F06D5AA26D5AA26D5AA291C7FCA213061230EA
780EEAFC0C131C1318485AEA70E0EA3FC06CC8FC1F257F9823>I<383FFFFEA2383E00FC
EA3801003013F8387003F0EB07E0EA600F14C0EB1F8038003F00137E13FE5B3801F806EA
03F0EA07E0120FEBC00E381F800C383F001C5A007E137CB512FCA217197E981E>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmr5 5 1
/Ff 1 50 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi9 9 9
/Fg 9 122 df<123C127E12FFA4127E123C08087A8715>58 D<1530157815F8A215F014
01A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8A25C13
01A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201
A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D
4B7CB726>61 D<16035E5EA24C7EA2163F167FA216FFA2ED01BFED033F831506161F150C
1518A215301570156015C083EC01800203130F15001406A25C141C14184A80A2027FB5FC
91B6FCA2903901800007A249C7FC1306835B16035B5B1370136013E01201D807F04A7EB5
49B512F0A25B34367DB53A>65 D<010FB612F017FEEFFF80903B003FC0003FE0EF0FF017
074B14F81703027F15FCA292C7FCA25C18F84A140718F00101150F18E04AEC1FC0EF3F80
0103ED7F00EE01FE4AEB07F891B612E04915809139F8001FF04AEB03FCEE00FE010F157F
A24AEC3F80A2011F16C0A25CA2133F18804A147FA2017FEDFF005F91C712014C5A494A5A
4C5A49EC3FE00001913801FF80B748C7FC16F816C036337DB23A>I<D801E001FEEB07F0
3C07F803FF801FFC3C0E3E0F07E0783F001C903B3C03F1E01F803C181F7001F3800F0038
01E0EBF70026303FC001FE14C01270006001805B02005B0303141FD8E07F4A1480EA407E
12000307143F01FE1700495C60030F147E1201494A13FEF0FC04031F150E00030401130C
49028013F8191C033F01031318000717F04902001438050113704B15E0000F933800F1C0
49017EEC7F80D80380011CEC1E003F227EA044>109 D<011F131F90397FC07FE09039E3
E1E0F09039C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB03F0163FEA0707
120600025B1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A291380003F016E0
491307ED0FC002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F80000190C8FC
A25BA21203A25BA21207A25BB57EA3283083A027>112 D<EB0380EB0FC0A3131FA21480
A2133FA21400A25BA2137E387FFFFEA2B5FC3800FC00A21201A25BA21203A25BA21207A2
5BA2120FA25B1408001F131C14181380143814701460EB00E0EB01C0380F8380EB8700EA
07FEEA01F817307FAE1C>116 D<90391F801F8090397FE07FE09039E0F0E0703A01C0F9
C0F83903807D833807007F000E1403000C15F0001C137E0018EC01C002FEC7FC00385B12
10C7FC13015CA31303A25C1640010714E016C0001C5B007E1401010F148000FE1403011F
EB0700011B130E39F839F01C397070F878393FE07FE0390F801F8025227EA02C>120
D<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C003813800030140F013F14C00070
1300126049131FD8E07E14801240EA00FE49133F000115005BA25D0003147E5BA215FE5D
5BA214015DEBF00314070001130F3900F83FF0EB3FFBEB0FC3EB00075DA20007130FD81F
805B003F495AA24AC7FCEB007E003E137C00385B381803F0381E07C0D807FFC8FCEA01F8
23317EA026>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr6 6 1
/Fh 1 50 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx9 9 24
/Fi 24 119 df<EC07FF91B512E001078090391FFC01FC90383FE0009039FFC001FE48EB
80031400484A7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA43903FE0001B3A7277FFF
F03F13F8A42D347FB331>12 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C
7A8B19>46 D<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F158702
1F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131F
A249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC824915
7FB500F0013FB512F0A43C347DB343>65 D<DBFFE01338021F01FE137891B6EA80F80103
15E1010F9038E00FF7903A1FFE0001FFD97FF8EB007FD9FFE0143F4849141F4849140F48
90C81207485A1703485A1701123F5B007F1600A349160012FFAB127F7F1878A2123F7F00
1F17F818F06C7E6D15016CEE03E06C7F6C6DEC07C06C6DEC0F80D97FF8EC3F00D91FFE14
FE903A0FFFE007FC010390B512F0010015C0021F49C7FC020013F035357BB340>67
D<B812FEA4C69038E0000FEE01FF82838383A283A3DB01E013801707A4030390C7FCA215
07151F91B5FCA4ECE01F1507150318F01501A2EF01E0A392C7FCA21703A2EF07C0A2170F
171F173F17FF1607B91280A434337DB23A>69 D<B812FCA4C69038E0001FEE03FE160116
00177E173EA2171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F15
07A21503A592C8FCABB612F8A430337DB238>I<B500E093387FFFF86E93B5FCA26E5DC6
F1F800D9F7FCED03DFA3D9F3FEED079FA2D9F1FFED0F1FA201F06D141EA26E6C143CA26E
6C1478A26E6C14F0A36E6CEB01E0A26E6CEB03C0A26E6CEB0780A26E6CEB0F00A26EEB80
1EA26F6C5AA36F6C5AA26F6C5AA292380FF9E0A26FB45AA26F5BA26F90C7FCA3B526F000
FE011FB512F8A2167C16384D337DB254>77 D<B712F8EEFF8017E017F8C69039E0007FFC
EE0FFE707E701380A27013C0A218E0A718C0A24C1380A24C13004C5AEE7FFC91B612F017
C04CC7FC02E0C9FCB3B612E0A433337DB23C>80 D<B600E090B512F8A4C601E0C8EAF800
B3B0017F15016E5DA2013F4B5A6E1407011F5E6D6C140F6D6CEC3F806D6C6C01FFC7FC6D
9038F007FE6D6CB512F8021F5C020714C09126007FFCC8FC3D347DB244>85
D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF806E138016C0157F6C5A6C5AEA01
80C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA1FF8485A485A485A5BA315FF7F
007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F39007FE00728217EA02B>97
D<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2007F6D
5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807FE133E
3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>99 D<ED01FC15FFA4150F1507
ADEB07FE90383FFFC790B512F70003EB01FF3907FC003F4848131F4848130F48481307A2
127F5BA212FFA9127FA27F123F150F6C6C131F6C6C133F6C6C497E2603FE03B512E0C6B5
12E7013F1387903807FC072B347DB331>I<903803FF80013F13F090B512FC48EB03FE39
07FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF150790B6FCA301C0C8
FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01FF807F806C6CB512
00011F13FC010313E024217EA029>I<16F890390FFC07FE90387FFF9F48B6127F3907FC
0FFC380FF003001F14FED9E001133E003FECFF1C1600A6001F5CEBF003000F5C3907FC0F
F890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F06C
15F84815FC121F393F80001F48C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB07
F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C>103
D<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A4
12357DB418>105 D<EA01FC12FFA4120F1207B3B3A6B512E0A413347DB318>108
D<3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC06CB4486C7E
1400A25BA25BB2B539E07FFFF0A42C217DA031>110 D<903803FF80011F13F090B512FE
48EB01FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300
FF15FEA8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF
01FF006CEBFFFE013F13F80103138027217EA02C>I<D903FC133C90393FFF807C90B5EA
E0FC0003EB81F83907FE007D4848133F4848131F4848130FA248481307A3485AA96C7EA3
6C7E150F6C6C131F000F143F6C6C13FF3903FF03F7C6EBFFE7013F1387903807FC0790C7
FCAB92B512E0A42B307DA02F>113 D<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038
FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024>
I<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C
13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA26C14E0
6C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133CA5137C
A313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE07801203
3901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA4000F140700
071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807FE032C21
7DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2ECC007
017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFEF80103
5B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmti9 9 57
/Fj 57 123 df<923803FF80031F13F092383F00F803F8133C4A48133E4A48137E17FE4A
5A17FC17384A481300A3141F92C8FCA55C143E011FB612E0A217C09039007E0007147C16
0F1780A214FC4A131F1700A301015C4A133EA3167E0103147C5C1718EEFC1CEEF83C0107
15385C1778177016F0010F15F04AEBF8E01679EE3FC0011FEC0F0093C7FC91C9FCA3133E
A21238EA7E3C137CEAFE7812FC485AEA79E0EA3FC0000FCAFC2F4582B42B>12
D<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A
5A5A0B176FB318>39 D<1560EC01E0EC03C0EC0700140E5C143C5C5C495A495A13075C49
C7FC5B131E5B137C137813F85B12015B12035B1207A25B120FA290C8FC5AA2121E123EA3
123C127CA31278A212F8A35AAF12701278A21238A2123C121CA27EA27E6C7E12011B4A75
B71F>I<14301438A28080A2140F801580A2140315C0A4140115E0A81403A415C0A31407
A31580140FA315005CA3141E143EA2143C147CA25CA25C13015C13035C13075C130F91C7
FC131E133E133C5B5B485AA2485A485A48C8FC121E5A12705A5A1B4A7EB71F>I<EA0380
EA0FE0121FA5EA0760120013E013C0A2120113801203EA07001206120E5A5A5A5A5A0B17
7A8718>44 D<B51280A46C1300110579911B>I<121C127F12FFA412FE12380808778718>
I<17E0EE01F0A2EE03E0A2EE07C0160F1780EE1F00A2163EA25EA25E15015E4B5AA24B5A
A24B5A151F93C7FC153EA25DA25DA24A5A14035D4A5AA24A5AA24AC8FCA2143E147E147C
5CA2495AA2495A13075C495AA249C9FCA2133EA25B13FC5B485AA2485AA2485AA2485A12
1F90CAFC123EA25AA25AA25A5A2C4B7EB727>I<EC1FC0EC7FF0903801E0F8903807C03C
EB0F00011E131E133E013C131F5B13F85B1201A2485AA20007143F5BA2120F153E49137E
121FA348C712FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F
00A2141E5C0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>
I<EC01801403A21407140FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA214FCA2
5CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA291C7FCA25BA2133EA2137E
A2137C13FCB512FCA3193277B127>I<D9E0F81338EBE3FC2601EFFE137801FF14F048EC
01E09038FE0E03D807F814C09039F0060F80390FC0071F90398003FF00391F0001EF001E
EB001E003E5C123C485C15F8485C4813015DC712034A5AA24A5AA2141F92C7FC5C143E14
7EA25CA2495AA3495AA213075CA2130F5CA2131FA25C133FA391C8FCA2131C253476B127
>55 D<EC07E0EC3FFC4A7E903801F81F903903E00F809038078007D90F0013C049130313
1E5BA21507017C1480A2150F1600017E131E017F133E6E5A6D6C5AECE1E090381FFBC06D
B4C7FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C7E3807C007EB8003380F00
01001E1300123E003C1478127C1278A215F800F85C5A6C495A007813035D007C495A003C
011FC7FC003E133E381F81FC380FFFF0000313C0C648C8FC223479B127>I<EC0FC0EC7F
F0ECFFFC903803F07E903807C03E49487EEB1F00013E7F017E14805BA2485AA2485A151F
A212075BA2ED3F00A2485A5DA2000714FEA21401140300035CEBE0070001130E3900F03D
F8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E133E00FE137E5C48
485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127>I<161C163CA216
7C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0EC01C0A2913803
807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7EA1F80A2130E
131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFEA32F367BB539
>65 D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121FA24A15C0A2147E
A214FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB1FC091B6C7FC49
5C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA2133F5F91C71203A2
494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB612F0B712C04BC8
FC32337BB236>I<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003CF
9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A48
48153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F12
7E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8FC
6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>I<0107B612C04915
F017FC903A003F8001FEEE007FEF1F8092C7EA0FC0EF07E05CEF03F0147E170102FE15F8
A25CA21301A25CA2130317035CA2130718F04A1407A2130F18E04A140F18C0011F151F18
805CEF3F00133F177E91C85AA2494A5A4C5A017E4A5A4C5A01FE4A5A047EC7FC49495A00
01EC0FF8007FB612E0B7C8FC15F835337BB23A>I<0107B712F05B18E0903A003F80001F
1707170392C7FC17015C18C0147EA214FEA24A130EA20101EC1E03041C13804A91C7FC16
3C13035E9138F001F891B5FC5B5EECE0011500130F5E5C1707011F01015BEEC00E028014
1E92C7121C133F173C91C812381778495DA2017E14014C5A01FE14074C5A49141F00014A
B45A007FB7FCB8FC94C7FC34337CB234>I<0107B712E05B18C0903A003F80003F170F17
0792C7FC17035C1880147EA214FEA25C161C0101EC3C07043813004A91C7FCA201031478
16704A13F0150349B5FCA25EECE003130F6F5A14C0A2011F13035E1480A2013F90C9FCA2
91CAFCA25BA2137EA213FEA25B1201387FFFFCB5FCA233337CB232>I<92391FE0018092
38FFF8030207EBFE07913A1FF01F0F0091393F80079F9139FE0003DFD901F86DB4FCD907
F05C49481300495A4948147E49C8127C137E13FE485A48481578A2485AA248481570A248
5A94C7FC123F5BA3127F90CBFCA400FE91383FFFFCA25F9238003F8094C7FCA2007E5DA2
167EA2007F15FE7E5E6C6C1301A26C6C495A6D13076C6CEB0F786C6C133E3A00FF01FC30
90387FFFF0011F01C0C8FCD903FEC9FC313775B43B>I<0107B548B512C0495CA2903C00
3FC0000FF0004B5CA292C75BA24A141F60147EA202FE143F95C7FC5CA201015D177E5CA2
010315FE5F5C91B6FC5B5F9138E00001A2010F14035F5CA2011F14075F5CA2013F140F5F
91C7FCA249141F5F137EA201FE143F94C8FC5B00015D3B7FFFF01FFFFCB55BA23A337BB2
39>I<010FB51280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA21301A25C
A21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA2
5B1201B512F8A25C21337BB21E>I<91381FFFFE5C16FC9138003F80A31600A25D157EA3
15FE5DA314015DA314035DA314075DA3140F5DA3141F5DA3143F92C7FCA2121C007E5B00
FE137EA214FE485BEAF80100E05B495A387007E038780FC06C48C8FCEA1FFCEA07F02735
79B228>I<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147EA214FEA25CA213
01A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603013F1580160791
C7FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6FCB7FC5E2B337C
B230>76 D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED077CA2027BED0E
FC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC0383EF07030103
1607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090C7FC130EEE0380
011E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816FC6F485B1370ED
3FC001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB3C01151C46337BB2
45>I<ED1FE0913801FFFC913807E03F91391F800FC091393E0003E002F8EB01F0495A49
48EB00F8494814FC4948147C49C8127E133E017E153E49153F485AA2485A12075B120F5B
121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A217F0160717E0160F007E16C0EE1F
80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A0007EC1F806C6C013EC7FCD801F813
FC39007E07F090383FFF80D907FCC8FC303775B43B>79 D<0107B612C04915F883903A00
3F8001FEEE003FEF1F8092C713C0170F5C18E0147EA214FEEF1FC05CA201011680173F4A
1500177E010315FE5F4AEB03F8EE07E00107EC3FC091B6C7FC16F802E0C9FC130FA25CA2
131FA25CA2133FA291CAFCA25BA2137EA213FEA25B1201387FFFF0B5FCA233337CB234>
I<0107B512FE49ECFFC017F0903A003F8007F8EE01FCEE007E92C7127F835C1880147EA2
14FEEF7F005CA2010115FE5F4A13015F01034A5AEE0FC04A495A04FEC7FC49B512F016C0
9138E003E0ED01F8010F6D7E167C4A137EA2131FA25CA2013F14FEA291C7FCA24913015E
137EEF01C001FE150318805B00011607277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07
E032357BB238>82 D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF00
49487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E14
E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2001E
5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC000
F0B5C8FC38E03FFC38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F260F
C001141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E127800705C
A2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FEA25C
A21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<3B3FFFF801
FFFE485CA2D801FEC7EA1FC049EC0F80170049140EA2161E120349141CA2163C12074914
38A21678120F491470A216F0121F495CA21501123F90C75BA215035A007E5DA2150712FE
4892C7FCA25D150E48141E151C153C153815786C5C5D007C1301007E495A003EEB0F806C
011EC8FC380FC0FC6CB45A000113E06C6CC9FC2F3570B239>I<B500C090383FFF80A3D8
07F8C73807F80049EC03E05F00034B5A94C7FC5E160E5EA25E167816705E7F00014A5A15
035E4BC8FCA2150E151E151C5D7F5D000014F05D4A5AA24A5AA24AC9FC140EA26D5A137E
5C147814705CA2EB7FC0A25C91CAFCA2133EA2133C1338313570B239>I<B53CC03FFFF0
03FFF8601480280FF00001FCC7EA7F806C484AEC3E00193CA219386115036115074E5A03
0F140361031D4AC7FCA2DB38FC130EA203705C15F06C6C01E05C140103C05CDA038014F0
60DA0700130160020E4A5AA24A4AC8FCA24A140E147802705C5C5FD9F1C014781770D9F3
805CA201F7C7EA7FC0A201FE5DA26C4892C9FCA249147E5B167C5B1678491470453570B2
4D>I<EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0
A2381F800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E
147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003
C0202278A027>97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EB
C3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F
1580127CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0F
FCEA03F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0
073807E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0
A2EC03C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0
EC03FFA21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB
3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A
007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03
133C393E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB
3E0F9038F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03
F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C
13F8380F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03
E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7
FC147CA414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238
EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803
E1E6903807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215
FC12074913F8A21401A2D80FC013F0A21403120715E01407140F141F3903E03FC0000113
7FEBF0FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B4848
5A387803E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA3
91C8FCA25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8
EC007849137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0
C048ECC1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07
F80070EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA
03FCEA0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA21203
5BA2000713C0EBC1E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013
337AB118>I<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA2137CA213FCA2
491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1C01C9038E3
8000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F81300150C48141E15
1C123EA2007E143C1538127C157800FCEB787015E048EB3FC00070EB0F8020357BB323>
107 D<133FEA07FF5A13FEEA007EA3137CA213FCA213F8A21201A213F0A21203A213E0A2
1207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2127C1318EAFC1C133CEA
F838A21378137012F013F0EAF8E01279EA3FC0EA0F00103579B314>I<2703C003F8137F
3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F8F01F03B3C3DE0079E0026383FC001
FC7FD97F805B007001005B5E137ED8F0FC90380FC00100E05FD860F8148012000001021F
130360491400A200034A13076049013E130FF081800007027EEC83C0051F138049017C14
03A2000F02FC1407053E130049495CEF1E0E001F01015D183C010049EB0FF0000E6D48EB
03E03A227AA03F>I<3903C007F0390FF01FFC391E787C1E391C7CF01F393C3DE00F2638
3FC01380EB7F8000781300EA707EA2D8F0FC131F00E01500EA60F8120000015C153E5BA2
0003147E157C4913FCEDF8180007153C0201133801C013F0A2000F1578EDE070018014F0
16E0001FECE1C015E390C7EAFF00000E143E26227AA02B>I<14FCEB07FF90381F07C090
383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814F8
127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F038
0F83E03803FF80D800FCC7FC1E2278A027>I<011E137C90387F81FF9039F3C387C09039
E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA07871307000313C0
1200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017EEB3F00
017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA21203A2
5BA21207A25BB5FCA325307FA027>I<903803F01890380FF83890383E1C7890387C0EF8
9038F807F0EA01F0EA03E000071303D80FC013E0A2EA1F801407D83F0013C0A348130F00
7E1480A300FE131F481400A35C143E147E127C14FE495AEA3C03EA3E07EA1F0E3807FCF8
EA01F0C7FC13015CA313035CA21307A25C48B5FCA25C1D3078A023>I<3903C00FC0390F
F03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E13701500
EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC
120E1E227AA020>I<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2
EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3
147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303
EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25B
A21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB
07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C
123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA21401
00035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC300
0190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F01338D803FC
13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60FCC65A15
78000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA26C6C5A38
00F878EB7FE0EB1F801E227AA023>I<D801F01538D803FC010E13FCD80F1E131E000E14
3E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338EA60FCC65A
0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013C00207EB03
80A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03FF090390FC0
0FC02E227AA033>I<13F0D803FC1307D80F1E130F000E141F121C123C0038143FD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314F013E0A2
140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEFEB1F8FEB
001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C1FC7FCEA0F
FCEA07F020317AA025>121 D<903807801C90381FE03C90383FF038017F13789038FFF8
F03901F07CE0EBE01F3903C003C09038800780EC0F00C7121E141C143C5C5C495AEB07C0
495A011EC7FC5B5B4913704913F0000114E0485A38078001390FC003C0381FF80790383E
0F80393C1FFF00127838700FFE38F007F838E001E01E227CA01F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr9 9 81
/Fk 81 124 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306A40003130EEB00
0CA248131C00061318000E1338000C1330001C13704813E0387001C00060138017177EB3
26>34 D<017C1503D803FEED078026078780140F260F01C0141F261E00E0EC3F00003E01
F8147E003C017CEB01FE007C90397F8007FC913933FFFEF800789038307FF900F8903938
0001F00218495A16075F4C5A161F4CC7FC163E5E023813FC007801305B007C4A5AEC7003
003C01605B003E9038E007C0001EEBC00FD80F015C270787801FC8FC3903FE003FD8007C
133E90C748131F03FCEBFF809239F801E1E0913A01F003C07002039038078030DBE00F13
38DA07C0EB0018020F49131C0380140C91381F001E4A013E130E023E15065C14FC495A5C
495A13075C4948150E011F021E130C91C7121F013E161C017E6E1318017CED8038490207
13300001923803C07049913801E1E049913800FF806C48ED1F00373C7CB740>37
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F
90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F12
03A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>I<12C07E127012
3C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB
07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC
120E5A123C12705A5A124A7CB71E>I<156015F0B3A4007FB812C0B912E0A26C17C0C800
F0C8FCB3A4156033327CAB3C>43 D<123C127EB4FCA21380A2127F123D1201A412031300
A25A1206120E120C121C5A5A126009177A8715>I<B512F0A514057F921A>I<123C127E12
FFA4127E123C08087A8715>I<1530157815F8A215F01401A215E01403A215C01407A215
80140FA215005CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495AA2
91C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290
C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B7CB726>I<EB0FE0EB7FFCEB
F83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14
FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F
803900F83E00EB7FFCEB0FE01F347DB126>I<13075B5B137FEA07FFB5FC13BFEAF83F12
00B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E00
7F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123CC7
FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E133C
4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126>
I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013F8
140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014
FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC4813031278
0070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F347D
B126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F130713
0E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A12E0
B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B512
8015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80
EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F8006014
E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D347C
B126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E012
07EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F809038
E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA26C
1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFCEB
0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C7123800601430157015
E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA2130F
A3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907
C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13F0
EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F7
13C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC007E
12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B512
0038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC0
07C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A212
7F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC14
01A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F01
FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B0123C
127E12FFA4127E123C08207A9F15>I<123C127E12FFA4127E123C1200B0123C127E12FE
12FFA3127F123F1203A412071206A3120E120C121C1238123012701260082F7A9F15>I<
007FB812C0B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C>61
D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E0
7FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77E
A24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A33336
7DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17
F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80
EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC0000391
3803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE
01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B48
48157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F
161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB
0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150F
EE03E01601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E
151E150EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812
E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760
150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512
FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF000
3C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C48
5A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F
7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903
FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3
000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335
337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA3
9038003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F0
3803FFC0C690C7FC20357DB227>I<B500FE903807FFF8A3000190C7000113006C48EC00
FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC
0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E70
7E160F83707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<B512FEA3
D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337D
B230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC0
1418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E13
06A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C13
3ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE91381FFFF87F80C6030013
006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E
6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FF
A2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A2
171835337EB23A>I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013F
C76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848
ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17
006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FC
D907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016
F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE
3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<B612
FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A
047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167F
A583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE0
9338003F8036357EB239>82 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF
48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F0
6C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC015
0F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B5
12E0011F138026C003FEC7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC00
3E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA3
30337DB237>I<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530
A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC
91383FFFF0020F13C0020190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7F
C06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA2
6D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070
023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A2
35357EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB00
7C1A386D140F00001930836D020715706D1860A26E496C14E0013F60A26ED919FC130101
1F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170C
A2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5E
A2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207
157EA24B143E0203153CA24B141C020115184C357FB24F>I<B500F8ECFFFEA300030180
EC3FE06C90C8EA1F806CEE0E006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C1601
6D6C5C6D6C49C7FC5E6D6C13065E91387F801C91383FC018163891381FE0306E6C5A16E0
6E6C5AEDF980EC03FF6E90C8FC5D1400B14A7E91B512FCA337337FB23A>89
D<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C0038EC3FC00078EC7F
801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7FCA2495A495AA2
495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A1638485A4848147816
F84848130148481307153FB7FCA326337CB22F>I<EAFFF0A4EAF000B3B3B3ADEAFFF0A4
0C4B79B715>I<0003130C48131C000E133848137000181360003813E0003013C0EA7001
00601380A2EAE00300C01300A400DE137800FF13FCEB83FEA2EA7F81A2383F00FC001E13
78171774B326>I<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>I<EB7F803803FFF0380F
80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07
EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1
E1FF2607FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80EC
FFE09038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16
F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7
FC25357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA
1F80123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14
706C6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3
EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A
127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3F
FCD90FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007
E0381F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418
A26C6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA1
22>I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FC
ACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039
FFF8E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C
5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F
380FFFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F
007C15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA
03F012FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA2
5BA25BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA
0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0EB07E0
EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13E01307
14C0130F007C138038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA312071203AF
913803FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FE
EBFC7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324
347EB329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE0
13FF00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803
FE1470496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>
I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3
486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903
C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500
A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F0
21237EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F80
4914C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F801600
01FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<
903807F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90
C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3F
F8EB0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F
809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>
I<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7F
FC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C
5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201
A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1F
F8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D1201
6D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3
D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360
137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA21460
24217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C81
6C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA2
16C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C
5AA36D481378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C0000
001478017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E
80805B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF00000
0180000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003
EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E001
0F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05C
A2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003F
B512F0A2EB000F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035C
C6485A495AA2495A495A49C7FC153013FE485A12035B48481370485A001F14604913E048
5A387F000348130F90B5FCA21C207E9F22>I<B712F8A22502809426>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx10 10.95 52
/Fl 52 123 df<EDFFF8020F13FF027F8049B612E001079038C01FF090390FFE0007D91F
F8497ED93FE0131F4948497E13FF5C5A91C7FCA2705A705AEE03C093C8FCA6EE03FCB8FC
A50001903880001F160FB3AB007FD9FE03B512F0A534407EBF3A>12
D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E0E798D1D>46
D<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8B712F0A5243C78BB34>
49 D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC0037F4848C67F
486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B1300A25E153F
5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80EB01FC495A
4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4293C7BBB34
>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807F06D7E82D8
0FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B020F5B902607
FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0A217E0EA0F
C0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C495A3A0FFE01
FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F815031507A2150F
151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0EB03E01307
EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB812F8A5C838
7FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90B6FC5E5E5E
5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B67E020113E0
9039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC0487E487E12FF
7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6CB65A6C92C7
FCC614FC013F13F0010790C8FC293D7BBB34>I<EC07FF023F13C049B512F001078049EB
03FC90383FF80090397FE001FE9038FFC0034849487E48495AA2485A120FA2485A6F5A00
3F6E5A6F5A92C8FC485AA21402EC3FFE00FF496C7E01F9B512E001FB809138E03FF89039
FF800FFC4A6C7E825B6F13804915C0A317E05BA4127FA5123FA26D15C0121FA2000F4A13
806D150012076C6C495A6C6D485A6C9038E07FF86DB55A6D5C6D1480010749C7FC010013
F02B3D7CBB34>I<121F7F13F890B712F0A45A17E017C0178017005E5E5A007EC7EA01F8
4B5A007C4A5A4B5A4B5A93C7FC485C157E5DC7485A4A5AA24A5A140F5D141F143F5D147F
A214FF92C8FC5BA25BA3495AA3130FA5131FAA6D5A6D5A6D5A2C3F7ABD34>I<ECFFF001
0713FE011F6D7E017F14E09039FFC07FF03A01FE001FF848486D7E48486D7E1503485A82
81121FA27F7F7F6D5B02C05B14F06C6D485A9138FE0FF89138FF9FF06CECFFE06C5D5E6C
92C7FC6C816D14E0011F80498090B67E48812607FE3F7F48486C1480381FF807D9F00114
C048486C7E007F8049010F13E0150348487F81167FA2163FA36D15C0127FEE7F807F6C6C
ECFF006C6C5B01FEEB07FE3A0FFFC03FFC6C90B55A000115E06C6C5C011F49C7FC010113
F02B3D7CBB34>I<903801FFE0010F13FC013F13FF90B612C04801E07F489038003FF048
486D7E000F6E7E485A6F7E123F48488081178012FFA217C0A517E0A4007F5CA4003F5C6C
7E5D6C7E00075C3903FF80FB6C13FF6C6C13F36D13C3010F018313C090380008031400A2
4B1380EA03F0487E486C1500487E4B5AA25E151F4B5A495C6C48EBFFE049485B2607FC0F
5B6CB6C7FC6C14FC6C14F06D13C0D90FFEC8FC2B3D7CBB34>I<16FCA24B7EA24B7EA34B
7FA24B7FA34B7FA24B7FA34B7F157C03FC7FEDF87FA2020180EDF03F0203804B7E020781
15C082020F814B7E021F811500824A81023E7F027E81027C7FA202FC814A147F49B77EA3
4982A2D907E0C7001F7F4A80010F835C83011F8391C87E4983133E83017E83017C81B500
FC91B612FCA5463F7CBE4F>65 D<B812F8EFFF8018F018FC8426003FFCC7EA3FFF050F13
807113C07113E08319F0A27113F8A719F05FA24D13E019C04D13804D1300EF3FFE933801
FFF891B712E0188018F818FE02FCC7380FFF80050313C07113E07113F019F8F07FFCA2F0
3FFEA219FFA38460A419FE187FA2F0FFFC4D13F85F4D13F0053F13E0BA12C0190018FC18
F095C7FC403E7DBD4A>I<922607FFC0130E92B500FC131E020702FF133E023FEDC07E91
B7EAE1FE01039138803FFB499039F80003FF4901C01300013F90C8127F4948151FD9FFF8
150F48491507485B4A1503481701485B18004890CAFC197E5A5B193E127FA349170012FF
AC127F7F193EA2123FA27F6C187E197C6C7F19FC6C6D16F86C6D150119F06C6D15036C6D
ED07E0D97FFEED0FC06D6CED3F80010F01C0ECFF006D01F8EB03FE6D9039FF801FFC0100
91B55A023F15E002071580020002FCC7FC030713C03F407ABE4C>I<BAFCA4198026003F
FEC7123F1707170183183FA2181FF00FC0A31807EE07C0A3F003E0A3160F95C7FC161F16
3F16FF91B6FCA54AC6FC163F161F040F147CA2160719F8A593C71201A219F01803A21807
A2180FF01FE0183F18FF1703173FBAFCA219C0A33E3D7DBC45>69
D<B912FEA48426003FFEC77E170F1703170084A284F01F80A3180FA2EE07C0A2F007C0A4
040F90C7FCA2161F163F16FF91B6FCA54AC6FC163F161F160FA21607A693C9FCACB712E0
A53A3D7DBC42>I<922607FFC0130E92B500FC131E020702FF133E023FEDC07E91B7EAE1
FE01039138803FFB499039F80003FF4901C01300013F90C8127F4948151FD9FFF8150F48
491507485B4A1503481701485B18004890CAFC197E5A5B193E127FA34994C7FC12FFAB04
07B612FC127F7FA3003F92C7383FFE00A27F7EA26C7FA26C7F6C7FA26C7F6C7FD97FFE15
7F6D6C7E010F01E014FF6D01F813036D9038FF801F010091B512F3023F15C00207ED803E
02009138FE000E030701E090C7FC46407ABE52>I<B7D8803FB612E0A526003FFEC8000F
EB8000B3A491B9FCA54AC8120FB3A7B7D8803FB612E0A54B3E7DBD52>I<B71280A52600
3FFEC7FCB3B3B0B71280A5213E7DBD28>I<B712E0A526003FFEC9FCB3AD183EA4187E18
7CA418FCA21701A2EF03F8A21707170F171F177FEE01FF160FB9FC18F0A4373E7DBD3F>
76 D<B6051FB512C06F5EA26F5EA2D8003F97C7FC6F16F7A26E6CED01E7A26E6CED03C7
A36E6CED0787A26E6CED0F07A26E6C151EA36E6D143CA26E6D1478A26E6D14F0A26F6CEB
01E0A36F6CEB03C0A26F6CEB0780A26F6CEB0F00A36F6C131EA26F6D5AA26F6D5AA26F6D
5AA393387FF1E0A293383FFBC0A270B45AA37090C7FCA2705AA2705AB600C0031FB612C0
A2705AA2705A5A3E7CBD63>I<ED3FFF0203B512F0021F14FE027F6E7E902701FFF80713
E00107D9C00013F84990C7EA3FFCD93FFCEC0FFF49486E7F49486E7F48496E7F4A804884
48496F7EA24890C96C7E4884A249161F003F84A34848701380A400FF19C0AD007F19806D
5EA3003F1900A26D5E6C60A26C6D4B5AA26C6D4B5A6C6D4A5BA26C6D4A5B6C6D4A5B6D6C
4A5B6DB4023F90C7FC6D01C0EBFFFE0107D9F80713F8010190B612E06D5E021F4AC8FC02
0314F0DA003F90C9FC42407ABE4F>79 D<B812F017FF18C018F018FC26003FFCC77FEF1F
FF7113807113C07113E0A27113F0A319F8A819F0A34D13E019C05F4D1380053F1300EFFF
FE91B712F860188005FCC7FC4ACAFCB3A4B77EA53D3E7DBD47>I<B87E17FCEFFF8018F0
8428003FFC000113FE9338003FFF050F7F717F717FA2858385A761A25F61614D5B4D90C8
FCEF3FFE4CB45A91B712F018C04DC9FC717E9126FC000F7F040113F0707F717EA2717EA2
717EA685A6F207C019C0A271140F07E01380B76DEBF01F719038FC3F007190B5FC716C5B
061F13F8CB000113E04A3F7DBD4E>82 D<903A03FFC001C0011FEBF803017FEBFE0748B6
128F4815DF48010013FFD80FF8130F48481303497F4848EB007F127F49143F161F12FF16
0FA27F1607A27F7F01FC91C7FCEBFF806C13F8ECFFC06C14FCEDFF806C15E016F86C816C
816C816C16806C6C15C07F010715E0EB007F020714F0EC003F1503030013F8167F163F12
7800F8151FA2160FA27EA217F07E161F6C16E06D143F01E015C001F8EC7F8001FEEB01FF
9026FFE00713004890B55A486C14F8D8F81F5CD8F00314C027E0003FFEC7FC2D407ABE3A
>I<003FB912FCA5903BFE003FFE003FD87FF0EE0FFE01C0160349160190C71500197E12
7EA2007C183EA400FC183F48181FA5C81600B3AF010FB712F8A5403D7CBC49>I<B600FC
020FB512C0A5C66C48C9381F8000013F95C7FC80616D173E6F157E6D177C6F15FC6D5F81
18016D6D5D18036D5F6F14076D5F6F140F027F5E81181F023F93C8FC6F5C6E153E70137E
6E157C8218FC6E6D5B17016E5DEEF0036E5DEEF8076E5D16FC170F037F5CEEFE1F033F91
C9FC705A6F133E17BE17FE6F5BA26F5BA26F5BA26F5BA36F5BA2705AA270CAFCA24A3F7E
BD4F>86 D<B6D8FC03B600F090B512FEA5C601FCC7000301F0C8EA7E00017F6F177C856E
6E17FC013F63856D6C037F4B5AA26F4A6C14036D634D7F6F18076D634D806F02EF150F6D
636F01076E131F6D04C793C7FC050F806F02835D6D1A3E051F806F0201157E027F197C6F
013F6E13FC023FDA3E005D057E806F017C017F13016E6105FC14FE7048013F13036E6104
C1EDFF076E4A6D5C04C31687DCE3E06D138F6E6104E716CFDCF7C06D13DF6E96C8FC04FF
16FF6E4A6D5BA294C77E6F5FA24C80033F5FA26F486F5AA24C153F030F5FA24C151F0307
5FA26F486F5A673F7EBD6C>I<903807FFC0013F13F848B6FC48812607FE037F260FF800
7F6DEB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE
0F4813E0000F1380381FFE00485A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C
01FB13FE391FFF07F36CEBFFE100031480C6EC003FD91FF890C7FC2F2B7DA933>97
D<13FFB5FCA512077EAFEDFFE0020713FC021FEBFF80027F80DAFF8113F09139FC003FF8
02F06D7E4A6D7E4A13074A80701380A218C082A318E0AA18C0A25E1880A218005E6E5C6E
495A6E495A02FCEB7FF0903AFCFF01FFE0496CB55AD9F01F91C7FCD9E00713FCC7000113
C033407DBE3A>I<EC7FF00107B5FC011F14C0017F14E09039FFF01FF0489038800FF848
EB001F4848EB3FFC120F485AA2485AA2007FEC1FF849EB0FF0ED03C000FF91C7FCAB127F
7FA3003F153E7F001F157E6C6C147C6C6C14FC91388001F86C9038C003F0C69038F81FE0
6DB512C0011F14800107EBFE009038007FF0272B7DA92E>I<EE07F8ED07FFA5ED003F16
1FAFEC7FF0903807FFFE011FEBFF9F017F14DF9039FFF01FFF48EBC00348EB00014848EB
007F485A001F153F5B123FA2127F5BA212FFAA127FA37F123FA26C6C147F120F6D14FF6C
6C01037F6C6D48EBFFE06CEBF03F6C6CB512BF6D143F010713FC010001E0EBE00033407D
BE3A>I<ECFFF0010713FE011F6D7E017F809039FFE07FE0489038801FF048496C7E4848
6D7E48486D7E121F491301003F81A2485A6F1380A212FFA290B7FCA401F0C9FCA5127FA2
7F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E6C9038E001FC6C9038F80FF8013FB5
5A6D14C0010391C7FC9038007FF8292B7DA930>I<EC07FE91387FFF8049B512C0010714
E090390FFE3FF0EB1FF090393FE07FF8EB7FC013FF1480A2489038003FF0ED1FE0ED0FC0
92C7FCAAB612E0A500010180C7FCB3AC007FEBFF80A525407DBF20>I<903A03FF8007F0
013F9038F83FF8499038FCFFFC48B712FE48018313F93A07FC007FC34848EB3FE1001FED
F1FC4990381FF0F81700003F81A7001F5DA26D133F000F5D6C6C495A3A03FF83FF8091B5
C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F13F06CB6FC16F016FC6C15FF17806C
16C06C16E01207001F16F0393FE000034848EB003F49EC1FF800FF150F90C81207A56C6C
EC0FF06D141F003F16E001F0147FD81FFC903801FFC02707FF800F13006C90B55AC615F8
013F14E0010101FCC7FC2F3D7DA834>I<13FFB5FCA512077EAFED1FF8EDFFFE02036D7E
4A80DA0FE07F91381F007F023C805C4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5333F7C
BE3A>I<EA01F8487E487E487E481380A66C13006C5A6C5A6C5AC8FCA913FFB5FCA51207
7EB3ABB512F8A515407CBF1D>I<13FFB5FCA512077EB092380FFFFEA5DB01FEC7FC4B5A
ED07F0ED1FE04B5A4B5A4BC8FCEC03FC4A5A4A5A141FEC7FF84A7EA2818102E77F02C37F
148102007F826F7E6F7E151F6F7E826F7F6F7F816F7FB5D8FC07EBFFC0A5323F7DBE37>
107 D<13FFB5FCA512077EB3B3AFB512FCA5163F7CBE1D>I<01FFD91FF8ECFFC0B590B5
010713F80203DAC01F13FE4A6E487FDA0FE09026F07F077F91261F003FEBF8010007013E
DAF9F0806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F03F
EBFF80A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E4A80DA0FE07F91381F007F00
07013C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533297CA83A>I<EC7FF09038
03FFFE011FEBFFC0017F14F09039FFE03FF8489038800FFC3A03FE0003FE48486D7E000F
168048486D13C0A2003F16E049147F007F16F0A400FF16F8AA007F16F0A46C6CECFFE0A2
001F16C06C6C491380A26C6C4913003A03FF800FFE6C9038E03FFC6C6CB512F0011F14C0
010791C7FC9038007FF02D2B7DA934>I<01FFEBFFE0B5000713FC021FEBFF80027F80DA
FF8113F09139FC007FF8000301F06D7E4A6D7E4A130F4A6D7E1880A27013C0A38218E0AA
4C13C0A318805E18005E6E5C6E495A6E495A02FCEBFFF0DAFF035B92B55A029F91C7FC02
8713FC028113C00280C9FCACB512FEA5333B7DA83A>I<3901FE01FE00FF903807FF804A
13E04A13F0EC3F1F91387C3FF8000713F8000313F0EBFFE0A29138C01FF0ED0FE0913880
07C092C7FCA391C8FCB3A2B6FCA525297DA82B>114 D<90383FFC1E48B512BE000714FE
5A381FF00F383F800148C7FC007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13FF
15C06C14F06C806C806C806C80C61580131F1300020713C014000078147F00F8143F151F
7EA27E16806C143F6D140001E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7FC
222B7DA929>I<EB07C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA400
01EBC000B3151FA96CEBE03EA2017F137EECF8FC90383FFFF86D13F0010713E001001380
203B7EB929>I<D9FF80EB0FF8B5EB0FFFA50007EC007F6C153FB3A5167FA316FF6C5C4B
7F6C903AC007DFFFE09138F01F9F6DB5121F6D13FE010F13F8010101E0EBE000332A7CA8
3A>I<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E131F
013F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D5C
15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA232287EA737>I<B53CFC3FFFFC03
FFFEA50003D980009039C0000F806E161F6C037F15006E496C5B6C183E836E48157E017F
177C6E486D13FC013F02EF5C83DAFC071401011F02C75CDAFE0FEBFE03010F02835C17FF
DAFF1F14076D02015C03BF148F6DD9BE005C18CF03FE14DF6D49017F90C7FC18FF6D496D
5AA36E486D5AA26E486D5AA36E486D5AA26E486D5A47287EA74C>I<B5D8FC03B51280A5
C69026E0007FC7FC6E13FE6D6C5B6D6C485A6D6C485A010F13076D6C485AED9FC06DEBFF
806D91C8FC6D5B6E5AA2143F6E7E140F814A7F4A7F4A7F02FE7F903801FC7F49486C7E02
F07F49486C7E49486C7E011F7F49486C7FD97F008001FE6D7FB5D8C007EBFFC0A532287E
A737>I<B500FC90383FFFC0A5000101C0903803E0006E1307A26C5E6E130F017F5D6E13
1F013F92C7FC6E5B011F143E6E137E010F147C6E13FCA26D5C15816D5C15C36D5C15E76D
5C15FF6E5BA36E90C8FCA26E5AA26E5AA26E5AA26E5AA35D14075D000E130FD83F805B38
7FC01FD8FFE090C9FC5C143E147E5CEBC1F8387FC3F0387E0FE06CB45A6C5B6C48CAFCEA
03F8323B7EA737>I<003FB612F8A4D9F80113F001C014E0495A494813C04A1380007E15
005C4A5A007C5C147F4A5A495B5DC65A495B495BA249EB007C495A5C137F494813FC4849
13F85C5A48EBC00114804814034813004848130749131F007FECFFF0B7FCA426287DA72E
>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmtt10 10.95 14
/Fm 14 118 df<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>
46 D<EC1FE0ECFFF8010313FE010F7F4914804914C090397FF03FE09038FF800F489038
0007F0D803FC13033A07F801FBF89038F007FF380FE01F4A13FCEA1FC0495A003FEBFF0F
903800FE07903901FC03FE007FEBF801EA7E03ECF000A2EAFE0700FC49137EAA00FE6D13
FED87E0314FCA2ECF801D87F0114F8003FEBFC03903900FE07F0903880FF0F001F90387F
FFE06D6C13C0EA0FE06E13803A07F007FE009038F801F86C6CC7127C6CB414FE6CEB8003
90387FF01F6DB512FC6D14F86D14E0010314C00100EBFE00EC1FF0273A7CB830>64
D<EB3FFC48B57E4814E04880488048809038F00FFE9038E001FF806F7E6C48133F6C4880
C8121FA491B5FC130F137F48B6FC12075A48EBC01F383FFC00EA7FE0138048C7FC5AA46C
143FA26C6C137F9038C001FF263FF80FEBFFC06CB712E0A2000714F76C14C3C6020013C0
D93FF090C7FC2B2A7CA830>97 D<EA3FFC487E12FFA2127F123F1200AAEC03FE91381FFF
80027F13E091B57E90B612FC82ECFE079138F001FF4A6C13804A137F4AEB3FC091C7121F
4915E0160FA217F01607A8160FA217E07F161F6EEB3FC0A26EEB7F806E13FFDAF0031300
9138FC0FFE91B55A5E495CD97E7F13C0D93C1F90C7FC90380003FC2C3980B730>I<ECFF
E0010713FC011F7F017F7F90B612804815C048EB807F3907FC003F485A485A49EB1F8048
48EB0F004990C7FC127F90C9FCA25A5AA87E7EA27F003FEC07C06DEB0FE06C7E6D131F6C
6C14C0D807FE133F9039FFC0FF806C90B5FCC615006D5B011F13F801075B01011380232A
7AA830>I<913801FFE04A7F5CA28080EC0007AAEB03FE90381FFF874913E790B6FC5A5A
481303380FFC00D81FF0133F49131F485A150F4848130790C7FCA25AA25AA87E6C140FA2
7F003F141F6D133F6C7E6D137F390FF801FF2607FE07EBFFC06CB712E06C16F06C14F76D
01C713E0011F010313C0D907FCC8FC2C397DB730>I<49B4FC010713E0011F13F8017F7F
90B57E488048018113803A07FC007FC04848133FD81FE0EB1FE0150F484814F049130712
7F90C7FCED03F85A5AB7FCA516F048C9FC7E7EA27F003FEC01F06DEB03F86C7E6C7E6D13
07D807FEEB1FF03A03FFC07FE06C90B5FC6C15C0013F14806DEBFE00010713F8010013C0
252A7CA830>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCA9381FFFF8487F5AA27E7E
EA0001B3A9003FB612C04815E0B7FCA27E6C15C023397AB830>105
D<EC01C0EC07F0A2EC0FF8A3EC07F0A2EC01C091C7FCA990B512F04814F8A47EEB0003B3
B3A5EC07F0A2123C007EEB0FE0B4131FEC3FC0147F90B512806C14005C6C5B000F13F000
0313C01D4E7CB830>I<387FFFF8B57EA47EEA0001B3B3A8007FB612F0B712F8A46C15F0
25387BB730>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E
6C010F13872607FE07EB03F801FC13FE9039F803FC01A201F013F8A301E013F0B3A23C7F
FE0FFF07FF80B548018F13C0A46C486C01071380322881A730>I<90381FFC1E48B5129F
000714FF5A5A5A387FF007EB800100FEC7FC4880A46C143E007F91C7FC13E06CB4FC6C13
FC6CEBFF806C14E0000114F86C6C7F01037F9038000FFF02001380007C147F00FEEC1FC0
A2150F7EA27F151F6DEB3F806D137F9039FC03FF0090B6FC5D5D00FC14F0D8F83F13C026
780FFEC7FC222A79A830>115 D<EB0780497E131FA9003FB612E04815F0B7FCA36C15E0
26001FC0C7FCB216F8ED01FCA5ECE003010FEB07F814F09138FC1FF06DB512E06D14C016
806D14009038007FFCEC1FF026337EB130>I<D83FFCEB3FFC486C497E00FF14FFA2007F
147F003F143F00001400B3A41501A2150315076D130F903A7FC07FFFF891B612FC6D15FE
7F6D4913FC6D9038F87FF8010001C0C7FC2F2880A630>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr10 10.95 42
/Fn 42 123 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A120E5A1218123812300B1C798919>44 D<EB01FE90380FFFC090383F03F0
90387C00F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0A290
C712034815F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB
1F80000315006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D
>48 D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A3
1D3D78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE001E
6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E015
3FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A
495A495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0B7FC
A3243D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F007F00
0E6D7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA2
4A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7F
C0A216E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF807E6C
4913006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>I<EB
03FCEB1FFF90387E07C09038FC03F048486C7E48486C7E4848137C000F147E4848137F81
003F15805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C
13FF6D13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A416
80157FD80F801400487E486C13FEA24A5A5D49485AEB8007391E000FE0001F495A260FC0
7FC7FC3803FFFE6C13F838003FC0243F7CBC2D>57 D<15074B7EA34B7EA34B7EA34B7EA3
4B7E15E7A2913801C7FC15C3A291380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D7EA3
4A6D7EA34A6D7EA349486D7E91B6FCA249819138800001A249C87EA24982010E157FA201
1E82011C153FA2013C820138151FA2017882170F13FC00034C7ED80FFF4B7EB500F0010F
B512F8A33D417DC044>65 D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE707E
701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF804C
1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF3FE0
EF1FF018F8170F18FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC0040313
8048486C90380FFE00B85A17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE130E02
0F9038FF801E913A3FF007E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948140F
D93FE0140749481403495A91C812014848150012034848167E5B000F173EA24848161EA2
123F5B180E127FA349160012FFAC127F7F180EA2123FA27F001F171E181C6C7EA2000717
3C6D16386C6C1678000117706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC07806D6C
EC1F00D903FE143E902600FF8013F891393FF007F0020FB512C0020391C7FC9138003FF0
37427BBF42>I<B91280A300019038C000036C6C48EB007FEF1FC0170F1707A21703A317
01A4EF00E0A21638A31800A31678A216F81501150791B5FCA3EC8007150115001678A216
38A693C8FCAF3801FFE0B612F0A3333E7DBD3B>70 D<B612F0A3C6EBF000EB3FC0B3B3B2
EBFFF0B612F0A31C3E7EBD21>73 D<011FB512FCA3D9000713006E5A1401B3B3A6123FEA
7F80EAFFC0A44A5A1380D87F005B007C130700385C003C495A6C495A6C495A2603E07EC7
FC3800FFF8EB3FC026407CBD2F>I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517
071800A45FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>76
D<B500C093383FFFF0A300016D93387FF800D8007F18E0D977F016EFA3D973F8ED01CFA2
D971FCED038FA3D970FEED070FA26E150E80A26E6C141CA36E6C1438A26E6C1470A36E6C
14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700A2037F130EA36F6C5AA26F6C5AA36F6C
5AA25FED07F0A2923803F9C0A36FB45AA26F90C7FCA213F8486C147ED807FFEF3FF8B500
F8013C011FB512F0A34C3E7DBD53>I<B712C016FCEEFF800001D9C00013E06C6C48EB1F
F0EE07FCEE01FE707E84717EA2717EA284A760177F606017FF95C7FCEE01FCEE07F8EE1F
E0EEFF8091B500FCC8FC16F091388001FCED003FEE1FC0707E707E83160383160183A383
A484A4F0C004190EA28218E0057F131E2601FFE0161CB600C0EB3FF094381FF838050713
70CA3801FFE09438003F803F407DBD43>82 D<D907FC130C90391FFF801C017FEBF03C39
01FC03F83A03F0007E7CD807C0EB1FFC4848130F001F140748C71203003E1401007E1400
A2007C157C12FCA2163CA36C151CA27EA26C6C14007F7FEA3FF8EBFF806C13F86CEBFF80
6C14F06C14FC6C14FF6C15C0013F14E0010714F0EB007F020713F89138007FFC150FED07
FE15031501ED00FFA200E0157FA3163FA27EA3163E7E167E6C157C6C15FC6C15F86D1301
6DEB03F06DEB07E0D8F9FCEB0FC03AF07F803F8090391FFFFE00D8E00713F839C0007FC0
28427BBF33>I<003FB91280A3903AF0007FE001018090393FC0003F48C7ED1FC0007E17
07127C00781703A300701701A548EF00E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7D
BC42>I<B500FE017FB5D88007B5FCA3000301C0010101E0C713F86C90C849EC3FE07148
EC0F807E7215006E143F017F190E84A26D6C60A24D7E6D6C60A2EFE7F86D6C60A2933801
C3FC6E18F001076104037F6E0281140101036104077F17006D6C4D5AA2040EEB7F806D6C
4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F171C047814F0DBE070010F13
3C021F173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA07F95EA2DBFB80EB01FEDA03
FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B81037C153EA20378151E0338151C58
407EBD5D>87 D<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF07F
6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8EA
0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC00E
13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F09039FF
C000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC09026
C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E4848131F
4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3
003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C137890383F01
F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114FF010713
E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B127FA2
90C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C0179
13F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380FFFC09038
3F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130FA212
7F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C1303
6DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA828>
I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01
FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C903903F801
FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC0600000F6EC7FC
49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0FC026071F
FFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C810003813A
0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C5D6C6C49
5A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D>I<EA01
FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E001F8D9FD
C07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA
01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC487EB512
F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00781400AC147FEB7FFFA313
017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F01387C03F0381E07C0380F
FF803801FC00185185BD1C>I<EA01FC12FFA3120712031201B292B51280A392383FFC00
16E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9F
E0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C14FEB539F07F
FFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>
I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01F80007
903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF4992C7FC
A2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF
903807FFC091381E07E091387803F000079038E001F82603F9C07F0001138001FB6D7E91
C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713E090381F
81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB01F8A2
003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6C
EB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7FC282A
7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A03FFC001FC6C49
6C7E91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE3FC0
6D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07F891
C9FCAD487EB512F8A32D3A7EA733>I<3901F807E000FFEB1FF8EC787CECE1FE3807F9C1
00031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FEA31F287EA724>
114 D<90383FC0603901FFF8E03807C03F381F000F003E1307003C1303127C0078130112
F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0D8003F13E0
010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E06CEB03C09038
80078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137CA213FCA212
0112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F
138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA3000714030003
140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913FC90381FC078
903807FFE00100903880FE002E297DA733>I<B539E00FFFE0A32707FE000313006C48EB
00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA290380FE00E
A2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0A36E5AA26E
C8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C486D48EB3F
806C4817006D010F141E00016F131C15076D163C00004A6C1338A2017F5E4B7E151DD93F
805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F01407010703
87C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED00076D5DA24A13
03027E5CA2027C1301023C5C023813003D287EA642>I<B539E00FFFE0A32707FE000313
006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A
010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36E
C8FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD87E07C9
FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>121 D<001FB61280A2EBE0000180140049
485A001E495A121C4A5A003C495A141F00385C4A5A147F5D4AC7FCC6485AA2495A495A13
0F5C495A90393FC00380A2EB7F80EBFF005A5B484813071207491400485A48485BA24848
5B4848137F00FF495A90B6FCA221277EA628>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx12 14.4 16
/Fo 16 123 df<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C808304
7F80167E8304FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F8116
8083033F8293C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87E
A24A83A3DA3F80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A820107
85A24A82010F855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65
D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13E01B
F0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C04F13
004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>80
D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801
E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412
FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C
16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED00
7F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0
A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0
486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>83
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>101 D<DA3FFF14FF0103B5D8F00713
C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0
484990387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A900
1F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC
01C314F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C83
6C836C836D828448B9FC12074848C700031480D81FF8EC003F4848150748486F13C08348
5A83A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E04948
5A6C01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>
103 D<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5
FCA512017EB3B3A6B612E0A51B547BD325>105 D<EB3FF0B5FCA512017EB3B3B3B1B612
F0A51C537BD225>108 D<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92
393F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3
ACB6D8F807B612C0A542367BB54B>110 D<913801FFE0021F13FE91B612C0010315F001
0F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F4883
4890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA2
6C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A
0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0
B5010F13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602
806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2
615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612
E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FEB5
90380FFF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE7
8014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537
>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE013014848
7F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C
15F06C816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC
007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE
9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA614
7EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FC
B3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F
5B020313802A4D7ECB34>I<001FB8FC1880A3912680007F130001FCC7B5FC01F0495B49
5D49495B495B4B5B48C75C5D4B5B5F003E4A90C7FC92B5FC4A5B5E4A5B5CC7485B5E4A5B
5C4A5B93C8FC91B5FC495B5D4949EB0F805B495B5D495B49151F4949140092C7FC495A48
5E485B5C485E485B4A5C48495B4815074849495A91C712FFB8FCA37E31357CB43C>122
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 835 85 a Fo(P)l(arallelizing)48 b(Applications)d(in)l(to)h
(Silicon)603 426 y Fn(Jonathan)31 b(Babb,)f(Martin)g(Rinard,)f(Csaba)h
(Andras)f(Moritz,)i(W)-8 b(alter)32 b(Lee,)807 539 y(Matthew)f(F)-8
b(rank,)31 b(Ra)5 b(jeev)31 b(Barua,)g(and)f(Saman)g(Amarasinghe)1274
652 y(Lab)s(oratory)g(for)h(Computer)e(Science)1182 765
y(Massac)m(h)m(usetts)j(Institute)e(of)g(T)-8 b(ec)m(hnology)1492
878 y(Cam)m(bridge,)30 b(MA)h(02139)1535 990 y Fm(jbabb@lcs.mit.edu)
-152 1299 y Fl(Abstract)-152 1456 y Fk(The)22 b(next)f(decade)h(of)g
(computing)f(will)i(b)r(e)e(dominated)g(b)n(y)g(em)n(b)r(ed-)-152
1539 y(ded)d(systems,)i(information)f(appliances)g(and)g
(application-sp)r(eci\014c)-152 1622 y(computers.)49
b(In)30 b(order)h(to)g(build)f(these)h(systems,)h(designers)f(will)-152
1705 y(need)k(high-lev)n(el)h(compilation)g(and)f(CAD)g(to)r(ols)i
(that)e(generate)-152 1788 y(arc)n(hitectures)30 b(that)g(e\013ectiv)n
(ely)f(meet)f(the)i(needs)f(of)h(eac)n(h)g(appli-)-152
1871 y(cation.)58 b(In)33 b(this)g(pap)r(er)g(w)n(e)h(presen)n(t)f(a)g
(no)n(v)n(el)g(compilation)h(sys-)-152 1954 y(tem)25
b(that)h(allo)n(ws)i(sequen)n(tial)e(programs,)g(written)h(in)e(C)i(or)
f(F)n(OR-)-152 2037 y(TRAN,)34 b(to)g(b)r(e)g(compiled)g(directly)g(in)
n(to)g(custom)g(silicon)i(or)e(re-)-152 2120 y(con\014gurable)19
b(arc)n(hitectures.)33 b(This)20 b(capabilit)n(y)f(is)g(also)h(in)n
(teresting)-152 2203 y(b)r(ecause)h(trends)e(in)h(computer)f(arc)n
(hitecture)h(are)g(mo)n(ving)f(to)n(w)n(ards)-152 2286
y(more)f(recon\014gurable)h(hardw)n(are-lik)n(e)f(substrates,)i(suc)n
(h)e(as)h(FPGA)-152 2369 y(based)j(systems.)32 b(Our)21
b(system)f(w)n(orks)i(b)n(y)e(successfully)i(com)n(bining)-152
2452 y(t)n(w)n(o)33 b(resource-e\016cien)n(t)f(computing)f
(disciplines:)49 b Fj(Smal)t(l)32 b(Memo-)-152 2535 y(ries)26
b Fk(and)g Fj(Virtual)i(Wir)l(es)p Fk(.)-40 2618 y(F)-6
b(or)32 b(a)f(giv)n(en)g(application,)j(the)d(compiler)g(\014rst)g
(analyzes)h(the)-152 2701 y(memory)d(access)j(patterns)e(of)h(p)r(oin)n
(ters)g(and)g(arra)n(ys)g(in)f(the)g(pro-)-152 2784 y(gram)23
b(and)f(constructs)h(a)g(partitioned)g(memory)e(system)h(made)g(up)-152
2867 y(of)28 b(man)n(y)d(small)j(memories.)37 b(The)27
b(computation)g(is)g(implemen)n(ted)-152 2950 y(b)n(y)e(activ)n(e)g
(computing)g(elemen)n(ts)g(that)g(are)h(spatially)g(distributed)-152
3033 y(within)34 b(the)f(memory)e(arra)n(y)-6 b(.)58
b(A)33 b(space-time)g(sc)n(heduler)g(assigns)-152 3116
y(instructions)27 b(to)g(the)g(computing)e(elemen)n(ts)i(in)f(a)h(w)n
(a)n(y)g(that)f(max-)-152 3199 y(imizes)32 b(lo)r(calit)n(y)g(and)f
(minimizes)f(ph)n(ysical)h(comm)n(unication)f(dis-)-152
3282 y(tance.)50 b(It)30 b(also)h(generates)h(an)e(e\016cien)n(t)h
(static)g(sc)n(hedule)g(for)g(the)-152 3365 y(in)n(terconnect.)59
b(Finally)-6 b(,)37 b(sp)r(ecialized)e(hardw)n(are)g(for)f(the)g
(result-)-152 3449 y(ing)26 b(sc)n(hedule)f(of)g(memory)e(accesses,)28
b(wires,)e(and)f(computation)f(is)-152 3532 y(generated)i(as)f(a)h(m)n
(ulti-pro)r(cess)e(state)i(mac)n(hine)e(in)g(syn)n(thesizable)-152
3615 y(V)-6 b(erilog.)-40 3698 y(With)20 b(this)f(system,)i(implemen)n
(ted)c(as)j(a)g(set)g(of)g(SUIF)f(compiler)-152 3781
y(passes,)34 b(w)n(e)e(ha)n(v)n(e)f(successfully)i(compiled)e(programs)
g(in)n(to)g(hard-)-152 3864 y(w)n(are)g(and)e(ac)n(hiev)n(e)h
Fj(sp)l(e)l(cialization)h Fk(p)r(erformance)f(enhancemen)n(ts)-152
3947 y(b)n(y)38 b(up)g(to)h(an)g(order)h(of)f(magnitude)f(v)n(ersus)h
(a)g(single)h(general-)-152 4030 y(purp)r(ose)34 b(pro)r(cessor.)58
b(W)-6 b(e)33 b(also)i(ac)n(hiev)n(e)e(additional)h Fj(p)l(ar)l(al)t
(leliza-)-152 4113 y(tion)h Fk(sp)r(eedups)g(similar)g(to)g(those)h
(obtainable)f(using)g(a)g(tigh)n(tly-)-152 4196 y(in)n(terconnected)26
b(m)n(ultipro)r(cessor.)-152 4421 y Fl(1)105 b(In)m(tro)s(duction)-152
4578 y Fk(When)31 b(the)h(p)r(erformance,)h(cost,)i(or)d(p)r(o)n(w)n
(er)g(requiremen)n(ts)e(of)j(an)-152 4661 y(application)h(cannot)f(b)r
(e)f(met)g(with)h(a)f(commercial)h(o\013-the-shelf)-152
4744 y(pro)r(cessor,)27 b(engineers)g(t)n(ypically)e(turn)f(to)i
(custom)e(and/or)i(recon-)-152 4827 y(\014gurable)19
b(hardw)n(are.)32 b(P)n(erformance)19 b(orien)n(ted)f(hardw)n(are)h
(pro)t(jects)-152 4910 y(ha)n(v)n(e)38 b(generated)h(excellen)n(t)g
(results:)61 b(IBM's)39 b(Deep)f(Blue)h(c)n(hess)-152
4993 y(computer)16 b(recen)n(tly)h(defeated)h(Garry)f(Kasparo)n(v,)i
(the)e(W)-6 b(orld)17 b(Chess)-152 5076 y(Champion;)23
b(the)d(Electronic)i(F)-6 b(ron)n(tier)21 b(F)-6 b(oundation's)21
b(DES)f(crac)n(k-)-152 5159 y(ing)i(mac)n(hine)e(recen)n(tly)h(crac)n
(k)n(ed)g(the)g(encryption)g(standard)g(of)h(our)2040
1299 y(banking)29 b(systems)h(in)f(less)i(than)f(a)g(w)n(eek.)47
b(Lo)n(w-p)r(o)n(w)n(er)30 b(and)g(lo)n(w-)2040 1382
y(cost)38 b Fj(emb)l(e)l(dde)l(d)g Fk(applications)h(in)d(cars)i(and)f
(hand-held)e(devices)2040 1465 y(ha)n(v)n(e)17 b(indirectly)h(b)r
(ecome)f(an)h(ev)n(eryda)n(y)f(part)g(of)i(h)n(uman)d(existence.)2040
1548 y(Similarly)-6 b(,)32 b(information)g(appliances)f(promise)g(to)g
(b)r(e)g(one)g(of)h(the)2040 1631 y(dominating)25 b(applications)i(of)g
(the)e(next)g(decade.)2152 1714 y(All)h(of)h(these)e(hardw)n(are)i
(systems)e(p)r(erform)g(w)n(ell,)i(in)f(part,)g(b)r(e-)2040
1797 y(cause)20 b(they)e(exploit)h(large)h(amoun)n(ts)f(of)g
(concurrency)g(and)g(sp)r(ecial-)2040 1880 y(ization.)34
b(Curren)n(tly)-6 b(,)20 b(hardw)n(are)g(arc)n(hitects)h(exploit)f
(these)g(asp)r(ects)2040 1963 y(b)n(y)30 b(hand.)48 b(But)30
b(as)h(more)f(and)h(more)f(complex)f(applications)j(are)2040
2046 y(mapp)r(ed)e(in)n(to)i(hardw)n(are,)j(the)c(di\016cult)n(y)g(of)i
(exploiting)f(concur-)2040 2129 y(rency)e(and)h(sp)r(ecialization)i(b)n
(y)d(hand)g(mak)n(es)g(it)g(more)h(and)f(more)2040 2212
y(di\016cult)i(to)f(design,)j(dev)n(elop)d(and)h(debug)f(hardw)n(are.)
53 b(This)32 b(pa-)2040 2295 y(p)r(er)18 b(demonstrates)g(a)h
(parallelizing)i(compiler)d(that)g(automatically)2040
2378 y(maps)23 b(applications)h(directly)g(in)n(to)f(a)h(hardw)n(are)g
(implemen)n(tation.)2040 2461 y(W)-6 b(e)34 b(exp)r(ect)f(that)g(the)h
(com)n(bination)f(of)i(suc)n(h)e(high-lev)n(el)h(design)2040
2544 y(to)r(ols)d(with)f(the)f(added)g(capabilit)n(y)h(of)g
(recon\014gurable)g(hardw)n(are)2040 2627 y(substrates)37
b(\(e.g.)68 b(FPGA-based)37 b(systems\),)h(will)g(enable)f(hard-)2040
2710 y(w)n(are)30 b(designers)g(to)f(dev)n(elop)g(application-sp)r
(eci\014c)h(systems)f(that)2040 2793 y(can)19 b(ac)n(hiev)n(e)f
(unpreceden)n(ted)f(price/p)r(erformance)i(and)f(energy)g(ef-)2040
2876 y(\014ciency)-6 b(.)45 b(This)30 b(pap)r(er)f(explains)h(ho)n(w)g
(suc)n(h)e(a)i(high-lev)n(el)g(compi-)2040 2959 y(lation)d(system)d(w)n
(orks.)2152 3042 y(F)-6 b(or)36 b(this)f(sytem)f(to)i(generated)g
(e\016cien)n(t)g(computing)e(struc-)2040 3125 y(tures,)c(w)n(e)g(need)f
(to)g(mak)n(e)f(t)n(w)n(o)i(fundamen)n(tal)e(attitude)h(c)n(hanges:)
2040 3208 y(1\))23 b(A)g(shift)g(of)h(fo)r(cus)g(from)f(computation)f
(alone)i(to)f(also)h(including)2040 3291 y(memory)-6
b(,)22 b(and)h(wires;)i(and)e(2\))h(A)e(shift)i(of)g(fo)r(cus)h(from)e
(a)g(lo)n(w-lev)n(el,)2040 3375 y(hardw)n(are-cen)n(tric)39
b(design)f(pro)r(cess)i(to)e(a)h(high-lev)n(el,)i(soft)n(w)n(are-)2040
3458 y(based)26 b(dev)n(elopmen)n(t)e(pro)r(cess.)2152
3541 y(The)35 b(\014rst)g(shift)g(is)g(driv)n(en)f(b)n(y)g(the)g(k)n
(ey)g(p)r(erformance)h(trend)2040 3624 y(in)i(VLSI:)g(the)g(p)r
(erformance)g(of)h(basic)g(arithmetic)f(units,)j(suc)n(h)2040
3707 y(as)30 b(adders)g(and)f(m)n(ultipliers,)h(is)g(increasing)h(m)n
(uc)n(h)d(more)h(rapidly)2040 3790 y(than)d(the)g(p)r(erformance)g(of)h
(memories)f(and)g(wires.)38 b(Wire)26 b(lengths)2040
3873 y(a\013ect)g(the)f(p)r(erformance)g(in)h(that)f(the)g(clo)r(c)n(k)
g(cycle)h(time)f(m)n(ust)f(b)r(e)2040 3956 y(long)19
b(enough)e(for)i(signals)g(to)f(propagate)h(the)f(length)f(of)i(the)f
(longest)2040 4039 y(wire.)34 b(As)21 b(designers)g(exploit)h(feature)f
(size)h(decreases)g(to)f(put)f(more)2040 4122 y(functionalit)n(y)h(on)g
(a)f(c)n(hip,)i(the)e(wire)h(lengths)g(b)r(ecome)f(the)g(limiting)2040
4205 y(factor)33 b(in)e(determining)g(cycle)g(time.)51
b(It)31 b(is)h(therefore)g(crucial)g(to)2040 4288 y(deliv)n(er)22
b(designs)h(sensitiv)n(e)f(to)h(wire)g(length.)33 b(W)-6
b(e)22 b(therefore)h(c)n(ho)r(ose)2040 4371 y(to)18 b(organize)i(the)d
(compiler)h(to)g(optimize)g(the)f(memories)g(and)h(wires,)2040
4454 y(as)27 b(w)n(ell)g(as)f(distributing)g(the)g(computation,)f(in)h
(order)g(to)h(ac)n(hiev)n(e)2040 4537 y(go)r(o)r(d)g(o)n(v)n(erall)f(p)
r(erformance.)2152 4620 y(The)18 b(second)f(shift)h(is)g(driv)n(en)f(b)
n(y)f(b)r(oth)h(VLSI)g(and)g(the)g(complex-)2040 4703
y(it)n(y)29 b(of)i(applications)g(w)n(e)g(can)f(no)n(w)g(implemen)n(t)e
(in)h(hardw)n(are.)48 b(In)2040 4786 y(the)25 b(past)h(decade,)f(hardw)
n(are)h(design)g(languages)h(suc)n(h)e(as)h(V)-6 b(erilog)2040
4869 y(and)33 b(VHDL)e(enabled)i(a)h(dramatic)e(increase)i(in)f(the)g
(sophistica-)2040 4952 y(tion)e(of)h(the)f(circuits)g(that)g(designers)
h(w)n(ere)f(able)h(to)f(build.)50 b(But)2040 5035 y(these)18
b(languages)i(still)f(require)f(designers)h(to)f(sp)r(ecify)h(the)f(lo)
n(w-lev)n(el)2040 5118 y(hardw)n(are)37 b(comp)r(onen)n(ts)f(and)h(sc)n
(hedule)f(the)g(op)r(erations)i(in)f(the)2040 5201 y(hardw)n(are)32
b(on)g(a)f(cycle-b)n(y-cycle)g(basis.)52 b(W)-6 b(e)32
b(b)r(eliev)n(e)f(that)g(these)p eop
%%Page: 2 2
2 1 bop -152 -69 a Fk(languages)30 b(presen)n(t)d(suc)n(h)g(lo)n(w-lev)
n(el)i(abstractions)g(that)e(they)g(are)-152 14 y(no)d(longer)g
(adequate)f(for)h(the)f(large,)j(sophisticated)e(systems)f(that)-152
97 y(are)f(no)n(w)f(p)r(ossible)i(to)e(implemen)n(t)e(in)i(hardw)n
(are.)34 b(W)-6 b(e)21 b(b)r(eliev)n(e)g(that)-152 180
y(the)i(next)g(rev)n(olution)g(in)h(hardw)n(are)g(design)g(will)g(come)
f(from)h(com-)-152 263 y(pilers)g(that)e(are)i(capable)f(of)h(implemen)
n(ting)d(programs)i(written)g(in)-152 346 y(a)j(high-lev)n(el)g
(language,)h(suc)n(h)f(as)g(C,)g(directly)g(in)n(to)g(hardw)n(are.)-40
429 y(While)j(these)g(shifts)h(ma)n(y)d(at)i(\014rst)g(app)r(ear)g(to)g
(require)f(a)h(rad-)-152 512 y(ically)f(di\013eren)n(t)e(approac)n(h,)h
(our)f(results)h(indicate)g(that)f(the)h(solu-)-152 596
y(tion)g(lies)g(in)f(the)g(extension)g(of)h(kno)n(wn)f(tec)n(hniques)f
(from)h(parallel)-152 679 y(computing)i(and)h(parallelizing)i
(compilers.)45 b(Sp)r(eci\014cally)-6 b(,)30 b(w)n(e)f(b)r(e-)-152
762 y(liev)n(e)d(that)e(p)r(erformance)h(gains)h(will)h(b)r(e)e(made)f
(p)r(ossible)i(b)n(y)e(split-)-152 845 y(ting)e(large,)h(relativ)n(ely)
f(slo)n(w)g(memories)f(in)n(to)g(arra)n(ys)g(of)h(small,)h(fast)-152
928 y(memories,)30 b(and)f(b)n(y)f(statically)i(sc)n(heduling)g(the)f
(in)n(terconnection)-152 1011 y(b)r(et)n(w)n(een)g(these)g(memories.)42
b(In)28 b(this)h(pap)r(er)g(computation)f(is)h(im-)-152
1094 y(plemen)n(ted)d(b)n(y)h(custom)g(logic)i(in)n(tersp)r(ersed)e
(among)h(these)f(mem-)-152 1177 y(ories.)67 b(Ho)n(w)n(ev)n(er,)39
b(our)d(approac)n(h)h(for)g(managing)f(memory)e(and)-152
1260 y(wires)27 b(is)g(applicable)g(whether)e(the)h(in)n(tersp)r(ersed)
g(computation)f(is)-152 1343 y(implemen)n(ted)19 b(in)i
(recon\014gurable)h(hardw)n(are,)h(con\014gurable)e(arith-)-152
1426 y(metic)k(arra)n(ys,)i(or)f(ev)n(en)f(small)h(micropro)r(cessors.)
-40 1509 y(The)k(direct)g(application)h(of)g(the)e(researc)n(h)i
(presen)n(ted)e(in)h(this)-152 1592 y(pap)r(er)18 b(will)h(allo)n(w)h
(programmers)d(to)h(design)g(complex)f(distributed-)-152
1675 y(memory)h(hardw)n(are)h(whic)n(h)h(is)g(correct-b)n
(y-construction.)31 b(That)20 b(is,)-152 1758 y(if)32
b(the)e(applications)h(can)g(b)r(e)f(successfully)i(executed)e(and)g
(tested)-152 1841 y(on)g(a)h(sequen)n(tial)f(pro)r(cessor,)j(our)d
(compiler)g(will)i(generate)e(func-)-152 1924 y(tionally)d(correct)f
(hardw)n(are.)-40 2007 y(In)36 b(the)g(remainder)f(of)i(this)g(pap)r
(er)f(w)n(e)g(will)i(sho)n(w,)i(step-b)n(y-)-152 2090
y(step,)d(the)d(basic)h(compiler)g(transformations)g(needed)f(to)h
(gener-)-152 2173 y(ate)21 b(a)f(distributed-memory)e(hardw)n(are)i
(design)h(from)f(a)h(sequen)n(tial)-152 2256 y(program.)59
b(This)34 b(design)h(will)g(con)n(tain)f(hardw)n(are)g(and)g(memory)
-152 2339 y(structures)c(carefully)h(matc)n(hed)d(to)j(the)e(program)h
(requiremen)n(ts.)-152 2422 y(A)n(t)f(the)h(end,)g(w)n(e)h(will)g
(presen)n(t)e(initial)i(fa)n(v)n(orable)g(results)g(from)e(a)-152
2505 y(w)n(orking)22 b(compiler)e(whic)n(h)h(automatically)g(implemen)n
(ts)e(the)h(set)h(of)-152 2588 y(transformations)27 b(w)n(e)f(describ)r
(e.)-40 2671 y(The)k(organization)h(is)f(as)g(follo)n(ws.)49
b(Section)29 b(2)h(motiv)l(ates)f(our)-152 2754 y(compilation)g
(strategy)-6 b(.)43 b(Section)57 b(3)28 b(o)n(v)n(erviews)h(the)f
(compilation)-152 2837 y(pro)r(cess)20 b(and)d(in)n(tro)r(duces)i(a)f
(running)g(example)f(subsequen)n(tly)g(used)-152 2920
y(for)26 b(illustration.)35 b(Section)25 b(4)g(then)f(outlines)h(t)n(w)
n(o)g(analyses)h(w)n(e)f(use)-152 3003 y(for)j(decomp)r(osing)f(the)f
(application)i(data)f(in)n(to)f(m)n(ultiple)g(clusters)-152
3086 y(of)31 b(small)e(memories.)45 b(Next,)30 b(Section)g(5)f(describ)
r(es)i(ho)n(w)e(applica-)-152 3169 y(tion)h(instructions)g(are)g
(assigned)h(to)e(memory)f(clusters)i(and)f(ho)n(w)-152
3252 y(a)j(space-time)e(sc)n(heduler)h(creates)h(virtual)f(in)n
(terconnections)g(b)r(e-)-152 3335 y(t)n(w)n(een)d(clusters.)42
b(Section)29 b(6)f(sho)n(ws)h(ho)n(w)f(w)n(e)g(generate)h(hardw)n(are)
-152 3418 y(from)j(the)g(resulting)h(sc)n(hedule.)54
b(Section)33 b(7)f(then)g(presen)n(ts)g(b)r(oth)-152
3501 y(sp)r(ecialization)i(and)c(parallelization)k(results)e(for)f(sev)
n(eral)h(b)r(enc)n(h-)-152 3584 y(mark)22 b(applications.)35
b(Finally)-6 b(,)24 b(Section)f(8)g(describ)r(es)g(related)h(w)n(ork)
-152 3667 y(in)i(the)f(\014eld,)h(and)f(Section)h(9)g(mak)n(es)f
(concluding)h(remarks.)-152 3893 y Fl(2)105 b(Motiv)-6
b(ation)-152 4050 y Fk(When)19 b(compiling)h(applications)h(to)e(hardw)
n(are,)j(w)n(e)e(consider)g(three)-152 4133 y(basic)33
b(primitiv)n(es:)47 b(memory)-6 b(,)31 b(wires,)k(and)d(logic.)55
b(The)32 b(follo)n(wing)-152 4216 y(sections)22 b(describ)r(e)f(and)f
(motiv)l(ate)g(our)g(compilation)h(approac)n(h)g(for)-152
4299 y(eac)n(h)26 b(primitiv)n(e.)-152 4516 y Fl(2.1)105
b(Small)34 b(Memories)-152 4648 y Fk(Our)17 b(e\016cien)n(t)g(memory)e
(arc)n(hitecture)j(con)n(tains)f(man)n(y)f(small)h(mem-)-152
4731 y(ories,)34 b(with)d(the)f(computation)g(distributed)h(among)f
(the)h(memo-)-152 4814 y(ries)f(to)g(maximize)e(parallelism)j(while)f
(minimizing)f(the)g(ph)n(ysical)-152 4897 y(comm)n(unication)h
(distance.)51 b(This)31 b(organization)i(has)e(signi\014can)n(t)-152
4980 y(b)r(ene\014ts)19 b(when)h(compared)f(with)g(a)h(standard)f(arc)n
(hitecture,)j(whic)n(h)-152 5063 y(segregates)29 b(the)d(memory)f(from)
h(the)g(computation.)37 b(First,)27 b(a)g(sys-)-152 5146
y(tem)22 b(of)h(small)g(memories)f(ha)n(v)n(e)g(shorter)h(e\013ectiv)n
(e)g(memory)d(access)-152 5229 y(latencies.)34 b(A)20
b(small)h(memory)d(can)j(pro)r(duce)f(a)h(v)l(alue)f(quic)n(k)n(er)f
(than)2040 -69 y(a)26 b(large)h(memory)d(can;)i(once)g(the)f(v)l(alue)h
(is)g(pro)r(duced,)f(it)h(is)g(closer)2040 14 y(to)19
b(the)f(p)r(oin)n(t)h(where)g(it)g(will)h(b)r(e)e(consumed.)32
b(Multiple)19 b(small)g(mem-)2040 97 y(ories)27 b(also)h(ha)n(v)n(e)d
(a)h(higher)h(aggregate)h(memory)c(bandwidth)h(than)2040
180 y(a)30 b(single)g(large)h(memory)-6 b(,)28 b(and)h(eac)n(h)g
(reference)h(tak)n(es)g(less)g(p)r(o)n(w)n(er)2040 263
y(b)r(ecause)25 b(the)f(wire)i(capacitance)g(in)e(small)h(memories)f
(is)h(less)h(than)2040 346 y(the)f(capacitance)i(in)f(a)g(large)h
(memory)-6 b(.)2152 429 y(Compiler)25 b(tec)n(hnology)f(is)h(an)f(imp)r
(ortan)n(t)f(elemen)n(t)h(in)g(exploit-)2040 512 y(ing)36
b(the)g(p)r(oten)n(tial)g(of)h(small)f(memories.)64 b(If)36
b(the)g(compiler)f(can)2040 596 y(statically)g(determine)e(the)g
(memory)f(lo)r(cation)j(that)e(will)i(satisfy)2040 679
y(eac)n(h)22 b(data)f(reference,)j(it)d(can)h(then)f(generate)h(more)f
(e\016cien)n(t)h(com-)2040 762 y(putation)38 b(structures.)70
b(Also,)42 b(the)37 b(compiler)h(can)f(lev)n(erage)i(the)2040
845 y(corresp)r(ondence)27 b(b)r(et)n(w)n(een)e(computation)h(and)f
(memory)f(to)i(place)2040 928 y(the)18 b(computation)h(close)h(to)f
(the)f(memory)f(that)h(it)h(accesses.)34 b(When)2040
1011 y(p)r(ossible,)h(static)d(disam)n(biguation)g(also)g(allo)n(ws)i
(the)d(compiler)g(to)2040 1094 y(statically)k(sc)n(hedule)f(the)g
(memory)e(and)h(comm)n(unication)g(wires,)2040 1177 y(eliminating)j
(the)g(need)g(to)g(implemen)n(t)e(an)i(exp)r(ensiv)n(e)f(dynamic)2040
1260 y(in)n(terconnect)22 b(capable)h(of)h(deliv)n(ering)e(data)h(from)
f(an)n(y)g(memory)e(to)2040 1343 y(an)n(y)i(piece)i(of)f(computation.)
33 b(Finally)-6 b(,)24 b(static)g(disam)n(biguation)f(al-)2040
1426 y(lo)n(ws)j(the)e(compiler)g(to)h(simplify)f(address)h
(calculations.)36 b(The)24 b(bits)2040 1509 y(in)d(the)g(address)h
(that)f(w)n(ould)h(otherwise)h(select)f(the)f(memory)e(bank)2040
1592 y(disapp)r(ear,)27 b(replaced)f(b)n(y)f(directly)g(wired)h
(connections.)2152 1675 y(In)48 b(our)h(hardw)n(are)g(implemen)n
(tation)e(of)j(small)f(memories,)2040 1758 y(w)n(e)42
b(cluster)f(one)h(or)f(more)g(memories)f(together)i(in)n(to)f
(directly-)2040 1841 y(connected)d(tiles)h(arranged)g(in)f(a)h
(space-e\016cien)n(t)f(in)n(terconnect.)2040 1924 y(Roughly)27
b(sp)r(eaking,)h(a)g Fj(tile)f Fk(is)h(a)g(hardw)n(are)g(region)g
(within)g(whic)n(h)2040 2007 y(wire)33 b(dela)n(y)g(is)g(less)g(than)f
(one)g(clo)r(c)n(k)h(cycle.)55 b(F)-6 b(or)33 b(simplicit)n(y)-6
b(,)33 b(w)n(e)2040 2090 y(also)e(c)n(ho)r(ose)f(to)g(correlate)h
(tiles)g(with)e(sequencing)h(con)n(trol,)h(with)2040
2173 y(one)26 b(sequencer)f(p)r(er)h(tile.)2152 2256
y(Besides)33 b(memory)d(banks,)j(eac)n(h)f(tile)h(con)n(tains)f(custom)
f(logic)2040 2339 y(as)k(w)n(ell)h(as)f(the)f(abilit)n(y)h(to)g(sc)n
(hedule)f(comm)n(unication)g(b)r(et)n(w)n(een)2040 2422
y(neigh)n(b)r(ors.)61 b(Unlik)n(e)33 b(traditional)j(memory)c(banks,)k
(whic)n(h)f(serv)n(e)2040 2505 y(as)e(sub-units)d(of)j(a)f(cen)n
(tralized)g(memory)e(system,)j(the)f(memory)2040 2588
y(banks)g(in)g(eac)n(h)g(tile)h(function)f(autonomously)g(and)g(are)h
(directly)2040 2671 y(addressable)h(b)n(y)e(the)g(custom)g(logic,)k
(without)d(going)h(through)e(a)2040 2754 y(la)n(y)n(er)f(of)h
(arbitration)g(logic.)53 b(This)32 b(organization)h(enables)f(mem-)2040
2837 y(ory)24 b(p)r(orts)g(whic)n(h)f(scale)i(with)f(the)f(hardw)n(are)
h(size.)35 b(While)24 b(w)n(e)g(will)2040 2920 y(fo)r(cus)35
b(on)e(custom)g(hardw)n(are)h(generation)h(throughout)e(this)h(pa-)2040
3003 y(p)r(er,)25 b(this)g(approac)n(h)f(is)h(generally)h(application)f
(to)g(recon\014gurable)2040 3086 y(systems)g(as)h(w)n(ell.)2040
3304 y Fl(2.2)105 b(Virtual)35 b(Wires)2040 3435 y Fk(Our)29
b(arc)n(hitectures)i(are)f(designed)g(sp)r(eci\014cally)h(to)f(k)n(eep)
g(all)h(wire)2040 3518 y(lengths)21 b(within)g(a)f(\014xed)g(small)h
(size.)33 b(This)22 b(mec)n(hanism)c(allo)n(ws)23 b(the)2040
3601 y(compiler)h(to)g(tigh)n(tly)g(con)n(trol)g(the)f(constrain)n(ts)i
(that)f(wire)g(lengths)2040 3684 y(place)34 b(on)f(the)g(clo)r(c)n(k)h
(cycle)g(time.)56 b(T)-6 b(o)34 b(maximize)e(p)r(erformance,)2040
3767 y(the)17 b(compiler)h(uses)g(a)g(spatially-a)n(w)n(are)h
(partitioner)g(that)e(maps)g(the)2040 3850 y(data)i(and)f(computation)g
(on)n(to)g(sp)r(eci\014c)h(ph)n(ysical)g(lo)r(cations)h(within)2040
3933 y(the)h(memory)e(arra)n(y)-6 b(.)33 b(The)21 b(compiler)g
(heuristically)h(minimizes)e(the)2040 4016 y(wire)27
b(length)e(b)r(et)n(w)n(een)h(comm)n(unicating)e(comp)r(onen)n(ts.)2152
4099 y(Of)32 b(course,)h(applications)g(also)g(require)e(comm)n
(unication)f(b)r(e-)2040 4182 y(t)n(w)n(een)h(remote)f(regions)i(of)g
(the)f(c)n(hip.)49 b(The)31 b(arc)n(hitecture)h(imple-)2040
4265 y(men)n(ts)17 b(suc)n(h)h(comm)n(unications)g(b)n(y)f(implemen)n
(ting)g(a)i(long)g(\\virtual)2040 4348 y(wire")29 b(out)f(of)h(m)n
(ultiple)e(short)h(ph)n(ysical)g(wires.)43 b(Conceptually)-6
b(,)29 b(a)2040 4431 y(virtual)22 b(wire)g(is)g(a)g(pip)r(elined)g
(connection)f(b)r(et)n(w)n(een)h(the)f(endp)r(oin)n(ts)2040
4514 y(of)34 b(the)f(wire.)59 b(This)34 b(connection)g(tak)n(es)f(sev)n
(eral)i(clo)r(c)n(k)e(cycles)h(to)2040 4597 y(tra)n(v)n(erse,)27
b(but)f(allo)n(ws)i(pip)r(elined)f(comm)n(unication)e(b)n(y)h(o)r(ccup)
n(ying)2040 4680 y(only)g(one)f(short)h(ph)n(ysical)g(wire)h(in)e(eac)n
(h)h(clo)r(c)n(k)g(cycle.)2152 4763 y(Virtual)k(wires)g(are)g(a)g(k)n
(ey)f(concept)g(for)i(a)e(compiler)h(that)f(op-)2040
4846 y(timizes)d(wire)g(p)r(erformance.)35 b(Our)25 b(compiler)h
(generates)g(arc)n(hitec-)2040 4929 y(tures)k(that)f(connect)h(the)g
(small)g(memories)f(using)h(virtual)g(wires;)2040 5012
y(short)j(ph)n(ysical)f(wires)h(are)g(statically)h(sc)n(heduled)e(for)h
(maxim)n(um)2040 5095 y(e\016ciency)26 b(and)f(minim)n(um)e(hardw)n
(are)j(in)n(terconnect)f(o)n(v)n(erhead.)p eop
%%Page: 3 3
3 2 bop 245 -152 a
 9472573 17429529 14274641 27036303 25391759 47494430 startTexFig
 245 -152 a
%%BeginDocument: figs/cflow.idraw
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica-Bold
%%Pages: 1
%%BoundingBox: 217 411 386 722
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.799705 0 0 0.799705 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 527.063 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 535.123 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.498132 -0 -0 0.498132 231.55 576.119 ] concat
%I
293 620 293 572 Line
%I 2
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 462.883 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 470.943 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.498132 -0 -0 0.498132 231.55 511.909 ] concat
%I
293 620 293 572 Line
%I 2
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.498132 -0 -0 0.498132 231.55 447.73 ] concat
%I
293 620 293 572 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 320.703 897.855 ] concat
%I
[
(C or Fortran Program)
] Text
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 334.433 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 342.493 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.498132 -0 -0 0.498132 231.55 319.28 ] concat
%I
293 620 293 572 Line
%I 2
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 398.673 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 406.734 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.498132 -0 -0 0.498132 231.55 383.52 ] concat
%I
293 620 293 572 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 307.503 655 ] concat
%I
[
(Custom Logic Generation)
] Text
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 273.235 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
3 0 0 [] 0 SetB
%I cfg Blue
0 0 1 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.625 -0 -0 0.5 123.753 281.396 ] concat
%I 13
258 645
554 645
570 645
570 629
570 605
570 589
554 589
258 589
242 589
242 605
242 629
242 645
258 645
13 BSpl
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 295.103 592.794 ] concat
%I
[
(Traditional CAD Optimizations)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 284.303 849.645 ] concat
%I
[
(Traditional Compiler Optimzations)
] Text
End

Begin %I Line
%I b 65535
3 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.498132 -0 -0 0.498132 231.55 254.919 ] concat
%I
293 620 293 572 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 310.703 719.24 ] concat
%I
[
(Virtual Wires Scheduling)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 306.303 785.465 ] concat
%I
[
(Small Memory Partitioning)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 0.8 0 0 0.8 352.303 528.505 ] concat
%I
[
(Hardware)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument

 endTexFig
 428 2224 a Fk(Figure)27 b(1:)35 b(Compiler)26 b(Flo)n(w)-152
2471 y Fl(2.3)105 b(Custom)34 b(Logic)-152 2603 y Fk(T)-6
b(o)26 b(maximize)f(the)g(e\016ciency)h(of)g(the)f(\014nal)h(circuit,)g
(our)g(compiler)-152 2686 y(implemen)n(ts)e(the)i(computation)f(using)h
(custom)f(logic.)36 b(This)26 b(logic)-152 2769 y(consists)g(of)f(a)g
(datapath)f(and)g(\014nite)g(state)h(con)n(trol.)35 b(Because)26
b(this)-152 2852 y(logic)j(is)f(customized)f(for)h(the)f(sp)r(eci\014c)
h(computation)f(at)g(hand,)h(it)-152 2935 y(can)23 b(b)r(e)f(smaller,)i
(consume)e(less)h(p)r(o)n(w)n(er,)h(and)e(execute)g(faster)h(than)-152
3018 y(more)18 b(general)h(purp)r(ose)g(implemen)n(tations.)31
b(Examples)17 b(of)i(sp)r(eci\014c)-152 3101 y(optimizations)g(include)
f(arithmetic)g(units)g(optimized)f(for)i(the)f(sp)r(e-)-152
3184 y(ci\014c)28 b(op)r(erations)i(in)d(the)h(program)g(and)f
(reductions)h(in)g(datapath)-152 3267 y(widths)33 b(for)h(data)f(items)
f(with)h(small)g(bit)n(widths.)56 b(The)33 b(use)g(of)g(a)-152
3350 y(small)g(\014nite)g(state)g(con)n(trol)g(eliminates)h(the)e
(area,)k(latency)-6 b(,)34 b(and)-152 3433 y(p)r(o)n(w)n(er)j
(consumption)e(of)j(general-purp)r(ose)f(hardw)n(are)g(designed)-152
3516 y(to)26 b(execute)f(a)h(stream)g(of)g(instructions.)-40
3599 y(Conceptually)-6 b(,)23 b(the)d(compiler)h(generates)h(hardw)n
(are)g(resources)-152 3682 y(suc)n(h)h(as)h(adders)f(for)h(eac)n(h)f
(instruction)g(in)g(the)g(program.)34 b(In)22 b(prac-)-152
3765 y(tice,)41 b(the)d(compiler)f(reuses)h(resources)h(across)g(clo)r
(c)n(k)e(cycles:)59 b(if)-152 3848 y(t)n(w)n(o)30 b(instructions)g
(require)f(the)g(same)g(set)g(of)i(resources)f(but)e(exe-)-152
3931 y(cute)c(in)g(di\013eren)n(t)g(cycles,)h(the)f(compiler)g(uses)g
(the)g(same)g(resource)-152 4014 y(for)29 b(b)r(oth)e(instructions.)41
b(This)28 b(approac)n(h)g(preserv)n(es)g(the)f(b)r(ene\014ts)-152
4097 y(of)g(sp)r(ecialized)g(hardw)n(are)f(while)h(generating)g
(e\016cien)n(t)e(circuits.)-40 4180 y(While)38 b(generating)g(custom)e
(logic)j(pro)n(vides)d(the)h(maxim)n(um)-152 4263 y(p)r(erformance,)28
b(our)f(approac)n(h)f(is)i(also)g(e\013ectiv)n(e)e(for)i(other)f
(imple-)-152 4346 y(men)n(tation)20 b(tec)n(hnologies.)35
b(Sp)r(eci\014cally)-6 b(,)22 b(the)f(compiler)f(could)h(also)-152
4429 y(map)e(the)g(computation)g(e\013ectiv)n(ely)h(on)n(to)g(a)g
(platform)g(with)g(recon-)-152 4512 y(\014gurable)38
b(logic)i(or)e(programmable)f(ALUs)g(instead)h(of)h(custom)-152
4595 y(logic.)-152 4821 y Fl(3)105 b(Compilation)34 b(Ov)m(erview)-152
4978 y Fk(Our)21 b(compilation)i(system)e(is)h(resp)r(onsible)h(for)f
(translating)h(an)f(ap-)-152 5061 y(plication)i(program)e(in)n(to)h(a)f
(parallel)i(arc)n(hitecture)f(sp)r(ecialized)h(for)-152
5144 y(that)c(application.)33 b(T)-6 b(o)20 b(mak)n(e)e(this)i
(translation)g(feasible,)j(our)d(com-)-152 5227 y(pilation)27
b(system)e(incorp)r(orates)j(b)r(oth)d(the)h(latest)h(co)r(de)f
(optimiza-)2040 -69 y(tion)20 b(and)g(parallelization)i(tec)n(hniques)d
(as)i(w)n(ell)g(as)f(state-of-the-art)2040 14 y(hardw)n(are)31
b(syn)n(thesis)g(tec)n(hnology)-6 b(.)49 b(Figure)32
b(1)f(sho)n(ws)g(the)g(o)n(v)n(erall)2040 97 y(compiler)22
b(\015o)n(w.)33 b(After)22 b(reading)g(in)g(the)f(program)h(and)f(p)r
(erforming)2040 180 y(traditional)39 b(compiler)e(optimizations,)42
b(the)37 b(compiler)g(p)r(erforms)2040 263 y(three)32
b(ma)t(jor)g(sets)h(of)g(transformations.)54 b(Eac)n(h)33
b(set)f(of)h(transfor-)2040 346 y(mations)c(handles)f(one)h(class)h(of)
g(primitiv)n(es:)40 b(memory)-6 b(,)27 b(wires,)k(or)2040
429 y(logic.)j(F)-6 b(ollo)n(wing)22 b(these)e(transformation,)i
(traditional)f(computer-)2040 512 y(aided-design)f(\(CAD\))f
(optimization)h(can)g(b)r(e)f(applied)h(to)g(generate)2040
596 y(the)25 b(\014nal)h(distributed-memory)d(hardw)n(are.)2152
679 y(Phase)h(ordering)h(is)f(determined)e(b)n(y)g(the)i(relativ)n(e)g
(imp)r(ortance)2040 762 y(of)29 b(eac)n(h)g(primitiv)n(e)e(in)h
(determining)g(o)n(v)n(erall)h(application)g(p)r(erfor-)2040
845 y(mance.)47 b(First,)32 b(w)n(e)f(analyze)f(and)g(partition)g
(program)g(data)h(in)n(to)2040 928 y(memories,)20 b(and)f(assign)i
(computation)d(to)i(those)g(memories)e(to)i(cre-)2040
1011 y(ate.)45 b(W)-6 b(e)28 b(then)h(sc)n(hedule)g(comm)n(unication)e
(on)n(to)i(wires.)46 b(Finally)-6 b(,)2040 1094 y(w)n(e)34
b(generate)g(custom)e(logic)j(to)f(p)r(erform)f(all)h(the)f
(computation.)2040 1177 y(The)26 b(follo)n(wing)i(sections)f(describ)r
(e)f(eac)n(h)g(comp)r(onen)n(t)e(in)i(turn.)2152 1260
y(Figure)h(2)f(in)n(tro)r(duces)g(a)h(running)e(example)g(whic)n(h)h
(illustrates)2040 1343 y(the)j(steps)h(the)f(smart)g(memory)f(compiler)
h(and)h(syn)n(thesizer)f(p)r(er-)2040 1426 y(form.)34
b(Figure)23 b(2\(a\))h(sho)n(ws)g(the)f(initial)h(co)r(de)g(and)f(data)
g(fed)h(to)f(the)2040 1509 y(compiler.)60 b(The)35 b(co)r(de)f(is)h(a)f
(simple)g Fj(for)h Fk(lo)r(op)g(con)n(taining)f(a\016ne)2040
1592 y(references)k(to)e(t)n(w)n(o)h(arra)n(ys,)j(A)c(and)g(B.)i(Both)e
(the)g(data)h(arra)n(ys)2040 1675 y(are)27 b(initially)h(mapp)r(ed)d
(to)i(the)f(same)h(monolithic)f(memory)f(bank.)2040 1758
y(Subsequen)n(t)g(sections)i(will)h(discuss)f(ho)n(w)g(this)f(program)h
(is)g(trans-)2040 1841 y(formed)21 b(b)n(y)f(smart)h(memory)f
(compilation,)j(sc)n(heduling)e(and)g(hard-)2040 1924
y(w)n(are)27 b(generation.)2040 2149 y Fl(4)105 b(Small)34
b(Memory)g(F)-9 b(ormation)2040 2306 y Fk(The)28 b(\014rst)f(phase)h
(of)g(our)f(compilation)h(system)f(is)h(small)g(memory)2040
2389 y(formation.)62 b(This)36 b(phase)e(consists)i(of)g(t)n(w)n(o)f
(main)f(steps.)62 b(First,)2040 2472 y(the)35 b(total)h(memory)d
(required)i(p)r(er)g(application)h(is)g(decomp)r(osed)2040
2555 y(in)n(to)d(smaller)g(memories)f(based)g(on)h(the)f(application's)
j(data)e(ac-)2040 2638 y(cess)i(pattern.)61 b(Second,)37
b(the)d(computation)g(is)h(assigned)h(to)f(the)2040 2722
y(appropriate)26 b(memories)f(partitions.)2040 2939 y
Fl(4.1)105 b(Memory)35 b(decomp)s(osition)2040 3070 y
Fk(The)28 b(goal)i(of)f(memory)d(decomp)r(osition)j(is)f(to)h
(partition)f(the)g(pro-)2040 3153 y(gram)c(data)f(across)j(man)n(y)c
(small)i(memories,)f(but)g(y)n(et)g(enforce)i(the)2040
3236 y(attribute)d(that)g(eac)n(h)g(program)g(data)h(reference)g(can)f
(refer)h(to)g(only)2040 3319 y(a)e(single)h(memory)d(bank.)32
b(Suc)n(h)20 b(decomp)r(osition)h(enables)g(high)g(ag-)2040
3402 y(gregrate)29 b(memory)c(bandwidth,)j(k)n(eeps)f(the)g(access)i
(logic)g(simple,)2040 3485 y(and)i(enables)i(lo)r(calit)n(y)g(b)r(et)n
(w)n(een)e(a)h(memory)e(and)i(the)f(computa-)2040 3568
y(tions)26 b(whic)n(h)g(access)h(it.)2152 3651 y(Our)33
b(memory)f(decomp)r(osition)i(problem)f(is)h(similar)h(to)f(that)2040
3734 y(for)h(Ra)n(w)f(arc)n(hitectures)h([20)q(].)60
b(The)34 b(Ra)n(w)h(compiler)f(uses)g Fj(static)2040
3817 y(pr)l(omotion)24 b Fk(tec)n(hniques)f(to)g(divide)g(the)g
(program)g(data)g(across)i(the)2040 3900 y(tile)i(in)f(suc)n(h)f(a)h(w)
n(a)n(y)g(that)g(the)g(lo)r(cation)h(of)g(the)e(data)i(for)f(eac)n(h)h
(ac-)2040 3983 y(cess)g(is)g(kno)n(wn)e(at)h(compile)g(time)g([2,)h
(3].)36 b(Our)25 b(memory)g(compiler)2040 4067 y(lev)n(erages)34
b(the)e(same)g(tec)n(hqniues.)53 b(A)n(t)32 b(the)g(coarse)h(lev)n(el,)
i(di\013er-)2040 4150 y(en)n(t)25 b(ob)t(jects)i(ma)n(y)d(b)r(e)h(allo)
r(cated)j(to)d(di\013eren)n(t)g(memories)g(through)2040
4233 y Fj(e)l(quivalenc)l(e)j(class)f(uni\014c)l(ation)p
Fk(.)35 b(A)n(t)24 b(the)h(\014ne)f(lev)n(el,)h(eac)n(h)g(arra)n(y)g
(is)2040 4316 y(p)r(oten)n(tially)g(distributed)g(across)h(sev)n(eral)f
(memories)g(through)f(the)2040 4399 y(aid)f(of)h Fj(mo)l(dulo)h(unr)l
(ol)t(ling)p Fk(.)34 b(W)-6 b(e)22 b(o)n(v)n(erview)h(eac)n(h)g(tec)n
(hnique)f(b)r(elo)n(w.)2040 4542 y Fi(Equiv)-5 b(alence)37
b(Class)g(Uni\014cation)89 b Fk(Equiv)l(alence)32 b(class)h(uni-)2040
4625 y(\014cation)f([2)q(])g(is)h(a)f(static)g(promotion)g(tec)n
(hnique)f(whic)n(h)h(uses)g(the)2040 4708 y(p)r(oin)n(ter)d(analysis)i
(to)e(collect)h(groups)g(of)g(ob)t(jects,)h(eac)n(h)f(of)g(whic)n(h)
2040 4791 y(has)i(to)f(b)r(e)g(mapp)r(ed)f(to)h(a)h(single)g(memory)-6
b(.)49 b(The)31 b(compiler)g(uses)2040 4874 y(SP)-6 b(AN)29
b([15)q(],)k(a)d(sophisticated)i(\015o)n(w-sensitiv)n(e,)g(con)n
(text-sensitiv)n(e)2040 4957 y(in)n(terpro)r(cedural)21
b(p)r(oin)n(ter)g(analysis)i(pac)n(k)l(age.)33 b(P)n(oin)n(ter)21
b(analysis)h(is)2040 5040 y(used)e(to)h(pro)n(vide)g
Fj(lo)l(c)l(ation)i(set)h(lists)d Fk(for)h(ev)n(ery)d(p)r(oin)n(ter)i
(in)g(the)f(pro-)2040 5123 y(gram,)32 b(where)f(ev)n(ery)f(lo)r(cation)
j(set)e(corresp)r(onds)g(to)g(an)g(abstract)2040 5206
y(data)36 b(ob)t(ject)h(in)f(the)f(program.)65 b(A)35
b(p)r(oin)n(ter's)h(lo)r(cation)i(set)e(list)p eop
%%Page: 4 4
4 3 bop 347 -152 a
 25149675 42626580 1710325 263127 37100912 59795619 startTexFig
 347 -152 a
%%BeginDocument: figs/allnew.idraw
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Helvetica Times-Bold Helvetica-Bold
%%Pages: 1
%%BoundingBox: 26 4 564 909
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 53 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Times-Bold reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796472 0 0 0.796472 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 322.5 408.5 ] concat
%I
255 357 447 645 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474 687.5 ] concat
%I
[
(t= i'+1)
(tmp3=ldB \(t\))
(t2=ldA \(i'\))
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 -37.5 411 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 -37.5 411 ] concat
%I
383 392 431 456 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 127.5 627 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 159.5 627 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 135.5 619 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 167.5 619 ] concat
%I
[
(0)
] Text
End

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -150 -153 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
383 392 431 456 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 397.5 780 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 429.5 780 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 405.5 772 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 437.5 772 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -198 -185 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
319 296 367 360 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 325.5 732 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 357.5 732 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 333.5 724 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 365.5 724 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -150 -185 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
319 296 367 360 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 397.5 732 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 429.5 732 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 405.5 724 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 437.5 724 ] concat
%I
[
(3)
] Text
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 -22 324.5 ] concat
%I
240 501 448 645 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 -22 244.25 ] concat
%I
240 501 448 645 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 98 244.5 ] concat
%I
240 501 448 645 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 98 324.5 ] concat
%I
240 501 448 645 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 322.5 232.5 ] concat
%I
255 357 447 645 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 450 232 ] concat
%I
255 357 447 645 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 450.5 408.5 ] concat
%I
255 357 447 645 Rect
End

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 146 -69.0001 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
383 392 431 456 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 325.5 780 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 357.5 780 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 333.5 772 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 365.5 772 ] concat
%I
[
(0)
] Text
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 459 687 ] concat
%I
[
(1:)
] Text
End

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 146 -197 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
319 296 367 360 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 325.5 732 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 357.5 732 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 333.5 724 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 365.5 724 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458 510 ] concat
%I
[
(1:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458 485.005 ] concat
%I
[
(2:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458 469.005 ] concat
%I
[
(3:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458 453.005 ] concat
%I
[
(4:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458 437.005 ] concat
%I
[
(5:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474 485.005 ] concat
%I
[
(send\(tmp1\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474 469.005 ] concat
%I
[
(tmp2=rcv\(\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474 453.005 ] concat
%I
[
(t3=t2*tmp2)
] Text
End

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 202 -197 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
319 296 367 360 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 397.5 732 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 429.5 732 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 405.5 724 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 437.5 724 ] concat
%I
[
(3)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586 510 ] concat
%I
[
(1:)
] Text
End

Begin %I Pict
%I b 65535
1 0 0 [] 0 SetB
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 202 -69.0001 ] concat

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65520
3 0 0 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 232.5 564 ] concat
%I
383 392 431 456 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 397.5 780 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 429.5 780 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 405.5 772 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 437.5 772 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586 686 ] concat
%I
[
(1:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 661.004 ] concat
%I
[
(2:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 645.004 ] concat
%I
[
(3:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 629.004 ] concat
%I
[
(4:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 613.004 ] concat
%I
[
(5:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 661.004 ] concat
%I
[
(send\(tmp0\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 645.004 ] concat
%I
[
(tmp1=rcv\(\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 629.004 ] concat
%I
[
(t3=t2*tmp1)
] Text
End

Begin %I Pict
%I b u
%I cfg White
1 1 1 SetCFg
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 426 -161 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 144.5 501.5 ] concat
%I 4
159 485
159 437
175 453
175 469
4 Poly
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -4 0 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 144.5 501.5 ] concat
%I
191 437 207 485 Rect
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ -0.5 4.37114e-08 -4.37114e-08 -0.5 343.5 946.5 ] concat
%I 3
207 453
199 445
207 437
3 Poly
End

End %I eop

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 144 544 ] concat
%I
176 376 184 376 Line
%I 2
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 178 -117 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 4 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.5 4.37114e-08 -4.37114e-08 -0.5 470 1032 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 144 568 ] concat
%I
456 392 512 400 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 300 516 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 140 584 ] concat
%I
456 392 512 400 Rect
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 178 -261 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 4 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.5 4.37114e-08 -4.37114e-08 -0.5 470 1032 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 144 568 ] concat
%I
456 392 512 400 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 300 516 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 140 584 ] concat
%I
456 392 512 400 Rect
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -4.37114e-08 -1 1 -4.37114e-08 -150 956 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 4 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.5 4.37114e-08 -4.37114e-08 -0.5 470 1032 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 144 568 ] concat
%I
456 392 512 400 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 300 516 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 140 584 ] concat
%I
456 392 512 400 Rect
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ -4.37114e-08 -1 1 -4.37114e-08 -278 956 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 4 ] concat

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ -0.5 4.37114e-08 -4.37114e-08 -0.5 470 1032 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 144 568 ] concat
%I
456 392 512 400 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 300 516 ] concat
%I 3
192 542
192 522
204 532
3 Poly
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 -0 -0 0.5 140 584 ] concat
%I
456 392 512 400 Rect
End

End %I eop

End %I eop

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -260.002 -192.478 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -260.002 -192.478 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -260.002 -192.478 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -260.002 -192.478 ] concat
%I
330 427 298 427 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
330 427 298 427 Line
%I 1
End

End %I eop

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 135 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 135 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 135 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 135 ] concat
%I
330 427 298 427 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -4.00125 71.0218 ] concat

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 -265.5 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 -265.5 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 -265.5 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 74 -265.5 ] concat
%I
330 427 298 427 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 114 602 ] concat
%I
[
(tmp3=B [i'+1])
(A [i']=A [i']*tmp0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 220 602 ] concat
%I
[
(tmp0=B [i'])
(A [i']=A [i']*tmp1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 100 522 ] concat
%I
[
(tmp1=B [i'])
(A [i']=A [i']*tmp2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 220 522 ] concat
%I
[
(tmp2=B [i'])
(A [i']=A [i']*tmp3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 152.503 584.487 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 108.234 504.207 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 262.029 516.959 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 262.034 595.488 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 228.516 503.702 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 258.523 504.45 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 141.992 516.709 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 138.739 504.202 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 228.521 582.481 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 122.991 585.485 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 155.999 596.986 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458.5 633.001 ] concat
%I
[
(3:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458.5 617.001 ] concat
%I
[
(4:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458.5 601.001 ] concat
%I
[
(5:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474.5 633.001 ] concat
%I
[
(tmp0=rcv\(\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474.5 617.001 ] concat
%I
[
(t3=t2*tmp0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 458.5 649.001 ] concat
%I
[
(2:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474.5 649.001 ] concat
%I
[
(send\(tmp3\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 486.005 ] concat
%I
[
(2:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 470.005 ] concat
%I
[
(3:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 454.005 ] concat
%I
[
(4:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 586.5 438.005 ] concat
%I
[
(5:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 486.005 ] concat
%I
[
(send\(tmp2\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 470.005 ] concat
%I
[
(tmp3=rcv\(\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 454.005 ] concat
%I
[
(t3=t2*tmp3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602 686 ] concat
%I
[
(tmp0=ldB \(i'\))
(t2=ldA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474 510 ] concat
%I
[
(tmp1=ldB \(i'\))
(t2=ldA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474.5 601.001 ] concat
%I
[
(stA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 613.004 ] concat
%I
[
(stA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602 510 ] concat
%I
[
(tmp2=ldB \(i'\))
(t2=ldA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 474 437.005 ] concat
%I
[
(stA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 602.5 438.005 ] concat
%I
[
(stA \(i'\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 258.528 582.979 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 620.134 606.982 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 509.603 656.999 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 509.348 491.944 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 653.89 503.445 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 619.877 432.17 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 637.38 492.437 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 526.351 503.945 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 491.337 430.42 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 654.142 680.002 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 637.635 668.496 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 491.595 595.478 ] concat
%I
[
(0)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
218 350 242 374 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 92.0257 -261.083 ] concat
%I
218 350 242 374 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0133 -293.095 ] concat
%I
218 350 242 374 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 92.0208 -293.098 ] concat
%I
218 350 242 374 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
266 350 266 342 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
258 350 258 342 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
250 334 242 334 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
242 326 250 326 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
234 350 234 342 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
226 350 226 342 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
242 358 250 358 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 60.0183 -261.081 ] concat
%I
242 366 250 366 Line
%I 1
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 -77.0237 -23.0071 ] concat
%I
266 275 93 128 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 209.745 287.371 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 226.748 300.372 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 161.996 353.524 ] concat
%I
[
(switch\(pc\))
({)
(  case 1:)
(    t=i'+1)
(    tmp3=ldB \(t\))
(    t2=ldA \(i'\))
(    pc=2)
(    break)
(  case 2:)
(    send\(tmp3\))
(    pc=3)
(    break)
(  case 3:)
(    tmp0=rcv\(\))
(    pc=4)
(    break)
(    .....)
( })
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 -195.06 -123.038 ] concat
%I
484 228 477 392 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.00031 0 0 1.00031 -195.06 -123.038 ] concat
%I
484 229 382 247 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 273.023 1132 ] concat
%I
[
(\(a\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -225.068 154.994 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 531 ] concat
%I
319 218 575 330 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 341.5 756 ] concat
%I
[
(A[])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 413.5 756 ] concat
%I
[
(B[])
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 160.5 564 ] concat
%I
319 296 431 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 -0 -0 0.5 232.5 564 ] concat
%I
319 296 431 456 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 335.5 678 ] concat
%I
[
(for\(i=0;i<100;i++\))
(  A[i]=A[i]*B[i+1])
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 606.009 355.989 ] concat

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
330 427 298 427 Line
%I 1
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 367.004 356.989 ] concat

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -402 69 ] concat
%I
330 427 298 427 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 589.006 814.456 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 574.006 845.995 ] concat
%I
[
(i'=0;)
(for\(i=0;i<100;i+=4\) {)
(  A [i']=A [i']*B [i'])
(  A [i']=A [i']*B [i'])
(  A [i'}=A [i']*B [i'})
(  A [i'}=A [i']*B [i'+1])
(  i' = i' + 1)
(})
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 646.021 779.442 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 618.76 814.201 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 645.251 815.706 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 588.006 790.713 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 646.502 790.463 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 618.991 779.457 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 588.229 779.205 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 618.241 802.7 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 588.479 802.947 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 619.013 790.21 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 645.269 803.462 ] concat
%I
[
(2)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 407.008 718.495 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 407.008 718.495 ] concat
%I
383 392 431 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 407.008 718.495 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 407.008 718.495 ] concat
%I
319 296 367 360 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 479.008 718.495 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 479.008 718.495 ] concat
%I
383 392 431 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 479.008 718.495 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 479.008 718.495 ] concat
%I
319 296 367 360 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 246.508 154.495 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 325.5 780 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 357.5 780 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 333.5 772 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 365.5 772 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 572.008 886.495 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 604.008 886.495 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 644.008 886.495 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 676.008 886.495 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 644.008 934.495 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 676.008 934.495 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 652.008 926.495 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 684.008 926.495 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 580.008 878.495 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 612.008 878.495 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 652.008 878.495 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 684.008 878.495 ] concat
%I
[
(3)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 0 0 0.500154 530.163 636.695 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 0 0 0.500154 602.182 636.693 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 0 0 0.500154 602.18 586.675 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 0 0 0.500154 530.155 586.673 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 0 0 0.500154 332.102 637.696 ] concat
%I
467 220 728 424 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 344.938 841.496 ] concat
%I
[
(for\(i=0;i<100;i+=4\) {)
(  A[i]=A[i]*B[i+1])
(  A[i+1]=A[i+1]*B[i+2])
(  A[i+2}=A[i+2]*B[i+3})
(  A[i+3}=A[i+3]*B[i+4])
(})
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 6.99968 -18.5082 ] concat

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 170.436 735 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 170.436 735 ] concat
%I
383 392 431 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 170.436 735 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 170.436 735 ] concat
%I
319 296 367 360 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 242.436 735 ] concat
%I
319 392 367 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 242.436 735 ] concat
%I
383 392 431 456 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 242.436 735 ] concat
%I
383 296 431 360 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 242.436 735 ] concat
%I
319 296 367 360 Rect
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 9.93604 171 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 325.5 780 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 357.5 780 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 333.5 772 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 365.5 772 ] concat
%I
[
(0)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 335.436 903 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 367.436 903 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 407.436 903 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 439.436 903 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 407.436 951 ] concat
%I
[
(A [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 439.436 951 ] concat
%I
[
(B [])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 415.436 943 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 447.436 943 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 343.436 895 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 375.436 895 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 415.436 895 ] concat
%I
[
(3)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 0.5 0 0 0.5 447.436 895 ] concat
%I
[
(3)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 -0 -0 0.500154 293.59 653.201 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 -0 -0 0.500154 365.61 653.198 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 -0 -0 0.500154 365.607 603.181 ] concat
%I
61 544 196 630 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 -0 -0 0.500154 293.583 603.178 ] concat
%I
61 544 196 630 Rect
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.500154 0 0 0.500154 301.592 634.695 ] concat
%I
72 262 328 425 Rect
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 58.0129 942.002 ] concat
%I
[
(\(b\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 298.009 942.002 ] concat
%I
[
(\(c\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 523.009 942.002 ] concat
%I
[
(\(d\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 55 651 ] concat
%I
[
(\(e\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 408.001 646.978 ] concat
%I
[
(\(f\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 55.9972 343.992 ] concat
%I
[
(\(g\))
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -1.00277 292.087 ] concat

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
314 459 338 435 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
338 435 314 411 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
330 443 298 443 Line
%I 1
End

Begin %I Line
%I b 65535
5 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 136 ] concat
%I
330 427 298 427 Line
%I 1
End

End %I eop

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 183.14 871 ] concat
%I
319 362 575 522 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 183.14 871 ] concat
%I
319 442 575 442 Line
%I 2
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 310.64 1135 ] concat
%I
[
(Data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 400.14 1119 ] concat
%I
[
(A[])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 400.14 1079 ] concat
%I
[
(B[])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 358.14 1018 ] concat
%I
[
(for\(i=0;i<100;i++\))
(  A[i]=A[i]*B[i+1])
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 2 0 0 2 359.64 1042 ] concat
%I
[
(...)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 2 0 0 2 359.64 1000 ] concat
%I
[
(...)
] Text
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 197.64 770 ] concat
%I 4
145 202
273 202
273 266
145 266
4 Poly
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.9 0 0 0.9 322.4 -305.7 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -184 -305 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 424 901 ] concat
%I
[
(A[])
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -95 300 ] concat
%I
495 556 559 636 Rect
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -160 -305 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 504 901 ] concat
%I
[
(B[])
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 -15 300 ] concat
%I
495 556 559 636 Rect
End

End %I eop

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -299 -45 ] concat
%I 3
687 572
687 564
679 548
3 BSpl
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -299 -45 ] concat
%I 3
663 572
663 564
671 548
3 BSpl
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -160 -305 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -167.5 260 ] concat
%I
703 548 8 8 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 532 815 ] concat
%I
[
(+)
] Text
End

End %I eop

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -341.5 -13 ] concat
%I
703 548 8 8 Elli
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -255 -5 ] concat
%I 10
631 500
631 492
639 484
655 484
663 484
663 492
663 564
663 572
655 572
639 572
10 BSpl
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -315.5 -13 ] concat
%I
703 548 8 8 Elli
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -184 -337 ] concat

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -902.5 -335 ] concat
%I
703 548 8 8 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 4 0 0 4 493.5 771 ] concat
%I
[
(*)
] Text
End

End %I eop

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -255 -5 ] concat
%I 5
487 532
487 524
495 508
503 500
567 444
5 BSpl
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -255 -5 ] concat
%I
487 556 487 532 Line
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -255 -5 ] concat
%I 8
575 412
575 396
575 388
567 388
503 388
495 388
495 396
495 556
8 BSpl
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.707107 0.707107 -0.707107 0.707107 152.055 -120.405 ] concat
%I
495 356 511 356 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -159 187 ] concat
%I
495 356 511 356 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -127 131 ] concat
%I
495 356 511 356 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -204 195 ] concat
%I
495 356 511 356 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -183 43 ] concat
%I
495 356 511 356 Line
%I 1
End

Begin %I Poly
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 -255 -5 ] concat
%I 5
455 356
679 356
679 652
679 652
455 652
5 Poly
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I
385 642 665 746 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I
465 698 569 730 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I
481 658 553 682 Rect
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I 3
569 714
625 714
625 586
3 MLine
%I 1
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I 4
569 706
585 706
585 674
553 674
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I 4
481 674
441 674
441 706
465 706
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I 3
401 642
401 714
465 714
3 MLine
%I 1
End

Begin %I Line
%I b 65535
2 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 -42.2156 246.036 ] concat
%I
401 586 401 642 Line
%I 1
End

Begin %I MLine
%I b 65535
2 1 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.684211 0 0 0.684211 51.5215 311.036 ] concat
%I 2
160 627
328 627
2 MLine
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 104 756 ] concat
%I
[
(Static handshakes)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 295.521 709.458 ] concat
%I
[
(State)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 295.021 739.563 ] concat
%I
[
(Logic)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 274.995 772 ] concat
%I
[
(Control FSM)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 358.5 540 ] concat
%I
[
(i')
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-14-*-*-*-*-*-*-*
Helvetica 14 SetF
%I t
[ 1 0 0 1 384 540 ] concat
%I
[
(1)
] Text
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 73 298 ] concat
%I 11
287 229
287 221
287 213
281 214
233 214
225 214
225 222
225 262
225 270
217 270
209 270
11 BSpl
%I 1
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -3.49691e-07 3.49691e-07 1 -159 44 ] concat
%I 4
495 332
519 332
511 324
503 324
4 Poly
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ -2.18557e-07 -1 1 -2.18557e-07 84.0001 967 ] concat
%I 4
495 332
519 332
511 324
503 324
4 Poly
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 71 298 ] concat
%I
273 254 273 78 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 75 298 ] concat
%I
273 70 273 54 Line
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 71 298 ] concat
%I 3
289 94
281 94
281 78
3 MLine
%I 1
End

Begin %I BSpl
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 71 298 ] concat
%I 4
337 162
289 162
281 162
257 142
4 BSpl
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 31 298 ] concat
%I
393 158 385 158 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 31 298 ] concat
%I
393 166 385 166 Line
%I 1
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -adobe-times-bold-r-normal--18-180-75-75-p-99-iso8859-1
Times-Bold 18 SetF
%I t
[ 1 0 0 1 399.997 343.992 ] concat
%I
[
(\(h\))
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 2 0 0 2 647.64 62.0002 ] concat
%I
[
(...)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1 0 0 1 308.64 1039 ] concat
%I
[
(Code)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument

 endTexFig
 -152 5414 a Fk(Figure)35 b(2:)52 b(Example.)59 b(\(a\))34
b(initial)h(program;)k(\(b\))33 b(after)i(equiv)l(alence)f(class)i(sp)r
(ecialization;)41 b(\(c\))34 b(after)h(mo)r(dulo)e(unrolling)i(step)f
(1;)39 b(\(d\))-152 5497 y(after)29 b(mo)r(dulo)f(unrolling)h(step)f
(2;)i(\(e\))e(after)h(migration)g(of)g(computation)e(to)i(memories;)g
(\(f)6 b(\))28 b(after)h(sc)n(heduling)g(of)g(in)n(terconnect)f(b)r(et)
n(w)n(een)-152 5580 y(memories;)e(\(g\))f(after)i(state)f(mac)n(hine)f
(generation;)i(\(h\))e(resulting)h(hardw)n(are)g(arc)n(hitecture.)p
eop
%%Page: 5 5
5 4 bop -152 -69 a Fk(is)31 b(a)f(list)h(of)g(abstract)g(data)f(ob)t
(jects)i(to)e(whic)n(h)g(it)g(can)h(reference.)-152 14
y(W)-6 b(e)28 b(use)g(this)g(information)h(to)f(deriv)n(e)f
Fj(alias)j(e)l(quivalenc)l(e)h(classes)p Fk(,)-152 97
y(whic)n(h)d(are)h(groups)f(of)g(p)r(oin)n(ters)h(related)f(through)f
(their)h(lo)r(cation)-152 180 y(set)h(lists.)154 149
y Fh(1)231 180 y Fk(P)n(oin)n(ters)g(in)f(the)g(same)h(alias)h(equiv)l
(alence)e(class)i(can)-152 263 y(p)r(oten)n(tially)24
b(alias)g(to)f(the)g(same)f(ob)t(ject,)j(while)e(p)r(oin)n(ters)h(in)e
(di\013er-)-152 346 y(en)n(t)i(equiv)l(alence)h(classes)h(can)f(nev)n
(er)f(reference)h(the)f(same)h(ob)t(ject.)-40 429 y(Once)c(the)g(alias)
j(equiv)l(alence)d(classes)i(are)f(determined,)f(equiv-)-152
512 y(alence)33 b(class)f(uni\014cation)g(places)g(all)h(ob)t(jects)f
(for)h(an)e(alias)i(class)-152 596 y(on)n(to)19 b(a)f(single)i(memory)
-6 b(.)29 b(This)19 b(placemen)n(t)f(ensures)g(that)g(all)h(p)r(oin)n
(t-)-152 679 y(ers)36 b(to)f(that)g(alias)i(class)f(refer)g(to)g(one)f
(memory)-6 b(.)61 b(By)35 b(mapping)-152 762 y(ob)t(jects)e(for)e(ev)n
(ery)g(alias)h(equiv)l(alence)f(class)i(in)e(suc)n(h)f(a)i(manner,)-152
845 y(all)k(memory)d(references)j(can)e(b)r(e)h(constrained)g(to)g
(addressing)g(a)-152 928 y(single)k(memory)d(bank.)70
b(By)37 b(mapping)g(di\013eren)n(t)g(alias)j(equiv)l(a-)-152
1011 y(lence)28 b(classes)h(to)e(di\013eren)n(t)g(banks,)g(memory)e
(parallelism)k(can)e(b)r(e)-152 1094 y(attained.)-40
1177 y(Figure)j(2\(b\))f(sho)n(ws)h(the)e(results)i(of)g(equiv)l
(alence)f(class)h(uni\014-)-152 1260 y(cation)24 b(on)f(the)f(initial)i
(co)r(de)f(in)g(Figure)g(2\(a\).)34 b(Since)23 b(no)g(static)h(ref-)
-152 1343 y(erence)f(in)f(the)g(program)g(can)g(address)h(b)r(oth)f
Fg(A)p Fk([])g(and)g Fg(B)t Fk([],)i(p)r(oin)n(ter)-152
1426 y(analysis)35 b(determines)e(that)h Fg(A)p Fk([])g(and)f
Fg(B)t Fk([])h(are)g(in)g(di\013eren)n(t)f(alias)-152
1509 y(equiv)l(alence)j(class.)69 b(This)37 b(analysis)g(allo)n(ws)i
(the)d(t)n(w)n(o)h(arra)n(ys)g(to)-152 1592 y(b)r(e)28
b(mapp)r(ed)d(to)j(di\013eren)n(t)f(memories,)g(while)h(ensuring)g
(that)f(eac)n(h)-152 1675 y(memory)d(reference)j(only)e(addresses)i(a)f
(single)g(memory)-6 b(.)-152 1818 y Fi(Mo)r(dulo)35 b(Unrolling)84
b Fk(The)29 b(ma)t(jor)g(limitation)g(of)h(equiv)l(alence)-152
1901 y(class)g(uni\014cation)d(is)i(that)e(arra)n(ys)i(are)f(treated)g
(as)h(single)g(ob)t(jects)-152 1984 y(that)38 b(b)r(elong)g(to)h(a)f
(single)h(alias)g(equiv)l(alence)f(class.)72 b(Mapping)-152
2067 y(an)33 b(en)n(tire)g(arra)n(y)g(to)g(a)g(single)g(memory)e
(sequen)n(tializes)j(accesses)-152 2150 y(to)g(that)g(arra)n(y)g(and)f
(destro)n(ys)h(the)f(parallelism)i(found)f(in)f(man)n(y)-152
2233 y(lo)r(ops.)56 b(Therefore,)36 b(w)n(e)d(use)f(a)h(more)e(adv)l
(anced)h(strategy)h(called)-152 2316 y(mo)r(dulo)22 b(unrolling)h([3)q
(])g(to)f(allo)n(w)i(arra)n(ys)f(to)f(b)r(e)h(distributed)e(across)-152
2399 y(di\013eren)n(t)k(memories.)-40 2482 y(Mo)r(dulo)c(unrolling)f
(applies)g(for)g(arra)n(y)f(accesses)i(whose)f(indices)-152
2565 y(are)39 b(a\016ne)f(functions)h(of)g(enclosing)h(lo)r(op)f
(induction)f(v)l(ariables.)-152 2648 y(First,)27 b(arra)n(ys)f(are)g
(partitioned)g(in)n(to)g(smaller)g(memories)f(through)-152
2731 y Fj(low-or)l(der)i(interle)l(aving)p Fk(.)35 b(In)22
b(this)h(sc)n(heme,)g(consecutiv)n(e)g(elemen)n(ts)-152
2814 y(of)k(the)e(arra)n(y)h(are)g(in)n(terlea)n(v)n(ed)g(in)f(a)h
(round-robin)f(manner)f(across)-152 2897 y(memory)k(banks)h(on)h
(successiv)n(e)h(tiles.)48 b(Next,)30 b(mo)r(dulo)f(unrolling)-152
2980 y(sho)n(ws)k(that)f(it)h(is)f(alw)n(a)n(ys)i(p)r(ossible)f(to)f
(unroll)h(lo)r(ops)g(b)n(y)e(certain)-152 3063 y(factors)d(suc)n(h)e
(that)g(in)h(the)f(resulting)h(co)r(de)g(all)g(a\016ne)g(accesses)h(go)
-152 3146 y(to)j(only)f(one)h(of)g(the)g(smaller)g(memories.)48
b(In)30 b(certain)h(cases,)i(ad-)-152 3229 y(ditional)i
(transformations)g(ma)n(y)d(b)r(e)i(required.)58 b(One)34
b(feature)g(of)-152 3312 y(mo)r(dulo)28 b(unrolling)g(is)h(that)e(it)h
(do)r(es)h(not)f(a\013ect)g(the)f(disam)n(bigua-)-152
3395 y(tion)32 b(of)g(accesses)g(to)g(an)n(y)e(other)i(equiv)l(alence)e
(class.)53 b(Details)32 b(on)-152 3478 y(determining)20
b(the)g(sym)n(b)r(olic)h(deriv)l(ations)f(of)i(the)e(minim)n(um)d
(unroll)-152 3561 y(factors)k(required,)g(and)e(the)g(co)r(de)h
(generation)g(tec)n(hniques)f(needed,)-152 3644 y(are)27
b(giv)n(en)e(in)h([3].)-40 3727 y(Figure)40 b(2\(c\))g(sho)n(ws)g(the)f
(result)h(of)g(lo)n(w-order)g(in)n(terlea)n(ving)-152
3810 y(and)e(unrolling)g(phases)g(of)g(mo)r(dulo)g(unrolling)g(on)g
(the)f(co)r(de)h(in)-152 3893 y(Figure)32 b(2\(b\))f(when)g(the)f(n)n
(um)n(b)r(er)f(of)j(desired)f(memories)f(is)i(four.)-152
3976 y(Lo)n(w)23 b(order)g(in)n(terlea)n(ving)f(splits)h(eac)n(h)g
(arra)n(y)f(in)n(to)g(four)h(sub-arra)n(ys)-152 4059
y(whose)29 b(sizes)f(are)g(a)g(quarter)f(of)h(the)f(original.)42
b(Mo)r(dulo)28 b(unrolling)-152 4142 y(uses)g(sym)n(b)r(olic)f(form)n
(ulas)g(to)h(predict)f(that)g(the)g(unroll)h(factor)g(re-)-152
4225 y(quired)j(for)i(static)g(dissam)n(biguation)f(is)g(four.)54
b(No)n(w)32 b(w)n(e)g(can)g(see)-152 4308 y(that)25 b(eac)n(h)h
(reference)g(alw)n(a)n(ys)g(go)r(es)h(to)e(one)g(tile.)36
b(Sp)r(eci\014cally)-6 b(,)25 b(the)-152 4392 y(A[i],)h(A[i+1],)f
(A[i+2])g(and)f(A[i+3])h(references)g(access)h(sub-arra)n(ys)-152
4475 y(0,)i(1,)g(2)g(and)e(3.)39 b(The)28 b(B[i+1],)h(B[i+2],)g(B[i+3])
f(and)f(B[i+4])h(refer-)-152 4558 y(ences)c(access)h(sub-arra)n(ys)e
(1,)i(2,)f(3)g(and)f(0.)34 b(Figure)25 b(2\(d\))e(sho)n(ws)h(the)-152
4641 y(co)r(de)c(after)f(the)g(co)r(de)g(generation)h(required)e(b)n(y)
g(mo)r(dulo)h(unrolling.)-152 4724 y(The)f(arra)n(y)g(references)h(ha)n
(v)n(e)e(b)r(een)g(con)n(v)n(erted)g(to)h(references)g(to)g(the)-152
4807 y(partitioned)26 b(sub-arra)n(ys,)g(with)g(appropriate)g(up)r
(dated)f(indices.)p -152 4867 797 4 v -65 4915 a Ff(1)-33
4940 y Fe(More)i(formally)-5 b(,)26 b(alias)h(equiv)l(alence)d(classes)
j(are)f(the)g(connected)e(com-)-152 5007 y(p)r(onen)n(ts)30
b(of)g(a)g(graph)g(whose)g(no)r(des)g(are)f(p)r(oin)n(ters)h(and)g
(whose)g(edges)f(are)-152 5073 y(b)r(et)n(w)n(een)j(no)r(des)g(whose)h
(lo)r(cation)e(set)i(lists)g(ha)n(v)n(e)g(at)g(least)f(one)g(common)
-152 5139 y(elemen)n(t.)2040 -69 y Fl(4.2)105 b(Computation)34
b(Assignmen)m(t)2040 63 y Fk(The)h(previous)g(memory)e(partitioning)j
(phase)f(has)g(decomp)r(osed)2040 146 y(program)54 b(data)h(structures)
f(in)n(to)g(separate)h(memories,)61 b(with)2040 229 y(groups)32
b(of)g(memories)f(clustered)h(together)g(in)n(to)g(tiles.)53
b(W)-6 b(e)31 b(next)2040 312 y(lo)r(cate)f(computation)e(close)i(to)f
(the)g(most)f(appropriate)i(memory)-6 b(.)2040 395 y(The)32
b(load)h(and)e(store)h(instructions)h(that)e(access)i(a)f(memory)e(are)
2040 478 y(alw)n(a)n(ys)36 b(assigned)g(to)f(the)g(tile)g(con)n
(taining)h(that)e(memory)-6 b(.)60 b(The)2040 561 y(remaining)30
b(computation)f(can)h(b)r(e)f(assigned)i(to)f(an)n(y)g(tile;)i(its)f
(ac-)2040 644 y(tual)e(assignmen)n(t)f(is)i(selected)f(based)g(on)g(t)n
(w)n(o)g(factors:)42 b(minimize)2040 727 y(comm)n(unication)23
b(b)r(et)n(w)n(een)i(tiles)g(and)f(minimizing)f(the)h(latency)h(of)2040
810 y(the)g(critical)j(path.)2152 893 y(Our)44 b(algorithm)h(for)g
(assigning)h(computation)e(to)h(memory)2040 976 y(tiles)24
b(directly)g(lev)n(erages)h(the)e(non-uniform)f(resource)i(arc)n
(hitecure)2040 1059 y(\(NURA\))34 b(algorithms)i(dev)n(elop)r(ed)f(for)
i(the)e(Ra)n(w)h(Mac)n(hine)g([11)q(].)2040 1142 y(In)27
b(this)g(algorithm,)i(instruction-lev)n(el)f(parallelism)g(within)g(a)g
(ba-)2040 1225 y(sic)37 b(blo)r(c)n(k)f(is)h(orc)n(hestrated)g(across)g
(m)n(ultiple)e(tiles.)67 b(This)37 b(w)n(ork)2040 1308
y(is)c(in)g(turn)f(an)h(extension)f(of)i(the)e(original)j(MIT)e
(Virtual)g(Wires)2040 1391 y(Pro)t(ject)38 b([1)q(])f(w)n(ork,)k(in)36
b(whic)n(h)h(only)g(circuit-lev)n(el,)j(or)e Fj(c)l(ombina-)2040
1474 y(tional)p Fk(,)22 b(parallelism)f(with)f(a)h(clo)r(c)n(k)f(cycle)
h(w)n(as)g(orc)n(hestrated)f(across)2040 1557 y(m)n(ultiple)25
b(tiles.)2152 1640 y(The)f(compiler)f(p)r(erforms)h(computation)e
(assignmen)n(t)h(in)h(three)2040 1723 y(steps:)80 b(clustering,)55
b(merging,)f(and)48 b(placemen)n(t.)101 b(Clustering)2040
1806 y(groups)31 b(together)g(instructions,)h(suc)n(h)e(that)g
(instructions)g(within)2040 1889 y(a)42 b(cluster)g(ha)n(v)n(e)f(no)h
(parallelism)h(that)e(can)h(pro\014tably)f(b)r(e)g(ex-)2040
1972 y(ploited)27 b(across)g(tiles)g(giv)n(en)f(the)g(cost)h(of)f(comm)
n(unication.)35 b(Merg-)2040 2055 y(ing)20 b(merges)f(the)g(cluster)g
(to)h(reduce)f(the)f(n)n(um)n(b)r(er)g(of)i(clusters)g(do)n(wn)2040
2138 y(to)j(the)e(n)n(um)n(b)r(er)g(of)i(tiles.)34 b(Placemen)n(t)22
b(p)r(erforms)h(a)f(bijectiv)n(e)h(map-)2040 2221 y(ping)29
b(from)g(the)g(merged)g(clusters)g(to)h(tiles,)h(taking)e(in)n(to)h
(accoun)n(t)2040 2304 y(the)25 b(top)r(ology)i(of)g(the)e(in)n
(terconnect.)2152 2387 y(Figure)e(2\(e\))g(sho)n(ws)g(the)g(results)g
(of)g(computation)f(assignmen)n(t)2040 2470 y(in)34 b(our)g(example.)58
b(As)33 b(w)n(e)i(describ)r(ed)f(in)f(the)h(previous)f(section,)2040
2553 y(eac)n(h)c(tile)h(con)n(tains)g(t)n(w)n(o)f(memories,)h(one)f
(for)h(eac)n(h)f(arra)n(y)-6 b(.)45 b(Com-)2040 2636
y(putation)31 b(is)h(assigned)g(directly)f(in)n(to)h(the)f(small)g
(memory)e(arra)n(y)-6 b(.)2040 2719 y(In)35 b(the)g(\014gure,)j(eac)n
(h)d(tile)h(has)g(b)r(een)f(assigned)h(a)g(subset)f(of)h(the)2040
2802 y(original)28 b(instructions.)2040 3028 y Fl(5)105
b(Virtual)34 b(Wires)i(Sc)m(heduling)2040 3185 y Fk(While)21
b(the)f(previous)h(phase)g(of)g(the)g(compiler)f(pro)r(duces)h(the)f
(small)2040 3268 y(memories,)25 b(this)g(next)g(phase)g(of)h(the)f
(compiler)h(is)f(resp)r(onsible)i(for)2040 3351 y(managing)36
b(in)n(ter-tile)g(comm)n(unication.)63 b(W)-6 b(e)35
b(term)g(this)g(phrase)2040 3434 y Fj(Virtual)28 b(Wir)l(es)g(Sche)l
(duling)p Fk(.)2152 3517 y(Although)g(mo)n(ving)g(program)g
(instruction)h(in)n(to)f(the)h(memory)2040 3600 y(system)c(eliminates)h
(long)g(memory)e(comm)n(unication)h(latencies)i(in)2040
3683 y(comparison)38 b(to)g(monolithic)f(pro)r(cessor)i(design,)j(new)
37 b(in)n(ter-tile)2040 3766 y(comm)n(unication)25 b(paths)h(will)i(no)
n(w)f(b)r(e)f(required)g(for)h(the)f(program)2040 3849
y(to)31 b(execute)g(correctly)-6 b(.)50 b(Namely)-6 b(,)31
b(there)f(are)i(data)f(dep)r(endencies)2040 3932 y(b)r(et)n(w)n(een)26
b(the)f(instructions)h(assigned)h(to)f(eac)n(h)g(tile.)2152
4015 y(In)19 b(Figure)i(2\(e\))f(the)f(data)h(dep)r(endences)g(b)r(et)n
(w)n(een)f(tiles)i(are)f(ex-)2040 4098 y(plicitly)e(sho)n(wn)g(as)g
(temp)r(orary)e(v)l(ariables)i(in)n(tro)r(duced)f(in)h(the)f(co)r(de.)
2040 4181 y(F)-6 b(or)28 b(example,)f Fg(tmp)p Fk(0)f(needs)h(to)h(b)r
(e)f(comm)n(unicated)f(b)r(et)n(w)n(een)h(the)2040 4264
y(upp)r(er-left)36 b(tile)h(and)f(the)g(upp)r(er-righ)n(t)f(tile.)67
b(Besides)38 b(data)e(de-)2040 4347 y(p)r(endencies,)27
b(there)f(are)h(also)h(con)n(trol)f(dep)r(endencies)f(in)n(tro)r
(duced.)2040 4430 y(Ho)n(w)n(ev)n(er,)f(this)f(con)n(trol)g(\015o)n(w)h
(b)r(et)n(w)n(een)f(basic)h(blo)r(c)n(ks)f(is)g(explicitly)2040
4513 y(orc)n(hestrated)35 b(b)n(y)f(the)g(compiler)h(through)g
Fj(asynchr)l(onous)j(glob)l(al)2040 4596 y(br)l(anching)28
b Fk([11)q(],)g(an)f(async)n(hronous)f(mec)n(hanism)f(for)j(implemen)n
(t-)2040 4679 y(ing)21 b(branc)n(hing)f(across)i(all)g(the)e(tiles)i
(using)e(static)i(comm)n(unication)2040 4762 y(and)30
b(individual)g(branc)n(hes)g(on)g(eac)n(h)h(tile.)49
b(Th)n(us)30 b(con)n(trol)h(dep)r(en-)2040 4845 y(dencies)26
b(will)h(b)r(e)f(turned)e(in)n(to)i(data)g(dep)r(endencies)f(as)i(w)n
(ell.)2152 4928 y(In)21 b(the)g(same)g(manner)f(as)i(the)e(original)j
(virtual)f(wires)g(sc)n(hedul-)2040 5011 y(ing)35 b(algorithm)h(for)g
(logic)g(em)n(ulation)f([1)q(],)j(our)d(static)h(sc)n(heduler)2040
5094 y(will)k(m)n(ultiplex)c(logical)41 b(comm)n(unications)c(suc)n(h)g
(as)i Fg(tmp)p Fk(0)e(with)2040 5177 y(other)31 b(comm)n(unications)f
(b)r(et)n(w)n(een)h(the)f(same)h(source)g(and)g(desti-)p
eop
%%Page: 6 6
6 5 bop -152 -69 a Fk(nation,)21 b(sharing)f(the)e(same)h(ph)n(ysical)g
(c)n(hannel.)32 b(The)19 b(m)n(ultiplexing)-152 14 y(of)32
b(this)f(ph)n(ysical)h(c)n(hannel)f(will)h(b)r(e)f(directly)g(syn)n
(thesized)g(in)g(the)-152 97 y(target)37 b(hardw)n(are)h(tec)n(hnology)
e(b)n(y)g(a)h(follo)n(wing)i(hardw)n(are)e(gen-)-152
180 y(eration)30 b(phase.)46 b(Note)29 b(that)g(comm)n(unication)f
(required)h(b)r(et)n(w)n(een)-152 263 y(non-neigh)n(b)r(or)e(tiles)h(m)
n(ust)d(b)r(e)i(routed)g(through)f(an)h(in)n(termediate)-152
346 y(tile.)-40 429 y(In)f(con)n(trast)h(to)g(the)f(Ra)n(w)h
(space-time)f(sc)n(heduler,)g(whic)n(h)h(tar-)-152 512
y(gets)34 b(a)f(simple)f(pro)r(cessor)i(and)e(static)i(switc)n(h)f(in)g
(eac)n(h)f(tile,)k(our)-152 596 y(compilation)41 b(target)f(is)h(more)e
(\015exible,)44 b(allo)n(wing)e(m)n(ultiple)d(in-)-152
679 y(structions)18 b(to)f(b)r(e)h(executed)e(in)h(parallel,)k(with)c
(the)g(only)g(constrain)n(t)-152 762 y(b)r(eing)33 b(that)g(eac)n(h)g
(memory)e(bank)h(within)h(eac)n(h)g(tile)h(can)f(b)r(e)g(ac-)-152
845 y(cessed)c(at)e(most)g(once)h(p)r(er)g(cycle.)40
b(This)29 b(additional)f(\015exibilit)n(y)f(is)-152 928
y(p)r(ossible)i(b)r(ecause)e(w)n(e)h(are)f(targeting)h(custom)f(hardw)n
(are)g(instead)-152 1011 y(of)g(a)f(\014xed)e(pro)r(cessing)j(unit.)-40
1094 y(In)j(constrast)h(to)f(compilation)g(for)h(a)f(VLIW,)g(whic)n(h)g
(also)h(in-)-152 1177 y(v)n(olv)n(es)21 b(statically)h(sc)n(heduling)f
(m)n(ultiple)g(instructions,)h(w)n(e)f(are)h(not)-152
1260 y(constrained)27 b(b)n(y)e(an)g(initial)i(set)f(of)h(function)f
(units,)g(register)h(\014les,)-152 1343 y(and)g(busses.)37
b(Our)26 b(sc)n(heduler)g(minimizes)g(the)g(execution)h(latency)-152
1426 y(of)36 b(the)e(program)g(b)n(y)g(sc)n(heduling)g(to)h(virtual)f
(function)h(units)f(as)-152 1509 y(dictated)26 b(b)n(y)f(the)g
(application.)-40 1592 y(As)e(a)g(\014nal)g(note,)h(during)e(sc)n
(heduling)h(w)n(e)h(ha)n(v)n(e)e(essen)n(tially)i(re-)-152
1675 y(laxed)g(the)e(resource)i(allo)r(cation)i(problem)c(for)i(b)r
(oth)f(registers)i(and)-152 1758 y(function)32 b(units,)g(while)h
(retaining)f(the)f(constrain)n(ts)h(for)g(memory)-152
1841 y(accesses)c(and)d(in)n(ter-tile)g(wires.)36 b(This)26
b(strategy)g(is)g(similar)g(to)f(vir-)-152 1924 y(tual)31
b(register)g(allo)r(cation)i(strategies)f(for)f(sequen)n(tial)g(pro)r
(cessors,)-152 2007 y(except)g(that)g(w)n(e)h(relax)g(all)h
(computation)d(resource)j(constrain)n(ts.)-152 2090 y(Because)f(w)n(e)f
(are)g(parallelizing)i(sequen)n(tial)e(co)r(de)g(and)f(th)n(us)g(pre-)
-152 2173 y(dominately)35 b(limited)h(b)n(y)f(memory)e(and)j(comm)n
(unication)f(costs,)-152 2256 y(this)i(relaxation)h(is)f(feasible.)69
b(Resource)37 b(allo)r(cation)i(is)e(dela)n(y)n(ed)-152
2339 y(un)n(til)26 b(the)f(later)h(custom)f(logic)i(generation)g
(phase.)-40 2422 y(Figure)f(2\(f)6 b(\))25 b(sho)n(ws)h(the)e(results)h
(of)h(comm)n(unication)d(sc)n(hedul-)-152 2505 y(ing.)34
b(The)20 b(send)h(instruction)g(in)f(eac)n(h)h(tile)g(represen)n(ts)g
(m)n(ultiplexed)-152 2588 y(comm)n(unications)c(across)i(the)f(in)n
(ter-tile)f(c)n(hannels.)32 b(The)18 b(follo)n(wing)-152
2671 y(custom)g(logic)j(generation)f(phase)f(will)h(con)n(v)n(ert)e
(these)h(instructions)-152 2754 y(to)32 b(pip)r(eline)f(registers)i
(and)e(m)n(ultiplexers)f(con)n(trolled)i(b)n(y)f(bits)g(in)-152
2837 y(the)26 b(state)g(mac)n(hine)f(in)g(eac)n(h)h(tile.)-152
3063 y Fl(6)105 b(Custom)34 b(Logic)i(Generation)-152
3220 y Fk(By)22 b(the)f(time)g(the)h(custom)f(logic)i(generation)g
(phase)e(executes,)i(the)-152 3303 y(previous)29 b(phases)g(ha)n(v)n(e)
f(mapp)r(ed)f(the)h(data)h(on)n(to)g(the)f(memories,)-152
3386 y(extracted)h(the)f(concurrency)-6 b(,)29 b(and)f(generated)i(a)f
(parallel)h(thread)-152 3469 y(of)19 b(instructions)e(for)i(eac)n(h)e
(tile.)33 b(They)17 b(ha)n(v)n(e)g(also)i(sc)n(heduled)e(the)g(ex-)-152
3552 y(ecution:)32 b(eac)n(h)21 b(memory)e(access,)k(comm)n(unication)d
(op)r(eration)h(and)-152 3635 y(instruction)31 b(has)g(b)r(een)f(mapp)r
(ed)f(to)i(a)g(sp)r(eci\014c)g(execution)f(cycle.)-152
3718 y(Finally)-6 b(,)37 b(the)c(space-time)h(sc)n(heduler)f(has)h
(mapp)r(ed)f(the)g(compu-)-152 3801 y(tation)c(and)e(comm)n(unication)g
(to)h(a)h(sp)r(eci\014c)f(lo)r(cation)i(within)e(the)-152
3884 y(memory)c(arra)n(y)-6 b(.)-40 3967 y(The)21 b(custom)f(logic)i
(generation)f(phase)f(is)h(resp)r(onsible)h(for)f(gen-)-152
4050 y(erating)36 b(a)f(hardw)n(are)h(implemen)n(tation)d(of)j(the)e
(comm)n(unication)-152 4133 y(and)g(computation)g(sc)n(hedules.)61
b(First)35 b(the)f(system)g(generates)h(a)-152 4216 y(\014nite)f(state)
h(mac)n(hine)e(that)g(pro)r(duces)i(the)e(cycle-b)n(y-cycle)g(con-)-152
4299 y(trols)21 b(for)g(all)g(the)f(functional)g(units,)i(registers)f
(and)f(memories)f(that)-152 4382 y(mak)n(e)29 b(up)g(the)g(tile.)47
b(Then)30 b(the)f(\014nite)g(state)h(mac)n(hine)f(is)h(syn)n(the-)-152
4465 y(sized)38 b(in)n(to)f(a)h(tec)n(hnology)f(indep)r(enden)n(t)f
(register-transfer-lev)n(el)-152 4548 y(sp)r(eci\014cation)e(of)f(the)f
(\014nal)h(circuit.)55 b(W)-6 b(e)32 b(discuss)h(eac)n(h)f(of)i(these)
-152 4631 y(activities)27 b(b)r(elo)n(w.)-152 4848 y
Fl(6.1)105 b(Finite)35 b(State)f(Mac)m(hine)-152 4980
y Fk(As)i(sho)n(wn)f(in)h(Figure)g(2\(g\),)i(the)d(\014nite)g(state)h
(mac)n(hine)f(\(FSM\))-152 5063 y(generator)20 b(tak)n(es)f(the)g
(thread)f(of)i(sc)n(heduled)e(instructions)i(that)e(has)-152
5146 y(b)r(een)28 b(generated)g(for)g(eac)n(h)g(tile,)h(and)e(pro)r
(duces)h(a)g(state)g(mac)n(hine)-152 5229 y(for)20 b(eac)n(h)f(thread.)
32 b(This)19 b(state)g(mac)n(hine)f(con)n(tains)h(a)g(state)g
(register,)2040 -69 y(called)36 b Fd(pc)p Fk(,)h(whic)n(h)e(serv)n(es)f
(a)h(function)g(similar)g(to)g(the)f(program)2040 14
y(coun)n(ter)25 b(in)f(a)h(con)n(v)n(en)n(tional)g(pro)r(cessor.)36
b(Eac)n(h)24 b(state)i(of)f(the)f(FSM)2040 97 y(corresp)r(onds)29
b(to)f(the)g(w)n(ork)g(that)g(will)h(b)r(e)f(done)g(in)g(a)g(single)h
(cycle)2040 180 y(in)d(the)f(resulting)h(hardw)n(are.)35
b(The)26 b(resulting)g(FSM)g(will)h(generate)2040 263
y(b)r(oth)19 b(the)f(prop)r(er)h(con)n(trol)g(to)g(calculate)h(the)f
(next)e(state,)k(including)2040 346 y(an)n(y)d(calculation)i(to)f
(generate)h(branc)n(h)d(destinations,)22 b(and)c(also)i(the)2040
429 y(prop)r(er)e(con)n(trol)g(signals)h(to)e(the)g(virtual)h
(functional)g(units)f(that)g(will)2040 512 y(b)r(e)26
b(generated)g(in)f(the)h(next)e(phase.)2152 596 y(Eac)n(h)i(state)g(of)
h(the)e(FSM)h(con)n(tains)h(a)f(set)g(of)g(p)r(ossibly)h(dep)r(en-)2040
679 y(den)n(t)f(op)r(erations.)40 b(The)27 b(FSM)g(generator)h(turns)e
(the)h(set)g(of)h(op)r(er-)2040 762 y(ations)33 b(in)f(eac)n(h)h(state)
f(in)n(to)h(com)n(binational)f(logic.)56 b(An)n(y)31
b(dep)r(en-)2040 845 y(dences)d(b)r(et)n(w)n(een)f(op)r(erations)i(in)e
(the)g(same)h(state)g(are)g(connected)2040 928 y(b)n(y)j(sp)r(ecifying)
j(wires)f(b)r(et)n(w)n(een)f(the)g(dep)r(enden)n(t)f(functions.)54
b(F)-6 b(or)2040 1011 y(an)n(y)32 b(data)i(v)l(alues)f(that)f(are)i
Fj(live)f Fk(b)r(et)n(w)n(een)g(states)g(\(pro)r(duced)g(in)2040
1094 y(one)26 b(state)g(and)g(consumed)f(in)g(a)i(di\013eren)n(t)e
(state\),)h(the)g(FSM)g(gen-)2040 1177 y(erator)h(allo)r(cates)h(a)e
(register)h(to)e(hold)h(that)f(v)l(alue.)2040 1394 y
Fl(6.2)105 b(Register)36 b(T)-9 b(ransfer)35 b(Lev)m(el)2040
1525 y Fk(The)19 b(\014nal)f(phase)h(of)g(compilation)g(in)n(v)n(olv)n
(es)f(generating)h(a)g(Register)2040 1608 y(T)-6 b(ransfer)30
b(Lev)n(el)f(\(R)-6 b(TL\))28 b(mo)r(del)g(from)h(the)f(\014nite)h
(state)g(mac)n(hine.)2040 1691 y(The)f(resulting)h(R)-6
b(TL)27 b(sp)r(eci\014cation)i(for)g(eac)n(h)f(tile)g(is)h(tec)n
(hnology-)2040 1774 y(indep)r(enden)n(t)i(and)h(application-sp)r
(eci\014c.)55 b(Eac)n(h)32 b(tile)h(con)n(tains)f(a)2040
1858 y(datapath)23 b(of)g(in)n(ter-connected)g(functional)g(units,)h
(sev)n(eral)f(memo-)2040 1941 y(ries,)d(and)d(con)n(trol)h(elemen)n
(ts.)31 b(Figure)18 b(2\(h\))g(sho)n(ws)g(a)g(logic)g(diagram)2040
2024 y(for)27 b(the)e(circuit)i(that)e(w)n(ould)i(b)r(e)e(generated)i
(from)e(the)h(FSM.)g(The)2040 2107 y(datapath)20 b(is)g(syn)n(thesized)
g(out)f(of)i(registers)g(\(represen)n(ted)f(b)n(y)f(solid)2040
2190 y(blac)n(k)j(bars)h(in)g(the)f(\014gure\),)h(higher)g(order)g
(functional)g(units)f(\(suc)n(h)2040 2273 y(as)k(adders)g(and)f(m)n
(ultipliers\))g(and)h(m)n(ultiplexers.)33 b(A)25 b(con)n(troller)i(is)
2040 2356 y(sp)r(eci\014ed)f(in)f(R)-6 b(TL)25 b(to)g(con)n(trol)h(the)
f(actions)i(of)f(the)f(datapath)g(and)2040 2439 y(the)g(in)n(ter-pro)r
(cessor)i(I/O.)2152 2522 y(The)38 b(next)f(step)g(syn)n(thesizes)h
(logic)h(for)f(the)g(address,)j(data,)2040 2605 y(and)30
b(enable)g(signals)i(for)f(eac)n(h)f(memory)e(reference)j(in)f(the)g
(FSM.)2040 2688 y(F)-6 b(or)28 b(example)f(the)g(address)h(signals)i
(are)e(sho)n(wn)g(as)g(arro)n(ws)h(going)2040 2771 y(in)n(to)d(the)f
Fd(A[])h Fk(and)f Fd(B[])i Fk(memories)e(in)g(Figure)h(2\(h\).)35
b(Whenev)n(er)24 b(a)2040 2854 y(reference)29 b(has)f(b)r(een)f
(statically)j(mapp)r(ed)c(to)i(a)g(sp)r(eci\014c)h(memory)-6
b(,)2040 2937 y(the)32 b(address)h(calculation)h(is)g(sp)r(ecialized)g
(to)f(eliminate)f(the)g(bits)2040 3020 y(that)27 b(select)h(that)e
(memory)f(as)j(the)f(target,)h(as)g(describ)r(ed)f(further)2040
3103 y(in)38 b(Section)h(6.3.)74 b(This)39 b(sp)r(ecialization)i
(simpli\014es)d(the)g(address)2040 3186 y(calculation)i(hardw)n(are,)i
(so)d(it)f(consumes)g(less)h(p)r(o)n(w)n(er)g(and)f(less)2040
3269 y(area.)2152 3352 y(The)30 b(compiler-generated)f(arc)n(hitecture)
h(m)n(ust)e(include)i(com-)2040 3435 y(m)n(unication)g(c)n(hannels)g(b)
r(et)n(w)n(een)g(eac)n(h)h(FSM)f(for)h(in)n(ter-tile)g(com-)2040
3518 y(m)n(unication.)g(The)17 b(comm)n(unication)f(syn)n(thesis)h
(step)g(creates)h(these)2040 3601 y(c)n(hannels)42 b(from)g(the)g(in)n
(ter-tile)g(comm)n(unication)f(dep)r(endencies)2040 3684
y(and)25 b(syn)n(thesizes)f(the)h(appropriate)g(con)n(trol)h(logic)g
(in)n(to)f(the)f(FSM.)2040 3767 y(This)29 b(logic)h(is)f(sho)n(wn)g(as)
g(the)f(m)n(ultiplexors)g(on)g(the)g(b)r(ottom)g(and)2040
3850 y(righ)n(t)39 b(hand)f(side)i(of)g(Figure)f(2\(h\).)74
b(In)39 b(addition,)j(the)d(con)n(trol)2040 3933 y(logic)29
b(includes)f(static)g(handshaking)f(signals)i(b)r(et)n(w)n(een)f(eac)n
(h)f(pair)2040 4016 y(of)k(comm)n(unicating)d(FSMs)j(as)f(sho)n(wn)g
(in)g(the)f(upp)r(er)h(left)g(corner)2040 4099 y(of)d(Figure)f(2\(h\).)
2152 4182 y(Finally)-6 b(,)47 b(the)41 b(compiler)h(outputs)f(tec)n
(hnology)h(indep)r(enden)n(t)2040 4265 y(V)-6 b(erilog)38
b(R)-6 b(TL.)37 b(This)h(step)f(is)g(a)h(mo)r(di\014cation)f(of)h(the)e
(Stanford)2040 4348 y(V)-6 b(eriSUIF)29 b(V)-6 b(erilog)30
b(output)f(passes.)48 b(SUIF)29 b(data)h(structures)g(are)2040
4431 y(\014rst)22 b(con)n(v)n(erted)e(in)n(to)i(V)-6
b(erilog)23 b(data)e(structures)h(and)f(then)g(written)2040
4514 y(as)i(V)-6 b(erilog)23 b(R)-6 b(TL)21 b(to)h(an)h(output)e
(\014le.)33 b(The)22 b(output)f(fully)i(describ)r(es)2040
4597 y(the)37 b(cycle-lev)n(el)h(b)r(eha)n(vior)g(of)h(the)e(circuit,)
42 b(including)37 b(all)i(state)2040 4680 y(transitions)27
b(and)e(actions)i(to)f(b)r(e)f(tak)n(e)h(ev)n(ery)f(cycle.)2152
4763 y(W)-6 b(e)21 b(ha)n(v)n(e)g(describ)r(ed)g(the)g(steps)h(that)f
(are)g(required)g(to)h(compile)2040 4846 y(a)31 b(program)g(in)n(to)g
(hardw)n(are.)51 b(In)30 b(the)h(next)f(section)i(w)n(e)f(describ)r(e)
2040 4929 y(some)f(of)g(the)g(additional)g(optimization)g(opp)r
(ortunities)h(that)e(are)2040 5012 y(a)n(v)l(ailable)e(when)e(pro)r
(ducing)h(hardw)n(are.)p eop
%%Page: 7 7
7 6 bop 395 -152 a
 7104430 6038764 10656645 28417720 21839544 37956075 startTexFig
 395 -152 a
%%BeginDocument: figs/specialize.idraw
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts: Courier-Bold Helvetica
%%Pages: 1
%%BoundingBox: 162 432 332 577
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Courier-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-bold-r-normal-*-12-*-*-*-*-*-*-*
Courier-Bold 12 SetF
%I t
[ 2 0 0 2 205 719.5 ] concat
%I
[
(i)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-bold-r-normal-*-12-*-*-*-*-*-*-*
Courier-Bold 12 SetF
%I t
[ 2 0 0 2 205 607.5 ] concat
%I
[
(j)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-bold-r-normal-*-12-*-*-*-*-*-*-*
Courier-Bold 12 SetF
%I t
[ 2 0 0 2 349 703.5 ] concat
%I
[
(A)
] Text
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 602
220 602
220 642
172 642
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 594
212 594
212 634
172 634
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 586
204 586
204 626
172 626
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 578
196 578
196 618
172 618
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 546
220 546
220 506
172 506
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 554
212 554
212 514
172 514
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 562
204 562
204 522
172 522
4 MLine
%I 1
End

Begin %I MLine
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I 4
244 570
196 570
196 530
172 530
4 MLine
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 60 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 68 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 76 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 84 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 92 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 100 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 108 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 116 78 ] concat
%I
268 506 268 466 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 52 78 ] concat
%I
244 506 364 642 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ 1.5 0 0 1.5 338.25 605 ] concat
%I
[
(data)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-12-*-*-*-*-*-*-*
Helvetica 12 SetF
%I t
[ -6.55671e-08 -1.5 1.5 -6.55671e-08 315.5 687.25 ] concat
%I
[
(address)
] Text
End

End %I eop

showpage

%%Trailer

end

%%EndDocument

 endTexFig
 -152 779 a Fk(Figure)33 b(3:)48 b(Example)31 b(of)i(address)f(sp)r
(ecialization.)56 b(The)32 b(address)-152 862 y(calculation)g(for)e
(the)g(arra)n(y)g(reference)h Fd(A[i][j])g Fk(can)f(b)r(e)g(en)n
(tirely)-152 945 y(eliminated.)k(Instead,)25 b(the)f(v)l(alues)g(of)h
Fd(i)g Fk(and)f Fd(j)g Fk(are)h(placed)g(on)f(the)-152
1028 y(corresp)r(onding)j(address)f(wires.)-152 1275
y Fl(6.3)105 b(Other)35 b(Custom)e(Logic)-152 1407 y
Fk(Along)24 b(with)h(the)e(parallelism)i(that)f(is)g(a)n(v)l(ailable)h
(in)f(custom)f(logic,)-152 1490 y(an)36 b(additional)g(adv)l(an)n(tage)
g(is)g(that)f(when)g(the)g(bit-lev)n(el)g(op)r(era-)-152
1573 y(tions)24 b(are)f(exp)r(osed)g(to)h(the)e(compiler,)i(the)f
(compiler)g(can)g(p)r(erform)-152 1656 y(additional)28
b(optimizations)g(b)r(ey)n(ond)e(those)h(found)g(b)n(y)f(traditional)
-152 1739 y(soft)n(w)n(are)g(optimizers.)34 b(These)25
b(include)e(the)h(p)r(ossibilit)n(y)h(of)g(folding)-152
1822 y(constan)n(ts)19 b(directly)g(in)n(to)f(the)g(circuitry)h(and)f
(using)h(other)f(compile-)-152 1905 y(time)25 b(kno)n(wledge)i(to)e
(completely)h(eliminate)f(gates.)-152 2094 y Fi(Address)43
b(Calculation.)110 b Fk(The)38 b(primary)e(example)h(of)h(hard-)-152
2177 y(w)n(are)k(sp)r(ecialization)h(in)n(v)n(olv)n(es)e
(simpli\014cation)g(of)h(address)f(cal-)-152 2260 y(culation.)63
b(As)35 b(an)g(example,)i(consider)e(what)h(w)n(ould)f(happ)r(en)f(if)
-152 2343 y(the)c(co)r(de)h(in)f(Figure)h(2)g(had)f(referenced)h(a)g(t)
n(w)n(o)f(dimensional)h(ar-)-152 2426 y(ra)n(y)-6 b(,)30
b(lik)n(e)g Fd(A[i][j])p Fk(.)47 b(The)29 b(naiv)n(e)h(co)r(de)f(for)i
(this)e(address)h(calcula-)-152 2509 y(tion)f(w)n(ould)g(b)r(e)g
Fd(A)39 b(+)h(\(i)g(*)f(Y)p 741 2509 24 4 v 28 w(DIM)h(+)g(j\))g(*)f(4)
p Fk(.)44 b(In)28 b(the)g(case)i(that)-152 2592 y Fd(Y)p
-108 2592 V 29 w(DIM)41 b Fk(w)n(as)h(a)f(p)r(o)n(w)n(er)h(of)g(2,)j
(most)40 b(compilers)i(w)n(ould)f(strength)-152 2675
y(reduce)e(the)f(m)n(ultiplication)h(op)r(erations)h(to)f(shifts)h(to)f
(pro)r(duce)-152 2758 y Fd(A)h(+)f(\(i)h(<<)g(LOG2)p
402 2758 V 29 w(Y)p 470 2758 V 28 w(DIM)g(+)g(j\))f(<<)h(2)p
Fk(.)-40 2841 y(In)24 b(most)g(soft)n(w)n(are)i(systems)e(this)g(is)h
(the)f(minimal)f(calculation)-152 2924 y(to)k(reference)g(a)g(t)n(w)n
(o)g(dimensional)g(arra)n(y)-6 b(.)36 b(In)26 b(hardw)n(are)h(systems,)
-152 3007 y(on)35 b(the)f(other)h(hand,)h(w)n(e)f(can)g(sp)r(ecialize)h
(ev)n(en)e(further.)61 b(First,)-152 3090 y(since)27
b(w)n(e)g(p)r(erform)f(equiv)l(alence)h(class)g(uni\014cation,)h(as)f
(describ)r(ed)-152 3173 y(in)18 b(Section)f(4.1,)k(the)c
Fd(A)h Fk(arra)n(y)g(will)h(liv)n(e)e(in)h(its)g(o)n(wn)g(priv)l(ate)f
(memory)-6 b(.)-152 3256 y(Then)27 b(ev)n(ery)g(reference)h(will)g(lie)
g(at)f(an)g(o\013set)h(from)f(lo)r(cation)i(0)e(of)-152
3339 y(the)g(memory)e(for)i(arra)n(y)h Fd(A)p Fk(,)f(so)g(the)g
(\014rst)g(addition)g(op)r(eration)h(can)-152 3422 y(b)r(e)e
(eliminated.)35 b(F)-6 b(urthermore,)25 b(the)g(memory)f(for)i
Fd(A)g Fk(can)g(b)r(e)g(built)-152 3505 y(to)h(b)r(e)g(of)g(the)g(same)
f(width)h(as)g(the)f(data)h(w)n(ord,)h(so)f(that)f(the)h(\014nal)-152
3588 y(m)n(ultiplication)35 b(b)n(y)f(4)h(can)g(b)r(e)g(completely)f
(eliminated,)j(lea)n(ving)-152 3671 y Fd(\(i)j(<<)g(LOG2)p
245 3671 V 29 w(Y)p 313 3671 V 28 w(DIM)g(+)g(j\))p Fk(.)-40
3754 y(While)c(in)e(a)i(con)n(v)n(en)n(tional)f(RISC)f(pro)r(cessor)i
(logical)h(op)r(era-)-152 3837 y(tions)29 b(require)f(the)f(same)h(n)n
(um)n(b)r(er)e(of)j(cycles)f(as)h(an)f(addition)g(op-)-152
3920 y(eration,)h(in)f(hardw)n(are)g(a)g Fd(logical)41
b(or)28 b Fk(op)r(eration)g(is)g(b)r(oth)g(faster)-152
4003 y(and)21 b(smaller)h(than)f(an)g(adder.)33 b(Our)21
b(compiler)g(p)r(erforms)h Fj(bit-width)-152 4086 y(optimization)30
b Fk(to)e(transform)h(these)g Fd(add)g Fk(op)r(erations)h(in)n(to)f
Fd(or)g Fk(op-)-152 4169 y(erations.)55 b(The)32 b(compiler)g
(calculates)h(the)f(maxim)n(um)c(bit-width)-152 4252
y(of)e Fd(j)p Fk(,)f(and)g(\014nds)f(that)g(since)i Fd(j)39
b(<)g(Y)p 905 4252 V 29 w(DIM)p Fk(,)26 b(the)e(maxim)n(um)d(v)l(alue)k
(of)-152 4335 y Fd(j)f Fk(nev)n(er)f(consumes)g(more)h(than)f
Fd(LOG)p 944 4335 V 29 w(Y)p 1012 4335 V 28 w(DIM)h Fk(bits,)h(so)f
(the)f(bits)h(of)h Fd(j)-152 4418 y Fk(and)k(the)g(bits)h(of)g
Fd(\(i)40 b(<<)f(LOG2)p 778 4418 V 29 w(Y)p 846 4418
V 29 w(DIM\))30 b Fk(nev)n(er)f(o)n(v)n(erlap.)46 b(The)29
b(ad-)-152 4501 y(dition)23 b(in)f(this)g(expression)g(can)h(then)e(b)r
(e)h(optimized)f(a)n(w)n(a)n(y)i(to)f(pro-)-152 4584
y(duce)28 b Fd(\(i)39 b(<<)h(LOG)p 387 4584 V 29 w(Y)p
455 4584 V 28 w(DIM)g(|)g(j\))p Fk(.)h(Finally)-6 b(,)28
b(since)h Fd(oring)f Fk(an)n(ything)-152 4667 y(with)e(0)f(pro)r(duces)
g(that)g(v)l(alue,)h(the)f Fd(or)g Fk(gates)h(can)g(b)r(e)f
(eliminated,)-152 4750 y(and)c(replaced)h(with)g(wires.)34
b(The)22 b(result)f(is)h(that)f(the)g(t)n(w)n(o)h(v)l(alues,)h
Fd(i)-152 4833 y Fk(and)k Fd(j)p Fk(,)g(can)g(b)r(e)g(concatenated)g
(to)h(form)e(the)h(\014nal)g(address.)38 b(This)-152
4916 y(\014nal)26 b(transformation)g(is)h(sho)n(wn)f(in)f(Figure)h(3.)
-152 5105 y Fi(Floating)34 b(P)n(oin)n(t.)68 b Fk(F)-6
b(or)28 b(eac)n(h)g(\015oating)g(p)r(oin)n(t)g(op)r(eration)g(in)g(the)
-152 5188 y(program)k(the)f(compiler)h(replaces)g(the)g(op)r(eration)g
(with)g(a)g(set)g(of)2040 -69 y(simpler)27 b(in)n(teger)g(and)f(bit)h
(lev)n(el)g(micro-op)r(erations)g(using)g(a)g(tec)n(h-)2040
14 y(nique)32 b(similar)h(to)g([4].)56 b(These)33 b(resulting)g
(micro-op)r(erations)g(can)2040 97 y(then)e(b)r(e)h(optimized)g(and)f
(sc)n(heduled)h(b)n(y)f(the)g(datapath)h(genera-)2040
180 y(tor.)j(Because)27 b(the)f(constituen)n(t)f(exp)r(onen)n(t)g(and)g
(man)n(tissa)h(micro-)2040 263 y(op)r(erations)37 b(are)f(exp)r(osed)f
(to)h(the)f(compiler,)k(the)c(compiler)g(can)2040 346
y(exploit)27 b(the)f(parallelism)h(b)r(oth)g(inside)f(individual)h
(\015oating)g(p)r(oin)n(t)2040 429 y(op)r(erations)k(and)e(also)i(b)r
(et)n(w)n(een)e(di\013eren)n(t)g(\015oating)h(p)r(oin)n(t)f(op)r(era-)
2040 512 y(tions.)2152 596 y(As)24 b(an)g(example)g(of)h(the)f(sp)r
(ecialization)i(that)e(can)h(o)r(ccur,)g(con-)2040 679
y(sider)h(dividing)g(a)g(\015oating)g(p)r(oin)n(t)g(n)n(um)n(b)r(er)e
(with)i(a)g(constan)n(t)g(that)2040 762 y(can)35 b(b)r(e)g(written)g
(as)h(a)f(factor)h(of)g(t)n(w)n(o,)i Fj(e.g.)62 b Fg(y)39
b Fk(=)e Fg(x=)p Fk(2)p Fg(:)p Fk(0.)63 b(Exe-)2040 845
y(cuting)27 b(this)h(division)g(op)r(eration)g(w)n(ould)g(tak)n(e)f
(man)n(y)f(cycles)i(on)f(a)2040 928 y(traditional)g(\015oating-p)r(oin)
n(t)f(execution)f(unit.)2152 1011 y(Ho)n(w)n(ev)n(er,)34
b(b)n(y)c(exp)r(osing)i(the)g(micro-op)r(erations)g(required)f(to)2040
1094 y(do)23 b(the)g(\015oating-p)r(oin)n(t)h(computation)f(in)g(terms)
g(of)h(op)r(erations)h(on)2040 1177 y(the)d(exp)r(onen)n(t)f(and)h(man)
n(tissa)g(and)f(generating)j(sp)r(ecialized)f(hard-)2040
1260 y(w)n(are)k(for)g(the)e(computation,)h(the)g(cycle)g(coun)n(t)g
(of)g(this)h(op)r(eration)2040 1343 y(can)j(b)r(e)g(optimized)g(b)n(y)f
(an)h(order)g(of)h(magnitude.)47 b(The)30 b(required)2040
1426 y(micro-op)r(eration)e(to)g(p)r(erform)f(suc)n(h)g(a)h(division)g
(is)g(to)g(subtract)f(1)2040 1509 y(from)j(the)f(exp)r(onen)n(t)g(of)i
Fg(x)p Fk(.)46 b(The)30 b(time)f(to)h(execute)g(the)f(\015oating-)2040
1592 y(p)r(oin)n(t)j(division)h(op)r(eration)g(reduces)f(to)g(the)g
(latency)g(of)h(a)f(single)2040 1675 y(\014xed-p)r(oin)n(t)24
b(subtraction.)2040 1900 y Fl(7)105 b(Exp)s(erimen)m(tal)33
b(Results)2040 2057 y Fk(W)-6 b(e)17 b(ha)n(v)n(e)h(implemen)n(ted)d(a)
j(compiler)g(that)g(is)g(capable)g(of)h(accepting)2040
2140 y(a)k(sequen)n(tial)g(application,)i(written)f(in)e(either)h(C)h
(or)f(F)-6 b(ortran,)24 b(and)2040 2223 y(automatically)j(generating)g
(a)g(sp)r(ecialized)g(arc)n(hitecture)g(for)g(that)2040
2306 y(application.)50 b(The)31 b(compiler)g(con)n(tains)g(all)h(of)f
(the)f(functionalit)n(y)2040 2389 y(describ)r(ed)c(in)g(the)f(previous)
g(sections)i(of)g(this)e(pap)r(er.)2152 2472 y(This)30
b(section)h(presen)n(ts)e(exp)r(erimen)n(tal)g(results)h(for)h(an)e
(initial)2040 2555 y(set)e(of)g(applications)g(that)f(w)n(e)h(ha)n(v)n
(e)e(compiled)h(to)h(hardw)n(are.)36 b(F)-6 b(or)2040
2638 y(eac)n(h)25 b(application,)i(our)e(compiler)g(pro)r(duces)h(an)f
(arc)n(hitecture)g(de-)2040 2722 y(scription)k(in)f(R)-6
b(TL)27 b(V)-6 b(erilog.)42 b(W)-6 b(e)28 b(further)g(syn)n(thesize)g
(this)g(arc)n(hi-)2040 2805 y(tecture)h(to)h(logical)i(gates)f(with)f
(a)f(commercial)h(CAD)f(to)r(ol.)47 b(The)2040 2888 y(curren)n(t)35
b(target)h(tec)n(hnology)g(in)f(whic)n(h)g(w)n(e)h(rep)r(ort)g(gate)g
(coun)n(ts)2040 2971 y(is)26 b(the)e(reference)i(tec)n(hnology)f(pro)n
(vided)g(with)g(the)g(IK)n(OS)e(Virtua-)2040 3054 y(Logic)29
b(System)e([9)q(].)42 b(This)28 b(system)f(is)i(a)f(logic)i(em)n
(ulator)e(that)f(can)2040 3137 y(b)r(e)34 b(used)f(to)h(v)l(alidate)g
(designs)g(of)h(up)d(to)i(one)g(million)g(gates,)j(as)2040
3220 y(w)n(ell)27 b(as)f(additional)h(custom)e(memories.)2152
3303 y(Our)32 b(curren)n(t)g(timing)h(mo)r(del,)h(enforced)g(during)e
(sc)n(heduling,)2040 3386 y(limits)c(the)g(amoun)n(t)f(of)i
(computation)e(that)h(ma)n(y)f(b)r(e)h(assigned)h(to)2040
3469 y(an)n(y)g(one)h(clo)r(c)n(k)g(cycle)g(to)g(b)r(e)f(less)i(than)e
(the)g(equiv)l(alen)n(t)g(dela)n(y)h(of)2040 3552 y(a)g(32-bit)g
(addition)g(or)f(the)h(latency)f(of)i(a)e(small)h(memory)e(access.)2040
3635 y(The)33 b(exact)g(clo)r(c)n(k)h(p)r(erio)r(d)f(of)h(eac)n(h)f
(circuit)g(will)i(b)r(e)e(tec)n(hnology-)2040 3718 y(dep)r(enden)n(t,)
22 b(but)g(due)h(to)g(this)g(constrain)n(t)g(will)h(b)r(e)f(similar)h
(to)f(that)2040 3801 y(of)29 b(a)g(simple)g(pro)r(cessor)h(implemen)n
(ted)c(in)j(the)f(same)g(tec)n(hnology)-6 b(.)2040 3884
y(W)g(e)37 b(rep)r(ort)h(execution)f(times)g(as)h(total)g(cycle)f(coun)
n(ts)g(for)h(eac)n(h)2040 3967 y(application.)2152 4050
y(T)-6 b(able)25 b(1)f(giv)n(es)h(the)f(c)n(haracteristics)i(of)f(the)e
(b)r(enc)n(hmarks)g(used)2040 4133 y(for)38 b(the)e(ev)l(aluation.)69
b(These)38 b(applications)g(include)f(one)g(tradi-)2040
4216 y(tional)24 b(scien)n(ti\014c)f(program)f(and)g(three)h(m)n
(ultimedia)e(applications.)2040 4299 y(The)27 b(input)g(programs)g(are)
h(all)g(sequen)n(tial.)39 b(Jacobi)28 b(is)g(an)f(in)n(teger)2040
4382 y(v)n(ersion)k(of)g(a)g(iterativ)n(e)g(relaxation)h(algorithm.)50
b(Adp)r(cm-enco)r(de)2040 4465 y(is)32 b(the)g(compression)g(part)g(of)
g(the)g(compression/decompression)2040 4548 y(pair)18
b(in)g(Adp)r(cm.)31 b(MPEG-k)n(ernel)18 b(is)h(the)e(p)r(ortion)i(of)f
(MPEG)i(whic)n(h)2040 4631 y(tak)n(es)28 b(up)f(70\045)h(of)h(the)e
(total)h(run-time.)39 b(SHA)27 b(implemen)n(ts)f(a)i(se-)2040
4714 y(cure)e(hash)f(algorithm.)2152 4797 y(F)-6 b(or)35
b(reference,)j(w)n(e)d(also)h(compare)e(our)h(results)g(with)g(previ-)
2040 4880 y(ously)27 b(published)f(sim)n(ulation)h(results)g(from)g(a)g
(parallel)i(Ra)n(w)e(ma-)2040 4963 y(c)n(hine)34 b(with)g(one)g(to)h
(16)f(pro)r(cessors.)62 b(Because)35 b(our)f(compiler)g(is)2040
5046 y(based)21 b(on)f(the)g(same)g(fron)n(tend)h(infrastructure)g(for)
g(parallelization)2040 5129 y(as)f(the)f(Ra)n(w)g(compiler,)i(this)e
(comparison)g(allo)n(ws)j(us)d(to)g(isolate)i(the)2040
5212 y(e\013ect)26 b(of)g(customizing)g(the)f(tile)i(for)f(an)g
(application.)p eop
%%Page: 8 8
8 7 bop 107 -72 3667 4 v 105 -6 4 67 v 152 -25 a Fe(Benc)n(hmark)p
623 -6 V 190 w(T)n(yp)r(e)p 1045 -6 V 273 w(Source)p
1501 -6 V 318 w(Lines)p 1797 -6 V 89 w(Seq.)28 b(R)-5
b(T)p 2127 -6 V 146 w(Primary)p 2510 -6 V 88 w(Description)p
3772 -6 V 105 61 V 623 61 V 1045 61 V 1501 61 V 1548
41 a(of)22 b(co)r(de)p 1797 61 V 107 w(\(cycles\))p 2127
61 V 88 w(Arra)n(y)h(size)p 2510 61 V 3772 61 V 107 64
3667 4 v 107 79 V 105 146 4 67 v 152 126 a(Jacobi)p 623
146 V 331 w(Dense)f(Mat.)p 1045 146 V 89 w(Ra)n(wb)r(enc)n(h)p
1501 146 V 300 w(59)p 1797 146 V 152 w(2.38M)p 2127 146
V 198 w(32)p Fc(\002)p Fe(32)p 2510 146 V 90 w(Jacobi)g(Relaxation)p
3772 146 V 107 149 3667 4 v 105 215 4 67 v 152 195 a(Adp)r(cm-enco)r
(de)p 623 215 V 86 w(Multimedia)p 1045 215 V 87 w(Mediab)r(enc)n(h)p
1501 215 V 214 w(133)p 1797 215 V 185 w(7.1M)p 2127 215
V 250 w(1000)p 2510 215 V 90 w(Sp)r(eec)n(h)e(compression)p
3772 215 V 107 219 3667 4 v 105 285 4 67 v 152 265 a(MPEG-k)n(ernel)p
623 285 V 119 w(Multimedia)p 1045 285 V 87 w(UC)j(Berk)n(eley)p
1501 285 V 229 w(86)p 1797 285 V 161 w(14.6K)p 2127 285
V 198 w(32)p Fc(\002)p Fe(32)p 2510 285 V 90 w(MPEG-1)g(Video)e(Soft)n
(w)n(are)h(Enco)r(der)e(k)n(ernel)p 3772 285 V 107 288
3667 4 v 105 355 4 67 v 152 335 a(SHA)p 623 355 V 382
w(Multimedia)p 1045 355 V 87 w(P)n(erl)i(Oasis)p 1501
355 V 269 w(608)p 1797 355 V 185 w(1.0M)p 2127 355 V
165 w(512)p Fc(\002)p Fe(16)p 2510 355 V 90 w(Secure)f(Hash)h
(Algorithm)p 3772 355 V 107 358 3667 4 v -152 578 a Fk(T)-6
b(able)29 b(1:)38 b Fb(Benc)n(hmark)26 b(c)n(haracteristics.)37
b(Column)25 b Fa(Se)l(q.)38 b(R)-5 b(T)25 b Fb(sho)n(ws)g(the)h
(run-time)e(for)h(the)i(unipro)r(cessor)e(co)r(de)i(generated)g(b)n(y)f
(the)g(Mac)n(hsuif)f(MIPS)-152 652 y(compiler.)-68 815
y
 14407812 6157187 -2368143 -723599 27299430 11906498 startTexFig
 -68 815 a
%%BeginDocument: graphs/basecomp.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Page: 1 1
%%BoundingBox: -36 -11 415 181
%%EndComments
1 setlinecap 1 setlinejoin
0.700 setlinewidth
0.00 setgray

/Jrnd { exch cvi exch cvi dup 3 1 roll idiv mul } def
/JDEdict 8 dict def
JDEdict /mtrx matrix put
/JDE {
  JDEdict begin
  /yrad exch def
  /xrad exch def
  /savematrix mtrx currentmatrix def
  xrad yrad scale
  0 0 1 0 360 arc
  savematrix setmatrix
  end
} def
/JSTR {
  gsave 1 eq { gsave 1 setgray fill grestore } if
    exch neg exch neg translate 
    clip                        
    rotate                      
    4 dict begin
      pathbbox  /&top exch def
                /&right exch def
                /&bottom exch def
                &right sub /&width exch def
      newpath
      currentlinewidth mul round dup               
      &bottom exch Jrnd exch &top             
      4 -1 roll currentlinewidth mul setlinewidth  
      { &right exch moveto &width 0 rlineto stroke } for    
    end
  grestore
  newpath
} bind def
 gsave /Times-Roman findfont 9.000000 scalefont setfont
0.000000 0.000000 translate
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 396.000000 0.000000 lineto stroke
 grestore 
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 0.000000 180.000000 lineto stroke
newpath 0.000000 0.000000 moveto -5.000000 0.000000 lineto stroke
newpath 0.000000 10.000000 moveto -2.000000 10.000000 lineto stroke
newpath 0.000000 20.000000 moveto -2.000000 20.000000 lineto stroke
newpath 0.000000 30.000000 moveto -2.000000 30.000000 lineto stroke
newpath 0.000000 40.000000 moveto -5.000000 40.000000 lineto stroke
newpath 0.000000 50.000000 moveto -2.000000 50.000000 lineto stroke
newpath 0.000000 60.000000 moveto -2.000000 60.000000 lineto stroke
newpath 0.000000 70.000000 moveto -2.000000 70.000000 lineto stroke
newpath 0.000000 80.000000 moveto -5.000000 80.000000 lineto stroke
newpath 0.000000 90.000000 moveto -2.000000 90.000000 lineto stroke
newpath 0.000000 100.000000 moveto -2.000000 100.000000 lineto stroke
newpath 0.000000 110.000000 moveto -2.000000 110.000000 lineto stroke
newpath 0.000000 120.000000 moveto -5.000000 120.000000 lineto stroke
newpath 0.000000 130.000000 moveto -2.000000 130.000000 lineto stroke
newpath 0.000000 140.000000 moveto -2.000000 140.000000 lineto stroke
newpath 0.000000 150.000000 moveto -2.000000 150.000000 lineto stroke
newpath 0.000000 160.000000 moveto -5.000000 160.000000 lineto stroke
newpath 0.000000 170.000000 moveto -2.000000 170.000000 lineto stroke
newpath 0.000000 180.000000 moveto -2.000000 180.000000 lineto stroke
/Times-Roman findfont 12.000000 scalefont setfont
gsave -8.000000 0.000000 translate 0.000000 rotate
0 -3.600000 translate (0) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 40.000000 translate 0.000000 rotate
0 -3.600000 translate (4) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 80.000000 translate 0.000000 rotate
0 -3.600000 translate (8) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 120.000000 translate 0.000000 rotate
0 -3.600000 translate (12) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 160.000000 translate 0.000000 rotate
0 -3.600000 translate (16) dup stringwidth pop neg 0 moveto
show
grestore
/Helvetica-Bold findfont 14.000000 scalefont setfont
gsave -27.520000 90.000000 translate 90.000000 rotate
0 0.000000 translate (Speedup) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
 gsave 
 gsave  gsave  41.684212 10.000000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -10.000000 lineto
  20.842106 -10.000000 lineto
closepath gsave 0.300000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  83.368423 56.000000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -56.000000 lineto
  20.842106 -56.000000 lineto
closepath gsave 0.800000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  145.894745 10.000000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -10.000000 lineto
  20.842106 -10.000000 lineto
closepath gsave 0.300000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  187.578949 114.500000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -114.500000 lineto
  20.842106 -114.500000 lineto
closepath gsave 0.800000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  250.105270 10.000000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -10.000000 lineto
  20.842106 -10.000000 lineto
closepath gsave 0.300000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  291.789490 61.500000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -61.500000 lineto
  20.842106 -61.500000 lineto
closepath gsave 0.800000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  354.315796 10.000000 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -10.000000 lineto
  20.842106 -10.000000 lineto
closepath gsave 0.300000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  gsave  396.000000 64.800003 translate 0.000000 rotate
 newpath 20.842106 0.000000 moveto  -20.842106 0.000000 lineto
  -20.842106 -64.800003 lineto
  20.842106 -64.800003 lineto
closepath gsave 0.800000 setgray  fill grestore
stroke
 grestore  grestore 
 gsave  grestore 
 gsave  grestore 
 grestore 
 gsave 312.631592 160.000000 translate 0.000000 rotate
 gsave  gsave  0.000000 -4.800000 translate 0.000000 rotate
 newpath -20.842106 -7.500000 moveto  20.842106 -7.500000 lineto
  20.842106 7.500000 lineto
  -20.842106 7.500000 lineto
closepath gsave 0.300000 setgray  fill grestore
stroke
 grestore  grestore 
/Times-Italic findfont 16.000000 scalefont setfont
gsave 24.842106 0.000000 translate 0.000000 rotate
0 -9.600000 translate (mips R2000) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave  gsave  0.000000 -29.400002 translate 0.000000 rotate
 newpath -20.842106 -7.500000 moveto  20.842106 -7.500000 lineto
  20.842106 7.500000 lineto
  -20.842106 7.500000 lineto
closepath gsave 0.800000 setgray  fill grestore
stroke
 grestore  grestore 
gsave 24.842106 -24.600000 translate 0.000000 rotate
0 -9.600000 translate (customized) dup stringwidth pop pop 0 0 moveto
show
grestore
 grestore 
/Times-Roman findfont 12.000000 scalefont setfont
gsave 62.526318 -10.000000 translate 0.000000 rotate
0 0.000000 translate (Adpcm-encode  ) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 166.736847 -10.000000 translate 0.000000 rotate
0 0.000000 translate (Jacobi) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 270.947388 -10.000000 translate 0.000000 rotate
0 0.000000 translate (MPEG-kernel) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 375.157898 -10.000000 translate 0.000000 rotate
0 0.000000 translate (SHA) dup stringwidth pop 2 div neg 0 moveto
show
grestore
-0.000000 -0.000000 translate
 grestore 

%%EndDocument

 endTexFig
 395 1761 a Fk(Figure)h(4:)35 b(Base)27 b(comparison)-152
2008 y Fl(7.1)105 b(Base)36 b(Comparison)-152 2139 y
Fk(Figure)i(4)f(presen)n(ts)g(execution)f(times)g(for)i(eac)n(h)f
(application)h(in)-152 2222 y(comparison)e(with)g(execution)g(time)f
(on)g(a)h(single)h(MIPS)f(R2000)-152 2305 y(pro)r(cessor)31
b(\(the)e(basic)g(comp)r(onen)n(t)f(of)i(one)g(Ra)n(w)f(tile\).)45
b(Roughly)-152 2388 y(sp)r(eaking,)c(customization)c(results)g(in)g(an)
g(order)g(of)h(magnitude)-152 2471 y(few)n(er)c(clo)r(c)n(k)g(cycles)f
(\(5)g(to)h(10\))f(required)g(to)g(p)r(erform)f(the)h(same)-152
2554 y(computation.)48 b(As)30 b(w)n(e)h(exp)r(ect)f(the)g(clo)r(c)n(k)
h(cycles)g(to)g(b)r(e)f(similar,)-152 2637 y(this)f(reduction)g(will)i
(translate)f(directly)f(in)n(to)g(prop)r(ortional)h(p)r(er-)-152
2720 y(formance)c(increases)h(for)g(custom)e(hardw)n(are.)-40
2803 y(T)-6 b(able)21 b(2)g(presen)n(ts)f(the)g(gate)h(coun)n(ts)f(for)
h(the)f(single)h(tile)g(compi-)-152 2886 y(lation.)34
b(W)-6 b(e)18 b(assume)h(that)g(one)g(gate)h(is)f(appro)n(ximately)g
(equiv)l(alen)n(t)-152 2969 y(to)30 b(one)f(b)n(yte)g(of)h(memory)d
(for)j(SRAM)f(comparisons.)46 b(Note)29 b(that)-152 3052
y(the)20 b(logic)h(and)f(register)h(gate)f(coun)n(ts)g(for)g(eac)n(h)g
(application)h(except)-152 3135 y(SHA)26 b(are)h(smaller)f(than)g(the)g
(size)i(of)f(a)g(simple)f(pro)r(cessor)i(\(ab)r(out)-152
3218 y(20K)e(gates\).)-152 3436 y Fl(7.2)105 b(P)m(arallelized)36
b(Comparison)-152 3567 y Fk(F)-6 b(or)25 b(the)g(parallelized)i(case,)f
(w)n(e)g(rep)r(ort)f(results)h(for)g(t)n(w)n(o)f(compila-)-152
3650 y(tion)f(strategies:)35 b(a)24 b(hardwired)g(system)e(and)i(a)f
(virtual)h(wired)g(sys-)-152 3733 y(tem.)50 b(The)31
b(hardwired)g(system)f(allo)n(ws)j(direct,)g(dedicated)e(wires)-152
3816 y(b)r(et)n(w)n(een)i(arbitrary)h(memories)e(and)h(assumes)g(that)g
(signals)i(can)-152 3899 y(propagate)h(the)f(full)h(length)f(of)i(eac)n
(h)e(wire)h(in)f(one)h(clo)r(c)n(k)f(cycle.)-152 3982
y(The)g(total)f(cycle)g(coun)n(t)g(is)h(alw)n(a)n(ys)g(smaller)f(for)h
(the)e(hardwired)-152 4065 y(system)j(b)r(ecause)i(there)f(are)h(no)f
(cycles)g(dedicated)g(to)g(sc)n(hedul-)-152 4148 y(ing)27
b(the)f(wires.)38 b(Additionally)-6 b(,)27 b(the)f(hardwired)h(systems)
f(do)g(ha)n(v)n(e)-152 4231 y(additional)j(hardw)n(are)g(syn)n
(thesized)e(for)i(m)n(ultiplexing)e(the)g(in)n(ter-)-152
4314 y(connect.)34 b(It)21 b(therefore)i(pro)n(vides)f(a)g(go)r(o)r(d)h
(comparison)f(p)r(oin)n(t)g(that)-152 4397 y(allo)n(ws)g(us)e(to)g
(isolate)i(the)e(costs)g(of)h(virtual)f(wire)h(sc)n(heduling.)33
b(Bear)-152 4480 y(in)27 b(mind,)e(ho)n(w)n(ev)n(er,)i(that)f(for)h
(large)g(circuits)h(the)d(hardwired)i(sys-)-152 4563
y(tem)21 b(w)n(ould)g(con)n(tain)h(long)f(wires)i(with)e(large)i
(propagation)f(dela)n(ys.)-152 4646 y(These)f(dela)n(ys)g(slo)n(w)h(do)
n(wn)e(the)g(clo)r(c)n(k,)i(degrading)f(the)f(o)n(v)n(erall)h(p)r(er-)
-152 4729 y(formance)32 b(of)h(the)f(application.)54
b(The)32 b(scaling)i(factors)f(in)f(future)-152 4812
y(VLSI)21 b(system)h(will)h(only)f(exacerbate)h(this)f(phenomenon,)g
(making)-152 4895 y(virtual)k(wires)h(sc)n(heduling)f(a)g(necessit)n(y)
-6 b(.)-40 4978 y(Figure)29 b(5)g(presen)n(ts)f(the)f(resulting)i(sp)r
(eedups)f(for)h(Jacobi)g(and)-152 5061 y(MPEG,)h(the)e(t)n(w)n(o)g
(application)h(whic)n(h)f(are)h(parallelizable,)j(as)c(w)n(e)-152
5145 y(increase)h(the)e(n)n(um)n(b)r(er)e(of)j(tiles.)40
b(Note)27 b(that)g(for)h(b)r(oth)f(cases)i(eac)n(h)-152
5228 y(tile)35 b(already)f(has)g(m)n(ultiple)f(memory)f(banks)h(and)g
(tak)n(es)h(adv)l(an-)p 2182 894 1708 4 v 2180 961 4
67 v 2227 941 a Fe(Benc)n(hmark)p 2698 961 V 200 w(Logic)p
2953 961 V 89 w(Registers)p 3306 961 V 90 w(Memory)p
3634 961 V 101 w(T)-5 b(otal)p 3889 961 V 2182 964 1708
4 v 2182 979 V 2180 1046 4 67 v 2227 1026 a(Jacobi)p
2698 1046 V 364 w(3830)p 2953 1046 V 222 w(5064)p 3306
1046 V 162 w(65536)p 3634 1046 V 90 w(74430)p 3889 1046
V 2182 1049 1708 4 v 2180 1115 4 67 v 2227 1095 a(Adp)r(cm-enco)r(de)p
2698 1115 V 119 w(3786)p 2953 1115 V 222 w(3704)p 3306
1115 V 195 w(3210)p 3634 1115 V 90 w(10700)p 3889 1115
V 2182 1119 1708 4 v 2180 1185 4 67 v 2227 1165 a(MPEG-k)n(ernel)p
2698 1185 V 152 w(1833)p 2953 1185 V 222 w(2312)p 3306
1185 V 195 w(3584)p 3634 1185 V 123 w(7729)p 3889 1185
V 2182 1188 1708 4 v 2180 1255 4 67 v 2227 1235 a(SHA)p
2698 1255 V 382 w(35100)p 2953 1255 V 189 w(12680)p 3306
1255 V 162 w(16384)p 3634 1255 V 90 w(64164)p 3889 1255
V 2182 1258 1708 4 v 2493 1478 a Fk(T)f(able)26 b(2:)35
b Fb(Gate)25 b(coun)n(ts)g(for)e(one)h(tile.)2040 1710
y Fk(tage)i(of)f(ILP)g(ev)n(en)f(for)i(the)f(single)h(tile)f(case.)35
b(F)-6 b(or)25 b(b)r(oth)g(the)f(hard-)2040 1793 y(wired)k(and)f(the)g
(virtual)g(wired)h(case,)h(p)r(erformance)e(con)n(tin)n(ues)g(to)2040
1876 y(increase)j(as)f(w)n(e)g(add)g(more)f(hardw)n(are.)45
b(The)28 b(virtual)h(wired)h(case)2040 1959 y(m)n(ust)20
b(pa)n(y)g(the)h(p)r(enalt)n(y)g(of)h(comm)n(unication)d(costs,)24
b(but)c(nev)n(erthe-)2040 2042 y(less,)i(absolute)f(p)r(erformance)f
(remains)g(w)n(ell)g(ab)r(o)n(v)n(e)g(ev)n(en)f(a)h(16)h(pro-)2040
2125 y(cessor)k(Ra)n(w)e(mac)n(hine.)33 b(Ra)n(w)23 b(ac)n(hiev)n(es)h
(b)r(etter)f(scalabilit)n(y)h(for)g(Ja-)2040 2208 y(cobi)g(b)r(ecause)g
(of)h(it)f(do)r(es)g(not)f(tak)n(e)h(adv)l(an)n(tage)f(of)i(initial)g
(amoun)n(t)2040 2291 y(of)i(instruction-lev)n(el)e(parallelism)i(in)f
(the)f(one)h(pro)r(cessor)h(case.)2152 2374 y(Figure)32
b(6)f(rep)r(orts)h(the)f(increase)h(in)f(hardw)n(are)h(area,)h(includ-)
2040 2457 y(ing)24 b(memory)-6 b(,)22 b(as)i(the)e(n)n(um)n(b)r(er)g
(of)i(tiles)g(are)g(increased.)35 b(Note)23 b(that)2040
2540 y(for)37 b(the)f(virtual)g(wires)h(case,)j(the)35
b(hardw)n(are)i(areas)g(gro)n(w)g(more)2040 2623 y(rapidly)24
b(b)r(ecause)h(of)g(the)f(increasing)i(amoun)n(t)d(of)i(comm)n
(unication)2040 2706 y(logic)33 b(that)e(is)h(required.)51
b(In)31 b(Figure)h(7,)h(w)n(e)f(sho)n(w)g(the)f(hardw)n(are)2040
2789 y(comp)r(osition,)39 b(in)d(p)r(ercen)n(tages,)k(of)c(eac)n(h)g
(arc)n(hitecture.)65 b(Notice)2040 2872 y(ho)n(w)27 b(the)e(memory)g
(starts)h(out)h(taking)f(a)g(fairly)i(large)f(p)r(ercen)n(tage)2040
2955 y(of)f(the)g(area,)g(but)f(as)h(w)n(e)g(decrease)g(the)g(gran)n
(ularit)n(y)f(of)i(the)e(mem-)2040 3038 y(ory)i(system)e(b)n(y)h
(adding)h(more)f(tiles,)i(the)f(system)e(b)r(ecomes)i(more)2040
3122 y(balanced.)62 b(As)34 b(w)n(e)h(totally)g(dominate)f(the)g
(memory)f(area)i(with)2040 3205 y(additional)27 b(hardw)n(are,)f(the)g
(sp)r(eedup)f(curv)n(es)g(tail)h(o\013.)2040 3422 y Fl(Implications)34
b(for)i(Con\014gurable)f(Hardw)m(are)2040 3553 y Fk(Note)g(that)f
(while)h(w)n(e)g(ha)n(v)n(e)f(not)h(directly)g(considered)g
(recon\014g-)2040 3636 y(urable)26 b(hardw)n(are,)g(suc)n(h)f(as)h(an)g
(FPGA-based)f(system)f(describ)r(ed)2040 3719 y(in)c(the)f(related)h(w)
n(ork,)h(if)g(a)f(recon\014gurable)g(system)f(w)n(ere)h(to)g(imple-)
2040 3802 y(men)n(t)e(virtual)i(wires)h(and)e(small)h(memories)g
(directly)f(in)h(the)f(fabric,)2040 3885 y(w)n(e)33 b(b)r(eliev)n(e)g
(similar)h(p)r(erformance)f(gains)g(migh)n(t)f(b)r(e)h(ac)n(hiev)l
(able.)2040 3968 y(Ho)n(w)n(ev)n(er,)c(w)n(e)f(should)g(note)g(that)f
(in)h(recon\014gurable)g(logic-based)2040 4051 y(arc)n(hitectures)e
(the)g(p)r(oten)n(tial)g(clo)r(c)n(k)g(sp)r(eeds)h(will)g(most)e(lik)n
(ely)h Fj(not)2040 4134 y Fk(b)r(e)j(on)g(an)g(equal)g(basis)h(and)f
(an)g(appropriate)h(sp)r(eed)f(p)r(enalt)n(y)g(for)2040
4217 y(the)c(custom)g(logic)j(will)f(need)e(to)h(b)r(e)f(tak)n(en)g(in)
n(to)h(accoun)n(t.)2040 4443 y Fl(8)105 b(Related)35
b(W)-9 b(ork)2040 4600 y Fk(Silicon)24 b(compilation)g(has)g(existed)g
(in)f(one)h(form)f(or)h(another)g(since)2040 4683 y(the)35
b(early)g(da)n(ys)g(of)h(designing)g(c)n(hips.)63 b(Ev)n(en)35
b(b)r(efore)h(sc)n(hematic)2040 4766 y(capture,)24 b(designers)h(wrote)
g(programs)f(whic)n(h)f(directly)h(generated)2040 4849
y(the)38 b(geometry)g(and)g(la)n(y)n(out)g(for)h(a)g(particular)g
(design.)73 b(In)38 b(the)2040 4932 y(past)27 b(t)n(w)n(en)n(t)n(y)e(y)
n(ears)h(v)l(arious)h(researc)n(h)g(has)f(prop)r(osed)h(to)g(compile)
2040 5015 y(P)-6 b(ASCAL,)31 b(F)n(OR)-6 b(TRAN,)30 b(C,)i(and)f(Sc)n
(heme)f(in)n(to)h(hardw)n(are.)53 b(W)-6 b(e)2040 5098
y(m)n(ust)21 b(b)r(e)h(careful)h(to)g(distinguish)g(b)r(et)n(w)n(een)f
(compiling)g(a)h(program)2040 5181 y(in)n(to)k(hardw)n(are,)h(and)f
(describing)g(hardw)n(are)h(with)f(a)g(higher-lev)n(el)p
eop
%%Page: 9 9
9 8 bop 190 35 a
 8809488 9472573 -3289088 -3946905 37890293 39863746 startTexFig
 190 35 a
%%BeginDocument: graphs/jacobi-scale-log.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: -50 -60 576 606
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
18 SetSym
<02> 249.882 198 SY
30 /Helvetica SetTxt
( Custom-hard-wires) 0 273.386 189 TXL
18 SetSym
<0d> 249.882 159 SY
30 /Helvetica SetTxt
( Custom-virtual-wires) 0 273.386 150 TXL
18 SetSym
<0a> 249.882 120 SY
30 /Helvetica SetTxt
( Raw) 0 273.386 111 TXL
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
101.647 356.588 S9
[] 1.200000 SL
131.294 415.27 M9
190.588 469.556 M9
309.176 518.764 M9
546.353 559.213 M9
D9
101.647 356.588 S9
131.294 334.503 M9
190.588 393.573 M9
309.176 443.221 M9
546.353 488.912 M9
D9
101.647 123.381 S9
131.294 164.274 M9
190.588 234.245 M9
309.176 306.101 M9
546.353 360.473 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
30 /Helvetica SetTxt
(0) 0 72 36 TXC
12 /Helvetica SetTxt
(|) 0 190.588 72 TXC
30 /Helvetica SetTxt
(4) 0 190.588 36 TXC
12 /Helvetica SetTxt
(|) 0 309.176 72 TXC
30 /Helvetica SetTxt
(8) 0 309.176 36 TXC
12 /Helvetica SetTxt
(|) 0 427.765 72 TXC
30 /Helvetica SetTxt
(12) 0 427.765 36 TXC
12 /Helvetica SetTxt
(|) 0 546.353 72 TXC
30 /Helvetica SetTxt
(16) 0 546.353 36 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
30 /Helvetica SetTxt
(0) 0 57 63 TXR
12 /Helvetica SetTxt
(|) -90 72 135 TXC
30 /Helvetica SetTxt
(1) 0 57 126 TXR
12 /Helvetica SetTxt
(|) -90 72 198 TXC
30 /Helvetica SetTxt
(2) 0 57 189 TXR
12 /Helvetica SetTxt
(|) -90 72 261 TXC
30 /Helvetica SetTxt
(4) 0 57 252 TXR
12 /Helvetica SetTxt
(|) -90 72 324 TXC
30 /Helvetica SetTxt
(8) 0 57 315 TXR
12 /Helvetica SetTxt
(|) -90 72 387 TXC
30 /Helvetica SetTxt
(16) 0 57 378 TXR
12 /Helvetica SetTxt
(|) -90 72 450 TXC
30 /Helvetica SetTxt
(32) 0 57 441 TXR
12 /Helvetica SetTxt
(|) -90 72 513 TXC
30 /Helvetica SetTxt
(64) 0 57 504 TXR
12 /Helvetica SetTxt
(|) -90 72 576 TXC
30 /Helvetica SetTxt
(128) 0 57 567 TXR
( Speedup scalability for jacobi) 0 324 -60 TXC
[] 5.000000 SL
2 setlinecap
72 72 576 72 
L9
0 setlinecap
72 72 72 576 
L9
( Ntiles) 0 576 -3 TXR
( Speedup) 90 -19.5 576 TXR
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
18 SetSym
<02> 101.647 356.588 SY
<02> 131.294 415.27 SY
<02> 190.588 469.556 SY
<02> 309.176 518.764 SY
<02> 546.353 559.213 SY
<0d> 101.647 356.588 SY
<0d> 131.294 334.503 SY
<0d> 190.588 393.573 SY
<0d> 309.176 443.221 SY
<0d> 546.353 488.912 SY
<0a> 101.647 123.381 SY
<0a> 131.294 164.274 SY
<0a> 190.588 234.245 SY
<0a> 309.176 306.101 SY
<0a> 546.353 360.473 SY
initclip 
showpage
%%Trailer
end

%%EndDocument

 endTexFig
 2575 35 a
 8809488 9472573 -3289088 -3946905 37890293 39863746 startTexFig
 2575 35 a
%%BeginDocument: graphs/mpeg-scale-log.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: -50 -60 576 606
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
18 SetSym
<02> 249.882 205.056 SY
30 /Helvetica SetTxt
( Custom-hard-wires) 0 273.386 196.056 TXL
18 SetSym
<0d> 249.882 166.056 SY
30 /Helvetica SetTxt
( Custom-virtual-wires) 0 273.386 157.056 TXL
18 SetSym
<0a> 249.882 127.056 SY
30 /Helvetica SetTxt
( Raw) 0 273.386 118.056 TXL
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
101.647 332.682 S9
[] 1.200000 SL
131.294 413.055 M9
190.588 467.644 M9
309.176 497.1 M9
546.353 511.703 M9
D9
101.647 332.682 S9
131.294 331.034 M9
190.588 376.852 M9
309.176 406.623 M9
546.353 438.001 M9
D9
101.647 133.056 S9
131.294 175.94 M9
190.588 223.512 M9
309.176 272.936 M9
546.353 299.772 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
30 /Helvetica SetTxt
(0) 0 72 36 TXC
12 /Helvetica SetTxt
(|) 0 190.588 72 TXC
30 /Helvetica SetTxt
(4) 0 190.588 36 TXC
12 /Helvetica SetTxt
(|) 0 309.176 72 TXC
30 /Helvetica SetTxt
(8) 0 309.176 36 TXC
12 /Helvetica SetTxt
(|) 0 427.765 72 TXC
30 /Helvetica SetTxt
(12) 0 427.765 36 TXC
12 /Helvetica SetTxt
(|) 0 546.353 72 TXC
30 /Helvetica SetTxt
(16) 0 546.353 36 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
30 /Helvetica SetTxt
(0) 0 57 63 TXR
12 /Helvetica SetTxt
(|) -90 72 144 TXC
30 /Helvetica SetTxt
(1) 0 57 135 TXR
12 /Helvetica SetTxt
(|) -90 72 216 TXC
30 /Helvetica SetTxt
(2) 0 57 207 TXR
12 /Helvetica SetTxt
(|) -90 72 288 TXC
30 /Helvetica SetTxt
(4) 0 57 279 TXR
12 /Helvetica SetTxt
(|) -90 72 360 TXC
30 /Helvetica SetTxt
(8) 0 57 351 TXR
12 /Helvetica SetTxt
(|) -90 72 432 TXC
30 /Helvetica SetTxt
(16) 0 57 423 TXR
12 /Helvetica SetTxt
(|) -90 72 504 TXC
30 /Helvetica SetTxt
(32) 0 57 495 TXR
12 /Helvetica SetTxt
(|) -90 72 576 TXC
30 /Helvetica SetTxt
(64) 0 57 567 TXR
( Speedup scalability for mpeg) 0 324 -60 TXC
[] 5.000000 SL
2 setlinecap
72 72 576 72 
L9
0 setlinecap
72 72 72 576 
L9
( Ntiles) 0 576 -3 TXR
( Speedup) 90 -19.5 576 TXR
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
18 SetSym
<02> 101.647 332.682 SY
<02> 131.294 413.055 SY
<02> 190.588 467.644 SY
<02> 309.176 497.1 SY
<02> 546.353 511.703 SY
<0d> 101.647 332.682 SY
<0d> 131.294 331.034 SY
<0d> 190.588 376.852 SY
<0d> 309.176 406.623 SY
<0d> 546.353 438.001 SY
<0a> 101.647 133.056 SY
<0a> 131.294 175.94 SY
<0a> 190.588 223.512 SY
<0a> 309.176 272.936 SY
<0a> 546.353 299.772 SY
initclip 
showpage
%%Trailer
end

%%EndDocument

 endTexFig
 1296 1401 a Fk(Figure)26 b(5:)35 b Fb(Sp)r(eedup)25
b(for)e(jacobi)h(and)g(mp)r(eg.)148 1856 y
 9472573 9472573 -6117703 -3946905 37890293 39863746 startTexFig
 148 1856 a
%%BeginDocument: graphs/jacobi-hardware.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: -93 -60 576 606
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
18 SetSym
<0d> 101.647 542.4 SY
30 /Helvetica SetTxt
( Custom-virtual-wires) 0 125.151 533.4 TXL
18 SetSym
<02> 101.647 503.4 SY
30 /Helvetica SetTxt
( Custom-hard-wires) 0 125.151 494.4 TXL
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
101.647 197.042 S9
[] 1.200000 SL
131.294 224.984 M9
190.588 272.345 M9
309.176 369.399 M9
546.353 571.909 M9
D9
101.647 197.042 S9
131.294 204.372 M9
190.588 222.609 M9
309.176 251.422 M9
546.353 296.767 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
30 /Helvetica SetTxt
(0) 0 72 36 TXC
12 /Helvetica SetTxt
(|) 0 190.588 72 TXC
30 /Helvetica SetTxt
(4) 0 190.588 36 TXC
12 /Helvetica SetTxt
(|) 0 309.176 72 TXC
30 /Helvetica SetTxt
(8) 0 309.176 36 TXC
12 /Helvetica SetTxt
(|) 0 427.765 72 TXC
30 /Helvetica SetTxt
(12) 0 427.765 36 TXC
12 /Helvetica SetTxt
(|) 0 546.353 72 TXC
30 /Helvetica SetTxt
(16) 0 546.353 36 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
30 /Helvetica SetTxt
(0) 0 57 63 TXR
12 /Helvetica SetTxt
(|) -90 72 172.8 TXC
30 /Helvetica SetTxt
(60000) 0 57 163.8 TXR
12 /Helvetica SetTxt
(|) -90 72 273.6 TXC
30 /Helvetica SetTxt
(120000) 0 57 264.6 TXR
12 /Helvetica SetTxt
(|) -90 72 374.4 TXC
30 /Helvetica SetTxt
(180000) 0 57 365.4 TXR
12 /Helvetica SetTxt
(|) -90 72 475.2 TXC
30 /Helvetica SetTxt
(240000) 0 57 466.2 TXR
12 /Helvetica SetTxt
(|) -90 72 576 TXC
30 /Helvetica SetTxt
(300000) 0 57 567 TXR
( Gate count for jacobi) 0 324 -60 TXC
[] 5.000000 SL
2 setlinecap
72 72 576 72 
L9
0 setlinecap
72 72 72 576 
L9
( Ntiles) 0 576 -3 TXR
( Gates) 90 -63 576 TXR
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
18 SetSym
<0d> 101.647 197.042 SY
<0d> 131.294 224.984 SY
<0d> 190.588 272.345 SY
<0d> 309.176 369.399 SY
<0d> 546.353 571.909 SY
<02> 101.647 197.042 SY
<02> 131.294 204.372 SY
<02> 190.588 222.609 SY
<02> 309.176 251.422 SY
<02> 546.353 296.767 SY
initclip 
showpage
%%Trailer
end

%%EndDocument

 endTexFig
 2533 1856 a
 9472573 9472573 -6117703 -3946905 37890293 39863746 startTexFig
 2533 1856 a
%%BeginDocument: graphs/mpeg-hardware.ps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: -93 -60 576 606
%%Pages: 1
%%DocumentFonts: Helvetica Helvetica-Oblique Helvetica-Bold Helvetica-BoldOblique Times-Roman Times-Italic Times-Bold Times-BoldItalic
%%EndComments
50 dict begin
/symbolFont 10 dict def
symbolFont begin
/FontType 3 def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-500 -500 500 500] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 1 /Cross put
Encoding 2 /Triangle put
Encoding 3 /Trianglefilled put
Encoding 4 /Diamond put
Encoding 5 /Diamondfilled put
Encoding 6 /Square put
Encoding 7 /Squarefilled put
Encoding 8 /Rectan put
Encoding 9 /Rectanfilled put
Encoding 10 /Circle put
Encoding 11 /Circlefilled put
Encoding 12 /Bullet put
Encoding 13 /Star put
Encoding 14 /Plus put

/graphclip {newpath moveto lineto lineto lineto closepath clip } def

/Procs 15 dict def
Procs begin
/.notdef {} def

/Cross {
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

/Triangle {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath stroke } def

/Trianglefilled {
 newpath -500 -500 moveto 0 500 lineto 500 -500 lineto closepath fill } def

/Diamond {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
 stroke } def

/Diamondfilled {
  newpath -500 0 moveto 0 500 lineto 500 0 lineto 0 -500 lineto closepath
  fill } def

/Square {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath stroke } def

/Squarefilled {
 newpath -500 -500 moveto -500 500 lineto 500 500 lineto 500 -500 lineto
 closepath fill } def

/Rectan {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath stroke } def

/Rectanfilled {
 newpath -200 -500 moveto -200 500 lineto 200 500 lineto 200 -500 lineto  
closepath fill } def


/Circle { newpath 0 0 500 0 360 arc stroke } def

/Circlefilled { newpath 0 0 500 0 360 arc closepath fill } def


/Bullet { newpath 0 0 500 0 360 arc closepath fill } def

/Plus {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke } def

/Star {
 newpath 0 -500 moveto 0 500 lineto stroke
 newpath -500 0 moveto 500 0 lineto stroke
 newpath -500 -500 moveto 500 500 lineto stroke
 newpath -500 500 moveto 500 -500 lineto stroke } def

end

/BuildChar {
 1000 0 -500 -500 500 500 setcachedevice
 exch begin Encoding exch get Procs exch get end exec } def
end

/Symbols symbolFont definefont pop

% size SetSym		-> set font to be symbols scaled by 'size'
/SetSym { /Symbols findfont exch scalefont setfont } def

% size fontname SetTxt		-> set font 'fontname' scaled by 'size'
/SetTxt { findfont exch scalefont setfont } def

% dashtype thicknes SL
/SL { setlinewidth 0 setdash } def

/cross {2 copy le {exch pop} {pop} ifelse} def

%9 added to distinguish from other clashing scribe definitions
% from to L9	-> print line between points 'from' and 'to'
/L9 { newpath moveto lineto stroke } def
/S9 { newpath moveto } def
/M9 { lineto } def
/D9 { stroke } def

%%%%
%%%% setscreen is not EPSF compliant. if compliance is required,
%%%% switch which of the following two definitions of SS9 is commented
%%%% out. it would probably be better to do this by having a seperate
%%%% version of the prolog file for the user to select.
%%%%
%%%% /SS9 { pop pop pop } def
/SS9 { setscreen } def

/G9 { setgray } def
/F9 {newpath moveto lineto lineto lineto closepath fill} def
/E9 {closepath fill} def
% E9 is fills for incremental curves, while F9 for curve segments

/Landscape {612 0 translate 90 rotate} def

% save current point in global variable psx psy
/SAVPOS { /psx currentpoint pop def /psy currentpoint exch pop def } def

% string angle xpos ypos TXL	-> print 'string' at pos xpos, ypos
/TXL { gsave translate rotate 0 0 moveto show SAVPOS grestore } def

% string angle xpos ypos TXR	-> print 'string' at pos xpos, ypos
/TXR { gsave translate rotate dup stringwidth pop neg 0 moveto show SAVPOS 
       grestore } def

% string angle xpos ypos TXC	-> print 'string' at pos xpos, ypos
/TXC { gsave translate rotate dup stringwidth pop 2 div neg 0 moveto show
       SAVPOS grestore } def

% string angle TXREL	-> print 'string' at xpos ypos translate psx psy rel
/TXREL { gsave translate rotate psx psy moveto show SAVPOS grestore } def

% char xpos ypos SY	-> print symbol 'char' at position xpos, ypos
/SY { moveto show } def

/len {dup mul exch dup mul add sqrt}def


%%%%%%%%%%%%%%%%%%%%%%%  CURVE SMOOTHING  %%%%%%%%%%%%%%%%%%%%%%

% Curve Smoothing Routines
%  Ernest Wood  -  Wed Apr 16 09:05:05 1986
%
%  These routines will ALWAYS create a smooth curve which
%  intercepts EVERY point used to generate them.
%
%  The definition qA determines the amount of overshoot smoothing
%  produces around each point.  The distance is the distance to the
%  next point times aA.  The factor qB scales the amount of overshoot
%  by the acuteness of the angle around the point.
%
%  These values make a square of points into a circle.
/qA .3 def		% used in qx
/qB 1 def		% used in afactor

/8a 8 array def
%
%  Angle of vector from p0 to p1	p0 p1 polar ang
/polar{qs neg exch neg atan}def 

%subtract and add points	p0 p1 qs p0-p1
%				p0 p1 qa p0+p1
/qs{exch 3 1 roll sub 3 1 roll sub exch}def
/qa{exch 3 1 roll add 3 1 roll add exch}def

%  Extract point from 8 point array
%
/Pt{2 mul dup 8a exch get exch 1 add 8a exch get}def

%  a0 a1 mirrorang ma
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then ma is the mirror angle between p0-p1 and p1-p2.
%  a0 a1 afactor f
%	If a0 is the angle from p1 to p0 and a1 is the angle from
%	p1 to p2 then f is the ratio of the inside angle between a0 and a1
%	and 180 times qB.  This ratio is saturated at 1 and if qB is 0 then
%	the value returned is always 1.  Thus the more acute the angle 
%	the smaller the value of f.
%
/mirrorang{2 copy add 2 div 3 1 roll sub 0 lt {90} {-90}ifelse add}def
/afactor{
    qB 0 eq
	{ 1 }
	{sub abs dup 180 gt {360 exch sub} if 180 div qB mul
	 dup 1 gt {pop 1} if}
    ifelse
}def

%  a d xya x y
%	Given angle a and distance d
%	produce x and y offsets.
%
/xya{exch 2 copy cos mul 3 1 roll sin mul}def

%  p0 p1 p2 p3  qx  pp1 pp2 pp3
%	Given 4 points on a curve produce the pp# values needed by
%	curveto to draw a smooth curve between p1 and p2.  The slope
%	of the curve at p1 and p2 will be perpendicular to the bisector
%	of a angle between p0/p1/p2 or p1/p2/p3.
%
/qx{
    8a astore pop
    1 Pt 2 Pt qs len qA mul /dist exch def
    1 Pt 0 Pt polar
    1 Pt 2 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 1 Pt qa
    2 Pt 3 Pt polar
    2 Pt 1 Pt polar
    2 copy mirrorang
    3 1 roll afactor dist mul
    xya 2 Pt qa
    2 Pt
}def

/qp{8 copy 16 -2 roll pop pop}def
/ns1{4 copy 4 -2 roll 2 copy qa 4 2 roll qs 6 2 roll /ns{ns2}def }def
/ns2{qp qx curveto}def

%  User definitions for curve smoothing routines.
%	First (ms), intermediate (ns), and last points with (fs) and
%	without (nsfs) automatic stroke execution.
%
/ms{2 copy newpath moveto /ns{ns1}def}def
/ns{ns1}def
/fs{stroke}def
/nsfs{ns 4 copy 2 copy qa 4 2 roll qs qx curveto}def
/nsend{4 copy 2 copy qa 4 2 roll qs qx curveto}def
%%EndProlog
%%Page ? 1
18 SetSym
<0d> 101.647 550.8 SY
30 /Helvetica SetTxt
( Custom-virtual-wires) 0 125.151 541.8 TXL
18 SetSym
<02> 101.647 511.8 SY
30 /Helvetica SetTxt
( Custom-hard-wires) 0 125.151 502.8 TXL
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
101.647 110.954 S9
[] 1.200000 SL
131.294 156.289 M9
190.588 220.579 M9
309.176 343.792 M9
546.353 525.797 M9
D9
101.647 110.954 S9
131.294 130.212 M9
190.588 162.559 M9
309.176 218.165 M9
546.353 297.197 M9
D9
initclip 
12 /Helvetica SetTxt
(|) 0 72 72 TXC
30 /Helvetica SetTxt
(0) 0 72 36 TXC
12 /Helvetica SetTxt
(|) 0 190.588 72 TXC
30 /Helvetica SetTxt
(4) 0 190.588 36 TXC
12 /Helvetica SetTxt
(|) 0 309.176 72 TXC
30 /Helvetica SetTxt
(8) 0 309.176 36 TXC
12 /Helvetica SetTxt
(|) 0 427.765 72 TXC
30 /Helvetica SetTxt
(12) 0 427.765 36 TXC
12 /Helvetica SetTxt
(|) 0 546.353 72 TXC
30 /Helvetica SetTxt
(16) 0 546.353 36 TXC
12 /Helvetica SetTxt
(|) -90 72 72 TXC
30 /Helvetica SetTxt
(0) 0 57 63 TXR
12 /Helvetica SetTxt
(|) -90 72 172.8 TXC
30 /Helvetica SetTxt
(20000) 0 57 163.8 TXR
12 /Helvetica SetTxt
(|) -90 72 273.6 TXC
30 /Helvetica SetTxt
(40000) 0 57 264.6 TXR
12 /Helvetica SetTxt
(|) -90 72 374.4 TXC
30 /Helvetica SetTxt
(60000) 0 57 365.4 TXR
12 /Helvetica SetTxt
(|) -90 72 475.2 TXC
30 /Helvetica SetTxt
(80000) 0 57 466.2 TXR
12 /Helvetica SetTxt
(|) -90 72 576 TXC
30 /Helvetica SetTxt
(100000) 0 57 567 TXR
( Gate count for mpeg) 0 324 -60 TXC
[] 5.000000 SL
2 setlinecap
72 72 576 72 
L9
0 setlinecap
72 72 72 576 
L9
( Ntiles) 0 576 -3 TXR
( Gates) 90 -63 576 TXR
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
72.000000 72.000000 576.000000 72.000000 576.000000 576.000000 72.000000 576.000000 newpath moveto lineto lineto lineto closepath clip
18 SetSym
<0d> 101.647 110.954 SY
<0d> 131.294 156.289 SY
<0d> 190.588 220.579 SY
<0d> 309.176 343.792 SY
<0d> 546.353 525.797 SY
<02> 101.647 110.954 SY
<02> 131.294 130.212 SY
<02> 190.588 162.559 SY
<02> 309.176 218.165 SY
<02> 546.353 297.197 SY
initclip 
showpage
%%Trailer
end

%%EndDocument

 endTexFig
 1539 3222 a Fk(Figure)i(6:)35 b Fb(Hardw)n(are)24 b(Size)-152
3677 y
 14208860 9472573 -1710325 -3881123 18089984 16840130 startTexFig
 -152 3677 a
%%BeginDocument: graphs/jacobi-hardware-breakdown.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Page: 1 1
%%BoundingBox: -26 -59 275 256
%%EndComments
1 setlinecap 1 setlinejoin
0.700 setlinewidth
0.00 setgray

/Jrnd { exch cvi exch cvi dup 3 1 roll idiv mul } def
/JDEdict 8 dict def
JDEdict /mtrx matrix put
/JDE {
  JDEdict begin
  /yrad exch def
  /xrad exch def
  /savematrix mtrx currentmatrix def
  xrad yrad scale
  0 0 1 0 360 arc
  savematrix setmatrix
  end
} def
/JSTR {
  gsave 1 eq { gsave 1 setgray fill grestore } if
    exch neg exch neg translate 
    clip                        
    rotate                      
    4 dict begin
      pathbbox  /&top exch def
                /&right exch def
                /&bottom exch def
                &right sub /&width exch def
      newpath
      currentlinewidth mul round dup               
      &bottom exch Jrnd exch &top             
      4 -1 roll currentlinewidth mul setlinewidth  
      { &right exch moveto &width 0 rlineto stroke } for    
    end
  grestore
  newpath
} bind def
 gsave /Times-Roman findfont 9.000000 scalefont setfont
0.000000 0.000000 translate
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 165.599991 0.000000 lineto stroke
/Helvetica-Bold findfont 14.000000 scalefont setfont
gsave 90.327271 -50.400002 translate 0.000000 rotate
0 -8.400000 translate (Jacobi) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 0.000000 252.000000 lineto stroke
newpath 0.000000 0.000000 moveto -5.000000 0.000000 lineto stroke
newpath 0.000000 25.200001 moveto -2.000000 25.200001 lineto stroke
newpath 0.000000 50.400002 moveto -5.000000 50.400002 lineto stroke
newpath 0.000000 75.599998 moveto -2.000000 75.599998 lineto stroke
newpath 0.000000 100.800003 moveto -5.000000 100.800003 lineto stroke
newpath 0.000000 126.000000 moveto -2.000000 126.000000 lineto stroke
newpath 0.000000 151.199997 moveto -5.000000 151.199997 lineto stroke
newpath 0.000000 176.399994 moveto -2.000000 176.399994 lineto stroke
newpath 0.000000 201.600006 moveto -5.000000 201.600006 lineto stroke
newpath 0.000000 226.800003 moveto -2.000000 226.800003 lineto stroke
newpath 0.000000 252.000000 moveto -5.000000 252.000000 lineto stroke
/Times-Roman findfont 12.000000 scalefont setfont
gsave -8.000000 0.000000 translate 0.000000 rotate
0 -3.600000 translate (0) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 50.400002 translate 0.000000 rotate
0 -3.600000 translate (20) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 100.800003 translate 0.000000 rotate
0 -3.600000 translate (40) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 151.199997 translate 0.000000 rotate
0 -3.600000 translate (60) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 201.600006 translate 0.000000 rotate
0 -3.600000 translate (80) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 252.000000 translate 0.000000 rotate
0 -3.600000 translate (100) dup stringwidth pop neg 0 moveto
show
grestore
 grestore 
 gsave 
 gsave  gsave  15.054544 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 15.054544 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  15.054544 239.021988 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -239.021988 lineto
  7.527272 -239.021988 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 15.054544 239.021988 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  15.054544 221.886002 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -221.886002 lineto
  7.527272 -221.886002 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 15.054544 221.886002 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  30.109089 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 30.109089 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  30.109089 222.062408 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -222.062408 lineto
  7.527272 -222.062408 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 30.109089 222.062408 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  30.109089 181.364395 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -181.364395 lineto
  7.527272 -181.364395 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 30.109089 181.364395 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  45.163635 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 45.163635 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  45.163635 202.507202 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -202.507202 lineto
  7.527272 -202.507202 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 45.163635 202.507202 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  45.163635 138.499191 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -138.499191 lineto
  7.527272 -138.499191 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 45.163635 138.499191 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  60.218178 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 60.218178 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  60.218178 184.438812 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -184.438812 lineto
  7.527272 -184.438812 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 60.218178 184.438812 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  60.218178 93.290398 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -93.290398 lineto
  7.527272 -93.290398 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 60.218178 93.290398 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  75.272720 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 75.272720 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  75.272720 170.427597 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -170.427597 lineto
  7.527272 -170.427597 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 75.272720 170.427597 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  75.272720 55.490402 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -55.490402 lineto
  7.527272 -55.490402 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 75.272720 55.490402 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  105.381813 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 105.381813 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  105.381813 239.021988 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -239.021988 lineto
  7.527272 -239.021988 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 105.381813 239.021988 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  105.381813 221.886002 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -221.886002 lineto
  7.527272 -221.886002 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 105.381813 221.886002 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  120.436356 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 120.436356 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  120.436356 233.856003 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -233.856003 lineto
  7.527272 -233.856003 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 120.436356 233.856003 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  120.436356 209.588394 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -209.588394 lineto
  7.527272 -209.588394 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 120.436356 209.588394 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  135.490906 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 135.490906 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  135.490906 219.668396 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -219.668396 lineto
  7.527272 -219.668396 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 135.490906 219.668396 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  135.490906 184.211990 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -184.211990 lineto
  7.527272 -184.211990 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 135.490906 184.211990 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  150.545441 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 150.545441 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  150.545441 198.122406 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -198.122406 lineto
  7.527272 -198.122406 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 150.545441 198.122406 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  150.545441 154.627197 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -154.627197 lineto
  7.527272 -154.627197 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 150.545441 154.627197 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  165.599991 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 165.599991 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  165.599991 175.341599 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -175.341599 lineto
  7.527272 -175.341599 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 165.599991 175.341599 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  165.599991 123.429596 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -123.429596 lineto
  7.527272 -123.429596 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 165.599991 123.429596 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  grestore 
 gsave  grestore 
 gsave  grestore 
 grestore 
 gsave 210.763626 239.399994 translate 0.000000 rotate
 gsave  gsave  0.000000 -3.600000 translate 0.000000 rotate
 newpath -7.527272 -7.560000 moveto  7.527272 -7.560000 lineto
  7.527272 7.560000 lineto
  -7.527272 7.560000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 0.000000 -3.600000 1 JSTR grestore
stroke
 grestore  grestore 
/Times-Italic findfont 12.000000 scalefont setfont
gsave 11.527272 0.000000 translate 0.000000 rotate
0 -7.200000 translate (Logic) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave  gsave  0.000000 -25.920000 translate 0.000000 rotate
 newpath -7.527272 -7.560000 moveto  7.527272 -7.560000 lineto
  7.527272 7.560000 lineto
  -7.527272 7.560000 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 0.000000 -25.920000 1 JSTR grestore
stroke
 grestore  grestore 
gsave 11.527272 -22.320000 translate 0.000000 rotate
0 -7.200000 translate (Registers) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave  gsave  0.000000 -48.239998 translate 0.000000 rotate
 newpath -7.527272 -7.560000 moveto  7.527272 -7.560000 lineto
  7.527272 7.560000 lineto
  -7.527272 7.560000 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 0.000000 -48.239998 1 JSTR grestore
stroke
 grestore  grestore 
gsave 11.527272 -44.639999 translate 0.000000 rotate
0 -7.200000 translate (Memory) dup stringwidth pop pop 0 0 moveto
show
grestore
 grestore 
/Times-Roman findfont 12.000000 scalefont setfont
gsave 45.163635 -30.240000 translate 0.000000 rotate
0 0.000000 translate (Virtual wires) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 15.054544 -12.600000 translate 0.000000 rotate
0 0.000000 translate (1) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 30.109089 -12.600000 translate 0.000000 rotate
0 0.000000 translate (2) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 45.163635 -12.600000 translate 0.000000 rotate
0 0.000000 translate (4) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 60.218178 -12.600000 translate 0.000000 rotate
0 0.000000 translate (8) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 75.272720 -12.600000 translate 0.000000 rotate
0 0.000000 translate (16) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 135.490906 -30.240000 translate 0.000000 rotate
0 0.000000 translate (Hardwires) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 105.381813 -12.600000 translate 0.000000 rotate
0 0.000000 translate (1) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 120.436356 -12.600000 translate 0.000000 rotate
0 0.000000 translate (2) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 135.490906 -12.600000 translate 0.000000 rotate
0 0.000000 translate (4) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 150.545441 -12.600000 translate 0.000000 rotate
0 0.000000 translate (8) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 165.599991 -12.600000 translate 0.000000 rotate
0 0.000000 translate (16) dup stringwidth pop 2 div neg 0 moveto
show
grestore
-0.000000 -0.000000 translate
 grestore 

%%EndDocument

 endTexFig
 2233 3677 a
 14208860 9472573 -1710325 -3881123 18089984 16840130 startTexFig
 2233 3677 a
%%BeginDocument: graphs/mpeg-hardware-breakdown.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Page: 1 1
%%BoundingBox: -26 -59 275 256
%%EndComments
1 setlinecap 1 setlinejoin
0.700 setlinewidth
0.00 setgray

/Jrnd { exch cvi exch cvi dup 3 1 roll idiv mul } def
/JDEdict 8 dict def
JDEdict /mtrx matrix put
/JDE {
  JDEdict begin
  /yrad exch def
  /xrad exch def
  /savematrix mtrx currentmatrix def
  xrad yrad scale
  0 0 1 0 360 arc
  savematrix setmatrix
  end
} def
/JSTR {
  gsave 1 eq { gsave 1 setgray fill grestore } if
    exch neg exch neg translate 
    clip                        
    rotate                      
    4 dict begin
      pathbbox  /&top exch def
                /&right exch def
                /&bottom exch def
                &right sub /&width exch def
      newpath
      currentlinewidth mul round dup               
      &bottom exch Jrnd exch &top             
      4 -1 roll currentlinewidth mul setlinewidth  
      { &right exch moveto &width 0 rlineto stroke } for    
    end
  grestore
  newpath
} bind def
 gsave /Times-Roman findfont 9.000000 scalefont setfont
0.000000 0.000000 translate
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 165.599991 0.000000 lineto stroke
/Helvetica-Bold findfont 14.000000 scalefont setfont
gsave 90.327271 -50.400002 translate 0.000000 rotate
0 -8.400000 translate (Mpeg) dup stringwidth pop 2 div neg 0 moveto
show
grestore
 grestore 
0.700000 setlinewidth  gsave newpath 0.000000 0.000000 moveto 0.000000 252.000000 lineto stroke
newpath 0.000000 0.000000 moveto -5.000000 0.000000 lineto stroke
newpath 0.000000 25.200001 moveto -2.000000 25.200001 lineto stroke
newpath 0.000000 50.400002 moveto -5.000000 50.400002 lineto stroke
newpath 0.000000 75.599998 moveto -2.000000 75.599998 lineto stroke
newpath 0.000000 100.800003 moveto -5.000000 100.800003 lineto stroke
newpath 0.000000 126.000000 moveto -2.000000 126.000000 lineto stroke
newpath 0.000000 151.199997 moveto -5.000000 151.199997 lineto stroke
newpath 0.000000 176.399994 moveto -2.000000 176.399994 lineto stroke
newpath 0.000000 201.600006 moveto -5.000000 201.600006 lineto stroke
newpath 0.000000 226.800003 moveto -2.000000 226.800003 lineto stroke
newpath 0.000000 252.000000 moveto -5.000000 252.000000 lineto stroke
/Times-Roman findfont 12.000000 scalefont setfont
gsave -8.000000 0.000000 translate 0.000000 rotate
0 -3.600000 translate (0) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 50.400002 translate 0.000000 rotate
0 -3.600000 translate (20) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 100.800003 translate 0.000000 rotate
0 -3.600000 translate (40) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 151.199997 translate 0.000000 rotate
0 -3.600000 translate (60) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 201.600006 translate 0.000000 rotate
0 -3.600000 translate (80) dup stringwidth pop neg 0 moveto
show
grestore
gsave -8.000000 252.000000 translate 0.000000 rotate
0 -3.600000 translate (100) dup stringwidth pop neg 0 moveto
show
grestore
 grestore 
 gsave 
 gsave  gsave  15.054544 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 15.054544 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  15.054544 192.225601 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -192.225601 lineto
  7.527272 -192.225601 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 15.054544 192.225601 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  15.054544 116.852394 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -116.852394 lineto
  7.527272 -116.852394 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 15.054544 116.852394 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  30.109089 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 30.109089 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  30.109089 168.285599 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -168.285599 lineto
  7.527272 -168.285599 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 30.109089 168.285599 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  30.109089 54.003601 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -54.003601 lineto
  7.527272 -54.003601 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 30.109089 54.003601 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  45.163635 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 45.163635 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  45.163635 160.020004 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -160.020004 lineto
  7.527272 -160.020004 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 45.163635 160.020004 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  45.163635 30.643200 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -30.643200 lineto
  7.527272 -30.643200 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 45.163635 30.643200 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  60.218178 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 60.218178 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  60.218178 158.886002 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -158.886002 lineto
  7.527272 -158.886002 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 60.218178 158.886002 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  60.218178 16.757999 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -16.757999 lineto
  7.527272 -16.757999 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 60.218178 16.757999 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  75.272720 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 75.272720 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  75.272720 161.531998 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -161.531998 lineto
  7.527272 -161.531998 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 75.272720 161.531998 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  75.272720 10.029600 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -10.029600 lineto
  7.527272 -10.029600 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 75.272720 10.029600 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  105.381813 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 105.381813 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  105.381813 192.225601 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -192.225601 lineto
  7.527272 -192.225601 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 105.381813 192.225601 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  105.381813 116.852394 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -116.852394 lineto
  7.527272 -116.852394 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 105.381813 116.852394 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  120.436356 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 120.436356 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  120.436356 173.501999 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -173.501999 lineto
  7.527272 -173.501999 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 120.436356 173.501999 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  120.436356 78.195602 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -78.195602 lineto
  7.527272 -78.195602 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 120.436356 78.195602 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  135.490906 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 135.490906 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  135.490906 163.800003 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -163.800003 lineto
  7.527272 -163.800003 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 135.490906 163.800003 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  135.490906 50.274002 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -50.274002 lineto
  7.527272 -50.274002 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 135.490906 50.274002 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  150.545441 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 150.545441 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  150.545441 148.478394 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -148.478394 lineto
  7.527272 -148.478394 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 150.545441 148.478394 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  150.545441 31.147200 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -31.147200 lineto
  7.527272 -31.147200 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 150.545441 31.147200 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  165.599991 252.000000 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -252.000000 lineto
  7.527272 -252.000000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 165.599991 252.000000 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  165.599991 139.507202 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -139.507202 lineto
  7.527272 -139.507202 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 165.599991 139.507202 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  gsave  165.599991 20.210402 translate 0.000000 rotate
 newpath 7.527272 0.000000 moveto  -7.527272 0.000000 lineto
  -7.527272 -20.210402 lineto
  7.527272 -20.210402 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 165.599991 20.210402 1 JSTR grestore
stroke
 grestore  grestore 
 gsave  grestore 
 gsave  grestore 
 gsave  grestore 
 grestore 
 gsave 210.763626 239.399994 translate 0.000000 rotate
 gsave  gsave  0.000000 -3.600000 translate 0.000000 rotate
 newpath -7.527272 -7.560000 moveto  7.527272 -7.560000 lineto
  7.527272 7.560000 lineto
  -7.527272 7.560000 lineto
closepath gsave 0.300000 setgray  6.1 10 45.000000 0.000000 -3.600000 1 JSTR grestore
stroke
 grestore  grestore 
/Times-Italic findfont 12.000000 scalefont setfont
gsave 11.527272 0.000000 translate 0.000000 rotate
0 -7.200000 translate (Logic) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave  gsave  0.000000 -25.920000 translate 0.000000 rotate
 newpath -7.527272 -7.560000 moveto  7.527272 -7.560000 lineto
  7.527272 7.560000 lineto
  -7.527272 7.560000 lineto
closepath gsave 0.800000 setgray  6.1 10 -45.000000 0.000000 -25.920000 1 JSTR grestore
stroke
 grestore  grestore 
gsave 11.527272 -22.320000 translate 0.000000 rotate
0 -7.200000 translate (Registers) dup stringwidth pop pop 0 0 moveto
show
grestore
 gsave  gsave  0.000000 -48.239998 translate 0.000000 rotate
 newpath -7.527272 -7.560000 moveto  7.527272 -7.560000 lineto
  7.527272 7.560000 lineto
  -7.527272 7.560000 lineto
closepath gsave 1.000000 setgray  6.1 10 -45.000000 0.000000 -48.239998 1 JSTR grestore
stroke
 grestore  grestore 
gsave 11.527272 -44.639999 translate 0.000000 rotate
0 -7.200000 translate (Memory) dup stringwidth pop pop 0 0 moveto
show
grestore
 grestore 
/Times-Roman findfont 12.000000 scalefont setfont
gsave 45.163635 -30.240000 translate 0.000000 rotate
0 0.000000 translate (Virtual wires) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 15.054544 -12.600000 translate 0.000000 rotate
0 0.000000 translate (1) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 30.109089 -12.600000 translate 0.000000 rotate
0 0.000000 translate (2) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 45.163635 -12.600000 translate 0.000000 rotate
0 0.000000 translate (4) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 60.218178 -12.600000 translate 0.000000 rotate
0 0.000000 translate (8) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 75.272720 -12.600000 translate 0.000000 rotate
0 0.000000 translate (16) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 135.490906 -30.240000 translate 0.000000 rotate
0 0.000000 translate (Hardwires) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 105.381813 -12.600000 translate 0.000000 rotate
0 0.000000 translate (1) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 120.436356 -12.600000 translate 0.000000 rotate
0 0.000000 translate (2) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 135.490906 -12.600000 translate 0.000000 rotate
0 0.000000 translate (4) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 150.545441 -12.600000 translate 0.000000 rotate
0 0.000000 translate (8) dup stringwidth pop 2 div neg 0 moveto
show
grestore
gsave 165.599991 -12.600000 translate 0.000000 rotate
0 0.000000 translate (16) dup stringwidth pop 2 div neg 0 moveto
show
grestore
-0.000000 -0.000000 translate
 grestore 

%%EndDocument

 endTexFig
 1401 5043 a Fk(Figure)i(7:)35 b Fb(Hardw)n(are)23 b(comp)r(osition.)p
eop
%%Page: 10 10
10 9 bop -152 -69 a Fk(language)28 b({)e(they)f(are)i(not)f(the)g
(same.)35 b(In)26 b(our)g(w)n(ork,)g(w)n(e)h(compile)-152
14 y(sequen)n(tial)c(programs)g(that)g(describ)r(e)h(an)e
Fj(algorithm)i Fk(in)f(a)g(manner)-152 97 y(easy)j(for)h(the)e
(programmer)g(to)h(understand.)-40 180 y(Recen)n(t)36
b(w)n(ork)h(in)f(R)-6 b(TL)36 b(and)g(b)r(eha)n(vioral)h(syn)n(thesis)f
([18)r(])g(in-)-152 263 y(v)n(olv)n(es)h(syn)n(thesizing)h(higher-lev)n
(el)f(algorithms)h(in)n(to)f(hardw)n(are.)-152 346 y(Where)e(p)r
(ossible,)j(w)n(e)d(lev)n(erage)g(this)g(w)n(ork)f(in)h(our)f
(compilation)-152 429 y(pro)r(cess.)67 b(F)-6 b(or)37
b(example,)h(w)n(e)f(lea)n(v)n(e)f(resource)h(allo)r(cation)i(to)d(b)r
(e)-152 512 y(p)r(erformed)26 b(during)g(the)f(follo)n(wing)k(syn)n
(thesis)d(pass.)36 b(Ho)n(w)n(ev)n(er,)27 b(to)-152 596
y(our)37 b(kno)n(wledge)g(this)f(is)h(the)f(\014rst)g(system)f(whic)n
(h)h(can)h(manage)-152 679 y(memory)-6 b(,)31 b(m)n(ultiplex)e(wires,)
34 b(and)d(transform)g(general)h(high-lev)n(el)-152 762
y(programming)25 b(languages)j(directly)d(in)n(to)h(custom)f(hardw)n
(are.)-40 845 y(W)-6 b(e)37 b(con)n(tin)n(ue)g(b)n(y)f(discussing)j(t)n
(w)n(o)e(additional)i(areas)f(of)g(re-)-152 928 y(lated)29
b(w)n(ork:)41 b(parallel)30 b(arc)n(hitectures)f(and)f
(recon\014gurable)h(arc)n(hi-)-152 1011 y(tectures.)-152
1228 y Fl(8.1)105 b(P)m(arallel)36 b(Arc)m(hitectures)-152
1359 y Fk(Other)23 b(researc)n(hers)i(ha)n(v)n(e)e(parallelized)i(some)
e(of)h(the)f(b)r(enc)n(hmarks)-152 1442 y(in)33 b(this)f(pap)r(er.)55
b(Automatic)31 b(parallelization)36 b(has)c(b)r(een)g(demon-)-152
1525 y(strated)37 b(to)f(w)n(ork)g(w)n(ell)h(for)g(dense)f(matrix)f
(scien)n(ti\014c)i(co)r(des)f([8)q(].)-152 1608 y(In)27
b(con)n(trast)g(to)h(this)f(w)n(ork,)h(our)f(approac)n(h)g(to)g
(generating)h(paral-)-152 1691 y(lelism)23 b(stems)f(from)g(an)h
(abilit)n(y)f(to)h(exploit)f(\014ne-grain)g(ILP)-6 b(,)23
b(rather)-152 1774 y(than)34 b(the)f(coarse-grain)j(parallelism)f
(targeted)f(b)n(y)67 b([8].)60 b(Multi-)-152 1858 y(pro)r(cessors)38
b(are)f(mostly)f(restricted)h(to)f(suc)n(h)g(coarse-grain)i(par-)-152
1941 y(allelism)c(b)r(ecause)f(of)g(their)f(high)h(costs)g(of)g(comm)n
(unication)e(and)-152 2024 y(sync)n(hronization.)63 b(Unfortunately)-6
b(,)37 b(\014nding)e(suc)n(h)g(coarse)h(grain)-152 2107
y(parallelism)41 b(often)e(requires)g(whole)h(program)f(analysis)h(b)n
(y)e(the)-152 2190 y(compiler,)c(whic)n(h)e(w)n(orks)g(w)n(ell)h(only)e
(in)h(restricted)g(domains.)52 b(In)-152 2273 y(a)31
b(custom)f(arc)n(hitecture,)i(w)n(e)f(can)g(successfully)h(exploit)f
(ILP)f(b)r(e-)-152 2356 y(cause)35 b(of)h(the)e(register)h(and)f
(wire-lev)n(el)i(latencies)f(in)g(hardw)n(are.)-152 2439
y(Of)28 b(course,)h(hardw)n(are)e(can)h(exploit)f(coarse-grain)j
(parallelism)e(as)-152 2522 y(w)n(ell.)-40 2605 y(Soft)n(w)n(are)k
(distributed)e(shared)h(memory)e(sc)n(hemes)h(on)h(m)n(ulti-)-152
2688 y(pro)r(cessors)36 b(\(DSMs\))d([16)q(])h([5])g(are)g(similar)g
(in)g(spirit)g(to)g(our)f(ap-)-152 2771 y(proac)n(h)22
b(for)h(managing)f(memory)-6 b(.)30 b(They)22 b(em)n(ulate)f(in)h(soft)
n(w)n(are)h(the)-152 2854 y(task)18 b(of)h(cac)n(he)g(coherence,)h(one)
e(whic)n(h)g(is)h(traditionally)g(p)r(erformed)-152 2937
y(b)n(y)27 b(complex)f(hardw)n(are.)40 b(In)27 b(con)n(trast,)h(this)g
(w)n(ork)f(turns)g(sequen-)-152 3020 y(tial)f(accesses)h(from)d(a)h
(single)h(memory)d(image)i(in)n(to)g(decen)n(tralized)-152
3103 y(accesses)f(across)g(m)n(ultiple)d(small)h(memories.)33
b(This)22 b(tec)n(hnique)f(en-)-152 3186 y(ables)29 b(the)f
(parallelization)j(of)e(sequen)n(tial)f(programs)g(in)n(to)g(a)h(high)
-152 3269 y(bandwidth)c(memory)f(arra)n(y)-6 b(.)-40
3352 y(Both)23 b(the)f(Berk)n(eley)g(IRAM)g(researc)n(h)h(pro)t(ject)g
([10)q(])g(and)f(Stan-)-152 3435 y(ford's)33 b(new)g(Smart)d(Memories)j
(Pro)t(ject)h([12)q(])e(fo)r(cus)h(on)f(building)-152
3518 y(future-generation)i(computing)e(system)h(that)f(are)i(more)f
(tigh)n(tly)-152 3601 y(coupled)26 b(with)g(memory)-6
b(.)32 b(The)26 b(IRAM's)f(approac)n(h)h(is)g(to)g(impro)n(v)n(e)-152
3684 y(p)r(erformance)19 b(of)h(the)f(memory)e(system)g(b)n(y)h
(\014tting)h(more)f(data)i(on)e(a)-152 3767 y(c)n(hip.)34
b(They)25 b(ac)n(hiev)n(e)g(this)g(goal)h(b)n(y)e(using)h(high-densit)n
(y)f(dynamic)-152 3850 y(RAM)44 b(\(DRAM\))f(memory)g(instead)h(of)h
(lo)n(w)n(er-densit)n(y)g(SRAM)-152 3933 y(cac)n(hes)21
b(and)g(treating)g(the)f(on-c)n(hip)g(DRAM)f(memory)g(as)i(the)f(main)
-152 4016 y(memory)33 b(instead)h(of)h(a)g(redundan)n(t)e(cop)n(y)-6
b(.)60 b(The)34 b(Smart)f(Memo-)-152 4099 y(ries)26 b(Pro)t(ject's)i
(stated)e(purp)r(ose)f(is)h(to)g(build)f(a)g(future-generation)-152
4182 y(computing)33 b(system)f(that)h(pro)n(vides)g(e\016ciency)-6
b(,)35 b(generalit)n(y)-6 b(,)36 b(and)-152 4265 y(programmabilit)n(y)
25 b(in)h(a)g(single)h(system.)-152 4483 y Fl(8.1.1)106
b(Recon\014gurable)36 b(Arc)m(hitectures)-152 4614 y
Fk(A)18 b(recon\014gurable)g(computing)f(system,)h(comprised)g(of)g(an)
g(arra)n(y)g(of)-152 4697 y(in)n(terconnected)f(Field)h(Programmable)f
(Gate)h(Arra)n(y)e(\(FPGA\))h(de-)-152 4780 y(vices)30
b(are)g(common)e(hardw)n(are)j(targets)f(for)h(application-sp)r
(eci\014c)-152 4863 y(computing.)44 b(Splash)29 b([6)q(])g(and)g(P)-6
b(AM)29 b([19)q(])g(are)h(the)f(\014rst)f(substan-)-152
4946 y(tial)20 b(recon\014gurable)f(computing)f(systems.)31
b(As)19 b(part)f(of)i(the)e(Splash)-152 5029 y(pro)t(ject,)28
b(a)f(team)e(lead)i(b)n(y)e(Ma)n(y)n(a)i(Gokhale)g(p)r(orted)f
(data-parallel)-152 5112 y(C)g([14)q(])f(to)g(the)f(Splash)h
(recon\014gurable)h(arc)n(hitecture.)34 b(This)26 b(e\013ort)-152
5195 y(w)n(as)37 b(one)f(of)h(the)e(\014rst)h(to)g(actually)g(compile)g
(programs,)j(rather)2040 -69 y(than)21 b(design)g(hardw)n(are,)i(for)f
(a)f(recon\014gurable)h(arc)n(hitecture.)33 b(De-)2040
14 y(signs)20 b(rep)r(orted)f(to)g(tak)n(e)g(mon)n(ths)f(to)h(design)h
(could)f(b)r(e)g(written)g(in)g(a)2040 97 y(da)n(y)-6
b(.)33 b(While)22 b(data-parallel)i(C)f(extended)e(the)h(language)i(to)
f(handle)2040 180 y(bit-lev)n(el)k(op)r(erations)h(and)e(systolic)i
(comm)n(unication,)e(all)i(con)n(trol)2040 263 y(\015o)n(w)18
b(is)h(managed)f(b)n(y)f(the)g(host.)33 b(Hardw)n(are)18
b(compilation)h(w)n(as)g(only)2040 346 y(concerned)34
b(with)g(basic)h(blo)r(c)n(ks)f(of)h(parallel)g(instructions.)60
b(This)2040 429 y(approac)n(h)27 b(has)g(b)r(een)f(p)r(orted)h(to)g
(National)g(Semiconductors)f(new)2040 512 y(pro)r(cessor/FPGA)g(c)n
(hip)e(based)g(on)g(the)f(CLAy)h(arc)n(hitecture)g([13)q(].)2152
596 y(Programmable)29 b(Activ)n(e)f(Memories)h([19)q(],)h(designed)e
(at)h(Com-)2040 679 y(paq)h(P)n(aris)i(Researc)n(h)f(Lab,)h(in)n
(terfaces)g(to)f(a)g(host)g(pro)r(cessor)h(via)2040 762
y(memory-mapp)r(ed)27 b(I/O.)32 b(The)f(programming)f(mo)r(del)h(is)g
(to)g(treat)2040 845 y(the)k(recon\014gurable)h(logic)g(as)g(a)f
(memory)e(capable)j(of)g(p)r(erform-)2040 928 y(ing)24
b(computation.)33 b(The)25 b(actual)f(design)g(of)h(the)e
(con\014guration)i(for)2040 1011 y(eac)n(h)e(P)-6 b(AM)22
b(application)i(w)n(as)g(sp)r(eci\014ed)f(in)f(a)h(C-syn)n(tax)f(hardw)
n(are)2040 1094 y(description)k(language.)2152 1177 y(In)21
b(the)g(PRISM)f(pro)t(ject)j([17)q(],)f(functions)g(deriv)n(ed)f(from)g
(a)g(sub-)2040 1260 y(set)29 b(of)g(C)f(are)h(compiled)f(in)n(to)g(an)g
(FPGA.)h(The)g(PRISM-I)e(subset)2040 1343 y(included)d(if-then-else)g
(as)h(w)n(ell)h(as)f(for)g(lo)r(ops)g(of)g(\014xed)f(coun)n(t.)33
b(The)2040 1426 y(PRISM-I)r(I)c(subset)i(included)f(v)l(ariable)g
(length)h(for)g(lo)r(ops,)i(while,)2040 1509 y(do-while,)27
b(switc)n(h-case,)g(break,)e(and)h(con)n(tin)n(ue.)2152
1592 y(Other)k(pro)t(jects)h(include)f(compilation)g(of)h(Rub)n(y)e
([7])i(-)e(a)i(lan-)2040 1675 y(guage)37 b(of)g(functions)g(and)e
(relations,)41 b(and)36 b(compilation)g(of)h(v)n(ec-)2040
1758 y(torizable)51 b(lo)r(ops)f(in)f(Mo)r(dula-2)h(for)h
(recon\014gurable)e(arc)n(hitec-)2040 1841 y(tures)26
b([21)q(].)2040 2066 y Fl(9)105 b(Conclusion)2040 2223
y Fk(In)23 b(this)i(pap)r(er)f(w)n(e)g(ha)n(v)n(e)g(describ)r(ed)g(and)
f(ev)l(aluated)h(a)h(no)n(v)n(el)f(com-)2040 2306 y(pilation)c(system)f
(that)g(allo)n(ws)j(sequen)n(tial)d(programs)h(written)g(in)f(C)2040
2389 y(and)i(F)-6 b(ortran)21 b(to)g(b)r(e)g(compiled)g(directly)g(in)n
(to)g(application-sp)r(eci\014c)2040 2472 y(hardw)n(are)26
b(substrates.)2152 2555 y(Our)44 b(approac)n(h)h(extends)f(kno)n(wn)h
(tec)n(hniques)f(from)g(paral-)2040 2638 y(lelizing)37
b(compilers,)i(suc)n(h)c(as)h(memory)d(disam)n(biguation,)39
b(static)2040 2722 y(sc)n(heduling)24 b(and)f(data)h(partitioning.)35
b(W)-6 b(e)24 b(fo)r(cus)g(on)g(memory)e(and)2040 2805
y(wires)k(\014rst,)f(and)g(then)f(computation.)33 b(W)-6
b(e)25 b(start)g(b)n(y)f(partitioning)2040 2888 y(the)i(data)h
(structures)f(in)g(the)g(program)g(in)n(to)g(and)g(arra)n(y)h(of)g
(small,)2040 2971 y(fast)h(memories.)39 b(In)27 b(our)g(mo)r(del,)h
(computation)f(is)h(p)r(erformed)f(b)n(y)2040 3054 y(custom)f(logic)j
(computing)d(elemen)n(ts)g(in)n(tersp)r(ersed)i(among)e(these)2040
3137 y(memories.)54 b(The)32 b(compiler)h(lev)n(erages)g(the)f(corresp)
r(ondence)h(b)r(e-)2040 3220 y(t)n(w)n(een)e(memory)e(and)h
(computation)g(to)h(place)h(the)e(computation)2040 3303
y(close)j(to)g(the)e(memory)g(that)g(it)i(accesses,)j(suc)n(h)31
b(that)h(comm)n(uni-)2040 3386 y(cation)i(costs)f(are)g(minimized.)55
b(Similarly)-6 b(,)34 b(a)f(static)g(sc)n(hedule)g(is)2040
3469 y(generated)g(for)g(the)f(in)n(terconnect)g(that)g(optimizes)g
(wire)h(utiliza-)2040 3552 y(tion)f(and)f(minimizes)g(in)n(terconnect)h
(latency)-6 b(.)52 b(Finally)-6 b(,)33 b(the)f(sp)r(e-)2040
3635 y(cialized)40 b(hardw)n(are)e(for)h(smart)f(memories,)j(virtual)d
(wires,)43 b(and)2040 3718 y(other)25 b(custom)f(logic)i(is)f(compiled)
f(to)h(hardw)n(are)g(in)f(the)g(form)h(of)g(a)2040 3801
y(m)n(ulti-pro)r(cess)g(state)i(mac)n(hine)d(in)i(syn)n(thesizable)g(V)
-6 b(erilog.)2152 3884 y(With)26 b(this)g(compilation)h(system)e(w)n(e)
i(ha)n(v)n(e)e(obtained)i(sp)r(ecial-)2040 3967 y(ization)20
b(p)r(erformance)f(impro)n(v)n(emen)n(ts)d(b)n(y)i(up)f(to)i(an)g
(order)g(of)g(mag-)2040 4050 y(nitude)29 b(v)n(ersus)h(a)h(single)g
(general)g(purp)r(ose)f(pro)r(cessor)h(and)f(addi-)2040
4133 y(tional)35 b(parallelization)i(sp)r(eedups)d(similar)h(to)f
(those)h(obtainable)2040 4216 y(using)26 b(a)g(tigh)n(tly)f(in)n
(terconnected)h(m)n(ultipro)r(cessor.)2040 4441 y Fl(References)2078
4598 y Fk([1])39 b(J.)25 b(Babb,)g(R.)g(T)-6 b(essier,)26
b(M.)g(Dahl,)f(S.)f(Hanono,)h(D.)g(Hoki,)g(and)2197 4681
y(A.)18 b(Agarw)n(al.)24 b(Logic)c(Em)n(ulation)e(with)h(Virtual)g
(Wires.)k Fj(IEEE)2197 4764 y(T)-6 b(r)l(ansactions)43
b(on)f(Computer)g(A)n(ide)l(d)g(Design)p Fk(,)j(16\(6\):609{)2197
4847 y(626,)27 b(June)f(1997.)2078 4990 y([2])39 b(Ra)t(jeev)63
b(Barua,)72 b(W)-6 b(alter)63 b(Lee,)72 b(Saman)61 b(Amarasinghe,)2197
5073 y(and)45 b(Anan)n(t)g(Agarw)n(al.)96 b(Maps:)75
b(A)46 b(Compiler-Managed)2197 5156 y(Memory)67 b(System)f(for)i(Ra)n
(w)f(Mac)n(hines.)160 b(T)-6 b(ec)n(hnical)p eop
%%Page: 11 11
11 10 bop 5 -69 a Fk(rep)r(ort,)81 b(M.I.T.)71 b(LCS-TM-583,)82
b(July)69 b(1998.)166 b(Also)5 14 y(h)n(ttp://www.cag.lcs.mit.edu/ra)n
(w/.)-113 157 y([3])38 b(Ra)t(jeev)c(Barua,)j(W)-6 b(alter)33
b(Lee,)j(Saman)d(Amarasinghe,)i(and)5 240 y(Anan)n(t)41
b(Agarw)n(al.)84 b(Memory)41 b(Bank)h(Disam)n(biguation)g(us-)5
323 y(ing)47 b(Mo)r(dulo)g(Unrolling)g(for)g(Ra)n(w)f(Mac)n(hines.)97
b(In)46 b Fj(Pr)l(o-)5 406 y(c)l(e)l(e)l(dings)37 b(of)e(the)i(A)n
(CM/IEEE)e(Fifth)g(Int'l)g(Confer)l(enc)l(e)i(on)5 489
y(High)31 b(Performanc)l(e)h(Computing\(HIPC\))p Fk(,)e(Dec)e(1998.)46
b(Also)5 572 y(h)n(ttp://www.cag.lcs.mit.edu/ra)n(w/.)-113
715 y([4])38 b(William)54 b(J.)h(Dally)-6 b(.)117 b(Micro-optimization)
55 b(of)g(\015oating-)5 798 y(p)r(oin)n(t)37 b(op)r(erations.)71
b(In)37 b Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)d(the)h(Thir)l(d)g(Inter-)
5 881 y(national)32 b(Confer)l(enc)l(e)g(on)f(A)n(r)l(chite)l(ctur)l
(al)j(Supp)l(ort)f(for)e(Pr)l(o-)5 964 y(gr)l(amming)48
b(L)l(anguages)i(and)e(Op)l(er)l(ating)h(Systems)p Fk(,)55
b(pages)5 1047 y(283{289,)29 b(Boston,)e(Massac)n(h)n(usetts,)g(April)f
(3{6,)h(1989.)-113 1190 y([5])38 b(Sandh)n(y)n(a)74 b(Dw)n(ark)l(adas,)
88 b(Alan)75 b(L.)g(Co)n(x,)88 b(and)74 b(Willy)5 1273
y(Zw)n(aenep)r(o)r(el.)24 b(An)18 b(in)n(tegrated)g
(compile-time/run-time)e(soft-)5 1356 y(w)n(are)35 b(distributed)e
(shared)g(memory)f(system.)57 b(In)33 b Fj(Pr)l(o)l(c)l(e)l(e)l(d-)5
1439 y(ings)40 b(of)g(the)g(Seventh)i(International)f(Confer)l(enc)l(e)
g(on)f(A)n(r-)5 1522 y(chite)l(ctur)l(al)48 b(Supp)l(ort)g(for)e(Pr)l
(o)l(gr)l(amming)g(L)l(anguages)i(and)5 1605 y(Op)l(er)l(ating)40
b(Systems)p Fk(,)j(pages)38 b(186{197,)44 b(Cam)n(bridge,)d(Mas-)5
1688 y(sac)n(h)n(usetts,)26 b(Octob)r(er)g(1{5,)h(1996.)-113
1831 y([6])38 b(Ma)n(y)n(a)26 b(Gokhale,)h(William)f(Holmes,)f(Andrew)g
(Kopser,)h(Sara)5 1914 y(Lucas,)32 b(Ronald)d(Minnic)n(h,)j(Douglas)e
(Sw)n(eeney)-6 b(,)31 b(and)e(Daniel)5 1997 y(Lopresti.)81
b(Building)42 b(and)f(using)g(a)h(highly)e(parallel)j(pro-)5
2080 y(grammable)20 b(logic)h(arra)n(y)-6 b(.)26 b Fj(Computer)p
Fk(,)c(24\(1\),)h(Jan)n(uary)d(1991.)-113 2223 y([7])38
b(Shaori)24 b(Guo)g(and)f(W)-6 b(a)n(yne)23 b(Luk.)30
b(Compiling)24 b(Rub)n(y)d(in)n(to)j(FP-)5 2306 y(GAs.)57
b(In)32 b Fj(Field)i(Pr)l(o)l(gr)l(ammable)i(L)l(o)l(gic)f(and)g
(Applic)l(ations)p Fk(,)5 2389 y(August)25 b(1995.)-113
2532 y([8])38 b(M.)26 b(W.)e(Hall,)i(J.)g(M.)f(Anderson,)g(S.)g(P)-6
b(.)24 b(Amarasinghe,)i(B.)f(R.)5 2615 y(Murph)n(y)-6
b(,)21 b(S.-W.)f(Liao,)j(E.)f(Bugnion,)g(and)f(M.)g(S.)g(Lam.)26
b(Max-)5 2698 y(imizing)g(m)n(ultipro)r(cessor)h(p)r(erformance)f(with)
g(the)f(suif)i(com-)5 2781 y(piler.)35 b Fj(COMPUTER)p
Fk(,)25 b(29\(12\):84{89,)30 b(Decem)n(b)r(er)24 b(1996.)-113
2923 y([9])38 b(IK)n(OS)j(Systems,)k(Inc.)82 b Fj(VirtuaL)l(o)l(gic)44
b(Emulation)f(System)5 3006 y(Do)l(cumentation)p Fk(,)28
b(1996.)36 b(V)-6 b(ersion)26 b(1.2.)-152 3149 y([10])39
b(Christoforos)32 b(E.)e(Kozyrakis,)h(St)n(ylianos)e(P)n(erissakis,)j
(Da)n(vid)5 3232 y(P)n(atterson,)48 b(Thomas)42 b(Anderson,)k(Krste)c
(Asano)n(vic,)47 b(Neal)5 3315 y(Cardw)n(ell,)i(Ric)n(hard)42
b(F)-6 b(romm,)45 b(Jason)f(Golbus,)k(Benjamin)5 3398
y(Gribstad,)59 b(Kim)n(b)r(erly)50 b(Keeton,)58 b(Randi)51
b(Thomas,)58 b(Noah)5 3481 y(T)-6 b(reuhaft,)27 b(and)f(Katherine)g(Y)
-6 b(elic)n(k.)36 b(Scalable)28 b(pro)r(cessors)g(in)5
3564 y(the)37 b(billion)h(transistors)g(era:)58 b(IRAM.)68
b Fj(IEEE)37 b(Computer)p Fk(,)5 3647 y(pages)27 b(75{78,)h(Septem)n(b)
r(er)c(1997.)-152 3790 y([11])39 b(W)-6 b(alter)53 b(Lee,)61
b(Ra)t(jeev)53 b(Barua,)62 b(Matthew)53 b(F)-6 b(rank,)60
b(Dev-)5 3873 y(abhatuni)45 b(Srikrishna,)50 b(Jonathan)45
b(Babb,)51 b(Viv)n(ek)44 b(Sark)l(ar,)5 3956 y(and)36
b(Saman)g(Amarasinghe.)66 b(Space-Time)36 b(Sc)n(heduling)g(of)5
4039 y(Instruction-Lev)n(el)g(P)n(arallelism)j(on)e(a)g(Ra)n(w)h(Mac)n
(hine.)68 b(In)5 4122 y Fj(Pr)l(o)l(c)l(e)l(e)l(dings)36
b(of)e(the)h(Eighth)f(A)n(CM)g(Confer)l(enc)l(e)h(on)f(A)n(r)l(chi-)5
4205 y(te)l(ctur)l(al)i(Supp)l(ort)f(for)f(Pr)l(o)l(gr)l(amming)h(L)l
(anguages)g(and)f(Op-)5 4288 y(er)l(ating)g(Systems)p
Fk(,)i(pages)c(46{57,)k(San)31 b(Jose,)k(CA,)d(Octob)r(er)5
4371 y(1998.)-152 4514 y([12])39 b(Mark)26 b(Horo)n(witz,)h(p)r
(ersonal)g(comm)n(unications.)5 4597 y(Stanford)f(Univ)n(ersit)n(y)f
(Smart)f(Memories)i(Pro)t(ject.)5 4680 y(h)n(ttp://v)n(elo)n
(x.stanford.edu/smart)p 1090 4680 24 4 v 28 w(memories.)-152
4823 y([13])39 b(Ma)n(y)n(a)d(B.)g(Gokhale,)i(Janice)f(M.)f(Stone,)h
(Matthew)f(F)-6 b(rank,)5 4906 y(Sarno\013)23 b(Corp)r(oration.)31
b(NAP)-6 b(A)21 b(C:)i(Compiling)g(for)g(a)g(Hybrid)5
4989 y(RISC/FPGA)29 b(Arc)n(hitecture.)43 b(In)28 b Fj(F)n(CCM98)p
Fk(,)i(Napa)f(V)-6 b(alley)g(,)5 5072 y(California,)29
b(April)c(1998.)2040 -69 y([14])39 b(Ma)n(y)n(a)25 b(Gokhale)h(and)f
(Brian)h(Sc)n(hott.)33 b(Data-P)n(arallel)27 b(C)e(on)g(a)2197
14 y(Recon\014gurable)32 b(Logic)h(Arra)n(y)-6 b(.)52
b Fj(Journal)34 b(of)f(Sup)l(er)l(c)l(omput-)2197 97
y(ing)p Fk(,)26 b(Septem)n(b)r(er)e(1995.)2040 240 y([15])39
b(Radu)27 b(Rugina)h(and)g(Martin)g(Rinard.)41 b(Span:)d(A)28
b(shap)r(e)g(and)2197 323 y(p)r(oin)n(ter)19 b(analysis)h(pac)n(k)l
(age.)j(T)-6 b(ec)n(hnical)20 b(rep)r(ort,)h(M.I.T.)f(LCS-)2197
406 y(TM-581,)27 b(June)f(1998.)2040 549 y([16])39 b(Daniel)i(J.)g
(Scales,)46 b(Kourosh)41 b(Gharac)n(horlo)r(o,)47 b(and)40
b(Chan-)2197 632 y(dramohan)k(A.)h(Thekk)l(ath.)92 b(Shasta:)74
b(A)44 b(lo)n(w)j(o)n(v)n(erhead,)2197 715 y(soft)n(w)n(are-only)21
b(approac)n(h)f(for)h(supp)r(orting)f(\014ne-grain)f(shared)2197
798 y(memory)-6 b(.)59 b(In)34 b Fj(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)e
(the)h(Seventh)g(International)2197 881 y(Confer)l(enc)l(e)c(on)g(A)n
(r)l(chite)l(ctur)l(al)h(Supp)l(ort)g(for)e(Pr)l(o)l(gr)l(amming)2197
964 y(L)l(anguages)57 b(and)f(Op)l(er)l(ating)g(Systems)p
Fk(,)65 b(pages)57 b(174{185,)2197 1047 y(Cam)n(bridge,)26
b(Massac)n(h)n(usetts,)h(Octob)r(er)f(1{5,)h(1996.)2040
1190 y([17])39 b(A.)27 b(Smith,)f(M.)i(W)-6 b(azlo)n(wski,)28
b(L.)g(Agarw)n(al,)h(T.)e(Lee,)h(E.)g(Lam,)2197 1273
y(P)-6 b(.)17 b(A)n(thans,)i(H.)e(Silv)n(erman,)h(and)f(S.)g(Ghosh.)k
(PRISM)16 b(I)r(I)h(Com-)2197 1356 y(piler)24 b(and)f(Arc)n(hitecture.)
30 b(In)23 b Fj(Pr)l(o)l(c)l(e)l(e)l(dings)28 b(IEEE)d(Workshop)2197
1439 y(on)39 b(FPGA-b)l(ase)l(d)i(Custom)e(Computing)g(Machines)p
Fk(,)j(pages)2197 1522 y(9{16,)27 b(Napa,)f(CA,)g(April)g(1993.)h
(IEEE.)2040 1665 y([18])39 b(Synopsys,)k(Inc.)76 b Fj(Behavior)l(al)42
b(Compiler)e(User)i(Guide,)i(V)2197 1748 y(1997.08)p
Fk(,)27 b(August)e(1997.)2040 1891 y([19])39 b(J.E.)28
b(V)-6 b(uillemin,)26 b(P)-6 b(.)27 b(Bertin,)h(D.)f(Roncin,)g(M.)h
(Shand,)e(H.)h(H.)2197 1974 y(T)-6 b(ouati,)32 b(and)e(P)-6
b(.)31 b(Boucard.)49 b(Programmable)30 b(Activ)n(e)f(Mem-)2197
2057 y(ories:)65 b(Recon\014gurable)40 b(Systems)f(Come)h(of)h(Age.)78
b Fj(IEEE)2197 2140 y(T)-6 b(r)l(ansactions)30 b(on)d(VLSI)h(Systems)p
Fk(,)f(4\(1\),)g(Marc)n(h)f(1996.)2040 2283 y([20])39
b(Elliot)33 b(W)-6 b(aingold,)33 b(Mic)n(hael)g(T)-6
b(a)n(ylor,)33 b(Dev)l(abhaktuni)c(Srikr-)2197 2366 y(ishna,)23
b(Viv)n(ek)d(Sark)l(ar,)i(W)-6 b(alter)21 b(Lee,)h(Victor)g(Lee,)g
(Jang)g(Kim,)2197 2449 y(Matthew)27 b(F)-6 b(rank,)27
b(P)n(eter)g(Finc)n(h,)g(Ra)t(jeev)g(Barua,)h(Jonathan)2197
2532 y(Babb,)f(Saman)f(Amarasinghe,)h(and)g(Anan)n(t)e(Agarw)n(al.)39
b(Bar-)2197 2615 y(ing)20 b(It)g(All)g(to)h(Soft)n(w)n(are:)32
b(Ra)n(w)21 b(Mac)n(hines.)26 b Fj(IEEE)c(Computer)p
Fk(,)2197 2698 y(30\(9\):86{93,)37 b(Septem)n(b)r(er)30
b(1997.)53 b(Also)32 b(a)n(v)l(ailable)h(as)f(MIT-)2197
2781 y(LCS-TR-709.)2040 2923 y([21])39 b(M.)25 b(W)-6
b(einhardt.)32 b(Compilation)25 b(and)f(Pip)r(eline)i(Syn)n(thesis)e
(for)2197 3006 y(Recon\014gurable)41 b(Arc)n(hitectures)g(-)f(High)h(P)
n(erformance)h(b)n(y)2197 3089 y(Con\014gw)n(are.)48
b(In)29 b Fj(R)l(e)l(c)l(on\014gur)l(able)34 b(A)n(r)l(chite)l(ctur)l
(e)g(Workshop)p Fk(,)2197 3173 y(1997.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
