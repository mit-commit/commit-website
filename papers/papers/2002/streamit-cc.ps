%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: paper.dvi
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips paper.dvi -o paper.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.02.05:1807
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (paper.dvi)
@start
%DVIPSBitmapFont: Fa cmmi9 9 1
/Fa 1 23 df<1307D90FC01338011F147C16FC5CA2013F1301A202005BA2491303A2017E
5CA201FE1307A2495CA20001140FA2495C17800003021F13C016C149EC8180A20007EC3F
836D017F130016034B5A3A0FFC03CF869039FE070F8E9039DFFE07FC9039C3F801F0D81F
C0C9FCA25BA2123FA290CAFCA25AA2127EA212FEA25A12382A327FA02E>22
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmbx7 7 8
/Fb 8 109 df<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A7B8915>46
D<EB03C0130F133FEA07FFB5FCA2EAF83F1200B3AA007FB512E0A31B267BA526>49
D<EB7FC03803FFF8000F13FE393F81FF80397E007FC0007FEB3FE039FF801FF0A2EC0FF8
A3EA7F00123EC7FCA2EC1FF0A2EC3FE015C0EC7F80ECFF00EB01FC495AEB07E0495A9038
1F8078EB3E005B4913F0EA01E00007B5FC5A5A5A5AB612E0A31D267CA526>I<007FB712
F0A39039803FE00FD87E001403007C15010078150000F816F8A2481678A5C71500B3A401
7FB512F0A32D277DA634>84 D<EBFFF0000713FE486D7E391FE03FE06E7E140F6E7EA2EA
0780C7FCA2EB3FFF0003B5FC380FFE07EA3FE0EA7F80EAFF005AA36C130F141F387FC07F
3A3FFFFBFFC0000F13E100011300221A7E9925>97 D<EAFFF0A3120FABEC7FC09038F3FF
F890B512FE913880FF809039FC003FC049EB1FE049130F16F0150716F8A8ED0FF0A216E0
6D131F01FEEB3FC06DEBFF009038CFFFFE018313F89038007FC025287EA72A>I<EB3FF8
3801FFFE48EBFF80390FF83FC0391FE007E0383FC003018013F0007F1301010013F85AA2
90B5FCA390C8FCA36C7EA2003F14786C7E6C6C13F83907F807F06CB512E0C614C090381F
FE001D1A7E9922>101 D<EAFFF0A3120FB3B0B5FCA310287DA715>108
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi7 7 1
/Fc 1 108 df<133EEA07FEA2EA007CA213FCA25BA21201A25BA21203EC07809038E01F
C0EC38600007EB61E014C3EBC187EBC307D80FC613C09038CC038001B8C7FC13E0487E13
FEEB3F80EB0FC0486C7E1303003E1460A2127EECC0C0127CECC18012FC903801E30038F8
00FE0070137C1B297CA723>107 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 10 10
/Fd 10 121 df<121C127FEAFF80A5EA7F00121C0909798817>58
D<1760177017F01601A21603A21607160FA24C7EA216331673166316C3A2ED0183A2ED03
03150683150C160115181530A21560A215C014011580DA03007FA202061300140E140C5C
021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B13385B01F01680487E000716
FFB56C013F13FF5EA2383C7DBB3E>65 D<0103B77E4916F018FC903B0007F80003FE4BEB
00FFF07F80020FED3FC0181F4B15E0A2141FA25DA2143F19C04B143F1980027F157F1900
92C812FE4D5A4A4A5AEF0FF04AEC1FC005FFC7FC49B612FC5F02FCC7B4FCEF3FC00103ED
0FE0717E5C717E1307844A1401A2130F17035CA2131F4D5A5C4D5A133F4D5A4A4A5A4D5A
017F4BC7FC4C5A91C7EA07FC49EC3FF0B812C094C8FC16F83B397DB83F>I<902603FFF8
93383FFF80496081D900079438FF80000206DC01BFC7FCA2020E4C5A1A7E020C1606190C
DA1C7E16FE4F5A02181630A20238166162023016C1F00181DA703F158395380303F00260
1506A202E0ED0C076202C01518183001016D6C140F06605B028015C0A20103923801801F
DD03005B140092380FC00649173F4D91C8FC01065DA2010E4B5B4D137E130C6F6C5A011C
17FEDCE1805B011802E3C7FCA2013802E6130104EC5C1330ED03F8017016034C5C01F05C
D807FC4C7EB500E0D9C007B512F01680150151397CB851>77 D<902603FFF891381FFFF8
496D5CA2D90007030113006FEC007C02061678DA0EFF157081020C6D1460A2DA1C3F15E0
705CEC181F82023815016F6C5C1430150702706D1303030392C7FC02607FA2DAE0015C70
1306ECC0008201016E130EEF800C5C163F0103EDC01C041F131891C713E0160F49EDF038
18300106140717F8010E02031370EFFC60130CEE01FE011C16E004005B011815FF177F13
38600130153FA20170151F95C8FC01F081EA07FCB512E01706A245397DB843>I<0103B6
12F849EDFF8018E0903B0007F8001FF84BEB03FCEF00FE020F157FA24BEC3F80A2021F16
C0A25DA2143FF07F805DA2027FEDFF006092C7485A4D5A4A4A5A4D5A4AEC1F80057FC7FC
0101EC07F891B612E094C8FC9139FC000FC00103EC03F0707E4A6D7E831307177E5C177F
010F5D5F5CA2011F1401A25CA2133F16034A4A1360A2017F17E019C091C71401496C0101
1480B61503933900FE0700EF7E0ECAEA1FFCEF07F03B3B7DB83F>82
D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB01FE02F813
00495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7FC80806D7E
14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F1500167F16
3F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A5A6D495A6D
EB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC313D7CBA33>
I<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812
381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B12035BA200071318
13E01438000F133013C01470EB806014E014C01381EB838038078700EA03FEEA00F81539
7EB71D>105 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00
305B4A137C00705B00605BA200E090C712FC485A137EA20000140101FE5C5BA215030001
5D5B15075E120349010F133016C0031F13700007ED80605B17E0EE00C0000F1501491580
1603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>110
D<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A0380
0FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8
FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C00FF15
60010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267E
A42F>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmr6 6 2
/Fe 2 51 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmtt10 10 48
/Ff 48 122 df<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A
5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA2
6C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438
164272B92C>40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F
14C0130FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714
E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270
164279B92C>I<EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201
EA03F01207EA1FE0EA7FC0EAFF80130012FC12700E17718A2C>44
D<1507ED1F80153F15FF14034A1300EC1FFC4A5AECFFE0491380010790C7FCEB0FFCEB3F
F8EB7FE048485A4890C8FCEA0FFEEA1FF8EA7FF0EAFFC05BA27FEA7FF0EA1FF8EA0FFEEA
03FF6C13C06C6C7EEB3FF8EB0FFC6DB4FC01017F6D13E0EC3FF86E7EEC07FF6E13801400
153F151FED0700212A7BAD2C>60 D<127012FC7E6C7E13E06C7EEA1FFC6C7E3803FF80C6
7FEB7FF0EB1FF8EB0FFEEB03FF6D13C06D6C7EEC3FF8EC0FFC6EB4FC0201138080A25C02
071300EC0FFCEC3FF8EC7FE049485A4990C7FCEB0FFEEB1FF8EB7FF0EBFFC000035BD80F
FEC8FC485AEA7FF0485A138048C9FC5A1270212A7BAD2C>62 D<14FE497EA4497FA214EF
A2130781A214C7A2010F7FA314C390381F83F0A590383F01F8A490387E00FCA549137E90
B512FEA34880A29038F8003FA34848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514
FE6C15FC497E27347EB32C>65 D<007FB512E015F8B612FE6C8016C03903F0003FED0FE0
ED07F01503A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C090
39F0001FE0ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0
007FB612E016C0B712806CECFE0015F027337FB22C>I<02FF13700107EBE0F84913F901
3F13FD4913FFEBFF813901FE007F4848131FD807F0130F1507485A491303485A150148C7
FCA25A007EEC00F01600A212FE5AAB7E127EA3007F15F06CEC01F8A26C7EA26C6C13036D
14F06C6C130716E0D803FC131F6C6CEB3FC03A00FF81FF806DB512006D5B010F5B6D13F0
0100138025357DB32C>I<007FB5FCB612C015F0816C803907E003FEEC00FFED7F80153F
ED1FC0ED0FE0A2150716F0150316F81501A4ED00FCACED01F8A3150316F0A2150716E015
0FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A5D15C06C91C7FC26337EB22C>I<00
7FB612F0B712F8A37E3903F00001A7ED00F01600A4EC01E04A7EA490B5FCA5EBF003A46E
5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC27337EB22C>I<007FB612F8B712FC
A37ED803F0C7FCA716781600A515F04A7EA490B5FCA5EBF001A46E5A92C7FCAD387FFFE0
B5FC805C7E26337EB22C>I<D87FFEEBFFFCB54813FEA36C486C13FCD807E0EB0FC0B190
B6FCA59038E0000FB3D87FFEEBFFFCB54813FEA36C486C13FC27337EB22C>72
D<007FB512F8B612FCA36C14F839000FC000B3B3A5007FB512F8B612FCA36C14F81E3379
B22C>I<0107B512804914C0A36D148090390003F000B3AF1218127EA2B4FCA24A5A4813
0F007F131F9038C07FC06CB55A6C91C7FC6C5B000313F838007FC022347BB22C>I<387F
FFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6FCB7FCA36C15F025337DB22C>
76 D<D87FE0EB0FFC486CEB1FFEA26D133F007F15FC000F15E001BC137BA4019E13F3A3
EB9F01A2018F13E3A21483A2018713C314C7A201831383A214EFA201811303A214FFEB80
FEA3147C14381400ACD87FF0EB1FFC486CEB3FFEA36C48EB1FFC27337EB22C>I<D87FF0
EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA213DF13CFA2148013C714C0A2
13C314E0A213C114F0A213C014F8A2147CA3143EA2141E141FA2140F1587A2140715C7A2
140315E71401A215F71400A215FFD87FFC137F487E153FA26C48EB1F8027337EB22C>I<
EB7FFF0003B512E0000F14F848804880EBE003EB800048C7127FA2007E80A300FE158048
141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEBF00790B5FC6C5C6C5C000314E0C6
6C90C7FC21357BB32C>I<007FB512C0B612F88115FF6C15802603F00013C0153FED0FE0
ED07F0A2150316F81501A6150316F01507A2ED0FE0ED3FC015FF90B61280160015FC5D15
C001F0C8FCB0387FFF80B57EA36C5B25337EB22C>I<EB7FFF0003B512E0000F14F84880
4880EBF007EB800048C7127FA2007E80A300FE158048141FB3A7EB01F0EB03F800FE143F
267E01FC1300A2EB00FE007F5C147FD83F8013FEEBF03F90B5FC6C5C6C5C000314E0C67E
90380007F0A26E7EA26E7EA26E7EA2157FA2153E21407BB32C>I<387FFFFCB67E15E015
F86C803907E007FE1401EC007F6F7E151FA26F7EA64B5AA2153F4BC7FCEC01FE140790B5
5A5D15E081819038E007FCEC01FE1400157F81A8160FEE1F80A5D87FFEEB1FBFB5ECFF00
815E6C486D5AC8EA01F029347EB22C>I<90381FF80790B5EA0F804814CF000714FF5A38
1FF01F383FC003497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7F
EA3FE0EA1FFCEBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF0200
1380153FED1FC0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F00
9038FE01FF90B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>I<007FB612FC
B712FEA43AFC007E007EA70078153CC71400B3AF90383FFFFCA2497F6D5BA227337EB22C
>I<3A3FFF03FFE0484913F0148714076C6D13E03A01F800FE007F0000495A13FE017E5B
EB7F03013F5B1487011F5B14CF010F5B14FF6D5BA26D90C7FCA26D5AA26D5AA2497EA249
7EA2497F81EB0FCF81EB1FC7EC87F0EB3F83EC03F8EB7F01017E7FEBFE00497F0001147E
49137F000380491480151FD87FFEEBFFFC6D5AB514FE6C15FC497E27337EB22C>88
D<D87FFCEB7FFC486CEBFFFEA36C48EB7FFCD807F0EB0FC0151F000315806D133F12016D
EB7F0012006D137E017E13FE017F5BEB3F01EC81F8131FEC83F0EB0FC314C7903807E7E0
A201035B14EF6DB45AA292C7FC7F5C147EB0903807FFE0497FA36D5B27337EB22C>I<38
7FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C>91
D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C>93
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138
801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13
036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027
337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E
4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F0039
07FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC
003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC
007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CEC
BFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E
48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075A
B7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001
FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3F
FE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C
5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC90
391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C000
1300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99F
FEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001F
F848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83F
E0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>
I<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC0
1F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>I<
1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007F
B512FCB612FEA36C14FC1F3479B32C>I<EA7FE0487EA3127F1201AA91381FFFF04A13F8
A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5
FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0FFFC
B500E113FEA36C01C013FC27337EB22C>107 D<387FFFE0B57EA37EEA0003B3B3A5007F
B61280B712C0A36C158022337BB22C>I<397FF01FE039FFF87FFC9038F9FFFE01FB7F6C
B6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C
01E0140029247FA32C>110 D<EB07FCEB1FFF017F13C048B512F048803907FC07FC390F
F001FE48486C7E0180133F003F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15
C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13
C0011F90C7FCEB07FC23247CA32C>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C1580
00019038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE
6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01
F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C>I<903903FC078090391FFF
0FC0017F13CF48B512EF4814FF3807FE07380FF00148487E49137F4848133F90C7FC4814
1F127E150F5AA87E007E141FA26C143F7F6C6C137F6D13FF380FF0033807FC0F6CB6FC6C
14EF6C6C138F6D130FEB07F890C7FCAD0203B5FC4A1480A36E140029367DA32C>I<D87F
FEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A13704A
13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>I<90387FF8700003B5
12F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F140013F0383FFFC06C13FE
6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00FC143F151F7EA26C14
3F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC0020247AA32C>I<13
1E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB1FC0
ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>I<3A7FF003FF80486C48
7FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF90B7FC6D15807F6D13CF90
2603FE07130029247FA32C>I<D87FFFEB7FFF6EB5FCB515806C16004A7ED807C0EB01F0
A66C6C495AA3143E147FA2D801F0495AECFF87A214F7A201F113C700005D9038F9E3CFA2
01FB13EFA3D97BC190C7FC017F13FFA21480A2013F5B90381F007C29247FA32C>119
D<3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D14001200
5D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03
E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C01003F5B
EA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmbx10 10 35
/Fg 35 123 df<B61280A819087F9620>45 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0
A2EA3FE0EA0F800D0D798C1B>I<141E143E14FE1307133FB5FCA313CFEA000FB3B3A600
7FB61280A4213779B630>49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F
800F1380263F000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8
FCEDFFF0A216E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849
481378495A495A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA4
25377BB630>I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C
13E0EA0FF001FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3F
F090380FFFC092C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA2
16FEEA1FC0487E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C026
0FFC0713806CB61200000114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA215
1F153F157F15FFA25C5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B
485A485A1207485A90C7FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A42937
7DB630>I<001C15C0D81F80130701F8137F90B61280A216005D5D15F05D15804AC7FC14
F090C9FCA8EB07FE90383FFFE090B512F89038FC07FC9038E003FFD98001138090C713C0
120EC813E0157F16F0A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713
E0007C15C06C5B6C491380D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8
C7FC25387BB630>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC
00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890
C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F17
07A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A0107
01C0EB0FE06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7B
B945>67 D<B912C0A43A007FF800039338007FE0171F170F1707A21703A21701A318F0EE
7800A41800A216F8A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434
397DB83C>70 D<B612FCA439007FF800B3B3ADB612FCA41E397DB824>73
D<010FB612C0A4D90001EBE000B3B3EA0F80EA3FE0EA7FF0A2EAFFF8A35E5C13F0007F49
5BD83FE091C7FC391F800FFE390FF03FFC6CB512F0000114C026003FFCC8FC2A3A7FB831
>I<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8
FCA431397DB839>76 D<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA2
01796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C
141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA2
923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE
070054397DB85B>I<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8
EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017
FC17E002F8C9FCB3A4B612FCA438397DB841>80 D<B712FCEEFFE017FC17FF28007FF800
0F13C004017F707F717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91
B612FC17E0839139F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901
DD3FFE13E0B600FC011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>
82 D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848
130F48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFF
E014FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC00
7F030F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F8
13039039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<
EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA
0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5B
A415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A
257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013
804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E
133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C0
0390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048
485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E0
6C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F0010113802325
7DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003
EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F
5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>I<
903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1F
E05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C
6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E02525
7DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A24813
81A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D>
I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F
003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE
07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C
15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C
495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<EA
01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4
153B7DBA1B>105 D<13FFB5FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F
804BC7FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E
7F6E7F82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932>107
D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FED97FE0EB0FFC00FF902601
FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749DA
CF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0
A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C0113800007
13780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801
FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81
491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C
6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01FF80B500
0F13F0023F13FC9138FE07FFDAF00113800007496C13C06C0180EB7FE091C713F0EE3FF8
A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF003138091
39FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>I<9038
FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F
00150C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFEF8000F
13FF381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCEC
FF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E157E7E15
7C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>I<130F
A55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F01481
6CEBC3E090383FFFC06D1380903803FE001D357EB425>I<B539F001FFF8A4000390C7EA
3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2EC
FC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5A
A26E5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A
387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432>121 D<003FB612C0A3D9F0031380EB
800749481300003E5C003C495A007C133F5D0078495A14FF5D495B5BC6485B92C7FC495A
131F5C495A017FEB03C0EBFFF014E04813C05AEC80074813005A49EB0F80485A003F141F
4848133F9038F001FFB7FCA322257DA42A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr7 7 43
/Fh 43 123 df<1238127C12FEA3127C123807077B8613>46 D<EC0180140314071500A2
5C140E141E141CA2143C143814781470A214F05CA213015C13035CA2130791C7FC5B130E
A2131E131C133C1338A21378137013F05BA212015B12035BA2120790C8FCA25A120E121E
121CA2123C123812781270A212F05AA2193B7DAB21>I<EB3F803801FFF03803E0F83807
803C48487E001E7F003E1480A2003C1307007C14C0A400FC14E0AE007C14C0A36CEB0F80
A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F801B277EA521>I<13381378EA01F8
121F12FE12E01200B3AB487EB512F8A215267BA521>I<13FF000313E0380E03F0381800
F848137C48137E00787F12FC6CEB1F80A4127CC7FC15005C143E147E147C5C495A495A5C
495A010EC7FC5B5B903870018013E0EA0180390300030012065A001FB5FC5A485BB5FCA2
19267DA521>I<13FF000313E0380F01F8381C007C0030137E003C133E007E133FA4123C
C7123E147E147C5C495AEB07E03801FF8091C7FC380001E06D7E147C80143F801580A212
38127C12FEA21500485B0078133E00705B6C5B381F01F03807FFC0C690C7FC19277DA521
>I<1438A2147814F81301A2130313071306130C131C131813301370136013C012011380
EA03005A120E120C121C5A12305A12E0B612E0A2C7EAF800A7497E90383FFFE0A21B277E
A621>I<0018130C001F137CEBFFF85C5C1480D819FCC7FC0018C8FCA7137F3819FFE038
1F81F0381E0078001C7F0018133EC7FC80A21580A21230127C12FCA3150012F00060133E
127000305B001C5B380F03E03803FFC0C648C7FC19277DA521>I<1230123C003FB512E0
A215C0481480A239700007000060130E140C48131C5C5CC75A5C1301495AA249C7FC5B13
0E131EA3133E133CA2137CA413FCA813781B287DA621>55 D<137F3803FFE0380781F838
0E007C48131E5A801278A3127C007E131EEA3F80EBE03C6C6C5A380FFCF03807FFC06C5B
C613E0487F38079FFC380F07FEEA1E0348C67E48133FEC1F8048130FA21407A315001278
140E6C5B6C5B380F80F03803FFE0C66CC7FC19277DA521>I<137F3801FFC03807C1E038
0F0070001E1378003E7F003C133E007C131EA200FC131FA41580A4007C133FA2123C003E
137F001E135F380F01DF3807FF9F3801FE1FD8001013001300A2143E123C007E133CA25C
5C007C5B383003C0381C0780D80FFFC7FCEA03F819277DA521>I<140EA2141FA34A7EA3
EC6FC0A2ECEFE014C7A290380183F0A390380301F8A201067F1400A249137EA2011C137F
01187FA24980013FB5FCA2903960000FC0A201E080491307A248486D7EA2000381150112
07D81FC0497ED8FFF890383FFFE0A22B2A7EA931>65 D<B612E015FC3907F0003F0003EC
0FC0ED07E01503ED01F016F8A6ED03F016E01507ED1FC0ED7F0090B512FC819039F0003F
80ED07E0ED03F0ED01F8ED00FCA2167EA616FCA2ED01F8ED03F0ED07E00007EC3FC0B712
0015F827287EA72E>I<91387FC002903903FFF80690390FE01E0E90383F0007017CEB01
9ED801F0EB00FE4848147E4848143E5B000F151E48C8FC48150E123EA2007E1506A2127C
00FC1500A8127C007E1506A2123EA2003F150C7E6C7E000715186D14386C6C14306C6C14
60D8007CEB01C0013FEB038090390FE01E00903803FFF89038007FC0272A7DA82F>I<B6
12F015FE3A07F0003F800003EC07C0ED01F06F7E167C82A282EE0F80A3EE07C0A317E0A9
17C0A2160F1780A2EE1F00A2163E5E5E4B5AED07E00007EC3F80B600FEC7FC15F02B287E
A732>I<B712C0A23907F0001F0003EC03E015011500A21660A31630A215C01600A31401
A2140790B5FCA2EBF0071401A21400A492C7FCA9487EB512E0A224287EA72B>70
D<91387FC002903903FFF80690390FE01E0E90383F0007017CEB019ED801F0EB00FE4848
147E4848143E5B000F151E48C8FC48150E123EA2007E1506A2127C00FC92C7FCA792387F
FFE0127C007E02001300167E123EA2123F7E6C7E6C7EA26C7ED801F814FEEA007C013FEB
039E90390FE00F0E903903FFFC029026007FE0C7FC2B2A7DA833>I<B512C0A23807F800
6C5AB3B0487EB512C0A212287EA718>73 D<B512E0A2D807F8C8FC6C5AB3A416C0A31501
1680A31503A21507150FED3F00000714FFB7FCA222287EA729>76
D<D8FFF0EDFFF06D5C0007EEFE0000035E017CEC037CA26D1406A26D140CA36D6C1318A2
6D6C1330A36D6C1360A26D6C13C0A3903900F80180A291387C0300A2EC3E06A36E5AA2EC
0F98A3EC07F0A26E5AEA0780D80FC015FE3CFFFC01C01FFFF0A234287DA73C>I<D8FFF0
903807FFE07FD803FC9038007E006D143C1618137F6D7E6D7EA26D7E6D7E6D7EA26D7E6D
7E147FA2EC3F80EC1FC0EC0FE015F01407EC03F8EC01FCEC00FEA2157FED3F98ED1FD8A2
ED0FF815071503A215011500486C1478487ED8FFFC143816182B287EA731>I<B612E015
FC3907F0003F0003EC0FC0ED03E0ED01F016F8150016FCA616F8150116F0ED03E0ED0FC0
ED3F0090B512FC15E001F0C8FCAF487EB512C0A226287EA72D>80
D<B67E15F03907F000FC0003143FED0F806F7E82150382A55E15075E4B5A033FC7FC15FC
90B512F0A29038F001FCEC007F6F7E151F82150FA71730A3923807E070486C1560B539C0
03F0E0923800FFC0C9EA3F002C297EA730>82 D<90387F80203903FFF06039078078E038
0E000E481307481303007813010070130012F0A21560A27E1500127C127FEA3FE013FF6C
13F06C13FC000313FFC61480010F13C0010013E0EC0FF014031401EC00F8A200C01478A4
6C1470A26C14F06C14E06CEB01C000EFEB078039E3E01F0038C0FFFC38801FF01D2A7DA8
25>I<B590B5EB3FFEA2D80FF8D90FF8EB07F06C486D48EB03E00003EF01C003031580A2
6C6C6EEB0300A36C6CD906FC1306A26D160E017ED90C7E130CA2017F027F131C6D496C13
18A290261F80386D5AED301FA290260FC0706D5AED600FA26D6C486C6C5AA214F0903B03
F18003F180A202F914F3902801FB0001FBC7FCA202FF14FF6D486D5AA2027E5C027C147C
A202381438A33F297FA743>87 D<13FE3807FFC0380F03E0381C00F0003E1378003F137C
143C143E121EC7FCA3EB3FFEEA01FF3807F03EEA1FC0EA3F00127EA2481418A3147E127E
ECDF38393F838FF0390FFE0FE03903F807C01D1C7E9A21>97 D<EB3FC0EBFFF83803E03C
3807C00E380F801F381F003F123EA2007E131E007C1300A212FCA7127C127E1403123E6C
1306EA0F803807C00C3803F0383800FFE0EB3F80181C7E9A1E>99
D<EC03E0143FA214071403AAEB3F833801FFE33803E03B3807800F380F0007481303123E
127E127CA212FCA7127CA2127E123E001E1307001F130F390F801FF03903E073FE3801FF
E339007F03E01F297EA725>I<133F3801FFE03803E1F0380F80F8381F007C143E123E00
7E131E141F127C12FCA2B6FCA200FCC7FCA4127C127E1403123E6C1307380F800E3807C0
1C3803E0783800FFE0EB3F80181C7E9A1E>I<EB07E0EB3FF0EB7C78EBF0FCEA01E01203
EBC078000713301400A8B51280A23807C000B3A2487EEA7FFEA216297FA815>I<EA0F80
12FFA2121F120FAAEB81FCEB8FFF90389C0F809038B007C013E09038C003E0A31380AF39
1FC007F039FFF83FFEA21F287EA725>104 D<120EEA3F80A5EA0E00C7FCA7EA078012FF
A2121F120FB3121FEAFFF8A20D287EA713>I<EA0F8012FFA2121F120FABEC3FF8A2EC1F
C01500143C5C14E0EB81C0EB8380018FC7FCEB9F8013BFEBF7C0EBC3E0EB81F080138014
7C80143FEC1F80EC0FC0D81FC013E039FFF83FFCA21E287EA723>107
D<EA0F8012FFA2121F120FB3AFEA1FC0EAFFF8A20D287EA713>I<260F81FC137F3BFF8F
FF03FFC0903A9C0F8703E03B1FB007CC01F0D80FE013D8903AC003F000F8A301805BAF48
6C486C487E3CFFF83FFE0FFF80A2311A7E9937>I<380F81FC38FF8FFF90389C0F80391F
B007C0EA0FE09038C003E0A31380AF391FC007F039FFF83FFEA21F1A7E9925>I<EB3F80
EBFFE03803E0F83807803C48487E001E7F003E1480A248EB07C0A300FC14E0A7007C14C0
A2007E130F003E1480001E1400001F5B380F803E3803E0F86CB45A38003F801B1C7E9A21
>I<380F81FC38FF8FFF9038BC0FC0391FF007E0390FC003F0EB800115F8EC00FCA2157C
157EA7157C15FCA2EC01F801C013F0EC03E09038F007C09038BC1F8090388FFF00EB83F8
0180C7FCA7487EEAFFF8A21F257E9925>I<380F07C038FF1FF0EB38F8EA1F71EA0F6113
C1EBC0F014005BAF487EEAFFFCA2151A7E991A>114 D<3803F840380FFEC0EA3C07EA78
03EA7001EAF000A37E6C1300EA7FC013FC6CB4FC6C1380000713C0C613E0130738C003F0
130113007EA26C13E0130100F813C038EE078038C7FF00EA81FC141C7E9A1A>I<13C0A4
1201A312031207120F121FB512E0A23807C000AC1430A73803E060A23801F0C03800FF80
EB3F0014257FA31A>I<390F8003E000FF133FA2001F1307000F1303B01407A20007130F
9038C01BF03903E073FE3801FFE339007F83E01F1B7E9925>I<383FFFFEA2383E00FCEA
3801003013F8387003F0EB07E0EA600F14C0EB1F8038003F00137E13FE5B3801F806EA03
F0EA07E0120FEBC00E381F800C383F001C5A007E137CB512FCA217197E981E>122
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmti10 10 36
/Fi 36 121 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<EA01E0EA07F0120F13F8121FA3120FEA07B0EA0030A21370136013E013C012
0113801203EA0700120E5A5A5A5A5A0D196EB919>39 D<150C151C153815F0EC01E0EC03
C0EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2485A
A212035B12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD1278
A57EA3121C121EA2120E7EA26C7E6C7EA212001E5274BD22>I<EA03C0EA07F0120F121F
13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A120E5A5A5A5A5A0D
197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80127F12FFA31300
127E123C0909778819>I<EE01C01603A21607160FA2161F83163FA2167F16FF16EF1501
16CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC07
00A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B13
0E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65
D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B141F
19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A151F
A2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A4A5D
4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B548C8
FCB712F016803C397CB83F>68 D<0103B5D8F80FB512E0A390260007F8C7381FE0004B5D
A2020F153F615DA2021F157F96C7FC5DA2023F5D605DA2027F14016092C7FCA24A140360
5CA249B7FC60A202FCC712070103150F605CA20107151F605CA2010F153F605CA2011F15
7F95C8FC5CA2013F5D5F5CA2017F14015F91C7FC491403007FD9FE01B512F8B55BA24339
7CB83E>72 D<0103B512F8A390390007F8005DA2140FA25DA2141FA25DA2143FA25DA214
7FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA213
3FA25CA2137FA291C8FC497EB6FCA25C25397CB820>I<0107B512FCA25E9026000FF8C7
FC5D5D141FA25DA2143FA25DA2147FA292C8FCA25CA25CA21301A25CA21303A25CA21307
A25CA2130F170C4A141CA2011F153C17384A1478A2013F157017F04A14E01601017F1403
17C091C71207160F49EC1F80163F4914FF000102071300B8FCA25E2E397BB834>76
D<902603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D
1307033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082DAF003
143C70133814E0150101016E1378030014705C8201036E13F0604A1480163F010715C104
1F5B91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F133816
0013785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>78
D<ED03FE92383FFFC09238FC07F0913903E001F891390F80007C023FC77E027E8002F815
804948EC0FC0EB07E04948EC07E0131F4A15F049C81203137E01FE16F8485AA2485AA248
5AA2120F5B001F16075B123FA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F18005F
5F16015F6C4B5A4C5AA24C5A6C4B5A6D4A5A001F93C7FC6D147E000F5D6C6CEB03F06C6C
495A6C6CEB0F806C6C013FC8FC90383F01FC90381FFFE0010190C9FC353D74BA40>I<01
07B612F817FF1880903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25D
A2147FEF03FC92C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A
5AEE0FF091B612C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137F
A291CAFCA25BA25B1201B512FCA337397BB838>I<0103B612F017FEEFFF80903B0007F8
003FC04BEB0FF01707020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC
07F818F092C7120F18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC
9138FC003F0103EC0F80834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2
133F161F4AECE007A2017F160F180E91C7FC49020F131C007F01FE153CB5913807F07804
0313F0CAEAFFE0EF3F80383B7CB83D>82 D<14F8EB07FE90381F871C90383E03FE137CEB
F801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2
140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E39
1F0F079E3907FE03FC3901F000F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE5B
A312015BA312035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0
D81FC013F0A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80
A215005C147E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B
77B926>I<147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803
F003120713E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578
007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677
A426>I<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA2
02F81300EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC0
01121F5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380
143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0
253B77B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A12
0F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55A
A21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FF
E0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313
F8EDF0F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C
147EA414FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3E
A2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC38
E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914
C01201151F1203491480A2153F1207491400A25DA249137EA215FEA25D00031301140314
076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E13
1F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB03
F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E
9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA25D
000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E000
7E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB01C0EB
07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270
A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C013
81A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<150E153F157FA315
7E151C1500ABEC1F80EC7FC0ECF1F0EB01C090380380F813071401130F130E131EEB1C03
133C013813F0A2EB0007A215E0A2140FA215C0A2141FA21580A2143FA21500A25CA2147E
A214FEA25CA21301A25CA213035C121C387E07E0A238FE0FC05C49C7FCEAF83EEA787CEA
3FF0EA0FC0204883B619>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA2
13FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FC
A25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B
79B915>108 D<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03
E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C00280
5B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E49
5C18FE031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B157000
0F17E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E26
79A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383F
F00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F0001
5D5B151F5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E
161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1
F090381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90
C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F8000
3EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C09039
1FE03FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05C
EA01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80
035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA2
1201A25BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C
0F381C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0
FE5BA2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A4
23>114 D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F0000113
0313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C0130014
3F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD8
01FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5
FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F13
38EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>
I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270
013F131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349
EBFC0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F8
3C78E090393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F
80EA0E1F121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E
12015B151E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC000113
0E3800F83CEB7FF8EB0FC0212679A426>I<903907E007C090391FF81FF89039787C383C
9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC481480000E1570023F130000
1E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E
1401010714C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C393FF03FF039
07C00FC027267CA427>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi6 6 1
/Fj 1 64 df<1308A4131CA500C0EB0180397FBEFF00381FFFFC000713F0000113C06C6C
C7FCA2497E13F73801E3C013C1380380E0EB006000067F00041310487F19197D9820>63
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 12 39
/Fk 39 121 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713
FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16
C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC
15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0
EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80F
FEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E
5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8
EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A
12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FF
EB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C7
14C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8
FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C012
3E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01
FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090
390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE
7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9
F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127F
A5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038
E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC
90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D1501
4B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2
147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5
FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F4848
15C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C90
38FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F
14802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F81500
00FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6C
EC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013
F02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F
80161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F020781
5D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0
C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020F
B612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FED
FE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E494881494881
4948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994
C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F
806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D90
3AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451
>67 D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F72
7F727F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162
193F624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F0
95C9FC4B447CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E
193EA3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600
A2F101E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F006160180718
1F4DB5FCBBFC61A443447DC34A>I<BA1280A419C026003FFEC7121F1701EF007F183F18
1F180F180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA591
38FE007F160F16071603A31601A693C9FCAFB712F0A53C447CC346>I<B712E0A5D8001F
90C7FCB3B3B3A4B712E0A523447DC32A>73 D<B712F0A526003FFECAFCB3B1F00780A418
0F1900A460A360A2187EA218FE170117031707171F177FEE03FFB95AA539447CC343>76
D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF0107
0180010313C04990C76C7FD91FFC6E6C7E49486F7E49486F7E01FF8348496F7E48496F13
80A248496F13C0A24890C96C13E0A24819F04982003F19F8A3007F19FC49177FA400FF19
FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E
5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B0101
01FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC030713C047467AC454>79
D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA286
84A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E0
18F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141E
B700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<B600FE017FB691B512FEA526
007FFCC8D83FFEC9EA7C006E82013F701778807415F86D705F6F7014016D705FA26F7014
036D64814E6D14076D646F70140F6D041E94C7FCA26F023E6D5C6DDC3C7F151E81027F03
7C6D5CF0783F6F70147C023F4B6C1578A26F01016F13F86E4B6C5D16806E02036F485A4E
7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F06E4A6F48C8FC051E7F04F870
5A6E4A027F131EA2DCFC7CEDFE3E037F0178023F133C04FE16FF033F01F85E4D8004FF17
F86F496E5BA36F496E5BA26F604D80A26F90C86C5BA36F486F90C9FCA26F48167EA30478
163C6F457EC374>87 D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB
1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC130701
3F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C
5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9
FC322F7DAD36>97 D<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF
0003495A48494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C
7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007F
FC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32>99
D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF807
FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC12
7FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF
6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E01
0F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001FED
7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17
F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE01
1FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F0
49B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0
ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E01
0F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC484890
3907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C49
5A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F7F
90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC014074848
020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07
FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520>105 D<EB7FC0B5FCA512037EB293387FFFE0A59338
0FE0004C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7EC
DFFF91B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E
163FB60003B512F8A535457DC43B>107 D<EB7FC0B5FCA512037EB3B3B3A3B61280A519
457CC420>I<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E00281
6E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C01
9E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA557
2D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F80
1F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC
3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848
C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F17
00A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F
90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590
B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15
C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E
4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FC
ADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1F
FE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A527
2D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48
C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC
6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA2
6C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FE
C7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90
B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391F
FC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA5
0003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C701
0F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E0903800
3E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D
92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E
5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A5
00019027C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403
013F6F5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E
15806D902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E
9039000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B
143C4C2C7EAB51>I<B500FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D6C
49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D
6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F4948
7E02C08049486C7F49C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx9 9 20
/Fl 20 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>46
D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317AB02C>49
D<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380D8FFC014
C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3FC04A5A
02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B4848130748B6FC
5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F01FF83907C0
0FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C485AD803805BC7FC4A5A4A
5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13C0A2000F
15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF01FFE6CB5
12F8000314E0C61480D91FFCC7FC23327CB02C>I<151F5D5DA25D5C5C5C5CA25C143D14
7D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C137813F01201EA03E0EA07C013
80EA0F00121E123E5A5AB712FEA4C700031300A80103B512FEA427317EB02C>I<000C14
0ED80FE013FE90B5FC5D5D5D5D5D92C7FC14FC14F091C8FC1380A6EB87FE9038BFFFC090
B512F09038FC0FF89038E003FE01C07F497E01001480000E6D13C0C8FCA216E0A3121FEA
7F807F487EA316C05B5CD87F801480D87C0014006C5B393F8007FE391FE01FFC0007B512
F06C14C0C691C7FCEB1FF823327CB02C>I<EC7FC0903803FFF0010F13FC90383FE07E90
387F801F4848485A4848EBFF8048485A13F8120FEA1FF0A2123F6E13004848133C92C7FC
A2142039FFE1FF8001E713E001EF13F89038FE03FC496C7E01F87F6E13805B16C0A24914
E0A5127FA5123F16C0121F6D1480000F5B01F814006C6C485A6C6C485A6CB55A6C6C5B01
1F13C0D907FEC7FC23327CB02C>I<123C123F90B612F8A44815F016E016C0168016005D
007CC7127E00785C4A5A00F8495A48495A4A5A4A5AC7FC4AC7FC147E14FE5C13015C1303
A2495AA2130FA2131FA25C133FA4137FA96D5AA2010FC8FC25337BB12C>I<EB07FE9038
3FFFC090B512F03903F807FC3907C000FE4848137F8148C71380151F5A7FA27F7F01F813
3F01FE14006D6C5A6CEBE0FEECF1FC6CEBFFF815E06C5C6C14F06C806C6C7F48B57E4880
D80FF31480D81FE014C0383FC03FEB800F48486C13E0140148EB007F48143F151FA2150F
A216C07E6C141F6D14806C6C133F6DEB7F00391FF803FE0007B512F86C5CC66C13C0D90F
FCC7FC23327CB02C>I<EB07FC90383FFF8090B512E03903FE0FF03907F807F848486C7E
001F6D7E003F80497E007F1580A212FF16C0A416E0A55C127FA2123F5CEA1FF0000F5B6C
6C5A3803FFFEC65BD93FF013C0EB00805CA2EA0780261FE0011380EA3FF01600A24A5AA2
4A5A49485A391F801FF09038C07FE06CB512806C91C7FC000113FC38003FC023327CB02C
>I<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F801503
023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA249B67E
A24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157FB500F0
013FB512F0A43C347DB343>65 D<B812FCA4C69038E0001FEE03FE16011600177E173EA2
171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A21503A592
C8FCABB612F8A430337DB238>70 D<EB7FFE0003B512E04814F8390FF00FFC391FF803FF
806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300
EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC
0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB5
12E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0A917C0
A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13809026
800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0F
F8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C13
0F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<
16F890390FFC07FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FED9E001133E00
3FECFF1C1600A6001F5CEBF003000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9
FCA37F7F90B512F015FE6CECFF8016E06C15F06C15F84815FC121F393F80001F48C7EA03
FE481401481400A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B612
80C6ECFE00010F13E028327EA12C>103 D<EA03F0487E487E487EA66C5A6C5A6C5AC8FC
A8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>105 D<3901F81F8000FFEB7FF0
ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1
B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A1403
7EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F14
0F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE0
1C217DA023>I<133CA5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FC
B0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmtt9 9 19
/Fm 19 123 df<120FEA3FC013E0EA7FF0A213F8A2123FA2120F120113F01203EA07E012
1FEA7FC0EAFF8013005A12700D14738927>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
000A0A728927>46 D<EB01FE903807FF80011F13C0017F13E090B512F048EB03F83803FC
013907F000FC390FE01F7C9038C07FFE381F80FF1301485A393E07F1FF007E13E0397C0F
C07FEC803FA2EAFC1F00F8EB001FA800FCEB803FD87C0F133EA2ECC07E397E07E0FC003E
13F1393F03FFF86C6C13F0018013E0390FC07FC09038E01F1E3907F0003FD803FC137F39
01FF03FF6CEBFFFE6D13FC011F13F0010713C001011300202E7DAD27>64
D<3803FFC0000F13F04813FC4813FF811380EC1FC0381F000F000480C71207A2EB0FFF13
7F0003B5FC120F5A383FFC07EA7FC0130012FE5AA46C130F007F131FEBC0FF6CB612806C
15C07E000313F1C69038807F8022207C9F27>97 D<EB0FFF017F13C048B512E04814F05A
380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5AA67E127EA2007F14F039
3F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C1300EB0FF81D207B9F27
>99 D<EC3FF04A7EA3143F1401A9EB0FE1EB7FFD48B5FC5A5A380FF83F381FE00F383FC0
07EB8003EA7F00007E1301A212FE5AA67E007E1303A2127F6C1307EB800F381FE01F380F
F03F6CB612C06C15E06C13FD38007FF9D91FE013C0232E7EAD27>I<EB0FF8EB3FFE90B5
1280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC48C7FC127E157E12FE
B612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE390FFC07FC6CB5FC00
0114F86C14F0013F13C0903807FE001F207D9F27>I<EA7FE0487EA3127F1203A9147F90
38F1FFC001F713F090B5FC8114C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0
A36C018313E0242E7FAD27>104 D<130F497E497EA46D5A6DC7FC90C8FCA7383FFF8048
7FA37EEA000FB3A4007FB512F0B6FC15F815F07E1D2F7BAE27>I<EA7FE07F12FF127FA2
1201A991383FFFC04A13E0A36E13C0913803F8004A5A4A5A4A5A4A5A02FFC7FCEBF1FEEB
F3FCEBF7F8EBFFFC8080143F496C7E496C7E01F87FEBF0076E7E6E7E816E7E157E3A7FFF
C1FFF002C313F8B512E36C13C316F0252E80AD27>107 D<387FFF80B57EA37EEA000FB3
B2007FB512F8B612FCA36C14F81E2E7CAD27>I<397F07C01F3AFF9FF07FC09039FFF9FF
E091B57E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF48
6C01E3138001F913E701F813E36C4801C313002920819F27>I<387FE07F39FFF1FFC001
F713F090B5FC6C80000313C1EC01FCEBFE005B5BA25BB03A7FFF83FFE0B500C713F0A36C
018313E024207F9F27>I<387FE0FFD8FFF313C090B512F0816C800003EB81FE49C67E49
EB3F8049131F16C049130FA216E01507A6150F16C07F151F6DEB3F80157F6DEBFF009038
FF83FEECFFFC5D5D01F313C0D9F0FEC7FC91C8FCAC387FFF80B57EA36C5B23317F9F27>
112 D<397FFC03FC39FFFE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F
809138E002004AC7FC5CA291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>114
D<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC
383FFFF06C13FC000713FF00011480D8000F13C09038003FE014070078EB03F000FC1301
A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C207B9F27>I<133C
137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF8
6D13F06D13E0010313C0010013001F297EA827>I<397FE01FF8486C487EA3007F131F00
031300B21401A21403EBFC0F6CB612E016F07EEB3FFE90390FF87FE024207F9F27>I<00
1FB512FE4814FFA490380001FEEC03FCEC07F8EC0FF0001EEB1FE0C7EA3FC0EC7F80ECFF
00495A495A495AEB1FE0495A495A49C7FC485A4848131E4848133F485A485A485A485AB7
FCA46C14FE20207E9F27>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmsy9 9 2
/Fn 2 104 df<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91C7FC137E5B
EA03F8EA7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E6D7EEB00FE
EC3FE014071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3A580
130F6D7E6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A495A131F5CB3
A5133F91C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr9 9 77
/Fo 77 124 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC0077E
003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187EB9
12FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440>
I<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D80F600011306A40003130EEB00
0CA248131C00061318000E1338000C1330001C13704813E0387001C00060138017177EB3
26>34 D<147CEB01FEEB07C790380F8380EB1F0181EB3E00A2137EA2137C137EA214015D
140392C9FC5C140E6D5A1418143802F090380FFFF05C6D5A04011300EE00FC6D6C147001
1F1560013F15E0D977F0495AD9E3F85CD801C31403260381FC91C7FC00075D48C66C130E
486D130C486D131C003E6D6C5A007EECC03091381FE07000FE010F5B6F5AEC07F96EB45A
6C6D90C712306E5A157F6C6C6D6C13604B6C13E03A3FC001EFE03C1FE003C7F803C03C0F
F01F83FE0F802707FFFE00B51200000101F8EB3FFE26003FC0EB07F034387DB53C>38
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177AB315>I<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90
C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203
A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>I<12C07E1270123C
121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB07
C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC12
0E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2127F123D1201A412031300
A25A1206120E120C121C5A5A126009177A8715>44 D<B512F0A514057F921A>I<123C12
7E12FFA4127E123C08087A8715>I<1530157815F8A215F01401A215E01403A215C01407
A21580140FA215005CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A249
5AA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120F
A290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601D4B7CB726>I<EB0FE0EB7F
FCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E130000
7E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903
E00F803900F83E00EB7FFCEB0FE01F347DB126>I<13075B5B137FEA07FFB5FC13BFEAF8
3F1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF39
1E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E130712
3CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E
133C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB1
26>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F0180
13F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7F
E014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC481303
12780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F
347DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F13
07130E130C131C13381330137013E013C0EA0180120313001206120E120C5A123812305A
12E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90
B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F903800
1F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F800
6014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D
347CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03
E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F80
9038E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FC
A26C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3F
FCEB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C712380060143015
7015E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA2
130FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F80
3907C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D
13F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE80
01F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC
007E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001
B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F8039
0FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301
A2127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7
FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00001C137E38
1F01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B0
123C127E12FFA4127E123C08207A9F15>I<007FB812C0B912E0A26C17C0CCFCAC007FB8
12C0B912E0A26C17C033147C9C3C>61 D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC
187FA34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA301066D
7EA2010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA2000182160748
7ED81FF04A7ED8FFFE49B512E0A333367DB53A>65 D<B7FC16E016F83A03FC0003FE0001
EC00FFEE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90
B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F816
07A2EE0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<DA03FE
130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F8013
0701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F160CA390
C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E012
016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F13
C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE070
7E707E707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880
173F18005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B
>I<B812C0A3D803FCC7127F0001150FEE03E01601A21600A21760A403061330A4170015
0EA2151E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A217
70A217F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803FCC7FC0001
151FEE07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00
153C151CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393FFF801C
91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712034848
1401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7FCAA03
03B512E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C
1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8
FC33377CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA349C712
03B3A3486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3B3A748
7EB512FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC3F805A
0060140000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<B500FE90
3807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B
5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E
4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF80B500
FE013F13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45E
A25E5E5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA20003EFFE
00D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814
C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E
6C5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB2
46>I<D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FC
A2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0
A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A2160316
01A2486C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC09039
01FC07F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA2
48486E7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C
17C06D153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C
6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07
FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1F
C017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FC
B3A2487EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED00
7F707E707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE
001FC0ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FE
EB1FE0040F1338933807F070C93801FFE09338003F8036357EB239>82
D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A20078
8000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C68001
3F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F
80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC
22377CB42B>I<007FB712FEA390398007F001D87C00EC003E0078161E0070160EA20060
160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE9038
1FFFF8A3000190C813006C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E
495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190
C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D15
1C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA2
6D6C1306A28001015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E102
0F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B5
39800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D
020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95
C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C010117
18A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8
EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B
141C020115184C357FB24F>I<267FFFFC90B512C0A3000101E090381FF80026007F80EB
0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C133801035C6E13606D6C13E06D6C
485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7EA26E7E815C6F7E9138063FC0
140E4A6C7E9138180FF0EC380702707F91386003FCECC0010101804A6C7E49C77E498101
0E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFEB56C90B512F8A335337EB23A
>I<003FB612FCA39039F80007F813C090C7EA0FF0003EEC1FE0123C0038EC3FC00078EC
7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7FCA2495A495A
A2495A495AA24948130C495AA2495A49C7FCA24848141CA2485A485A1638485A48481478
16F84848130148481307153FB7FCA326337CB22F>90 D<0003130C48131C000E13384813
7000181360003813E0003013C0EA700100601380A2EAE00300C01300A400DE137800FF13
FCEB83FEA2EA7F81A2383F00FC001E1378171774B326>92 D<EB7F803803FFF0380F80FC
381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0F
F0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF
2607FFC013003900FE003C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE0
9038F3C0F89038F7007E01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F015
0716E0A2ED0FC07F6DEB1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25
357EB32B>I<EB07F8EB3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80
123F90380003E04890C7FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C
6C13E03903F001C03900FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC00
7F81AEEB07F0EB3FFCEBFC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E
12FEAA127E127FA27E6C6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD9
0FE0130026357DB32B>I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E038
1F800315F0EA3F0014014814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C
6C1338000F14306D13706C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>
I<EB01FCEB07FF90381F078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB5
12F0A3D803F0C7FCB3A7487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8
E3C03901F07FC73907E03F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB
800F000F5CEBC01F6C6C48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380F
FFFEECFFC06C14F06C14FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C
15006C143E6C5C390FC001F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F0
12FFA312071203AEEC1FC0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA2
5BB3486CEB7F80B538C7FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780
C7FCAAEA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<EB03C0EB07E0EB0F
F0A4EB07E0EB03C090C7FCAAEB03F013FFA313071303B3B01238127C00FE13E0130714C0
130F007C138038381F00EA1FFCEA07F0144384B217>I<EA03F012FFA312071203AF9138
03FFE0A36E1300EC00F8EC01E05D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC
7EEBF87F496C7E141F6E7E8114076E7E8114016E7E81486CEBFF80B500C313F0A324347E
B329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF
00FF90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE14
70496D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<39
03F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486C
EB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001
E000078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C
147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F02123
7EA126>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914
C049130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF
13FC9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<9038
07F00390383FFC07EBFC0F3901F8038F3807E001000F14DF48486CB4FC497F123F90C77E
5AA25A5AA9127FA36C6C5B121F6D5B000F5B3907E003BF3903F0073F3800F81EEB3FF8EB
0FE090C7FCAAED7F8091380FFFFCA326307DA029>I<3803E07C38FFE1FF9038E38F8090
38E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>I<EB
FF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7FFC38
3FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C5B6C
130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201A212
031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1FF8EB
07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D12016D48
13800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3D80F
F0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360137F
6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA214602421
7E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C816C6C
017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA216C0
903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C5AA3
6D481378A36D48133034217F9F37>I<B53801FFF8A32603FE0013806C48EB7C00000014
78017E1370017F5B90383F81C090381F8380D90FC3C7FCEB07E614FE6D5A6D5A6D7E8080
5B9038039F809038071FC09038060FE0EB0C0790381C03F0496C7E01707FEBF000000180
000FECFF8026FFFC0313FCA326207F9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F
800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5B
A2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA249
5A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>I<003FB512
F0A2EB000F003C14E00038EB1FC00030EB3F800070137F1500006013FE495A13035CC648
5A495AA2495A495A49C7FC153013FE485A12035B48481370485A001F14604913E0485A38
7F000348130F90B5FCA21C207E9F22>I<B712F8A22502809426>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr10 10 78
/Fp 78 124 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<DA0FF8EB1FF8DA7FFF9038FFFEE0903B01F80783F007903B
07E001CFC00F903B1F8007FF001F4948485A017E5CA2495C180F48486D4813071503ACBA
FCA33C01F80003F00007B3AB486C496C497E267FFFE0B500C1B51280A3413B7FBA45>I<
001C131C007F137F39FF80FF80A26D13C0A3007F137F001C131C00001300A40001130101
801380A20003130301001300485B00061306000E130E485B485B485B006013601A197DB9
2A>34 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E
5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485A
A2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA2
7F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20
>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F
7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378
A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB8
12F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0
A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B512
FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<150C151E153EA215
3C157CA2157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2141E14
3EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133E
A2133C137CA2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123E
A2123C127CA2127812F8A25A12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803
E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0
B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C
485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA2
131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0
390F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121C
C8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91
C8FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A485CB6FCA321
387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E0001000F80
381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF80
9038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C049
137F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF00001B512C06C
6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114031407A2140F141F141B14
331473146314C313011483EB030313071306130C131C131813301370136013C01201EA03
8013005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B512F8A32539
7EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090
C9FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7EC87EA28181
A21680A4123E127F487EA490C71300485C12E000605C12700030495A00385C6C1303001E
495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801
FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485AA2485A000F
EC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E0903838
01F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A212
1FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB
03FC233A7DB72A>I<12301238123E003FB612E0A316C05A168016000070C71206006014
0E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA2
1303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1F
FF017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E141F001E80
A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC
6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C1380481303003E
6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C01278150300
7C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC23
3A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E4913
7E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C
6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F1680
A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC38
07FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C
127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C
127F5A1380A4127F121D1201A412031300A25A1206A2120E5A121812385A1260093479A3
17>I<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7F
EC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA2
0106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C
81D80FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF000190398000
7FC06C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091
B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7188017FF
A24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF
800180020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01
DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A170312
3F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17
066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F809027
01FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F816FE0001
90398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F
18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C
5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA3000190388000
0F6C90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F
91B5FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A217
0F173F177F486D903807FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C7
1201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5
FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0
020FEBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB00EF494814
7F4948143F49C8121F485A4848150F48481507A248481503A2485A1701123F5B007F1600
A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C
7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FFC03F019139
3FFFFC00020F01F0130002001380383D7CBA41>I<B648B512FEA3000190268000031300
6C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612
C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<013FB512E0A39039001FFC00
EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A6C49C7FC
380781FC3801FFF038007F80233B7DB82B>I<B649B5FCA3000101809038007FF06C90C8
EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D
153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA2
6F7F707EA2707E707EA2707EA2707E707EA2707E707F8484486D497FB6011FEBFF80A339
397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A2
16011603160FEE1FE0486D13FFB8FCA32D397DB834>I<B5933807FFF86E5DA20001F0FC
002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0
FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A391
3901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED8
0FFC6D48497EB500C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080C69238
007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E
7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FE
A2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C
153E487ED80FFC151EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC
903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E4915
7E0003167F4848ED3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507
A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D15
7F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F801
7FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE000190
398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FC
A2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397D
B839>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707E
A283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED
00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A0401
1306933800FE0ECAEA3FFCEF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B51281
3903F807E33907E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312
FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC6
80013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A215
01A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE
39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E
0001FE130348EE01F00078160000701770A300601730A400E01738481718A4C71600B3B0
913807FF80011FB612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90
C8EA1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D
6C495A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB8
3E>I<B500FC91387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E140301
7F93C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA26E147001031560A2
6D6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F13
18A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7E
B83E>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E0
00010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A
6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C
6F485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3F
C3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E
4B140FA202015E4B1407A2020093C8FC4B80503B7EB855>I<EAFFF8A4EAF000B3B3B3B3
A3EAFFF8A40D5378BD17>91 D<3901800180000313033907000700000E130E485B001813
1800381338003013300070137000601360A200E013E0485BA400CE13CE39FF80FF806D13
C0A3007F137FA2393F803F80390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3
EAFFF8A40D537FBD17>I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13
E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F48
5A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A
03FFF00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF8
9038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216
FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7
801F00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03
E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500
A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C
13E039007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB
03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90
C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01
F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0F
C03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E
12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD8
01F013386C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E903803FF
8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8
C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F8
1F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200
075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015
F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C
1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0
010790C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C0
1F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7E
B92E>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB5
12C0A312387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA3
13071301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8
154984B719>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D
4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E
7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03
F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93F
FCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE
14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257E
A445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE49
6D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF809038
3E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A200
7EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C
6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903
F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F049
14F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001
F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA4
2E>I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007147748481337
49133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F
6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA32835
7DA42C>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC
03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F
80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C
7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F
00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F81201
12031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB
0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A415
0FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E0
0029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D1480000115
00A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2
903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03F
FEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A3
6C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F83143015
0102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA20101
92C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF0
0001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6D
B4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E01
1C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B5
38803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA213
7F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5A
A2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C
6C5AEA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038
EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495A
A290387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48
EB03FC90B5FCA21F247EA325>I<B81280A2290280962A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmmib10 10 1
/Fq 1 64 df<14035CA34A7EA54A7EA60070496C1370D8FFF0EC7FF890B7FC003F16E06C
16C000071600000115FC6C6C14F0011F14C0010791C7FC010113FCA2497FA3497F14FDD9
0FF87FECF07F49486C7EECC01F49486C7EEC0007017E6D7E017C130101F0EB0078491438
014014102D2B7FA930>63 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 14.4 20
/Fr 20 118 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5AC8FCB3
EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425>58
D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F80167E8304
FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293
C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87EA24A83A3DA3F
80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A82010F
855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65 D<B812C0A5D8000701F8C7
FCB3B3B3B2B812C0A52A527CD132>73 D<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC
1AF8A51901A31903A219071AF0190FA2191F193F197F19FF180360183F4DB5FCBB12E0A5
46527CD151>76 D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026
FFFC006D5A4801E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F49
81007F82A28412FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC
6CEDFFC017F06C16FC6C16FF6C17C06C836C836D826D82010F821303010082021F168014
00030F15C0ED007F040714E01600173F050F13F08383A200788200F882A3187FA27EA219
E07EA26CEFFFC0A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF090
3B1FFFC003FFE0486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C
5479D24B>83 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C
6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6
FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5B
A2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C90
26F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>
97 D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD9
7FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8
FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F00
6C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC0201
13E033387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007F
F849486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A24881
5B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC
07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF801
0390B55A010015C0021F49C7FC020113F034387CB63D>101 D<ED3FFC0203B5FC020F14
C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FFFC495A495AA2495AA2EE
7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3A7007FB512FEA52E547C
D329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013FECFF7F90267FFC0F9038
FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7D83FF813E0489338FC0F
C0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D
485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9FC91CBFCA2120FA37FA2
13F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC12074848C700031480D8
1FF8EC003F4848150748486F13C083485A83A56D5D007F18806D5D003F18006C6C4B5AD8
0FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB71280010F03FCC7FC0101
15E0D9000F01FCC8FC3C4F7CB543>I<137F497E000313E0487FA2487FA76C5BA26C5BC6
13806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>105
D<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108 D<D93FF0D91FFCEDFFE0
B591B500C0010713FE030302F0011F6D7E030F6E017F8092271FE07FFCD9FF037F922A3F
001FFE01F8007F0003027C9126FF03E080C602F06DD90780137FDAF1E0038FC77FDAF3C0
159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB5
12FEA567367BB570>I<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC9239
3F001FFE0003027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3AC
B6D8F807B612C0A542367BB54B>I<913801FFE0021F13FE91B612C0010315F0010F9038
807FFC903A1FFC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C8
6C7EA24883A248486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA2
6C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF80
7FFC6D90B55A010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0B5010F
13FE033FEBFFC092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F
92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2615F61
6E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F14
80031F01FCC8FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FEB590380F
FF80033F13E04B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF
150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114
D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980
127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C
816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00
F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FF
C00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414
FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE
07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B0203
13802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35F
A2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B512
03010114FE6D6C13F8020701E091C7FC42377BB54B>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 523 598 a Fr(StreamIt:)46 b(A)f(Language)h(for)f(Streaming)h
(Applications)3510 554 y Fq(?)848 888 y Fp(William)28
b(Thies,)g(Mic)n(hal)f(Karczmarek,)e(and)i(Saman)g(Amarasinghe)1401
1062 y Fo(Lab)r(oratory)f(for)h(Computer)e(Science)1323
1153 y(Massac)n(h)n(usetts)i(Institute)e(of)h(T)-6 b(ec)n(hnology)1585
1244 y(Cam)n(bridge,)26 b(MA)g(02139)1266 1402 y Fn(f)p
Fm(thies,)41 b(karczma,)g(saman)p Fn(g)p Fm(@lcs.mit.edu)759
1554 y Fl(Abstract.)i Fo(W)-6 b(e)22 b(c)n(haracterize)j(high-p)r
(erformance)d(streaming)i(applications)g(as)759 1645
y(a)d(new)g(and)f(distinct)h(domain)e(of)j(programs)e(that)h(is)g(b)r
(ecoming)f(increasingly)i(im-)759 1736 y(p)r(ortan)n(t.)e(The)f
(StreamIt)f(language)j(pro)n(vides)e(no)n(v)n(el)h(high-lev)n(el)f
(represen)n(tations)759 1828 y(to)j(impro)n(v)n(e)f(programmer)f(pro)r
(ductivit)n(y)h(and)g(program)h(robustness)g(within)g(the)759
1919 y(streaming)i(domain.)f(A)n(t)g(the)g(same)h(time,)f(the)g
(StreamIt)g(compiler)g(aims)h(to)g(im-)759 2010 y(pro)n(v)n(e)19
b(the)g(p)r(erformance)g(of)i(streaming)e(applications)i(via)e
(stream-sp)r(eci\014c)g(anal-)759 2101 y(yses)27 b(and)f
(optimizations.)h(In)f(this)g(pap)r(er,)h(w)n(e)f(motiv)l(ate,)g
(describ)r(e)h(and)f(justify)759 2193 y(the)g(language)i(features)f(of)
g(StreamIt,)e(whic)n(h)h(include:)h(a)f(structured)g(mo)r(del)g(of)759
2284 y(streams,)k(a)h(messaging)f(system)f(for)i(con)n(trol,)g(a)f
(re-initialization)i(mec)n(hanism,)759 2375 y(and)26
b(a)g(natural)g(textual)f(syn)n(tax.)523 2663 y Fk(1)112
b(In)m(tro)s(duction)523 2869 y Fp(Applications)21 b(that)g(are)g
(structured)f(around)h(some)f(notion)h(of)g(a)g(\\stream")e(are)h(b)r
(ecoming)523 2968 y(increasingly)k(imp)r(ortan)n(t)h(and)h(widespread.)
f(There)g(is)g(evidence)h(that)g(streaming)e(media)523
3068 y(applications)35 b(are)g(already)f(consuming)i(most)f(of)h(the)h
(cycles)e(on)h(consumer)f(mac)n(hines)523 3168 y([1],)30
b(and)h(their)f(use)g(is)h(con)n(tin)n(uing)e(to)i(gro)n(w.)d(In)j(the)
g(em)n(b)r(edded)g(domain,)f(applications)523 3267 y(for)f(hand-held)g
(computers,)g(cell)g(phones,)g(and)g(DSP's)g(are)g(cen)n(tered)g
(around)f(a)h(stream)523 3367 y(of)40 b(v)n(oice)g(or)f(video)h(data.)g
(The)g(stream)g(abstraction)f(is)h(also)g(fundamen)n(tal)g(to)g(high-)
523 3466 y(p)r(erformance)c(applications)h(suc)n(h)g(as)f(in)n
(telligen)n(t)i(soft)n(w)n(are)d(routers,)h(cell)h(phone)h(base)523
3566 y(stations,)27 b(and)g(HDTV)i(editing)f(consoles.)648
3667 y(Despite)j(the)h(prev)-5 b(alence)30 b(of)h(these)h
(applications,)e(there)h(is)g(surprisingly)f(little)i(lan-)523
3767 y(guage)g(and)h(compiler)f(supp)r(ort)h(for)f(practical,)g
(large-scale)f(stream)h(programming.)f(Of)523 3866 y(course,)g(the)h
(notion)f(of)h(a)g(stream)f(as)g(a)g(programming)f(abstraction)g(has)i
(b)r(een)g(around)523 3966 y(for)j(decades)g([2],)h(and)g(a)f(n)n(um)n
(b)r(er)h(of)f(sp)r(ecial-purp)r(ose)g(stream)g(languages)f(ha)n(v)n(e)
h(b)r(een)523 4066 y(designed)26 b(\(see)g([3])g(for)g(a)f(review\).)h
(Man)n(y)g(of)g(these)g(languages)f(and)h(represen)n(tations)e(are)523
4165 y(elegan)n(t)i(and)h(theoretically)g(sound,)g(but)g(they)h(often)f
(lac)n(k)f(features)h(and)g(are)f(to)r(o)h(in\015ex-)523
4265 y(ible)j(to)g(supp)r(ort)g(straigh)n(tforw)n(ard)d(dev)n(elopmen)n
(t)i(of)h(mo)r(dern)g(stream)f(applications,)g(or)523
4364 y(their)g(implemen)n(tations)g(are)e(to)r(o)i(ine\016cien)n(t)g
(to)g(use)g(in)g(practice.)f(Consequen)n(tly)-7 b(,)28
b(most)523 4464 y(programmers)19 b(turn)j(to)g(general-purp)r(ose)e
(languages)g(suc)n(h)h(as)h(C)f(or)h(C++)f(to)g(implemen)n(t)523
4564 y(stream)27 b(programs.)648 4665 y(There)39 b(are)g(t)n(w)n(o)h
(reasons)e(that)j(general-purp)r(ose)c(languages)i(are)g(inadequate)h
(for)523 4764 y(stream)30 b(programming.)e(Firstly)-7
b(,)30 b(they)h(are)e(a)h(mismatc)n(h)g(for)g(the)h(application)e
(domain.)p 523 4839 473 4 v 544 4893 a Fj(?)606 4924
y Fo(F)-6 b(or)26 b(more)f(information)h(ab)r(out)g(StreamIt,)f(see)h
(h)n(ttp://compiler.lcs.mit.edu/streamit.)p eop
%%Page: 2 2
2 1 bop 523 232 a Fo(2)237 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)-6
b(erlag)523 448 y Fp(That)35 b(is,)h(they)f(do)g(not)h(pro)n(vide)e(a)h
(natural)f(or)h(in)n(tuitiv)n(e)g(represen)n(tation)f(of)h(streams,)523
548 y(thereb)n(y)40 b(ha)n(ving)f(a)i(negativ)n(e)e(e\013ect)i(on)f
(readabilit)n(y)-7 b(,)40 b(robustness,)f(and)h(programmer)523
648 y(pro)r(ductivit)n(y)-7 b(.)24 b(Moreo)n(v)n(er,)d(b)r(ecause)j
(the)g(widespread)f(parallelism)g(and)g(regular)g(comm)n(u-)523
747 y(nication)j(patterns)g(of)h(data)f(streams)f(are)h(left)h
(implicit)g(in)g(general-purp)r(ose)d(languages,)523
847 y(compilers)d(are)f(not)i(stream-conscious)d(and)j(do)f(not)h(p)r
(erform)f(stream-sp)r(eci\014c)g(optimiza-)523 946 y(tions.)k(As)g(a)f
(result,)h(p)r(erformance-critical)e(lo)r(ops)h(are)g(often)h(hand-co)r
(ded)g(in)g(a)g(lo)n(w-lev)n(el)523 1046 y(assem)n(bly)38
b(language)f(and)i(m)n(ust)g(b)r(e)h(re-implemen)n(ted)e(for)h(eac)n(h)
f(target)g(arc)n(hitecture.)523 1146 y(This)28 b(practice)e(is)i(lab)r
(or-in)n(tensiv)n(e,)e(error-prone,)e(and)k(v)n(ery)e(costly)-7
b(.)648 1247 y(Secondly)g(,)31 b(general-purp)r(ose)f(languages)g(are)h
(a)h(mismatc)n(h)f(for)h(the)g(emerging)f(class)523 1347
y(of)h(grid-based)e(arc)n(hitectures)g([4{6])h(that)h(are)e(esp)r
(ecially)i(w)n(ell-suited)f(for)g(stream)g(pro-)523 1446
y(cessing.)22 b(P)n(erhaps)g(the)h(primary)f(app)r(eal)h(of)g(C)g(is)g
(that)g(it)h(pro)n(vides)e(a)g(\\common)g(mac)n(hine)523
1546 y(language")d(for)h(v)n(on-Neumann)g(arc)n(hitectures.)f(That)i
(is,)f(it)i(abstracts)d(a)n(w)n(a)n(y)g(the)i(idiosyn-)523
1646 y(cratic)26 b(di\013erences)h(b)r(et)n(w)n(een)g(mac)n(hines,)g
(but)g(encapsulates)f(their)h(common)g(prop)r(erties:)523
1745 y(a)20 b(single)h(program)e(coun)n(ter,)h(arithmetic)g(op)r
(erations,)g(and)h(a)f(monolithic)h(memory)-7 b(.)20
b(Ho)n(w-)523 1845 y(ev)n(er,)30 b(for)h(grid-based)f(arc)n
(hitectures,)g(the)i(v)n(on-Neumann)e(mo)r(del)i(no)f(longer)f(holds,)h
(as)523 1945 y(there)e(are)g(m)n(ultiple)h(instruction)f(streams)f(and)
h(distributed)h(memory)f(banks.)g(Th)n(us,)g(C)523 2044
y(no)h(longer)e(serv)n(es)h(as)g(a)h(common)f(mac)n(hine)h(language{in)
e(fact,)i(it)g(pro)n(vides)f(the)h(wrong)523 2144 y(abstraction)25
b(for)h(the)g(underlying)g(hardw)n(are,)e(and)i(arc)n(hitecture-sp)r
(eci\014c)f(directiv)n(es)g(are)523 2243 y(often)j(needed)g(to)g
(obtain)g(reasonable)e(p)r(erformance.)h(Again,)h(this)g(greatly)f
(complicates)523 2343 y(the)h(job)g(of)f(the)h(programmer)d(and)j(hamp)
r(ers)f(p)r(ortabilit)n(y)-7 b(.)648 2445 y(StreamIt)25
b(is)h(a)f(language)f(and)h(compiler)g(sp)r(eci\014cally)g(designed)g
(for)g(mo)r(dern)h(stream)523 2544 y(programming.)g(The)j(StreamIt)f
(language)f(has)h(t)n(w)n(o)f(goals:)g(\014rst,)h(to)h(pro)n(vide)e
(high-lev)n(el)523 2644 y(stream)20 b(abstractions)g(that)h(impro)n(v)n
(e)e(programmer)g(pro)r(ductivit)n(y)h(and)h(program)e(robust-)523
2743 y(ness)31 b(within)g(the)g(streaming)f(domain,)h(and)g(second,)f
(to)h(serv)n(e)e(as)i(a)f(common)g(mac)n(hine)523 2843
y(language)36 b(for)i(grid-based)e(pro)r(cessors.)g(A)n(t)i(the)g(same)
g(time,)g(the)h(StreamIt)f(compiler)523 2943 y(aims)28
b(to)f(p)r(erform)h(stream-sp)r(eci\014c)f(optimizations)g(to)h(ac)n
(hiev)n(e)e(the)j(p)r(erformance)d(of)i(an)523 3042 y(exp)r(ert)g
(programmer.)648 3144 y(This)21 b(pap)r(er)g(motiv)-5
b(ates,)22 b(describ)r(es,)f(and)h(justi\014es)g(the)g(high-lev)n(el)f
(language)f(features)523 3243 y(of)34 b(StreamIt,)f(v)n(ersion)g(1.0.)g
(The)h(ma)5 b(jor)32 b(limitation)i(of)g(StreamIt)f(1.0)g(is)h(that)g
(all)g(\015o)n(w)523 3343 y(rates)27 b(in)h(the)g(streams)f(m)n(ust)h
(b)r(e)g(static;)g(applications)f(suc)n(h)h(as)f(compression)f(that)i
(ha)n(v)n(e)523 3443 y(dynamically)e(v)-5 b(arying)25
b(\015o)n(w)h(rates)g(will)g(b)r(e)h(the)g(sub)5 b(ject)27
b(of)f(future)h(w)n(ork.)f(A)g(large)g(set)g(of)523 3542
y(applications)f(can)g(b)r(e)g(implemen)n(ted)h(with)g(static)g(rates,)
e(and)h(while)h(dynamic)f(rates)g(will)523 3642 y(require)31
b(a)h(di\013eren)n(t)h(run)n(time)f(mo)r(del,)g(it)h(will)g(still)f(b)r
(e)h(essen)n(tial)e(to)h(fully)h(analyse)e(and)523 3742
y(optimize)d(static)f(sub-sections)g(in)h(order)e(to)h(obtain)h(high)f
(p)r(erformance.)648 3843 y(The)i(pap)r(er)g(is)g(organized)e(as)i
(follo)n(ws.)f(In)i(Section)f(2,)g(w)n(e)g(c)n(haracterize)e(the)i
(domain)523 3943 y(of)h(streaming)f(programs)f(that)i(motiv)-5
b(ates)30 b(the)g(design)g(of)f(StreamIt,)h(and)g(in)g(Section)g(3)523
4042 y(w)n(e)f(describ)r(e)f(the)h(language)f(features)g(in)h(detail.)g
(W)-7 b(e)29 b(presen)n(t)g(an)f(in-depth)i(example)e(of)523
4142 y(a)k(soft)n(w)n(are)e(radio)g(in)j(Section)f(4,)f(preliminary)g
(results)g(in)i(Section)e(5,)h(related)f(w)n(ork)g(in)523
4242 y(Section)d(6,)f(and)g(conclusions)g(in)h(Section)f(7.)523
4517 y Fk(2)112 b(Streaming)37 b(Application)e(Domain)523
4725 y Fp(The)f(applications)f(that)h(mak)n(e)g(use)f(of)h(a)g(stream)f
(abstraction)g(are)g(div)n(erse,)f(with)j(tar-)523 4825
y(gets)21 b(ranging)f(from)i(em)n(b)r(edded)g(devices,)f(to)h(consumer)
f(desktops,)g(to)h(high-p)r(erformance)523 4924 y(serv)n(ers.)j
(Examples)i(include)h(systems)e(suc)n(h)i(as)e(the)i(Clic)n(k)f(mo)r
(dular)g(router)f([7])h(and)h(the)p eop
%%Page: 3 3
3 2 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)238 b(3)526 751 y @beginspecial 167 @llx 116
@lly 684 @urx 195 @ury 3420 @rwi @setspecial
%%BeginDocument: Radio.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (fft.fm)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.1.1)

%%CreationDate: (D:20010806092101)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 167 116 684 195

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



167 116 moveto

684 116 lineto

684 195 lineto

167 195 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 3

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 

/? /! /| /: /+ /GetGlyphDirectory

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/OP here { /_OP? xdd } if

/op here { /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/OPM here { /_opmode xdd } if

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 5

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

<</MaxFormItem 0>> setuserparams

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor }

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/sfc {

_op? setoverprint

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_OP? setoverprint

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset spots

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Predefined (named) spot functions for PDF

21 dict dup begin

/CosineDot

{ 180 mul cos exch 180 mul cos add 2 div } bd

/Cross

{ abs exch abs 2 copy gt { exch } if pop neg } bd

/Diamond

{ abs exch abs 2 copy add .75 le

{ dup mul exch dup mul add 1 exch sub }

{ 2 copy add 1.23 le

{ .85 mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse }

ifelse } bd

/Double

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd

/DoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add } bd

/Ellipse

{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt

{ pop dup mul exch .75 div dup mul add 4 div

1 exch sub }

{ dup 1 gt

{pop 1 exch sub dup mul exch 1 exch sub

.75 div dup mul add 4 div 1 sub }

{ .5 exch sub exch pop exch pop }

ifelse }

ifelse } bd

/EllipseA

{ dup mul .9 mul exch dup mul add 1 exch sub } bd

/EllipseB

{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd

/EllipseC

{ dup mul exch dup mul .9 mul add 1 exch sub } bd

/InvertedDouble

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedDoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedEllipseA

{ dup mul .9 mul exch dup mul add 1 sub } bd

/InvertedEllipseC

{ dup mul exch dup mul .9 mul add 1 sub } bd

/InvertedSimpleDot

{ dup mul exch dup mul add 1 sub } bd

/Line

{ exch pop abs neg } bd

/LineX

{ pop } bd

/LineY

{ exch pop } bd

/Rhomboid

{ abs exch abs 0.9 mul add 2 div } bd

/Round

{ abs exch abs 2 copy add 1 le

{ dup mul exch dup mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse } bd

/SimpleDot

{ dup mul exch dup mul add 1 exch sub } bd

/Square

{ abs exch abs 2 copy lt { exch } if pop neg } bd

end

{ /Function defineRes pop } forall

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 2

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

dup {currentfont /Encoding get dup length 33 ge 

{32 get /space eq and}{pop}ifelse

}if

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

_intT

{currentpoint iTm moveto}

if

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font OAGNOA+Arial

11 dict begin

/FontName /OAGNOA+Arial def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc

e507fc6806f8e507090e ND 

/space 5 RD 

8bf7aa0d0e ND 

/parenleft 74 RD 

c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9

9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37

ac3908ad38b444bb4e08ca06090e ND 

/parenright 73 RD 

c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c

06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb

3008ca06bbc8b4d3addd08090e ND 

/asterisk 97 RD 

aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168

9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08

91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382

b583088a06090e ND 

/plus 43 RD 

c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57

063907f75706fb5807de06090e ND 

/comma 47 RD 

def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208

99a191a98bb008ef0727062707bd06090e ND 

/hyphen 21 RD 

abf7e10df7a3f76b15e307fba4063307f7a406090e ND 

/period 16 RD 

e6f7aa0def16ef0727062707ef06090e ND 

/zero 163 RD 

b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe

93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992

658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba

4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a

088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a

088bf70a9adca9b7088a07090e ND 

/one 52 RD 

f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694

aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 

/two 148 RD 

a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6

a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55

7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b

ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567

706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 

/three 207 RD 

b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8

7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa

7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050

08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b

6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e

9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b

08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 

/four 55 RD 

98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb

06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 

/five 136 RD 

b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf

76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7

0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5

6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b

ad84b8082f8405914fa35bb36608090e ND 

/six 211 RD 

b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e

088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208

9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d

7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e

a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99

b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b

08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809

0e ND 

/seven 68 RD 

baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308

e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689

3705f7f38a05090e ND 

/equal 35 RD 

c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c

06dd07090e ND 

/A 67 RD 

8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd

6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88

06daf76505090e ND 

/B 215 RD 

d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8

91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8

8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60

05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890

768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d

0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889

758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606

f78b07090e ND 

/C 157 RD 

bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808

7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b

b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d

8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0

5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f

725e676c08090e ND 

/D 147 RD 

d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5

9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d

6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4

8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379

6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 

/E 42 RD 

daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df

07fc9906fd6007f8aa06090e ND 

/F 35 RD 

ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60

07ea06090e ND 

/H 40 RD 

dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb

072c06fd6007ea06090e ND 

/I 18 RD 

e8f7aa0dea16f960072c06fd6007ea06090e ND 

/J 90 RD 

a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac

91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177

85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e

 ND 

/L 25 RD 

d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 

/M 66 RD 

d5f9d50de716f8f607f763fcf605e006f765f8eb05fceb07e606f96007fb

1306fb40fc860579587e6583710885a37fae7bba08fb3df88f05fb2206fd

6007e606090e ND 

/O 157 RD 

bbf99e0db4f73e15a653b35fc06a08c26ac77bce8b08c88bc59ac1a808c2

a9b4b6a8c408a8c49acc8bd4088bd27dcb6fc30870c562b656ab0856aa50

9b498b08248b3a694b48084b486b2e8bfb0b088b4d994fa6530809f715f8

2b15bcb9c5a2ce8b08b98bb67fb17308b173a8699f60089e6095588b5108

8b2f74445d59085d595072448b08458b51a45dbd085cbb74d08be1088bf6

a3d8bbb908090e ND 

/Q 197 RD 

b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08

56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46

994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e

be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9

78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08

bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25

6f3f53580869aa5da1549a08754705090e ND 

/R 160 RD 

daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b

9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f

977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70

a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180

a37508a676966f8b69088b7385767e77087e78787c73820874836986608b

08fb61068cf78105090e ND 

/S 246 RD 

b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e

aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a

3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b

08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462

9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708

8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d

a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85

678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97

60a46508090e ND 

/T 30 RD 

a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e

 ND 

/W 101 RD 

97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6

05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824

f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527

06f752fd6005ed8a05090e ND 

/bracketleft 31 RD 

cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609

0e ND 

/bracketright 31 RD 

9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709

0e ND 

/a 258 RD 

aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6

889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f

08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4

8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308

698670877a860874867681787e08787e7c7a7f7608807785738b72088b60

9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275

9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369

8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108

9a92a590af9008cb96bb95ab98086b07090e ND 

/b 138 RD 

ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf

86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74

665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab

7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f

b8087ba682b88bc9088bcb99bba7ac08090e ND 

/c 135 RD 

b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b

d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805

81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62

815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9

94c608359705855f7c6b747608090e ND 

/d 146 RD 

adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e

8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6

6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab

ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c

658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 

/e 144 RD 

b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8

15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08

5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8

a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b

af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 

/g 200 RD 

abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c

ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470

6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1

b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08

7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4

8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a

9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 

/h 92 RD 

cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08

ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e

a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306

090e ND 

/i 32 RD 

cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306

090e ND 

/j 83 RD 

5df7720df75bf8fa15f10734068a2505e30609fb16fdcc15bc8bae9ba0ac

089ca493b88bcb088cf8b70532068cfcb5058a59876e827f0882817e8479

8b08818b7d8d7990087b4005a185a288a38b088b06090e ND 

/k 52 RD 

cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505

fb0706fb62fb670589f82c05350689fd6005e406090e ND 

/l 18 RD 

cbf7720de316f960073306fd6007e306090e ND 

/m 157 RD 

cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08

ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4

a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07

e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2

729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689

fc9b05e406090e ND 

/n 99 RD 

cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008

9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886

a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c

06fc9b07e38a05090e ND 

/o 133 RD 

acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2

95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45

8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9

69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c

bc8bcd088bce9abca8ac08090e ND 

/p 153 RD 

cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af

a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208

6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306

09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58

6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af

08090e ND 

/q 141 RD 

aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608

6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b

a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08

b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b

6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 

/r 72 RD 

ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08

a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766

08db073c06fc9b07e306090e ND 

/s 232 RD 

aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3

93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193

828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b

08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c

97086c976891628b086f8b7288738408758378837d8108797e7d7b807708

807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d

a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94

759e08749d7ea686ae08347d059554a262ae6f08090e ND 

/t 98 RD 

9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7

c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68

927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e

8b818b088c06090e ND 

/u 106 RD 

cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873

7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307

3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786

aa8b08d08bc2a8b3c6083e07da06090e ND 

/w 74 RD 

8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0

056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7

bf052f06f731fc9b05e88c05090e ND 

/y 116 RD 

9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7

5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005

2d06f759fc9d058782888489860881688175858208848081827f84088084

7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/OAGNOA+Arial findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 42 /asterisk put

dup 43 /plus put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 61 /equal put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 72 /H put

dup 73 /I put

dup 74 /J put

dup 76 /L put

dup 77 /M put

dup 79 /O put

dup 81 /Q put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 87 /W put

dup 91 /bracketleft put

dup 93 /bracketright put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 106 /j put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N86/OAGNOA+Arial 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

167 116 517 79 re W n

[ 0 -1 1 0 51 362 ] concat

/N77 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

/N98 <<

/SA false 

/OP false 

/op false 

/OPM 1 

/BG /_defaultblackgeneration load 

/UCR /_defaultundercolorremoval load 

/TR /_defaulttransfer load 

/SM 0.02 

>> /ExtGState defineRes pop

/N77 /ColorSpace findRes cs

0.75 0.75 0.75 scn

/N98 /ExtGState findRes gs

1 i

193.00101 344.92101 m

193.00101 344.681 l

193.481 344.561 l

193.481 344.80099 l

f 

193.00101 344.92101 m

193.481 347.561 l

194.80099 350.08099 l

194.92101 350.08099 l

195.881 351.28101 l

195.881 351.401 l

197.08099 352.481 l

199.841 354.521 l

203.201 356.08099 l

203.321 356.08099 l

207.161 357.401 l

207.28101 356.92101 l

203.44099 355.601 l

200.08099 354.041 l

200.08099 354.161 l

197.321 352.121 l

197.44099 352.121 l

196.241 351.041 l

195.28101 349.841 l

193.961 347.321 l

193.961 347.44099 l

193.481 344.80099 l

f 

207.161 357.401 m

211.481 358.121 l

211.481 357.64101 l

211.601 357.64101 l

207.28101 356.92101 l

f 

216.041 358.36099 0.24001 -0.48 rf

211.481 358.121 m

211.481 357.64101 l

216.041 357.881 l

216.041 358.36099 l

f 

214.961 358.481 0.24001 0.48 rf

215.201 358.961 m

219.761 358.601 l

219.881 358.601 l

224.08099 357.881 l

228.041 356.561 l

231.401 355.00101 l

234.161 352.961 l

234.28101 352.961 l

235.36099 351.881 l

235.36099 351.761 l

236.321 350.561 l

235.841 350.321 l

235.961 350.321 l

235.00101 351.521 l

233.92101 352.601 l

231.161 354.64101 l

231.161 354.521 l

227.80099 356.08099 l

227.92101 356.08099 l

223.961 357.401 l

219.761 358.121 l

215.201 358.481 l

f 

236.321 350.561 m

237.64101 348.161 l

237.161 348.041 l

237.161 347.92101 l

235.841 350.321 l

f 

238.121 345.401 m

238.121 345.161 l

237.64101 345.041 l

237.64101 345.28101 l

f 

237.64101 348.161 m

237.161 348.041 l

237.64101 345.28101 l

238.121 345.401 l

f 

0.92599 0.92599 0.92599 scn

230.321 257.321 m

230.08099 257.561 l

229.72099 257.80099 l

229.36099 257.80099 l

229.00101 257.681 l

228.64101 257.44099 l

228.521 257.201 l

228.401 256.72099 l

228.521 256.36099 l

228.761 256.121 l

229.121 255.881 l

229.841 255.881 l

230.201 256.121 l

230.44099 256.481 l

230.44099 256.841 l

230.321 257.321 l

f* 

228.041 256.36099 m

228.28101 259.36099 l

228.161 259.72099 l

228.64101 259.841 l

238.00101 261.64101 l

239.681 262.00101 l

238.481 260.80099 l

231.401 254.321 l

231.161 254.08099 l

230.80099 254.321 l

230.681 255.041 l

237.761 261.521 l

238.481 260.80099 l

238.241 260.681 l

228.881 258.881 l

228.64101 259.841 l

229.241 259.36099 l

229.00101 256.36099 l

f 

230.80099 254.321 m

228.28101 256.00101 l

228.041 256.121 l

228.041 256.36099 l

228.881 256.841 l

231.401 255.161 l

f 

228.521 256.36099 m

228.761 259.36099 l

238.121 261.161 l

231.041 254.681 l

f* 

218.08099 252.401 m

217.241 252.041 l

218.08099 250.241 l

218.92101 250.601 l

f 

229.121 257.80099 m

229.961 258.161 l

230.80099 256.36099 l

229.961 256.00101 l

f 

218.08099 252.401 m

218.92101 250.601 l

229.961 256.00101 l

229.121 257.80099 l

f 

228.64101 339.521 m

228.28101 339.881 l

228.041 340.00101 l

227.681 340.121 l

227.201 340.00101 l

226.961 339.761 l

226.72099 339.401 l

226.72099 339.041 l

226.841 338.681 l

227.08099 338.321 l

227.321 338.08099 l

227.80099 338.08099 l

228.161 338.201 l

228.401 338.44099 l

228.64101 338.80099 l

228.64101 339.521 l

f* 

226.241 338.681 m

226.481 341.681 l

226.481 342.161 l

226.841 342.161 l

236.321 343.841 l

238.00101 344.201 l

236.80099 343.00101 l

229.601 336.521 l

229.36099 336.28101 l

229.00101 336.521 l

228.881 337.241 l

236.08099 343.72099 l

236.80099 343.00101 l

236.561 342.881 l

227.08099 341.201 l

226.841 342.161 l

227.44099 341.681 l

227.201 338.681 l

f 

229.00101 336.521 m

226.481 338.321 l

226.241 338.44099 l

226.241 338.681 l

227.08099 339.161 l

229.601 337.36099 l

f 

226.72099 338.681 m

226.961 341.681 l

236.44099 343.36099 l

229.241 336.881 l

f* 

216.28101 334.601 m

215.44099 334.241 l

216.28101 332.44099 l

217.121 332.80099 l

f 

227.321 340.00101 m

228.161 340.36099 l

229.00101 338.561 l

228.161 338.201 l

f 

216.28101 334.601 m

217.121 332.80099 l

228.161 338.201 l

227.321 340.00101 l

f 

0.5 0.5 0.5 scn

208.72099 253.241 2.03999 0.96001 rf

208.72099 255.64101 2.03999 -0.96001 rf

208.72099 254.201 2.03999 0.48 rf

208.72099 258.64101 2.03999 0.96001 re

f* 

208.72099 261.64101 2.03999 -0.96001 re

f* 

208.72099 259.601 2.03999 1.08 re

f* 

208.72099 264.64101 2.03999 0.96001 re

f* 

208.72099 267.521 2.03999 -0.96001 re

f* 

208.72099 265.601 2.03999 0.96001 re

f* 

208.72099 270.521 2.03999 0.96001 re

f* 

208.72099 273.401 2.03999 -0.96001 re

f* 

208.72099 271.481 2.03999 0.96001 re

f* 

208.72099 276.401 2.03999 0.96001 re

f* 

208.72099 279.28101 2.03999 -0.96001 re

f* 

208.72099 277.36099 2.03999 0.96001 re

f* 

208.72099 282.28101 2.03999 0.96001 re

f* 

208.72099 285.161 2.03999 -0.96001 re

f* 

208.72099 283.241 2.03999 0.96001 re

f* 

208.72099 288.161 2.03999 0.96001 re

f* 

208.72099 291.041 2.03999 -0.96001 re

f* 

208.72099 289.121 2.03999 0.96001 re

f* 

208.72099 294.041 2.03999 0.96001 re

f* 

208.72099 296.92101 2.03999 -0.96001 re

f* 

208.72099 295.00101 2.03999 0.96001 re

f* 

208.72099 299.92101 2.03999 0.96001 re

f* 

208.72099 302.80099 2.03999 -0.96001 re

f* 

208.72099 300.881 2.03999 0.96001 re

f* 

208.72099 305.80099 2.03999 0.96001 re

f* 

208.72099 308.681 2.03999 -0.96001 re

f* 

208.72099 306.761 2.03999 0.96001 re

f* 

208.72099 311.681 2.03999 0.96001 re

f* 

208.72099 314.561 2.03999 -0.96001 re

f* 

208.72099 312.64101 2.03999 0.96001 re

f* 

208.72099 317.561 2.03999 0.96001 re

f* 

208.72099 320.561 2.03999 -0.96001 re

f* 

208.72099 318.521 2.03999 1.08 re

f* 

208.72099 323.44099 2.03999 0.96001 re

f* 

208.72099 326.44099 2.03999 -0.96001 re

f* 

208.72099 324.401 2.03999 1.08 re

f* 

208.72099 329.44099 2.03999 0.96001 re

f* 

208.72099 332.321 2.03999 -0.96001 re

f* 

208.72099 330.401 2.03999 0.96001 re

f* 

208.72099 335.321 2.03999 0.96001 rf

208.72099 337.72099 2.03999 -0.96001 rf

208.72099 336.28101 2.03999 0.48 rf

0 0 0 scn

215.08099 126.521 2.03999 0.96001 rf

215.08099 251.08099 2.03999 -0.96001 rf

215.08099 127.481 2.03999 122.64 rf

1 1 1 scn

202.481 129.761 m

202.841 127.00101 l

203.561 124.481 l

204.881 122.201 l

206.44099 120.28101 l

208.481 118.601 l

210.761 117.28101 l

213.28101 116.561 l

216.041 116.321 l

218.80099 116.561 l

221.321 117.28101 l

223.601 118.601 l

225.64101 120.28101 l

227.201 122.201 l

228.521 124.481 l

229.241 127.00101 l

229.481 129.761 l

229.481 153.401 l

229.241 156.161 l

228.521 158.681 l

227.201 160.961 l

225.64101 163.00101 l

223.601 164.681 l

221.321 165.881 l

218.80099 166.72099 l

216.041 166.961 l

213.28101 166.72099 l

210.761 165.881 l

208.481 164.681 l

206.44099 163.00101 l

204.881 160.961 l

203.561 158.681 l

202.841 156.161 l

202.481 153.401 l

202.481 129.761 l

f* 

0 0 0 scn

202.72099 129.881 m

203.08099 127.121 l

203.80099 124.601 l

205.121 122.321 l

205.121 122.44099 l

206.681 120.521 l

208.72099 118.841 l

208.601 118.841 l

210.881 117.521 l

213.401 116.80099 l

213.28101 116.80099 l

216.041 116.561 l

218.80099 116.80099 l

221.321 117.521 l

221.201 117.521 l

223.481 118.841 l

225.521 120.521 l

227.08099 122.44099 l

227.08099 122.321 l

228.401 124.601 l

228.28101 124.601 l

229.00101 127.121 l

229.00101 127.00101 l

229.241 129.761 l

229.241 153.401 l

229.00101 156.161 l

228.28101 158.681 l

228.401 158.561 l

227.08099 160.841 l

225.521 162.881 l

223.481 164.561 l

223.481 164.44099 l

221.201 165.64101 l

221.321 165.64101 l

218.80099 166.481 l

216.041 166.72099 l

213.28101 166.481 l

213.401 166.481 l

210.881 165.64101 l

208.601 164.44099 l

208.72099 164.561 l

206.681 162.881 l

205.121 160.841 l

203.80099 158.561 l

203.80099 158.681 l

203.08099 156.161 l

202.72099 153.401 l

202.72099 129.761 l

202.241 129.761 l

202.241 153.521 l

202.601 156.28101 l

203.321 158.80099 l

203.44099 158.80099 l

204.761 161.08099 l

206.321 163.121 l

206.321 163.241 l

208.36099 164.92101 l

210.64101 166.121 l

210.761 166.121 l

213.28101 166.961 l

216.041 167.201 l

218.80099 166.961 l

218.92101 166.961 l

221.44099 166.121 l

223.72099 164.92101 l

223.841 164.92101 l

225.881 163.241 l

225.881 163.121 l

227.44099 161.08099 l

228.761 158.80099 l

229.481 156.28101 l

229.481 156.161 l

229.72099 153.401 l

229.72099 129.761 l

229.481 127.00101 l

228.761 124.481 l

228.761 124.36099 l

227.44099 122.08099 l

225.881 120.161 l

223.841 118.481 l

223.72099 118.481 l

221.44099 117.161 l

221.44099 117.041 l

218.92101 116.321 l

218.80099 116.321 l

216.041 116.08099 l

213.28101 116.321 l

210.761 117.041 l

210.64101 117.161 l

208.36099 118.481 l

206.321 120.161 l

204.761 122.08099 l

203.44099 124.36099 l

203.321 124.481 l

202.601 127.00101 l

202.241 129.761 l

f 

202.72099 129.761 m

202.72099 129.881 l

202.241 129.761 l

f 

BT

/N86 1 Tf

0 6.36 -6.36 0 217.2406 121.2406 Tm

-0.0076 Tc

0 Tw

(Re)Tj [-17.5 ]TJ (ad)Tj [-17.5 ]TJ (Fr)Tj [-14.2 ]TJ (o)Tj [-17.5 ]TJ (m)Tj [-4.8 ]TJ (A)Tj [-19.89999 ]TJ (t)Tj [-12.8 ]TJ (oD)Tj 

ET

1 1 1 scn

203.08099 198.881 m

203.321 196.241 l

204.041 193.601 l

205.36099 191.321 l

207.041 189.401 l

208.961 187.72099 l

211.241 186.521 l

213.761 185.681 l

216.521 185.44099 l

219.28101 185.681 l

221.80099 186.521 l

224.08099 187.72099 l

226.121 189.401 l

227.681 191.321 l

229.00101 193.601 l

229.72099 196.241 l

230.08099 198.881 l

230.08099 219.161 l

229.72099 221.92101 l

229.00101 224.44099 l

227.681 226.72099 l

226.121 228.761 l

224.08099 230.44099 l

221.80099 231.64101 l

219.28101 232.481 l

216.521 232.72099 l

213.761 232.481 l

211.241 231.64101 l

208.961 230.44099 l

207.041 228.761 l

205.36099 226.72099 l

204.041 224.44099 l

203.321 221.92101 l

203.08099 219.161 l

203.08099 198.881 l

f* 

0 0 0 scn

203.321 198.881 m

203.561 196.241 l

203.561 196.36099 l

204.28101 193.72099 l

205.601 191.44099 l

205.601 191.561 l

207.28101 189.64101 l

209.201 187.961 l

209.08099 187.961 l

211.36099 186.761 l

213.881 185.92101 l

213.761 185.92101 l

216.521 185.681 l

219.28101 185.92101 l

221.80099 186.761 l

221.681 186.761 l

223.961 187.961 l

226.00101 189.64101 l

227.561 191.561 l

227.561 191.44099 l

228.881 193.72099 l

228.761 193.72099 l

229.481 196.36099 l

229.841 199.00101 l

229.841 198.881 l

229.841 219.161 l

229.481 221.92101 l

228.761 224.44099 l

228.881 224.321 l

227.561 226.601 l

226.00101 228.64101 l

223.961 230.321 l

223.961 230.201 l

221.681 231.401 l

221.80099 231.401 l

219.28101 232.241 l

216.521 232.481 l

213.761 232.241 l

213.881 232.241 l

211.36099 231.401 l

209.08099 230.201 l

209.201 230.321 l

207.28101 228.64101 l

205.601 226.601 l

204.28101 224.321 l

204.28101 224.44099 l

203.561 221.92101 l

203.321 219.161 l

203.321 198.881 l

202.841 198.881 l

202.841 219.161 l

203.08099 221.92101 l

203.08099 222.041 l

203.80099 224.561 l

203.92101 224.561 l

205.241 226.841 l

205.241 226.961 l

206.92101 229.00101 l

208.841 230.681 l

211.121 231.881 l

211.241 231.881 l

213.761 232.72099 l

216.521 232.961 l

219.28101 232.72099 l

219.401 232.72099 l

221.92101 231.881 l

224.201 230.681 l

224.321 230.681 l

226.36099 229.00101 l

226.36099 228.881 l

227.92101 226.841 l

229.241 224.561 l

229.961 222.041 l

230.321 219.28101 l

230.321 198.881 l

229.961 196.241 l

229.241 193.601 l

229.241 193.481 l

227.92101 191.201 l

226.36099 189.28101 l

224.321 187.601 l

224.201 187.481 l

221.92101 186.28101 l

219.401 185.44099 l

219.28101 185.44099 l

216.521 185.201 l

213.761 185.44099 l

211.241 186.28101 l

211.121 186.28101 l

208.841 187.481 l

208.841 187.601 l

206.92101 189.28101 l

205.241 191.201 l

203.92101 193.481 l

203.80099 193.601 l

203.08099 196.241 l

202.841 198.881 l

f 

203.321 198.881 m

202.841 198.881 l

f 

BT

0 6.36 -6.36 0 217.7206 199.84061 Tm

0.0052 Tc

(R)Tj [10.39999 ]TJ (F)Tj [-6.60001 ]TJ (to)Tj [14.2 ]TJ (IF)Tj 

ET

215.08099 332.08099 2.03999 0.96001 rf

215.08099 620.08099 2.03999 -0.96001 rf

215.08099 333.041 2.03999 286.08 rf

202.961 257.561 m

202.841 257.08099 l

203.08099 256.36099 l

203.44099 256.121 l

204.161 256.121 l

204.521 256.36099 l

204.761 256.601 l

204.881 256.961 l

204.881 257.44099 l

204.64101 257.681 l

204.28101 257.92101 l

203.92101 258.041 l

203.561 258.041 l

203.201 257.80099 l

202.961 257.561 l

f* 

205.00101 256.241 m

202.481 254.561 l

202.241 254.321 l

201.881 254.561 l

194.80099 261.041 l

193.601 262.241 l

195.28101 261.881 l

204.761 260.201 l

205.00101 260.201 l

205.121 259.72099 l

204.521 259.241 l

195.041 260.92101 l

195.28101 261.881 l

195.521 261.761 l

202.601 255.28101 l

201.881 254.561 l

201.881 255.401 l

204.401 257.08099 l

f 

205.121 259.72099 m

205.241 256.601 l

205.241 256.36099 l

205.00101 256.241 l

204.28101 256.601 l

204.161 259.72099 l

f 

204.761 256.601 m

202.241 254.92101 l

195.161 261.401 l

204.64101 259.72099 l

f* 

214.601 250.841 m

215.44099 250.481 l

216.28101 252.28101 l

215.44099 252.64101 l

f 

203.561 256.241 m

202.72099 256.601 l

203.561 258.401 l

204.401 258.041 l

f 

214.601 250.841 m

215.44099 252.64101 l

204.401 258.041 l

203.561 256.241 l

f 

215.681 252.401 m

215.08099 252.28101 l

214.601 251.92101 l

214.241 251.44099 l

214.121 250.961 l

214.241 250.36099 l

214.601 249.881 l

215.08099 249.521 l

215.681 249.401 l

216.28101 249.521 l

216.761 249.881 l

217.00101 250.36099 l

217.121 250.961 l

217.00101 251.44099 l

216.761 251.92101 l

216.28101 252.28101 l

215.681 252.401 l

f* 

215.80099 252.161 m

215.201 252.041 l

215.201 252.161 l

214.72099 251.80099 l

214.841 251.80099 l

214.481 251.321 l

214.481 251.44099 l

214.36099 250.961 l

214.36099 251.08099 l

214.481 250.481 l

214.841 250.00101 l

214.72099 250.121 l

215.201 249.761 l

215.80099 249.64101 l

215.681 249.64101 l

216.28101 249.761 l

216.161 249.761 l

216.64101 250.121 l

216.521 250.00101 l

216.761 250.481 l

216.881 251.08099 l

216.881 250.961 l

216.761 251.44099 l

216.761 251.321 l

216.521 251.80099 l

216.64101 251.80099 l

216.161 252.161 l

216.28101 252.041 l

215.681 252.161 l

215.80099 252.64101 l

216.401 252.521 l

216.881 252.161 l

217.00101 252.041 l

217.241 251.561 l

217.36099 251.08099 l

217.36099 250.961 l

217.241 250.36099 l

217.241 250.241 l

217.00101 249.761 l

216.881 249.761 l

216.401 249.401 l

216.401 249.28101 l

215.80099 249.161 l

215.681 249.161 l

215.08099 249.28101 l

214.961 249.401 l

214.481 249.761 l

214.121 250.241 l

214.00101 250.36099 l

213.881 250.961 l

213.881 251.08099 l

214.00101 251.561 l

214.121 251.561 l

214.481 252.041 l

214.481 252.161 l

214.961 252.521 l

215.08099 252.521 l

215.681 252.64101 l

f 

215.681 252.161 m

215.80099 252.161 l

215.681 252.64101 l

215.80099 252.64101 l

f 

190.841 260.92101 2.03999 0.96001 rf

190.841 347.92101 2.03999 -0.96001 rf

190.841 261.881 2.03999 85.08 rf

1 1 1 scn

177.28101 289.36099 m

177.521 286.72099 l

178.36099 284.201 l

179.561 281.92101 l

181.241 279.881 l

183.28101 278.201 l

185.561 277.00101 l

188.08099 276.161 l

190.841 275.92101 l

193.481 276.161 l

196.00101 277.00101 l

198.28101 278.201 l

200.321 279.881 l

202.00101 281.92101 l

203.201 284.201 l

204.041 286.72099 l

204.28101 289.36099 l

204.28101 313.481 l

204.041 316.241 l

203.201 318.761 l

202.00101 321.041 l

200.321 322.961 l

198.28101 324.64101 l

196.00101 325.961 l

193.481 326.681 l

190.841 326.92101 l

188.08099 326.681 l

185.561 325.961 l

183.28101 324.64101 l

181.241 322.961 l

179.561 321.041 l

178.36099 318.761 l

177.521 316.241 l

177.28101 313.481 l

177.28101 289.36099 l

f* 

0 0 0 scn

177.521 289.36099 m

177.761 286.72099 l

177.761 286.841 l

178.601 284.321 l

179.80099 282.041 l

179.80099 282.161 l

181.481 280.121 l

183.521 278.44099 l

183.401 278.44099 l

185.681 277.241 l

188.201 276.401 l

188.08099 276.401 l

190.841 276.161 l

193.481 276.401 l

196.00101 277.241 l

195.881 277.241 l

198.161 278.44099 l

200.201 280.121 l

201.881 282.161 l

201.761 282.041 l

202.961 284.321 l

203.80099 286.841 l

203.80099 286.72099 l

204.041 289.36099 l

204.041 313.481 l

203.80099 316.241 l

202.961 318.761 l

202.961 318.64101 l

201.761 320.92101 l

201.881 320.92101 l

200.201 322.841 l

198.161 324.521 l

195.881 325.841 l

196.00101 325.72099 l

193.481 326.44099 l

190.841 326.681 l

188.08099 326.44099 l

188.201 326.44099 l

185.681 325.72099 l

185.681 325.841 l

183.401 324.521 l

183.521 324.521 l

181.481 322.841 l

179.80099 320.92101 l

178.601 318.64101 l

178.601 318.761 l

177.761 316.241 l

177.521 313.481 l

177.521 289.36099 l

177.041 289.36099 l

177.041 313.481 l

177.28101 316.241 l

177.28101 316.36099 l

178.121 318.881 l

179.321 321.161 l

179.44099 321.28101 l

181.121 323.201 l

183.161 324.881 l

185.44099 326.201 l

185.561 326.201 l

188.08099 326.92101 l

190.841 327.161 l

193.481 326.92101 l

193.601 326.92101 l

196.121 326.201 l

198.401 324.881 l

198.521 324.881 l

200.561 323.201 l

202.241 321.28101 l

202.241 321.161 l

203.44099 318.881 l

204.28101 316.36099 l

204.28101 316.241 l

204.521 313.481 l

204.521 289.36099 l

204.28101 286.72099 l

203.44099 284.201 l

203.44099 284.08099 l

202.241 281.80099 l

200.561 279.761 l

198.521 278.08099 l

198.401 277.961 l

196.121 276.761 l

193.601 275.92101 l

193.481 275.92101 l

190.841 275.681 l

188.08099 275.92101 l

185.561 276.761 l

185.44099 276.761 l

183.161 277.961 l

183.161 278.08099 l

181.121 279.761 l

179.44099 281.80099 l

179.321 281.80099 l

178.121 284.08099 l

178.121 284.201 l

177.28101 286.72099 l

177.041 289.36099 l

f 

177.521 289.36099 m

177.041 289.36099 l

f 

BT

0 6.36 -6.36 0 192.4006 291.8806 Tm

0.01089 Tc

(Bo)Tj [19.89999 ]TJ (ost)Tj [24.60001 ]TJ (e)Tj [1 ]TJ (r)Tj 

ET

240.401 259.601 2.03999 0.96001 rf

240.401 346.36099 2.03999 -0.96001 rf

240.401 260.561 2.03999 84.84 rf

189.761 262.121 m

189.881 261.401 l

190.36099 260.80099 l

190.961 260.44099 l

191.681 260.321 l

192.401 260.44099 l

193.00101 260.80099 l

193.36099 261.401 l

193.481 262.121 l

193.36099 262.841 l

193.00101 263.44099 l

192.401 263.92101 l

191.681 264.041 l

190.961 263.92101 l

190.36099 263.44099 l

189.881 262.841 l

189.761 262.121 l

f* 

190.00101 262.241 m

190.121 261.521 l

190.601 260.92101 l

190.481 261.041 l

191.08099 260.681 l

191.80099 260.561 l

191.681 260.561 l

192.401 260.681 l

192.28101 260.681 l

192.881 261.041 l

192.881 260.92101 l

193.241 261.521 l

193.121 261.521 l

193.241 262.241 l

193.241 262.121 l

193.121 262.841 l

193.241 262.72099 l

192.881 263.321 l

192.28101 263.80099 l

192.401 263.681 l

191.681 263.80099 l

191.80099 263.80099 l

191.08099 263.681 l

191.08099 263.80099 l

190.481 263.321 l

190.601 263.321 l

190.121 262.72099 l

190.121 262.841 l

190.00101 262.121 l

189.521 262.241 l

189.64101 262.961 l

189.761 262.961 l

190.241 263.561 l

190.241 263.681 l

190.841 264.161 l

190.961 264.161 l

191.681 264.28101 l

191.80099 264.28101 l

192.521 264.161 l

193.121 263.681 l

193.241 263.561 l

193.601 262.961 l

193.72099 262.241 l

193.72099 262.121 l

193.601 261.401 l

193.601 261.28101 l

193.241 260.681 l

193.121 260.681 l

192.521 260.321 l

192.521 260.201 l

191.80099 260.08099 l

191.681 260.08099 l

190.961 260.201 l

190.841 260.321 l

190.241 260.681 l

189.761 261.28101 l

189.64101 261.401 l

189.521 262.121 l

f 

190.00101 262.121 m

190.00101 262.241 l

189.521 262.121 l

189.521 262.241 l

f 

189.521 345.521 m

189.64101 344.80099 l

190.121 344.201 l

190.72099 343.841 l

191.44099 343.72099 l

192.161 343.841 l

192.761 344.201 l

193.121 344.80099 l

193.241 345.521 l

193.121 346.241 l

192.761 346.841 l

192.161 347.321 l

191.44099 347.44099 l

190.72099 347.321 l

190.121 346.841 l

189.64101 346.241 l

189.521 345.521 l

f* 

189.761 345.64101 m

189.881 344.92101 l

190.36099 344.321 l

190.241 344.44099 l

190.841 344.08099 l

191.561 343.961 l

191.44099 343.961 l

192.161 344.08099 l

192.041 344.08099 l

192.64101 344.44099 l

192.64101 344.321 l

193.00101 344.92101 l

192.881 344.92101 l

193.00101 345.64101 l

193.00101 345.521 l

192.881 346.241 l

193.00101 346.121 l

192.64101 346.72099 l

192.041 347.201 l

192.161 347.08099 l

191.44099 347.201 l

191.561 347.201 l

190.841 347.08099 l

190.841 347.201 l

190.241 346.72099 l

190.36099 346.72099 l

189.881 346.121 l

189.881 346.241 l

189.761 345.521 l

189.28101 345.64101 l

189.401 346.36099 l

189.521 346.36099 l

190.00101 346.961 l

190.00101 347.08099 l

190.601 347.561 l

190.72099 347.561 l

191.44099 347.681 l

191.561 347.681 l

192.28101 347.561 l

192.881 347.08099 l

193.00101 346.961 l

193.36099 346.36099 l

193.481 345.64101 l

193.481 345.521 l

193.36099 344.80099 l

193.36099 344.681 l

193.00101 344.08099 l

192.881 344.08099 l

192.28101 343.72099 l

192.28101 343.601 l

191.561 343.481 l

191.44099 343.481 l

190.72099 343.601 l

190.601 343.72099 l

190.00101 344.08099 l

189.521 344.681 l

189.401 344.80099 l

189.28101 345.521 l

f 

189.761 345.521 m

189.761 345.64101 l

189.28101 345.521 l

189.28101 345.64101 l

f 

239.681 261.401 m

239.80099 260.681 l

240.161 260.08099 l

240.761 259.72099 l

241.481 259.481 l

242.321 259.72099 l

242.92101 260.08099 l

243.28101 260.681 l

243.401 261.401 l

243.28101 262.121 l

242.92101 262.72099 l

242.321 263.08099 l

241.481 263.321 l

240.761 263.08099 l

240.161 262.72099 l

239.80099 262.121 l

239.681 261.401 l

f* 

239.92101 261.521 m

240.041 260.80099 l

240.401 260.201 l

240.28101 260.321 l

240.881 259.961 l

241.601 259.72099 l

241.481 259.72099 l

242.321 259.961 l

242.201 259.961 l

242.80099 260.321 l

242.80099 260.201 l

243.161 260.80099 l

243.041 260.80099 l

243.161 261.521 l

243.161 261.401 l

243.041 262.121 l

243.161 262.00101 l

242.80099 262.601 l

242.201 262.961 l

242.321 262.841 l

241.481 263.08099 l

241.601 263.08099 l

240.881 262.841 l

240.881 262.961 l

240.28101 262.601 l

240.401 262.601 l

240.041 262.00101 l

240.041 262.121 l

239.92101 261.401 l

239.44099 261.521 l

239.561 262.241 l

239.681 262.241 l

240.041 262.841 l

240.041 262.961 l

240.64101 263.321 l

240.761 263.321 l

241.481 263.561 l

241.601 263.561 l

242.44099 263.321 l

243.041 262.961 l

243.161 262.841 l

243.521 262.241 l

243.64101 261.521 l

243.64101 261.401 l

243.521 260.681 l

243.521 260.561 l

243.161 259.961 l

243.041 259.961 l

242.44099 259.601 l

242.44099 259.481 l

241.601 259.241 l

241.481 259.241 l

240.761 259.481 l

240.64101 259.601 l

240.041 259.961 l

239.681 260.561 l

239.561 260.681 l

239.44099 261.401 l

f 

239.92101 261.401 m

239.92101 261.521 l

239.44099 261.401 l

239.44099 261.521 l

f 

239.80099 344.80099 m

239.92101 344.08099 l

240.28101 343.481 l

240.881 343.121 l

241.72099 342.881 l

242.44099 343.121 l

243.041 343.481 l

243.401 344.08099 l

243.521 344.80099 l

243.401 345.521 l

243.041 346.121 l

242.44099 346.481 l

241.72099 346.72099 l

240.881 346.481 l

240.28101 346.121 l

239.92101 345.521 l

239.80099 344.80099 l

f* 

240.041 344.92101 m

240.161 344.201 l

240.521 343.601 l

240.401 343.72099 l

241.00101 343.36099 l

241.841 343.121 l

241.72099 343.121 l

242.44099 343.36099 l

242.321 343.36099 l

242.92101 343.72099 l

242.92101 343.601 l

243.28101 344.201 l

243.161 344.201 l

243.28101 344.92101 l

243.28101 344.80099 l

243.161 345.521 l

243.28101 345.401 l

242.92101 346.00101 l

242.321 346.36099 l

242.44099 346.241 l

241.72099 346.481 l

241.841 346.481 l

241.00101 346.241 l

241.00101 346.36099 l

240.401 346.00101 l

240.521 346.00101 l

240.161 345.401 l

240.161 345.521 l

240.041 344.80099 l

239.561 344.92101 l

239.681 345.64101 l

239.80099 345.64101 l

240.161 346.241 l

240.161 346.36099 l

240.761 346.72099 l

240.881 346.72099 l

241.72099 346.961 l

241.841 346.961 l

242.561 346.72099 l

243.161 346.36099 l

243.28101 346.241 l

243.64101 345.64101 l

243.761 344.92101 l

243.761 344.80099 l

243.64101 344.08099 l

243.64101 343.961 l

243.28101 343.36099 l

243.161 343.36099 l

242.561 343.00101 l

242.561 342.881 l

241.841 342.64101 l

241.72099 342.64101 l

240.881 342.881 l

240.761 343.00101 l

240.161 343.36099 l

239.80099 343.961 l

239.681 344.08099 l

239.561 344.80099 l

f 

240.041 344.80099 m

240.041 344.92101 l

239.561 344.80099 l

239.561 344.92101 l

f 

1 1 1 scn

202.841 389.201 m

203.08099 386.44099 l

203.80099 383.92101 l

205.121 381.64101 l

206.681 379.601 l

208.72099 377.92101 l

211.00101 376.72099 l

213.521 375.881 l

216.28101 375.64101 l

219.041 375.881 l

221.561 376.72099 l

223.841 377.92101 l

225.881 379.601 l

227.44099 381.64101 l

228.761 383.92101 l

229.481 386.44099 l

229.841 389.201 l

229.841 409.481 l

229.481 412.241 l

228.761 414.761 l

227.44099 417.041 l

225.881 418.961 l

223.841 420.64101 l

221.561 421.961 l

219.041 422.681 l

216.28101 422.92101 l

213.521 422.681 l

211.00101 421.961 l

208.72099 420.64101 l

206.681 418.961 l

205.121 417.041 l

203.80099 414.761 l

203.08099 412.241 l

202.841 409.481 l

202.841 389.201 l

f* 

0 0 0 scn

203.08099 389.201 m

203.321 386.44099 l

203.321 386.561 l

204.041 384.041 l

205.36099 381.761 l

206.92101 379.72099 l

206.92101 379.841 l

208.961 378.161 l

208.841 378.161 l

211.121 376.961 l

213.64101 376.121 l

213.521 376.121 l

216.28101 375.881 l

219.041 376.121 l

221.561 376.961 l

221.44099 376.961 l

223.72099 378.161 l

225.761 379.841 l

225.761 379.72099 l

227.321 381.761 l

228.64101 384.041 l

228.521 384.041 l

229.241 386.561 l

229.601 389.321 l

229.601 389.201 l

229.601 409.481 l

229.241 412.241 l

228.521 414.761 l

228.64101 414.64101 l

227.321 416.92101 l

225.761 418.841 l

223.72099 420.521 l

221.44099 421.841 l

221.561 421.72099 l

219.041 422.44099 l

216.28101 422.681 l

213.521 422.44099 l

213.64101 422.44099 l

211.121 421.72099 l

211.121 421.841 l

208.841 420.521 l

208.961 420.521 l

206.92101 418.841 l

205.36099 416.92101 l

204.041 414.64101 l

204.041 414.761 l

203.321 412.241 l

203.08099 409.481 l

203.08099 389.201 l

202.601 389.201 l

202.601 409.481 l

202.841 412.241 l

202.841 412.36099 l

203.561 414.881 l

203.681 414.881 l

205.00101 417.161 l

205.00101 417.28101 l

206.561 419.201 l

208.601 420.881 l

210.881 422.201 l

211.00101 422.201 l

213.521 422.92101 l

216.28101 423.161 l

219.041 422.92101 l

219.161 422.92101 l

221.681 422.201 l

223.961 420.881 l

224.08099 420.881 l

226.121 419.201 l

227.681 417.28101 l

227.681 417.161 l

229.00101 414.881 l

229.72099 412.36099 l

230.08099 409.601 l

230.08099 389.201 l

229.72099 386.44099 l

229.00101 383.92101 l

229.00101 383.80099 l

227.681 381.521 l

226.121 379.481 l

224.08099 377.80099 l

223.961 377.681 l

221.681 376.481 l

219.161 375.64101 l

219.041 375.64101 l

216.28101 375.401 l

213.521 375.64101 l

211.00101 376.481 l

210.881 376.481 l

208.601 377.681 l

208.601 377.80099 l

206.561 379.481 l

205.00101 381.521 l

203.681 383.80099 l

203.561 383.92101 l

202.841 386.44099 l

202.601 389.201 l

f 

203.08099 389.201 m

202.601 389.201 l

f 

BT

0 6.36 -6.36 0 217.48061 394.12061 Tm

-0.0071 Tc

(FF)Tj [-18.89999 ]TJ (T)Tj 

ET

1 1 1 scn

202.481 454.961 m

202.841 452.201 l

203.561 449.681 l

204.881 447.401 l

206.44099 445.36099 l

208.481 443.681 l

210.761 442.481 l

213.28101 441.64101 l

216.041 441.401 l

218.80099 441.64101 l

221.321 442.481 l

223.601 443.681 l

225.64101 445.36099 l

227.201 447.401 l

228.521 449.681 l

229.241 452.201 l

229.481 454.961 l

229.481 477.041 l

229.241 479.80099 l

228.521 482.321 l

227.201 484.601 l

225.64101 486.64101 l

223.601 488.321 l

221.321 489.521 l

218.80099 490.36099 l

216.041 490.601 l

213.28101 490.36099 l

210.761 489.521 l

208.481 488.321 l

206.44099 486.64101 l

204.881 484.601 l

203.561 482.321 l

202.841 479.80099 l

202.481 477.041 l

202.481 454.961 l

f* 

0 0 0 scn

202.72099 455.08099 m

203.08099 452.321 l

203.80099 449.80099 l

205.121 447.521 l

206.681 445.481 l

206.681 445.601 l

208.72099 443.92101 l

208.601 443.92101 l

210.881 442.72099 l

213.401 441.881 l

213.28101 441.881 l

216.041 441.64101 l

218.80099 441.881 l

221.321 442.72099 l

221.201 442.72099 l

223.481 443.92101 l

225.521 445.601 l

225.521 445.481 l

227.08099 447.521 l

228.401 449.80099 l

228.28101 449.80099 l

229.00101 452.321 l

229.00101 452.201 l

229.241 454.961 l

229.241 477.041 l

229.00101 479.80099 l

228.28101 482.321 l

228.401 482.201 l

227.08099 484.481 l

225.521 486.521 l

223.481 488.201 l

223.481 488.08099 l

221.201 489.28101 l

221.321 489.28101 l

218.80099 490.121 l

216.041 490.36099 l

213.28101 490.121 l

213.401 490.121 l

210.881 489.28101 l

208.601 488.08099 l

208.72099 488.201 l

206.681 486.521 l

205.121 484.481 l

203.80099 482.201 l

203.80099 482.321 l

203.08099 479.80099 l

202.72099 477.041 l

202.72099 454.961 l

202.241 454.961 l

202.241 477.161 l

202.601 479.92101 l

203.321 482.44099 l

203.44099 482.44099 l

204.761 484.72099 l

206.321 486.761 l

206.321 486.881 l

208.36099 488.561 l

210.64101 489.761 l

210.761 489.761 l

213.28101 490.601 l

216.041 490.841 l

218.80099 490.601 l

218.92101 490.601 l

221.44099 489.761 l

223.72099 488.561 l

223.841 488.561 l

225.881 486.881 l

225.881 486.761 l

227.44099 484.72099 l

228.761 482.44099 l

229.481 479.92101 l

229.481 479.80099 l

229.72099 477.041 l

229.72099 454.961 l

229.481 452.201 l

228.761 449.681 l

228.761 449.561 l

227.44099 447.28101 l

225.881 445.241 l

223.841 443.561 l

223.72099 443.44099 l

221.44099 442.241 l

218.92101 441.401 l

218.80099 441.401 l

216.041 441.161 l

213.28101 441.401 l

210.761 442.241 l

210.64101 442.241 l

208.36099 443.44099 l

208.36099 443.561 l

206.321 445.241 l

204.761 447.28101 l

203.44099 449.561 l

203.321 449.681 l

202.601 452.201 l

202.241 454.961 l

f 

202.72099 454.961 m

202.72099 455.08099 l

202.241 454.961 l

f 

BT

0 6.36 -6.36 0 217.2406 445.48061 Tm

0.00999 Tc

(Ch)Tj [19 ]TJ (eck)Tj [19.39999 ]TJ (F)Tj [-1.8 ]TJ (re)Tj [19 ]TJ (qH)Tj [15.2 ]TJ (op)Tj 

ET

1 1 1 scn

202.841 520.841 m

203.08099 518.08099 l

203.80099 515.561 l

205.121 513.28101 l

206.681 511.241 l

208.72099 509.561 l

211.00101 508.36099 l

213.521 507.521 l

216.28101 507.28101 l

219.041 507.521 l

221.561 508.36099 l

223.841 509.561 l

225.881 511.241 l

227.44099 513.28101 l

228.761 515.561 l

229.481 518.08099 l

229.841 520.841 l

229.841 541.121 l

229.481 543.761 l

228.761 546.401 l

227.44099 548.681 l

225.881 550.601 l

223.841 552.28101 l

221.561 553.481 l

219.041 554.321 l

216.28101 554.561 l

213.521 554.321 l

211.00101 553.481 l

208.72099 552.28101 l

206.681 550.601 l

205.121 548.681 l

203.80099 546.401 l

203.08099 543.761 l

202.841 541.121 l

202.841 520.841 l

f* 

0 0 0 scn

203.08099 520.841 m

203.321 518.08099 l

203.321 518.201 l

204.041 515.681 l

205.36099 513.401 l

206.92101 511.36099 l

206.92101 511.481 l

208.961 509.80099 l

208.841 509.80099 l

211.121 508.601 l

213.64101 507.761 l

213.521 507.761 l

216.28101 507.521 l

219.041 507.761 l

221.561 508.601 l

221.44099 508.601 l

223.72099 509.80099 l

225.761 511.481 l

225.761 511.36099 l

227.321 513.401 l

228.64101 515.681 l

228.521 515.681 l

229.241 518.201 l

229.601 520.961 l

229.601 520.841 l

229.601 541.121 l

229.241 543.761 l

228.521 546.401 l

228.64101 546.28101 l

227.321 548.561 l

225.761 550.481 l

223.72099 552.161 l

223.72099 552.041 l

221.44099 553.241 l

221.561 553.241 l

219.041 554.08099 l

216.28101 554.321 l

213.521 554.08099 l

213.64101 554.08099 l

211.121 553.241 l

208.841 552.041 l

208.961 552.161 l

206.92101 550.481 l

205.36099 548.561 l

204.041 546.28101 l

204.041 546.401 l

203.321 543.761 l

203.08099 541.121 l

203.08099 520.841 l

202.601 520.841 l

202.601 541.121 l

202.841 543.761 l

202.841 543.881 l

203.561 546.521 l

203.681 546.521 l

205.00101 548.80099 l

205.00101 548.92101 l

206.561 550.841 l

208.601 552.521 l

210.881 553.72099 l

211.00101 553.72099 l

213.521 554.561 l

216.28101 554.80099 l

219.041 554.561 l

219.161 554.561 l

221.681 553.72099 l

223.961 552.521 l

224.08099 552.521 l

226.121 550.841 l

227.681 548.92101 l

227.681 548.80099 l

229.00101 546.521 l

229.72099 543.881 l

230.08099 541.241 l

230.08099 520.841 l

229.72099 518.08099 l

229.00101 515.561 l

229.00101 515.44099 l

227.681 513.161 l

226.121 511.121 l

224.08099 509.44099 l

223.961 509.321 l

221.681 508.121 l

219.161 507.28101 l

219.041 507.28101 l

216.28101 507.041 l

213.521 507.28101 l

211.00101 508.121 l

210.881 508.121 l

208.601 509.321 l

208.601 509.44099 l

206.561 511.121 l

205.00101 513.161 l

203.681 515.44099 l

203.561 515.561 l

202.841 518.08099 l

202.601 520.841 l

f 

203.08099 520.841 m

202.601 520.841 l

f 

BT

0 6.36 -6.36 0 217.48061 513.1606 Tm

0.0119 Tc

(Ch)Tj [20.89999 ]TJ (ec)Tj [21.3 ]TJ (kQu)Tj [20.89999 ]TJ (a)Tj [2 ]TJ (l)Tj [7.7 ]TJ (i)Tj [26.5 ]TJ (t)Tj [6.7 ]TJ (y)Tj 

ET

1 1 1 scn

202.841 587.201 m

203.08099 584.44099 l

203.80099 581.92101 l

205.121 579.64101 l

206.681 577.601 l

208.72099 575.92101 l

211.00101 574.72099 l

213.521 574.00101 l

216.28101 573.64101 l

219.041 574.00101 l

221.561 574.72099 l

223.841 575.92101 l

225.881 577.601 l

227.44099 579.64101 l

228.761 581.92101 l

229.481 584.44099 l

229.841 587.201 l

229.841 609.761 l

229.481 612.401 l

228.761 614.92101 l

227.44099 617.321 l

225.881 619.241 l

223.841 620.92101 l

221.561 622.121 l

219.041 622.961 l

216.28101 623.201 l

213.521 622.961 l

211.00101 622.121 l

208.72099 620.92101 l

206.681 619.241 l

205.121 617.321 l

203.80099 614.92101 l

203.08099 612.401 l

202.841 609.761 l

202.841 587.201 l

f* 

0 0 0 scn

203.08099 587.201 m

203.321 584.44099 l

203.321 584.561 l

204.041 582.041 l

205.36099 579.761 l

206.92101 577.72099 l

206.92101 577.841 l

208.961 576.161 l

208.841 576.161 l

211.121 574.961 l

213.64101 574.241 l

216.401 573.881 l

216.28101 573.881 l

219.041 574.241 l

221.561 574.961 l

221.44099 574.961 l

223.72099 576.161 l

225.761 577.841 l

225.761 577.72099 l

227.321 579.761 l

228.64101 582.041 l

228.521 582.041 l

229.241 584.561 l

229.601 587.321 l

229.601 587.201 l

229.601 609.761 l

229.241 612.401 l

228.521 614.92101 l

228.521 614.80099 l

227.201 617.201 l

227.321 617.201 l

225.761 619.121 l

223.72099 620.80099 l

223.72099 620.681 l

221.44099 621.881 l

221.561 621.881 l

219.041 622.72099 l

216.28101 622.961 l

213.521 622.72099 l

213.64101 622.72099 l

211.121 621.881 l

208.841 620.681 l

208.961 620.80099 l

206.92101 619.121 l

205.36099 617.201 l

204.041 614.80099 l

204.041 614.92101 l

203.321 612.401 l

203.08099 609.761 l

203.08099 587.201 l

202.601 587.201 l

202.601 609.761 l

202.841 612.401 l

202.841 612.521 l

203.561 615.041 l

204.881 617.44099 l

205.00101 617.561 l

206.561 619.481 l

208.601 621.161 l

210.881 622.36099 l

211.00101 622.36099 l

213.521 623.201 l

216.28101 623.44099 l

219.041 623.201 l

219.161 623.201 l

221.681 622.36099 l

223.961 621.161 l

224.08099 621.161 l

226.121 619.481 l

227.681 617.561 l

227.681 617.44099 l

229.00101 615.041 l

229.72099 612.521 l

230.08099 609.881 l

230.08099 587.201 l

229.72099 584.44099 l

229.00101 581.92101 l

229.00101 581.80099 l

227.681 579.521 l

226.121 577.481 l

224.08099 575.80099 l

223.961 575.681 l

221.681 574.481 l

219.161 573.761 l

216.401 573.401 l

216.28101 573.401 l

213.521 573.761 l

211.00101 574.481 l

210.881 574.481 l

208.601 575.681 l

208.601 575.80099 l

206.561 577.481 l

205.00101 579.521 l

203.681 581.80099 l

203.561 581.92101 l

202.841 584.44099 l

202.601 587.201 l

f 

203.08099 587.201 m

202.601 587.201 l

f 

BT

0 6.36 -6.36 0 217.48061 577.6006 Tm

0.0103 Tc

(Au)Tj [19.3 ]TJ (di)Tj [6.10001 ]TJ (o)Tj [19.3 ]TJ (B)Tj [-2 ]TJ (a)Tj [19.3 ]TJ (ckE)Tj [16.89999 ]TJ (nd)Tj 

ET

198.041 214.961 m

197.80099 214.72099 l

202.241 209.561 l

202.601 209.80099 l

f 

199.72099 216.041 m

199.36099 215.80099 l

202.241 209.561 l

202.36099 209.44099 l

203.08099 208.961 l

202.72099 209.80099 l

f 

202.36099 209.44099 m

202.601 209.80099 l

196.841 213.521 l

196.601 213.161 l

f 

203.44099 450.64101 m

203.561 450.761 l

203.201 451.00101 l

203.08099 450.881 l

f 

203.44099 450.64101 m

196.481 441.521 l

191.201 433.961 l

189.041 430.481 l

187.241 427.00101 l

185.561 423.401 l

185.561 423.521 l

184.121 419.681 l

182.80099 415.601 l

181.601 410.92101 l

179.44099 399.761 l

174.521 366.401 l

169.841 332.92101 l

168.64101 321.521 l

168.041 312.161 l

168.041 303.881 l

168.64101 295.481 l

168.64101 295.601 l

171.521 274.481 l

173.08099 263.561 l

174.521 254.80099 l

176.321 247.72099 l

178.481 241.72099 l

179.80099 238.841 l

181.481 235.961 l

185.561 229.961 l

185.561 230.08099 l

185.201 229.72099 l

181.121 235.72099 l

179.44099 238.601 l

179.321 238.601 l

178.00101 241.481 l

178.00101 241.601 l

175.841 247.601 l

174.041 254.681 l

172.601 263.44099 l

171.041 274.36099 l

168.161 295.481 l

167.561 303.881 l

167.561 312.161 l

168.161 321.521 l

169.36099 332.92101 l

169.36099 333.041 l

174.041 366.521 l

178.961 399.881 l

181.121 411.041 l

182.321 415.72099 l

183.64101 419.80099 l

185.08099 423.64101 l

186.761 427.241 l

188.561 430.72099 l

188.681 430.72099 l

190.841 434.201 l

196.121 441.761 l

203.08099 450.881 l

f 

185.561 230.08099 m

190.961 223.36099 l

190.601 223.00101 l

185.201 229.72099 l

f 

198.161 215.08099 m

198.28101 214.961 l

197.92101 214.601 l

197.80099 214.72099 l

f 

190.961 223.36099 m

190.601 223.00101 l

197.80099 214.72099 l

198.161 215.08099 l

f 

215.321 312.881 m

215.08099 313.121 l

210.161 308.321 l

210.401 308.08099 l

f 

216.401 311.201 m

216.161 311.561 l

210.161 308.321 l

210.041 308.321 l

209.561 307.481 l

210.401 307.961 l

f 

210.041 308.321 m

210.401 308.08099 l

213.761 313.961 l

213.401 314.201 l

f 

228.401 514.481 m

228.401 514.72099 l

227.92101 514.601 l

227.92101 514.36099 l

f 

228.401 514.481 m

237.881 488.08099 l

240.761 478.481 l

242.80099 469.72099 l

244.00101 460.961 l

244.00101 460.841 l

244.72099 450.881 l

245.321 423.28101 l

245.44099 395.80099 l

245.201 386.44099 l

244.481 379.00101 l

243.28101 372.28101 l

241.36099 365.681 l

238.72099 358.241 l

235.241 349.121 l

229.601 334.961 l

229.601 334.841 l

227.44099 329.80099 l

225.401 325.601 l

223.36099 322.241 l

221.201 319.121 l

220.841 319.481 l

220.841 319.36099 l

223.00101 322.481 l

225.041 325.841 l

224.92101 325.841 l

226.961 330.041 l

229.121 335.08099 l

234.761 349.241 l

238.241 358.36099 l

240.881 365.80099 l

242.80099 372.401 l

244.00101 379.121 l

244.00101 379.00101 l

244.72099 386.44099 l

244.961 395.80099 l

244.841 423.28101 l

244.241 450.881 l

243.521 460.841 l

242.321 469.601 l

240.28101 478.36099 l

237.401 487.961 l

227.92101 514.36099 l

f 

221.201 319.121 m

218.561 316.121 l

218.201 316.481 l

220.841 319.481 l

f 

215.44099 312.881 m

215.321 312.761 l

214.961 313.121 l

215.08099 313.241 l

f 

218.561 316.121 m

218.201 316.481 l

215.08099 313.241 l

215.44099 312.881 l

f 

202.72099 340.121 m

202.601 339.761 l

202.841 339.041 l

203.201 338.80099 l

203.561 338.681 l

204.28101 338.92101 l

204.521 339.28101 l

204.64101 339.64101 l

204.64101 340.00101 l

204.401 340.36099 l

204.041 340.601 l

203.681 340.72099 l

203.321 340.601 l

202.961 340.481 l

202.72099 340.121 l

f* 

204.761 338.92101 m

202.241 337.241 l

202.00101 336.881 l

201.64101 337.241 l

194.561 343.601 l

193.36099 344.80099 l

195.041 344.44099 l

204.521 342.761 l

204.761 342.761 l

204.881 342.28101 l

204.28101 341.80099 l

194.80099 343.481 l

195.041 344.44099 l

195.28101 344.321 l

202.36099 337.961 l

201.64101 337.241 l

201.64101 338.08099 l

204.161 339.761 l

f 

204.881 342.28101 m

205.00101 339.28101 l

205.00101 339.041 l

204.761 338.92101 l

204.041 339.28101 l

203.92101 342.28101 l

f 

204.521 339.28101 m

202.00101 337.601 l

194.92101 343.961 l

204.401 342.28101 l

f* 

214.241 333.401 m

215.08099 332.92101 l

216.041 334.72099 l

215.201 335.201 l

f 

203.201 338.92101 m

202.36099 339.401 l

203.321 341.201 l

204.161 340.72099 l

f 

214.241 333.401 m

215.201 335.201 l

204.161 340.72099 l

203.201 338.92101 l

f 

215.44099 335.08099 m

214.841 334.961 l

214.36099 334.601 l

214.00101 334.121 l

213.881 333.521 l

214.00101 332.92101 l

214.36099 332.44099 l

214.841 332.201 l

215.44099 332.08099 l

216.041 332.201 l

216.521 332.44099 l

216.761 332.92101 l

216.881 333.521 l

216.761 334.121 l

216.521 334.601 l

216.041 334.961 l

215.44099 335.08099 l

f* 

215.561 334.841 m

214.961 334.72099 l

214.961 334.841 l

214.481 334.481 l

214.601 334.481 l

214.241 334.00101 l

214.241 334.121 l

214.121 333.521 l

214.121 333.64101 l

214.241 333.041 l

214.601 332.561 l

214.481 332.681 l

214.961 332.44099 l

215.561 332.321 l

215.44099 332.321 l

216.041 332.44099 l

215.92101 332.44099 l

216.401 332.681 l

216.28101 332.561 l

216.521 333.041 l

216.64101 333.64101 l

216.64101 333.521 l

216.521 334.121 l

216.521 334.00101 l

216.28101 334.481 l

216.401 334.481 l

215.92101 334.841 l

216.041 334.72099 l

215.44099 334.841 l

215.561 335.321 l

216.161 335.201 l

216.64101 334.841 l

216.761 334.72099 l

217.00101 334.241 l

217.121 333.64101 l

217.121 333.521 l

217.00101 332.92101 l

217.00101 332.80099 l

216.761 332.321 l

216.64101 332.201 l

216.161 331.961 l

215.561 331.841 l

215.44099 331.841 l

214.841 331.961 l

214.72099 331.961 l

214.241 332.201 l

214.241 332.321 l

213.881 332.80099 l

213.761 332.92101 l

213.64101 333.521 l

213.64101 333.64101 l

213.761 334.241 l

213.881 334.241 l

214.241 334.72099 l

214.241 334.841 l

214.72099 335.201 l

214.841 335.201 l

215.44099 335.321 l

f 

215.44099 334.841 m

215.561 334.841 l

215.44099 335.321 l

215.561 335.321 l

f 

0.75 0.75 0.75 scn

195.041 261.401 m

195.041 261.161 l

195.521 261.041 l

195.521 261.28101 l

f 

195.041 261.401 m

195.521 264.161 l

196.72099 266.80099 l

196.841 266.92101 l

198.881 269.321 l

201.521 271.36099 l

204.761 273.041 l

204.881 273.041 l

208.601 274.36099 l

208.72099 273.881 l

205.00101 272.561 l

201.761 270.881 l

201.761 271.00101 l

199.121 268.961 l

199.241 268.961 l

197.201 266.561 l

196.00101 263.92101 l

196.00101 264.041 l

195.521 261.28101 l

f 

208.601 274.36099 m

212.80099 275.08099 l

212.80099 274.601 l

212.92101 274.601 l

208.72099 273.881 l

f 

217.121 275.44099 0.24001 -0.48 rf

212.80099 275.08099 m

212.80099 274.601 l

217.121 274.961 l

217.121 275.44099 l

f 

216.881 274.961 0.24001 0.48 rf

217.121 275.44099 m

221.80099 275.08099 l

221.92101 275.08099 l

226.121 274.36099 l

229.961 273.161 l

233.321 271.481 l

236.201 269.561 l

236.321 269.561 l

237.401 268.36099 l

238.36099 267.28101 l

238.36099 267.161 l

237.881 266.92101 l

238.00101 266.92101 l

237.041 268.00101 l

235.961 269.201 l

233.08099 271.121 l

233.08099 271.00101 l

229.72099 272.681 l

229.841 272.681 l

226.00101 273.881 l

221.80099 274.601 l

217.121 274.961 l

f 

238.36099 267.161 m

239.681 264.64101 l

239.201 264.521 l

239.201 264.401 l

237.881 266.92101 l

f 

240.161 261.881 m

240.161 261.64101 l

239.681 261.521 l

239.681 261.761 l

f 

239.681 264.64101 m

239.201 264.521 l

239.681 261.761 l

240.161 261.881 l

f 

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%EOF


%%EndDocument
 @endspecial 863 842 a Fl(Fig.)14 b(1.)26 b Fo(A)f(blo)r(c)n(k)g
(diagram)h(of)h(our)e(frequency-hopping)g(soft)n(w)n(are)i(radio.)523
1072 y Fp(Sp)r(ectrum)n(w)n(are)36 b(soft)n(w)n(are)f(radio)g([8,)14
b(9];)36 b(sp)r(eci\014cations)g(suc)n(h)h(as)f(the)h(Blueto)r(oth)g
(com-)523 1171 y(m)n(unications)30 b(proto)r(col)f([10],)h(the)g(GSM)h
(V)-7 b(o)r(co)r(der)30 b([11],)g(and)g(the)h(AMPS)f(cellular)g(base)
523 1271 y(station[12];)f(and)h(almost)g(an)n(y)f(application)h(dev)n
(elop)r(ed)g(with)g(Microsoft's)f(DirectSho)n(w)523 1371
y(library)23 b([13],)h(Real)f(Net)n(w)n(ork's)g(RealSDK)h([14])g(or)f
(Lincoln)h(Lab's)g(P)n(olymorphous)e(Com-)523 1470 y(puting)28
b(Arc)n(hitecture)f([15].)648 1570 y(W)-7 b(e)18 b(ha)n(v)n(e)g(iden)n
(ti\014ed)g(a)g(n)n(um)n(b)r(er)g(of)h(prop)r(erties)e(that)i(are)e
(common)h(to)g(suc)n(h)g(applications{)523 1670 y(enough)29
b(so)f(as)h(to)g(c)n(haracterize)e(them)i(as)g(b)r(elonging)f(to)h(a)g
(distinct)h(class)e(of)h(programs,)523 1769 y(whic)n(h)39
b(w)n(e)g(will)h(refer)f(to)g(as)f Fi(str)l(e)l(aming)j(applic)l
(ations.)h Fp(W)-7 b(e)40 b(b)r(eliev)n(e)f(that)h(the)g(salien)n(t)523
1869 y(c)n(haracteristics)25 b(of)j(a)f(streaming)g(application)g(are)f
(as)h(follo)n(ws:)558 2041 y(1.)41 b Fi(L)l(ar)l(ge)29
b(str)l(e)l(ams)f(of)i(data.)e Fp(P)n(erhaps)d(the)h(most)h(fundamen)n
(tal)f(asp)r(ect)h(of)f(a)g(streaming)664 2140 y(application)31
b(is)h(that)g(it)h(op)r(erates)e(on)g(a)h(large)e(\(or)h(virtually)h
(in\014nite\))h(sequence)e(of)664 2240 y(data)j(items,)g(hereafter)f
(referred)f(to)i(as)f(a)h Fi(data)i(str)l(e)l(am)p Fp(.)e(Data)g
(streams)f(generally)664 2339 y(en)n(ter)19 b(the)g(program)e(from)i
(some)g(external)f(source,)g(and)h(eac)n(h)f(data)h(item)g(is)g(pro)r
(cessed)664 2439 y(for)36 b(a)g(limited)h(time)g(b)r(efore)e(b)r(eing)i
(discarded.)e(This)h(is)h(in)f(con)n(trast)f(to)h(scien)n(ti\014c)664
2539 y(co)r(des,)27 b(whic)n(h)f(manipulate)h(a)g(\014xed)f(input)i
(set)f(with)g(a)f(large)g(degree)g(of)g(data)h(reuse.)558
2637 y(2.)41 b Fi(Indep)l(endent)g(str)l(e)l(am)f(\014lters.)g
Fp(Conceptually)-7 b(,)39 b(a)g(streaming)f(computation)h(repre-)664
2736 y(sen)n(ts)e(a)g(sequence)g(of)g(transformations)f(on)h(the)g
(data)g(streams)g(in)g(the)h(program.)664 2836 y(W)-7
b(e)36 b(will)f(refer)g(to)g(the)g(basic)g(unit)h(of)f(this)g
(transformation)f(as)g(a)h Fi(\014lter)p Fp(:)g(an)g(op)r(er-)664
2935 y(ation)e(that{on)g(eac)n(h)g(execution)g(step{reads)f(one)h(or)g
(more)g(items)h(from)f(an)g(input)664 3035 y(stream,)j(p)r(erforms)h
(some)f(computation,)h(and)g(writes)f(one)h(or)f(more)g(items)h(to)g
(an)664 3135 y(output)e(stream.)e(Filters)h(are)g(generally)e(indep)r
(enden)n(t)j(and)f(self-con)n(tained,)g(with-)664 3234
y(out)e(references)f(to)h(global)f(v)-5 b(ariables)31
b(or)g(other)h(\014lters.)g(A)g(stream)g(program)e(is)i(the)664
3334 y(comp)r(osition)20 b(of)h(\014lters)g(in)n(to)f(a)g
Fi(str)l(e)l(am)j(gr)l(aph)p Fp(,)g(in)e(whic)n(h)f(the)h(outputs)g(of)
g(some)f(\014lters)664 3434 y(are)27 b(connected)g(to)h(the)g(inputs)g
(of)f(others.)558 3531 y(3.)41 b Fi(A)26 b(stable)g(c)l(omputation)g(p)
l(attern.)e Fp(The)f(structure)g(of)h(the)f(stream)g(graph)f(is)i
(generally)664 3631 y(constan)n(t)k(during)h(the)h(steady-state)d(op)r
(eration)h(of)h(a)g(stream)f(program.)f(That)i(is,)g(a)664
3731 y(certain)d(set)g(of)g(\014lters)g(are)f(rep)r(eatedly)g(applied)h
(in)h(a)e(regular,)g(predictable)g(order)g(to)664 3830
y(pro)r(duce)i(an)h(output)g(stream)f(that)g(is)h(a)f(giv)n(en)g
(function)h(of)g(the)g(input)g(stream.)558 3928 y(4.)41
b Fi(Oc)l(c)l(asional)29 b(mo)l(di\014c)l(ation)h(of)f(str)l(e)l(am)f
(structur)l(e.)c Fp(Ev)n(en)h(though)h(eac)n(h)f(arrangemen)n(t)664
4028 y(of)g(\014lters)g(is)g(executed)g(for)g(a)g(long)f(time,)i(there)
f(are)f(still)h(dynamic)g(mo)r(di\014cations)g(to)664
4127 y(the)i(stream)e(graph)g(that)h(o)r(ccur)g(on)g(o)r(ccasion.)f(F)
-7 b(or)25 b(instance,)h(if)h(a)e(wireless)g(net)n(w)n(ork)664
4227 y(in)n(terface)32 b(is)g(exp)r(eriencing)f(high)h(noise)g(on)g(an)
g(input)h(c)n(hannel,)e(it)i(migh)n(t)f(react)f(b)n(y)664
4327 y(adding)20 b(some)f(\014lters)h(to)g(clean)f(up)h(the)h(signal;)e
(a)g(soft)n(w)n(are)g(radio)f(re-initializes)h(a)h(p)r(or-)664
4426 y(tion)26 b(of)g(the)h(stream)e(graph)g(when)h(a)g(user)g(switc)n
(hes)f(from)h(AM)g(to)g(FM.)h(Sometimes,)664 4526 y(these)35
b(re-initializations)f(are)h(sync)n(hronized)e(with)j(some)f(data)g(in)
g(the)h(stream{for)664 4625 y(instance,)e(when)g(a)g(net)n(w)n(ork)f
(proto)r(col)g(c)n(hanges)g(from)g(Blueto)r(oth)i(to)f(802.11)d(at)j(a)
664 4725 y(certain)26 b(p)r(oin)n(t)h(of)g(a)f(transmission.)g(There)g
(is)h(t)n(ypically)f(an)h(en)n(umerable)f(n)n(um)n(b)r(er)g(of)664
4825 y(con\014gurations)32 b(that)i(the)g(stream)e(graph)h(can)g(adopt)
g(in)h(an)n(y)f(one)g(program,)e(suc)n(h)664 4924 y(that)d(all)f(of)h
(the)g(p)r(ossible)f(arrangemen)n(ts)e(of)j(\014lters)f(are)g(kno)n(wn)
g(at)g(compile)h(time.)p eop
%%Page: 4 4
4 3 bop 523 232 a Fo(4)237 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)-6
b(erlag)523 1884 y @beginspecial 43 @llx 442 @lly 215
@urx 613 @ury 1741 @rwi @setspecial
%%BeginDocument: fir-streamit.eps
%!
%%BoundingBox: 43 442 215 613
%%Title: fir-streamit
%%CreationDate: Mon Jan 21 09:13:45 2002
%%Creator: Tgif-3.0-p13 by William Chia-Wei Cheng (william@cs.UCLA.edu)

/tgifdict 2 dict def
tgifdict begin

end

%%PageBoundingBox: 43 442 215 613
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100.000 mul 100 div dup neg scale

gsave

/tgiforigctm matrix currentmatrix def

% TEXT
0 setgray
/Courier findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      80 329 moveto (class FIRFilter extends Filter {) show
      80 341 moveto (   float[] weights;) show
      80 353 moveto (   int N;) show
      80 365 moveto () show
      80 377 moveto (   void init\(float[] weights\) {) show
      80 389 moveto (      setInput\(Float.TYPE\); setOutput\(Float.TYPE\);) show
      80 401 moveto (      setPush\(N\); setPop\(1\); setPeek\(N\); ) show
      80 413 moveto (      this.weights = weights;) show
      80 425 moveto (      this.N = weights.length;) show
      80 437 moveto (   }) show
      80 449 moveto () show
      80 461 moveto (   void work\(\) {) show
      80 473 moveto (      float sum = 0;) show
      80 485 moveto (      for \(int i=0; i<N; i++\) ) show
      80 497 moveto (         sum += input.peek\(i\)*weights[i];) show
      80 509 moveto (      input.pop\(\);) show
      80 521 moveto (      output.push\(sum\);) show
      80 533 moveto (   }) show
      80 545 moveto (}) show
      80 557 moveto () show
      80 569 moveto (class Main extends Pipeline {) show
      80 581 moveto (   void init\(\) {) show
      80 593 moveto (      add\(new DataSource\(\)\);) show
      80 605 moveto (      add\(new FIRFilter\(N\)\);) show
      80 617 moveto (      add\(new Display\(\)\);) show
      80 629 moveto (   }) show
      80 641 moveto (}) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Jan 21 09:13:45 2002

%%EndDocument
 @endspecial 175 x Fl(Fig.)15 b(2.)20 b Fo(An)f(FIR)h(\014lter)g(in)g
(StreamIt.)2055 544 y @beginspecial 82 @llx 207 @lly
399 @urx 235 @ury 1296 @rwi @setspecial
%%BeginDocument: basic-pipeline.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (fft.fm)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.1.1)

%%CreationDate: (D:20010725163731)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 82 207 399 235

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



82 207 moveto

399 207 lineto

399 235 lineto

82 235 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 3

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 

/? /! /| /: /+ /GetGlyphDirectory

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/OP here { /_OP? xdd } if

/op here { /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/OPM here { /_opmode xdd } if

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 5

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

<</MaxFormItem 0>> setuserparams

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor }

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/sfc {

_op? setoverprint

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_OP? setoverprint

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset spots

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Predefined (named) spot functions for PDF

21 dict dup begin

/CosineDot

{ 180 mul cos exch 180 mul cos add 2 div } bd

/Cross

{ abs exch abs 2 copy gt { exch } if pop neg } bd

/Diamond

{ abs exch abs 2 copy add .75 le

{ dup mul exch dup mul add 1 exch sub }

{ 2 copy add 1.23 le

{ .85 mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse }

ifelse } bd

/Double

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd

/DoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add } bd

/Ellipse

{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt

{ pop dup mul exch .75 div dup mul add 4 div

1 exch sub }

{ dup 1 gt

{pop 1 exch sub dup mul exch 1 exch sub

.75 div dup mul add 4 div 1 sub }

{ .5 exch sub exch pop exch pop }

ifelse }

ifelse } bd

/EllipseA

{ dup mul .9 mul exch dup mul add 1 exch sub } bd

/EllipseB

{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd

/EllipseC

{ dup mul exch dup mul .9 mul add 1 exch sub } bd

/InvertedDouble

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedDoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedEllipseA

{ dup mul .9 mul exch dup mul add 1 sub } bd

/InvertedEllipseC

{ dup mul exch dup mul .9 mul add 1 sub } bd

/InvertedSimpleDot

{ dup mul exch dup mul add 1 sub } bd

/Line

{ exch pop abs neg } bd

/LineX

{ pop } bd

/LineY

{ exch pop } bd

/Rhomboid

{ abs exch abs 0.9 mul add 2 div } bd

/Round

{ abs exch abs 2 copy add 1 le

{ dup mul exch dup mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse } bd

/SimpleDot

{ dup mul exch dup mul add 1 exch sub } bd

/Square

{ abs exch abs 2 copy lt { exch } if pop neg } bd

end

{ /Function defineRes pop } forall

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 2

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

dup {currentfont /Encoding get dup length 33 ge 

{32 get /space eq and}{pop}ifelse

}if

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

_intT

{currentpoint iTm moveto}

if

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font GCMMPK+Arial

11 dict begin

/FontName /GCMMPK+Arial def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc

e507fc6806f8e507090e ND 

/space 5 RD 

8bf7aa0d0e ND 

/parenleft 74 RD 

c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9

9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37

ac3908ad38b444bb4e08ca06090e ND 

/parenright 73 RD 

c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c

06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb

3008ca06bbc8b4d3addd08090e ND 

/asterisk 97 RD 

aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168

9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08

91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382

b583088a06090e ND 

/plus 43 RD 

c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57

063907f75706fb5807de06090e ND 

/comma 47 RD 

def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208

99a191a98bb008ef0727062707bd06090e ND 

/hyphen 21 RD 

abf7e10df7a3f76b15e307fba4063307f7a406090e ND 

/period 16 RD 

e6f7aa0def16ef0727062707ef06090e ND 

/zero 163 RD 

b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe

93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992

658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba

4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a

088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a

088bf70a9adca9b7088a07090e ND 

/one 52 RD 

f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694

aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 

/two 148 RD 

a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6

a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55

7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b

ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567

706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 

/three 207 RD 

b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8

7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa

7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050

08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b

6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e

9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b

08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 

/four 55 RD 

98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb

06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 

/five 136 RD 

b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf

76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7

0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5

6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b

ad84b8082f8405914fa35bb36608090e ND 

/six 211 RD 

b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e

088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208

9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d

7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e

a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99

b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b

08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809

0e ND 

/seven 68 RD 

baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308

e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689

3705f7f38a05090e ND 

/equal 35 RD 

c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c

06dd07090e ND 

/A 67 RD 

8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd

6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88

06daf76505090e ND 

/B 215 RD 

d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8

91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8

8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60

05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890

768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d

0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889

758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606

f78b07090e ND 

/C 157 RD 

bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808

7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b

b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d

8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0

5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f

725e676c08090e ND 

/D 147 RD 

d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5

9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d

6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4

8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379

6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 

/E 42 RD 

daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df

07fc9906fd6007f8aa06090e ND 

/F 35 RD 

ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60

07ea06090e ND 

/H 40 RD 

dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb

072c06fd6007ea06090e ND 

/I 18 RD 

e8f7aa0dea16f960072c06fd6007ea06090e ND 

/J 90 RD 

a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac

91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177

85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e

 ND 

/L 25 RD 

d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 

/Q 197 RD 

b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08

56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46

994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e

be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9

78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08

bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25

6f3f53580869aa5da1549a08754705090e ND 

/R 160 RD 

daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b

9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f

977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70

a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180

a37508a676966f8b69088b7385767e77087e78787c73820874836986608b

08fb61068cf78105090e ND 

/S 246 RD 

b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e

aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a

3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b

08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462

9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708

8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d

a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85

678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97

60a46508090e ND 

/T 30 RD 

a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e

 ND 

/W 101 RD 

97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6

05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824

f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527

06f752fd6005ed8a05090e ND 

/bracketleft 31 RD 

cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609

0e ND 

/bracketright 31 RD 

9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709

0e ND 

/a 258 RD 

aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6

889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f

08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4

8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308

698670877a860874867681787e08787e7c7a7f7608807785738b72088b60

9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275

9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369

8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108

9a92a590af9008cb96bb95ab98086b07090e ND 

/b 138 RD 

ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf

86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74

665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab

7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f

b8087ba682b88bc9088bcb99bba7ac08090e ND 

/c 135 RD 

b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b

d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805

81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62

815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9

94c608359705855f7c6b747608090e ND 

/d 146 RD 

adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e

8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6

6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab

ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c

658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 

/e 144 RD 

b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8

15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08

5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8

a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b

af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 

/g 200 RD 

abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c

ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470

6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1

b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08

7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4

8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a

9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 

/h 92 RD 

cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08

ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e

a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306

090e ND 

/i 32 RD 

cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306

090e ND 

/k 52 RD 

cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505

fb0706fb62fb670589f82c05350689fd6005e406090e ND 

/l 18 RD 

cbf7720de316f960073306fd6007e306090e ND 

/m 157 RD 

cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08

ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4

a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07

e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2

729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689

fc9b05e406090e ND 

/n 99 RD 

cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008

9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886

a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c

06fc9b07e38a05090e ND 

/o 133 RD 

acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2

95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45

8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9

69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c

bc8bcd088bce9abca8ac08090e ND 

/p 153 RD 

cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af

a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208

6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306

09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58

6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af

08090e ND 

/q 141 RD 

aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608

6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b

a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08

b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b

6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 

/r 72 RD 

ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08

a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766

08db073c06fc9b07e306090e ND 

/s 232 RD 

aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3

93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193

828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b

08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c

97086c976891628b086f8b7288738408758378837d8108797e7d7b807708

807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d

a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94

759e08749d7ea686ae08347d059554a262ae6f08090e ND 

/t 98 RD 

9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7

c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68

927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e

8b818b088c06090e ND 

/u 106 RD 

cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873

7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307

3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786

aa8b08d08bc2a8b3c6083e07da06090e ND 

/w 74 RD 

8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0

056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7

bf052f06f731fc9b05e88c05090e ND 

/y 116 RD 

9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7

5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005

2d06f759fc9d058782888489860881688175858208848081827f84088084

7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/GCMMPK+Arial findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 42 /asterisk put

dup 43 /plus put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 61 /equal put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 72 /H put

dup 73 /I put

dup 74 /J put

dup 76 /L put

dup 81 /Q put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 87 /W put

dup 91 /bracketleft put

dup 93 /bracketright put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N71/GCMMPK+Arial 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

82 207 317 28 re W n

[ 0 -1 1 0 -125 317 ] concat

/N62 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

/N83 <<

/SA false 

/OP false 

/op false 

/OPM 1 

/BG /_defaultblackgeneration load 

/UCR /_defaultundercolorremoval load 

/TR /_defaulttransfer load 

/SM 0.02 

>> /ExtGState defineRes pop

/N62 /ColorSpace findRes cs

0 0 0 scn

/N83 /ExtGState findRes gs

1 i

95.201 287.80099 2.03999 0.96001 rf

95.201 308.681 2.03999 -0.96001 rf

95.201 288.761 2.03999 18.96001 rf

95.201 306.761 2.03999 0.96001 rf

95.201 309.28101 2.03999 -0.96001 rf

95.201 307.72099 2.03999 0.60001 rf

95.201 311.681 2.03999 0.96001 re

f* 

95.201 314.561 2.03999 -0.96001 re

f* 

95.201 312.64101 2.03999 0.96001 re

f* 

95.201 316.961 2.03999 0.96001 re

f* 

95.201 319.841 2.03999 -0.96001 re

f* 

95.201 317.92101 2.03999 0.96001 re

f* 

95.201 322.241 2.03999 0.96001 rf

95.201 324.64101 2.03999 -0.96001 rf

95.201 323.201 2.03999 0.48 rf

96.161 333.041 m

95.80099 332.92101 l

95.44099 332.681 l

95.321 332.44099 l

95.201 331.961 l

95.44099 331.241 l

96.161 331.00101 l

96.64101 331.121 l

96.881 331.241 l

97.121 331.601 l

97.241 331.961 l

97.121 332.44099 l

96.64101 332.92101 l

96.161 333.041 l

f* 

95.92101 330.64101 m

93.28101 332.201 l

92.92101 332.321 l

93.041 332.681 l

95.681 341.80099 l

96.161 343.481 l

96.64101 341.80099 l

99.28101 332.681 l

99.401 332.44099 l

99.041 332.201 l

98.321 332.44099 l

95.681 341.561 l

96.64101 341.80099 l

96.64101 341.561 l

94.00101 332.44099 l

93.041 332.681 l

93.761 333.041 l

96.401 331.481 l

f 

99.041 332.201 m

96.401 330.64101 l

96.161 330.521 l

95.92101 330.64101 l

95.92101 331.481 l

98.561 333.041 l

f 

96.161 331.00101 m

93.521 332.561 l

96.161 341.681 l

98.80099 332.561 l

f* 

95.201 323.561 2.03999 0.96001 rf

95.201 332.92101 2.03999 -0.96001 rf

95.201 324.521 2.03999 7.44 rf

95.201 386.80099 2.03999 0.96001 rf

95.201 407.681 2.03999 -0.96001 rf

95.201 387.761 2.03999 18.96001 rf

95.201 405.761 2.03999 0.96001 rf

95.201 408.28101 2.03999 -0.96001 rf

95.201 406.72099 2.03999 0.60001 rf

95.201 410.681 2.03999 0.96001 re

f* 

95.201 413.561 2.03999 -0.96001 re

f* 

95.201 411.64101 2.03999 0.96001 re

f* 

95.201 415.961 2.03999 0.96001 re

f* 

95.201 418.841 2.03999 -0.96001 re

f* 

95.201 416.92101 2.03999 0.96001 re

f* 

95.201 421.241 2.03999 0.96001 rf

95.201 423.64101 2.03999 -0.96001 rf

95.201 422.201 2.03999 0.48 rf

96.161 432.041 m

95.80099 431.92101 l

95.44099 431.681 l

95.321 431.44099 l

95.201 430.961 l

95.44099 430.241 l

96.161 430.00101 l

96.64101 430.121 l

96.881 430.241 l

97.121 430.601 l

97.241 430.961 l

97.121 431.44099 l

96.64101 431.92101 l

96.161 432.041 l

f* 

95.92101 429.64101 m

93.28101 431.201 l

92.92101 431.321 l

93.041 431.681 l

95.681 440.80099 l

96.161 442.481 l

96.64101 440.80099 l

99.28101 431.681 l

99.401 431.44099 l

99.041 431.201 l

98.321 431.44099 l

95.681 440.561 l

96.64101 440.80099 l

96.64101 440.561 l

94.00101 431.44099 l

93.041 431.681 l

93.761 432.041 l

96.401 430.481 l

f 

99.041 431.201 m

96.401 429.64101 l

96.161 429.521 l

95.92101 429.64101 l

95.92101 430.481 l

98.561 432.041 l

f 

96.161 430.00101 m

93.521 431.561 l

96.161 440.681 l

98.80099 431.561 l

f* 

95.201 422.561 2.03999 0.96001 rf

95.201 431.92101 2.03999 -0.96001 rf

95.201 423.521 2.03999 7.44 rf

96.161 232.961 m

95.80099 232.961 l

95.44099 232.72099 l

95.201 232.00101 l

95.44099 231.28101 l

95.80099 231.041 l

96.64101 231.041 l

96.881 231.28101 l

97.121 231.64101 l

97.241 232.00101 l

97.121 232.36099 l

96.881 232.72099 l

96.64101 232.961 l

96.161 232.961 l

f* 

95.92101 230.561 m

93.28101 232.121 l

92.92101 232.121 l

93.041 232.601 l

96.161 243.521 l

99.28101 232.601 l

99.401 232.36099 l

99.041 232.121 l

98.321 232.36099 l

95.681 241.601 l

96.64101 241.841 l

96.64101 241.601 l

94.00101 232.36099 l

93.041 232.601 l

93.761 232.961 l

96.401 231.401 l

f 

99.041 232.121 m

96.401 230.561 l

96.161 230.44099 l

95.92101 230.561 l

95.92101 231.401 l

98.561 232.961 l

f 

96.161 230.92101 m

93.521 232.481 l

96.161 241.72099 l

98.80099 232.481 l

f* 

95.201 207.041 2.03999 0.96001 rf

95.201 232.961 2.03999 -0.96001 rf

95.201 208.00101 2.03999 24 rf

96.161 512.561 m

95.80099 512.44099 l

95.44099 512.201 l

95.201 511.481 l

95.44099 510.761 l

95.80099 510.64101 l

96.161 510.521 l

96.64101 510.64101 l

96.881 510.761 l

97.121 511.121 l

97.241 511.481 l

97.121 511.841 l

96.881 512.201 l

96.64101 512.44099 l

96.161 512.561 l

f* 

95.92101 510.161 m

93.28101 511.601 l

92.92101 511.601 l

93.041 512.08099 l

96.161 523.00101 l

99.28101 512.08099 l

99.401 511.841 l

99.041 511.601 l

98.321 511.841 l

95.681 521.08099 l

96.64101 521.321 l

96.64101 521.08099 l

94.00101 511.841 l

93.041 512.08099 l

93.761 512.44099 l

96.401 511.00101 l

f 

99.041 511.601 m

96.401 510.161 l

96.161 510.041 l

95.92101 510.161 l

95.92101 511.00101 l

98.561 512.44099 l

f 

96.161 510.521 m

93.521 511.961 l

96.161 521.201 l

98.80099 511.961 l

f* 

95.201 486.521 2.03999 0.96001 rf

95.201 512.44099 2.03999 -0.96001 rf

95.201 487.481 2.03999 24 rf

1 1 1 scn

82.72099 356.201 m

82.961 353.44099 l

83.80099 350.92101 l

85.00101 348.64101 l

86.681 346.601 l

88.601 344.92101 l

91.00101 343.72099 l

93.521 342.881 l

96.161 342.64101 l

98.92101 342.881 l

101.44099 343.72099 l

103.72099 344.92101 l

105.761 346.601 l

107.44099 348.64101 l

108.64101 350.92101 l

109.481 353.44099 l

109.72099 356.201 l

109.72099 374.201 l

109.481 376.961 l

108.64101 379.481 l

107.44099 381.761 l

105.761 383.80099 l

103.72099 385.36099 l

101.44099 386.681 l

98.92101 387.401 l

96.161 387.761 l

93.521 387.401 l

91.00101 386.681 l

88.601 385.36099 l

86.681 383.80099 l

85.00101 381.761 l

83.80099 379.481 l

82.961 376.961 l

82.72099 374.201 l

82.72099 356.201 l

f* 

0 0 0 scn

82.961 356.201 m

83.201 353.44099 l

83.201 353.561 l

84.041 351.041 l

85.241 348.761 l

85.241 348.881 l

86.92101 346.841 l

88.841 345.161 l

88.72099 345.161 l

91.121 343.961 l

93.64101 343.121 l

93.521 343.121 l

96.161 342.881 l

98.92101 343.121 l

101.44099 343.961 l

101.321 343.961 l

103.601 345.161 l

105.64101 346.841 l

107.321 348.881 l

107.201 348.761 l

108.401 351.041 l

109.241 353.561 l

109.241 353.44099 l

109.481 356.201 l

109.481 374.201 l

109.241 376.961 l

108.401 379.481 l

108.401 379.36099 l

107.201 381.64101 l

107.321 381.64101 l

105.64101 383.681 l

103.601 385.241 l

101.321 386.561 l

101.44099 386.44099 l

98.92101 387.161 l

96.161 387.521 l

96.28101 387.521 l

93.64101 387.161 l

91.121 386.44099 l

88.72099 385.121 l

88.841 385.241 l

86.92101 383.681 l

85.241 381.64101 l

84.041 379.36099 l

84.041 379.481 l

83.201 376.961 l

82.961 374.201 l

82.961 356.201 l

82.481 356.201 l

82.481 374.201 l

82.72099 376.961 l

82.72099 377.08099 l

83.561 379.601 l

84.761 381.881 l

84.881 382.00101 l

86.561 384.041 l

88.481 385.601 l

90.881 386.92101 l

91.00101 386.92101 l

93.521 387.64101 l

96.161 388.00101 l

96.28101 388.00101 l

99.041 387.64101 l

101.561 386.92101 l

103.841 385.601 l

105.881 384.041 l

106.00101 384.041 l

107.681 382.00101 l

107.681 381.881 l

108.881 379.601 l

109.72099 377.08099 l

109.72099 376.961 l

109.961 374.201 l

109.961 356.201 l

109.72099 353.44099 l

108.881 350.92101 l

108.881 350.80099 l

107.681 348.521 l

106.00101 346.481 l

103.961 344.80099 l

103.841 344.681 l

101.561 343.481 l

99.041 342.64101 l

98.92101 342.64101 l

96.161 342.401 l

93.521 342.64101 l

91.00101 343.481 l

90.881 343.481 l

88.481 344.681 l

88.481 344.80099 l

86.561 346.481 l

84.881 348.521 l

84.761 348.521 l

83.561 350.80099 l

83.561 350.92101 l

82.72099 353.44099 l

82.481 356.201 l

f 

82.961 356.201 m

82.481 356.201 l

f 

BT

/N71 1 Tf

0 11.16 -11.16 0 101.20061 349.12061 Tm

-0.0433 Tc

0 Tw

(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 

ET

1 1 1 scn

82.72099 257.201 m

82.961 254.44099 l

83.80099 251.92101 l

85.00101 249.64101 l

86.681 247.601 l

88.601 245.92101 l

91.00101 244.72099 l

93.521 243.881 l

96.161 243.64101 l

98.92101 243.881 l

101.44099 244.72099 l

103.72099 245.92101 l

105.761 247.601 l

107.44099 249.64101 l

108.64101 251.92101 l

109.481 254.44099 l

109.72099 257.201 l

109.72099 275.201 l

109.481 277.961 l

108.64101 280.481 l

107.44099 282.761 l

105.761 284.80099 l

103.72099 286.36099 l

101.44099 287.681 l

98.92101 288.401 l

96.161 288.761 l

93.521 288.401 l

91.00101 287.681 l

88.601 286.36099 l

86.681 284.80099 l

85.00101 282.761 l

83.80099 280.481 l

82.961 277.961 l

82.72099 275.201 l

82.72099 257.201 l

f* 

0 0 0 scn

82.961 257.201 m

83.201 254.44099 l

83.201 254.561 l

84.041 252.041 l

85.241 249.761 l

85.241 249.881 l

86.92101 247.841 l

88.841 246.161 l

88.72099 246.161 l

91.121 244.961 l

93.64101 244.121 l

93.521 244.121 l

96.161 243.881 l

98.92101 244.121 l

101.44099 244.961 l

101.321 244.961 l

103.601 246.161 l

105.64101 247.841 l

107.321 249.881 l

107.201 249.761 l

108.401 252.041 l

109.241 254.561 l

109.241 254.44099 l

109.481 257.201 l

109.481 275.201 l

109.241 277.961 l

108.401 280.481 l

108.401 280.36099 l

107.201 282.64101 l

107.321 282.64101 l

105.64101 284.681 l

103.601 286.241 l

101.321 287.561 l

101.44099 287.44099 l

98.92101 288.161 l

96.161 288.521 l

96.28101 288.521 l

93.64101 288.161 l

91.121 287.44099 l

88.72099 286.121 l

88.841 286.241 l

86.92101 284.681 l

85.241 282.64101 l

84.041 280.36099 l

84.041 280.481 l

83.201 277.961 l

82.961 275.201 l

82.961 257.201 l

82.481 257.201 l

82.481 275.201 l

82.72099 277.961 l

82.72099 278.08099 l

83.561 280.601 l

84.761 282.881 l

84.881 283.00101 l

86.561 285.041 l

88.481 286.601 l

90.881 287.92101 l

91.00101 287.92101 l

93.521 288.64101 l

96.161 289.00101 l

96.28101 289.00101 l

99.041 288.64101 l

101.561 287.92101 l

103.841 286.601 l

105.881 285.041 l

106.00101 285.041 l

107.681 283.00101 l

107.681 282.881 l

108.881 280.601 l

109.72099 278.08099 l

109.72099 277.961 l

109.961 275.201 l

109.961 257.201 l

109.72099 254.44099 l

108.881 251.92101 l

108.881 251.80099 l

107.681 249.521 l

106.00101 247.481 l

103.961 245.80099 l

103.841 245.681 l

101.561 244.481 l

99.041 243.64101 l

98.92101 243.64101 l

96.161 243.401 l

93.521 243.64101 l

91.00101 244.481 l

90.881 244.481 l

88.481 245.681 l

88.481 245.80099 l

86.561 247.481 l

84.881 249.521 l

84.761 249.521 l

83.561 251.80099 l

83.561 251.92101 l

82.72099 254.44099 l

82.481 257.201 l

f 

82.961 257.201 m

82.481 257.201 l

f 

BT

0 11.16 -11.16 0 101.20061 250.12061 Tm

(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 

ET

1 1 1 scn

82.72099 455.201 m

82.961 452.44099 l

83.80099 449.92101 l

85.00101 447.64101 l

86.681 445.601 l

88.601 443.92101 l

91.00101 442.72099 l

93.521 442.00101 l

96.161 441.64101 l

98.92101 442.00101 l

101.44099 442.72099 l

103.72099 443.92101 l

105.761 445.601 l

107.44099 447.64101 l

108.64101 449.92101 l

109.481 452.44099 l

109.72099 455.201 l

109.72099 473.201 l

109.481 475.961 l

108.64101 478.481 l

107.44099 480.761 l

105.761 482.80099 l

103.72099 484.36099 l

101.44099 485.681 l

98.92101 486.401 l

96.161 486.761 l

93.521 486.401 l

91.00101 485.681 l

88.601 484.36099 l

86.681 482.80099 l

85.00101 480.761 l

83.80099 478.481 l

82.961 475.961 l

82.72099 473.201 l

82.72099 455.201 l

f* 

0 0 0 scn

82.961 455.201 m

83.201 452.44099 l

83.201 452.561 l

84.041 450.041 l

85.241 447.761 l

85.241 447.881 l

86.92101 445.841 l

88.841 444.161 l

88.72099 444.161 l

91.121 442.961 l

93.64101 442.241 l

96.28101 441.881 l

96.161 441.881 l

98.92101 442.241 l

101.44099 442.961 l

101.321 442.961 l

103.601 444.161 l

105.64101 445.841 l

107.321 447.881 l

107.201 447.761 l

108.401 450.041 l

109.241 452.561 l

109.241 452.44099 l

109.481 455.201 l

109.481 473.201 l

109.241 475.961 l

108.401 478.481 l

108.401 478.36099 l

107.201 480.64101 l

107.321 480.64101 l

105.64101 482.681 l

103.601 484.241 l

101.321 485.561 l

101.44099 485.44099 l

98.92101 486.161 l

96.161 486.521 l

96.28101 486.521 l

93.64101 486.161 l

91.121 485.44099 l

88.72099 484.121 l

88.841 484.241 l

86.92101 482.681 l

85.241 480.64101 l

84.041 478.36099 l

84.041 478.481 l

83.201 475.961 l

82.961 473.201 l

82.961 455.201 l

82.481 455.201 l

82.481 473.201 l

82.72099 475.961 l

82.72099 476.08099 l

83.561 478.601 l

84.761 480.881 l

84.881 481.00101 l

86.561 483.041 l

88.481 484.601 l

90.881 485.92101 l

91.00101 485.92101 l

93.521 486.64101 l

96.161 487.00101 l

96.28101 487.00101 l

99.041 486.64101 l

101.561 485.92101 l

103.841 484.601 l

105.881 483.041 l

106.00101 483.041 l

107.681 481.00101 l

107.681 480.881 l

108.881 478.601 l

109.72099 476.08099 l

109.72099 475.961 l

109.961 473.201 l

109.961 455.201 l

109.72099 452.44099 l

108.881 449.92101 l

108.881 449.80099 l

107.681 447.521 l

106.00101 445.481 l

103.961 443.80099 l

103.841 443.681 l

101.561 442.481 l

99.041 441.761 l

96.28101 441.401 l

96.161 441.401 l

93.521 441.761 l

91.00101 442.481 l

90.881 442.481 l

88.481 443.681 l

88.481 443.80099 l

86.561 445.481 l

84.881 447.521 l

84.761 447.521 l

83.561 449.80099 l

83.561 449.92101 l

82.72099 452.44099 l

82.481 455.201 l

f 

82.961 455.201 m

82.481 455.201 l

f 

BT

0 11.16 -11.16 0 101.20061 448.12061 Tm

(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%EOF


%%EndDocument
 @endspecial 2345 635 a(\(a\))26 b(A)f(Pip)r(eline.)2055
1202 y @beginspecial 43 @llx 183 @lly 324 @urx 302 @ury
1296 @rwi @setspecial
%%BeginDocument: basic-splitjoin.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (fft.fm)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.1.1)

%%CreationDate: (D:20010725163731)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 43 183 324 302

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



43 183 moveto

324 183 lineto

324 302 lineto

43 302 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 3

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 

/? /! /| /: /+ /GetGlyphDirectory

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/OP here { /_OP? xdd } if

/op here { /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/OPM here { /_opmode xdd } if

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 5

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

<</MaxFormItem 0>> setuserparams

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor }

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/sfc {

_op? setoverprint

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_OP? setoverprint

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset spots

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Predefined (named) spot functions for PDF

21 dict dup begin

/CosineDot

{ 180 mul cos exch 180 mul cos add 2 div } bd

/Cross

{ abs exch abs 2 copy gt { exch } if pop neg } bd

/Diamond

{ abs exch abs 2 copy add .75 le

{ dup mul exch dup mul add 1 exch sub }

{ 2 copy add 1.23 le

{ .85 mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse }

ifelse } bd

/Double

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd

/DoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add } bd

/Ellipse

{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt

{ pop dup mul exch .75 div dup mul add 4 div

1 exch sub }

{ dup 1 gt

{pop 1 exch sub dup mul exch 1 exch sub

.75 div dup mul add 4 div 1 sub }

{ .5 exch sub exch pop exch pop }

ifelse }

ifelse } bd

/EllipseA

{ dup mul .9 mul exch dup mul add 1 exch sub } bd

/EllipseB

{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd

/EllipseC

{ dup mul exch dup mul .9 mul add 1 exch sub } bd

/InvertedDouble

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedDoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedEllipseA

{ dup mul .9 mul exch dup mul add 1 sub } bd

/InvertedEllipseC

{ dup mul exch dup mul .9 mul add 1 sub } bd

/InvertedSimpleDot

{ dup mul exch dup mul add 1 sub } bd

/Line

{ exch pop abs neg } bd

/LineX

{ pop } bd

/LineY

{ exch pop } bd

/Rhomboid

{ abs exch abs 0.9 mul add 2 div } bd

/Round

{ abs exch abs 2 copy add 1 le

{ dup mul exch dup mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse } bd

/SimpleDot

{ dup mul exch dup mul add 1 exch sub } bd

/Square

{ abs exch abs 2 copy lt { exch } if pop neg } bd

end

{ /Function defineRes pop } forall

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 2

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

dup {currentfont /Encoding get dup length 33 ge 

{32 get /space eq and}{pop}ifelse

}if

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

_intT

{currentpoint iTm moveto}

if

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font GCMMPK+Arial

11 dict begin

/FontName /GCMMPK+Arial def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc

e507fc6806f8e507090e ND 

/space 5 RD 

8bf7aa0d0e ND 

/parenleft 74 RD 

c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9

9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37

ac3908ad38b444bb4e08ca06090e ND 

/parenright 73 RD 

c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c

06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb

3008ca06bbc8b4d3addd08090e ND 

/asterisk 97 RD 

aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168

9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08

91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382

b583088a06090e ND 

/plus 43 RD 

c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57

063907f75706fb5807de06090e ND 

/comma 47 RD 

def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208

99a191a98bb008ef0727062707bd06090e ND 

/hyphen 21 RD 

abf7e10df7a3f76b15e307fba4063307f7a406090e ND 

/period 16 RD 

e6f7aa0def16ef0727062707ef06090e ND 

/zero 163 RD 

b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe

93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992

658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba

4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a

088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a

088bf70a9adca9b7088a07090e ND 

/one 52 RD 

f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694

aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 

/two 148 RD 

a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6

a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55

7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b

ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567

706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 

/three 207 RD 

b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8

7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa

7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050

08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b

6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e

9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b

08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 

/four 55 RD 

98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb

06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 

/five 136 RD 

b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf

76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7

0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5

6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b

ad84b8082f8405914fa35bb36608090e ND 

/six 211 RD 

b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e

088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208

9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d

7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e

a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99

b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b

08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809

0e ND 

/seven 68 RD 

baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308

e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689

3705f7f38a05090e ND 

/equal 35 RD 

c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c

06dd07090e ND 

/A 67 RD 

8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd

6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88

06daf76505090e ND 

/B 215 RD 

d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8

91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8

8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60

05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890

768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d

0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889

758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606

f78b07090e ND 

/C 157 RD 

bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808

7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b

b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d

8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0

5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f

725e676c08090e ND 

/D 147 RD 

d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5

9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d

6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4

8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379

6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 

/E 42 RD 

daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df

07fc9906fd6007f8aa06090e ND 

/F 35 RD 

ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60

07ea06090e ND 

/H 40 RD 

dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb

072c06fd6007ea06090e ND 

/I 18 RD 

e8f7aa0dea16f960072c06fd6007ea06090e ND 

/J 90 RD 

a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac

91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177

85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e

 ND 

/L 25 RD 

d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 

/Q 197 RD 

b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08

56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46

994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e

be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9

78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08

bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25

6f3f53580869aa5da1549a08754705090e ND 

/R 160 RD 

daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b

9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f

977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70

a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180

a37508a676966f8b69088b7385767e77087e78787c73820874836986608b

08fb61068cf78105090e ND 

/S 246 RD 

b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e

aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a

3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b

08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462

9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708

8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d

a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85

678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97

60a46508090e ND 

/T 30 RD 

a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e

 ND 

/W 101 RD 

97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6

05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824

f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527

06f752fd6005ed8a05090e ND 

/bracketleft 31 RD 

cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609

0e ND 

/bracketright 31 RD 

9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709

0e ND 

/a 258 RD 

aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6

889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f

08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4

8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308

698670877a860874867681787e08787e7c7a7f7608807785738b72088b60

9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275

9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369

8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108

9a92a590af9008cb96bb95ab98086b07090e ND 

/b 138 RD 

ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf

86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74

665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab

7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f

b8087ba682b88bc9088bcb99bba7ac08090e ND 

/c 135 RD 

b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b

d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805

81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62

815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9

94c608359705855f7c6b747608090e ND 

/d 146 RD 

adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e

8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6

6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab

ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c

658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 

/e 144 RD 

b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8

15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08

5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8

a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b

af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 

/g 200 RD 

abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c

ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470

6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1

b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08

7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4

8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a

9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 

/h 92 RD 

cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08

ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e

a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306

090e ND 

/i 32 RD 

cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306

090e ND 

/k 52 RD 

cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505

fb0706fb62fb670589f82c05350689fd6005e406090e ND 

/l 18 RD 

cbf7720de316f960073306fd6007e306090e ND 

/m 157 RD 

cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08

ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4

a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07

e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2

729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689

fc9b05e406090e ND 

/n 99 RD 

cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008

9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886

a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c

06fc9b07e38a05090e ND 

/o 133 RD 

acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2

95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45

8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9

69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c

bc8bcd088bce9abca8ac08090e ND 

/p 153 RD 

cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af

a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208

6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306

09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58

6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af

08090e ND 

/q 141 RD 

aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608

6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b

a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08

b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b

6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 

/r 72 RD 

ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08

a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766

08db073c06fc9b07e306090e ND 

/s 232 RD 

aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3

93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193

828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b

08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c

97086c976891628b086f8b7288738408758378837d8108797e7d7b807708

807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d

a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94

759e08749d7ea686ae08347d059554a262ae6f08090e ND 

/t 98 RD 

9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7

c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68

927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e

8b818b088c06090e ND 

/u 106 RD 

cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873

7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307

3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786

aa8b08d08bc2a8b3c6083e07da06090e ND 

/w 74 RD 

8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0

056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7

bf052f06f731fc9b05e88c05090e ND 

/y 116 RD 

9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7

5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005

2d06f759fc9d058782888489860881688175858208848081827f84088084

7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/GCMMPK+Arial findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 42 /asterisk put

dup 43 /plus put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 61 /equal put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 72 /H put

dup 73 /I put

dup 74 /J put

dup 76 /L put

dup 81 /Q put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 87 /W put

dup 91 /bracketleft put

dup 93 /bracketright put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N71/GCMMPK+Arial 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

43 183 281 119 re W n

[ 0 -1 1 0 -140 345 ] concat

/N62 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

/N83 <<

/SA false 

/OP false 

/op false 

/OPM 1 

/BG /_defaultblackgeneration load 

/UCR /_defaultundercolorremoval load 

/TR /_defaulttransfer load 

/SM 0.02 

>> /ExtGState defineRes pop

/N62 /ColorSpace findRes cs

0 0 0 scn

/N83 /ExtGState findRes gs

1 i

118.72099 378.521 m

118.481 378.28101 l

118.36099 377.80099 l

118.36099 377.44099 l

118.601 377.08099 l

118.841 376.841 l

119.201 376.72099 l

119.681 376.841 l

120.041 376.961 l

120.28101 377.321 l

120.28101 378.041 l

120.161 378.401 l

119.80099 378.64101 l

119.44099 378.761 l

119.08099 378.761 l

118.72099 378.521 l

f* 

120.041 376.481 m

117.041 376.00101 l

116.80099 375.761 l

116.561 376.241 l

112.601 385.00101 l

111.881 386.681 l

113.321 385.601 l

121.241 380.201 l

121.481 380.08099 l

121.36099 379.72099 l

120.761 379.481 l

112.841 384.881 l

113.321 385.601 l

113.561 385.481 l

117.521 376.72099 l

116.561 376.241 l

116.92101 376.961 l

119.92101 377.44099 l

f 

121.36099 379.72099 m

120.401 376.841 l

120.401 376.601 l

120.041 376.481 l

119.561 377.201 l

120.521 380.08099 l

f 

120.041 376.961 m

117.041 376.481 l

113.08099 385.241 l

121.00101 379.841 l

f* 

120.161 378.521 m

119.561 379.241 l

118.00101 377.92101 l

118.601 377.201 l

f 

147.041 346.121 m

147.64101 345.401 l

146.08099 344.08099 l

145.481 344.80099 l

f 

120.161 378.521 m

118.601 377.201 l

145.481 344.80099 l

147.041 346.121 l

f 

85.00101 379.00101 m

84.64101 379.241 l

84.28101 379.241 l

83.92101 379.121 l

83.561 378.881 l

83.321 378.521 l

83.321 378.161 l

83.44099 377.80099 l

83.681 377.44099 l

84.041 377.321 l

84.761 377.321 l

85.121 377.681 l

85.241 377.92101 l

85.36099 378.401 l

85.241 378.761 l

85.00101 379.00101 l

f* 

83.321 377.321 m

82.241 380.201 l

82.00101 380.561 l

82.36099 380.681 l

90.28101 386.08099 l

91.72099 387.161 l

91.00101 385.481 l

87.161 376.72099 l

87.041 376.481 l

86.681 376.481 l

86.201 377.201 l

90.041 385.961 l

91.00101 385.481 l

90.761 385.36099 l

82.841 379.961 l

82.36099 380.681 l

83.08099 380.561 l

84.161 377.681 l

f 

86.681 376.481 m

83.681 376.961 l

83.321 377.08099 l

83.321 377.321 l

83.80099 377.92101 l

86.80099 377.44099 l

f 

83.681 377.44099 m

82.601 380.321 l

90.521 385.72099 l

86.681 376.961 l

f* 

85.121 377.681 m

85.72099 378.401 l

84.161 379.72099 l

83.561 379.00101 l

f 

58.36099 345.401 m

57.761 344.681 l

56.201 346.00101 l

56.80099 346.72099 l

f 

85.121 377.681 m

83.561 379.00101 l

56.80099 346.72099 l

58.36099 345.401 l

f 

140.92101 292.601 m

140.681 292.72099 l

140.201 292.841 l

139.841 292.72099 l

139.601 292.481 l

139.36099 292.121 l

139.36099 291.64101 l

139.481 291.28101 l

139.72099 291.041 l

140.08099 290.80099 l

140.44099 290.80099 l

140.80099 290.92101 l

141.161 291.161 l

141.28101 291.521 l

141.28101 292.241 l

140.92101 292.601 l

f* 

139.36099 290.92101 m

138.28101 293.80099 l

138.041 294.161 l

138.401 294.28101 l

146.321 299.681 l

147.761 300.761 l

147.041 299.08099 l

143.201 290.201 l

143.08099 289.961 l

142.72099 289.961 l

142.241 290.681 l

146.08099 299.561 l

147.041 299.08099 l

146.80099 298.961 l

138.881 293.561 l

138.401 294.28101 l

139.121 294.161 l

140.201 291.28101 l

f 

142.72099 289.961 m

139.72099 290.561 l

139.36099 290.681 l

139.36099 290.92101 l

139.841 291.521 l

142.841 290.92101 l

f 

139.72099 291.041 m

138.64101 293.92101 l

146.561 299.321 l

142.72099 290.44099 l

f* 

112.72099 260.201 m

112.121 259.481 l

113.681 258.161 l

114.28101 258.881 l

f 

139.601 292.481 m

140.201 293.201 l

141.761 291.881 l

141.161 291.161 l

f 

112.72099 260.201 m

114.28101 258.881 l

141.161 291.161 l

139.601 292.481 l

f 

65.681 292.00101 m

65.44099 291.761 l

65.321 291.401 l

65.561 290.681 l

65.92101 290.44099 l

66.28101 290.321 l

66.64101 290.321 l

67.00101 290.561 l

67.241 290.80099 l

67.36099 291.161 l

67.121 291.881 l

66.761 292.121 l

66.401 292.241 l

66.041 292.241 l

65.681 292.00101 l

f* 

67.00101 290.08099 m

64.00101 289.481 l

63.64101 289.36099 l

63.521 289.72099 l

59.681 298.481 l

58.961 300.161 l

60.401 299.08099 l

68.321 293.681 l

68.561 293.561 l

68.44099 293.201 l

67.841 292.961 l

59.92101 298.36099 l

60.401 299.08099 l

60.64101 298.961 l

64.481 290.201 l

63.521 289.72099 l

63.881 290.44099 l

66.881 291.041 l

f 

68.44099 293.201 m

67.36099 290.44099 l

67.36099 290.201 l

67.00101 290.08099 l

66.521 290.80099 l

67.601 293.561 l

f 

67.00101 290.561 m

64.00101 289.961 l

60.161 298.72099 l

68.08099 293.321 l

f* 

92.44099 258.401 m

93.041 257.681 l

94.601 259.00101 l

94.00101 259.72099 l

f 

65.681 290.681 m

65.08099 291.401 l

66.64101 292.72099 l

67.241 292.00101 l

f 

92.44099 258.401 m

94.00101 259.72099 l

67.241 292.00101 l

65.681 290.681 l

f 

100.72099 426.041 2.03999 0.96001 rf

100.72099 463.481 2.03999 -0.96001 rf

100.72099 427.00101 2.03999 35.52 rf

102.761 209.44099 m

102.28101 209.44099 l

102.041 209.201 l

101.80099 208.841 l

101.681 208.481 l

101.80099 208.121 l

102.041 207.761 l

102.28101 207.521 l

103.121 207.521 l

103.36099 207.761 l

103.601 208.121 l

103.72099 208.481 l

103.601 208.841 l

103.36099 209.201 l

103.121 209.44099 l

102.761 209.44099 l

f* 

102.521 207.161 m

99.881 208.601 l

99.521 208.601 l

99.64101 209.08099 l

102.761 220.00101 l

105.881 209.08099 l

106.00101 208.841 l

105.64101 208.601 l

104.92101 208.841 l

102.28101 218.08099 l

103.241 218.321 l

103.241 218.08099 l

100.601 208.841 l

99.64101 209.08099 l

100.36099 209.44099 l

103.00101 208.00101 l

f 

105.64101 208.601 m

103.00101 207.161 l

102.761 207.041 l

102.521 207.161 l

102.521 208.00101 l

105.161 209.44099 l

f 

102.761 207.521 m

100.121 208.961 l

102.761 218.201 l

105.401 208.961 l

f* 

101.80099 183.521 2.03999 0.96001 rf

101.80099 209.44099 2.03999 -0.96001 rf

101.80099 184.481 2.03999 24 rf

1 1 1 scn

134.201 314.201 m

134.44099 311.44099 l

135.28101 308.92101 l

136.481 306.64101 l

138.161 304.601 l

140.201 302.92101 l

142.481 301.72099 l

145.00101 300.881 l

147.761 300.64101 l

150.401 300.881 l

152.92101 301.72099 l

155.201 302.92101 l

157.241 304.601 l

158.92101 306.64101 l

160.121 308.92101 l

160.961 311.44099 l

161.201 314.201 l

161.201 332.201 l

160.961 334.961 l

160.121 337.481 l

158.92101 339.761 l

157.241 341.80099 l

155.201 343.36099 l

152.92101 344.681 l

150.401 345.401 l

147.761 345.761 l

145.00101 345.401 l

142.481 344.681 l

140.201 343.36099 l

138.161 341.80099 l

136.481 339.761 l

135.28101 337.481 l

134.44099 334.961 l

134.201 332.201 l

134.201 314.201 l

f* 

0 0 0 scn

134.44099 314.201 m

134.681 311.44099 l

134.681 311.561 l

135.521 309.041 l

136.72099 306.761 l

136.72099 306.881 l

138.401 304.841 l

140.44099 303.161 l

140.321 303.161 l

142.601 301.961 l

145.121 301.121 l

145.00101 301.121 l

147.761 300.881 l

150.401 301.121 l

152.92101 301.961 l

152.80099 301.961 l

155.08099 303.161 l

157.121 304.841 l

158.80099 306.881 l

158.681 306.761 l

159.881 309.041 l

160.72099 311.561 l

160.72099 311.44099 l

160.961 314.201 l

160.961 332.201 l

160.72099 334.961 l

159.881 337.481 l

159.881 337.36099 l

158.681 339.64101 l

158.80099 339.64101 l

157.121 341.681 l

155.08099 343.241 l

152.80099 344.561 l

152.92101 344.44099 l

150.401 345.161 l

147.761 345.521 l

147.881 345.521 l

145.121 345.161 l

142.601 344.44099 l

142.601 344.561 l

140.321 343.241 l

138.28101 341.681 l

138.401 341.681 l

136.72099 339.64101 l

135.521 337.36099 l

135.521 337.481 l

134.681 334.961 l

134.44099 332.201 l

134.44099 314.201 l

133.961 314.201 l

133.961 332.201 l

134.201 334.961 l

134.201 335.08099 l

135.041 337.601 l

136.241 339.881 l

136.36099 340.00101 l

138.041 342.041 l

140.08099 343.601 l

142.36099 344.92101 l

142.481 344.92101 l

145.00101 345.64101 l

147.761 346.00101 l

147.881 346.00101 l

150.521 345.64101 l

153.041 344.92101 l

155.321 343.601 l

157.36099 342.041 l

157.481 342.041 l

159.161 340.00101 l

159.161 339.881 l

160.36099 337.601 l

161.201 335.08099 l

161.201 334.961 l

161.44099 332.201 l

161.44099 314.201 l

161.201 311.44099 l

160.36099 308.92101 l

160.36099 308.80099 l

159.161 306.521 l

157.481 304.481 l

155.44099 302.80099 l

155.321 302.681 l

153.041 301.481 l

150.521 300.64101 l

150.401 300.64101 l

147.761 300.401 l

145.00101 300.64101 l

142.481 301.481 l

142.36099 301.481 l

140.08099 302.681 l

140.08099 302.80099 l

138.041 304.481 l

136.36099 306.521 l

136.241 306.521 l

135.041 308.80099 l

135.041 308.92101 l

134.201 311.44099 l

133.961 314.201 l

f 

134.44099 314.201 m

133.961 314.201 l

f 

BT

/N71 1 Tf

0 11.16 -11.16 0 152.6806 307.12061 Tm

-0.0433 Tc

0 Tw

(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 

ET

1 1 1 scn

44.201 314.201 m

44.44099 311.44099 l

45.28101 308.92101 l

46.481 306.64101 l

48.161 304.601 l

50.201 302.92101 l

52.481 301.72099 l

55.00101 300.881 l

57.761 300.64101 l

60.401 300.881 l

62.92101 301.72099 l

65.201 302.92101 l

67.241 304.601 l

68.92101 306.64101 l

70.121 308.92101 l

70.961 311.44099 l

71.201 314.201 l

71.201 332.201 l

70.961 334.961 l

70.121 337.481 l

68.92101 339.761 l

67.241 341.80099 l

65.201 343.36099 l

62.92101 344.681 l

60.401 345.401 l

57.761 345.761 l

55.00101 345.401 l

52.481 344.681 l

50.201 343.36099 l

48.161 341.80099 l

46.481 339.761 l

45.28101 337.481 l

44.44099 334.961 l

44.201 332.201 l

44.201 314.201 l

f* 

0 0 0 scn

44.44099 314.201 m

44.681 311.44099 l

44.681 311.561 l

45.521 309.041 l

46.72099 306.761 l

46.72099 306.881 l

48.401 304.841 l

50.44099 303.161 l

50.321 303.161 l

52.601 301.961 l

55.121 301.121 l

55.00101 301.121 l

57.761 300.881 l

60.401 301.121 l

62.92101 301.961 l

62.80099 301.961 l

65.08099 303.161 l

67.121 304.841 l

68.80099 306.881 l

68.681 306.761 l

69.881 309.041 l

70.72099 311.561 l

70.72099 311.44099 l

70.961 314.201 l

70.961 332.201 l

70.72099 334.961 l

69.881 337.481 l

69.881 337.36099 l

68.681 339.64101 l

68.80099 339.64101 l

67.121 341.681 l

65.08099 343.241 l

62.80099 344.561 l

62.92101 344.44099 l

60.401 345.161 l

57.761 345.521 l

57.881 345.521 l

55.121 345.161 l

52.601 344.44099 l

52.601 344.561 l

50.321 343.241 l

48.28101 341.681 l

48.401 341.681 l

46.72099 339.64101 l

45.521 337.36099 l

45.521 337.481 l

44.681 334.961 l

44.44099 332.201 l

44.44099 314.201 l

43.961 314.201 l

43.961 332.201 l

44.201 334.961 l

44.201 335.08099 l

45.041 337.601 l

46.241 339.881 l

46.36099 340.00101 l

48.041 342.041 l

50.08099 343.601 l

52.36099 344.92101 l

52.481 344.92101 l

55.00101 345.64101 l

57.761 346.00101 l

57.881 346.00101 l

60.521 345.64101 l

63.041 344.92101 l

65.321 343.601 l

67.36099 342.041 l

67.481 342.041 l

69.161 340.00101 l

69.161 339.881 l

70.36099 337.601 l

71.201 335.08099 l

71.201 334.961 l

71.44099 332.201 l

71.44099 314.201 l

71.201 311.44099 l

70.36099 308.92101 l

70.36099 308.80099 l

69.161 306.521 l

67.481 304.481 l

65.44099 302.80099 l

65.321 302.681 l

63.041 301.481 l

60.521 300.64101 l

60.401 300.64101 l

57.761 300.401 l

55.00101 300.64101 l

52.481 301.481 l

52.36099 301.481 l

50.08099 302.681 l

50.08099 302.80099 l

48.041 304.481 l

46.36099 306.521 l

46.241 306.521 l

45.041 308.80099 l

45.041 308.92101 l

44.201 311.44099 l

43.961 314.201 l

f 

44.44099 314.201 m

43.961 314.201 l

f 

BT

0 11.16 -11.16 0 62.6806 307.12061 Tm

(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 

ET

1 1 1 scn

88.241 395.44099 m

88.481 392.681 l

89.321 390.161 l

90.521 387.881 l

92.201 385.841 l

94.121 384.161 l

96.401 382.961 l

99.041 382.121 l

101.681 381.881 l

104.44099 382.121 l

106.961 382.961 l

109.241 384.161 l

111.28101 385.841 l

112.841 387.881 l

114.161 390.161 l

114.881 392.681 l

115.241 395.44099 l

115.241 413.44099 l

114.881 416.201 l

114.161 418.72099 l

112.841 421.00101 l

111.28101 423.041 l

109.241 424.601 l

106.961 425.92101 l

104.44099 426.64101 l

101.681 427.00101 l

99.041 426.64101 l

96.401 425.92101 l

94.121 424.601 l

92.201 423.041 l

90.521 421.00101 l

89.321 418.72099 l

88.481 416.201 l

88.241 413.44099 l

88.241 395.44099 l

f* 

0 0 0 scn

88.481 395.44099 m

88.72099 392.681 l

88.72099 392.80099 l

89.561 390.28101 l

90.761 388.00101 l

90.761 388.121 l

92.44099 386.08099 l

94.36099 384.401 l

94.241 384.401 l

96.521 383.201 l

99.161 382.36099 l

99.041 382.36099 l

101.681 382.121 l

104.44099 382.36099 l

106.961 383.201 l

106.841 383.201 l

109.121 384.401 l

111.161 386.08099 l

111.161 385.961 l

112.72099 388.00101 l

114.041 390.28101 l

113.92101 390.28101 l

114.64101 392.80099 l

115.00101 395.561 l

115.00101 395.44099 l

115.00101 413.44099 l

114.64101 416.201 l

113.92101 418.72099 l

114.041 418.601 l

112.72099 420.881 l

111.161 422.92101 l

109.121 424.481 l

106.841 425.80099 l

106.961 425.681 l

104.44099 426.401 l

101.681 426.761 l

101.80099 426.761 l

99.161 426.401 l

96.521 425.681 l

96.521 425.80099 l

94.241 424.481 l

94.36099 424.481 l

92.44099 422.92101 l

90.761 420.881 l

89.561 418.601 l

89.561 418.72099 l

88.72099 416.201 l

88.481 413.44099 l

88.481 395.44099 l

88.00101 395.44099 l

88.00101 413.44099 l

88.241 416.201 l

88.241 416.321 l

89.08099 418.841 l

90.28101 421.121 l

90.401 421.241 l

92.08099 423.28101 l

94.00101 424.841 l

96.28101 426.161 l

96.401 426.161 l

99.041 426.881 l

101.681 427.241 l

101.80099 427.241 l

104.561 426.881 l

107.08099 426.161 l

109.36099 424.841 l

111.401 423.28101 l

111.521 423.161 l

113.08099 421.121 l

114.401 418.841 l

115.121 416.321 l

115.481 413.561 l

115.481 395.44099 l

115.121 392.681 l

114.401 390.161 l

114.401 390.041 l

113.08099 387.761 l

111.521 385.72099 l

109.481 384.041 l

109.36099 383.92101 l

107.08099 382.72099 l

104.561 381.881 l

104.44099 381.881 l

101.681 381.64101 l

99.041 381.881 l

96.401 382.72099 l

96.28101 382.72099 l

94.00101 383.92101 l

94.00101 384.041 l

92.08099 385.72099 l

90.401 387.761 l

90.28101 387.761 l

89.08099 390.041 l

89.08099 390.161 l

88.241 392.681 l

88.00101 395.44099 l

f 

88.481 395.44099 m

88.00101 395.44099 l

f 

BT

0 14.39999 -14.39999 0 107.6806 389.56059 Tm

0.0014 Tc

(Jo)Tj [7.60001 ]TJ (in)Tj 

ET

1 1 1 scn

89.681 232.601 m

89.92101 229.961 l

90.761 227.44099 l

91.961 225.161 l

93.64101 223.121 l

95.681 221.44099 l

97.961 220.241 l

100.481 219.401 l

103.241 219.161 l

105.881 219.401 l

108.521 220.241 l

110.80099 221.44099 l

112.72099 223.121 l

114.401 225.161 l

115.601 227.44099 l

116.44099 229.961 l

116.681 232.601 l

116.681 250.72099 l

116.44099 253.481 l

115.601 256.00101 l

114.401 258.28101 l

112.72099 260.201 l

110.80099 261.881 l

108.521 263.201 l

105.881 263.92101 l

103.241 264.161 l

100.481 263.92101 l

97.961 263.201 l

95.681 261.881 l

93.64101 260.201 l

91.961 258.28101 l

90.761 256.00101 l

89.92101 253.481 l

89.681 250.72099 l

89.681 232.601 l

f* 

0 0 0 scn

89.92101 232.601 m

90.161 229.961 l

90.161 230.08099 l

91.00101 227.561 l

92.201 225.28101 l

92.201 225.401 l

93.881 223.36099 l

95.92101 221.681 l

95.80099 221.681 l

98.08099 220.481 l

100.601 219.64101 l

100.481 219.64101 l

103.241 219.401 l

105.881 219.64101 l

108.521 220.481 l

108.401 220.481 l

110.681 221.681 l

112.601 223.36099 l

114.28101 225.401 l

114.161 225.28101 l

115.36099 227.561 l

116.201 230.08099 l

116.201 229.961 l

116.44099 232.601 l

116.44099 250.72099 l

116.201 253.481 l

115.36099 256.00101 l

115.36099 255.881 l

114.161 258.161 l

114.28101 258.161 l

112.601 260.08099 l

110.681 261.761 l

108.401 263.08099 l

108.521 262.961 l

105.881 263.681 l

103.241 263.92101 l

100.481 263.681 l

100.601 263.681 l

98.08099 262.961 l

98.08099 263.08099 l

95.80099 261.761 l

95.92101 261.761 l

93.881 260.08099 l

92.201 258.161 l

91.00101 255.881 l

91.00101 256.00101 l

90.161 253.481 l

89.92101 250.72099 l

89.92101 232.601 l

89.44099 232.601 l

89.44099 250.72099 l

89.681 253.481 l

89.681 253.601 l

90.521 256.121 l

91.72099 258.401 l

91.841 258.521 l

93.521 260.44099 l

95.561 262.121 l

97.841 263.44099 l

97.961 263.44099 l

100.481 264.161 l

103.241 264.401 l

105.881 264.161 l

106.00101 264.161 l

108.64101 263.44099 l

110.92101 262.121 l

111.041 262.121 l

112.961 260.44099 l

114.64101 258.521 l

114.64101 258.401 l

115.841 256.121 l

116.681 253.601 l

116.681 253.481 l

116.92101 250.72099 l

116.92101 232.601 l

116.681 229.961 l

115.841 227.44099 l

115.841 227.321 l

114.64101 225.041 l

112.961 223.00101 l

111.041 221.321 l

110.92101 221.201 l

108.64101 220.00101 l

106.00101 219.161 l

105.881 219.161 l

103.241 218.92101 l

100.481 219.161 l

97.961 220.00101 l

97.841 220.00101 l

95.561 221.201 l

95.561 221.321 l

93.521 223.00101 l

91.841 225.041 l

91.72099 225.041 l

90.521 227.321 l

90.521 227.44099 l

89.681 229.961 l

89.44099 232.601 l

f 

89.92101 232.601 m

89.44099 232.601 l

f 

BT

0 14.39999 -14.39999 0 109.12061 229.3606 Tm

0.00101 Tc

(Spl)Tj [6.5 ]TJ (i)Tj [-1.8 ]TJ (t)Tj 

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%EOF


%%EndDocument
 @endspecial 2329 1294 a(\(b\))g(A)g(SplitJoin.)2055
1793 y @beginspecial 61 @llx 150 @lly 372 @urx 262 @ury
1296 @rwi @setspecial
%%BeginDocument: basic-feedback.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (fft.fm)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.1.1)

%%CreationDate: (D:20010725164412)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 61 150 372 262

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



61 150 moveto

372 150 lineto

372 262 lineto

61 262 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 3

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 

/? /! /| /: /+ /GetGlyphDirectory

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/OP here { /_OP? xdd } if

/op here { /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/OPM here { /_opmode xdd } if

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 5

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

<</MaxFormItem 0>> setuserparams

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor }

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/sfc {

_op? setoverprint

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_OP? setoverprint

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset spots

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Predefined (named) spot functions for PDF

21 dict dup begin

/CosineDot

{ 180 mul cos exch 180 mul cos add 2 div } bd

/Cross

{ abs exch abs 2 copy gt { exch } if pop neg } bd

/Diamond

{ abs exch abs 2 copy add .75 le

{ dup mul exch dup mul add 1 exch sub }

{ 2 copy add 1.23 le

{ .85 mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse }

ifelse } bd

/Double

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd

/DoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add } bd

/Ellipse

{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt

{ pop dup mul exch .75 div dup mul add 4 div

1 exch sub }

{ dup 1 gt

{pop 1 exch sub dup mul exch 1 exch sub

.75 div dup mul add 4 div 1 sub }

{ .5 exch sub exch pop exch pop }

ifelse }

ifelse } bd

/EllipseA

{ dup mul .9 mul exch dup mul add 1 exch sub } bd

/EllipseB

{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd

/EllipseC

{ dup mul exch dup mul .9 mul add 1 exch sub } bd

/InvertedDouble

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedDoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedEllipseA

{ dup mul .9 mul exch dup mul add 1 sub } bd

/InvertedEllipseC

{ dup mul exch dup mul .9 mul add 1 sub } bd

/InvertedSimpleDot

{ dup mul exch dup mul add 1 sub } bd

/Line

{ exch pop abs neg } bd

/LineX

{ pop } bd

/LineY

{ exch pop } bd

/Rhomboid

{ abs exch abs 0.9 mul add 2 div } bd

/Round

{ abs exch abs 2 copy add 1 le

{ dup mul exch dup mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse } bd

/SimpleDot

{ dup mul exch dup mul add 1 exch sub } bd

/Square

{ abs exch abs 2 copy lt { exch } if pop neg } bd

end

{ /Function defineRes pop } forall

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 2

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

dup {currentfont /Encoding get dup length 33 ge 

{32 get /space eq and}{pop}ifelse

}if

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

_intT

{currentpoint iTm moveto}

if

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font GIONOK+Arial

11 dict begin

/FontName /GIONOK+Arial def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc

e507fc6806f8e507090e ND 

/space 5 RD 

8bf7aa0d0e ND 

/parenleft 74 RD 

c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9

9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37

ac3908ad38b444bb4e08ca06090e ND 

/parenright 73 RD 

c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c

06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb

3008ca06bbc8b4d3addd08090e ND 

/asterisk 97 RD 

aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168

9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08

91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382

b583088a06090e ND 

/plus 43 RD 

c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57

063907f75706fb5807de06090e ND 

/comma 47 RD 

def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208

99a191a98bb008ef0727062707bd06090e ND 

/hyphen 21 RD 

abf7e10df7a3f76b15e307fba4063307f7a406090e ND 

/period 16 RD 

e6f7aa0def16ef0727062707ef06090e ND 

/zero 163 RD 

b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe

93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992

658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba

4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a

088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a

088bf70a9adca9b7088a07090e ND 

/one 52 RD 

f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694

aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 

/two 148 RD 

a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6

a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55

7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b

ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567

706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 

/three 207 RD 

b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8

7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa

7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050

08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b

6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e

9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b

08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 

/four 55 RD 

98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb

06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 

/five 136 RD 

b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf

76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7

0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5

6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b

ad84b8082f8405914fa35bb36608090e ND 

/six 211 RD 

b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e

088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208

9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d

7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e

a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99

b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b

08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809

0e ND 

/seven 68 RD 

baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308

e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689

3705f7f38a05090e ND 

/equal 35 RD 

c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c

06dd07090e ND 

/A 67 RD 

8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd

6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88

06daf76505090e ND 

/B 215 RD 

d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8

91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8

8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60

05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890

768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d

0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889

758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606

f78b07090e ND 

/C 157 RD 

bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808

7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b

b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d

8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0

5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f

725e676c08090e ND 

/D 147 RD 

d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5

9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d

6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4

8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379

6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 

/E 42 RD 

daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df

07fc9906fd6007f8aa06090e ND 

/F 35 RD 

ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60

07ea06090e ND 

/H 40 RD 

dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb

072c06fd6007ea06090e ND 

/I 18 RD 

e8f7aa0dea16f960072c06fd6007ea06090e ND 

/J 90 RD 

a6f8880dbdb515ac67bb79ca8b08b58bb094aa9c08ab9ca1a499ac089cac

91b98bc708f87c072c06fc82078b63886d8578088378807c7a8008798177

85738b086b8b7295799f0878a081b089c208367f058a449b55ac6708090e

 ND 

/L 25 RD 

d4f8c00df85316df07fbf406f90c072c06fd6007f85306090e ND 

/Q 197 RD 

b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08

56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46

994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e

be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9

78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08

bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25

6f3f53580869aa5da1549a08754705090e ND 

/R 160 RD 

daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b

9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f

977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70

a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180

a37508a676966f8b69088b7385767e77087e78787c73820874836986608b

08fb61068cf78105090e ND 

/S 246 RD 

b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e

aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a

3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b

08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462

9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708

8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d

a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85

678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97

60a46508090e ND 

/T 30 RD 

a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e

 ND 

/W 101 RD 

97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6

05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824

f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527

06f752fd6005ed8a05090e ND 

/bracketleft 31 RD 

cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609

0e ND 

/bracketright 31 RD 

9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709

0e ND 

/a 258 RD 

aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6

889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f

08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4

8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308

698670877a860874867681787e08787e7c7a7f7608807785738b72088b60

9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275

9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369

8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108

9a92a590af9008cb96bb95ab98086b07090e ND 

/b 138 RD 

ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf

86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74

665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab

7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f

b8087ba682b88bc9088bcb99bba7ac08090e ND 

/c 135 RD 

b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b

d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805

81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62

815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9

94c608359705855f7c6b747608090e ND 

/d 146 RD 

adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e

8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6

6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab

ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c

658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 

/e 144 RD 

b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8

15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08

5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8

a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b

af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 

/g 200 RD 

abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c

ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470

6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1

b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08

7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4

8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a

9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 

/h 92 RD 

cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08

ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e

a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306

090e ND 

/i 32 RD 

cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306

090e ND 

/k 52 RD 

cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505

fb0706fb62fb670589f82c05350689fd6005e406090e ND 

/l 18 RD 

cbf7720de316f960073306fd6007e306090e ND 

/m 157 RD 

cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08

ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4

a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07

e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2

729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689

fc9b05e406090e ND 

/n 99 RD 

cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008

9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886

a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c

06fc9b07e38a05090e ND 

/o 133 RD 

acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2

95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45

8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9

69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c

bc8bcd088bce9abca8ac08090e ND 

/p 153 RD 

cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af

a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208

6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306

09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58

6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af

08090e ND 

/q 141 RD 

aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608

6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b

a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08

b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b

6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 

/r 72 RD 

ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08

a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766

08db073c06fc9b07e306090e ND 

/s 232 RD 

aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3

93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193

828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b

08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c

97086c976891628b086f8b7288738408758378837d8108797e7d7b807708

807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d

a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94

759e08749d7ea686ae08347d059554a262ae6f08090e ND 

/t 98 RD 

9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7

c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68

927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e

8b818b088c06090e ND 

/u 106 RD 

cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873

7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307

3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786

aa8b08d08bc2a8b3c6083e07da06090e ND 

/w 74 RD 

8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0

056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7

bf052f06f731fc9b05e88c05090e ND 

/y 116 RD 

9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7

5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005

2d06f759fc9d058782888489860881688175858208848081827f84088084

7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/GIONOK+Arial findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 42 /asterisk put

dup 43 /plus put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 61 /equal put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 72 /H put

dup 73 /I put

dup 74 /J put

dup 76 /L put

dup 81 /Q put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 87 /W put

dup 91 /bracketleft put

dup 93 /bracketright put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N71/GIONOK+Arial 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

61 150 311 112 re W n

[ 0 -1 1 0 -89 323 ] concat

/N62 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

/N83 <<

/SA false 

/OP false 

/op false 

/OPM 1 

/BG /_defaultblackgeneration load 

/UCR /_defaultundercolorremoval load 

/TR /_defaulttransfer load 

/SM 0.02 

>> /ExtGState defineRes pop

/N62 /ColorSpace findRes cs

0 0 0 scn

/N83 /ExtGState findRes gs

1 i

159.161 189.041 m

158.80099 188.92101 l

158.321 188.44099 l

158.201 187.961 l

158.321 187.601 l

158.561 187.241 l

158.80099 187.121 l

159.161 187.00101 l

159.64101 187.121 l

159.881 187.241 l

160.121 187.601 l

160.241 187.961 l

160.121 188.44099 l

159.64101 188.92101 l

159.161 189.041 l

f* 

158.92101 186.64101 m

156.28101 188.08099 l

155.92101 188.08099 l

156.041 188.561 l

159.161 199.481 l

162.28101 188.561 l

162.401 188.321 l

162.041 188.08099 l

161.321 188.321 l

158.681 197.561 l

159.64101 197.80099 l

159.64101 197.561 l

157.00101 188.321 l

156.041 188.561 l

156.761 188.92101 l

159.401 187.481 l

f 

162.041 188.08099 m

159.401 186.64101 l

159.161 186.521 l

158.92101 186.64101 l

158.92101 187.481 l

161.561 188.92101 l

f 

159.161 187.00101 m

156.521 188.44099 l

159.161 197.681 l

161.80099 188.44099 l

f* 

158.201 150.041 2.03999 0.96001 rf

158.201 188.92101 2.03999 -0.96001 rf

158.201 151.00101 2.03999 36.96001 rf

159.161 276.041 m

158.80099 275.92101 l

158.321 275.44099 l

158.201 274.961 l

158.321 274.601 l

158.561 274.241 l

158.80099 274.121 l

159.161 274.00101 l

159.64101 274.121 l

159.881 274.241 l

160.121 274.601 l

160.241 274.961 l

160.121 275.44099 l

159.64101 275.92101 l

159.161 276.041 l

f* 

158.92101 273.64101 m

156.28101 275.08099 l

155.92101 275.08099 l

156.041 275.561 l

159.161 286.481 l

162.28101 275.561 l

162.401 275.321 l

162.041 275.08099 l

161.321 275.321 l

158.681 284.561 l

159.64101 284.80099 l

159.64101 284.561 l

157.00101 275.321 l

156.041 275.561 l

156.761 275.92101 l

159.401 274.481 l

f 

162.041 275.08099 m

159.401 273.64101 l

159.161 273.521 l

158.92101 273.64101 l

158.92101 274.481 l

161.561 275.92101 l

f 

159.161 274.00101 m

156.521 275.44099 l

159.161 284.681 l

161.80099 275.44099 l

f* 

158.201 243.041 2.03999 0.96001 rf

158.201 275.92101 2.03999 -0.96001 rf

158.201 244.00101 2.03999 30.96001 rf

158.201 417.64101 2.03999 0.96001 rf

158.201 460.481 2.03999 -0.96001 rf

158.201 418.601 2.03999 40.92 rf

1 1 1 scn

145.241 212.681 m

145.481 209.92101 l

146.321 207.401 l

147.521 205.121 l

149.201 203.08099 l

151.121 201.521 l

153.401 200.201 l

156.041 199.481 l

158.681 199.121 l

161.44099 199.481 l

163.961 200.201 l

166.241 201.521 l

168.28101 203.08099 l

169.961 205.121 l

171.161 207.401 l

171.881 209.92101 l

172.241 212.681 l

172.241 230.681 l

171.881 233.44099 l

171.161 235.961 l

169.961 238.241 l

168.28101 240.28101 l

166.241 241.961 l

163.961 243.161 l

161.44099 243.881 l

158.681 244.241 l

156.041 243.881 l

153.401 243.161 l

151.121 241.961 l

149.201 240.28101 l

147.521 238.241 l

146.321 235.961 l

145.481 233.44099 l

145.241 230.681 l

145.241 212.681 l

f* 

0 0 0 scn

145.481 212.681 m

145.72099 209.92101 l

145.72099 210.041 l

146.561 207.521 l

147.761 205.241 l

147.761 205.36099 l

149.44099 203.321 l

151.36099 201.761 l

151.241 201.761 l

153.521 200.44099 l

156.161 199.72099 l

158.80099 199.36099 l

158.681 199.36099 l

161.44099 199.72099 l

163.961 200.44099 l

163.841 200.44099 l

166.121 201.761 l

168.161 203.321 l

169.841 205.36099 l

169.72099 205.241 l

170.92101 207.521 l

171.64101 210.041 l

172.00101 212.80099 l

172.00101 212.681 l

172.00101 230.681 l

171.64101 233.44099 l

170.92101 235.961 l

170.92101 235.841 l

169.72099 238.121 l

169.841 238.121 l

168.161 240.161 l

166.121 241.841 l

166.121 241.72099 l

163.841 242.92101 l

163.961 242.92101 l

161.44099 243.64101 l

158.681 244.00101 l

158.80099 244.00101 l

156.161 243.64101 l

153.521 242.92101 l

151.241 241.72099 l

151.36099 241.841 l

149.44099 240.161 l

147.761 238.121 l

146.561 235.841 l

146.561 235.961 l

145.72099 233.44099 l

145.481 230.681 l

145.481 212.681 l

145.00101 212.681 l

145.00101 230.681 l

145.241 233.44099 l

145.241 233.561 l

146.08099 236.08099 l

147.28101 238.36099 l

147.401 238.481 l

149.08099 240.521 l

151.00101 242.201 l

153.28101 243.401 l

153.401 243.401 l

156.041 244.121 l

158.681 244.481 l

158.80099 244.481 l

161.561 244.121 l

164.08099 243.401 l

166.36099 242.201 l

166.481 242.201 l

168.521 240.521 l

170.201 238.481 l

170.201 238.36099 l

171.401 236.08099 l

172.121 233.561 l

172.481 230.80099 l

172.481 212.681 l

172.121 209.92101 l

171.401 207.401 l

171.401 207.28101 l

170.201 205.00101 l

168.521 202.961 l

168.401 202.961 l

166.36099 201.401 l

164.08099 200.08099 l

164.08099 199.961 l

161.561 199.241 l

158.80099 198.881 l

158.681 198.881 l

156.041 199.241 l

153.401 199.961 l

153.28101 200.08099 l

151.00101 201.401 l

149.08099 202.961 l

147.401 205.00101 l

147.28101 205.00101 l

146.08099 207.28101 l

146.08099 207.401 l

145.241 209.92101 l

145.00101 212.681 l

f 

145.481 212.681 m

145.00101 212.681 l

f 

BT

/N71 1 Tf

0 14.39999 -14.39999 0 162.7606 210.1606 Tm

0.0011 Tc

0 Tw

(Joi)Tj [6.60001 ]TJ (n)Tj 

ET

142.72099 193.841 m

142.481 194.08099 l

141.64101 194.08099 l

141.401 193.841 l

141.161 193.481 l

141.041 193.121 l

141.161 192.761 l

141.401 192.401 l

141.64101 192.161 l

142.481 192.161 l

142.72099 192.401 l

142.961 192.761 l

143.08099 193.121 l

142.961 193.481 l

142.72099 193.841 l

f* 

140.80099 192.28101 m

140.08099 195.28101 l

139.961 195.64101 l

140.321 195.881 l

148.72099 200.44099 l

150.28101 201.28101 l

149.44099 199.72099 l

144.761 191.44099 l

144.64101 191.201 l

144.161 191.201 l

143.80099 191.92101 l

148.481 200.201 l

149.44099 199.72099 l

149.201 199.481 l

140.80099 194.92101 l

140.321 195.881 l

141.041 195.521 l

141.761 192.521 l

f 

144.161 191.201 m

141.161 191.92101 l

140.92101 192.041 l

140.80099 192.28101 l

141.401 192.881 l

144.401 192.161 l

f 

141.28101 192.401 m

140.561 195.401 l

148.961 199.961 l

144.28101 191.681 l

f* 

142.72099 192.401 m

143.44099 193.121 l

142.00101 194.561 l

141.28101 193.841 l

f 

142.72099 192.401 m

123.881 173.44099 l

123.64101 173.201 l

123.161 173.201 l

122.44099 174.881 l

141.28101 193.841 l

f 

74.80099 175.241 48.36 -2.03999 rf

74.80099 288.521 2.03999 -0.96001 rf

74.80099 174.161 2.03999 113.39999 rf

1 1 1 scn

62.201 297.64101 m

62.44099 294.881 l

63.28101 292.36099 l

64.481 290.08099 l

66.161 288.161 l

68.201 286.481 l

70.481 285.28101 l

73.00101 284.44099 l

75.761 284.201 l

78.401 284.44099 l

80.92101 285.28101 l

83.201 286.481 l

85.241 288.161 l

86.92101 290.08099 l

88.121 292.36099 l

88.961 294.881 l

89.201 297.64101 l

89.201 315.761 l

88.961 318.401 l

88.121 320.92101 l

86.92101 323.201 l

85.241 325.241 l

83.201 326.92101 l

80.92101 328.121 l

78.401 328.961 l

75.761 329.201 l

73.00101 328.961 l

70.481 328.121 l

68.201 326.92101 l

66.161 325.241 l

64.481 323.201 l

63.28101 320.92101 l

62.44099 318.401 l

62.201 315.761 l

62.201 297.64101 l

f* 

0 0 0 scn

62.44099 297.64101 m

62.681 294.881 l

62.681 295.00101 l

63.521 292.481 l

64.72099 290.201 l

64.72099 290.321 l

66.401 288.401 l

68.44099 286.72099 l

68.321 286.72099 l

70.601 285.521 l

73.121 284.681 l

73.00101 284.681 l

75.761 284.44099 l

78.401 284.681 l

80.92101 285.521 l

80.80099 285.521 l

83.08099 286.72099 l

85.121 288.401 l

86.80099 290.321 l

86.681 290.201 l

87.881 292.481 l

88.72099 295.00101 l

88.72099 294.881 l

88.961 297.64101 l

88.961 315.761 l

88.72099 318.401 l

87.881 320.92101 l

87.881 320.80099 l

86.681 323.08099 l

86.80099 323.08099 l

85.121 325.121 l

83.08099 326.80099 l

83.08099 326.681 l

80.80099 327.881 l

80.92101 327.881 l

78.401 328.72099 l

75.761 328.961 l

73.00101 328.72099 l

73.121 328.72099 l

70.601 327.881 l

68.321 326.681 l

68.44099 326.80099 l

66.401 325.121 l

64.72099 323.08099 l

63.521 320.80099 l

63.521 320.92101 l

62.681 318.401 l

62.44099 315.761 l

62.44099 297.64101 l

61.961 297.64101 l

61.961 315.761 l

62.201 318.401 l

62.201 318.521 l

63.041 321.041 l

64.241 323.321 l

64.36099 323.44099 l

66.041 325.481 l

68.08099 327.161 l

70.36099 328.36099 l

70.481 328.36099 l

73.00101 329.201 l

75.761 329.44099 l

78.401 329.201 l

78.521 329.201 l

81.041 328.36099 l

83.321 327.161 l

83.44099 327.161 l

85.481 325.481 l

87.161 323.44099 l

87.161 323.321 l

88.36099 321.041 l

89.201 318.521 l

89.201 318.401 l

89.44099 315.761 l

89.44099 297.64101 l

89.201 294.881 l

88.36099 292.36099 l

88.36099 292.241 l

87.161 289.961 l

85.481 288.041 l

83.44099 286.36099 l

83.321 286.241 l

81.041 285.041 l

78.521 284.201 l

78.401 284.201 l

75.761 283.961 l

73.00101 284.201 l

70.481 285.041 l

70.36099 285.041 l

68.08099 286.241 l

68.08099 286.36099 l

66.041 288.041 l

64.36099 289.961 l

64.241 289.961 l

63.041 292.241 l

63.041 292.36099 l

62.201 294.881 l

61.961 297.64101 l

f 

62.44099 297.64101 m

61.961 297.64101 l

f 

BT

0 11.16 -11.16 0 78.7606 290.6806 Tm

0.0023 Tc

(S)Tj [45.60001 ]TJ (t)Tj [0.60001 ]TJ (ream)Tj 

ET

1 1 1 scn

145.72099 299.201 m

145.961 296.44099 l

146.80099 293.92101 l

148.00101 291.64101 l

149.681 289.601 l

151.601 287.92101 l

154.00101 286.72099 l

156.521 285.881 l

159.161 285.64101 l

161.92101 285.881 l

164.44099 286.72099 l

166.72099 287.92101 l

168.761 289.601 l

170.44099 291.64101 l

171.64101 293.92101 l

172.481 296.44099 l

172.72099 299.201 l

172.72099 317.201 l

172.481 319.961 l

171.64101 322.481 l

170.44099 324.761 l

168.761 326.80099 l

166.72099 328.36099 l

164.44099 329.681 l

161.92101 330.401 l

159.161 330.761 l

156.521 330.401 l

154.00101 329.681 l

151.601 328.36099 l

149.681 326.80099 l

148.00101 324.761 l

146.80099 322.481 l

145.961 319.961 l

145.72099 317.201 l

145.72099 299.201 l

f* 

0 0 0 scn

145.961 299.201 m

146.201 296.44099 l

146.201 296.561 l

147.041 294.041 l

148.241 291.761 l

148.241 291.881 l

149.92101 289.841 l

151.841 288.161 l

151.72099 288.161 l

154.121 286.961 l

156.64101 286.121 l

156.521 286.121 l

159.161 285.881 l

161.92101 286.121 l

164.44099 286.961 l

164.321 286.961 l

166.601 288.161 l

168.64101 289.841 l

170.321 291.881 l

170.201 291.761 l

171.401 294.041 l

172.241 296.561 l

172.241 296.44099 l

172.481 299.201 l

172.481 317.201 l

172.241 319.961 l

171.401 322.481 l

171.401 322.36099 l

170.201 324.64101 l

170.321 324.64101 l

168.64101 326.681 l

166.601 328.241 l

164.321 329.561 l

164.44099 329.44099 l

161.92101 330.161 l

159.161 330.521 l

159.28101 330.521 l

156.64101 330.161 l

154.121 329.44099 l

151.72099 328.121 l

151.841 328.241 l

149.92101 326.681 l

148.241 324.64101 l

147.041 322.36099 l

147.041 322.481 l

146.201 319.961 l

145.961 317.201 l

145.961 299.201 l

145.481 299.201 l

145.481 317.201 l

145.72099 319.961 l

145.72099 320.08099 l

146.561 322.601 l

147.761 324.881 l

147.881 325.00101 l

149.561 327.041 l

151.481 328.601 l

153.881 329.92101 l

154.00101 329.92101 l

156.521 330.64101 l

159.161 331.00101 l

159.28101 331.00101 l

162.041 330.64101 l

164.561 329.92101 l

166.841 328.601 l

168.881 327.041 l

169.00101 327.041 l

170.681 325.00101 l

170.681 324.881 l

171.881 322.601 l

172.72099 320.08099 l

172.72099 319.961 l

172.961 317.201 l

172.961 299.201 l

172.72099 296.44099 l

171.881 293.92101 l

171.881 293.80099 l

170.681 291.521 l

169.00101 289.481 l

166.961 287.80099 l

166.841 287.681 l

164.561 286.481 l

162.041 285.64101 l

161.92101 285.64101 l

159.161 285.401 l

156.521 285.64101 l

154.00101 286.481 l

153.881 286.481 l

151.481 287.681 l

151.481 287.80099 l

149.561 289.481 l

147.881 291.521 l

147.761 291.521 l

146.561 293.80099 l

146.561 293.92101 l

145.72099 296.44099 l

145.481 299.201 l

f 

145.961 299.201 m

145.481 299.201 l

f 

BT

0 11.16 -11.16 0 164.20061 292.12061 Tm

-0.0433 Tc

(St)Tj [-45 ]TJ (r)Tj [-43.60001 ]TJ (e)Tj [-35.5 ]TJ (a)Tj [-46.3 ]TJ (m)Tj 

ET

1 1 1 scn

145.241 386.561 m

145.481 383.80099 l

146.321 381.28101 l

147.521 379.00101 l

149.201 376.961 l

151.121 375.401 l

153.401 374.08099 l

156.041 373.36099 l

158.681 373.00101 l

161.44099 373.36099 l

163.961 374.08099 l

166.241 375.401 l

168.28101 376.961 l

169.961 379.00101 l

171.161 381.28101 l

171.881 383.80099 l

172.241 386.561 l

172.241 404.561 l

171.881 407.321 l

171.161 409.841 l

169.961 412.121 l

168.28101 414.161 l

166.241 415.841 l

163.961 417.041 l

161.44099 417.761 l

158.681 418.121 l

156.041 417.761 l

153.401 417.041 l

151.121 415.841 l

149.201 414.161 l

147.521 412.121 l

146.321 409.841 l

145.481 407.321 l

145.241 404.561 l

145.241 386.561 l

f* 

0 0 0 scn

145.481 386.561 m

145.72099 383.80099 l

145.72099 383.92101 l

146.561 381.401 l

147.761 379.121 l

147.761 379.241 l

149.44099 377.201 l

151.36099 375.64101 l

151.241 375.64101 l

153.521 374.321 l

156.161 373.601 l

158.80099 373.241 l

158.681 373.241 l

161.44099 373.601 l

163.961 374.321 l

163.841 374.321 l

166.121 375.64101 l

168.161 377.201 l

169.841 379.241 l

169.72099 379.121 l

170.92101 381.401 l

171.64101 383.92101 l

172.00101 386.681 l

172.00101 386.561 l

172.00101 404.561 l

171.64101 407.321 l

170.92101 409.841 l

170.92101 409.72099 l

169.72099 412.00101 l

169.841 412.00101 l

168.161 414.041 l

166.121 415.72099 l

166.121 415.601 l

163.841 416.80099 l

163.961 416.80099 l

161.44099 417.521 l

158.681 417.881 l

158.80099 417.881 l

156.161 417.521 l

153.521 416.80099 l

151.241 415.601 l

151.36099 415.72099 l

149.44099 414.041 l

147.761 412.00101 l

146.561 409.72099 l

146.561 409.841 l

145.72099 407.321 l

145.481 404.561 l

145.481 386.561 l

145.00101 386.561 l

145.00101 404.561 l

145.241 407.321 l

145.241 407.44099 l

146.08099 409.961 l

147.28101 412.241 l

147.401 412.36099 l

149.08099 414.401 l

151.00101 416.08099 l

153.28101 417.28101 l

153.401 417.28101 l

156.041 418.00101 l

158.681 418.36099 l

158.80099 418.36099 l

161.561 418.00101 l

164.08099 417.28101 l

166.36099 416.08099 l

166.481 416.08099 l

168.521 414.401 l

170.201 412.36099 l

170.201 412.241 l

171.401 409.961 l

172.121 407.44099 l

172.481 404.681 l

172.481 386.561 l

172.121 383.80099 l

171.401 381.28101 l

171.401 381.161 l

170.201 378.881 l

168.521 376.841 l

168.401 376.841 l

166.36099 375.28101 l

164.08099 373.961 l

164.08099 373.841 l

161.561 373.121 l

158.80099 372.761 l

158.681 372.761 l

156.041 373.121 l

153.401 373.841 l

153.28101 373.961 l

151.00101 375.28101 l

149.08099 376.841 l

147.401 378.881 l

147.28101 378.881 l

146.08099 381.161 l

146.08099 381.28101 l

145.241 383.80099 l

145.00101 386.561 l

f 

145.481 386.561 m

145.00101 386.561 l

f 

BT

0 14.39999 -14.39999 0 162.7606 379.84061 Tm

0.00101 Tc

(Spl)Tj [6.5 ]TJ (i)Tj [-1.8 ]TJ (t)Tj 

ET

75.761 340.241 m

76.121 340.36099 l

76.36099 340.481 l

76.601 340.841 l

76.72099 341.201 l

76.601 341.681 l

76.121 342.161 l

75.761 342.28101 l

75.28101 342.161 l

74.80099 341.681 l

74.681 341.201 l

74.80099 340.841 l

75.041 340.481 l

75.28101 340.36099 l

75.761 340.241 l

f* 

76.00101 342.64101 m

78.64101 341.08099 l

79.00101 341.08099 l

78.881 340.601 l

76.241 331.36099 l

75.761 329.80099 l

75.28101 331.36099 l

72.521 340.601 l

72.401 340.841 l

72.761 341.08099 l

73.481 340.841 l

76.241 331.601 l

75.28101 331.36099 l

75.28101 331.601 l

77.92101 340.841 l

78.881 340.601 l

78.161 340.241 l

75.521 341.80099 l

f 

72.761 341.08099 m

75.521 342.64101 l

75.761 342.761 l

76.00101 342.64101 l

76.00101 341.80099 l

73.241 340.241 l

f 

75.761 342.28101 m

78.401 340.72099 l

75.761 331.481 l

73.00101 340.72099 l

f* 

149.44099 415.241 m

150.161 414.521 l

151.601 415.961 l

150.881 416.681 l

f 

149.44099 415.241 m

122.44099 442.36099 l

123.161 444.161 l

123.521 444.161 l

123.881 443.80099 l

150.881 416.681 l

f 

74.80099 444.161 48.36 -2.03999 rf

74.80099 341.201 2.03999 -0.96001 rf

74.80099 341.201 2.03999 101.88 rf

159.161 363.041 m

158.80099 362.92101 l

158.321 362.44099 l

158.201 361.961 l

158.321 361.601 l

158.561 361.241 l

158.80099 361.121 l

159.161 361.00101 l

159.64101 361.121 l

159.881 361.241 l

160.121 361.601 l

160.241 361.961 l

160.121 362.44099 l

159.64101 362.92101 l

159.161 363.041 l

f* 

158.92101 360.64101 m

156.28101 362.201 l

155.92101 362.321 l

156.041 362.681 l

158.681 371.80099 l

159.161 373.481 l

159.64101 371.80099 l

162.28101 362.681 l

162.401 362.44099 l

162.041 362.201 l

161.321 362.44099 l

158.681 371.561 l

159.64101 371.80099 l

159.64101 371.561 l

157.00101 362.44099 l

156.041 362.681 l

156.761 363.041 l

159.401 361.481 l

f 

162.041 362.201 m

159.401 360.64101 l

159.161 360.521 l

158.92101 360.64101 l

158.92101 361.481 l

161.561 363.041 l

f 

159.161 361.00101 m

156.521 362.561 l

159.161 371.681 l

161.80099 362.561 l

f* 

158.201 330.041 2.03999 0.96001 rf

158.201 362.92101 2.03999 -0.96001 rf

158.201 331.00101 2.03999 30.96001 rf

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%EOF


%%EndDocument
 @endspecial 2244 1884 a(\(c\))h(A)f(F)-6 b(eedbac)n(kLo)r(op.)1770
2058 y Fl(Fig.)15 b(3.)21 b Fo(Stream)h(structures)g(supp)r(orted)f(b)n
(y)g(StreamIt.)558 2266 y Fp(5.)41 b Fi(Oc)l(c)l(asional)j(out-of-str)l
(e)l(am)e(c)l(ommunic)l(ation.)h Fp(In)f(addition)g(to)g(the)g(high-v)n
(olume)664 2366 y(data)c(streams)e(passing)h(from)h(one)f(\014lter)h
(to)g(another,)f(\014lters)h(also)f(comm)n(unicate)664
2466 y(small)32 b(amoun)n(ts)f(of)g(con)n(trol)g(information)g(on)g(an)
h(infrequen)n(t)g(and)f(irregular)f(basis.)664 2565 y(Examples)35
b(include)i(c)n(hanging)d(the)j(v)n(olume)e(on)h(a)g(cell)g(phone,)g
(prin)n(ting)f(an)h(error)664 2665 y(message)26 b(to)i(a)f(screen,)g
(or)g(c)n(hanging)f(a)h(co)r(e\016cien)n(t)g(in)h(an)g(upstream)f(FIR)h
(\014lter.)558 2761 y(6.)41 b Fi(High)e(p)l(erformanc)l(e)h(exp)l(e)l
(ctations.)e Fp(Often)f(there)g(are)f(real-time)g(constrain)n(ts)g
(that)664 2861 y(m)n(ust)41 b(b)r(e)g(satis\014ed)f(b)n(y)g(streaming)f
(applications;)h(th)n(us,)h(e\016ciency)f(\(in)h(terms)f(of)664
2960 y(b)r(oth)g(latency)f(and)h(throughput\))g(is)f(of)h(primary)e
(concern.)h(Additionally)-7 b(,)40 b(man)n(y)664 3060
y(em)n(b)r(edded)34 b(applications)f(are)g(in)n(tended)h(for)g(mobile)f
(en)n(vironmen)n(ts)g(where)g(p)r(o)n(w)n(er)664 3160
y(consumption,)28 b(memory)e(requiremen)n(ts,)h(and)g(co)r(de)h(size)f
(are)g(also)f(imp)r(ortan)n(t.)523 3411 y Fk(3)112 b(Language)40
b(Ov)m(erview)523 3596 y Fp(StreamIt)30 b(includes)g(stream-sp)r
(eci\014c)f(abstractions)g(and)h(represen)n(tations)e(that)i(are)f(de-)
523 3696 y(signed)40 b(to)g(impro)n(v)n(e)f(programmer)f(pro)r
(ductivit)n(y)i(for)g(the)h(domain)f(of)g(programs)e(de-)523
3796 y(scrib)r(ed)g(ab)r(o)n(v)n(e.)f(In)i(this)f(pap)r(er,)g(w)n(e)g
(presen)n(t)g(StreamIt)g(in)g(legal)g(Ja)n(v)-5 b(a)37
b(syn)n(tax)3185 3765 y Fh(1)3221 3796 y Fp(.)h(Us-)523
3895 y(ing)26 b(Ja)n(v)-5 b(a)25 b(has)h(man)n(y)g(adv)-5
b(an)n(tages,)25 b(including)h(programmer)e(familiarit)n(y)-7
b(,)26 b(a)n(v)-5 b(ailabilit)n(y)25 b(of)523 3995 y(compiler)d(framew)
n(orks)f(and)h(a)h(robust)f(language)f(sp)r(eci\014cation.)i(Ho)n(w)n
(ev)n(er,)d(the)k(resulting)523 4094 y(syn)n(tax)k(can)g(b)r(e)g(cum)n
(b)r(ersome,)g(and)g(in)h(the)g(future)g(w)n(e)f(plan)g(to)g(dev)n
(elop)g(a)g(cleaner)f(and)523 4194 y(more)g(abstract)f(syn)n(tax)h
(that)h(is)f(designed)h(sp)r(eci\014cally)f(for)g(stream)g(programs.)
523 4429 y Fg(3.1)95 b(Filters)523 4581 y Fp(The)28 b(basic)e(unit)i
(of)g(computation)f(in)h(StreamIt)f(is)g(the)h(Filter.)g(An)g(example)f
(of)g(a)g(Filter)523 4681 y(from)37 b(our)f(soft)n(w)n(are)g(radio)g
(\(see)h(Figure)f(1\))i(is)f(the)g Ff(FIRFilter)p Fp(,)d(sho)n(wn)i(in)
i(Figure)e(2.)p 523 4748 473 4 v 546 4801 a Fe(1)606
4833 y Fo(Ho)n(w)n(ev)n(er,)d(for)h(the)e(sak)n(e)h(of)h(brevit)n(y)-6
b(,)31 b(the)i(co)r(de)g(fragmen)n(ts)g(in)f(this)h(pap)r(er)g(are)g
(sometimes)606 4924 y(lac)n(king)22 b(mo)r(di\014ers)g(or)g(metho)r(ds)
e(that)i(w)n(ould)g(b)r(e)f(needed)g(to)h(mak)n(e)f(them)f(strictly)i
(legal)h(Ja)n(v)l(a.)p eop
%%Page: 5 5
5 4 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)238 b(5)523 448 y Fp(The)34 b(cen)n(tral)f(asp)r(ect)g(of)h(a)f
(\014lter)h(is)g(the)g Ff(work)e Fp(function,)i(whic)n(h)g(describ)r
(es)f(the)h(\014lter's)523 548 y(most)28 b(\014ne)g(grained)e
(execution)i(step)g(in)g(the)g(steady)f(state.)h(Within)h(the)f
Ff(work)e Fp(function,)523 648 y(a)k(\014lter)h(can)g(comm)n(unicate)f
(with)h(neigh)n(b)r(oring)e(blo)r(c)n(ks)h(using)h(the)g
Ff(input)e Fp(and)h Ff(output)523 747 y Fp(c)n(hannels,)21
b(whic)n(h)h(are)e(FIF)n(O)h(queues)h(declared)e(as)h(\014elds)h(in)g
(the)g(Filter)g(base)f(class.)f(These)523 847 y(high-v)n(olume)29
b(c)n(hannels)g(supp)r(ort)h(the)g(three)g(in)n(tuitiv)n(e)g(op)r
(erations:)e(1\))i Ff(pop\(\))e Fp(remo)n(v)n(es)523
946 y(an)k(item)g(from)g(the)g(end)h(of)e(the)i(c)n(hannel)e(and)h
(returns)g(its)g(v)-5 b(alue,)32 b(2\))g Ff(peek\()p
Fd(i)p Ff(\))d Fp(returns)523 1046 y(the)f(v)-5 b(alue)28
b(of)g(the)g(item)g Fd(i)g Fp(spaces)f(from)g(the)i(end)f(of)f(the)i(c)
n(hannel)e(without)h(remo)n(ving)f(it,)523 1146 y(and)h(3\))h
Ff(push\()p Fd(x)p Ff(\))e Fp(writes)h Fd(x)h Fp(to)f(the)h(fron)n(t)f
(of)h(the)g(c)n(hannel.)f(The)h(argumen)n(t)e Fd(x)i
Fp(is)g(passed)523 1245 y(b)n(y)e(v)-5 b(alue;)28 b(if)g(it)g(is)f(an)h
(ob)5 b(ject,)27 b(a)g(separate)g(cop)n(y)f(is)i(enqueued)f(on)h(the)g
(c)n(hannel.)648 1345 y(A)33 b(ma)5 b(jor)32 b(restriction)f(of)i
(StreamIt)g(1.0)f(is)h(that)g(it)g(requires)f(\014lters)h(to)f(ha)n(v)n
(e)g(static)523 1445 y(input)20 b(and)f(output)h(rates.)f(That)g(is,)g
(the)h(n)n(um)n(b)r(er)f(of)h(items)f(p)r(eek)n(ed,)h(p)r(opp)r(ed,)g
(and)f(pushed)523 1544 y(b)n(y)27 b(eac)n(h)g(\014lter)g(m)n(ust)g(b)r
(e)h(constan)n(t)f(from)g(one)g(in)n(v)n(o)r(cation)f(of)h(the)h
Ff(work)d Fp(function)j(to)g(the)523 1644 y(next.)23
b(In)h(fact,)f(as)f(describ)r(ed)h(b)r(elo)n(w,)g(the)g(input)h(and)f
(output)h(rates)e(m)n(ust)h(b)r(e)h(declared)e(in)523
1743 y(the)27 b(\014lter's)g Ff(init)e Fp(function.)j(If)f(a)g
(\014lter)g(violates)f(the)h(declared)f(rates,)g(StreamIt)h(thro)n(ws)
523 1843 y(a)32 b(run)n(time)h(error)d(and)i(the)h(subsequen)n(t)f(b)r
(eha)n(vior)f(of)i(the)g(program)d(is)i(unde\014ned.)i(W)-7
b(e)523 1943 y(plan)28 b(to)f(supp)r(ort)g(dynamically)g(c)n(hanging)f
(rates)h(in)h(a)f(future)h(v)n(ersion)e(of)i(StreamIt.)648
2042 y(Eac)n(h)i(Filter)j(also)e(con)n(tains)g(an)g Ff(init)g
Fp(function,)i(whic)n(h)f(is)g(called)f(at)h(initialization)523
2142 y(time.)21 b(The)e Ff(init)g Fp(function)h(serv)n(es)f(t)n(w)n(o)g
(purp)r(oses.)g(Firstly)-7 b(,)20 b(it)g(is)g(for)f(the)h(user)g(to)f
(establish)523 2242 y(the)33 b(initial)g(state)g(of)g(the)g(\014lter.)g
(F)-7 b(or)32 b(example,)h(the)g(FIRFilter)g(records)f
Ff(weights)p Fp(,)e(the)523 2341 y(co)r(e\016cien)n(ts)c(that)i(it)f
(should)f(use)h(for)f(\014ltering.)h(A)g(\014lter)g(can)f(also)g(push,)
h(p)r(op,)g(and)g(p)r(eek)523 2441 y(items)32 b(from)f(within)h(the)g
Ff(init)e Fp(function)j(if)f(it)g(needs)f(to)h(set)f(up)h(some)f
(initial)h(state)f(on)523 2540 y(its)e(c)n(hannels,)g(although)f(this)h
(usually)g(is)g(not)g(necessary)-7 b(.)27 b(A)j(user)e(should)h(instan)
n(tiate)f(a)523 2640 y(\014lter)35 b(b)n(y)g(using)g(its)h
(constructor,)e(and)h(the)g Ff(init)f Fp(function)i(will)g(b)r(e)f
(called)g(implicitly)523 2740 y(with)28 b(the)g(same)f(argumen)n(ts)f
(that)i(w)n(ere)f(passed)g(to)g(the)h(constructor)2760
2710 y Fh(2)2796 2740 y Fp(.)648 2839 y(The)h(second)h(purp)r(ose)f(of)
h(the)g Ff(init)e Fp(function)j(is)e(to)h(sp)r(ecify)g(the)g
(\014lter's)g(I/O)f(t)n(yp)r(es)523 2939 y(and)j(data)g(rates)g(to)g
(the)h(StreamIt)f(compiler.)g(The)h(t)n(yp)r(es)f(are)g(sp)r(eci\014ed)
g(with)h(calls)f(to)523 3039 y Ff(setInput)e Fp(and)j
Ff(setOutput)p Fp(,)c(while)34 b(the)f(rates)f(are)g(sp)r(eci\014ed)i
(with)f(calls)g(to)g Ff(setPush)p Fp(,)523 3138 y Ff(setPop)p
Fp(,)d(and)h Ff(setPeek)p Fp(.)f(The)i Ff(setPeek)d Fp(call)i(can)h(b)r
(e)g(ommitted)h(if)f(the)g(p)r(eek)g(coun)n(t)g(is)523
3238 y(the)c(same)f(as)g(the)h(p)r(op)g(coun)n(t.)523
3481 y Fg(Rationale)38 b Fp(StreamIt's)24 b(represen)n(tation)f(of)i(a)
f(\014lter)h(is)f(an)g(impro)n(v)n(emen)n(t)g(o)n(v)n(er)f(general-)523
3581 y(purp)r(ose)35 b(languages.)e(In)j(a)f(pro)r(cedural)f(language,)
f(the)j(analog)e(of)h(a)g(\014lter)g(is)h(a)f(blo)r(c)n(k)523
3680 y(of)c(statemen)n(ts)g(in)g(a)g(complicated)g(lo)r(op)g(nest)g
(\(see)g(Figure)g(4\).)g(This)g(represen)n(tation)e(is)523
3780 y(unnatural)22 b(for)h(expressing)e(the)j(feedbac)n(k)e(and)h
(parallelism)f(that)h(is)g(inheren)n(t)g(in)g(stream-)523
3880 y(ing)34 b(systems.)g(Also,)g(there)g(is)g(no)g(clear)f
(abstraction)g(barrier)g(b)r(et)n(w)n(een)h(one)g(\014lter)g(and)523
3979 y(another,)h(and)h(high-v)n(olume)f(stream)h(pro)r(cessing)e(is)i
(m)n(uddled)h(with)f(global)f(v)-5 b(ariables)523 4079
y(and)23 b(con)n(trol)f(\015o)n(w.)g(The)h(lo)r(op)g(nest)g(m)n(ust)g
(b)r(e)h(re-arranged)c(if)j(the)h(input)g(or)e(output)h(ratios)523
4178 y(of)31 b(a)f(\014lter)g(c)n(hanges,)f(and)i(sc)n(heduling)f
(optimizations)g(further)g(inhibit)h(the)g(readabilit)n(y)523
4278 y(of)e(the)h(co)r(de.)f(In)g(con)n(trast,)f(StreamIt)h(places)f
(the)i(\014lter)f(in)g(its)h(o)n(wn)e(indep)r(enden)n(t)i(unit,)523
4378 y(making)e(explicit)h(the)h(parallelism)d(and)i(in)n(ter-\014lter)
f(comm)n(unication)h(while)g(hiding)g(the)523 4477 y(grungy)d(details)i
(of)f(sc)n(heduling)g(and)h(optimization)f(from)g(the)h(programmer.)648
4577 y(One)j(could)h(also)f(use)h(an)g(ob)5 b(ject-orien)n(ted)31
b(language)g(to)h(implemen)n(t)g(a)g(stream)g(ab-)523
4677 y(straction)k(\(see)h(Figure)g(5\).)g(This)g(a)n(v)n(oids)e(some)h
(of)h(the)h(problems)e(asso)r(ciated)g(with)h(a)p 523
4748 473 4 v 546 4801 a Fe(2)606 4833 y Fo(This)24 b(design)g(migh)n(t)
f(seem)g(unnatural,)h(but)f(it)g(is)i(necessary)f(to)g(allo)n(w)h
(inlining)f(\(Section)g(3.2\))606 4924 y(and)h(re-initialization)j
(\(Section)e(3.4\))g(within)g(a)g(Ja)n(v)l(a-based)g(syn)n(tax.)p
eop
%%Page: 6 6
6 5 bop 523 232 a Fo(6)237 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)-6
b(erlag)523 2501 y @beginspecial 61 @llx 336 @lly 250
@urx 595 @ury 1913 @rwi @setspecial
%%BeginDocument: fir-proc.eps
%!
%%BoundingBox: 61 336 250 595
%%Title: fir-proc
%%CreationDate: Mon Jan 21 09:14:59 2002
%%Creator: Tgif-3.0-p13 by William Chia-Wei Cheng (william@cs.UCLA.edu)

/tgifdict 2 dict def
tgifdict begin

end

%%PageBoundingBox: 61 336 250 595
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100.000 mul 100 div dup neg scale

gsave

/tgiforigctm matrix currentmatrix def

% TEXT
0 setgray
/Courier findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      112 361 moveto (int N = 5;) show
      112 373 moveto (int BLOCK_SIZE = 100;) show
      112 385 moveto () show
      112 397 moveto (void step\(float[] input, float[] output,) show
      112 409 moveto (       int numIn, int numOut\) {) show
      112 421 moveto (  float sum = 0;) show
      112 433 moveto (  for \(int k=0; k<numIn; k++\)) show
      112 445 moveto (    sum = sum + input[k]*FIR_COEFF[k+numIn][N];) show
      112 457 moveto (  for \(int k=numIn; k<N; k++\) ) show
      112 469 moveto (    sum = sum + input[k]*FIR_COEFF[k-numIn][N];) show
      112 481 moveto (  output[numOut] = sum;) show
      112 493 moveto (  input[numIn] = getData\(\);) show
      112 505 moveto (}) show
      112 517 moveto () show
      112 529 moveto (void main\(\) {) show
      112 541 moveto (  float input[] = new float[N];) show
      112 553 moveto (  float output[] = new float[BLOCK_SIZE];) show
      112 565 moveto (  int numIn, numOut;) show
      112 577 moveto () show
      112 589 moveto (  for \(numIn=0; numIn<N; numIn++\)) show
      112 601 moveto (    input[numIn] = getData\(\);) show
      112 613 moveto ( ) show
      112 625 moveto (  while \(true\) {) show
      112 637 moveto () show
      112 649 moveto (    for \(out=0; numIn<N; numIn++, numOut++\)) show
      112 661 moveto (      step\(input, output, numIn, numOut\);) show
      112 673 moveto () show
      112 685 moveto (    int wholeSteps = \(BLOCK_SIZE-numOut\)/N;) show
      112 697 moveto (    for \(int k=0; k<wholeSteps; k++\)) show
      112 709 moveto (      for \(numIn=0; numIn<N; numIn++, numOut++\)) show
      112 721 moveto (        step\(input, output, numIn, numOut\);) show
      112 733 moveto () show
      112 745 moveto (    for \(numIn=0; numOut<BLOCK_SIZE; numIn++, numOut++\)) show
      112 757 moveto (      step\(input, output, numIn, numOut\);) show
      112 769 moveto () show
      112 781 moveto (    displayBlock\(output\);) show
      112 793 moveto (  }) show
      112 805 moveto (}) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Jan 21 09:14:59 2002

%%EndDocument
 @endspecial 166 x Fl(Fig.)15 b(4.)35 b Fo(An)f(optimized)h(FIR)g
(\014lter)g(in)h(a)f(pro-)523 2758 y(cedural)29 b(language.)h(A)e
(complicated)h(lo)r(op)g(nest)523 2849 y(is)j(required)g(to)g(a)n(v)n
(oid)g(mo)r(d)f(functions)h(and)g(to)523 2941 y(use)22
b(memory)e(e\016cien)n(tly)-6 b(,)22 b(and)f(the)h(structure)f(of)523
3032 y(the)32 b(lo)r(ops)g(dep)r(ends)g(on)g(the)f(data)h(rates)h
(\(e.g.,)523 3123 y(BLOCK)p 805 3123 24 4 v 28 w(SIZE\))g(within)h(the)
g(stream.)g(An)f(ac-)523 3215 y(tual)e(implemen)n(tation)f(migh)n(t)g
(inline)i(the)f(calls)523 3306 y(to)26 b Fm(step)p Fo(.)2205
2680 y @beginspecial 52 @llx 352 @lly 224 @urx 631 @ury
1741 @rwi @setspecial
%%BeginDocument: fir-object.eps
%!
%%BoundingBox: 52 352 224 631
%%Title: fir-object
%%CreationDate: Mon Jan 21 09:16:13 2002
%%Creator: Tgif-3.0-p13 by William Chia-Wei Cheng (william@cs.UCLA.edu)

/tgifdict 2 dict def
tgifdict begin

end

%%PageBoundingBox: 52 352 224 631
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100.000 mul 100 div dup neg scale

gsave

/tgiforigctm matrix currentmatrix def

% TEXT
0 setgray
/Courier findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      96 297 moveto (class FIRFilter {) show
      96 309 moveto (  int N;) show
      96 321 moveto (  float[] input;) show
      96 333 moveto () show
      96 345 moveto (  FIRFilter\(int N\) {) show
      96 357 moveto (    this.N = N;) show
      96 369 moveto (  }) show
      96 381 moveto () show
      96 393 moveto (  float[] getData\(float[] output,                 ) show
      96 405 moveto (  int offset, int length\) {) show
      96 417 moveto (    if \(input==null\) {) show
      96 429 moveto (      input = new float[MAX_LENGTH];) show
      96 441 moveto (      source.getData\(input, 0, N+length\);) show
      96 453 moveto (    } else {) show
      96 465 moveto (      source.getData\(input, N, length\);) show
      96 477 moveto (    }) show
      96 489 moveto () show
      96 501 moveto (    for \(int i=0; i<length; i++\) {) show
      96 513 moveto (      float sum = 0;) show
      96 525 moveto (      for \(int j=0; j<N; j++\) {) show
      96 537 moveto (        sum = sum + data1[i+j]*FIR_COEFF[j][N];) show
      96 549 moveto (      }) show
      96 561 moveto (      output[i+offset] = sum;) show
      96 573 moveto (    }) show
      96 585 moveto () show
      96 597 moveto (    for \(int i=0; i<N; i++\) {) show
      96 609 moveto (      input[i] = input[i+length];) show
      96 621 moveto (    }) show
      96 633 moveto (  }) show
      96 645 moveto (}) show
      96 657 moveto () show
      96 669 moveto (void main\(\) {) show
      96 681 moveto (  DataSource datasource = new DataSource\(\);) show
      96 693 moveto (  FIRFilter filter = new FIRFilter\(5\);) show
      96 705 moveto (  Display display = new Display\(\);) show
      96 717 moveto () show
      96 729 moveto (  filter.source = datasource;) show
      96 741 moveto (  display.source = filter;) show
      96 753 moveto () show
      96 765 moveto (  display.run\(\);) show
      96 777 moveto (}) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Jan 21 09:16:13 2002

%%EndDocument
 @endspecial 175 x Fl(Fig.)15 b(5.)36 b Fo(An)h(FIR)f(\014lter)i(in)f
(an)g(ob)t(ject)2205 2946 y(orien)n(ted)19 b(language.)i(A)e(\\pull)h
(mo)r(del")f(is)2205 3037 y(used)j(b)n(y)g(eac)n(h)h(\014lter)g(ob)t
(ject)h(to)f(retriev)n(e)2205 3129 y(a)g(c)n(h)n(unk)e(of)j(data)f
(from)g(its)g(source,)h(and)2205 3220 y(straigh)n(t-line)e(co)r(de)g
(connects)f(one)h(\014lter)2205 3311 y(to)k(another.)523
3463 y Fp(pro)r(cedural)32 b(lo)r(op)h(nest,)g(but)h(the)g(programming)
d(mo)r(del)i(is)g(again)f(complicated)h(b)n(y)g(ef-)523
3563 y(\014ciency)h(concerns.)f(That)i(is,)f(a)g(run)n(time)g(library)f
(usually)h(executes)g(\014lters)g(according)523 3663
y(to)40 b(a)f(pull)h(mo)r(del,)g(where)f(a)g(\014lter)h(op)r(erates)f
(on)g(a)g(blo)r(c)n(k)h(of)f(data)g(that)h(it)h(retriev)n(es)523
3762 y(from)31 b(the)h(input)g(c)n(hannel.)g(The)f(blo)r(c)n(k)g(size)g
(is)h(often)g(optimized)f(for)g(the)h(cac)n(he)f(size)g(of)523
3862 y(a)g(giv)n(en)g(arc)n(hitecture,)f(whic)n(h)h(hamp)r(ers)g(p)r
(ortabilit)n(y)-7 b(.)31 b(Moreo)n(v)n(er,)d(op)r(erating)j(on)g
(large-)523 3961 y(grained)22 b(blo)r(c)n(ks)h(obscures)f(the)i
(fundamen)n(tal)g(\014ne-grained)e(algorithm)g(that)i(is)f(visible)h
(in)523 4061 y(a)31 b(StreamIt)h(\014lter.)f(Th)n(us,)h(the)g(absence)f
(of)g(a)h(run)n(time)f(mo)r(del)h(in)g(fa)n(v)n(or)e(of)h(automated)523
4161 y(sc)n(heduling)c(and)h(optimization)f(again)f(distinguishes)h
(StreamIt.)523 4435 y Fg(3.2)95 b(Connecting)31 b(Filters)523
4625 y Fp(StreamIt)h(pro)n(vides)e(three)i(constructs)f(for)h(comp)r
(osing)f(\014lters)g(in)n(to)h(a)g(comm)n(unicating)523
4725 y(net)n(w)n(ork:)e(Pip)r(eline,)h(SplitJoin,)g(and)f(F)-7
b(eedbac)n(kLo)r(op)30 b(\(see)h(Figure)f(3\).)h(Eac)n(h)f(structure)
523 4825 y(sp)r(eci\014es)24 b(a)g(pre-de\014ned)f(w)n(a)n(y)g(of)h
(connecting)f(\014lters)h(in)n(to)g(a)f(single-input,)h(single-output)
523 4924 y(blo)r(c)n(k,)39 b(whic)n(h)g(w)n(e)f(will)h(henceforth)g
(refer)f(to)h(as)g(a)f(\\stream".)f(That)i(is,)g(a)g(stream)f(is)p
eop
%%Page: 7 7
7 6 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)238 b(7)523 1926 y @beginspecial 61 @llx 563
@lly 226 @urx 748 @ury 1670 @rwi @setspecial
%%BeginDocument: echo.eps
%!
%%BoundingBox: 61 563 226 748
%%Title: echo
%%CreationDate: Mon Jan 21 11:07:36 2002
%%Creator: Tgif-3.0-p13 by William Chia-Wei Cheng (william@cs.UCLA.edu)

/tgifdict 4 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

end

%%PageBoundingBox: 61 563 226 748
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100.000 mul 100 div dup neg scale

gsave

/tgiforigctm matrix currentmatrix def

% TEXT
0 setgray
/Courier findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      112 89 moveto (class Delay extends Filter {) show
      112 101 moveto (  void init\(int delay\) {) show
      112 113 moveto (    setInput\(Float.TYPE\); setOutput\(Float.TYPE\);) show
      112 125 moveto (    setPush\(1\); setPop\(1\);) show
      112 137 moveto (    for \(int i=0; i<delay; i++\)) show
      112 149 moveto (      output.push\(0\);) show
      112 161 moveto (  }) show
      112 173 moveto (  void work\(\) { output.push\(input.pop\(\)\); }) show
      112 185 moveto (}) show
      112 197 moveto () show
      112 209 moveto (class EchoEffect extends SplitJoin {) show
      112 221 moveto (  void init\(\) {) show
      112 233 moveto (    setSplitter\(Duplicate\(\)\);) show
      112 245 moveto (    add\(new Delay\(100\)\);) show
      112 257 moveto (    add\(new Delay\(0\)\);) show
      112 269 moveto (    setJoiner\(RoundRobin\(\)\);) show
      112 281 moveto (  }) show
      112 293 moveto (}) show
      112 305 moveto () show
      112 317 moveto (class AudioEcho extends Pipeline {) show
      112 329 moveto (  void init\(\) {) show
      112 341 moveto (    add\(new AudioSource\(\)\);) show
      112 353 moveto (    add\(new EchoEffect\(\)\);) show
      112 365 moveto (    add\(new Adder\(\)\);) show
      112 377 moveto (    add\(new Speaker\(\)\);) show
      112 389 moveto (  }) show
      112 401 moveto (}) show
   grestore

% POLY/OPEN-SPLINE
0 setgray
gsave
   newpath
      290 362 moveto
      0 -49 atan dup cos 8.000 mul 241 exch sub
      exch sin 8.000 mul 362 exch sub lineto
   tgiforigctm setmatrix
   1 setlinewidth
   stroke
grestore
gsave
   tgiforigctm setmatrix
   newpath
      241 362 8.000 3.000 -49 0 tgifarrowtip
   1 setgray closepath fill
   0 setgray
   newpath
      241 362 8.000 3.000 -49 0 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Helvetica-Oblique findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      297 360 moveto (Adder is defined) show
      297 376 moveto (in Figure 8.) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Jan 21 11:07:36 2002

%%EndDocument
 @endspecial 579 2042 a Fl(Fig.)15 b(6.)25 b Fo(An)g(ec)n(ho)h
(e\013ect)g(in)f(StreamIt.)1982 1744 y @beginspecial
52 @llx 462 @lly 227 @urx 613 @ury 1771 @rwi @setspecial
%%BeginDocument: fib-streamit.eps
%!
%%BoundingBox: 52 462 227 613
%%Title: fib-streamit
%%CreationDate: Mon Jan 21 09:16:50 2002
%%Creator: Tgif-3.0-p13 by William Chia-Wei Cheng (william@cs.UCLA.edu)

/tgifdict 2 dict def
tgifdict begin

end

%%PageBoundingBox: 52 462 227 613
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

0 setgray

72 0 mul 72 11.00 mul translate
72 128 div 100.000 mul 100 div dup neg scale

gsave

/tgiforigctm matrix currentmatrix def

% TEXT
0 setgray
/Courier findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      96 329 moveto (class Fibonnacci extends FeedbackLoop {) show
      96 341 moveto (  void init\(\) {) show
      96 353 moveto (    setDelay\(2\);) show
      96 365 moveto (    setJoiner\(RoundRobin\(0,1\)\);) show
      96 377 moveto (    setBody\(new Filter\(\) {) show
      96 389 moveto (       void init\(\) {) show
      96 401 moveto (         setInput\(Integer.TYPE\); ) show
      96 413 moveto (         setOutput\(Integer.TYPE\);) show
      96 425 moveto (         setPush\(1\); setPop\(1\); setPeek\(2\);) show
      96 437 moveto (       }) show
      96 449 moveto (       void work\(\) {) show
      96 461 moveto (          output.push\(input.peek\(0\)+input.peek\(1\)\);) show
      96 473 moveto (          input.pop\(\);) show
      96 485 moveto (       }) show
      96 497 moveto (    }\);) show
      96 509 moveto (    setSplitter\(Duplicate\(\)\);) show
      96 521 moveto (  }) show
      96 533 moveto () show
      96 545 moveto (  int initPath\(int index\) {) show
      96 557 moveto (    return index;) show
      96 569 moveto (  }) show
      96 581 moveto (}) show
   grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Mon Jan 21 09:16:50 2002

%%EndDocument
 @endspecial 116 x Fl(Fig.)15 b(7.)30 b Fo(A)g(F)-6 b(eedbac)n(kLo)r
(op)30 b(v)n(ersion)h(of)g(Fib)r(on-)1982 1952 y(nacci.)523
2270 y Fp(an)n(y)g(instance)g(of)g(a)g(Filter,)g(Pip)r(eline,)h
(SplitJoin,)f(or)g(F)-7 b(eedbac)n(kLo)r(op.)30 b(Ev)n(ery)f(StreamIt)
523 2369 y(program)d(is)h(a)g(hierarc)n(hical)f(comp)r(osition)h(of)g
(these)h(stream)f(structures.)648 2485 y(The)h Fg(Pip)s(eline)e
Fp(construct)i(is)g(for)g(building)g(a)g(sequence)g(of)g(streams.)f
(Lik)n(e)h(a)g(Filter,)523 2585 y(a)36 b(Pip)r(eline)h(has)g(an)f
Ff(init)f Fp(function)j(that)f(is)f(called)h(up)r(on)g(its)g(instan)n
(tiation.)f(Within)523 2684 y Ff(init)p Fp(,)28 b(comp)r(onen)n(t)g
(streams)g(are)g(added)h(to)g(the)h(Pip)r(eline)f(via)f(successiv)n(e)g
(calls)g(to)h Ff(add)p Fp(.)523 2784 y(F)-7 b(or)24 b(example,)g(in)g
(the)h Ff(AudioEcho)c Fp(in)k(Figure)e(6,)i(the)f Ff(init)f
Fp(function)i(adds)f(four)g(streams)523 2883 y(to)37
b(the)g(Pip)r(eline:)g(an)g Ff(AudioSource)p Fp(,)32
b(an)37 b Ff(EchoEffect)p Fp(,)c(an)k Ff(Adder)p Fp(,)e(and)h(a)h
Ff(Speaker)p Fp(.)523 2983 y(This)e(sequence)f(of)h(statemen)n(ts)f
(automatically)g(connects)g(these)h(four)f(streams)g(in)h(the)523
3083 y(order)25 b(sp)r(eci\014ed.)i(Th)n(us,)f(there)g(is)g(no)g
Ff(work)e Fp(function)j(in)g(a)f(Pip)r(eline,)g(as)g(the)g(comp)r(onen)
n(t)523 3182 y(streams)34 b(fully)h(sp)r(ecify)f(the)h(b)r(eha)n(vior.)
f(The)g(c)n(hannel)g(t)n(yp)r(es)h(and)f(data)g(rates)g(are)f(also)523
3282 y(implicit)28 b(from)g(the)g(connections.)648 3398
y(Eac)n(h)19 b(of)h(the)h(stream)e(constructs)h(can)g(either)g(b)r(e)h
(executed)f(on)g(its)g(o)n(wn,)g(or)g(em)n(b)r(edded)523
3497 y(in)39 b(an)f(enclosing)f(stream)g(structure.)h(The)g
Ff(AudioEcho)d Fp(can)j(execute)g(indep)r(enden)n(tly)-7
b(,)523 3597 y(since)30 b(the)g(\014rst)g(comp)r(onen)n(t)f(consumes)h
(no)f(items)h(and)g(the)g(last)g(comp)r(onen)n(t)g(pro)r(duces)523
3697 y(no)37 b(items.)g(Ho)n(w)n(ev)n(er,)e(the)i Ff(EchoEffect)c
Fp(m)n(ust)k(b)r(e)g(used)g(as)g(a)f(comp)r(onen)n(t,)h(since)g(the)523
3796 y(\014rst)30 b(stream)g(inputs)h(items)g(and)f(the)h(last)f
(stream)g(outputs)h(items.)f(When)h(a)f(stream)g(is)523
3896 y(em)n(b)r(edded)d(in)g(another)f(construct,)g(the)h(\014rst)f
(and)h(last)f(comp)r(onen)n(ts)g(of)h(the)g(stream)f(are)523
3995 y(implicitly)i(connected)g(to)f(the)h(stream's)f(neigh)n(b)r(ors)f
(in)i(the)g(paren)n(t)f(construct.)648 4111 y(The)22
b Fg(SplitJoin)f Fp(construct)h(is)h(used)f(to)g(sp)r(ecify)h(indep)r
(enden)n(t)g(parallel)e(streams)h(that)523 4211 y(div)n(erge)17
b(from)h(a)h(common)f Fi(splitter)h Fp(and)f(merge)g(in)n(to)g(a)g
(common)g Fi(joiner)p Fp(.)i(As)f(in)g(a)f(Pip)r(eline,)523
4310 y(the)25 b(comp)r(onen)n(ts)f(of)h(a)g(SplitJoin)f(are)g(sp)r
(eci\014ed)h(with)g(successiv)n(e)f(calls)g(to)h Ff(add)e
Fp(from)i(the)523 4410 y Ff(init)g Fp(function.)j(F)-7
b(or)26 b(example,)h(the)g Ff(EchoEffect)c Fp(in)k(Figure)f(6)g(adds)h
(t)n(w)n(o)f(streams)g(that)523 4510 y(run)h(in)h(parallel,)f(eac)n(h)g
(of)g(whic)n(h)h(is)f(a)g Ff(Delay)f Fp(\014lter.)648
4625 y(The)19 b(splitter)g(sp)r(eci\014es)g(ho)n(w)f(items)i(from)e
(the)i(input)g(of)f(the)g(SplitJoin)g(are)g(distributed)523
4725 y(to)27 b(the)g(parallel)e(comp)r(onen)n(ts.)i(F)-7
b(or)26 b(simplicit)n(y)-7 b(,)27 b(w)n(e)f(allo)n(w)g(only)g
(compiler-de\014ned)g(split-)523 4825 y(ters,)21 b(of)h(whic)n(h)g
(there)f(are)g(three)g(t)n(yp)r(es:)h(1\))g Fi(Duplic)l(ate)p
Fp(,)g(whic)n(h)g(replicates)e(eac)n(h)h(data)g(item)523
4924 y(and)29 b(sends)g(a)g(cop)n(y)g(to)g(eac)n(h)f(parallel)h
(stream,)f(2\))i Fi(R)l(oundR)l(obin\()p Fd(i)2672 4936
y Fh(1)2708 4924 y Fi(,)i Fd(i)2794 4936 y Fh(2)2830
4924 y Fi(,)g Fd(:)14 b(:)g(:)p Fi(,)32 b Fd(i)3070 4936
y Fc(k)3110 4924 y Fp(\),)e(whic)n(h)p eop
%%Page: 8 8
8 7 bop 523 232 a Fo(8)237 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)-6
b(erlag)523 448 y Fp(sends)25 b(the)g(\014rst)g Fd(i)1081
460 y Fh(1)1143 448 y Fp(data)g(items)g(to)g(the)h(stream)e(that)i(w)n
(as)e(added)h(\014rst,)g(the)g(next)g Fd(i)3181 460 y
Fh(2)3243 448 y Fp(data)523 548 y(items)f(to)f(the)g(stream)g(that)h(w)
n(as)e(added)h(second,)g(and)g(so)f(on,)i(and)f(3\))g
Fi(Nul)t(l)p Fp(,)g(whic)n(h)g(means)523 648 y(that)29
b(none)f(of)g(the)h(parallel)f(comp)r(onen)n(ts)g(require)f(an)n(y)h
(input,)h(and)f(there)h(are)e(no)h(input)523 747 y(items)k(to)f(split.)
h(If)g(the)g(w)n(eigh)n(ts)e(are)h(ommitted)h(from)f(a)g(RoundRobin,)g
(then)h(they)g(are)523 847 y(assumed)22 b(to)h(b)r(e)g(equal)f(to)g
(one)g(for)g(eac)n(h)g(stream.)g(Note)h(that)g(RoundRobin)f(can)g
(function)523 946 y(as)27 b(an)g(exclusiv)n(e)g(selector)f(if)j(one)e
(or)f(more)h(of)h(the)g(w)n(eigh)n(ts)e(are)h(zero.)648
1051 y(Lik)n(ewise,)19 b(the)i(joiner)e(is)i(used)f(to)g(indicate)g(ho)
n(w)g(the)h(outputs)f(of)g(the)h(parallel)e(streams)523
1150 y(should)38 b(b)r(e)i(in)n(terlea)n(v)n(ed)d(on)h(the)h(output)g
(c)n(hannel)f(of)h(the)g(SplitJoin.)g(There)f(are)g(t)n(w)n(o)523
1250 y(kinds)29 b(of)h(joiners:)e(1\))h Fi(R)l(oundR)l(obin)p
Fp(,)g(whose)g(function)h(is)f(analogous)e(to)i(a)g(RoundRobin)523
1350 y(splitter,)36 b(and)f(2\))h Fi(Nul)t(l)p Fp(,)g(whic)n(h)g(means)
f(that)h(none)f(of)h(the)g(parallel)f(comp)r(onen)n(ts)g(pro-)523
1449 y(duce)28 b(an)n(y)f(output,)h(and)g(there)f(are)g(no)g(output)i
(items)f(to)f(join.)h(The)g(splitter)g(and)f(joiner)523
1549 y(t)n(yp)r(es)g(are)e(sp)r(eci\014ed)i(with)g(calls)f(to)h
Ff(setSplitter)22 b Fp(and)k Ff(setJoiner)p Fp(,)d(resp)r(ectiv)n(ely)
-7 b(.)26 b(The)523 1649 y Ff(EchoEffect)k Fp(uses)k(a)g(Duplicate)h
(splitter)f(so)g(that)g(eac)n(h)g(item)g(app)r(ears)g(b)r(oth)g
(directly)523 1748 y(and)26 b(as)f(an)h(ec)n(ho;)g(it)g(uses)g(a)f
(RoundRobin)h(joiner)g(to)g(in)n(terlea)n(v)n(e)e(the)j(immediate)f
(signals)523 1848 y(with)j(the)g(dela)n(y)n(ed)e(ones.)h(In)h
Ff(AudioEcho)p Fp(,)c(an)j Ff(Adder)e Fp(is)j(used)f(to)h(com)n(bine)f
(eac)n(h)f(pair)h(of)523 1947 y(in)n(terlea)n(v)n(ed)e(signals.)648
2052 y(The)e Fg(F)-8 b(eedbac)m(kLo)s(op)26 b Fp(construct)e(pro)n
(vides)f(a)i(w)n(a)n(y)e(to)i(create)f(cycles)g(in)h(the)g(stream)523
2151 y(graph.)30 b(The)i Ff(Fibonacci)27 b Fp(stream)k(in)g(Figure)g(7)
g(illustrates)g(the)g(use)h(of)f(this)g(construct.)523
2251 y(Eac)n(h)21 b(F)-7 b(eedbac)n(kLo)r(op)20 b(con)n(tains:)h(1\))h
(a)g(b)r(o)r(dy)g(stream,)f(whic)n(h)h(is)g(the)g(blo)r(c)n(k)f(around)
g(whic)n(h)523 2351 y(a)26 b(bac)n(kw)n(ards)f(\\feedbac)n(k)g(path")h
(is)h(b)r(eing)g(created,)f(2\))g(a)g(lo)r(op)h(stream,)f(whic)n(h)g
(can)g(p)r(er-)523 2450 y(form)f(some)f(computation)h(along)f(the)h
(feedbac)n(k)f(path,)h(3\))g(a)g(splitter,)g(whic)n(h)g(distributes)523
2550 y(data)33 b(b)r(et)n(w)n(een)g(the)g(feedbac)n(k)f(path)i(and)e
(the)i(output)f(c)n(hannel)g(at)g(the)g(b)r(ottom)h(of)f(the)523
2650 y(lo)r(op,)g(and)h(4\))f(a)h(joiner,)f(whic)n(h)g(merges)g(items)h
(b)r(et)n(w)n(een)f(the)h(feedbac)n(k)f(path)h(and)g(the)523
2749 y(input)23 b(c)n(hannel)e(at)h(the)g(top)g(of)g(the)g(lo)r(op.)g
(These)f(comp)r(onen)n(ts)h(are)f(sp)r(eci\014ed)h(from)f(within)523
2849 y(the)k Ff(init)e Fp(function)i(via)g(calls)f(to)g
Ff(setBody)p Fp(,)e Ff(setLoop)p Fp(,)g Ff(setSplitter)p
Fp(,)e(and)25 b Ff(setJoiner)p Fp(,)523 2948 y(resp)r(ectiv)n(ely)-7
b(.)29 b(The)h(splitters)g(and)f(joiners)h(can)f(b)r(e)h(an)n(y)f(of)h
(those)g(for)f(SplitJoin,)h(except)523 3048 y(for)f(Null.)g(The)h(call)
e(to)i Ff(setLoop)c Fp(can)j(b)r(e)g(ommitted)h(if)g(no)f(computation)f
(is)h(p)r(erformed)523 3148 y(along)d(the)i(feedbac)n(k)f(path.)648
3252 y(The)h(F)-7 b(eedbac)n(kLo)r(op)27 b(has)h(a)g(sp)r(ecial)g
(seman)n(tics)g(when)g(the)h(stream)e(is)i(\014rst)f(starting)523
3352 y(to)23 b(run.)h(Since)f(there)h(are)e(no)i(items)f(on)g(the)h
(feedbac)n(k)f(path)h(at)f(\014rst,)h(the)f(stream)g(instead)523
3451 y(inputs)j(items)g(from)f(an)g Ff(initPath)d Fp(function)k
(de\014ned)g(b)n(y)g(the)f(F)-7 b(eedbac)n(kLo)r(op;)25
b(giv)n(en)f(an)523 3551 y(index)j Fd(i)p Fp(,)g Ff(initPath)c
Fp(pro)n(vides)j(the)h Fd(i)p Fp('th)g(initial)g(input)h(for)e(the)i
(feedbac)n(k)e(joiner.)h(With)g(a)523 3651 y(call)f(to)h
Ff(setDelay)c Fp(from)j(within)i(the)e Ff(init)f Fp(function,)j(the)f
(user)f(can)g(sp)r(ecify)h(ho)n(w)f(man)n(y)523 3750
y(items)g(should)g(b)r(e)g(calculated)f(with)h Ff(initPath)d
Fp(b)r(efore)i(the)h(joiner)g(lo)r(oks)e(for)h(data)h(items)523
3850 y(from)h(the)h(feedbac)n(k)f(c)n(hannel.)648 3954
y(Eviden)n(t)36 b(in)i(the)g Ff(Fibonnacci)33 b Fp(example)j(of)i
(Figure)e(7)h(is)g(another)g(feature)f(of)i(the)523 4054
y(StreamIt)e(syn)n(tax:)f Fi(inlining)p Fp(.)i(The)f(de\014nition)g(of)
g(an)n(y)f(stream)g(can)h(b)r(e)g(inlined)h(at)f(the)523
4153 y(p)r(oin)n(t)23 b(of)g(its)g(instan)n(tiation,)g(thereb)n(y)f
(prev)n(en)n(ting)g(the)i(de\014nition)f(of)g(man)n(y)g(small)f
(classes)523 4253 y(that)40 b(are)e(used)i(only)f(once,)g(and,)g(moreo)
n(v)n(er,)e(pro)n(viding)h(a)h(syn)n(tax)f(that)i(rev)n(eals)e(the)523
4353 y(hierarc)n(hical)29 b(structure)h(of)h(the)h(streams)e(from)g
(the)h(inden)n(tation)g(lev)n(el)g(of)g(the)g(co)r(de.)g(In)523
4452 y(our)c(Ja)n(v)-5 b(a)26 b(syn)n(tax,)h(w)n(e)g(mak)n(e)g(use)g
(of)h(anon)n(ymous)e(classes)g(for)h(inlining)h([16].)523
4725 y Fg(Rationale)57 b Fp(StreamIt)41 b(di\013ers)f(from)g(other)f
(languages)g(in)h(that)h(it)g(imp)r(oses)f(a)g(w)n(ell-)523
4825 y(de\014ned)23 b(structure)e(on)h(the)h(streams;)e(all)h(stream)g
(graphs)f(are)g(built)i(out)f(of)g(a)g(hierarc)n(hical)523
4924 y(comp)r(osition)28 b(of)h(Pip)r(elines,)g(SplitJoins,)f(and)h(F)
-7 b(eedbac)n(kLo)r(ops.)27 b(This)i(is)g(in)g(con)n(trast)e(to)p
eop
%%Page: 9 9
9 8 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)238 b(9)523 448 y Fp(other)39 b(en)n(vironmen)n(ts,)g(whic)n(h)
h(generally)e(regard)g(a)h(stream)g(as)g(a)h(\015at)f(and)h(arbitrary)
523 548 y(net)n(w)n(ork)24 b(of)g(\014lters)h(that)g(are)f(connected)h
(b)n(y)f(c)n(hannels.)h(Ho)n(w)n(ev)n(er,)e(arbitrary)f(graphs)i(are)
523 648 y(v)n(ery)34 b(hard)g(for)g(the)h(compiler)f(to)g(analyze,)g
(and)g(equally)h(di\016cult)g(for)f(a)g(programmer)523
747 y(to)27 b(describ)r(e.)f(Most)h(programmers)d(either)j(resort)e(to)
i(straigh)n(t-line)f(co)r(de)g(that)i(links)e(one)523
847 y(\014lter)34 b(to)g(another)f(\(thereb)n(y)h(making)f(it)i(v)n
(ery)d(hard)i(to)g(visualize)f(the)i(stream)e(graph\),)523
946 y(or)i(using)h(an)g(ad-ho)r(c)f(graphical)f(programming)g(en)n
(vironmen)n(t)h(that)i(admits)f(no)g(go)r(o)r(d)523 1046
y(textual)28 b(represen)n(tation.)648 1152 y(In)k(con)n(trast,)f
(StreamIt)h(is)f(a)h(clean)g(textual)g(represen)n(tation)e(that{esp)r
(ecially)h(with)523 1251 y(inlined)36 b(streams{mak)n(es)c(it)k(v)n
(ery)e(easy)g(to)h(see)g(the)g(shap)r(e)g(of)g(the)h(computation)e
(from)523 1351 y(the)d(inden)n(tation)f(lev)n(el)g(of)h(the)f(co)r(de.)
h(The)f(comparison)f(of)h(StreamIt's)h(structure)e(with)523
1450 y(arbitrary)j(stream)g(graphs)h(could)g(b)r(e)h(lik)n(ened)g(to)f
(the)h(di\013erence)g(b)r(et)n(w)n(een)f(structured)523
1550 y(con)n(trol)e(\015o)n(w)h(and)g(GOTO)g(statemen)n(ts.)g(Though)f
(sometimes)h(the)h(structure)f(restricts)523 1650 y(the)e(expressiv)n
(eness)d(of)j(the)g(programmer,)d(the)j(gains)e(in)i(robustness,)f
(readabilit)n(y)-7 b(,)28 b(and)523 1749 y(compiler)g(analysis)f(are)g
(immense.)h(Though)g(graphical)f(programming)f(languages)g(ha)n(v)n(e)
523 1849 y(not)35 b(gained)g(large-scale)d(acceptance,)j(a)f(graphical)
g(editor)h(for)f(StreamIt)h(w)n(ould)g(ha)n(v)n(e)523
1949 y(adv)-5 b(an)n(tages)24 b(since)i(ev)n(ery)f(stream)h(graph)f
(has)g(a)h(precise)g(textual)g(equiv)-5 b(alen)n(t)26
b(that)g(could)523 2048 y(also)38 b(b)r(e)h(edited)g(b)n(y)f(the)h
(programmer.)e(F)-7 b(urther,)38 b(the)h(hierarc)n(hical)e(structure)h
(of)h(the)523 2148 y(stream)27 b(graph)f(could)i(simplify)g
(visualization.)648 2253 y(On)k(\014rst)g(glance,)g(the)h(statemen)n
(ts)f(within)h(a)f(StreamIt)g Ff(init)f Fp(function)i(migh)n(t)g(ap-)
523 2353 y(p)r(ear)26 b(more)g(lik)n(e)g(a)h(v)n(erb)r(ose)e(API)h
(than)h(a)f(no)n(v)n(el)g(language.)f(Ho)n(w)n(ev)n(er,)g(it)i(w)n(as)e
(actually)h(a)523 2453 y(careful)20 b(design)f(decision)h(to)g(sp)r
(ecify)g(all)g(\\stream)f(con\014guration)f(information")h(via)h(func-)
523 2552 y(tion)25 b(calls)e(from)i(within)g(the)g Ff(init)d
Fp(functions.)j(While)g(the)g(curren)n(t)f(syn)n(tax)f(is)i(somewhat)
523 2652 y(tedious,)34 b(there)g(is)g(great)f(\015exibilit)n(y)h(in)h
(this)f(approac)n(h,)e(since)i(the)h(user)f(can)f(in)n(termix)523
2751 y(con\014guration)22 b(directiv)n(es)i(with)g(statemen)n(ts)g
(that)g(calculate)g(the)g(con\014guration)e(param-)523
2851 y(eters.)34 b(This)f(allo)n(ws)g(for)h(fully)g(parameterized)f
(graph)f(construction{the)h(FFT)i(stream)523 2951 y(in)i(Figure)f(8)g
(inputs)h(a)f(parameter)e Ff(N)j Fp(and)f(adjusts)g(the)h(n)n(um)n(b)r
(er)f(of)h(butter\015y)f(stages)523 3050 y(appropriately)-7
b(.)22 b(This)i(further)g(impro)n(v)n(es)e(the)i(mo)r(dularit)n(y)f
(and)h(readabilit)n(y)e(of)i(the)g(co)r(de.)523 3329
y Fg(3.3)95 b(Messages)523 3524 y Fp(StreamIt)22 b(pro)n(vides)e(a)h
(dynamic)g(messaging)f(system)i(for)f(passing)f(irregular,)g(lo)n(w-v)n
(olume)523 3623 y(con)n(trol)28 b(information)g(b)r(et)n(w)n(een)h
(\014lters)f(and)h(streams.)f(Messages)f(are)h(sen)n(t)h(from)f(within)
523 3723 y(the)j(b)r(o)r(dy)f(of)g(a)g(\014lter's)g Ff(work)e
Fp(function,)j(p)r(erhaps)e(to)h(c)n(hange)f(a)h(parameter)f(in)h
(another)523 3823 y(\014lter.)25 b(F)-7 b(or)25 b(example,)f(in)i(our)e
(soft)n(w)n(are)f(radio)h(co)r(de)h(\(see)g(Figure)f(8\),)h(the)h
Ff(CheckFreqHop)523 3922 y Fp(stage)36 b(sends)h(a)g(message)f
(upstream)g(to)h(c)n(hange)f(the)i(frequency)f(of)g(the)g(receiv)n(er)f
(if)i(it)523 4022 y(detects)i(that)h(the)g(transmitter)e(is)h(ab)r(out)
h(to)f(c)n(hange)f(frequencies.)g(The)i(sender)e(can)523
4122 y(con)n(tin)n(ue)25 b(to)g(execute)g(while)g(the)h(message)e(is)h
(en)g(route,)g(and)g(the)h Ff(setFreq)c Fp(metho)r(d)k(will)523
4221 y(b)r(e)36 b(in)n(v)n(ok)n(ed)e(in)h(the)h(receiv)n(er)e(with)i
(argumen)n(t)e Ff(FREQ[k])f Fp(when)i(the)h(message)e(arriv)n(es.)523
4321 y(Since)27 b(message)f(deliv)n(ery)g(is)i(async)n(hronous,)c
(there)j(can)g(b)r(e)h(no)f(return)g(v)-5 b(alue;)27
b(only)g(v)n(oid)523 4420 y(metho)r(ds)h(can)f(b)r(e)h(message)e
(targets.)648 4526 y Fg(Message)38 b(timing.)p Fp(The)32
b(cen)n(tral)h(asp)r(ect)i(of)f(the)h(messaging)e(system)h(is)h(a)f
(sophis-)523 4625 y(ticated)d(timing)f(mec)n(hanism)g(that)h(allo)n(ws)
e(\014lters)h(to)g(sp)r(ecify)h(when)f(a)g(message)f(will)i(b)r(e)523
4725 y(receiv)n(ed)25 b(relativ)n(e)f(to)i(the)g(\015o)n(w)g(of)f
(information)h(b)r(et)n(w)n(een)f(the)i(sender)e(and)g(the)i(receiv)n
(er.)523 4825 y(Recall)21 b(that)h(eac)n(h)f(\014lter)h(executes)f
(indep)r(enden)n(tly)-7 b(,)23 b(without)f(an)n(y)f(notion)g(of)h
(global)e(time.)523 4924 y(Th)n(us,)33 b(the)h(only)f(w)n(a)n(y)f(for)g
(t)n(w)n(o)h(\014lters)g(to)g(talk)g(ab)r(out)g(a)g(time)h(that)f(is)g
(meaningful)h(for)p eop
%%Page: 10 10
10 9 bop 523 232 a Fo(10)199 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)
-6 b(erlag)523 4809 y @beginspecial 0 @llx 0 @lly 359
@urx 566 @ury 3458 @rwi @setspecial
%%BeginDocument: code3.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: code3.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Bill Thies
%%CreationDate: 1/21/2002
%%CropBox: 0.000000 0.000000 358.087891 565.417969
%%BoundingBox: 0 0 359 566 
%%HiResBoundingBox: 0.000000 0.000000 358.087891 565.417969
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{$SubstituteFont begin
/$used false def/$fontname 4 index def end 3 index findfont $SubstituteFont
begin $used{false}{dup/FontName known{dup/FontName get $fontname eq 1 index
/DistillerFauxFont known not and}{false}ifelse}ifelse exch pop end{exch pop
exch pop exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch
findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put
copyfont definefont pop}bind def/?str1 256 string def/?str2 256 string def
/?add{1 index type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index
findfont/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded
get 1 dict begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3
index putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval
?str1 0 2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict
dup/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end userdict/$SubstituteFont 20 dict put 1 dict begin
/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop/Courier}bind}
ifelse def/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not{
countdictstack array dictstack 0 get begin userdict begin $SubstituteFont
begin/$str 128 string def/$fontpat 128 string def/$slen 0 def/$sname null def
/$match false def/$fontname null def/$used false def/$fontname null def
/$italicangle 26.5 def/$findfontByEnum{dup/$fontname exch def $sname null eq{
$str cvs dup length $slen sub $slen getinterval}{pop $sname}ifelse $fontpat
dup 0(fonts/*)putinterval exch 7 exch putinterval/$match false def mark{
$fontpat 0 $slen 7 add getinterval{/$match exch def exit}$str filenameforall}
stopped cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$buildfontname{length $str 1 index(-)
putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$used true def dup length $slen gt $sname null ne or $slen 0 gt and{$sname
null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{$sname}ifelse
dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap findresource
/CIDSystemInfo get{def}forall $findfontByROS}{pop $findfontByEnum}ifelse}{
//SubstituteFont exec}ifelse/$slen 0 def end}}{{$SubstituteFont begin/$used
true def dup length $slen gt $sname null ne or $slen 0 gt and{$findfontByEnum}
{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{/findfont{
$SubstituteFont begin dup systemfindfont dup/FontName known{dup/FontName get 2
index ne}{true}ifelse dup{/$used true def}if{$slen 0 gt $sname null ne 3 index
length $slen gt or and{pop dup $findfontByEnum findfont dup maxlength 1 add
dict begin{1 index/FID eq{pop pop}{def}ifelse}forall currentdict end
definefont}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end}if
end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -565.418 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 565.418 ln
358.088 565.418 ln
358.088 0 ln
clp
343.186 218.479 mo
342.343 216.207 340.904 213.388 339.382 211.641 cv
343.186 213.017 ln
346.989 211.641 ln
345.467 213.388 344.028 216.207 343.186 218.479 cv
false op
0 0 0 0 cmyk
f
0.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
254.686 141.525 mo
254.686 141.525 255.979 142.819 257.561 144.4 cv
259.142 145.981 264.936 147.275 270.436 147.275 cv
333.186 147.275 ln
338.686 147.275 343.186 151.775 343.186 157.275 cv
343.186 213.65 ln
0 0 0 1 cmyk
s
343.186 216.064 mo
342.764 214.929 342.045 213.519 341.283 212.646 cv
343.186 213.333 ln
345.088 212.646 ln
344.326 213.519 343.606 214.929 343.186 216.064 cv
f
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: Courier Initial
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (c) 1989, 1990, 1991, 1992, 1993, 1996, 1997, 1998 Adobe Systems Incorporated.  All Rights Reserved.) def
/version (004.000) def
/FullName (Courier) def
/FamilyName (Courier) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -224 def
/UnderlineThickness 52 def
end def
/FontName /Courier def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -6 -249 639 803 } def
/XUID [6 44052 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF07CD53FCFA5F8BEB4C85C022641C2817904D210EE
C1B9CB391931A7DA79E981F6D449067CB22BBBC1C7E17F31494A030C64C3D168
01AD7EA9844289C5FBF13E87EB38D47EFECDFD90987CE63AEE2F73A41DE9D88E
47972B7D71DFE3C0971C15A0A2EA71DB75E8BDC8C575FCE75767F0757BD4C3C5
8EF2FE5165B8546C92942358A58A418D001D670BAC478494625C3F163F0CD28E
7A310B1DCF9DE24EAA3915D162715D989E4195F752D98AA3F931758A7593B8D3
EC8B0E6F0595582B46C09C38DE491876FDE8215B3EE34EDD4786C0C7A3CE5DF1
8A700014C8A22ABA9A86068E22E576F8F99D9E02926B326829224A29008B6A42
68E0572B16A9483D4982E08663803B6B595CE202EC34889AD55E68C1517B0147
AAD37FD80C565A7442B8F0EB1481B8237F6BFE35261E22DC029FEE4D3F209D80
2EF7B2A2864A8B0A54139C8EBAEDBF9E51A55C608E32A4923E2C1FCA43DCD5C1
779278E12954773FFC02D1AC37E82896B5600D237CDF49D06665F52AAC93A099
EFC6D65BD9857E2326543E4C47F9CAC6F3585FB5A3669036ECF0F6C47CA5A928
5E52478ABFFDF5B789B97FB56E47A38537631B551770393C1118D978F755B1F7
4E8DA30A09AA5EB90487A9405862EA007BF66633C9F580B996E8D0A275B43BE8
1189FE61073FC03A9B1F3CEC85EC476BF67B6C47746321F58F096D099F9B11EA
1A831B62ABEC9959ACE371407E1CB3C0FD111DE17536B349BA959E0BEABDCE76
3683EB04F536BFDAFDCD692AA7019CEFDDB9D8BA507FA146D8BD2A2A55FC80F6
6637AD8EA0CEB1BDD84A60BD5C13B07F9A0B4036A0EFCC76A9511C476D839F68
3323611F9D9EA6F9724485B677B50B645AE76E53584D93A7CD7573E43D0FFBF2
74F321FD07CF320580AD97B00988306FCD048D6087241B4034BFF6672B8E649C
84F1C4A6CE4C8A5AF0DB83D8CFF7689E8698F7A29A60E951FA4397A9A53702C9
2C21745DDE740EC662DEC80CF9B610531B7CF950A029E51A236B17C9E9F3FFAA
0AF4C58A51B1E01EBC8C990EEE5C9B9ED9F97FA152087C87997AF19E9600C4B9
8CCB0DB1DFF49F41E6C74B96D496BF9AC15254F424F86FA2958DF294EB62F4FB
4D9E274C00EFDC6BAB7E4D7F2C4CE074BBD7FD6D03304D718AD80FEBBDA6BE1B
6422CDA2B7143B6FB19A24A1B4155C3F289A692A41430A3B00AADBBB832E1CF9
65E2BBEACDED81B3E7D3F7C0EA441754AD2419D6F7B9FB92A9EB440E60431A99
A2909BF6280F444E04D15F8ADF0F355A53C3B1A27DDB57388E194357F2F872FF
8CCFEAB306C4004426398C2A6EA105D100192328D5C0F7FDCA875F673927EB95
4D88E506BD3E184BDF09551E01FD095818CED7AE3FE4C9BFE1810F02ABCB97F1
8892C6EA45D3611DF6736FDBD05BE05C269120B0F0721C756C028060050A2F53
005C8406D99AE74D9A82CEB53399FCDB0E34EC3FFCD1853EEF964FF3E79365AE
2F074713342E1DE752D1FE3B62481D6003BDDB64535A61B22C44D432004DA354
352C585641C5D50553C105B50C5335043686AB9B62E88A0ACC26B45A85BC8153
A096C00968110C1D5FAA7C106CAE657BA442022B722BF32A2B84250F34A3CF22
5B33D0746E3BC4C30D3993A2B2011F23203AFD0DBE639D13A9E8F51C411B046D
15E71EBEF18568BB3734463CD721DED674D4EB8D043E5F67DEB29ACAB0CEC9B0
BCABF4AFA2B066D6A4F3F6DE95EB15422A40E2F6B3CCC89EDCB06EFD23640C77
D03B57FF7ABC3C6182EAF7B4DD3DD4FCA2090CB9D0E0704E357351876FC4DAF4
509982FB1CF9D7C36CC8D8364D447A563576512F9030B5E6CF0C370D7E4C5DAF
37A3D99E2B546E9723D4AD18DA6A0AEBCF236BC7657F3591B3448E2BACBA69A2
BDC6DE312991F1EFE5B947F27208C3C73E8EA4F8BC911490DE3F286305AB3549
FEC89925767B933D6D1DF4864DCBB52850C9FC21B5288ED0F1DA20A9C2595A2C
C0E0CE588C26E5B81E442F9011C67ABEB86E07BDB452E2F9BB3728D3585B7296
181C7237BF3FE95025FC3CD779827F6E0B5B643212E70A07251919A5606E90E8
5C233F17647352ABF56421942310F3BE055E334B61881B035D5604ACB8D2EFBF
22AF1508B205CD573DF6DDB6C5417F63EDEA2264C7C00B833668F73C5E8588C4
2DC0C36B8F7BC2C6A903E6ADAA3EF829246267BFB355D35FBB6978C81B447336
734502B7759E1D46E7F86C1EE3E59A204F7772550C4E8DDC66EAEBADBD593152
DACF68EEA48DEE8D9F6A17F5EFDE49C830B68E29E25D87A95C66E93AA6F4E772
1727D3B2F42A163FEEA31CF6929000F80D1B429E1F55631173C66E10EE2EE321
7BC2BD2418BC21D4D10D3C41A329A16A45567184DBC6A3AB00B4E6B908DCF69B
13CA651EBEEF30E070FC55E93FE8768FCDC4A4131C321180745B2E6009C1910F
3A043960EAB1C14ADA7655AD9DD87A844A052A73B0D1DDC1CF1BEE8FD36C990A
41062666B18E5344AC9102226D48982144C38B1053ADA74A01C00F62EEC7272F
CF267EE13223D5B2FB0E2A7960D2D4B8DA69636E898DADB3721B5CDE5B2302C9
FC7650CCDA1C53A64E61BE4E2FD422E7B9BE40539CB89C633EADB7DC35933AC3
7732F76A6360592628B6633DD525177A8722708FE1861D58D24FA90FED95B801
92812D65F46A45A5749D95910B06258143E8A8EC127DE1E41B362A81757001BF
F5479767C6368DBE3615B76A0B248065EE4B43CBBDB295C929DBA29354AF0C58
90016AB9564F923F973DB80F23D1343D2E131296149B89CC5AFA3757C5CF8430
E532CE9A9D15788FEC35FC5EA02F561B419DEC0C3A05FE546883006AF7016257
736E2ED8BCCE173CA4524150505ADEC2C5BE60DCA570212CC7A80F2D58E53E1A
B80F976758D91C692D1AA06D877DDC18C84934E975488E4853F378A374D31C64
96592DBA233C3159E90C0F9D206A5F8EB97B2CA8C317E30E836A91504CB3A3B9
F4AEE8E357949E14DEA282983E004E3FE61BE46DE0A1DB5C128307FF65DF480D
50925E3CF94B34AA4007C5969CC9F261E27C45955D748A5B14D165FB44DC423C
3B1542276A87C64AA13B0618D2CF4891A899BD567A39D2A8A876E1817F196173
8C436F80BAE132B180C17711A7A84825E86C016434ECD03D29A04893B2AA0D44
3737BA39AAC9855387F1045DE12B2738AF506FE00553151C2D4BBDDE4F9FF657
3D9B9DA0BFA7A42FE8E97AD778D9A251C499F71C390D894CA71F3630336E6A7C
3073E5CD8E51C320BF84555B832169BA64AA18579F8AED1FFFCA4CCB5B8692A4
78401991A45FD883ACAD105B6C9F245FA35CA965BC7EEF55B540D738DA5CF662
91FFE0FA57CD9B094A2012B231ECBF5DE2F7105A36856AEB931C49DA43CA33F1
C31BFE6B6E0FE5469B1F3E6ABE590854DB402032848769483DE6B61393D7BEB5
3C1F386517F3D904F0E74548F9E8AF1F46633D26B6DC27ADAC3FD019B17D4096
AD1E9C9FAB545F61143850E9917E1DB021206AE5113D15766937E1061550BA4A
775D21DA02DAD6A13A598B10EB7DD46B0F113C5B152DB19F34B3A2A8E83A34F0
BFB56FEDE26891EEA4BFFD6073A9D1588F18A6818BE6226D56F259A2BDEDB894
60A1D3BE0D3A48C8E2F5DC8D07902C8C5CB6B28E4D3FFB425F2BA6AFCB491D84
4228F6A7FF3A6F8DF3516A39879CBAF1C9C5FBBBE0D9C94EEF75984B2F9CB400
F0812105956990F4E053FB167BA1C18684C949353A0E0DB51F3FF11AFBA06BE3
EB77191D966035BFB25E39FD26C00BC53C46982E95A1F94BB2E02B6CFA4705AD
9E154DD8649C213BB6F57043324968614C720ECBBBC1EA48A6C7E09345A0310E
D986412063850142748A3A299EA4D802BBAB2959074A8F7643AEC7526CFE2B7D
52E22BF8EFEBE2D2D30B625586B14475247F4AFAC5210C356BA4530B225BACFE
A4134F68234B003B2DFDA9A66FBFEEB6D8C142030327DBC395C19BC70282002D
7FFD6C3947EC7682A0AB88C422D86162686391E6B930CE0192992D07BFB9ACA8
2998509887965C9B7BBAB6D8996C104390E7F7D2BA39523360812873D8A38B7B
97DC529F0BA37D81E9D538E06EC50B21D42C6959ED6B54B6A855BF330810EAE1
E49ABE7BBDF3188D4C9F7BE150DC402BD032C4A85A91C25B6FBE7BC43ADDE128
E980DBD46142D52C123B1FF332F6916BB2A4188AEE598BCBC6F664F5A6D12B94
DA1CD61AD39C9C5F41C9883C0F6ADCF8AFC547E4BB776996CACCFB653A47C527
F9C3890F444039134D04A276599F10E7AB40A1CF7589D787F51495DB76616CBC
D45A939F39CA80551F30DF9E43EFDC20342882047A8507D57F0D2DA28408AFFA
29DD3CEC65F1D84DC772E9A2D24E170C41A4D9484383F4435136382866BAB08A
1ED711C78E378A2DC7C8620C0E6B623D9ECBCD7B357A2A316950FFB94BBDE1ED
B8DC245E2AB19D4E56FE8F6CA661B030A427D8296ED1B63F875181705CBF1515
7E6931E58D5FB73FA3CFED5A1A4B6EDFFCC7A921E8FC3A93FF52240DF1A4EE84
725D6B94313D3B2AA9D10106EBD662BAB1148E861EBDA12F48462141F6EBCF1E
D1E228B051A552172E5EA148180830F73B29975E3B72BFDDACCA2BDE77638CE6
7D9DE7B05C99BB840A4E4B22864EAE65D9BDBA2BF51465CF361E6D4EB0F17964
A90C720D5AF84D9075AFA2C968E58DD14B550BD824F8C2CAAB5F515AF8AC4895
E036FA50035762667F4F647E4B626450B746E7B325AD158D2543B6BE67DF5320
C7E45616753744CC616F20181323D4F6490BCE6959B2943D064CEB998AD89C72
C38B30DDF8425BF237768BFA24B45F80B99F901489868D227EE6CDA9A7A5073E
674EFF28AE5291C8010E387C1DCBDDE3433E49EC61377884E05CC8897B12FFBA
475F8D72C03C55BD22B776A07D8C7CED955B6A4159EED444A907B1616CC4BF16
874B823D3C84CFE32968D91C5B57D14D9DC6E2F47C75044E919C367E015F479C
059B5D26A51D1851240E6C6C7764FBE7B01E1FCF05250A8494F318B4E71BC201
99FC519296477E81872C1F846FEC83453B2F3D9438678D96EE44084DA5DCB2C1
B21AEDC3FED85F312DCF642BDA9B72CC320517A777F28C1D30959F940783D4AC
E62FFB17D4DFFFD8D938AF91E045CED47C40952BD97C18D7DDE4BFD852833D80
B5E32D2EEE682DAAC03EA38F5DCDB647EF636E22155F3B8C893F5AFFA0F78931
6F0B48396BDDA36B5C3381F0FB10336BC464FD93D7C7CAC3223C0FC06326995E
5DFD7906A720B61CFCA7B6B3B4D436479759C85B592C2D61897232F0A11A3C05
FF288E99EFBBC0600E86998C6468963F978529C06E161A2045518C7B32300A9F
8CDFD52CD61B27DF56A0D64EB5B71579D8F1CC890416B71346F400472E7CE640
9873C15E4F35975FE6AA6F06A8C8CA042F01FB153DECC45B567A5D5EC47B0778
821DCF977B4E0781EB2E43F135E2C68FCD51113703A967672119AF86E0453985
3A48027757F9F6974472ACEF12DB2B73BD531055B476D952D92DC67BF3CB098A
A380EF5ED29A11326A553CEE63873BBA5E7867C683D7B69007F5081D8E6A02F0
2D837F9D8182CB1E8F437A2E2078CEEDB75A72189368D3C9DE80EF424CDF48F6
958604DD99E612DDE6FB6C561B3A7905A37C33
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 32 /space put
dup 67 /C put
dup 70 /F put
dup 81 /Q put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
pop
%ADOEndSubsetFont
/Courier*1 
[
32{/.notdef}repeat /space 34{/.notdef}repeat /C 2{/.notdef}repeat /F 10{/.notdef}repeat /Q 
15{/.notdef}repeat /a /.notdef /c /d /e 2{/.notdef}repeat /h 
/i /.notdef /k /l /.notdef /n 3{/.notdef}repeat /r 
/s /t /u 2{/.notdef}repeat /x /y 134{/.notdef}repeat
] /Courier nfnt
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 4.5166 mov
0.000244141 0 wsa 100 get (class CheckQuality extends Filter ) wsh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D436C890642AA
66CC0DBBB2061439D5C4E79A83D5F248FBC44CA9C6E314CBF7C686BFD01290D0
772E5845CB01571D6399E72C30BF899AA856C83E1F64128136B8723A9EF95A82
777CB72D8125423F3E87A2BFFF3567870C92FDF88C8B72D21B794AE5D59DF83A
AEBF7108ED95E29BD645E314C8657635A408DD5A10A26519B7947C56481D8100
770C989CAB6B561CC9748424D28DBB572D540FCFA54FF636B3D7BE0D9438A3AD
08755448163FB4A1D0A28D4465
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 123 /braceleft put
pop
%ADOEndSubsetFont
/Courier*2 
[
123{/.notdef}repeat /braceleft 132{/.notdef}repeat
] /Courier nfnt
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.845 4.5166 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 11.2666 mov
(  ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D422068D87121
B7C0C43D59D24768D323CCE88528DBBBA658F520BF9B09E1D0B7DE9C6CF8A68F
4D7F8ECFBC70888FA1104D2D1D807783260C18B93805AB30F69DBF50BB74192A
BE4C17DABA664895C383EAE545ADF87C2D4299FEACE614FFB71FAA1954A4FC30
2B73E31C3D3E1FECE349C35D9AB3095069D9CD05657A00FE6D35D4FB9A9DA183
864DC1910801E938EE6F10890B7FC9550EF0C1442DCDBB7BF66289039823E64B
1A10E8DCF9C8BB5C7548B761207FFE651D5D12EF6809EC9856E281225AE1606D
D23F63DCF7D4FE290C5383BFE04101E4B689F205414DFB1A98E8BB1BCB112561
7DCE4BE5C08FEC5D7F6F1A1F04D850B84F74403417E1D8526B40602D547A9FD1
0408DC4D72B1740C7130C1C978FBA0E29172EEF6E06434E76BEE179C0CC7A26A
96764DCB515AFB427C81D6D25CCDEB5A137D8DFF4D5CDDFFE5CB43C068E21A9F
7C4A932839A323A6B104C1A1484FA8F86005D2C87C82000EB989338CB3968D65
5892619AEB5E44B9AE229510DB9FF6CCEC8E4E57E6EE6F3470D74D12EFB52376
AF1FAD3275BF86F4D2C831AB03D2390F55FAE5AC968489203F44EC41C4D535F7
AAA948CD4164602DBEF323D53AF69D0C589E5CF3DCF3F213E923FF4508D7FE76
D612E1D900C13CDD5299E5348347FAB99B41FA0C3376E0C26F09224EE958612A
00177858D0EAFA5E65EBA13CA535DC1005463FB731A2900DAD2F2B1725F1500C
A8A8B237BD4CD9D0DE6AFBAF3714D5A477E5A27C360123CC18B313530382CCF4
FA2CDB23B68FC9712E0F2A582D21554474D9BF7AB6275DD5CB4071A7A14F58AF
E55568C63ED60F91B1A3E31D07403B4DF8A142E1063B9424EEB952BFE3A1B358
766592C6245EAB635641590179E162E29AF3C92CED0D60663362CCB3E7D0798B
88C1CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 44 /comma put
dup 59 /semicolon put
dup 72 /H put
dup 76 /L put
dup 102 /f put
dup 111 /o put
dup 118 /v put
pop
%ADOEndSubsetFont
/Courier*3 
[
44{/.notdef}repeat /comma 14{/.notdef}repeat /semicolon 12{/.notdef}repeat /H 3{/.notdef}repeat /L 
25{/.notdef}repeat /f 8{/.notdef}repeat /o 6{/.notdef}repeat /v 137{/.notdef}repeat
] /Courier nfnt
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 11.2666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
184.22 11.2666 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 11.2666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 11.2666 mov
(at a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 11.2666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 11.2666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 11.2666 mov
(H) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 11.2666 mov
(i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 11.2666 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 11.2666 mov
( a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 11.2666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 11.2666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 11.2666 mov
(Lo;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 18.0166 mov
(  ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D63CBFDE4B972
05AA2AC196070E7DB1F79C6798F4A26E6B6DD3FEF5CE2A5828DEF3498C59F60D
8FF254BCC07D6EBC7F399D5ED624B1DB3851FE6DE8270FE16648DFA96E88854A
C41A3F4E8C08D867824FB6A18494663E1A3D2039CFC5528C11FD70510D8D8546
B50504AACBAE74C5D557D071277D32BD0A1F4ECF3F0B8E4E83B6A759631E4E8A
B85091EC8BF52644BEB0D6A494D393F669B77BEA678529937E95F65241059ECC
B448A94C22B64594FB5CA2429E3410FA3E11C1EEFB45E5851A50E6BFD86A778A
3F3AA87F5BA0D14F8223389073C6293523881600AF8E97523208FF1B2A3980D0
7328E8E639CE16CFD812A6D667CB493F3163839110395239676628B2056BB716
2A0291DFA4C5B40A1A222305C77CD896C747808B697E7C4130F7BAE4188487E8
352D2C41F0B558E944B841133007DB68F89C1568586E8A3F553358F2546A21D9
C282531E8550D63984B8FCA0600D37F76D38F8B499125F8B2685C9DE91CDD53A
95BB97BF403A513B2B5E976D4FDABDF0C99FC457A02F2818D8420D9AA9935536
8932B508C5B59781292789234B78917608D3F4414299710C62F3D48F9516141A
CE63AB0B8839CB06D1633FE24C5352624110DC27C2AD2DF2343418570859055D
0EC25C9E9558FA2C9D05B9221113648CC8F7C2144B4957C49EC5961A0B0BB95A
DEE440FAF3E28DC7D50593AADF1B982C20EF574CF2131726FCC67073A1559E7F
FF1CF34B89844324AF8A14DEDCEEB826A8F9AF9DCC6E69DF74B0A9CE18988314
F9D11A883A1EB7F7F1230F8D0A5C0AA4429901B0FF9830CD0ACF8CBC65EFD81B
F2D7C6FF1095940996A977562756BB1D100ABC6FBCFDB6146E099A303A7E5B76
D43BCAE7565CDD9C1EC46DEC89837A0BEA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 66 /B put
dup 80 /P put
dup 98 /b put
pop
%ADOEndSubsetFont
/Courier*4 
[
66{/.notdef}repeat /B 13{/.notdef}repeat /P 17{/.notdef}repeat /b 157{/.notdef}repeat
] /Courier nfnt
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 18.0166 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
184.22 18.0166 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 18.0166 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 18.0166 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 18.0166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 18.0166 mov
(rtal ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 18.0166 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 18.0166 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 18.0166 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 18.0166 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 18.0166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 18.0166 mov
(rtal) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 18.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 24.7666 mov
(  ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 24.7666 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
184.22 24.7666 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 24.7666 mov
(lean ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 24.7666 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 24.7666 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 24.7666 mov
(ster) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D6EEA481D97DF
F61874182C1337AC81386F9C8380759555474BF19E371CA47E47B34F3EE59F64
0756D7A90637039EDB8A08713E1B30509517EFFE37302F40BD98B4779AAA0F2C
A2BBA6B831ED814ED8C73CB8227717F59DB6E17D640951A0BE9BE50240839582
CBC5A4BD0029557EC3D19C6B6EC5BB2A5FE127C1E6A9AB9317B62493A736A007
BBA645DB4DF3F89B8C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 79 /O put
pop
%ADOEndSubsetFont
/Courier*5 
[
79{/.notdef}repeat /O 176{/.notdef}repeat
] /Courier nfnt
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 24.7666 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 24.7666 mov
(n) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 24.7666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 31.5166 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 31.5166 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 31.5166 mov
(id init) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D5109F7D6DFD5
CB75004D08EB6AE6945DC11AFF745D45E21E941EE8A7722BC405FB34ADABDE18
27520D275E54112A4F08149AD239D9AE0F47BF6B2485C02496D22D7B46812CF6
04DB1659FF15394975EEBBD46A058617B5A508FBFD49447DC5FCE43AD3CAEB01
41FBD2A894D1EC551EFD83D419243A85BDE4BC8D5C3A997EF73B64DE73E4FEED
ABD5388C85F8DA6C4F339652D790E51A46620EE2FC08C3EFF6A6A14D6894BABE
DB73C0E51804B14E72161D7F14BCDF3E6531D3D875AB5E30E0C546B465261484
E3F5406A1CF2BE9B3D777860498E5F7A07BA0779B715299F629127CE75D184AC
434212D98E7CD7280BB979790FB91CAD97D9F42011790A7767235CD262B75CEB
711FC8C2E9422A51A70BF01B902FC2F21E588B58AFCEC8B07FA1641A32C48F04
B009366F8170BFE4A9D84AD5445A0B6D6D72C1E845E9AB6B9D6F68D9ED7B8246
D311C73D8322DFD8D44E8F186A718DE1E256FC89E83FB9E93597B07897CE5F19
6BE51E4DC8ED472D16B5270BA21AC372515BD4DB50396F4191F457987AAC6D7B
DFDA426D6272F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 112 /p put
pop
%ADOEndSubsetFont
/Courier*6 
[
40{/.notdef}repeat /parenleft /parenright 70{/.notdef}repeat /p 143{/.notdef}repeat
] /Courier nfnt
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 31.5166 mov
(\() sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 31.5166 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 31.5166 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 31.5166 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 31.5166 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 31.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 31.5166 mov
(rtal ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 31.5166 mov
(b) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 31.5166 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 31.5166 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 31.5166 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 31.5166 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 31.5166 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 31.5166 mov
(lean ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 31.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 31.5166 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 31.5166 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 31.5166 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.845 31.5166 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 38.2666 mov
(    set) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D510DCD57889B
BA0FB2EA6D965CA6BA459E95B939D3102075D021A92C279D49B2DCE7383265E7
E617F7C8174B984CBF3E587CFC41599D6F214EBF8745BFEA4AE17F180CC30803
55A40B5BC23D98FB4DB6B78358E537C807B36271B6C87851F1602717D9C406DE
48220D0D13301E9D192398EE438A59B3F4B6BD82A311C7DEA8760E308E543E6F
A892E8C8E8B6361B855F52A89A8E6ABBD1E003E0A7C9EB55EFC3DBEE44FCDDDC
8FD5840EDB2E876F4C5A180CF60DC13D3DDA1F342671F3B0FD27F7E966E272B6
8C9C937C57A9BB7C4390AA38DB5A142F9778D58DB5604846EFC7624D3A8757F5
71C17A0148E0A02F07C4B06677A17EE2748106BBD098D9778378DF46BB864B70
3D759C757527B313F01BDE296D665D12C4ED19EB16DA6D91B9916B860B832584
9670B06C732D28AA2840CA2B010DCE0C18B63776BD3EF85E3EA2D29310B84E77
FAEF734769057CDFB8F73696B2839C85A1CBF35D556AC48D6199707A7C3B13B3
95578420CC58F11242F27D380074DF57BF2E5C28268093343A062B6609F59CF9
EB49514F445F4CDEB5C1ECDAC1B007660670CDF7A65C0DCDD6B73DDE31ED6B01
78857D4EC06D9DFE530DF403DFED282B592F29651F9223571C851F63DFDCA091
9961D012532DC11B8E1AAFEADA05147CA6316984AAA321A8A80B6991FE453337
CCF964A809646F2EBB3F70BFCB795D2FC6AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 46 /period put
dup 69 /E put
dup 73 /I put
dup 84 /T put
dup 89 /Y put
pop
%ADOEndSubsetFont
/Courier*7 
[
46{/.notdef}repeat /period 22{/.notdef}repeat /E 3{/.notdef}repeat /I 10{/.notdef}repeat /T 
4{/.notdef}repeat /Y 166{/.notdef}repeat
] /Courier nfnt
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 38.2666 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 38.2666 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 38.2666 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 38.2666 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 38.2666 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 38.2666 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 38.2666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 38.2666 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 38.2666 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 38.2666 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 38.2666 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 38.2666 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 38.2666 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 38.2666 mov
( set) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 38.2666 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 38.2666 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 38.2666 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 38.2666 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 38.2666 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 38.2666 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 38.2666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 38.2666 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 38.2666 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 38.2666 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
325.967 38.2666 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 38.2666 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
332.717 38.2666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 45.0166 mov
(    set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 45.0166 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 45.0166 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 45.0166 mov
(\() sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D4E924A3FA221
1219063680594011D5F0A9F52162796F71D67D7A91CCC18A71F200BBCC4918E8
BCD8D1F2545E021B2A3D70E98503823B16BDF972B1FC93B66EF795F756BE09F0
A8D3E673FEB3EA9DF06174BB49AD0F0A83A318CB8A1F3F95B1777A5270EB35
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/Courier*8 
[
49{/.notdef}repeat /one 206{/.notdef}repeat
] /Courier nfnt
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 45.0166 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 45.0166 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 45.0166 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 45.0166 mov
( set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 45.0166 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 45.0166 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 45.0166 mov
(p\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 45.0166 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 45.0166 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 45.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 51.7666 mov
(    a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 51.7666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 51.7666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 51.7666 mov
(H) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 51.7666 mov
(i ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D5B1DDC32FFC5
EC030BF65C5F0589EF51B42AC8FBAAD3A2F937175906849D0F70E523E896DA02
3829C17E4532BCBF44F72EF80E4F71CB3283C1E2E2EA2D4274A7693AA9576051
FA1BB7669039CF7BFD91ABA4F7C92570BBC5E560BEF7589F014E3B36C4FE5046
F35C0EA332680366B050E0EBCA261A19D10D4E1965BC1580A8661BC1C47BCDDD
9FDA109BD8263F92D175C065A2FF46DB69979CB29596385284BCEE1BF7FBC56F
DE3EA48C104A470794D4F226C6F8AE69F2CED1E90AC54E3C5E6BB03EEED44DBE
6D262635FD7B4C7B36FC9FF9E87FD76AFBD1A8BE7055914FC63C54B0E69B5274
2352D7AE51B14AC95753B097
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 48 /zero put
dup 61 /equal put
pop
%ADOEndSubsetFont
/Courier*9 
[
48{/.notdef}repeat /zero 12{/.notdef}repeat /equal 194{/.notdef}repeat
] /Courier nfnt
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 51.7666 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 51.7666 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 51.7666 mov
(0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 51.7666 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 51.7666 mov
( a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 51.7666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 51.7666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 51.7666 mov
(Lo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 51.7666 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 51.7666 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 51.7666 mov
( ) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 51.7666 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 51.7666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 58.5166 mov
(    this) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 58.5166 mov
(.) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 58.5166 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 58.5166 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 58.5166 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 58.5166 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 58.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 58.5166 mov
(rtal ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 58.5166 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 58.5166 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 58.5166 mov
(b) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 58.5166 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 58.5166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
260.095 58.5166 mov
(    this) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
287.094 58.5166 mov
(.) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
290.469 58.5166 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
293.844 58.5166 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
300.594 58.5166 mov
(ster) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
314.094 58.5166 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
317.469 58.5166 mov
(n ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
324.219 58.5166 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
327.594 58.5166 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
330.969 58.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
334.344 58.5166 mov
(n) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
337.719 58.5166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 72.0166 mov
(  ) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D436C890642B4
7AB4E6A4C9B5898FBEBDE6CB612F331851D3392C0FA5FF2B0FFE52D6A16768CC
946804315C19A6C4A694965CC45ACCB20F141FEA99975B63A1F8AF6B7CF55784
E8F14B43F89D48050497EC8E0D517043A054F636F8612C44AF30464489DBCB35
0F1027048731D6733B56BB0743519735740FAAEC7C60D9DCBB159831A307D4F6
582DAA292F88F662D53E295533B722FAF74063AADD663817A45774EE160AED84
03B00C0268D2E8D82C7D70CFE11D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 125 /braceright put
pop
%ADOEndSubsetFont
/Courier*10 
[
125{/.notdef}repeat /braceright 130{/.notdef}repeat
] /Courier nfnt
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 72.0166 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 78.7666 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 78.7666 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 78.7666 mov
(id ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D5650FBDF9ABE
CE239D6E7C4C56BE6768A9B669A22C60FFE49A689810CA8DAD3A1EDB06B9D3F8
61B94262480BBDEC69BF64EA5818041D49012F607BD3D0E67846DDEFF13A542F
56873CD1B9A7733D9F9B093A655B8CCC5CB455A6E35F6DFE1D8032B3450E5092
90B705A3CA748FFFF09FF0158A877520F9687DE75F713EBCA762AB8F7EEBD1B0
B66F2D336B8F06F9815A116B0E9B7FEC82C32CAD9B62D8CB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/Courier*11 
[
119{/.notdef}repeat /w 136{/.notdef}repeat
] /Courier nfnt
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 78.7666 mov
(w) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 78.7666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 78.7666 mov
(rk) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 78.7666 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 78.7666 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.345 78.7666 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 85.5166 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 85.5166 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 85.5166 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 85.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 85.5166 mov
(at ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 85.5166 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 85.5166 mov
(al ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 85.5166 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 85.5166 mov
( in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 85.5166 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 85.5166 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 85.5166 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 85.5166 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 85.5166 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 85.5166 mov
(p\(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 85.5166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 92.2666 mov
(    a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 92.2666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 92.2666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 92.2666 mov
(H) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 92.2666 mov
(i ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 92.2666 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 92.2666 mov
( ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D40C0A080A6A5
22139098A79965A81C5E54F9272E48844ACD30EA1EBE24FB7560623F42514ABB
E6A55C364C83A3E190D26F83BCD1999E85512CC582D83A72F96F420485B7EA24
01EE7894C560E09153FDB8DC12296AF3EE56D5C7449E04E2B72E8D56677F8C25
F45889DBC6612FBB9C84B5C70C2D33EE18007733BD0B46D3F1763335CFF129C5
915A9AA1397E22D8140D1C5B3A5C8DE6918ECC1CEA7FEFE881F8681C9621ABED
5972DA9952EEF1335062070FD01E58817AEC087392B655054F466A57F3027BD2
B0DB04272E0153FA6E8F21D4B5E7D8839C23CF60156CF68AD4A7262511C6FE67
51A9891D133BF49F9950C796385FBE0DAAE44C9BB565715AA5376CE654862F51
B857282484117B8BE35B4B0F1B11C040B9AD83886D7A692FEAFAEBD611A0AA0B
C685B2F43F0129AE72C9EFABEA1514AEF8EB8041448B4D213AF3E1679FF8CDE0
8C9DB6F6B613D4D4FD77F80EACAD83CF256B9138987B91524B8C3484173FC18D
A386AFAEAB579A271C42463938B902CC29F4FB3306364B64CB611C36BCBBAF64
90479C545B70834D972DCA60C97D4FA5EB6BF0E002ABADB1982E0032B5617218
8E86C561850B4D85CAF9AEDE3AB7612758B1622D493BD0A9C7F0C76CDBC36549
227F0E5C4AD0881FC5E1365660AF417EEE1364A566B74484400C2F32955A20A6
1D1843BD5A8D3345AF9E9B9AC9ADAF64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 42 /asterisk put
dup 57 /nine put
dup 109 /m put
pop
%ADOEndSubsetFont
/Courier*12 
[
42{/.notdef}repeat /asterisk 14{/.notdef}repeat /nine 51{/.notdef}repeat /m 146{/.notdef}repeat
] /Courier nfnt
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 92.2666 mov
(m) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 92.2666 mov
(ax) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 92.2666 mov
(\() sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 92.2666 mov
(0) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 92.2666 mov
(.) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 92.2666 mov
(9*) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 92.2666 mov
(a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 92.2666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 92.2666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 92.2666 mov
(H) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 92.2666 mov
(i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 92.2666 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 92.2666 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 92.2666 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 92.2666 mov
(al) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 92.2666 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 92.2666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 99.0166 mov
(    a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 99.0166 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 99.0166 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 99.0166 mov
(Lo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 99.0166 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 99.0166 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 99.0166 mov
( ) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 99.0166 mov
(m) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 99.0166 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 99.0166 mov
(\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 99.0166 mov
(1) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 99.0166 mov
(.) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 99.0166 mov
(1) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 99.0166 mov
(*) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 99.0166 mov
(a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 99.0166 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 99.0166 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 99.0166 mov
(Lo,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 99.0166 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 99.0166 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 99.0166 mov
(al) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 99.0166 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 99.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 105.767 mov
(    i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 105.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 105.767 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 105.767 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 105.767 mov
(a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 105.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 105.767 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 105.767 mov
(H) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 105.767 mov
(i ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D4494A022F7D9
E5FBAAB3EDC77BE4B6B0381E3527FD63E9750EA0FDA74C2E7F4D18BEC8317C40
A2415F667F827E7EB9B7A56A0683527BC8B786F511A767C7D95F1344EEF990E4
23F905FD0A1A1D971A57E9A8B1D562B148A8CE65065DAB332A5BBF93BB8F56A9
ECF9F67036D5D38C56380F7641CA9CE0A9EE1E7B6FEEDC98FAAEBFFE92B7608C
7AC7131D132B3C9717A7BA53C174B80A4962DB8ED10C4267F0F557440148C02D
375E946FDFF81127938CB092930119F4FF42FF1624D8541F561E9C92F01BA5A5
F31CCD81FD02157A1F19B15972D32049F7BD3D298650A6114FD57C099EDF0819
2303C798C19F1C635B8007D52FDBC635A4B38D42E052365D35A924ED351E8921
E612C6A7194E1D56130D1BD877C85A8843124C49604540B2CC355EA26A0E4F17
A523D4E13F3121CBA8B5E5FC860FE7887378C26BEC1ADB1023C1641A4C69D445
4BB419821621FF4C26396C9B36BB16886D77E653953716104521893C47422400
1FDFC7489070A1610C09291B66A3003F93E09BF6A2E4736B0049A93FD0CA06BA
738A71D773913E821BB7D6059F471BA8CCEBD35E2C5EB3F5ABE69D93F523C794
098FF87016B7B115C342C0CD367418615DCFFE3EC89CF4F54BEF6BB19321456F
557AEB9806AD03B14B0F9EADD9623632DF5BD966A68E135CD7B8D0C8FA0EEDE2
95458BBDEE484DF7D924DD2E4FBE3263CBB55C9C49C86998E7081A9DF025DE88
A5E2053A41895746F71B64F41F03B0473D761FA8E34CEBABA527692FB8271B08
06C11779A1744BA8A25941F7FEB5204116BAB83C8CEA1D3EB6698BEADF22499C
5E9763DEFE53DEF5ABDFB12EECE76CE3D4A6CCECD9FF9BA5233BE0EBEC95F35B
A4C88E9BF21E87C054F685E1DA9F72205BC675119EF58D290D7EFF1021DDE1E9
7B768B5D2E3148C73A8F7A6611923BC0C0AF2CB40F7CDA1A10085B3BCFB755B7
066450D7543670A4DE67DE49534AB39EB347D7E886DFB425EBCBFB12987E3158
6F56861487881D33E8CAC747E37CCEE92506B6777CAC907D291A7002497968E8
17A8F31B88F8841A141D50F62DF95FBC79B49DD1700AAB40063A3F86933E6C11
6B462CC450C08E4936B6EE4FC4B7D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 33 /exclam put
dup 38 /ampersand put
dup 45 /hyphen put
dup 60 /less put
dup 65 /A put
dup 85 /U put
dup 95 /underscore put
pop
%ADOEndSubsetFont
/Courier*13 
[
33{/.notdef}repeat /exclam 4{/.notdef}repeat /ampersand 6{/.notdef}repeat /hyphen 14{/.notdef}repeat /less 
4{/.notdef}repeat /A 19{/.notdef}repeat /U 9{/.notdef}repeat /underscore 160{/.notdef}repeat
] /Courier nfnt
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 105.767 mov
(-) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 105.767 mov
( a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 105.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 105.767 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 105.767 mov
(Lo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 105.767 mov
( ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 105.767 mov
(<) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 105.767 mov
( F) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 105.767 mov
(A) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 105.767 mov
(I) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 105.767 mov
(L) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 105.767 mov
(_) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 105.767 mov
(Q) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 105.767 mov
(UA) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 105.767 mov
(L) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 105.767 mov
( ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 105.767 mov
(&&) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 105.767 mov
( ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 105.767 mov
(!) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 105.767 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 105.767 mov
(ooo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 105.767 mov
(ster) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 105.767 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
332.717 105.767 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
336.092 105.767 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
339.467 105.767 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
342.845 105.767 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 112.517 mov
(      ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 112.517 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 112.517 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 112.517 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 112.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 112.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 112.517 mov
(rtal) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 112.517 mov
(.) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 112.517 mov
(init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 112.517 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 112.517 mov
(true) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 112.517 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 112.517 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 112.517 mov
(B) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 112.517 mov
(E) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D73F2D87FCB24
E2B418C5A5701A9B794E8AF47EEB59A609A2916540B3219D158CCF52E87CF87D
D7600B42BEE6D4C1455D16C9590467EDDAE170E138E68F18E62E885195ACFC59
F79F1080A599CCA562E2E1226CB7E7FDEBC42F32F33346E842581F6189C9E56B
7A6D56780EA2EC61EE57932F2E2F976C4A709704BA490DAE6C02866E18A46E40
5FDB0E68AA3E518F2E22096C45286E7D1A290C38C9778904EE4191C8503F78FE
D03C5D57DC85AFC442B6F7F23C6E6B6F2F1931C657D8FDA39FAB4B846465FA9E
43DC366A4BDB96452C182BFB5E5DD2104DD48BB42B6F4CD814E2E4701EEC8EA3
45914976FD8ECF5B8FDEEFA65EB14F2C1BD44BBCCC453F49978BABE356E01586
2FC1F28759BFA92644F98996881D9F157805FFF9F50218E6E490495E6F1B0613
E49E5F5DBC31525718BF2D5A556E322DEFAD7603B40320CC4502F9F300EB3DB0
D6D80FE05C5B605286DEDC7FA022721D37A48AEE230AFADEDDC7F5577CE620B2
98BAE63B0E096A17C76D91CDC53667B49A354C7A5EF8D49DD7745C1FF09E29E6
5340A0C235E5648FED5BD0FD074F25F77EEE3A0FF01F1EA2ED7C162A6EF399BC
121C4E770CD66460D293E241F556A6BEB1EF039CA847F3373431B51A61F98812
F78C945CBD67480829EDBB637566002E625A2A4D1A3E8B2BD186051BEE6E84DA
3C9A557D8373BE7B8BBD53239A3AC5E340C94E847398D83C5BFCDDB49A3259B3
F22B20B4AE68778B0612E4F01D8625B62191E8872444A8BC7EF1182946F7F1FB
C31F4AE01B3664F79149B36B34D7B989E7316875D88B24E1DB64BF1C38282B37
F4AA41A7C59BB2FE581ED44BA317BD042381427B1475ED0A45A70D0B98DFCDBB
E5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 82 /R put
dup 83 /S put
pop
%ADOEndSubsetFont
/Courier*14 
[
82{/.notdef}repeat /R /S 172{/.notdef}repeat
] /Courier nfnt
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 112.517 mov
(S) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 112.517 mov
(T) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 112.517 mov
(_) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 112.517 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 112.517 mov
(FF) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 112.517 mov
(O) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 112.517 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 112.517 mov
(T) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 112.517 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 112.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 119.267 mov
(      ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 119.267 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 119.267 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 119.267 mov
(ster) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 119.267 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 119.267 mov
(n ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 119.267 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 119.267 mov
( true) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 119.267 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 126.017 mov
(    ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 126.017 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 132.767 mov
(    i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 132.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 132.767 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 132.767 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 132.767 mov
(a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 132.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 132.767 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 132.767 mov
(H) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 132.767 mov
(i ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 132.767 mov
(-) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 132.767 mov
( a) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 132.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 132.767 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 132.767 mov
(Lo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 132.767 mov
( ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D46FB63D62E0E
F388D7744B2BA515839C54F47D50583CB3DCCDCF9E004BAA016A36A4F99DC053
A3A3B7DD60A26E92A6423DF04964C4133BFE9B535B6C3BEFCC58000220E6966C
D5ABD6D2F286D63A5C6E2DA3BF2B51478A6752FF569B8ABA261E160B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 62 /greater put
pop
%ADOEndSubsetFont
/Courier*15 
[
62{/.notdef}repeat /greater 193{/.notdef}repeat
] /Courier nfnt
/Courier*15 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 132.767 mov
(>) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 132.767 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 132.767 mov
(P) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 132.767 mov
(A) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 132.767 mov
(SS) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 132.767 mov
(_) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 132.767 mov
(Q) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 132.767 mov
(UA) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 132.767 mov
(L) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 132.767 mov
( ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 132.767 mov
(&&) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 132.767 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 132.767 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 132.767 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 132.767 mov
(ster) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 132.767 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
325.967 132.767 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 132.767 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
332.717 132.767 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
336.095 132.767 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 139.517 mov
(      ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 139.517 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 139.517 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 139.517 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 139.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 139.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 139.517 mov
(rtal) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 139.517 mov
(.) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 139.517 mov
(init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 139.517 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 139.517 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 139.517 mov
(alse) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 139.517 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 139.517 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 139.517 mov
(B) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 139.517 mov
(E) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 139.517 mov
(S) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 139.517 mov
(T) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 139.517 mov
(_) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 139.517 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 139.517 mov
(FF) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 139.517 mov
(O) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 139.517 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 139.517 mov
(T) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 139.517 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 139.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 146.267 mov
(      ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 146.267 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 146.267 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 146.267 mov
(ster) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 146.267 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 146.267 mov
(n ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 146.267 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 146.267 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 146.267 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 146.267 mov
(alse) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 146.267 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 153.017 mov
(    ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 153.017 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 159.767 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 159.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 159.767 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 159.767 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 159.767 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 159.767 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 159.767 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 159.767 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 159.767 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 159.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 159.767 mov
(al) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 159.767 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 159.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 166.517 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 166.517 mov
(}) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 173.267 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 193.517 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 193.517 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 193.517 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 193.517 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 193.517 mov
(int ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D6FB9BE353E34
3C10C48B20E472D69CBA25BB33FC2ADC9745B1A19CBBC50ACCB349F546425EB8
ABC55851DB13E0CA378DDCB245AF6D47721766E9C10E65DB2C71433B756A87A6
201339B1AE99068A2A2216204B8AAD36417E01049CDFB1C86CDA9C55442AFE99
6F344F3F11DD084DDB772476E6DD6CD03604E6FF9104E1D1442962C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/Courier*16 
[
78{/.notdef}repeat /N 177{/.notdef}repeat
] /Courier nfnt
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 193.517 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 193.517 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 193.517 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 193.517 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 193.517 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 193.517 mov
(lean ena) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 193.517 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 193.517 mov
(led) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 193.517 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 193.517 mov
( ) sh
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 193.517 mov
({) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 193.517 mov
( ) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 200.267 mov
(    i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 200.267 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 200.267 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 200.267 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 200.267 mov
(ena) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 200.267 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 200.267 mov
(led) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 200.267 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 200.267 mov
( ) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 213.017 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 213.017 mov
(}) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 219.767 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 233.267 mov
(class ) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 233.267 mov
(T) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 233.267 mov
(runked) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 233.267 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 233.267 mov
(adi) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 233.267 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 233.267 mov
( extends ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 233.267 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 233.267 mov
(i) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 233.267 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 233.267 mov
(eline ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.595 233.267 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 240.017 mov
(  int ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 240.017 mov
(N) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 240.017 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 240.017 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 240.017 mov
( ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D4737E0F5E303
0D3CB2E2AF9991B945F3318FDA3D72CE7F8BA3AEDC9CFD8F7AEA6BE15C68C602
6917FB77DD2F520FDD095CA30F6F6A54F478D0F118112473CC8EBB1470210C07
4677EE020CA226BF08A6C922FC5248C6976F80093897767AB44EA98CFF1E9BEC
87F3ED5FC7E3463BEA7E2FF113AB811A6D9BE9A5267E384720BC63392A9C090E
6842A490550E2320A1475236201118AE0CE664E8783A7BFAD988D244A4D9354E
890B2BA91F8092CA17D70A36CF4C68D3C41E4FD43DD3D5A9BE932F28AA26AB67
DFEE35883E2F325BA727C5CFB979A8CCBA1B6FF293C9824603117CBCE0C88BE8
B59EBAF708A47A2EBAD5C0356E1520BD56D2F799DB1158FD742AE5C3A7FEE225
6F68EA316838AD46A6ADF18E64EFD0CCB847EC94937FCA0A9D9CBC31C6C10CCC
E8DB4CEA68E51FC16C1D76AA85AB3B6C13021A3A18A3E07D81D04280CA46A65F
B433298B5A5FD3E99FC4898B8B2A504B6A3CBB20936D6E9BF616D9CEE8B0A312
0337B0F2221A2D54B03684B0530E20894D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 52 /four put
dup 54 /six put
pop
%ADOEndSubsetFont
/Courier*17 
[
52{/.notdef}repeat /four /.notdef /six 201{/.notdef}repeat
] /Courier nfnt
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 240.017 mov
(64) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 240.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 246.767 mov
(  ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 246.767 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
184.22 246.767 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 246.767 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 246.767 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 246.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 246.767 mov
(rtal ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 246.767 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 246.767 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 246.767 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 246.767 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 246.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 246.767 mov
(rtal ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 246.767 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 246.767 mov
( ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 246.767 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 246.767 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 246.767 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 246.767 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 246.767 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 246.767 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 246.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
325.967 246.767 mov
(rtal) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
339.467 246.767 mov
(\(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
346.217 246.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 253.517 mov
(  ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 253.517 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
184.22 253.517 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 253.517 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 253.517 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 253.517 mov
(F) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 253.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 253.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 253.517 mov
(rtal ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 253.517 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 253.517 mov
(re) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D50B9E7841002
B3B2D4D4E542DE563DBB0F34AE51FD6952A2CDEBE6E5DD534A1ECD24A0969FA7
FBF22E9E0EBFF232EE0A863E7B57EBCA10031F10DD7029EBE0E5CEB8FFF3A17A
216F471D21515C979B0CC3D8344BA9AC8AC0C567A1D5FCF2B4DE91FB90ECA321
F8DF521BF3908B3851CC426D019854A9BC7A993C68CDB97AC7E5625CD84E116C
B1B8DE199356AB694846DFD39D8A38D91DA09E1D4494D2B63D9D18B528F0BC71
BEDDCDDD6AA645806953A1C8B4A30462A10BFF96C391F71982950E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
/Courier*18 
[
113{/.notdef}repeat /q 142{/.notdef}repeat
] /Courier nfnt
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 253.517 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 253.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 253.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 253.517 mov
(rtal ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 253.517 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 253.517 mov
( ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 253.517 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 253.517 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 253.517 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 253.517 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 253.517 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 253.517 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 253.517 mov
(F) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 253.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 253.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 253.517 mov
(rtal) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 253.517 mov
(\(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 253.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 260.267 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 260.267 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 260.267 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 260.267 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 260.267 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.345 260.267 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 267.017 mov
(    ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 267.017 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 267.017 mov
(eadFr) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 267.017 mov
(o) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 267.017 mov
(m) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 267.017 mov
(A) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 267.017 mov
(t) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 267.017 mov
(o) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D65A8FAF28571
0CB93F5D129EB723BC415E5132292195E4A753C7F9A5064E18BBDCDE92C6CEAB
11FF7147CC45BAFF770B16C3E8F25292AA6094224E5E31B64641BC40814F3048
D62105D573D2A0EDD6E7B1935CF3E605B2D42A20917A798FB61DC73CF8FA1CD0
11684ECC387E299A804C61EC652F1D83D3199A228A33F095C0A50224BC566A55
BA7CBF21BA38D9933149C6C920D5E8F4FED2368F081D39DFA893F935776CEDD4
C1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
/Courier*19 
[
68{/.notdef}repeat /D 187{/.notdef}repeat
] /Courier nfnt
/Courier*19 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 267.017 mov
(D) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 267.017 mov
( in ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 267.017 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 267.017 mov
( add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 267.017 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 267.017 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 267.017 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 267.017 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 267.017 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 267.017 mov
(eadFr) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 267.017 mov
(o) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 267.017 mov
(m) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 267.017 mov
(A) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 267.017 mov
(t) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 267.017 mov
(o) sh
/Courier*19 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 267.017 mov
(D) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 267.017 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
325.967 267.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 273.767 mov
(    ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 273.767 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 273.767 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 273.767 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 273.767 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 273.767 mov
(F r) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 273.767 mov
(f) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D55D6532ED9BC
53C3E9B70CB2DD71D3D3C6C0C1ABAA588EF1118155D8B58A5845D107189EECB3
C8D46C0B22AE8DDD7F404992DC822D3FC393F8B83CD50A780128997EC3546F3D
FBF189B5FDF5D9A9549A48CB58C917D71B34649944EA79EEC00483DE616D5E33
541D3DD62C8402983614D56012BB0C94E2D75C4B0746F844AD487B370B2073DE
16AE3A459371F9591BE5CF651F1A24912C63330430EF6E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/Courier*20 
[
50{/.notdef}repeat /two 205{/.notdef}repeat
] /Courier nfnt
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 273.767 mov
(2) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 273.767 mov
(i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 273.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 273.767 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 273.767 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 273.767 mov
( add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 273.767 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 273.767 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 273.767 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 273.767 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 273.767 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 273.767 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 273.767 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 273.767 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 273.767 mov
(F) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 273.767 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 273.767 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 273.767 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 273.767 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 273.767 mov
(S) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 273.767 mov
(T) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 273.767 mov
(A) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 273.767 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 273.767 mov
(T) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 273.767 mov
(F) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 273.767 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 273.767 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
325.967 273.767 mov
(Q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 273.767 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
336.092 273.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 280.517 mov
(    ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 280.517 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 280.517 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 280.517 mov
(ster ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 280.517 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 280.517 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 280.517 mov
(ster ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 280.517 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 280.517 mov
( add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 280.517 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 280.517 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 280.517 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 280.517 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 280.517 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 280.517 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 280.517 mov
(ster) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 280.517 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 280.517 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 280.517 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 280.517 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 280.517 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 280.517 mov
(alse) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 280.517 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
336.092 280.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 287.267 mov
(    add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 287.267 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 287.267 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 287.267 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 287.267 mov
( FF) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 287.267 mov
(T) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 287.267 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 287.267 mov
(N) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 287.267 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 287.267 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 294.017 mov
(    add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 294.017 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 294.017 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 294.017 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 294.017 mov
( CheckFre) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 294.017 mov
(q) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 294.017 mov
(Ho) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 294.017 mov
(p\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 294.017 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 294.017 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 294.017 mov
(q) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 294.017 mov
(Ho) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 294.017 mov
(p\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 294.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 300.767 mov
(    add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 300.767 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 300.767 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 300.767 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 300.767 mov
( CheckQuality) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 300.767 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 300.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 300.767 mov
(n) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 300.767 mov
(O) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 300.767 mov
(ff,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 300.767 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 300.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 300.767 mov
(alse) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 300.767 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 300.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 307.517 mov
(    ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 307.517 mov
(A) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 307.517 mov
(udi) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 307.517 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 307.517 mov
(B) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 307.517 mov
(ack) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 307.517 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 307.517 mov
(nd ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 307.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 307.517 mov
(ut ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 307.517 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 307.517 mov
( add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 307.517 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 307.517 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 307.517 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 307.517 mov
( ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 307.517 mov
(A) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 307.517 mov
(udi) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 307.517 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 307.517 mov
(B) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 307.517 mov
(ack) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 307.517 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 307.517 mov
(nd) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 307.517 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
329.342 307.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 321.017 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 321.017 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 321.017 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 321.017 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 321.017 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 321.017 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 321.017 mov
(rtal) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 321.017 mov
(.) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 321.017 mov
(re) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D46A9D6C5A590
29C1A95CA00ACA3A280A349354DD5C1E3915693733D59EEDA6E88E88615E8491
A2283D1312460F99656D2CA148713973B58832D53FC97B27753D3ED48C8086CA
CB44AFDA73169C9F07BE616A5D8BF1539DFE36BF39CF1A486676503D7BAF771C
E89D6644F503569A36DA5655646D5EF5366B948397AB45FAF38AD568E30D0E7B
45D54696A30B5B1A7182567C4C56C43009B81AEDD44F7F3A54AEA57107FF0D5D
3FCFDC5CF0F6E060E61CF0FED47B454431C585172E41D21A76B7759083E420CE
114883DDB2279E90A33AED34232EDD2C3E09EB9ADC14223C2496BEC3B8F72657
08E13A05CA809F283B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/Courier*21 
[
103{/.notdef}repeat /g 152{/.notdef}repeat
] /Courier nfnt
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 321.017 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 321.017 mov
(ister) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 321.017 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 321.017 mov
(r) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 321.017 mov
(f) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 321.017 mov
(2) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 321.017 mov
(i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 321.017 mov
(f) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 321.017 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 321.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 327.767 mov
(    ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 327.767 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 327.767 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 327.767 mov
(ster) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 327.767 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 327.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 327.767 mov
(rtal) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 327.767 mov
(.) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 327.767 mov
(re) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 327.767 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 327.767 mov
(ister) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 327.767 mov
(\() sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 327.767 mov
(b) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 327.767 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 327.767 mov
(ster) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 327.767 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 327.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 334.517 mov
(    ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D6C0D31EFE745
0F9064AD0B0741CBA1809EAEBA58BA3AC0E17D12E3E4749DBBB36A45E74805C9
8FFA35A75E4E23AF171498B37059E7936B955481D3FD77A4283E185EBB81830C
2C84881F8BAD4F9610789492596F2A71162859B070DE4BA997C51ABE4CEA511B
85FC7736FD4E0491207835B61D2EB33C843120AA0E6FA57C65B712CAE78B86BF
3D746BBB94288404A30407F735A88330108594CA18643827784057B365ADCB2B
FE90324AEF2FD53930913EB4D75AEBF680E699B75E0552F95B0C0DA893C96604
7A82956D8BAFEC217ADBBB5DF52B5607E0F72B374FBA3AD184310719F06EFECD
AE3455F817FC49F5A29632ACAE0AAA605F6E9B66B7BE1E92B3410A95A925FC10
1CA5ED2AE4CAE8EB45744749C263C1FFBBC60BEE2E7FADB9688BD129402D289F
83AD12AC1D89C2D6C21026AC502AB6039FF9F1403733CC814105F143
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 77 /M put
dup 88 /X put
pop
%ADOEndSubsetFont
/Courier*22 
[
77{/.notdef}repeat /M 10{/.notdef}repeat /X 167{/.notdef}repeat
] /Courier nfnt
/Courier*22 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 334.517 mov
(M) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
190.969 334.517 mov
(A) sh
/Courier*22 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 334.517 mov
(X) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 334.517 mov
(_) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 334.517 mov
(L) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 334.517 mov
(A) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 334.517 mov
(TE) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 334.517 mov
(N) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 334.517 mov
(C) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 334.517 mov
(Y) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 334.517 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 334.517 mov
(in) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 334.517 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 334.517 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 334.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 334.517 mov
(ut) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 334.517 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 334.517 mov
( ) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 334.517 mov
(1) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 334.517 mov
(0) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 334.517 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 334.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 341.268 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 341.268 mov
(}) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 348.018 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 361.518 mov
(class ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 361.518 mov
(B) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 361.518 mov
(utter) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 361.518 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 361.518 mov
(ly extends ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 361.518 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 361.518 mov
(i) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 361.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 361.518 mov
(eline ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.47 361.518 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 368.268 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
180.845 368.268 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
187.595 368.268 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 368.268 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 368.268 mov
(int ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 368.268 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 368.268 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 368.268 mov
( int ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D761EF714ACD3
5CCD5D0114A86511715A67EDA82F280B07FAC4A250781DB2B4C6320DA745FDE3
41E03B6CF401CE73C34B354A1910D7B1185A401061522097CCF0A257A7808B3B
84FC632E3564112CFB76E390895A98916BAA90C3883801603817C7B88175595A
605874A1A216627A98C730ADF95D063CF627A55F5EF2D30FAA05DEA83A00B4F0
2FF9FF853395A1A2C7FC60DFA583D86CB08ED5716CE1273491789E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/Courier*23 
[
87{/.notdef}repeat /W 168{/.notdef}repeat
] /Courier nfnt
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 368.268 mov
(W) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 368.268 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 368.268 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.845 368.268 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 375.018 mov
(    add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 375.018 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 375.018 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 375.018 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 375.018 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 375.018 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 375.018 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 375.018 mov
(lit) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D6B7F62D18D04
B4DA08620100C33760B2C23C4D1FF84BA4EE1F7DA33BC62C5282878E6A1A1983
CF238FEB077DC199C644608C221AED222FEFCF658A527BE886A835EAFD7F8F11
A4DA7CDAE9481EFD61676277393705F6933342E34B46FD3079D079AD6ADC6AE3
72A7308CF732F7820581794BF862840360089BEEF1F15F9E2D4A5FC3AA4EDFF7
D833F65D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 74 /J put
pop
%ADOEndSubsetFont
/Courier*24 
[
74{/.notdef}repeat /J 181{/.notdef}repeat
] /Courier nfnt
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 375.018 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 375.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 375.018 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 375.018 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 375.018 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.095 375.018 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 381.768 mov
(      ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 381.768 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 381.768 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 381.768 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 381.768 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.845 381.768 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 388.518 mov
(        set) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 388.518 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 388.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 388.518 mov
(litter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 388.518 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 388.518 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 388.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 388.518 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 388.518 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 388.518 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 388.518 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 388.518 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 388.518 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 388.518 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 388.518 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 388.518 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 388.518 mov
(N) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 388.518 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 388.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 395.268 mov
(        add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 395.268 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 395.268 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 395.268 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 395.268 mov
( Filter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 395.268 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 395.268 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.47 395.268 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 402.018 mov
(          ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 402.018 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 402.018 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 402.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 402.018 mov
(at ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 402.018 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 402.018 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 402.018 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 402.018 mov
(ht) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D436C89064CB3
394243E150AFECCB5049C86DFD200A23C49D3AAED6EF31810B6EA55995A430DA
DDCE31B49E3E64ECB0E65674BC1C656AE48AB7B2F555504647DCFF1BAD20D193
01F1F62488314227F5F760E312219C783A0AD8D619A53F7AD1A86F5D425B2E8C
D1EABE8B4B0D77F231404C3B2B64D7AE4F762EFF04616C53F6A30B7D185E8ED5
14ED4C4153206C705F0D5D6DEFD41C6826C9E65B1A40C7F05E20B9A55E07506E
2951
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 91 /bracketleft put
dup 93 /bracketright put
pop
%ADOEndSubsetFont
/Courier*25 
[
91{/.notdef}repeat /bracketleft /.notdef /bracketright 162{/.notdef}repeat
] /Courier nfnt
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 402.018 mov
([]) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 402.018 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 402.018 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 402.018 mov
( ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 402.018 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 402.018 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 402.018 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 402.018 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 402.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 402.018 mov
(at) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 402.018 mov
([) sh
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 402.018 mov
(W) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 402.018 mov
(]) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 402.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 408.768 mov
(          int curr) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 408.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 415.518 mov
(          ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 415.518 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 415.518 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 415.518 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 415.518 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.345 415.518 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 422.268 mov
(            set) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 422.268 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 422.268 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 422.268 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 422.268 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 422.268 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 422.268 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 422.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 422.268 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 422.268 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 422.268 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 422.268 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 422.268 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 422.268 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 422.268 mov
( ) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 429.018 mov
(            set) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 429.018 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 429.018 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 429.018 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 429.018 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 429.018 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 429.018 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 429.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 429.018 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 429.018 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 429.018 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 429.018 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 429.018 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 429.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 435.768 mov
(            set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 435.768 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 435.768 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 435.768 mov
(\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 435.768 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 435.768 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 435.768 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 435.768 mov
( set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 435.768 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 435.768 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 435.768 mov
(p\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 435.768 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 435.768 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 435.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 442.518 mov
(            ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 442.518 mov
(fo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 442.518 mov
(r ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 442.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 442.518 mov
(int i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 442.518 mov
(=0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 442.518 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 442.518 mov
( i) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 442.518 mov
(<) sh
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 442.518 mov
(W) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 442.518 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 442.518 mov
( i) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D510408841B24
F8E2FAC669C104043BF0C61617EC5BE6E1CA76B90825406330B66E9C170597B2
F2FE29F38A22BFE9A2BBA6A965103FEA323A26AD4A05E8B09F5BD583B93C55D0
6EEA17ED6091C92584F812CC021D1259416AD7C6FA914F78CF2F73DBD449EFEC
D9B5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/Courier*26 
[
43{/.notdef}repeat /plus 212{/.notdef}repeat
] /Courier nfnt
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 442.518 mov
(++) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 442.518 mov
(\)) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 449.268 mov
(              ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 449.268 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 449.268 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 449.268 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 449.268 mov
(ht) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 449.268 mov
([) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 449.268 mov
(i) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 449.268 mov
(]) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 449.268 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 449.268 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 449.268 mov
( calc) sh
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 449.268 mov
(W) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 449.268 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 449.268 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.843 449.268 mov
(ht) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 449.268 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 449.268 mov
(i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
302.343 449.268 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 449.268 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 449.268 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
312.468 449.268 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 449.268 mov
( ) sh
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 449.268 mov
(W) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
322.592 449.268 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
325.967 449.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 456.018 mov
(            curr ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 456.018 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 456.018 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 456.018 mov
(0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 456.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 462.768 mov
(          ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.845 462.768 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 469.518 mov
(          ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 469.518 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 469.518 mov
(id ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 469.518 mov
(w) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 469.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 469.518 mov
(rk) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 469.518 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 469.518 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.345 469.518 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 476.268 mov
(            ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 476.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 476.268 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 476.268 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 476.268 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 476.268 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 476.268 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 476.268 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 476.268 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 476.268 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 476.268 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 476.268 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 476.268 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 476.268 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 476.268 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 476.268 mov
(p\(\)) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 476.268 mov
(*) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.593 476.268 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.968 476.268 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.718 476.268 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
309.093 476.268 mov
(ht) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
315.843 476.268 mov
([) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
319.218 476.268 mov
(curr) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
332.717 476.268 mov
(++) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
339.467 476.268 mov
(]) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
342.842 476.268 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
346.217 476.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 483.018 mov
(            i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 483.018 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 483.018 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 483.018 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 483.018 mov
(curr) sh
/Courier*15 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 483.018 mov
(>) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 483.018 mov
(=) sh
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 483.018 mov
(W) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 483.018 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 483.018 mov
( curr ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 483.018 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 483.018 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 483.018 mov
(0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 483.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 489.768 mov
(          ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 489.768 mov
(}}) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 489.768 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 489.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 496.518 mov
(        add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 496.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 496.518 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 496.518 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 496.518 mov
( ) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 496.518 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 496.518 mov
(dentity) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 496.518 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.218 496.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 503.268 mov
(        set) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 503.268 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 503.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 503.268 mov
(iner) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 503.268 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 503.268 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 503.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 503.268 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 503.268 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 503.268 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 503.268 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 503.268 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 503.268 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 503.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 510.018 mov
(      ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 510.018 mov
(}}) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 510.018 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 510.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 516.768 mov
(    add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 516.768 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 516.768 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.844 516.768 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 516.768 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 516.768 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 516.768 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 516.768 mov
(lit) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 516.768 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 516.768 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 516.768 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 516.768 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 516.768 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.095 516.768 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 523.518 mov
(      ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 523.518 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 523.518 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 523.518 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 523.518 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.845 523.518 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 530.268 mov
(        set) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 530.268 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 530.268 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 530.268 mov
(litter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 530.268 mov
(\() sh
/Courier*19 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 530.268 mov
(D) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 530.268 mov
(u) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 530.268 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 530.268 mov
(licate) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 530.268 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 530.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 537.018 mov
(        add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 537.018 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 537.018 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 537.018 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 537.018 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 537.018 mov
(S) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 537.018 mov
(u) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 537.018 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 537.018 mov
(tract) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 537.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 537.018 mov
(r) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 537.018 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 537.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 543.768 mov
(        add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 543.768 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 543.768 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
221.344 543.768 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.719 543.768 mov
( ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
228.094 543.768 mov
(A) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 543.768 mov
(dder) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
244.969 543.768 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 543.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 550.518 mov
(        set) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
211.219 550.518 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.594 550.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.969 550.518 mov
(iner) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.469 550.518 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
234.844 550.518 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
238.219 550.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
241.594 550.518 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 550.518 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 550.518 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 550.518 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
261.843 550.518 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.593 550.518 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.968 550.518 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.343 550.518 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 550.518 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
282.093 550.518 mov
(N) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.468 550.518 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.218 550.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 557.268 mov
(      ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 557.268 mov
(}}) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
201.094 557.268 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 557.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 564.018 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 4.5166 mov
(class ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 4.5166 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 4.5166 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 4.5166 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 4.5166 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 4.5166 mov
(F extends Filter ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.5 4.5166 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 11.2666 mov
(  int si) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D5B5877B3D7F5
72BC86977579891D5A1312E3E1AAA7FBFCD86786218CB5E6987C70F71C66D729
1EA5BBA4CA9D2199C1BDBBB3F967FBF5B37C312EA1A4B94642853ACBB14FD927
AD8E0D4065A50146FE3C6493AA2E83B0179DEB29F6D824A2E97E96D189ADB2B7
5BFA7A96BC35E97BE86C87AD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/Courier*27 
[
122{/.notdef}repeat /z 133{/.notdef}repeat
] /Courier nfnt
/Courier*27 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 11.2666 mov
(z) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 11.2666 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 11.2666 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 11.2666 mov
( c) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 11.2666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 11.2666 mov
(unt) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 11.2666 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 11.2666 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 11.2666 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 11.2666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 18.0166 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 18.0166 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
10.1248 18.0166 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 18.0166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 18.0166 mov
(at ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 18.0166 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 18.0166 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 18.0166 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 18.0166 mov
(ht) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 18.0166 mov
([]) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 18.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 24.7666 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 24.7666 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 24.7666 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 24.7666 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 24.7666 mov
(int ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 24.7666 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 24.7666 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 24.7666 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 24.7666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 24.7666 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 24.7666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 24.7666 mov
(at ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 24.7666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 24.7666 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 24.7666 mov
(q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 24.7666 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 24.7666 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.625 24.7666 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 31.5166 mov
(    set) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 31.5166 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 31.5166 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 31.5166 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 31.5166 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 31.5166 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 31.5166 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 31.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 31.5166 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 31.5166 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 31.5166 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 31.5166 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 31.5166 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 31.5166 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 31.5166 mov
( set) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 31.5166 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 31.5166 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 31.5166 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 31.5166 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 31.5166 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 31.5166 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 31.5166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 31.5166 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
138.373 31.5166 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
148.498 31.5166 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
151.873 31.5166 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
155.248 31.5166 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
158.623 31.5166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 38.2666 mov
(    set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 38.2666 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 38.2666 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 38.2666 mov
(\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 38.2666 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 38.2666 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 38.2666 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 38.2666 mov
( set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 38.2666 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 38.2666 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 38.2666 mov
(p\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 38.2666 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 38.2666 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 38.2666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 45.0166 mov
(    this) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 45.0166 mov
(.) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 45.0166 mov
(N) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 45.0166 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 45.0166 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 45.0166 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 45.0166 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 45.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 51.7666 mov
(    setFre) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 51.7666 mov
(q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 51.7666 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 51.7666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 51.7666 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 51.7666 mov
(q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 51.7666 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 51.7666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 58.5166 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.75 58.5166 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 65.2666 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 65.2666 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 65.2666 mov
(id ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 65.2666 mov
(w) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 65.2666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 65.2666 mov
(rk) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 65.2666 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 65.2666 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.25 65.2666 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 72.0166 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 72.0166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 72.0166 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 72.0166 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 72.0166 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 72.0166 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 72.0166 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 72.0166 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 72.0166 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 72.0166 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 72.0166 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 72.0166 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 72.0166 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 72.0166 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 72.0166 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 72.0166 mov
(p\(\)) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 72.0166 mov
(*) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 72.0166 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 72.0166 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 72.0166 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 72.0166 mov
(ht) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 72.0166 mov
([) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 72.0166 mov
(c) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 72.0166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 72.0166 mov
(unt) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
134.998 72.0166 mov
(++) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
141.748 72.0166 mov
(]) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
145.123 72.0166 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
148.498 72.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 78.7666 mov
(    i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 78.7666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 78.7666 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 78.7666 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 78.7666 mov
(c) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 78.7666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 78.7666 mov
(unt) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 78.7666 mov
(==) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 78.7666 mov
(si) sh
/Courier*27 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 78.7666 mov
(z) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 78.7666 mov
(e) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 78.7666 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 78.7666 mov
( c) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 78.7666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 78.7666 mov
(unt ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 78.7666 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 78.7666 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 78.7666 mov
(0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 78.7666 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 85.5166 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.75 85.5166 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 92.2666 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 92.2666 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 92.2666 mov
(id setFre) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 92.2666 mov
(q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 92.2666 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 92.2666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 92.2666 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 92.2666 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 92.2666 mov
(at ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 92.2666 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 92.2666 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 92.2666 mov
(q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 92.2666 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 92.2666 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.125 92.2666 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 99.0166 mov
(    c) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 99.0166 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 99.0166 mov
(unt ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 99.0166 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 99.0166 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 99.0166 mov
(0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 99.0166 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 105.767 mov
(    si) sh
/Courier*27 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 105.767 mov
(z) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 105.767 mov
(e ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 105.767 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 105.767 mov
( C) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 105.767 mov
(A) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 105.767 mov
(RR) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 105.767 mov
(IE) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 105.767 mov
(R) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 105.767 mov
(_) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 105.767 mov
(F) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 105.767 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 105.767 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 105.767 mov
(Q) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D525A1126A958
2DEF251D6213D057D1A8B3F2F1CFFC979875D80D1E8B112C5EC697B57A346D09
E87B99DC38A6B4337067F1971ADB9F8E8AC5B69E9D1DA409E6E843CF8FDE3221
68075F3C58AFE72AF6411D9C569731C123AE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 47 /slash put
pop
%ADOEndSubsetFont
/Courier*28 
[
47{/.notdef}repeat /slash 208{/.notdef}repeat
] /Courier nfnt
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 105.767 mov
(/) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 105.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 105.767 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 105.767 mov
(q) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 105.767 mov
(*) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 105.767 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 105.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 112.517 mov
(    ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 112.517 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 112.517 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 112.517 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 112.517 mov
(ht ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 112.517 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 112.517 mov
( ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 112.517 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 112.517 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 112.517 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 112.517 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 112.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 112.517 mov
(at) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 112.517 mov
([) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 112.517 mov
(si) sh
/Courier*27 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 112.517 mov
(z) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 112.517 mov
(e) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 112.517 mov
(]) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 112.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 119.267 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 119.267 mov
(fo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 119.267 mov
(r ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 119.267 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 119.267 mov
(int i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 119.267 mov
(=0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 119.267 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 119.267 mov
( i) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 119.267 mov
(<) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 119.267 mov
(si) sh
/Courier*27 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 119.267 mov
(z) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 119.267 mov
(e) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 119.267 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 119.267 mov
( i) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 119.267 mov
(++) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 119.267 mov
(\)) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 126.017 mov
(      ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 126.017 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 126.017 mov
(ei) sh
/Courier*21 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 126.017 mov
(g) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 126.017 mov
(ht) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 126.017 mov
([) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 126.017 mov
(i) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 126.017 mov
(]) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 126.017 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 126.017 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 126.017 mov
( ) sh
/Courier*22 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 126.017 mov
(M) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 126.017 mov
(ath) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 126.017 mov
(.) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 126.017 mov
(sin) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 126.017 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 126.017 mov
(i) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 126.017 mov
(*) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 126.017 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 126.017 mov
(I) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 126.017 mov
(/) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 126.017 mov
(si) sh
/Courier*27 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 126.017 mov
(z) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 126.017 mov
(e) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 126.017 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 126.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 132.767 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.75 132.767 mov
(}) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 139.517 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 153.017 mov
(class CheckFre) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 153.017 mov
(q) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 153.017 mov
(Ho) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 153.017 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 153.017 mov
( extends ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 153.017 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 153.017 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 153.017 mov
(lit) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 153.017 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 153.017 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 153.017 mov
(in ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.875 153.017 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 159.767 mov
(  ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 159.767 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
10.1248 159.767 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 159.767 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 159.767 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 159.767 mov
(F) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 159.767 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 159.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 159.767 mov
(rtal ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 159.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 159.767 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 159.767 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 159.767 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 159.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 159.767 mov
(rtal) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 159.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 166.517 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 166.517 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 166.517 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 166.517 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 166.517 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 166.517 mov
(Ft) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 166.517 mov
(o) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 166.517 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 166.517 mov
(F) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 166.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 166.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 166.517 mov
(rtal ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 166.517 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 166.517 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 166.517 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 166.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 166.517 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 166.517 mov
(rtal) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 166.517 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 166.517 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.875 166.517 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 173.267 mov
(    this) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 173.267 mov
(.) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 173.267 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 173.267 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 173.267 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 173.267 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 173.267 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 173.267 mov
(rtal ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 173.267 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 173.267 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 173.267 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 173.267 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 173.267 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 173.267 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 173.267 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 173.267 mov
(rtal) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 173.267 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 180.017 mov
(    set) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 180.017 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 180.017 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 180.017 mov
(litter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 180.017 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 180.017 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 180.017 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 180.017 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 180.017 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 180.017 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 180.017 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 180.017 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 180.017 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 180.017 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 180.017 mov
(/) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 180.017 mov
(4) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 180.017 mov
(-) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 180.017 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 180.017 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 180.017 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 180.017 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 180.017 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 180.017 mov
(,) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 186.767 mov
(                         ) sh
84.3737 186.767 mov
(    ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 186.767 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 186.767 mov
(/) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 186.767 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 186.767 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 186.767 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 186.767 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 186.767 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 186.767 mov
(,) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 186.767 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 186.767 mov
(/) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 186.767 mov
(4) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
134.998 186.767 mov
(-) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
138.373 186.767 mov
(2) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
141.748 186.767 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
148.498 186.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 193.517 mov
(    int k ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 193.517 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 193.517 mov
( ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 193.517 mov
(0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 193.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 200.267 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 200.267 mov
(fo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 200.267 mov
(r ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 200.267 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 200.267 mov
(int i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 200.267 mov
(=) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 200.267 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 200.267 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 200.267 mov
( i) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 200.267 mov
(<) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 200.267 mov
(=) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D4731C8EBEDA0
D4E9745BA8BCC40BD166B6CC0A77C0DEE7CA74EFE281644A5D129CCC4A82ACD0
FDE488DAFF605A9FCD0744F00EBC36104BA7E48366EF3C66DF81FEADAE5CC9BA
681D6FDF21E0D11603165AB564FD829DA89AEF9A53C97DED00CC3F23EE87B9D0
CCA1318F06524381E3547D0E7EA551270AD81E68A9150012829D32FAF401BE95
62B08ECCAE93FA81F499458C136A3A92E7979EB53A04EB00
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/Courier*29 
[
53{/.notdef}repeat /five 202{/.notdef}repeat
] /Courier nfnt
/Courier*29 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 200.267 mov
(5) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 200.267 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 200.267 mov
( i) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 200.267 mov
(++) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 200.267 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 200.267 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.875 200.267 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 207.017 mov
(      i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 207.017 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 207.017 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 207.017 mov
(\(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 207.017 mov
(i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 207.017 mov
(==) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 207.017 mov
(2) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 207.017 mov
(\)) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D437F4851DC0C
C100AFAE33282D19279966E9C3FC4E7159B5A666AA4BD7F402BCB99D0D38985C
62E162143CF71BC35F5EA3C2F0E55B50B7AB1C2E6587BB2F6648606F03019BEA
ECDBD61A42E7857FC51A278AF7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 124 /bar put
pop
%ADOEndSubsetFont
/Courier*30 
[
124{/.notdef}repeat /bar 131{/.notdef}repeat
] /Courier nfnt
/Courier*30 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 207.017 mov
(||) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 207.017 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 207.017 mov
(i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 207.017 mov
(==) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 207.017 mov
(4) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 207.017 mov
(\)\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 207.017 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.75 207.017 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 213.767 mov
(        ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 213.767 mov
(fo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 213.767 mov
(r ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 213.767 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 213.767 mov
(int ) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D4BB16E17D835
5384A7D69C2B5765B9B7DCEE45030C050195723BB4F36E75630BE2D1A6570FD0
96C5CC52F85699E0D362440DD4543BF7535D51C231447BEB64ECD7B18F599A68
C9EB7D7A1204C193CA2432F1C656C44AD4B5631FB34038A31C4790DC8634C713
01DD3970E5D06DE7FC1381B8822FACD7D9B5F2D1E0FE312DFD0BD49C319577A0
8E54927DDA3FBE98A99E187AB64512BABBE3D71E99441EE4883FB3A20B753256
D37C807D1E1B5B94E6E4ACCECDF594F95ED55BA92EC82A9052066C7D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/Courier*31 
[
106{/.notdef}repeat /j 149{/.notdef}repeat
] /Courier nfnt
/Courier*31 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 213.767 mov
(j) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 213.767 mov
(=0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 213.767 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 213.767 mov
( ) sh
/Courier*31 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 213.767 mov
(j) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 213.767 mov
(<) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 213.767 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 213.767 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 213.767 mov
( ) sh
/Courier*31 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 213.767 mov
(j) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 213.767 mov
(++) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 213.767 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 213.767 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
108 213.767 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 220.517 mov
(          add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 220.517 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 220.517 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 220.517 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 220.517 mov
( Filter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 220.517 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 220.517 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.125 220.517 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 227.267 mov
(            ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 227.267 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 227.267 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 227.267 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 227.267 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
81 227.267 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 234.017 mov
(              set) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 234.017 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 234.017 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 234.017 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 234.017 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 234.017 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 234.017 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 234.017 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 234.017 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 234.017 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 234.017 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 234.017 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 234.017 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 234.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 240.767 mov
(              set) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 240.767 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 240.767 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 240.767 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 240.767 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 240.767 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 240.767 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 240.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 240.767 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 240.767 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 240.767 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 240.767 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 240.767 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 240.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 247.517 mov
(              set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 247.517 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 247.517 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 247.517 mov
(\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 247.517 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 247.517 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 247.517 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 247.517 mov
( set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 247.517 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 247.517 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 247.517 mov
(p\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 247.517 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 247.517 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 247.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 254.267 mov
(            ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.5 254.267 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 261.017 mov
(            ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 261.017 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 261.017 mov
(id ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 261.017 mov
(w) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 261.017 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 261.017 mov
(rk) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 261.017 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 261.017 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
81 261.017 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 267.767 mov
(              ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 267.767 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 267.767 mov
(l) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 267.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 267.767 mov
(at ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 267.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 267.767 mov
(al ) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 267.767 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 267.767 mov
( in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 267.767 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 267.767 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 267.767 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 267.767 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 267.767 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 267.767 mov
(p\(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 267.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 274.517 mov
(              i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 274.517 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 274.517 mov
( ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 274.517 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 274.517 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 274.517 mov
(al ) sh
/Courier*15 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 274.517 mov
(>) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 274.517 mov
(=) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 274.517 mov
( ) sh
/Courier*22 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 274.517 mov
(M) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 274.517 mov
(I) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 274.517 mov
(N) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 274.517 mov
(_) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 274.517 mov
(T) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 274.517 mov
(H) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 274.517 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 274.517 mov
(E) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 274.517 mov
(S) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 274.517 mov
(H) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 274.517 mov
(O) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 274.517 mov
(L) sh
/Courier*19 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 274.517 mov
(D) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 274.517 mov
(\)) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 281.267 mov
(                ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 281.267 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 281.267 mov
(re) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 281.267 mov
(q) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 281.267 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 281.267 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 281.267 mov
(rtal) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 281.267 mov
(.) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 281.267 mov
(setFre) sh
/Courier*18 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 281.267 mov
(q) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 281.267 mov
(\() sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 288.017 mov
(                  F) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 288.017 mov
(R) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 288.017 mov
(E) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 288.017 mov
(Q) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 288.017 mov
([) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 288.017 mov
(k) sh
/Courier*25 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 288.017 mov
(]) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 288.017 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 288.017 mov
( ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 288.017 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 288.017 mov
( ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 288.017 mov
(L) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 288.017 mov
(atency) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 288.017 mov
(\() sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 288.017 mov
(4) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
134.998 288.017 mov
(*) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
138.373 288.017 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
141.748 288.017 mov
(,) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
145.123 288.017 mov
(6) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
148.498 288.017 mov
(*) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
151.873 288.017 mov
(N) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
155.248 288.017 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
161.998 288.017 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 294.767 mov
(              ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 294.767 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 294.767 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 294.767 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 294.767 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 294.767 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 294.767 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 294.767 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 294.767 mov
(\() sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 294.767 mov
(v) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 294.767 mov
(al) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 294.767 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 294.767 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 301.517 mov
(            ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 301.517 mov
(}}) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 301.517 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 301.517 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 308.267 mov
(          k) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 308.267 mov
(++) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 308.267 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 315.017 mov
(        ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
27 315.017 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 321.768 mov
(      ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 321.768 mov
(}) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 321.768 mov
( else add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 321.768 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 321.768 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 321.768 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 321.768 mov
( ) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 321.768 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 321.768 mov
(dentity) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 321.768 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 321.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 328.518 mov
(    ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.5 328.518 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 335.268 mov
(    set) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 335.268 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 335.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 335.268 mov
(iner) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 335.268 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 335.268 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 335.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 335.268 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 335.268 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 335.268 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 335.268 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 335.268 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 335.268 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 335.268 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 335.268 mov
(/) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 335.268 mov
(4) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 335.268 mov
(-) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 335.268 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 335.268 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 335.268 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 335.268 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 335.268 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 335.268 mov
(,) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 342.018 mov
(                         ) sh
84.3737 342.018 mov
(  ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 342.018 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 342.018 mov
(/) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 342.018 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 342.018 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 342.018 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 342.018 mov
(,) sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 342.018 mov
(1) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 342.018 mov
(,) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 342.018 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 342.018 mov
(/) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 342.018 mov
(4) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 342.018 mov
(-) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 342.018 mov
(2) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
134.998 342.018 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
141.748 342.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 348.768 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.75 348.768 mov
(}) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 355.518 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 369.018 mov
(class FF) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 369.018 mov
(T) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 369.018 mov
( extends ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 369.018 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 369.018 mov
(i) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 369.018 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 369.018 mov
(eline ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.125 369.018 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 375.768 mov
(  ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.74989 375.768 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 375.768 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 375.768 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 375.768 mov
(int ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 375.768 mov
(N) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 375.768 mov
(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 375.768 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.125 375.768 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 382.518 mov
(    add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 382.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 382.518 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 382.518 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 382.518 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 382.518 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 382.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 382.518 mov
(lit) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 382.518 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 382.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 382.518 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 382.518 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 382.518 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
81 382.518 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 389.268 mov
(      ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 389.268 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 389.268 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 389.268 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 389.268 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.75 389.268 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 396.018 mov
(        set) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 396.018 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 396.018 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 396.018 mov
(litter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 396.018 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 396.018 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 396.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 396.018 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 396.018 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 396.018 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 396.018 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 396.018 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 396.018 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 396.018 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 396.018 mov
(/) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 396.018 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 396.018 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 396.018 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 396.018 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 396.018 mov
(/) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 396.018 mov
(2) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 396.018 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
138.373 396.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 402.768 mov
(        ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 402.768 mov
(fo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 402.768 mov
(r ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 402.768 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 402.768 mov
(int i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 402.768 mov
(=0) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 402.768 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 402.768 mov
( i) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 402.768 mov
(<) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 402.768 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 402.768 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 402.768 mov
( i) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 402.768 mov
(++) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 402.768 mov
(\)) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 409.518 mov
(          add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 409.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 409.518 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 409.518 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 409.518 mov
( ) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 409.518 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 409.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 409.518 mov
(lit) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 409.518 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 409.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 409.518 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 409.518 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 409.518 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.25 409.518 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 416.268 mov
(            ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 416.268 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 416.268 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 416.268 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 416.268 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
81 416.268 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 423.018 mov
(              set) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 423.018 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 423.018 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 423.018 mov
(litter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 423.018 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 423.018 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 423.018 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 423.018 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 423.018 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 423.018 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 423.018 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 423.018 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 423.018 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 423.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 429.768 mov
(              add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 429.768 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 429.768 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 429.768 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 429.768 mov
( ) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 429.768 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 429.768 mov
(dentity) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 429.768 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 429.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 436.518 mov
(              add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 436.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 436.518 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 436.518 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 436.518 mov
( ) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 436.518 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 436.518 mov
(dentity) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 436.518 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 436.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 443.268 mov
(              set) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 443.268 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 443.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 443.268 mov
(iner) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 443.268 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 443.268 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 443.268 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 443.268 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 443.268 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 443.268 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 443.268 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
107.998 443.268 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 443.268 mov
(\() sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
118.123 443.268 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 443.268 mov
(/) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 443.268 mov
(4) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 443.268 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 443.268 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
134.998 443.268 mov
(N) sh
/Courier*28 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
138.373 443.268 mov
(/) sh
/Courier*17 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
141.748 443.268 mov
(4) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
145.123 443.268 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
151.873 443.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 450.018 mov
(            ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 450.018 mov
(}}) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 450.018 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 450.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 456.768 mov
(        set) sh
/Courier*24 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 456.768 mov
(J) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 456.768 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 456.768 mov
(iner) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 456.768 mov
(\() sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
60.7491 456.768 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 456.768 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 456.768 mov
(und) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 456.768 mov
(R) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 456.768 mov
(o) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 456.768 mov
(b) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 456.768 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 456.768 mov
(\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 456.768 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 463.518 mov
(      ) sh
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 463.518 mov
(}}) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 463.518 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 463.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 470.268 mov
(    ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
13.4998 470.268 mov
(fo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 470.268 mov
(r ) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 470.268 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 470.268 mov
(int i) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 470.268 mov
(=) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 470.268 mov
(2) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 470.268 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 470.268 mov
( i) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 470.268 mov
(<) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 470.268 mov
(N) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 470.268 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 470.268 mov
( i) sh
/Courier*12 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 470.268 mov
(*) sh
/Courier*9 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 470.268 mov
(=) sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 470.268 mov
(2) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 470.268 mov
(\)) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 477.018 mov
(      add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 477.018 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 477.018 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 477.018 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 477.018 mov
( ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 477.018 mov
(B) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 477.018 mov
(utter) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 477.018 mov
(f) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 477.018 mov
(ly) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 477.018 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 477.018 mov
(i) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 477.018 mov
(,) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 477.018 mov
( ) sh
/Courier*16 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.1236 477.018 mov
(N) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 477.018 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 477.018 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 483.768 mov
(  ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
6.75 483.768 mov
(}) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 490.518 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 504.018 mov
(class ) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 504.018 mov
(A) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
23.6246 504.018 mov
(dder extends Filter ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
91.125 504.018 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 510.768 mov
(   ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
10.1248 510.768 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 510.768 mov
(id init) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 510.768 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 510.768 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.625 510.768 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 517.518 mov
(     set) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 517.518 mov
(I) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 517.518 mov
(n) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 517.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 517.518 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 517.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 517.518 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 517.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 517.518 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 517.518 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 517.518 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 517.518 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 517.518 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 517.518 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 517.518 mov
( set) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 517.518 mov
(O) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
104.623 517.518 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 517.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 517.518 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 517.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 517.518 mov
(Fl) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 517.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
134.998 517.518 mov
(at) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
141.748 517.518 mov
(.TY) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
151.873 517.518 mov
(P) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
155.248 517.518 mov
(E) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
158.623 517.518 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
161.998 517.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 524.268 mov
(     set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 524.268 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 524.268 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 524.268 mov
(\() sh
/Courier*8 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 524.268 mov
(1) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 524.268 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.6242 524.268 mov
(;) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 524.268 mov
( set) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 524.268 mov
(P) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
70.8739 524.268 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 524.268 mov
(p\() sh
/Courier*20 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 524.268 mov
(2) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 524.268 mov
(\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
87.7487 524.268 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 531.018 mov
(   ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
10.125 531.018 mov
(}) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 537.768 mov
(   ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
10.1248 537.768 mov
(vo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 537.768 mov
(id ) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 537.768 mov
(w) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 537.768 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
33.7495 537.768 mov
(rk) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 537.768 mov
(\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
47.2493 537.768 mov
( ) sh
restore_ctm
save_ctm
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
50.625 537.768 mov
({) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 544.518 mov
(     ) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
16.8747 544.518 mov
(o) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
20.2497 544.518 mov
(ut) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
26.9996 544.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
30.3745 544.518 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
37.1244 544.518 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
40.4994 544.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
43.8743 544.518 mov
(ush) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
53.9992 544.518 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
57.3741 544.518 mov
(in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
64.124 544.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
67.499 544.518 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
74.2489 544.518 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
77.6238 544.518 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
80.9988 544.518 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
84.3737 544.518 mov
(p\(\)) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
94.4986 544.518 mov
( ) sh
/Courier*26 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
97.8735 544.518 mov
(+) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
101.248 544.518 mov
( in) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
111.373 544.518 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
114.748 544.518 mov
(ut) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
121.498 544.518 mov
(.) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
124.873 544.518 mov
(p) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
128.248 544.518 mov
(o) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
131.623 544.518 mov
(p\(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
145.123 544.518 mov
(;) sh
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 551.268 mov
(   ) sh
restore_ctm
save_ctm
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
10.125 551.268 mov
(}) sh
restore_ctm
0 0 0 1 cmyk
/Courier*10 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
0 558.018 mov
(}) sh
181.698 253.633 mo
180.088 255.444 178.275 258.038 177.448 260.202 cv
176.876 256.198 ln
173.875 253.486 ln
176.133 254.01 179.297 253.956 181.698 253.633 cv
0 0 0 0 cmyk
f
120.186 279.65 mo
155.686 279.65 ln
161.186 279.65 165.686 275.713 165.686 270.9 cv
165.686 266.088 168.329 260.744 171.561 259.025 cv
174.792 257.307 177.436 255.9 177.436 255.9 cv
0 0 0 1 cmyk
s
179.566 254.767 mo
178.762 255.672 177.855 256.969 177.441 258.051 cv
177.156 256.049 ln
175.655 254.693 ln
176.784 254.955 178.366 254.928 179.566 254.767 cv
f
39.0767 89.3574 mo
40.2148 87.2183 41.3662 84.2705 41.6606 81.9722 cv
43.1592 85.7295 ln
46.7144 87.6592 ln
44.397 87.6812 41.3345 88.478 39.0767 89.3574 cv
0 0 0 0 cmyk
f
178.686 249.65 mo
178.686 249.65 175.704 247.851 172.061 245.65 cv
168.417 243.45 165.436 237.15 165.436 231.65 cv
165.436 92.1504 ln
165.436 86.6504 160.936 82.1504 155.436 82.1504 cv
57.1855 82.1504 ln
51.6855 82.1504 46.1729 83.0503 44.9355 84.1504 cv
43.6982 85.2505 42.6855 86.1504 42.6855 86.1504 cv
0 0 0 1 cmyk
s
40.8809 87.7539 mo
41.4502 86.6846 42.0259 85.2104 42.1733 84.0615 cv
42.9224 85.9399 ln
44.6997 86.9048 ln
43.5415 86.916 42.0098 87.3145 40.8809 87.7539 cv
f
356.186 212.65 mo
356.186 218.15 351.686 222.65 346.186 222.65 cv
340.436 222.65 ln
334.936 222.65 330.436 218.15 330.436 212.65 cv
330.436 209.4 ln
330.436 203.9 334.936 199.4 340.436 199.4 cv
346.186 199.4 ln
351.686 199.4 356.186 203.9 356.186 209.4 cv
356.186 212.65 ln
0 0 0 0 cmyk
f
356.186 211.814 mo
355.764 210.679 355.045 209.269 354.283 208.396 cv
356.186 209.083 ln
358.088 208.396 ln
357.326 209.269 356.606 210.679 356.186 211.814 cv
f
356.186 211.814 mo
355.764 210.679 355.045 209.269 354.283 208.396 cv
356.186 209.083 ln
358.088 208.396 ln
357.326 209.269 356.606 210.679 356.186 211.814 cv
f
206.415 191.359 mo
207.281 189.097 208.063 186.03 208.072 183.713 cv
210.021 187.258 ln
213.786 188.736 ln
211.489 189.042 208.548 190.209 206.415 191.359 cv
f
321.686 240.483 mo
321.686 240.483 320.11 237.596 318.186 234.067 cv
316.261 230.538 314.605 223.151 314.507 217.652 cv
314.114 195.649 ln
314.016 190.149 309.436 185.65 303.936 185.65 cv
221.436 185.65 ln
215.936 185.65 211.023 186.119 210.52 186.692 cv
210.015 187.265 209.603 187.733 209.603 187.733 cv
0 0 0 1 cmyk
s
208.009 189.546 mo
208.442 188.415 208.833 186.882 208.838 185.723 cv
209.812 187.496 ln
211.694 188.235 ln
210.546 188.388 209.075 188.972 208.009 189.546 cv
f
330.521 242.981 mo
331.532 240.779 332.508 237.769 332.667 235.457 cv
334.384 239.119 ln
338.046 240.836 ln
335.734 240.995 332.724 241.971 330.521 242.981 cv
0 0 0 0 cmyk
f
254.686 114.15 mo
254.686 114.15 255.979 115.444 257.561 117.025 cv
259.142 118.606 264.936 119.9 270.436 119.9 cv
333.186 119.9 ln
338.686 119.9 343.186 124.4 343.186 129.9 cv
343.186 220.317 ln
343.186 225.817 341.104 232.398 338.561 234.942 cv
336.017 237.486 333.936 239.567 333.936 239.567 cv
0 0 0 1 cmyk
s
332.229 241.274 mo
332.733 240.173 333.222 238.668 333.301 237.512 cv
334.159 239.343 ln
335.991 240.202 ln
334.835 240.281 333.33 240.769 332.229 241.274 cv
f
save_ctm
restore_ctm
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
174.095 183.15 mov
(class ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.344 183.15 mov
(B) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
197.719 183.15 mov
(oo) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.469 183.15 mov
(ster extends ) sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
248.344 183.15 mov
(P) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.719 183.15 mov
(i) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
255.093 183.15 mov
(p) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.468 183.15 mov
(eline ) sh
/Courier*2 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.718 183.15 mov
({) sh
restore_ctm
0.25 lw
146.686 463.15 mo
146.686 463.15 148.751 463.15 151.275 463.15 cv
153.8 463.15 155.866 458.65 155.866 453.15 cv
155.866 441.453 ln
155.866 435.953 156.838 430.589 158.025 429.532 cv
159.213 428.476 159.213 426.747 158.025 425.689 cv
156.838 424.633 155.866 419.269 155.866 413.769 cv
155.866 400.15 ln
155.866 394.65 153.8 390.15 151.275 390.15 cv
148.751 390.15 146.686 390.15 146.686 390.15 cv
s
save_ctm
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
194.14 207.458 mov
(add) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
204.264 207.458 mov
(\() sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
207.639 207.458 mov
(ne) sh
/Courier*11 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
214.389 207.458 mov
(w) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
217.764 207.458 mov
( F) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
224.514 207.458 mov
(I) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
227.889 207.458 mov
(R) sh
/Courier*1 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
231.264 207.458 mov
(Filter) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
251.514 207.458 mov
(\() sh
/Courier*4 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
254.889 207.458 mov
(B) sh
/Courier*5 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
258.264 207.458 mov
(OO) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
265.014 207.458 mov
(S) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
268.389 207.458 mov
(T) sh
/Courier*13 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
271.763 207.458 mov
(_) sh
/Courier*23 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
275.138 207.458 mov
(W) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
278.513 207.458 mov
(EI) sh
%ADOBeginSubsetFont: Courier AddGlyphs


currentfile eexec A0B00ED553D88C5C0C79D03A57EC9671B1D399F226CD7C
D65ACF5F52191B6189AD006088DC248B070400A2FF50090550BDD59C4446787C
36C6E6DF3FBF7A9A4DAD53ACCA57616FFD3E7C1C1A87B388892CC4BDF41FF3A4
C6F6848B0EFB4E4E3A271A45CE29514393F5A9592F4992EFD97D6677D2006674
8DA8DF8DE7C41CE2ECB0A2AAB34281F46B7A1A0C211D65A6C09157E009C52BE8
7302585FE0F82BA28B951B1C88120DD573BEE462A064B11CC88930B164CA697E
98407EA9110975890AAD429F076B7B1C2B4C15B8032804DC450139C7713D68E7
E77AC4CEF7CBFB8FA6ED6D2AEFEE237763CB43DEE2AA752827C725E34FE8C962
2CF5525A647D50D4C3649EA6E333465FF35C0A5C6C30ED128586F514BF447002
05653F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/Courier findfont /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/Courier*32 
[
71{/.notdef}repeat /G 184{/.notdef}repeat
] /Courier nfnt
/Courier*32 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
285.263 207.458 mov
(G) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
288.638 207.458 mov
(H) sh
/Courier*7 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
292.013 207.458 mov
(T) sh
/Courier*14 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
295.388 207.458 mov
(S) sh
/Courier*6 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
298.763 207.458 mov
(\)\)) sh
/Courier*3 findfont [5.625 0 0 -5.625 0 0 ]mfnt sfnt
BuildWidthShowArray
305.513 207.458 mov
(;) sh
restore_ctm
save_ctm
restore_ctm
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: Arial-ItalicMT Initial
11 dict begin
/FontName /Arial-ItalicMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 932 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf3170370f01babc232d97d905f43e4bf4fc01d893> ND 
/nine 
<10bf31703cf850290a2eccb79630fb33ea5f834db7d0d53af9bfee85c0f6
eb97888862d9071dde536cf6e260f7e7f9fe2371eed6ce837b0d33f71c09
becf254305fa32c97627b827b830bd4c47cde24e9183e5f0c785e4c7bcc3
46fd969e466276a08cbcb9fa6bc30102763348ceacc34567e6a433c6ae41
935526fbb1f7830a1355361961d25159323cb299ce5ad8e54a1842461bd6
a6e07db1f0721b56235e62528cf917300ac17dfd8135d240081e117cb0a3
135a37f467d1d5da1bf40021f84a43b789c3d0e2fb3e7947a135f85a1ef1
0c960b8fe3b8d8e397f86f53ee4a> ND 
/D 
<10bf317045bba87c3c1099877b6403823f685b41b86eb1dc130c34f91691
50e157f9fa55ac001d8c686a6333d2a9713ee84e40cd01472950796882e7
e5d70786109711700d4236fd6875fed7ad576f621fd927a2d6cf0f358ab7
a9d777d889dcacbe9a3b249ef6607e4c9d5f55bb001606e6029d15d8b6c6
72d660ba8b7b0c93904171ae029b1910ebb278e37a329958fbfd7b191178
4beac722e64b3c1ae8> ND 
/F 
<10bf31704ab267c414ac790f3679b7364d1b3e9ac5c5ba9ced1fffb0bd83
3ec50774bf5725199a1e07b1759bbb> ND 
/S 
<10bf3170232eb5dd52f1a8a6d42bf681a2609ae772b86ee806d11748e321
943730f4a7763aa1e58f1219900ff64b41ba721729e025ae6d8876b06a9d
b2b717663f20167cfaca2d37ef46520abe5e4cff5a962dac465b1d45cc00
abe614bf88afd87a3ce9a90946f38af6fb7eec2a43447cd90391d52ac0d3
17867ba495e25adeb6fb1d7ebed7e41b29b9d9b27156b306d74d54d36327
bd1b045372db1bdbf06483ba6a47eb861d9037842924f337a98e747cf190
ff6381cfe1c021c859d5970e6bcfceba440ade3c83c11ae9cca361eaaac5
931342fe8d161a960114e3cbbef93ff393493460c54e4e14b09a51b0d476
897ad8dca127e1881e2a4ae0045d03fe3758e164> ND 
/a 
<10bf317045bac03c9a18bf4d04d145ddda5d20017ce911188ee4a72e195b
eb731e29f601de64550f26924ba8b4dae0c2523a6e3862657a8c7a503531
d83b45c3ae8f1129ab7252549a8f0c12eca5b0d0912358b1d64ab5b69cb3
75da0e847d57c4e3f7bcdbb8ad8d146a04f65ed7a25b76b886cd7cb034dc
39037211a044c4fcf87ad852bbbc7bbae5fc350aeba435494e775f0b8c99
3bac4df56c8bcf282dc790a314f62aed0564f03c4c006e6e39135d241a55
d6cc47458ec56e3932c4ea55929d08d5cd61a53b2eb0455504e4a7abfb6b
86aea8e5e72dd2cd48a6ce44ee81dcac322a00dc3cb1dd7e35cb8950947c
38a99cba23b1b99efa5bc00cbf> ND 
/e 
<10bf31704d4d2f611a72b4db86113d9f0a83b068db683c3f1a39e2af4617
1e5da50dfe3a8017e796cb91bc2af12db3ad6ec4d448307c7de50a8ea9ee
77159886b7570afc2ff1cff980d7bb05ea0b698418e8bc768e3917190c8d
8e64cb2c4f86379697c754e09def979eedbae65cbad8d87f34b036297633
da99840b3010890b54f040e74b89ed6bc0e40940bfd5f56907484678b56b
01b652ef38e4bacf31402f823573de1054b3aaeafc553f93ea8190> ND 
/f 
<10bf31704abdc53ae7772c39a5772b1f09501137a8c7bd7eaca4306b04a5
929e507108584cb8a58c996a42cb79116176b2829a30591ebf6dcb07f4cd
7ed211449cf6afa5bf9f90bb9a8720a6baae7a3814ce570e0b4b2948a294
7883e5e9> ND 
/g 
<10bf3170573e1e0455984833f26bf073457767110dcb1da4aa11a4d7c6be
84e69d7443de826413a15b8bf23ce665acfb8ef3957576119957d3526d6b
a339401041e69d85d54de41353966fd898c2a0776c4f83cbd5a48bfc6cd7
c0666debb701ae8b0401570ca0fb128f1c91318d208b20e9eca4f7e16d86
a11635d6bb8385286e50b9c1f6452362c8089f254be7108541a40c937be7
7716e1862a16f2e9a238be48da79b77912a493c56ba8ff73664bd2ea4ed2
27bf9e67bff870ce3283a2113c88ae4e10ce8eae84b9c15e6511925697ff
cf0d3c9d26d1158eff869041fc602e72eb9cc81b5230df7d527e6c8f5c4c
3ac20b5fd849741a348934a8> ND 
/i 
<10bf31705b08cf2e12571b16c1e1cf5f8daafad69cf7de33e25258c1aa54
e000a3806df14813952917f34772> ND 
/m 
<10bf31705e93745db83801f6f65e38d918fa4949c43b54f5410b908dde92
d1bc27d80f1681f3e77c6fc07df2163a6824377cd864b7fe253230174dda
105759d2b17507408bacee1110569941f6343af866042a57e9f90491dda8
c1b938f970c3dae715e82670543e1b39dfc4a9fde2e7e9bdb1abe9842763
73cc7cf5d14148bc877c3e5d0d768f0a7a5329951195c04e7dd79ee62c26
dc317fa17bd96473c6cc97803d5c4a608011295fb1d79814ea397180ab92
b2b2a2aaa3b2a999834a4d33640a54> ND 
/o 
<10bf31704e7caf35ee4be6bc55c8633129fa83cf7bedb7598c1c43b25968
a3c292e9d42cca221e8a19c48c1a76c8153621b06bb6e96b41c0827a05d8
ed63ee7d44c8d095f8829e30a93a2b78ae6723671409ea027037c4221e1e
4849777446c8850b0d229cc3bd4b31570e5e62779931c6f0fe589dbdad66
47b875c923025f08f2a1922094eee0ca79f3c58045db19fbf0eba264dfd1
010d347cd0798359a3051e1e0af7085100f37c9ee7208a49293f970f08> ND 
/r 
<10bf31705e9d53b16f09989b085438535e1ecd6f567079881d1bda151b6c
4834a53ef94d0ea7fce4019aaf867969d69b0b7c314e9029058e128cf953
442ffe552f546f54cccd9bc781e6> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Arial-ItalicMT findfont /Encoding get
dup 32 /space put
dup 46 /period put
dup 57 /nine put
dup 68 /D put
dup 70 /F put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 114 /r put
pop
%ADOEndSubsetFont
/Arial-ItalicMT*1 
[
32{/.notdef}repeat /space 13{/.notdef}repeat /period 10{/.notdef}repeat /nine 10{/.notdef}repeat /D 
/.notdef /F 12{/.notdef}repeat /S 13{/.notdef}repeat /a 3{/.notdef}repeat /e 
/f /g /.notdef /i 3{/.notdef}repeat /m /.notdef /o 
2{/.notdef}repeat /r 141{/.notdef}repeat
] /Arial-ItalicMT nfnt
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
161.686 420.65 mov
(See) sh
161.686 429.15 mov
(Fig. 9 for) sh
161.686 437.65 mov
(Diagram) sh
restore_ctm
save_ctm
restore_ctm
save_ctm
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
112.941 90.6504 mov
(Fre) sh
%ADOBeginSubsetFont: Arial-ItalicMT AddGlyphs

systemdict begin
/Arial-ItalicMT 
findfont dup
/Private get begin
/CharStrings get begin
/hyphen 
<10bf31704befbab3b8d770a57a09060d41bac106f9f98ec42c356a> ND 
/H 
<10bf31704726b8ff56f103d2f3b9daf504514ec6cc4c6e3979d91627a665
fb9638ae46bce411a9716fce3e410bb0867487789163> ND 
/M 
<10bf317045bb1bb2a49205851146143f39c925c8ad27ae3fb264c01556ae
f862c0ad8e7236a9a6a838c0c0f607a9efd4a765d40e19bda01567952d93
df6d6e4368c78225d04e00bc486fc3030642da1b971015cb7ec771284d08
10a1febc33df17395d65f26215> ND 
/c 
<10bf317031d9676c177beb3fbac20c2b0263dfc94f92ed58313fbce6b6fe
728a2242ba27e4b0ed89bf16a4c354afdc1da69cc346333af97f4cee6e14
de8a859de2ff8fc290b5a2e0baa70c94e2003472d50e12426b132fbd0fef
9fac559f7b557c1baf8b7c71ea80a8f2c09fd8f5866639e2e7f84ac989f7
11557b1ac469c3691a5cb2cc44489bf0190165323230fe07d101> ND 
/n 
<10bf31705e921373b9d4d3979c3fe3cea8547878b57bb1cec91e80e6d053
0bbcb117425b3b467d219f793db510f3eaebedb1db2c6c0033277e146b19
d641e4ea030b6cd0aad2cd5fe6bac36d24d4d59fdace850cc0430c8f626a
b2b55ba879c7c4479b60d4eb5524ab62253d> ND 
/p 
<10bf317073a15681ecedbb11b26e8d34501d7229a902a324e8f003cabd00
f8d28a76ac4a075ee9deb6a8ed9e07712a18457e542e7996611e3f96878e
0369297e28e900c690a38f20095d11359e2d084add60879f44fa41908318
a7ad1f254d8a0cd39c1dda4216b8a0d9b7d3b6d4c85d20cbe7c522894df3
ada7805a012b86a5864d5fa678a5566c573f9ea9a3405daa1d92a1caa15f
810c50bbb7cdd85bf0437b0040378fcc545f9af498bb837777> ND 
/q 
<10bf31704c1ffd8163a9cc5d0f4c1d74381a0b076e87fd4bd3a217353824
19b4944f38275b4bafa4e0c2c90a9f5b6921a1c3315df2d45d65540da9ef
11a9e31f04652c1c9c6a3ae73cabe32bc065cc1ada3cd16f6b4a8fe200b9
1ca659217aed06dac51abfa0303de880a9e12c38926e4ed1e795c2e6e891
85ad8976c97597b18b7e68403a43d2101b5971511974dac87c5bbb1154ff
40c3128910e4334dbcab398271cfe0> ND 
/s 
<10bf3170435d457c07ba470656ba01f61aff77c460d38e2554f423c678e6
777293e7142808633dc6e0f886eadddd2fbef974b53410a6f000de319076
a997d0f5126d13500102f105e5e7970d5c283ab88cbc96b9cccb45bf2fac
483077e83aa3703c31281bdef3a8ee5caaa729e166769e09e9ddad8831e3
f3e2b663368e76c9f6420190c7dec54303a30cd0f51e845ad941bde61dd3
748301fa05488c08cb8f21cd965b08d82e4d05e212f946b111b098278d8f
07eec0712dc4417e4c09e42d1b33857ecc83b682a07b837de18a8be7cb0f
> ND 
/u 
<10bf3170383eecc694c22c0f356ab6ab4ae2f06b6dc4e5ee06b89e8bcf4a
bf9d3b3cfd0ca901d1bca9609b95e44b4e8fe981788eaf322c6eaf0646a4
5bbbd5f7c6843c2f8f64009477dcf47c51b5816a2c7b193e4e1bf4cb8d53
71030046538747bbe72177c143afbcc4c0d724e71caa1d0b5b29> ND 
/y 
<10bf317079c82f0649b8bb254b37284b37b04ac94142608e30dd39fd6839
c02828ef34edf8a81fed575b7c555103d62b675d4e6110eb6a85835b9113
50e54fb9457c00c41e166f08d68677e81a45b4289a5ac137faadd2bf0673
a48e6e> ND 
end end
end
/Arial-ItalicMT findfont /Encoding get
dup 45 /hyphen put
dup 72 /H put
dup 77 /M put
dup 99 /c put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 117 /u put
dup 121 /y put
pop
%ADOEndSubsetFont
/Arial-ItalicMT*2 
[
45{/.notdef}repeat /hyphen 26{/.notdef}repeat /H 4{/.notdef}repeat /M 21{/.notdef}repeat /c 
10{/.notdef}repeat /n /.notdef /p /q /.notdef /s /.notdef 
/u 3{/.notdef}repeat /y 134{/.notdef}repeat
] /Arial-ItalicMT nfnt
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
123.441 90.6504 mov
(qu) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
131.227 90.6504 mov
(e) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
135.12 90.6504 mov
(ncy-H) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
153.399 90.6504 mov
(o) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
157.292 90.6504 mov
(p) sh
132.782 99.1504 mov
(M) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
138.613 99.1504 mov
(e) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
142.506 99.1504 mov
(ss) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
149.506 99.1504 mov
(age) sh
restore_ctm
save_ctm
restore_ctm
save_ctm
restore_ctm
%ADOBeginSubsetFont: Arial-ItalicMT AddGlyphs

systemdict begin
/Arial-ItalicMT 
findfont dup
/Private get begin
/CharStrings get begin
/B 
<10bf3170448a9e9b528bac645b620a0e645348216b3176ae739b5993f20a
d1179d1867ea2f2c22ebce7fe17188b8a8830bc27344ced31accde83a565
5c74513139a8050724b611da50722bee51632362370e3fff221e32ea9bb8
091b7eb02c94a810396e5535ef8d280ff07d60d2bb0febcb57b6ebbdeb32
48d3d25e7b787201c63a395a6957686090d97af1d6ba315f158a9c984e59
80de01118d01578dfd9f7785da38ba2ad786fdef2fe1d26ba332b4b8a6c8
32aad90df82027065c663f4c1226c900f902e5cdf2c570eff63ef8e66d> ND 
/I 
<10bf317036de51da124aa44de4a73d18a10ef786436c4ffbf4c3> ND 
/R 
<10bf31704854f6e1b259745437e2ea750d93592ff68cdf894f18b8536c69
3ad09f1afc6dbf04129bd98e6ffcb8eec52e2a1d51d7f58aa8f299f3ec3b
5c58d67f5ff4c3cf6e7f7bdd9f528969122eb84418d3afd2d1ce537c7d53
f14d7dfb8e13feaeffdbfb8e9dd044cb6baed83165ec2dfa14f5cfb46343
38da9c8838cce43e666b9a19d427bab1a9b910ed6c9890b8c230998301ff
09dcb92c5266e9d0c81878a0e31665564d8f408db4adf804> ND 
/l 
<10bf3170573111ba0984a25a2853caf9ac11269c2cef7be1eff2> ND 
/t 
<10bf317031d62999facaf73481f2d7faa49b992bd137a4bf36d63f22dd83
94acea4948bb502e1b1e9c5d7a3df597e89a06d149cb37f7caf3a93a0119
164875ca380a92725915f0a38c3ff8fb02984ce43fab9eb2fa72e684e87a
c6619dadcc9784b8b991487b66a9693f2adb> ND 
/z 
<10bf31706d7bdb7f5f1dcb950b4e7e7b3f9ada457e32094fa0578eaf31b7
666d0b1bd931e58ad8bd3056f8e89f44075b50c62b272173a457e9a267ac
198d11f143295f320110353f04cbb9> ND 
end end
end
/Arial-ItalicMT findfont /Encoding get
dup 66 /B put
dup 73 /I put
dup 82 /R put
dup 108 /l put
dup 116 /t put
dup 122 /z put
pop
%ADOEndSubsetFont
/Arial-ItalicMT*3 
[
66{/.notdef}repeat /B 6{/.notdef}repeat /I 8{/.notdef}repeat /R 25{/.notdef}repeat /l 
7{/.notdef}repeat /t 5{/.notdef}repeat /z 133{/.notdef}repeat
] /Arial-ItalicMT nfnt
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
314.184 158.014 mov
(B) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
318.853 158.014 mov
(oo) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
326.639 158.014 mov
(s) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
330.139 158.014 mov
(t) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
332.083 158.014 mov
(er) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
290.453 166.514 mov
(R) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
295.508 166.514 mov
(e) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
299.401 166.514 mov
(-) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
301.732 166.514 mov
(I) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
303.677 166.514 mov
(n) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
307.57 166.514 mov
(i) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
309.125 166.514 mov
(t) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
311.07 166.514 mov
(ia) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
316.518 166.514 mov
(l) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
318.073 166.514 mov
(i) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
319.628 166.514 mov
(z) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
323.128 166.514 mov
(a) sh
/Arial-ItalicMT*3 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
327.021 166.514 mov
(t) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
328.966 166.514 mov
(io) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
334.415 166.514 mov
(n) sh
309.904 175.014 mov
(M) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
315.735 175.014 mov
(e) sh
/Arial-ItalicMT*2 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
319.628 175.014 mov
(ss) sh
/Arial-ItalicMT*1 findfont [7 0 0 -7 0 0 ]mfnt sfnt
BuildWidthShowArray
326.628 175.014 mov
(age) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Bill Thies) (MIT)
%%Title: (code3.eps)
%%CreationDate: 1/21/2002 9:01 AM
%AI9_DataStream
%Gat;;>H]?pEM`KF!WIj1%g"0'ORc'>-0gI&S)$IC-%_r(0k`BL%sJO>Tk%_W<gG"kT`745(Kn_8Um[!8M,fu,ll?mdZXmp_S!j;q
%?i9SPDn]KF^AQ5_J,&1[hI95uZ1bZeN,L;7n%J_[0E0/,?gOurm>$.Xj&,a8%pMd6*tLRu6HX]=pgG`4n;BO10YdG>rpnOa5CT!s
%l`^?N_tsrd^]*6[YMYE:%tFHQT7$G)'0lNEa*6SB%t=@h]RMkip+&As^VB`lLMoAjgE6Ife%bhCX0:Bpg["ms[s/X:al@d=p(`Y]
%p&=UWU\3U"^OErtEPG;arm=MeWun4JnG,\+rg?Qss6@L?5)ugqqtk:r(Z+/dq:pK!frtGIa0FK@bNJX"iH:`Sq!%7eD`64HHnPH>
%TDRmMpYUAsl/VR2iT%C+r."P#=6%c-rUJ&q4OnrVU&"A"5Q&u7in+,nqXrIT*DS<?k^U)HfDG5:hS%f2q=*ouj3q6.iTD<FcYr=I
%?h4J/]KLcDp?+[=Ek_Qcm@Q2RHTc<Bp%+[HlfTq9gn-cM%gN%O\%hals7Kb!e2[6n\,UjUJ,EdUk2#Xsmll-p5QB/-1K:"8qoerg
%q"tN&p\?o.G8u+Fn+"[":S/`mm>mn!O.ZFBmINF>h,jU:lfVLFNVWJFJ"Qc:p@eFq5PXZ=+%6//O!"8nJ+CqM/\`<un+6.Cs4D[o
%cQB+E%<"i9'E?n?rqOh6T8.M*J$je#ebelN5Mh\nrF'upBCXl/r:>+SAU6O%V,$ngcJu#Iq:f9Ud0',-^>&\[`S5mqA*o?7cKpTU
%Ier0<s-jn-0tjtNIJ`&3I.Mf:r;//)l!9p2G((M,T7'i=rHCJQ^Aa>jj-e+UH)]uahgXQdj5Y(O-XH0=2\,^$D`rLB]>+=,GQ6k$
%rVlSo/U3JoqeCWVWt56tH-dDS[ouQt/;1q`)9^@t(#rNcIkk6c?-mNeh=%N#S;<eIFFX&Th/D.uq8G-RTC"',qWHn>rUC\NIer%/
%r1!e7#4;_Gr4pX'oZpn(LMoEPm`Sf)J,]4\rR$^2HL%4'ot:)2qk*fTr9f'l^*(=IT76U<p&CpCfACuNS^X?pr5E#Qn6b/amm$a4
%gY`##0@0*sk;Qar40d*BIduiobPBE'O'L`r:mFOsqt0EJrJ"O+qtE=&?+g*p:S@6-qtVmpn9D[^p]2H9LL7cLE;VCD;g@NHrOC48
%0ubm'rqg#?5PjM$c:"a@Pjh+L!m\.D_>j58Da'p^NeM2j]nGr>YPdF)*uX2O++O;lhd-1&^ARIr?iJ4jrd)?VEnu-4D12$+gL"B5
%s6H0QdiX):WB^D#`q4EoTqo0r^Y\ZKcelJ8Q+-P=n%[T&n"N#g?`nnWQ`iT#olcDj?giJmGAmKPp:YtOHMlfP#3T@nj\LBtkC<@M
%f!XAZ:N)Rep:]Y[5Q10PJ/*P4\I\?"n,<nT'4&?Pm;W$c)hYO^I/3d9Den7fql@L1nEJcaDr:Sa%q#8V'E%6q\*qYXAA%d7IlM3%
%q0.5cSXt>okMPt.GC0>F5@a<>07X#pVu=62hgj;h+2@XPXR5\u\$mHmJ,f3MYPe&4::<Cd,<u.9:[sWehS9*Fn[msEScSk8*uMb>
%p\speT-*mtqt&kJCp/'?r9iJAp>+=bH2#X3rVYJ!-KMGGkJs2^nrLN_c23K14?r]>0/;,Rn%RRAs7#]n#FU('+:iu$]3kO1h>E$]
%#mkOoZbP4$Y(->ibf]OmIk[V[a8_"D0nd7=ne4JH5-@-Ji;*&la1H8,-2d9gcemb)s8K@pl/TC*Iet4<)>t>I^\cL[I/E>'^GX'X
%VYGqMr\ZD-00cDJ'8TNW$/"?hrNcb/el*YXiiTrlq[J4nmJY@XIP6Hhnm0]^Y'ku(kHh=,hQ)Br_`c<*f\sF$foEH95"A1U*9RfE
%4OT@q0gfaDW7P0uM50,Mp0C"tmkMi0a&1SkY&K?cb+#GsEig1&)Jbp]c-jmYQ]YI?rCFP*8*CMq]uuutN)aoagcA\afOo$\b'DRV
%'k9Gq=i6@gaS[CZee;s6mT+LK-.H,qi.LEWB;d=#Fli35HogZ-XrT0%3S2lslS2Se]<k^&:X(#@>&t,8Fdtt(fA_)<hUd1G\4oTi
%)-0@Bgo^4?<^#3_f?rSe5iO81h.%HW`),#7lY^q&kC)7P:=.O>mWp[\a,&mjgYGcr+iZ$lQmPV#';KTTbTi(:7_8b`P"I^ge^Jfq
%FrZ]CBZJYDRuGA$XtoG2\F.HZ"!bibY0e^t0ua]?[67"fHgjZlFro\2]o?903lc$-\aSQ01EQj?OKLI%G-'K9l;u\^`-(FIQctDq
%(0\HG[F6ku)!VhO_oPAY.sug<&K%Hoc@4V?4a-3_3&$tPh*&t"R@SSpr3;2\)7ioTca11-DLLn7Nsblf,9MW-+!G?0Mb>G7EWsE[
%Y?4-MH$`,R.ik,<(kJroNN&E?\GF;0]e[Jc!g^.8H%ifT;OQ38.[S1<lJU@eQ!TZbDW*!;@rXo@Q_VKY9um-'rEomd(4,Tn/%5pM
%c,ctmR3+/ZZ)$#+!'!GZ6LNMg@sd=V2s[X<:-5l!-[CZbGnHs?\&5\8Q0oYk)jTBN.EocdLG`9fIGr?(Pe6!u%D682fPlhuYIX*P
%NgSkdm3B',Y'SF6qc*jg]^rZ+Q[*^IKu#nie2\E#*^ds8ce]2VU>4iomMFopO6kL>lal+^lR_de?S>8"P^&-n00H`3JX)N@4*-.1
%@%/%\khIg)IZM&5?uEi$@km^4E@'c>S9Hr.auD_Vf@i"sAmdGLTUhHC/TZq7!/u*W^1<8!iE>*ZiMZC_3Y-]pDtd,KQt(3X'X=(U
%p"$I@M3$WK9RLWCF_+B&VLf>\o4SjMfdlGDJ<s0saUNg?H`_J[(C#a![O&N@Hk"#GQh?q'??Cdu+="T6j4_]sPCMB'%R9*jjVj+=
%eWLgGX((Ph8dT9,jT=GmAjdOKPu>hN-o9O2eAc1rE7K+%_,f^/q`(!QAj27s1#C\Ni7:M2^s<46V<\+3mj#VeG1boT\.DtiQ;pDU
%4)\FaD#=@``&m"^kA"W5NVg\)?/W/9e/7f^'(Q7+k&nDB/Po*,aOb6PLQAnM2Veelk1f.QTPB;]C9]<V_SjP0&'!YcGff)Dl'a^R
%NgWMW.8/bm$]+&X-I=./a\t&/i];*r>CT:]JpR2l`c_&_9NY6+@LH8<="5/NRL(>EAg8.5?UPLaRGflX&48q)'^g)G1%E-'JARFH
%_=5X,H!D3<_F/%Ud:/V+"#ar6Esr%WEAMS#e`P[_8/1MW(?+3>V.7sm1T$`Jo9'p`5]jlhB"XMJX04WQl32O*\`OBfpNnV3N%l$H
%XZl0@jt'12aHLOs"=FX$4Z7@$,NH1%m&=9Q]?SE1PdE_2rg:UAoCuffKGtnoO;:kI`5ZjS$+q"hBcfUVTu@X_(gkWDNOhJ?n^Fl7
%nPY/Ni!]QahC*o9N<"oa_?=l?F7/b5CG)s=K@lRl^`nTi^a=e:R.P^`WE8)^o`.t6dTFDu)UORhj=NX?=YDFj"5Xk$ehQQ?:TV1t
%i+H^>*nU5VT$5'-\0AbhlR-35>W>6TkO!q/"NWKH321<'RJ1]$0OfWNbiH>_OAIH;67f;Jq]ane.t0O9%EHkC%2iq/NeE?In_"4s
%aae)oS'+,7`XPTh^-248"X>V'WrJjuib>(mKEYDD;XEj[lA5S;7UA.3!cI=Lj1XV^>lMCq$CE0%SPmFpj%Q-'jDBb*&O[bu(W$/l
%%ijVX0p)UihZQT20qY6'HJL(OPLh#4`,o<u3tIF9DtP&bl=[uDRBI'[h^A0:M/H]*>f(MH4WFXp]c4JETA/n'Ht$S.H%g5/;Xf>G
%jO])G<'k.6q#8+U<[X8oo3+Z&g@1Q+NY>fUk=k5R'Y%A$BUk#tc/FNR42^'0?IJ*n"&K?:]*RbN6<81$S#aQJaFn%l@P?+n?(5NC
%LCZr60k9D@7%=`DJiAOq5#sXaN4DNC+9T+VL^R*JqSW@tGS];lfLuoBR\>ae66IJZnA*9;:H0:(JB=$rZq4A,N!FuTGA%#K?Xa8M
%ehLP!]Wi,:o/Hi"m`nlYJkk<@XIh)5BLmr4Dm$Nl1Q_4<[IHFjB3ZH<H09gI'/ooJJMKP'3`$TI!A7b/35pOT@X'".(W0sDr6StF
%Da3ra!-59_\dZ*O29rno)`9C`D*TIfEWAn<pFu$R9-q)@]8q,pP_hFp*'kTGJDo?]*$R16"SeK+:FW.35#@I!nFA,m`FI>D&M?Z^
%=@L,N\55EAF]=k3.LWI9n1]sLp#:^N:%!H7+<CAfVBfk0D*9.](`>TOG;,u?Ng!jLE)IhV8>-!q!*4%INs=OX#bn3c0btp^&FNsR
%][/\qYq7^4\22Wn&)SQM3;0S\P8J\c'DP:j3h1F^FFfVb[R+;/!,suQ`!1SX4LbJ?1@?)TK_`o=7mB$@)=7UUZjkCo%uCOS1AD@7
%CN=bg_8Z$91P-eN#R'-iVZLJt*q>>O;rttETp0S16D._6gk;D$U%XiR0AIf@")@@KW54%1UC4:nL3@/T:k>@""FiVBJJI.#/V+1$
%2fE%Cl5T(@rKIqH*L#Z)7n_Vgi!KXW@M#6W9K;'V7DK8H'MmLH#6,X8%"m2ip;5#kkAebuGnJS(&\q3doEPX/33H13Su?9a)LNnT
%!S\GP>TA#f0l^f_d$b_+8:8+S]g->VY!M$L2&=,D&cIR&E+#VQ-pTL!KqRZQL@[$*IH=t[V32rVfI*I*s24hS`$4DO+SFA0"9U3d
%5Vd4<N"p"MDFelb5_q:Ve!Ue^nD&g%5XQYSN@-us!<:\U^\=;X)>p%M%9M8^^[j;`/F7(8g,(Au/,T]l^u5P0#:@kt`eKBmcI?kn
%Ud5K8S9+u]/p/^UA,rT;r+Es&YqNm.>?MMDYSZK<m"guChh8sbU<Tc-7o0oZ%MpOlb5t;m+:`Gmi1?U=9K^C]#tK\p8'3m+CI/Lc
%3pq-.V(X/_.(D20"mJcu^@O$i"CN!h3?bhrWJLo2)rI%cZB!8$nV-1=Z2p[*3aBal"A1+Qem7>l7m)U`BE/*-^:1NZ%gF`.Kh/e3
%:D78P'nk(q@Q=P9J<oOk(e?'$J,po8nh*X,ImS@I0GHXH_eb-kn6R@H;heT\,D\<-+GL=d77]fY!pgAf#2Qq43I*'nZUbY#F*eK-
%pBCJ8M[H50!Ag_5hE$oC"CD;`b'6%=P&RbF49`K+?bFghSD^FZ+O"=TQ4SgKqS(np6)=S8i1aHs5/nGrTZVem6&T+gfFecNHRf7\
%#"3.GL_?p6[N'/f/"4.()!9671*poo$/up++2G]Hm[.b)^M]e0B!S,)pUuFU%7nJ,YK;D<'kTUs[=AQlR[`4&/u,sSm#;8VB2&i/
%8SDJ%MdP6N^-WZhgeA&G()VnAGak<!K$^.[37fPrs1kQ&90D7Or.4^.#XuNQ7cDZ21jAJDfgK$NCfg'h,Hn%nJm3*QDYCKb-!ZKc
%\3T)7[,`N@pQ0kk7iG'W*4S:DlUdo;J9CpoR0Ve.dZUL::kAc<F<<HmY&NbF<>c2P?4rs,O9`;>(1FK!o)]5&-oHSk(D_d+)DFe'
%<`.$FOqQEse/1dHCq[Vu7]S3q"*E)3#4-NW#)"*7R=CG&nH>/9IE`1o_gZlnHGBP_!/<:[O(JB[Jq49JK/l</'8Qq]0]YLB"+lqR
%a'1/&%A>Gd3X%RqOb5j:3._85'DPA%;)@c$]F!L%?pJn4EaYZ5_,)6`.6Ct$$-%T2^bIaCBgGu7([`2m(.XKueZs'toc23P.K<dl
%#SO2O&Gp19Us:@[SV/8E8uQePQa@(Y6J+O(UCqoLY*a4::A>lD^Z#,g(Q:6Ti.@iq1^hor3tk:`4p+s+:U*<j7!Lf0J;OWL1-hk\
%9G/<633Y>!+ENLY<,R@<C`HW<A:Qd/f*_5C>c?m>LI>Y0#)7+NE-1jf>[q8Wa>-GNd(k#R1ijQ=70=NOLqk:)nSt@CN?-^H3ha2_
%YU8(r-k?642WA<P@"oksbYE12FqtC&ii';h?PHTb/.\Lc^>N/`Chs\,!n9o`!.;KVPla43(u\I=aMbGZ-mIS-4)2=:!(E9kYQ0U0
%K(*d\D4Oc<bemk?V#_7YV/aqD#$ln3W/IU/Bb)K?<T[C;3*n7q\@<73q8/g2UgQ&W1_Hb7@I_,C7:9S6l*&AKH#/'fmS/L\8Y?m^
%PL(!(JsXD=E^=(Eg3LT@1(&Onih/qc4)[M"Op"NNTJ"d);XOfE+Eds2+'9tJi`0cR80EX%cc7=J?UO$aM?Ia(iZ(\@M^Mu["Wmh8
%7dd!4NsH>(+V2Bq%>91\F58eQ0g[uFiOHid2F`;_';3/b#B-Rm$e?8ZfBAF#HGn;E+up>3'&g20F88f?I,IO<&53I$dZeBQT]u?!
%!kl+`L=XPrO9pHYB[CsJORF8p-fh3a,MZqD-5[8@'>YAg%A0=BEH.08cu90uar4##,D(Fbf2;&P0\7V/A`/3_F]8@0E9B$h7,c9.
%.+<u]),_!U^jOQALRAf`=b&/d!6Df6JJXh%M@lmT0mo<1HkW[153^?3_;!rR7[]Di%ZlksG"hfT-%b1,m)i2b#M<Elcsk/%";$0P
%$LL)"6DID+OC!#`,2c'.cH4!is"7A%W[N$%/g@s&?!8l[g.NR(XTi^f9'[cN#?ON,K)#12SAQ<Z6%>h=485,1HX5"8F<2i=-/t'<
%!Yh!ega[KC%oA#:eMa_VN.bI>/TDGTO58b!fH$`C@QNQF6L(DnA(Rsq^^o6\-120elnoDl$[)Yi:KRW/OcBek]WgL]T=(/,^i0a0
%(I;>QLt[Q']7bQEN+>9Y!hb5^iaIq[P;0l=:Ui74'aVSm%Kmq7n2K-RLYpptJ`gn33roKAR>&hX7SnSo/#:'ZKQ\1k9H'QC+e5^d
%9rRs^"OdNc55ASjOOOK47"*o<6WW`;_=J[#&5De<8W>e?QXfh#C_pdR$hu'!C(lf!EQ&>l.k`!F_V,S-ULOb["psR?#S%8G\X?b-
%[c?V8+&In8Crjr=-#USEBGo)d^lZbBK'37ELRV(q`9)&bAQWsS&o\NZ$PYd5K:j/EFJ7>?,#URL?bgQ_l8gCkK4FLOk,c^mi%]4f
%:l7MUW-$2i04aK4!3eDr?guJg7NNP?*[]``iu\QaTnNT9\5qPj8.^AeeO?#(jU1s<>?j^NXor@L!0)uc&3PL-b3orM+h@0:'"J3/
%h*E?Sj-gN6p`Yh@j<[%o\q=W>o]&p?!!7;^n%]VYWk&KNZ_3+<"7N`].MA?,&$T,EG@<*)Fu3JaSqDR1X:t<$_!%jEQCH75glsiD
%DW)5L$YV\!Lk7GsZW];:f!'(%*RQOiW:f65_B;1')&`e^9YBfJ9`^>b]2VS5?SYM9'2^[iQnV=&!27/H;5-3pcL9+KL%dh<2#qj[
%cPYnlPs^KWpbdR<>)c)An0YeKH.E?+Tr;Df97_4QRi>-ge;qB_[gTkio>#8NR[LBQ?sro;+Cl;`8F1+pj@VpYc+jWa_3+3<)2K5*
%_\eI()t#CcK97:t@./X.eY)(--fREG7E"?E\K1$lWVLU%ECg*UO=oe7k-I/uaF]ks)jGKM'35N;I9+g,FJ57>5f'7DU(-MlL:EUt
%6-_!V)'$7B.o[j!KK+1e>)$jF%;j=,#Vl^0LVZ)gNf5f)K,#&.5da'$-)fh_=;tUjTaqtoDP^?>n<<njK4XPRO5E9o(GX2eQ'Lc-
%Hu6#DT[CjJJ@uH6b&XDb!6W6RhD(r7l#ZYS&`fXC%8K<5L+4oh%Ar#XeJ*U?8*R6iJf7L]CuKY*`ihc5!7tl!`]u/HHpB9>O$3#0
%82[!G?LG3&nlSm;a8d]a*`/o##*lEe9;4*Oe%G7-/dk"<16)Ug%ENJe6L71"`:SYEA)1iWfbW?K=UVp1R3uYKIE3P(Y'CYYaoNq(
%2r*Wu?+:Il>_hAQc[&Tn!-<f,.66JX=JEs$p^Nka"F@G&BBG=:A_#p`450ZrZA-WYB4(-.As^[b&TMngi[72r1TZGCK8SKbe+>at
%j6b<81B$_(E,RNQ$$-oFPLh'l\Q[;2i/FsM^+mX@nK#F+N7\#s`,JhAX%Brj7b=ef64MlbG?Ft@)ph`@Ye)Sc>aJ_#;/5#a4'f5o
%-8*>*:VhDE!dS*XZZ>AeYIahU__UpZOR!nn5XFGg&d:gA$nluP_g*rK!5X6*K;A]X[h--_qPQ%l"FMS)MV*R9(rYk^dg,T?QQ)#o
%S8f/'#4t%Gd:'-_b6o%]H02iVFt?;(WU?d["Ao-%N"PX92iPR))nZ4o,ETh@pbJGkh=ZIY9NM3<,W_u#5b<k]MfSXX*YshIP-:D7
%-dZ0D9aJOU?U\$Uh"\_?:`>VH_5isgKV%C`E98$&Jj8W3W\NdD+Z;RtL9b(jKf&makRi?,l!aXr)a53Z[h%rqP'\JP[o(ih8/"5s
%FUP.!5H=iJO%;NIS7"R"k9`_5M;#"L;.%e#XDia$925PZ\/@^Z#:bUT,cDAa^c\E.GR1$Z@)RKRZ\nnQHjG%99/Jal_j:d&]EF#j
%:!0Lj*9_]MI'WXS$j1!5*"<&I;f^4OZ#.Q#+2hQU9@@(em72%!Us)crGnRq!Hd!).P&?q]=ES[:1c8P+3YV"jh=PKl65cL4QYP1C
%!S1,W4Jhq'olZo^(`RS9!,D0TLH%F'.+&42:a(@6QRE'DFZ92DFHN,%_RtCf8QOlX<>YM0!Y9I-.sa3fpP]Z]H=0#b,:*VW/*"'_
%as,m]I[CCWGDDD<*fM7]_'H5C>!(+3*9(fGL1Ng5%46@/Ru>*9:d8cXYlU'E[RHrL!ms.*<)RaD=F*R.7s&F#/fFrgAOgeRGJ14+
%pPDb2R8E?I+Eg\le=pnt7fPXXlbk"[\k.jBma21oUAo+MUudWh/A0E`5T&3/$:VUL@Rr4Orf9&-!mdEM6?Od>\='DV4<+\@$$O**
%EH$.%8oNpoNjfnK+Rf41R6]U"%CeEL0nKd@->3dVJ_!e0Xt0F#C3+eBl,?FS]$Eh*,Su#[$lBp9%2M3&\U>Ui?+<Ehg*%X,meoml
%"CMC9$eX/f$WMLFi@_&hTN^=2@r@$86*f+FH+O!k<"j.SGRA&F\1)mDIX:OXcuG`>Gg]iW-Z:-:*G(#/;CA+o0L*2QqCY$<DdWZ,
%A\t.G#`94MbPbt/a-0&:MqC]/+dkmN`tM;p&9t:9&YOd'CQ!BDRNO)5M<C$5eH=/_c\*2(o//3e53pY_!=:h_jaZI4>D4RJ3P]_t
%[^_3a?+aYp2NQ<umR;qHZ!asBG1c55gIeZ;>MqLQ,+2a2J<=6Tc"-t.P<6&*K38TH[Uc(LKVK_fj[^C+NuL9/_^&>k@ip%"j;1XI
%cnu3pfst1a&`%FdQO[<gBS\Wu&\(3G@Y=a]4\BlF)X;t]\8Z"h#U3p;:">M9ghZMU'*^b(EaKUUh%J-YejlKh,Oe;XV4iJE.:Q>:
%-h,&Q&Z-0$3=D=,[j`fp)'&i1V%*V0`(/"gq<f\T&`&Ym.r^R5R\S%ceK(g>gb1i\E8ftN7p*eVDTp&0`j&;QC2h!mnki=6bg,1i
%BMcC[n6MUdoA,HO#Q][FCHNP3%GF/(!eugqJFq*ZE'N?*mB;OHm/UsR$DLp/A74@S5l0S#`sFk;,^D0f&I%Q*K=P6rO2LSRokj2j
%KBSY,[H3g-+5lns"]H_Eo=1cn,S0u^AXX+qd&[opd@a*U1pGl109h:o!Lsp!E=cZTgFJC/EEn:.,D[WG5:;Y@:mgZgR"<(1\N/)2
%KC,hZ9OAnNpW[1%-%6HYJKu'=R-;Q$=Yg;s%iQ2>M9!k'*&'rh.Q*^LU/rc!iGQR7o>0ME!"+,N@.`C+0K4_LA$mcX)jXKSGTM0?
%IHV:4CdQi@Y.c^G!m-<!5p<c_L?pr36W3H<L?AOi^l6G?7Q3H!WtZrblADObo.(m_gO]`C/2asU;pE4+<njh`PDpb@Le&L?..c`0
%3hA:NFuDU/TYRd$YVGkF\cGbYk&NE#XW^)jldl;FAn'T;2r)$l%+:dc._N:&jW&G7Z@<[D+Z+G2RgBm/K"FNp/7B)shPjmO#V+mj
%d#:3"\29"=]\aRlfH;D6if:E4C:XjDi/>Z!SD1)1cZOeZXOW%;&Y39Hk*[_chKb)tp^PZ9#^l2Kn,am$^lc;"O>WuJcVpaa`Y/Um
%5k0^>@*#BC(F=kGK_Q&-^Er:u/qPR[*6B>:/7t:)K^\u3*s+QgAq3=NWMhVVac!a,"C&BH+NuCCiCX=#"!0-Z..m?%k48W^g5]iP
%=%%;K.1k^Cll2V_VB2-tfA(t57<DLcCLSXN+=(BrfT'+1:]^WFAMmqL\L,0G[-r*:4J.:+U(l"s0ulKb[A'AC\WmuRTKrRulHL_P
%@#+[8/fT=GLt$m`B*"?R#&RF>%Mr0M5cfa_4.E9r`8lrs"jbP?W.jGQ1!F[t>%^&Q`Z8')b7_===ge_?I"sujK8p5*(tXA1,hSN$
%n:IQgAl\lO<U]uW$3#4[n'atE,ZlCm:"@DX8UpfjI.:rDaH"T8r&EL<.4-W(LbX#F#/r7Z:ebiO^#J;MnEi,1M'a[B$]Dhn)8h8!
%\bKPR-Q]UQThW,')e:\B\P2$l*m?,;DKER;Ufp0iP.0Jh89O,7@+u@1!7VUu%iu+U]Vc,WDJKpH:G<eAD0B-)#MgbMhcT:]>S7.%
%JN#qeJbc&0$1YfW?1&j<]XU]p58oIk\>B%X2hC`s0gJ_;%jq-Lk6;6"*UseMa:Mg(."mri[LXn/5`+]4Ce['^."^gE(FF;JeD1KM
%KCLCFM.,$ZrW.T&a-iKlcA5re4.u[2n:IOQZ!j_qmV]Tl\do<@`=q4(q!c\l_N3qa][jkL!6pPq?bB02KgL.nk[q;57d+N%"'#JF
%N'Q?0)GI7;%9#-bbcFQ+He9ZAbhHqeK$D:jAD42(9YGDk<aVDaLGPY-d_(Z2@*&]a*3h2]e,@./,,PoPJ3GFmdl.s*?s#H$N/9Go
%NoB^[G1k-iNS3e++&.EiI^EAS^'n'Gfpk`%M$-0k/W?>u76\9hV:-0`8K[5#"R1.F(Er"RcZ5M2%OUXS-p8)N4=#&^;lGccY\mtp
%n63sZHO!T+m"l'Ip[/^5lps703uB;n6G;LhqMWFW'+c7D/1F3.ZPb>F"o-:aLoc"0A9Y^58FACJ,(q!-N%NuMVXMBgYcQ"R!rjB&
%nHptRNDgj%'A0OU?<$Qt\BA&\EQWr9VQZfVU+Xh%'1r^SN:Xi'DnJ((q';LB4!gdBcSN\)TEkh=p)-7D/i^XKSV@D\DK[rSmoG1:
%9!2=$/kZIf#V\":TQ#2?ATHnpJX3'I_@^:nIlGbj(m:=4fC.aI`3brTKKHL_#X.RjbDIf+Z(p*l[O+<M^-f*K<$j$="Q)Kq?jLZE
%XGmW"-![2_jA5#p6uQA_rT(4nmRTl>K!)5[*b0DVph\;/!]d1kH#^3Y.mkHa<+DqGVkJfag*NR"O+:krqGg5mlN913n6jWhb=nS2
%.>O7ZJUe<!]$LfZ.UreJ,JHc_H#:V,1rnC9:q7j8"=8(#*aufkDoBC0BSErMcIeA-.1;p0OQPI'@.<]^!Ll&SGlD.&qfLr9NSMei
%d45&,7>MLo+4<]<8T,8@;MqB5KiX9?6"OFHOKjC'&fAcOoiZHK5"t^>B&H*(6@&86bZ)6-EfXRYF1Ie<Se:&qS!Q^Da[?sib],r5
%LRW,5r=s"k*8mb=)_!m&1j1\J"8&ba]9ra+`JCb[I=n`4fM'6*fL<H69]3s9.p(P\.9[S:0Put=l\t/)Q\VW3/\#;"m,%N,nfYG(
%Uo&5_BuI?h_$>3QKfB!a+N<]FM(uq'PTYR47uja^@a%lli.&s9#8]+M-Q,QDN2/4ak6_teo[dF;LI6/WfA*P*U7hqV,0MRNP,jH?
%m#r<p19ffqm[]1ZE9qq&i8m_fe:L4ehWZk-G8Eg!5ra!kF\Tt0S/N7J>uW@\BN<Y!EFea\872Lfk2AU.'2m#8IM&:u^5PW;e<"gm
%Ur&$Og/Yjtnq9*QC\"3I'<25!UPbpOAV8Bh>T[)#"pGPY[G/sPN^j/PY1M&'n";)C1+j$r"Vk+lk1>7]BMQ@:lbjq;`FPJ>nDS'm
%J&G%92^6>#X>62!e$I2LTULJ%L^hMiY4KMnT#IaRPrs)cckB4h?JNan[4#MSK'n=I9_[AO<=6s>71V$G\p[>0/Zq?E:l&`l%3gK5
%70i*g]eC-oH=NbdIb/`V3/YR<aFbq9T8SHY9_`*5oDN!K*l.QrXu*pr:=r#hKde?2&Nu^P*K)V+gZ!RR1Dbr24IQY@)r6J.J>X$]
%cuHkkEp(_ZdK29sg&lRVXJu?ST2_6C2K9!6>Nf13jgCKQIDC2Ii!5QpR0EYTT$Zs7fs'tY4$Z$1$apj6HC28_"N09,67-cg!WlgI
%LKQlE$WD'[,R"jdR3o/><JZGh<73U!S^?qZ5[gY-#snZ67me9X7c+20O=<,n2`AZuYL>?^\'/:<ei1PS+!qag0OQIDFNb._IA7o-
%E:@^0E=kmBdQg-FRrsa7"3bgE.5&jm(%3]&@(TIq<e@C.Ah#!"n0BsdC=&5?;/4mf=Mo9353Ie!7.Eu9_ZP=Y.@2g["@sIiGr")M
%K5S5VRm-ShDRuUs:5D(uHT;YZE4@VT7-N=DWT8tT^4A%eEG!EQ,,9u0khLt_j$)Z0@Q%^Z!r.#3JcS%@Kg2h(_Ag2u;lR'Rbs2in
%Le0@2@lu[pC>q\O77JsGQ\Z#ZLa`l?YU[L@;(c(_Ek<:;EOBl1aC?`ZP=^6h8s!mCb<\&M=JpEpN%u)-*LD8XF,GEF"Mp.=_PMUN
%VXT?We&,-tZae?:&XW%9=OnUX`"!n9$\DV!a10?$Fd9jrV5%FR#qcCG@`^K/#Pq-;jk=6"LcNH,p."?r!DdKH/<)CKk]XfLdS,B!
%FLO<jhdr1bc\.0i.#s$t])gL<n:]fCB(2@G-I*9YI)Btp1)oL2-VnI]XbhJR'RG/-(rJ$E'7`@29&,Yn]c+h^6S<Td$SF+q#(RhH
%in9!1hYbB"D]Y3X@Y!;4@("Gu?c'cLjHou#\b8A^6q?73>RFIOn)8H'>Gf5!`i2+g\g=esYm!/>W<l#DX_#QsYQ7Q1idV*<]8NK*
%D0jhP/S'\RpLGM.3UV)bTEoiLJ3.-k<\6S>cE]);35YJNh,f.+%!=`l"_B(^Xe^\UV&*QrHZ1-=hDD.dqP&ueL-hA#:7/Ye%$2<M
%*;%;pFIR8k\=n%KG'Z@3&'^[JCrWj(ME,0r:j%<)Q/N"Va+;M."XJ=HpHpL\6Ui4fgBK.Oh[_]:Q&?U@N+T(=!6@]Oe!1F;'@`/2
%BfC_9%EoLObS=)O\&3U,@3p[*MoELPmM>-G(5[#_[ku.8%lZ01rX-<\C!<q2-=\mgV5"]+-'$b<W'Lr^:bq0tkUHZ(k[n)\./:S5
%HQ9pA/pBq=@7Au]f#^=KKn`uj>4@)V/Ig<P<SX]Wdm<N#_bbk.#)&3[%S/Bs+`HsTpi\sHG&'u/hHrgD,?X&M#H<S@BE0qTK%Y\p
%DM6irWoHsX$K3eg$0S,den+],6jnVYkc48!kWh^WR"/rMR"XRMktt?S.lGM2c0>"n?=U\_:k$#NE]romdU4cGd"iGka`PF_Jl'C-
%#Lpf"a>!+B7+R!Q!u^(Ah80C6@!ScCpQN3\R)A-RmSdA/@;*pdeH:jB=99^jTMlH<Vd$7c=r)Ef/T_nJ>iO_q+c(fUM5#tV^L\f3
%XordfBPo.qV84upIAU($(ToXkh8r?@_me7NUR3eON5of]7!B[_(cnl/I,c#u.p:FHVV*PH/4`nOpED*7[<+m/aQ`Ql"Pfl4`EFr/
%!6SdK\kcnW$RcH8Thh=oI@`uWfQ@C1>RD.N@;^nqCRSCX;'P@>\rMG9YU#J=SAdoHJf=Oo^U*2C&r.9+Fr;-Pj2mB2PB_mn&3_lO
%dERPMZC:!]`!"M34c?'s?"TY22@A)Ah6Dk?>8kl*A/tc)n%R@TfoHPrmOD!Zok98A&Qk)U+]^\7%HI_J(FNaJ@$.>IS>'sq17"sk
%Fmrk=&dE>ZP\FD44uJo?Fm_!/aNW5g?WIBHbNCYeB'M2bbebPl:U.9kfP2mG2qJ15T6Q`SdHfMjVeq#rCq!R$VY.TjR<U3g-iJW>
%`gh/q;Zc=38q>]^q.ElK3#t34#85CsAeYU#'I@]"hV4#ub<EOPA_jF8l_&='$AJjB4TT"2)Ng2e@7[mR@Xp$se%E_2ED;$C%UrU2
%Qh2/*O5$<31,/D_qm1i89RF'5ZkVGY=.GSq"D@:)0AmD?Fl#XTbfQ(W"pV,]1bpr0B`a4On$O!^Q\5YnEEFDX%!1#'RP<fC4It\]
%DYHHP&TU/@9EE42;nrc?!^O[.GY3):HE+7+3%?%P$e*U9kV;qI/sF<26;f`rk6oG^#W'>25R.jEM)!.f\'\U-b;(q7#O[fF3lFSu
%H_\.[o8f8b.Y<Ynam-7>>/>e?9Be\Y[7l8=Nsf+g=+ZnA_'R,8JX`a@.j2U-BT1UN.]Wu$3qD*+T?W's.k.aBbHei5kIu1)aA'8b
%5mZjQ^_P6&FRD:J7E*t.3"[u)7*%Dt*f]F0PflE#+3"fKh_A@0EEL3&j%HE!ID]T*I(u]2Y!..Jr3=1n4VEMs1!miW6kuqOR479I
%"@:'HTE,I-k1B'Ql!"^RIiY\JS#1aG8TGp)AKk#)?'2W-s6QFEBJ%0C^L3R^<8/V=FH$dSX4teGR.taV-7a)V)Lt::!dlCJQca6u
%fT(9#5bKK?)WBiE"COr$g<rPP6G4.1cjd5'I$JQc,)Nr8:c(-tRuh6"4X(V%N6t+qRJG'G@<M'4f1Ck]AnN,2#Bm0(ZK\?Doao[=
%<SZ,qRYLB"k2AiXi5"lKZb:@bZ='1US->m)@4PONdacaZWa>haD&p$$"SVBP[8,?20et7_#7P]moJ7_Km5MNs@ZKE`mNK#0V;fWH
%#]RasQ%s35jre[FU$tfh@_$a7?in84X(F&.f4^RC(mTq;g"#Y(+^m2<1q1MJL9(>$GF0kAnrrK[a\;jf/b;/uXLa'C+Q.F,U"s11
%pP0'_esqPi^"do,n3W$ug>)XL+dpCS6nBj>)C1gZ\kKgIY2NMi*-OP^-%I=SSRLAC#lG9aF,S8J^2ZL^0>o"6%9S9sag+o)QEUh4
%9(6SngLA&MC-KtWDE#%04drBlUj#fNJkfCV3mLp=NNqLqpi8HjgGbE2K47rLKqpXS=L3.k]#JRo02=(_4"k[.THOF%!*^\F,8`$n
%@2Q38C>+KHVaF=497g(DLFf2]XOMB8m;a3M?t$(0ea.QG>Dq+;Bu+5#,qQEmC1B^T9&.,9@LQ%E@#]$V0S]5`PK8-@#?kEK*%*/^
%ppGIDOHmLtLucKML(rp)pI,;aG3MAkZd!h+\@()0KrL#E#tUf?p:RDj8et%:!UPY^>:^=NZ>DB#N&<`M#'EBP8Xj%YqeB5%&\:ur
%2:#nM1ec(^f9hWS7)&2L'5>;7/A4=^"3=SH[iT+ms"^g\HW`@"I"AP22V$$c$q_-*9Vqjn2XcMo!63jML1EWk`l9+k;gaXl>pc17
%ZBe0TTH\R/Fh.U"V!=+DJbd,5X^XYu)Y';D-\rhW&J0SV-4:E`"j/hm:iA-g+:k<<2;k7MIN0L1PXrj1G>=K1#/a#k#a4$.+s]4+
%E,rJ7$kZpDQoIaUZ-R$b,#iU"q0"Q^O!2E"W_9RDVf%;oF>Fb<,O-"[)ktN`XIa\Q?/R\S/AejS4pimGj'KA/1b,WF*..J^C<b!J
%oKBDt$)<^Z(`5Yg\c<6-=R]*3o4%J4A1"WQm)s.e@We!m5ceo\IG]`u'MZ.#$\km#17LrPAG&8dLD3C)cDN/MaU7;ejjag"`*WdU
%G%2J2Rg;l="@RDNk"/FhVdS#t"E!I:/LW\5@:Z=i087+*i?_SdM]`5!YZ9Z\Yj`Drc`*mnYRW'"nM`s20_c.*"U3&1i4sl-4/+M3
%\.%V\0H$h:8UP46-FH#k+C^>Phe&]#;nudVpr*7Zj/)!f\_o)9F04PQ1?03?#T<%C$?QG8=Cp`/j2)$4M(l^12F!*Y7QCKi/r8l[
%0V.[BC_0S%AN-N6*L<V8AaA%\T9=!KYKs'Qmtk\b-aUf\QoL*RqLP=P%o#<6NTrT`E7#K?>%Xf+C>CVO0!OG\\K>f@jA6iee\:h^
%R-NjQ2d><]8,JE'rEN,'+XerUr8')0la'Y%j'e[a(`deLB_,*%p=F"lEmu&rhBBk]oN;Q+gapT_l4"+J2F/$HbJ96Ubm$l9Weni*
%Yk6-R]]NZ]Ll`D'!L:/K%8=WqPeUYFb;raY(7'`<Qf&nk^c+!SM&OT6NX,)9&m_d`M*OPc3S@a^V]3msE'_`Rkro`tOG\rlkB-H5
%bBPbQ,FPmZBUpg9l#O,c_J4uRcnSq!4WCEsF8'*<VO^I%4Ko0B?!UmD>r7>b&\B&?i6V*qHQ+9_AP\.fbt(6;Ws+,eT5dSW\*GAm
%$c-B(b65oRD(_$I`ojFe5H>EM3>;:J$R@?UMfmKh=Ql^]r*8r8\uM;;bcHX!alb&pk[n)$SWd'jrM+p.,YZZ1*s[C!%<f;B%nCKF
%0;oi7=KX@6M$D_7c$l+<C:8cqWGr":PVM:JqRtE7`Hlg]Jhc<Ah9Os[@&sc&0S>ACO0V;g*F!r3?mY#%Ct9n+RlM&MYMC?o[SS`[
%n@Agr"neW@[\i^g+^HI2:NBln!"oW((^@Gj!B3%Oeras1!b[4lK**IJ?s%r@eYUl]5_KG>gYfa&'Y*F]_qWutD>/Df$^bnt#]djq
%>qVubH%["7V<Q+'ShBZ()simHdhd[nHE-KS/3uY7NblV3]M)!fgdVu*ZG:W#q_HWfJV66nC.Ra<h8WF]#_;IMF>$9?M#I#"d\o[K
%?-':B?fNH:*r1]PBh/t6]3+DKTg11o@1$%J[i_Dm/pAZQ&/:"URO(5k/TG\&q<IYuF8a*@iQq=WAs=LPT`u8N6>6[*D.*XU(d#3W
%dLnY0",5.%M3Fh5!XJ3N/!(.Y?-H`d*>,I*\omV+,\nFZP;&u6B[uebDQR.35]e?7'-e?3X-6g\+89k]dAjY)+'>#UpIDC\@m5l6
%OFG=%`I_1%lEH,+Q]f<VBCpcpd?*oHbM/%/dNg[7G(4?$=*rAX%L"loLYsjiF%*u1-IJjhAG%=sh+\?`U(cIbB((c/oRV^@^.NRb
%Aeo9@BYM_m^S!D3h_V4P+\bVr2IY].L_8<JAbM<<JU?'Z".;$jJt/1pW,O(>B<Rl.!4eF&?'h*/C]\6IA[5>EqKh!)T0JkNCkB]4
%TG`fi$Krg7E8>!L00TH:Xi&@*L+QUXFh@n]%p<Pj&G4F'p3TnVcdXc8]If)n`b[>G*)YjI=hN`0M-L"2Q[k][^Gq%NnHe:<Rt2N\
%N9bFZ\:(i/PoG2'i1UA6=A^b!<gRG8$np;[.Yoq^a0N)L[]dkrd1g1$rb76[0msO/$##WV;kcW5OdjPQZta];ec\C!4Bsg'n>Sb%
%pSdE\N]>6jcGM6=h-LAGg.YZ[2=Q+HM7KAbX-cq`fG),Ab.A6rDW=.i8U.W+hY(en1^MqFDR,o0FuSZ!SuH!SqJt=6&Y;6u?3J5-
%D;,>;W2FFi_g89@p5bfZD2SKi=A[&j9QQZ69jeI3'V>FAH_ss=g2H(MZJuQE#4'8?X_K/>hT-/lhP/bV[k#%$_NTLl1XBut#[mQ5
%Lp$UB0=P>hKhf6dfc%"!TcUB8B":.k!^G]K42VF`C!T6j!ZPT1XLPUr&k/;W*q[rDn#(48_WiVJG:s"+_cL\)O_gN.cs=u'kp+L0
%lfDDG0aDt8!Z1LZe<b;=Y'7/!Kbq)`4Rc\t[:[#h&t+?..[l?>36NWf2^C(Jd>Dpa]!Z-'1Xk:<l\#AXgMPQ/gY<3TIb?g#"b+?l
%R?@rpF+$['nF$c!";+lbB-oZMafGq1&Yc,W)bZ7cd==7;(!s#!2,Hh%1Pl\+K#Dt;/UW,2@&lbd:8/?UMfTtGfYkCS/!9PEEJkM(
%F!t<#83uor*$'-?Zc_uBBSG]bdqP)QX(jQ)1\GO6OjueNo19W?p7%"6#h/O)N%nefWETBe0['`j7.L?R:9so-98BQ%Bj7i\IfMed
%GfFPb:7t)>Bi?clD4+#!TA(7rrn^XQO?oUiRO5c'?LL/PCiI0F4bIN,M\D5t?kr8UGXrX$T^V$Qk0M5.U#)qF@=iHl@;_p9'%a^8
%ElijtRT4XD;@UaVU^(S<d[Nn;QF^X65TB+t5_[F_R3-G%EH'Vp!,5SQ-()pfGi>\M5,e6+ph18A":=\-7>dL$L7&EOfTq(uU,L3$
%fSJ4e4rT_l/<NfQ=C+qe:Xdh9%0+5S/AU/GW7q!n`JKMN.BOh_]9\\ndA+5Aj1Z`Ma6XbP[Rh1VmKC#P@r>U>Ub7ma9hnM7f_KY%
%/;>V,!Tmj03W$S`EYmIu\Rc.i@cY/U&4d5d]t;UGBcIGVnhO2hgVBSV`U'MK)iW;W"UMag3@Q#I.=O6*&_uZ5@[iBh>lmr^PG-a&
%Nc:=f/-+B=E<c0]d>aD.#BMBffkuF3"lbaE3p`=p*c/t4Ok09R$f0$2"/!hj2cW\bL7tSd)28K[T'4Et+V&qVV^Uc'fon8Fm%R\Z
%oGZEU7Ap]8#@(G]mFBE*i`j'Aa7l^u+OKt,2r#)83=-5!$>lKlj;b8=]Zh=^XA(f$Z9sj!_&6@l^j&m1iYo(F>#]LoKEeW+`.ht0
%=;79ASMcoQ#O\Ku/$n6DJjmf#?Cd/sB,2Z>i`#k>e'iON"c:bS_cO4(4duBPbbfoDkgM.PBIZ?Z1m7$h(IZtH3T]Ka,fI;HPgMi7
%nhs]_KFq<iJ.sB^]i+@MCju^CSN7(,`]kP<-g^F)*I#,hB\;81*WuTa[(a%68e&_-/kn,lAeXLV&TTd7DndeLB9,Xg./MHLhe=rZ
%8^+.o*mY<<4B8dW!*QHLMi=$eWC+T-S"RWh3e'O`$C3VK,sA4Hh!64pg3M.@IJXP&met<^;_&"?Q8,R!>1SE@lGJ?ff2KPVPP]4#
%AUWoZ\scd9YSTDIg)G!eG-2A1"0+N=fn>Dr-_&BbJqHpX=B00o@=?T*6?U5@q0f^D&A+!7N<d[6Je(a]Y\Je<fCS?Y=j57$#GMLL
%84,nRku$$=+D,mG"p/BI4grn:<NVVB"@oNQan`9Td<ouYqF7@dXNYk--pVkn)?jF+DNH/*LgJO4XUHGQ>DmX\Y>Gm$Xbl^W)a]Il
%gZ(q6.s=ht0F[`7/^AT(K%Q67_g;U/FP6B*r(/*0S(@)/@eEHJV*@s<.!S+Tr=N=R7Zn9`9%47<@CVX1LfRFc`o^3bZ#!0f3LH/u
%no8g&FsFNAJoqMP0,rEbMBcBbZ3M[2hj2XW8m?$n:N-DQiHch#%H;0hALgWTac;[P],';Ln[`Q2)bhK@_-Zne(O@QBMOUds/1fg2
%j)f:U=ScI[5-rf+pff;)SlO#IT#Lg(.6VC]#&X(HZcDPA<HJb+0FIHrN9Q)@qj6D@a[08330kjAVQko$$M2V`oAgApiG9,_1)B4;
%O1cWPaSM.4RBI&hi@27jYs9N^q./rKB?H;%-;8S'\4pS[*J,83HHJQ]'o.^(k8;h`ZBZ6f#p'SoV.%)6WshX;?u\Q:Ehk';!YlX(
%AIL5#-:D'iSMlhgN"HV-Nr(70b!O0hj$NA"oo[JlDOA7f*d;"eXVOXb5hK8uPH)=9bihSnNPbqK5HSUIC(*n]$MbYt\h^N/M-rp.
%7%';JA%6AW=^:q-H$L6*W+"beo*#9-&2mhi6lU]inT@sjOL9N6Rb1lm#bQ@KC6iAJIY,1]:U<<<ZceT"h$<&_6mq2AGIK%QVD+5Z
%NaTt*ZQ-KD(iH\*DHePL/9;89]:l1+&>MFoZbntS<`YXBl.2Vp34:]!i7Tg,V%EPd5>*(Gdh/$%E:4O('C2k=MbSg<hH%R!pZE;r
%5UgdhB*NUJ$6'sQ*$b9,G#AF1>Bt'9-^<cOpq9CBZ'A!>?,`+-?p%Wl2"0WD@(Bp%nAl/G"ibSSj=uni[$B<2%H&27RocQ0K[80N
%!Pm??3G.HcZ2ctV[c:]j_1G)JfPTP\F5+U^0hgWcA^"u>BJ&0f#fA*aB$J$^e%3h^13&H)74c;F"j>\8)>7K)$XAJ!Ej157KId1a
%CMNo(>S?@#osF5Rf^si!R"T&F)%04/j'jWI#UVq?//(:'SR[,A*Y'"+-(d#F'k>Lkel>B`S6<PYrpi>Q=AHI%V:'E:Z`2,d-T/DC
%#jEm9RMhOrU=!eKakRmh_D%^u"@Cn0"EqBCTZV:D^^\`u(J$IRO(ck7[r"X>D0Gf\8(k8UN/Y]pTL7IX[GI,d.&7f=LgYfM!i9-T
%!i!41QYFs.5-F8_1.LE4+3>d1cQIJT)4>6?+8Wauj5`Q1>3#j)f4S#2S*7$<_c)F[>ccs+=i\+VkpFCNPZ9OG";J4M<eU5K%!TO6
%:Ks7Aj;!-rl8I8G9Xho%LMbee@"kne+B=_FF/d`-S#+cHH022!'8p8g%j9MBQs1fL>^/Uda9u>%\lD9-r`rgh"Q@TK[mqVcL)?%:
%YFVVUU+s\0s33];U=HPY/@lF??M5Ma.ZS7jm&(SZNn:<@[*8A^9Z+)!%''?7Bdd;#c^89Nr*_Zt[u]Jb9]p+B]6P:fVR><'GhUmt
%)s>(F?+RDLG&\/t*jD7n.I^bL#j%f5Y`D=q;QJ!'I-I_ukhR0`0I,7'6ML:R'j^P#E.e#4kSXua.cu+#=$HDcS(7R%cu&Xhq**5k
%&V_SI/*3EB"!MdXFj$%DMM4cTDo5;PAe#\nqT69$QcCV0?l:#Cjta^-e9$.Rp5rOX";b2#[djjbJQ:IaK'6r9F7mT&<_1/9-BldV
%[=_+V/^^>ueZ",oJCEqVgH@Na!dd>Ar1bi9m(-]9m:Ccra<diD+rWV:@R@=Q5X!g_!dhuFm$M]qekc>l,dasR(`.?9?.Y:a<n2;*
%&.<i?G8gfOBfg3(+SaldHj?#H[_]K:[aUV%FJ-54im2(*4/97jOT>'#)!<fRq&jbqCP\,9m_tVtg@UD=BciQt(Am-JM!/^1<UcN]
%ILr81]OTX+a:5.YVZ[]f<T0h^7DX/f0:@a3/XVB41Nrn-Pb?][kHaHrI2.eu5Y0jHW!e2/@=\DrS!@`VWiD-mLEO-#S!KV,Ci*hd
%W.gXaY')b[dB^O-@3<!,iRlA]@:$ek/B+uQ*HVtoF&[s71,UK=2nTS&+[]H81oRumqT*VbEI3"'m(D[>#osDmP=9:sCHH3FI-f[6
%h(JTkAVn@>Xj;]oY)m#N.;6''5Bco:hB!@benokAnC.QM$*OI?'<[a=,f>b$Y>Doo9QqN6$L(45!8T6IC,]O6O*:-`/-$fui17hl
%aY_os2c"8HR,u*+KpA(nI\]EMK?YEDDK22_&k,((&h?<=Z<k?WSnZmOICUJmDJV0C//\IpaqIECk/L=b!7VkIb>0Ke!6$!U:W`Ms
%U3fSX18MBc"OO&s+4md:lNNETLq6]0H6P[O?k?daUP@mp1Y0dR7.?Ji5$J>TS\^MgLeTp6p.3E3'`%9>T1fBq3E7@*fo**u>nnt&
%+fIp&N21I]ZSQf,H3sfBe9J##>uu6jos0R7?*Q9]@<6C3!".aoOj2@9jm&up\0OGkF%mX<)qi*E@(?r>aKm*2OqaSC;#ck#g<k\a
%S:jj#U(JU;g00.7M*6g*-.iE2>Fpb)E\S3"l%D#QD,.PX]QUMpVq\qglp96.*[]7(&-Ikt8NmaZl?!R,f_0:P[M"2O9j9M,;`o&;
%TF_$M=SWDm5__>pQGH]iLkAjn@es\Z8\uKSX0)[G0"<58,r@0gOl/uO#E(mD*1kHkLt^6(:A_]9VK'=loO)/[ilFMo03>TZ-bJ<a
%_(J=.j^hT,NP3Q/6"sMgX:D_!+WT;"WYVUXbX!1\Au+TJmDU0Ee[tOu*;53rVu8bgG(4CJZ]X)DICKR3B:aH(@B!NRMLdM:kJ9"p
%qqF5N%jA<N<ljQ;kMNF-VOYM):[nF"$:NCu@lGBXjR*)f"CF[-gK6i8K/0k1_E$@iJWo"%&]/M6@W6##$bl@Wj1?lZ[='g3eAWiS
%(E2QmTp,dNKK&X@D(KsYN"D]+^3(Jbir4b'ITH;Mo"T;o;\X*7dU@;?P#IQWXOq.ZE!n]Gd/q(6>[9ejbLX(h64"^e8,I"N*/#8M
%a^Vs$XgJ6c:&r&1'X==iI'W..*T2k#-Z)kYHA?=VK[%A'.XKuur52teFX*Yb4Z;N0XS41'!4UdB.FkfQV[bGYITcGcN.+sFH>b@S
%ITN0]Pf&5Z%2-CT]q\9%4dg\=V`Z;`d#V)AlAHUEkYSn@bN.!Rc2P,LQ,mtSbCk_f0$%+JUPo'tFP>nAg],#q!\BcHA6@FU7jANu
%DY15WCG_D[ANJlu\[1=.N&bk5H4;F<NqCJs>mG0"$F/AKSMEq![FmICTMIQjSD,emBRE$RF8+Kkfj'jdOjt2j*$B\pTY'0kB&e#Y
%n9T*cI!ZDLNY/?phH6Y7$8"M29bHY0LrY//D1AU!44Ke)jR2AIZ`&cZ+@T/G15R]MAgb=1"ls)r*U-fN(Al6;ZE6=sZ?BlBL(_Cs
%n`J\=HjfOdrup4%XTUI.d.A#nH6hC(b@H<_>$O$D3QP\O:/@,,L[>pDPgXC(;4\m:_1XIDj-YioY^I9p7ub#DofsN+"LtkuOj-4$
%)pRLcd5H"X%`$$69j!0>LsVEVkHdDKo&LSXP\uCmG[[tKS[eB@H9U@!b5g4edt=<8Vhp<)Eg)t]>Q1$uFWK%!R"(!rlG]oQ%ERt@
%BkmlN^6S>ncmRR*[Ve$,VU(!8%#h6Bcj+0885<\E'f+5)?`=I%n^4d8_/b_i*t$_Ag5AY)YR`6\lpPWo-)L]X);.ea8?D/uf*"dT
%-)UY:Q<h%>HiW?=2d[r^=A3D_dRt.iYb^.^E.jdi+<]3Gf#c%(1BJsqcS%7O8\8`?_+![%^/Q?P\ss8ggLMAc0BULk',Imc/i2-S
%c]aD<V6aIDb`"R`(If-S4`.#+iO.&h#k+0*fTqbL@MVc-V-<'74-lcJ_<p2oO91[7<@h:l$Fp\>p&Z;nK;4%,"JBAYA"1k>ZecYV
%fRcU$O%oAVK"JW/"RQW8liGk>:"M7dGn8T:=LOL`Ah_k6)!Xt7'qY*DC23;nJ(\kSC;Z@h$)b4keN.NMjg(EDJreo/L4p5Udg#Hm
%%CC^DOdRM[6^$tIT[[Oe73ID6GaaApYkIpt0_0Njf!^!`5s/i[do"VDC%dS+=GY\W^?MZ+F`ul233YQUbH*6*9/+tJHTu?u4MB$>
%hfr;+MZ3.a.nD-&&U#mGTOBThnI-un^h',YC])R/LKuOV;7<!0SBjCuKIO[O8IlVg!Q$3M5).9NT27Z%/2%C;.lu9f=1ICV"#2p.
%&!-s_0OeuK&@Y?Ilfi,Sa&#"brX69(UI?9HFK0)a!>ajAYQ]1*gfG;rWbCPrKW"!g@DG6)Z#%#A<'?m5h=&\=;F>f#T:T9J@:Dam
%c^@a\EnuVNlK-+s7W\9731_3Ir%a?!G"o7+N@cS/)YJsn?Lq#M%+SmV@eEt`?`jr\ROM/<WV2iCL0k\UW(Aqf?k3C]mL<@1G?h%/
%@2P0V&kMm0*qBKKJAk\f`G=+Xe^hCN$BW_#(;'&XS$?O+dd8f@PS<Dc.5ojr]@,3#bXGGrDiZ:#-W=)`AHd00;rdLp"Q]0%HFO#D
%BctH(/;PT?&:o[b=;]#56'.N:a0WVMq@^0enrS^_pA=7AbgZr/Ar_E\[_,d>Yo<UG;RY&X?-uTX';$M94qGnYI.,$I&>F))eP/,1
%&q,\MV$l;I)3ad:L4s+9juW'&h0RCb?DD/gJ69,EaOh;"nDtO@%,n0n8Zk(VB_k]sQJgJOJ%KW$@#o?ZCgX8SlMn]U0Pf??N<o5O
%(#cZi&YnG3GD!FnjTQY^YK\,R$qPblIAC[+3e3:WL1D3o[;\BV"`@C^V&Eu7+h2$!P:)SO+ph-[/_)a<CNs/cEijT?k04BE(@ulV
%-OAtQ%i?KFcVT<JYpf]!2VG:?H[I&;d<K)P+Oef[Fk?nTkSKg(YF^`IKPetl\[[A#OJ,H`i&O'ZEdFnEP?26FJ>mj<!(^5'j]n.K
%&i%0R?Dr@#jLR\]N<Pbfl0H.t6o@bno*iZK'oj<3!$(;jA.S4X9^Oiad(GN^J@UFRT1SXu3'/5P\qc46B*HI3W/WZ!mc<B/m5j&C
%K<R2%akTpUUG=JuUbgIT6IC_7$8Q36`$/QFbd1669VQ\RD4Ht'+ElrE+A5=fO&+Yfmn6^>J#Cu.Y"pb9k[)Rc1N+n[gep;)LGqIZ
%:.qYDOLoG@Mos?+q[ON#UNXP/3:^T#Xc>DblVsM,atTEN.KI9-L1&4[#RjMBDen>pmY;p4>,\$q_65sj#fjkBg`<lAH>Br+n=VjY
%JSdE3,#6sPmAi^#RI`Bk]G^nAfIttgg4n4C;bao<kd&`%;FOK!p8_osR!CQI*tm(_\q#eiqX,`alu!7+pu"L\9(c`*K;KDF)V1*"
%K:'nm>L"MOF05!#BWhlWN&LH7eaDiXOB^LUF^I&"&oKg(`j63aUZ:#?m`W0&e3W3\RBgUoP!,cI7m_]Nk%GsY[&<Z:;g5J4n![&a
%l"O8c8U`RDo(Wn)I^'SaZJW-(fA<[FA@qE(FpkUsPa=!c49Qq"7Y*/qOG-$&m'G<h(G+@T?I.c=m?N3/T&ue]!'C\M*N?Zd*MIVk
%lYYq][.C&4O1C%Xg2+Qg/D],H(%o"MT9d+#"k4D0oFk:Y.4DTZV(:iPj;%jcmfC%RHs=V]XBGM/Y0Y/6\-DL(K6u%TL3=ZT<ph#/
%`k8p^EI".EeM=tloDl/)*8GI-[Xs,\1>!WW":'GQ,Zr.ul,Ddlbu<nDZbe,^<nn0FgYq[=e^MjEBBrmMP*h",6+8LC%^[NeJ1mFi
%FHh#STn`iemFcU7^BSleiGAF\CqtB[.FiFmUBi3.lk=,tdH@T.Hcb)>.3>^@\n6pQZE'L`"_Mq&nqfjk522(d%#j"Y=IUrKcYodZ
%T3A@UGnpIeCT4^P&W2VLcH,oq9fQ[V*3!'+?$RDl?[^XQ>ZYtG(FJKOGfdN,#$T%5M249]<OS4hp(IK0DKmEunOPc<4^AC=!#r:$
%!RNENB@Y9!YI'@G@9P*nLCtQJ/n3=q4j%>?/K/FfAJ1?!qPVM9!#F#)bXR'H0l=b@f_,YD/j8)@Re#AT!&H^]_2/EN`FB-L[)3rn
%mRms!2Xn@mp_u\fm4V*P-]BEoPJ_\UO!/iWQ%l9uAd$aUe1NSj\`ZN:-,9]b,F\flMJ$b81C^2<L[2L4^=-s+cHO1!LFoqC^hAqs
%.EmTOo*o<>kS!X_&1jX6AOB^u%'7AVGRqZu&e\LWB&0>E\ppAW>]=qokaob+,5<uhbmsRJS>R>$_8G'<m;kJ/klso!3Pi%]CqX7:
%=Rtk4!$2C(R9laIm/8+t&O%%5fR!#4Njt=qFuj%B)nL6eQKs&3J?t0mfV9q'eIu^!)^'JcB'Q'o9Oa`![VW+TRQ[lM29At20:f0,
%<(.1]m6Pf]CJmj#*f:8Wa#2[g1`luJ7BI1f@>c3'KsQd$re%gXXY"/;F=22?,/\<&#\)-B.NY:rgl9A&E),I'!=K5=^%VXk82Y"l
%Pp,[OO./@WH_O#!'Kt-`as_,L]"Vm,^=s.F,9gNSgR;')UV^<=H.p?Bj*Eb_(R-97?S!M3`OFSj)#_o&a'C$'drLW1'E-#`2>AE5
%D-'Y0'X8OpD?S3tGdPuWVWU``0B3(91<^f_L;:nUHTY]]:<;GOD'=WAfbUVp`SnAo!/*[&T<g>^kK>TK<f7q.)h":'!O,EPY"u6"
%];0Z>"n<YLbDE\_2f=Ct[^2fYR!c:RPRDESN'6%I7,QsS&uJ@V#X3S&'suKaSkm:I5M2c_U!+n\9G>I;K(RRF!Wr&!B7pX$G1>WW
%-iec(*r,@r['X6pUKn9GXLrConSF7cJt`S0m5aOpj?<%m'r9n0-0_*S(8#"u_>JI4/8\@7lk^4J5,\Y8(i=bgg"]8PB:'jd"6.p/
%U'5r91t=L5dDIGOZhiI4*;m9(:\'-B._mVKZS)Q\1n%s"H2a]\]_PlZHbr&@aRecG]XQX.B#`U'QXPZ?%+>e=Ohh0M:Vj`NLJ;1V
%cS6+mNt)BO[QWGCs$Ob?.s5p"DHYGs.CY'75MKYn_;(qG\FpQ"?CG8Y\j>;hCk-stLIVqdS_U.2c$*q]j>WLI'Ba8>,[Kp"WZArd
%D<,,hOn."#fj'En8,.CX$3#p)ZMgk[LOc8q_Pus3'-TME^m]f;=bjGJW0'X<BmdSanG&upfSeOnRFZt"2u/P7g&<]g-NmOXR%kPU
%kCt+gm-`-l>^;:M`VP1ZNh/o(]!&[&<fPfpEol'DE"KFgd+$)d48IY(*>!8E;6kH;g+6!+[S`9+.oJ_p>0rr3KI+h,GOqcgBDpI]
%M.[=?K;VM+DghI(\4>)OYW8>A":PG`r$\Ce=BtIq_X.qU#>TikS(IJc$WkZE$c'm[**P\]G)+Y[6H77ABn62k@dLCdb&h"3'!\]D
%We?HY"r3D)RD\'eQc6YZ?)rD=Z;1g4$>O&PSX!GF$'^ILSDcK\2L97m7;@Tno]^(8R%NuD'EkqZ8'KW3B`%d;R-j4jYNnLdFL]i-
%=4MeJ)WtPj/U-"/3H<T`Q,U;&_b'rSHVb/I]7"qp1\+7#Ga>71]Vdo-Cn>A1S-%;\cW`-MM".b\4<p`>]/e[`Zea=QP,2ZI`9l7;
%0)0)6DqHuY1,<1u&).VR[reUlk2ggp5]keI$f6F^/gd7D#V>#)[1Y4]6sCM#@U1@]o+(#njWHHrZ9U;I5?P`+HecNKaI#c8K+Q)N
%jserRc.@OofI4g[A!bnYIntZnPq;tH7)QIprC0&@1$E>gQJs%s0\"j0Nam5ofu,Ta7,A.]e7\oPM^-\/JD4RK"GC;4%(lpcFHaK6
%Qi/N&69k6p]Cg-0BYSo+<C4@Co4]r3JJ?fpb[3R(T_:4lN7P6G+]$q@j&J5)dUU6lO3-u)GaVA%i$=L6E%K<_f1[:>i:6=3T.:Y"
%'CP8Pem]uJGYVuBUh*#T#hV7c2dJ&?`+3A]GUQgB"X6<djeph(7ddnZ[UqX?c^)G`bQ1TY4fN.4gAB;C6uUEAKg<:5NS"tTe/EYT
%j_OY$MVa&<CY4pRC77;+1qKu/"bGD8ke8Yng7r)e,Rb[HWMh"dSn0naoa/h8>eHGn7AQ+6@7,'QZBB!rT!HQk<_k]ciHckL)3'R&
%;jMU(_/A;hKcmUI7D";>1OD(f?^$#_L:cP@eXdm9A9hE`lWE[7Zg4iG:Op+F-[j.7j[T\F\YgI^TSdc3A1(`*o.l]^H9D.fO>4u=
%\G(DaRAeXKh4gjE'.,5>ZC):TgGcr)C?%^C8?Sj@kEs,#Q&?*WY)0B8*<ZSRiq-NClum"YSmN;>Z5cgh$sM`Z_PD6sR=o0To!8h;
%]5(AkRMT)-CbP5OUo220dP<T27c\2L!Fb3nUY0fu`U[LqQMV\TTe<grXQ=\`a(B&F!Rom-:IF<YSn%+$"h^.Gl-Wg*D3G+i+Hg;*
%2Q+9*Lk'TV;s^3I(SYgAE*s@h^RZDmA]Bg2TN8N1E=Wb9APpMQ$fq(HGSn;NH_"9E?+BXB;$Kj#ikC[>Ah4VTln@Cni,Z".gU&Hf
%?$DX@4=b/ln;eTg[\_j:UZ8enpo?VP/+M:hoHuP)maqECC\lM[:K)IK`,`D74\%5R6;FbL%.H'0]37">H\,2#S$YL#,j9ET@fU7)
%X`Skaau/)CG#O;LF,_/VAP1#sd>_%qH(T8/C(\>MTr!k$SXW_P/G!QP?l'(&QRD)L6hBprVQUGEHD1k"N7^>A"RVPd/'ngU/&RpY
%-\s')Ps'E9(.ac@T[,ZP#>phVgq\K9^X177OS,aDHGND8;.bh02F'#[%U\^a>4f.u'g+%frn!`"D6nKAik$mA:.BUd5aNi;2fQPZ
%ml&hg+T(OlILT`VS2oan)U(H`T?EEn@A^$[cJ=s80\cVL(K<%RI^nFH/?K7ahkK:R>IsCt)3eSu%r2\O1D!@Gg[6!7#fr`VI+FWr
%ML7bSL:]l\'$Jtg'p6sWO>jWS)DSn%Dk!!5<':)uD_X*<8LT6pim.3^dqN'(&F/*762T<:UHa/0UZXPW&@PjL+B8$e`\R8un5<F+
%%p_W8^j/]ddF*bdo5n0hE^.M2388hl^30$5Q/A:F%GR@"R@+q-66d%(e$:GVc1[Aoj'IhegV*YL0Fb#V0LQ6A8>!k2].RC:HE#NP
%>g]u;'TZiN^XLXBi+f`*pCAN[G8^K0:RJkIcJ/$mgX84qXru6KIHWFH3'P$0Nqt$)TJs-lp!@o9/:m8QLO,oPjf-f6=Vp]:ZO#F2
%_r0lVkIDJJVSr9jhp#JR[T;"J4_Ujfnu@RhX;et5?gGfKCZ_4WCg5nYm,fsJ4P_Is%udunTgV[d%O1qcbt*NM?*Da#7*h"J;9,eN
%lt0?SbQ&b`8_V\D)buH3nmlGelj>ABGQaL_:.(W'T$SB`AK*&,D*%'ui'cB$O6Lqe3]&WlT6@WnqLG*R;c:ce'GHAjU#FNs;C2J/
%E#u7C8X9D4-a$P\[:Z]T<V!6OrZ'rE2)&8j!f+gM^t7<r[Igd!$h=75nKRt+IQd).K_%2or.qQ@ahefbA,WQt30QG6*9jHqKHjs-
%=oCf#@Z23H.@PO7=P_MN5L-]"#ep*Kk"]D[;m&W+^WaoZp+Wi7^FaVhr$;-9%Un$K&6Uo@pOl'_V0ORlq@1nXeQ(oqAWE-n:WoX]
%I;K]3!K[S$'p$CsD6lI/4L5JDnP5K>4S>Ke2-KX/MJUmdD$nErQA&VrY#jGgZu?-'k@Lf,#?D5\qXA1AI@1EQ<dH<-gLdBf.u*FG
%F3X9-+Rq3UAb#m3^H`JJpF4l$#8E"9(Bg\+WZ1:B$T^#,nWJJ=:Cb\nQJLC8)A#WnBZDi'O$;ral=$*<NWSMIH`K:Mg@CJenRMf*
%^1Wg)aYc1>`^QV4YH)Ep^0+nGcK=uDD/Tk&U?31dDSKOr$:;CB4bgno83E-54=1X-OIMXOQ6%c'O.d"]kH]B&:Nh5T(0A%rFkIG#
%X$-8PDF\(Lk1?(,*G%BW=()Z'`PACT@.RPU]AQ:>Ta$U7DE.Ht1N:BiblXum$H')t3LDK9edA-f)ah..@9'IOO;STP^/uaY5Wb_K
%!NtQsCh7jQ(,&\D4<#mjXChnY]ar#'43<Kp*k4@M#O`:W4bM&'72>QdU.`[*:t+Om9`deOI<OAsPbE4)M88%Y\VFO:euMBt-J$c2
%,[ZUWX*.9f&eW?"6t(2$0l;O'M<s1]qI@-@9uLdi8l`;3#dJLCmQc?'!_.^nh?PZm&F`XuLj$'+(VU*!1#_gd1cW(QlSH&d&bg@V
%H\Qd@G!BV[_&H]GZ)n!iB@hIB<f*3)lYJ:>=_.4PRdnKc2fJWPjZR(g\mW,OfS\(hM=mBS91XHURkc]u:B_g+^59:D82#%Q\1iAT
%9XdpL%JGd"p40QoI<2I-VT.FM,l9SR$-.4%c8KsWjn"9)<jk&G<jUMtlEV2Mp##!X:B#aqHe0?2ZK00sZNB@j+heN?"]Uucr?)@H
%R8oZl/4#<#*(!a:KRl@c$d>bgemlc*1&nl2c`TcKG%L?FCUs9aXZFSGW6"IIpZqRB*OBO)%ciZB#4Em;bFXAPQpR.N+q%^bYf.Kq
%2g/Z27uN=\)G9)FUu4I7d\dXW0L0Ua"E<p-%]s!7%24GF1`nc%+BAr<!c2%.2+sCXNr!iUM"Jn?D3=(8SB<4[l,d,BKT@'@Ko6KQ
%KNtDD8=LDX3"td\ArVg^bngg))`bGq[0&Y3+p:?)c,I1d][sXB39+c5=0uO*OX.]\!2DfCiQ#$P/cX[iOUp$BXa#4S7G(l;BZbp#
%AWteEI'k+j+LDApJq@<gYWRnTQRc'Fn6Ju4UEY]E(+"DTff%lt9BZ\H[XkWDVdUgZ(X/h1ToKRbl;Qb386bG&_3@E)$X7P@.P&Fd
%BAKdg1!J?<K`nSN-X#[:/o6P5aj7?udi+"r*p,D4Vmq$Ch]$*t%J)FXP`T8qW`$3s8.GAdfbq?"HpSQsVI.Qb*YOnM!IZQ(Cc"]4
%4Zhk.]e&57T+(Y`pc*AC"b6bC(MMq8JX"(,Y%8=>5arFGdb&a+d61>\02.Ep+';Z`:\UsVJXF-Gs5]k_K$e^,5CB;<6H3X._,Ng4
%JsU60;'4<D6E*Kl"5JEKf].f(piC/:!DdI0;u,j)<&:LR2_%#MT*BkJ#&lcNfT$tY8m7!-D/qAJ4Na@[!Mn2?Tm&"WY3;G)2s:TO
%`BhkA<Zf6oO[dneP6kCdNac4hKl\DB@qS6oFJi`3&g$c):pptCecVgk/&V?i'?WqC$5sh-.*P.*4/.R?di?^nFhLRB-(-<?V1f^C
%-;_*b(0fN_7`7f7RN?pgQV,[2NXIc`7,3k+eKif.-oT-s.NBt[+L;HU0.6ePaBL(d-FY,9l=_qK_S2"8p>dA3L>YAfQ]0<c_aX*+
%2C=f6.udd(Hu2Nf'&R8;i.=qPAO3aZ,ak6.W_:S5;FjsaD:Kl]U<=-doLOCn9Jt4DAEuZDgK/r@3;=WA;%QLF$MDRZGGK$g6=?8P
%864q)WVE0]cI7elV+@Nk6,3oee^X!m.\01_:B^5Z-O_:,#jjQ-A=h^^1LA\2Manh6)kFQ?o9#ah[cTIn'X@AungQi'O>,t\@A>c6
%L2`U9KZsc,3rH*N1f"rWc,G:78ji-*4[L1U@CKLhGS'4a"Y#al:80,4K;P`SJJJX>Wl%;+&1s_kLRoF[Zpn4Ci<9d>!'!mk!*MjD
%F?e-oOB)O=@<\E^h#YaDo[gH@$`uq[NdYdGFS\'Gh($!q!Khn'Cb1WS)beYbIlkft10,o2rL3"^c?rK>,QPL_.)f8fX;V/>(ql$i
%PX2<M9*6bZ"nE!\ATT@qQ;N/U$F]/S=L@CGZ]uk0)&c+k&2To:b``B-O6.-RQqT^/PA@90`;i[o"P)V@m%>e@oUokj:_4,!n6CU0
%22llG;5B(9lGd.^od/<jQcF<4l_Xqc_+f!q.6J?:Q1'KMD1dd^K$Ff?B+H(u[Wmh'kfkqLOdC\Z$jJUY'@!e%i![Z#L4.r&#uFk.
%SUFZ%C'qh%OQatn9U'4+9On=R7$j78kLdXZ#_%^!>ujC"!fFj,/)j>T\Iul6&0)'V0(b5R5,Q(aVJd\^WN]Hdl`>UY\[_G\J3):Z
%]J"q9!o%XF$C&)b.$RMm-(!"(%aPJ\BnFn^:0a1@,35M"9Ft`PfNVhFZ8E)n<Ye-kNUe\*[[=`XY='ZU0Lq`BoIhYBh#hun1+52?
%`PM.T[T0Y(iJG?7$CGLd-pl(5`#l)+BPA?4N^,02^lCRXMuY()8U3dU-JT!9Hebp%`PA6Z!ZA8?D:=+sF]KQk9FL3*6ob$NXLac>
%9!QVjL.fI1^t/q,$S8ImB/hKp0Tkok)FW1i!K*0OeYQ%7'c/I>R+Q`BfH3R09Cl62!Sk3lHg$sYX=tE]2sS&s-LZ$u.1f`2jOp"W
%\dDr9P2$-9;SgJtb[iW&ffkk`n"Kqb[K1oSLBglc7*Iq_.]d#Ki\V`iP`9(V=+F=\3Q[Jh)^835&.d6XgGP9_IR9n;q<*`9Hb+b7
%ma6_AA5JG'Re&cnVBgLeKM,Alp/XV"NN0:@_Ld[E1K)[F;ieT9^h:VtZD@%RpekWj?&c4!b7IM7:afVoPl@)88O8Omb2d5f&VeK-
%/eI6f@jM/96GG_o^!q*SMY9u8qd4;P`\^-YM*Nh$1)k4NL4belpbeV`06)=N@;q:=,pNQ=5X8CO`d?6VK;Ar[0eE`j&OQU/,br-e
%;H/%.JL9uOGPHk4S"jPK\:gjbq"(l")?IOsiYl"&kf8!aq'JnP]kNlA/lQ#V_6eO4MJ+G&S3:(@MLRMM1AURt#nI@kcWE:j\O_ng
%Rm<D`PLd1['+&P$1+eHu=9XbXV@*@+m&jC^>YgU8,GPKdDh\3sXr;>B`<s]Y^DhK=i"=*WTbqDQ;1<"IP=Ioi65=f$jdm1<HID,"
%F#:&GZIhecNX`<!73C-eFjtUB\?J'!dF8Kml!es&]$q$J^J[rX.-![PY`Hk?:aoJ*)b:OJD!SAV<hb"D9;rM0&5uWN1)8V]Zts9?
%7C9i5fN-5V:+M-p4tESZ/>VW%lh<e[dR:65[h,Jn?S\ofNcH=hI<bNfap'^h4[F8ZbA%*h7QiIVA:\0kauN4\TiaUt?&Mj!7`/K0
%'SX%g9/G"r0AAgeLF.n^-9*?]5Zsh!#dGO(IbmfC%8))cE77ui6uH1-P\4(O*@SXt?RHN`_l9<m44"8=c-X@BAp['Bi#C5<b'^;m
%]e,\q3>pnt4R26(?45?e"hPg#4j;9>Z$icDLP/HYBL#s(\%HG&kV92\Q20%-lSQ4S'JsL?;`FtqJUH7KRC.X9&pZbGQ(qf[*FcTD
%6ZSV,Rcnc_)A$p:'4M/%.e"sR4GDd->`^.F["5i*>am-MAm_t)]\Ei1'Y.&]oV2EKKPjKWZ<1rZ(*F&cU&BjRLoVFSWpM8]FI=$Y
%*rgV^NC'dF&RBok<Y/7r8`(%k2#@[g[@#ITp6jXK.7%#Cl^8NB?m)R3bs^&1hNEHaI]+ll9;Q>/j$VM::'P3^a)[pi#'D!g);8UY
%8^KE3p::;AY89SS7o#7d+]AY._TMSE7qGT.Thq-^B8>K$c)<sfA71ZEXd6VM'Pl7W;+R)YVfbuX=6,/riH0k)DMJ^G$$(Fi!&\#5
%2MnkOf6LJHa1W;M_dO1O2NAR@<UMSA83UKl:3cJIL#]DM'LXD,0`YZ.TeLs^LSKq`5VGNV0jEC'E`)V-;*]dD4aA6IPpR5IX:\L;
%f:#^O/.Ah.=qLh@&BtLuKUHRMoO)kg.L:fK!V3clm"0Hir*m%P9e_n#Y^I1%mrX+@4].8kT]u(o-V-+1Q>$ckhG[l+B*uOP6dGdF
%3tigs0\YpuU`h;jC==TF'%f1>Xo2_)Xc[K]`57WnUW?Ue5gS;3P8(P-s#jbOrFoG`fNhX>.MS-r_)lnQ.!MOdZ'1R,29QAK5mVWW
%^6*WL-"1@N-uPKIKj<e`JQ?rlL3i=bULpBh,?rr61OW^[8qH6.(sqt=of,^"GAt$dV@!,<FGilEOennN,#_]nUh7-`2&m/Ne]\Je
%qk*qJ@AE]D^a(&o"K@I*M\%MQ?Q8l<4+-C`gmc*:/m%@qNTV=!/-0i,Cj%:,]?X7UrHlm%_hEeB*t5EtC0f$P[-/A=>:p\K_?8oX
%B:nEIK&?rT.(&;KNs4o"fHg#fFG!3!O#i%?=U=VC#=8<;as:$k_ZE0HKkfBH.be7]$s>XD6WWt0kYG`e9QMj`8k8c+pH]W-Y9Xcf
%8L3Ya(MjdA6*%5P2F6.<dRJqhll@;0.'(D.L#kb`]$N<8d:aIU'GH(eoF73.m;=c!HE?H[b8f!6b,OUlOiu)cAICP]Un]Xa3GHS5
%Op3n]#,0KL<-(UaG:WVc\SU,G<Q]]@c^.dtl2.-gCI9_Lm4b"6Z@aTA7V_utcaYIk&.m*N+.4.>kZuVf"Z@dF))NZs7g.s9jkuSC
%10SXL#k@1D[*g?*'aWVFhhd:DRLUpr4]c$f7mEg_e&hs3^Uhi$"LVc*O(eZlar\ZJ'?j?G]@6IHeiiOO-L>u8RX@/(>A!B*Ni*\I
%(68c/]hm&BU:eT^Q=hesR%CVNh[!9-n4+sCf;"2RPG!&kTgHQrmUo6D%Yl,9\i'mD2E6JT7<$bfi<h[u2%DE3!DB,R(PO*N0AFbX
%&C9eVBe.[a8E^dO9NY&#_X^$ADPTWR/OSrqNLSauo@AmCcRM^?8OTLN-L=<[[']M=[TQt;Dc91n\cco?.LT`!)cM:EHl)?kogGu>
%<V$bEm9R_KniFCLIuB^h(3glsHCk7%@qa8Z\F>sM@!-Wk0">QHg,1**@Skl<p/![n*e;A$qJ;6!Ih6ID(QDOF(DKq%4'=X*I!#JD
%U".5R+=fk!94k;0=cNmlHe1'T;Y6f_D0!"0,2To(b2V*i0WA]=-<eA64cthX0hMgnJY!.UM28\+mL][8cJ2/Y&u.2%UVJ;nC&9A"
%K'&.+4>`<!qMj[h^sq^-FXg5?WRM9,NMj[YPp(q6r8GRUKH*9sJW1AGI!V6OpE7s'n^NCV!3PpKJ'*ci%m"!"DcCr0-_p]A`"pJA
%YFp@j)C[R3rG!e>2'[j0+/S7B)R&6<i&$qmSqrU<;/$)EG/fV!p0?<De0f%t12IuJ-7>@:qud`2#p/YRRWd34TlZl*PGtDJKh<<l
%X:\9t]?m\"8O1ECP=([\mc5)sKi%?>#I[H$(L\:PgN;%K.6sR0SAl9(FO2E<L0HSNh#l:j)4I*jFP(dR#hN/2,tAW*ChBF).'SuD
%Zb]SBJ&p%:$@S[]\^M3).$E=N^lN%Wj&2EFf+_(DR,u<o\3]#7'Yt)n.E&,nOX$Um<R.2eYD*Z@1^FlpZ;IAn,9Wf09RnlB+dD']
%fUW,%9b]8s66mi'P;B1Z@t-chhP3J*W(pPqQ"u,:;ihu]iC\G&%oDIs@;n]&(o`uQO!pC%:tiVcmZ87?;1b_48k9K/?RYEkP0?Yl
%S'J;VUX>=AcG(S/7%kk':CG]IROq\6%Y8u1G>C:A5kD[oLJ>u6+A,o5)7`<Omqg1Oa<KV+RO)-fS`1O?A'c$NqeXN?k:e1c`FrfW
%)sm\:hUG(f2e57Z<-Yjg9<7+f+T0,&#-_\n$9,Uj")fTLdTCec9ae+o8s-NeT)eua?GT!TqM?8>RXT?BW'c[O[p?Jqcn88XerWQQ
%:IM3NJV.kqP;)M@Us(2!"p0k5;TO_:Zp"P>-E*\]]##"X5n>=c6WL)+'Wr%FY&1KdDph$S8Deb;Z9VtJPmh;i[1dJ9R:O+sh*A6/
%N"`#7nDsjfa.SJ`G]&Pb'HnQkPBE)DSgg`KTu%k=fn/R$lk.'nMA9d8QElc;,QqZs\H]n/SVES=cd3m_*>!4A+%b(GD-r_`6(b,u
%#R\dN1)$nf0*n5e>:_ubf<K&gmBe$RJ3ST(.OWWVOGP>J")g%X,23;TQ#X@UD,ok">4GPt@K%"j6"hJ/0gi+?BTQ1C>tokO>^Afs
%C4eModkNFa(.!A5&C:r@&f#O&3srap^Yf83aFOp'-'-a@o7Ut\K;cT'#.RYWIrl@r/2X[j9$n%;dtCh3n"/3SVB?(+U=02>W!Ra:
%Wa]C@-VbL-b$VNSZr/jD>M59q;*['-F42Ud@/=e^2@[1Jd(f.=DW1;tYZZmnoZ0C8%4Xu%DG(0<eNY-i7%D(4:,>X'9HKkO]?Hm6
%?%l]C!G96N2*)Rflo(7mMD6Lef':b/b%3k+'<JuEVFk2cd3fO"g`-'!1sS$@TONTPH:-1^/s0^49AV+k3br,qQ;s?FPse#m[i5NN
%g66%Sjc_/<FI4@CTRs6J5a:M5"XZK5>+K>jV`>[+Cr`W3H?uiB,oW.ZT7neB.7RUsl1N]p?HGl;$5OG2-!%I01-FGU[+I(Cl>!`@
%A.bb%$'`o`6$K*E*!B"dH\&!L.JU^$aXC2Yp^ihX;.*@=AW)@Y9b94"Zp)T*/6[cUFEKp)dp2$C=sj]-2rM*\'["a9=-nPk70/f`
%Dd+E3r%P_bNFYtL(gUi.=_70Wh&lrqYX5O.ZZZe3\W,U[-GqM>Z=,SY+PoO#6rt^G`t!L<;(#7\%-iuF:@l=<ZQ-%*9Z.E"%H@pm
%KIiM;K3Q]Ig[I(([!IV6S$%WO4A_OL""c&peKX,S.tV:%X,8_RKZ#=11cl%*<=<fn9XEVO6f1X(T^,<g`h7A%?p\(M'0bt$$,J-e
%'1;/ji!5]N=>T2(gLaV]#U-dL^90:qb:sEgne!"$L75G8cl%;%8;1$@!$=OP\XdGr,j7paL.9fTZAD`sR;/jdqiUDU4]Y'b]c(\A
%ZnH_7eT"s<.P#7<W6GnUpI9\mUS1>V5m1mbbpfoi81O`pogiWE]r1EGmURdd>R.Q@'+JidW6T`V8"rqA;k9L(:%[LZOCK##VPM<O
%,Ee?%N)h_&0N5es3l.MF!,E23<eN"48D[=([7oqbOT,q)VGW+Lk%MFmM]s3g0R]e]1nb[IlOaCZpb(p5nB2;,T[+Q+)'UW2lQp+H
%6'm=$K^:>u9WKA4n;qsL*JH7ocP)Fp'aha.aRnn:-nh)V=G,l^MHUoLgV0lm3#Q+mo^&s#A0;$*B.=kJ+kZ#Mcidb9;P!"iKb&-F
%05.A!SjfY)p:=gUAY,DP`28DZXAfMjThY%gjL@%&0+)b&_Kg*md[?A2n7T2E&XQDV'af?`1*ip0/WG12HT[tCNn3r0fcYr1hc]U]
%4TU.X.qq"NoW1hF)-UofVWD@qTF2oM[dt5.3mBlt9us4(aAu#95r?)<KL7KjX$W^%8]@6TJq-h6(7AW$(/J-T8Rr]K+Ya"P?BK-N
%Ke:CTFd=Yi;SKmR]IYm^0kY.[fmjeCASb2=bEC"<"q!A'h*FA^gVKZ43_3:JV37@;or&G*PSpl8bT5j7b.^j1TS$+3?8QjA+(mBh
%$G";N+J_@`9BMtr4=A;\1_^_'-;?CJ7;`FJ@(`(+'k$*B(rs-*OMLrt:VX)10r1AB"_pD:J5pG#d*$gC&Z#jD89@P45,14[fKbG_
%q/+LR+TT\lE.fHU+W)]P7[O&,-fG2S)oAb'%-1_DUPXY-&0)ft-C!t5#1C@R>^1H,6Nd-C.&EV;6*sG*7qj?mko#rL"nA^;,BLQa
%o%Ei?'`?Cd%jsW<D1L2/4afUF;Db])Bd#YhMRR-Yp-sD+=1DR&C0O85*=A&VoaPbUW,k4``7ZXElYDehTKEWs,HV=/NZO*2#R,!4
%_#]:<[khU=lj8_c2sDmW4d-gO!@#te.c6I]e!!,CEdMLV?U>uO@e$\KU+f5U>L0]ik[X3ngQ/^LT>5r?$]D*K4K8]R,73e:W%5<I
%2p4Ze%3gHC+Bd'5+q"Tr_ZlYN)oM^gY;O$UMn=((hD@MAL0Y)'2KIH3?pXukd9P<94P$m+gC_XfBp9Lt`sejL48]g;Qke3/=We$U
%,$9uVQ?H^+8=DTD^F%i5%ZZ,L9-qWhU$k6X2.UQ\C#sLg_+)oZYJnL^ggK_:Tjp@Prat+GKVq*d#DqP2="G_#84/dfAUnj9aV_A#
%8!Hnc;b"NaoVkjNb#?[';"nS$g^'Mg>P!dAJj[Pn%`a"kF<b=BZ7!HrPjBQ/d)d''6NTjkQ9u@"Le)X/58'I-T0m_,;fPHU8O[ua
%c"0\;94q<16*LYV4W4d/;lZ)?+<N7MWW<_&A++3\9PnZ.al4j^;^mSJ"J0"9ldX_4d6Que+AWVJ'(hT*2Fa*:4rSQ?Wa*#"N2Y&T
%X$pOV7FhS.<-7bH\1.$;GTMamordY7O==o@KoeElJ#)spU]A]?5bSXpp5H-.9s,[bC-\OVdS@^PVQaO#VM`(<bTm;%,Qr@m(-_AA
%BH2<=Zt['_%lD+Y5\@ReiA;W<SP!*K"nYZ7Uuq,8`<<,0F'hs+5]`DU_@SMK8D;6JS$C>o5bB5'(-;D&$40'F"7+?4RDM8oCPVDM
%+r*CG2`Y/)dg`d>B!d.(Fom@+kai;S:E:3R6MXVE'g2qU-"/(OhWW?YRZRurn$He]f+e$6E=KoIU`lZ/]ZgS,CFq6;5_s35/OH7H
%.k2m#1.IJ;PAk8;\@8&Omh:l2AAK!tcS6OF"S'WnZBs>^jcEah$HFNPMUZC/;$kn>6PgN4Fc5W6fM+6?Jo,:e"59L3!BPM3Qr'_7
%GWJP-^<tD@0$opSC,5[X1r!UeX'o`\&6Y-i&=1HF,:j+rnJ_=<j;/c@nEf?+RL2C5dG,nH%MPDi:!jL<\WJ),/Lg$Th%<<cIZg1\
%cnEoA"<fpR-MAlF\,tD?8FWI]*EG#()j(ui\V"/j!B"S^n;=C%Z!Z7mMV,48#cquE+jEUkEC>W'OeLJWIA!`*;P>S]?Y2.#W&l4R
%([*.;TU6(t\iiAn>\O%hWH3jj,ZtIl_tDE@k,-3P'ach^6nJrQTc(*?Go!DlAY3S'_@(Ij$bM2di5**8FAXRCWc7p`LN??%-;[Gt
%>JYSAp/la/PON!l-dY`1C,-Uh=Aj.'<[5$g<[CGf=Km9K5X_))B3M99V<V_;@nm7:44'?[=KCX@U&0RdV').A!VnjX_$f`D7Qo"2
%H#Oq&Zpbi_q&J@Ah/Yh.d!J._b2-m[K40OCX&)kUYcpLR7m9l.8>r'Wg^RDD4___F[*Ub68Mt!PAQSFoZ[jkL9:Af!:>Jd-4(?el
%N9`8KUh-)ZBtTjuB1K#H>;MG/f7Q0oRAedG"K?,a?*M=kKEl-XcDj_p,>:TL/F\0&Q]:"I`Hq?Ro[Y02o-ff$J1&i8X,\0-7dpR"
%.`ro>a(ake5ZNr7p(MiYOEf).n9<-u<>S"Yjoc?4f7M_a4p7;8a5M`JlI5%c13t:F.,.,f@p@o]EA/VS-8uL0RVfM-O%^uA>Fjbb
%.p=-,U$Lt6a4O"n+m))"21e<:o(I0E;ZNL;XX1q]Bqc9_UV,-U5t]o@'_i9"8(TFMd%XAnU8qKp4I>`D@C+J\/8l:pWT=EKP!JYM
%4YCj,d+,lS";g-E4OnI+La_C>/IoaKR_\L,BG6kk9;#Gt[\)#`9VZ8TH#JTSRa,[)J\4]t7S&&I]tg4k7+`jJf4q<,k$2Fu3X,1i
%asg.PoP:'B&4Fo:%j/oY`^ZYAF3V_M)ThJ<]sg7MZ"nrb3FKF7%[-\L+;0f$n<h'b)RTe.%CC@@D"n'pJPp$pATk'gDP9+h+A9%5
%!S:(l<JBp3cPTnRr(k_-L5`t]`ILD.8J(HGmNQ7H/l_QnOKMf$-GM17.=bWrd&#q0Kp5>^`Cf[V%S`c>@jZloZ-&<jrrL1B;FnBr
%[D>9W:XU%LYYT\S^0FK'X%=-Pe!9?7m20DmcibkRVDDVWn5eD+e9m`e[`i@"IEHjY^rrgE6Dg\_)B,Q\=X']N>!2B>ehA0L*p4"I
%%iuoR&*r.C>oo8qkhO3^:N4Z'1m-0-KHF%A$a!c8AL=1ET&@mAnq,eamCWRiFfLqY=%sD%k=#BQAPL=#A=2@A2@1jEd5tR$RV&ui
%?TOo"Ek$rG_E8QZTO]=%"(lkp&R6#lSD'iQ#OcQ'K97HE_/.R^=X$D2KX!>hLpGpV2mP"BU(`4\$0jbZ.gY:SloMCn$EBQ%\^Tpj
%aJHr``YIB,Tk(X*N^0m;b@Pl/O334.$N4<h=/uA,@^86nMB"5edr\u:\J;rJM%LJe@?3:`ENEQ)FBkN-'cqi.On/1qW/m(,F)Zj?
%ha8p&c6tsrcc/EV%6A=PBm2.>4oF"loGGf#=&dL'8NXLBDGce.>M58-EeM?5)l"Y2QAcNfJjoL%9HKHCrX99Lc*/iT3I-t?VPjm^
%>aN(<W1ZR`2!L)hMK/d17JMrQ6:%Bg0(?/3KM"@f"?@(b7\7:;#<!AgXq#U,'`j@"k8rH$RLRc!U#VmJF/(I):J<u9]q)qqk]1]r
%:][<C[aC^t8u#E(Pn%X1i*-pIT\Vrq<!@?q[AN+dE?M(FE`O):`8;;D"esJo";WN;!JO_JR>r'hs(K9F2ajMr'j.V4!RtgpKVJKN
%I-Vn=fl7YnnhLR+6C*[u^!mCE96mA5GLWbC#p@_Hj-P^i&4/0_I7eILaO>^NKn6231dUtlOG?f-nJ&MOjYB59p1]>?d=G*b*G]PI
%934%-Z^2%_NhFQP$,/Ku4!flh^e28e'Lg!!>XGWUJ'#XHi\%Qn]Y!WOj;*H[0cG\X<pWC1hf>WP;!BHkDhB=d+l]>scm+F0*:[[=
%'ltR6NJL:[BKcbEO;m&1/i>I&?J22YILGpF7,rsKG0F-%(1EX'?oi.;NaD<b3D<4'X$DgV)BF&@ni\:$iaSN:g/+cc*M<]hE(jKQ
%!eVJX?c&9<1f,q5f3HQ;$!MKdWe=BTP56Re.01mBIJ3AtVfi)5'N6_J2-:?$Eo3<Ae-9bHZKpB.NZq1^3ENdGa;E9[%U#(0L1$(k
%4B4WqLdJ#2CjK`flA#S$'bq%R?mE_.cTu*W*dOY.7q(.EUBVKTO#&oW<7Fj`=l>69paCqrR5.D`jD^9+*YhVX7tZEu5'9D8K]=Ig
%h]`[MbLVTH//?<$!AfD;Tu9737o!@+-W5+Y<<I;W3X)OsiPR4VA]:6P.7dpiOYH*7gB(B]_^Fc%2YJ=3[P>HlO%+u;-[es6WUM0,
%8I<X<+XpUSjm*PUHULEkS]G-?):#`\n9qG@I&V<APH7cW43MbVa\Hg,@EUQb=kF?r,\6g'NPc$@(?0'inBbCUqIgLTk'+nQ4cHh=
%ZXg9%^rj54O%O+fOjgI(9dPH29/o5b]k\O]p]h8;"5bJc`/=O%8P#5I*EL*%[NI)cBNoCsI2>[IJg46>7c+P!N\WOY-V0h0b/j6F
%UU<A\RNss-fFuT].a'6k?Q(B.87Mn:qeYuR:kSLOmpLaEO1$'d3#Bh0MYJOEibfL"C22G`?4aFVKIMl!7'.PrqD?sLBFFH31p/<T
%SQ4ugfAtUs!a_F5dppd_L3a!A=/bOR@iqi2QJg?Hh6tCOak6t]&5Z:3M,%8@qJRV-7:M:%JKu.>b'K9Y'`g<kg6AO]+n,\rBs]%p
%Sff.t1ULqSq*Co21e%&gCDdEHaFf#f.nQ?Ao-(3GA9SV8,bj0XQ+qr(>QuICl<ISI(6Z4)/\R>;hjn!dp#%):.)8>p@QW+?DLqK_
%3l@,iQDYWLgs^Zq,7Wc46uAU`_b;bs^uVG&Q`Z8>(W'%CLEM(>q8#Z1Ns^@s9DTijCCq!bh+u8,&VrdW*U1#\Jel?kideaI/M%_u
%ApA^F:C3dH3h>i=&.gaS7IE8F^bnYc";>GD1fJ_.<cN[+#N[D/XlsD2]uVtU`Yi46<pU;.Y[TbkQsktuK!acAk[i=XTHPrpqlr,m
%PnYIc&$@eRA`]HE28onoTY*#giK..Ib<bcXp_@VO3Ze-QAgIL4Oil=]q_aQm's-ViSS_Ih.Z^+jGIcCeiq645nFfBY)=8(g>+N>;
%fo;(@3D,_P1h#moZ@#[GD1]jR)`n-'HW;e7TQpT[X>_-qCMbAQ(D+^Z$:@Z_PmmoBepV]h,W8^PpN7FD#P/F^!1dIP"u+E.XkThZ
%pLIUlZO"$OIL;l^$*HJ7->F:6g)]rbfB&u5d!Wr[k$jit3ntAfmm[J^EPPEWOE.BX\MNHQI>#2\Ys-Nb9TW10g*?f53rKI430I)U
%)_;?'3qe(BASOdO^f/ge\6df\s/hLu!h,d5m/X4[D'F"a'SoW%Yga=D&<?-C)/)H!*cO`b'l#IgZG?[M)!pSXW&Jtj(5HC`R?12r
%W0\nl;_/:>;Hs6^[:2U?_Xr4#h&jq*m?8(ko5$eH(I!"#',?b\UUV11eLp_c>nMB^O^o2,/oj-<%Wp%<EYO$J?3\Z5/YMDqVja-:
%>@\*aq9TrbYb4tUKR(*E9>V@WAa7dXcB'1hd-W'#YGbjc6SiYUWO'LM./0N.@*tJVbb.L_R'355:=VC9^^^Q:''gPu.!_X,dXG.V
%'ac?Ee<F^(O_\,7:kbe)`c`hi2bp`2#tXRINJ+J6UInO+YDf%_PA/JqJgoMmYZ]=M8:#qudhtF[X^X%_FQ`k9W[=OW'V93YdA4lr
%@5\f"3\[;$$JdYCK3H(4PV1+8rAqMT(%Z.IDC$j9ba(hU,?O<Q6"MQR(MOW@<]%p"pi>F81p\-!9FK9%E@!Z-e)^Z=#7;*[kRept
%fJ-Yga2jJZ/^8!=cSuQXp.a+,@EXmoB,MG)2m]J,d'Q-#&Koh/3!EA=l];S9F[EofU<;&Efr1?-)R/e'H)7g)+^C[hR7J[0.ce.H
%<^/a7'+%\_1ZSjIhi(%>p/Z<U%VWKnGK7G&\K%:m#oEr8`'(,s)I5mBRO55E8nl9%O@0A?ct#\'2O1"]$Z\I##$Wq&/2sA)/%\+g
%OdA/bP,EsS!"n2Jg5=aL7:V*Bd6AXMRbcJ-BQ\"TS0-+,_Dc.Fl&Z7k/X'PW"QDsm&K>8KYg">MY,T';*[`DH6L:bj#!,WP'i"cq
%QiM8Oi#W5^8_Fs:#ZOAWD=>b.)p%UVeNn:*.oJr)#l2Ok:kFuKX0>q6A&:h]]DO03;g)M#DCq>i[9Sock1W+:\WG4rCtG89&b`X]
%IrmKsjV*!)5n4,o%l+ZI0<&k(#O-L/h8MH-jscB,V]-F(]sV"&8YY^k)I^7D3?8hKRV6FYb6W&S+Gp@,"`i@>@]'qh"@Y'srp2?i
%.UZUZ+G#!W.8ebF[jc\K+G@sjm):U,[*eOHTagO['0`<!/ZlfoC7Qfn(79Wk)F>YiLlDliZ6^V]6rdbc4Y^Q4=n1!iTreIVo44#/
%^hJ(9'^?ZQ]K%h.YSj$:6'`7IW<kfj-Lt=OU0-<;U8)>4j`2Zj_+.9])=(=%&9Saoor/=T,6:,DT`SR<]-l7R15`/km>Ya>]/q%)
%W$%eq7P!)BQBQT1lC&:ARB_-47I;5FC`6C0EfDAAV^W#)o_jZ?22"ph;%Z_L869am;u\AC+$ag"g<@WOY6[WW0^l$G=f)bRKPo()
%D$X]1Ra4;&;3i@JYJ+2LSH+#5RS6J(V*KU5742_9qkNX-_E7CbaqC4V<#K,;dq-AmZ9ih@iJu;j5[AmL851>1&37N0STQas=9k7"
%nRVUnK"of$VJ*p\8OdVk'3&!Rm_/jU,5FEcC2c;OXm(%4":[-::Pl/"9ob@q/kS=MC2?9dglnnA@#tB;$VckS!]tsK,LK#nE.lJj
%%OPWE8:<2uO>`,U<c&a*2q5qlgmk'*M9$\E".hOXRT8EZ0%lYdd8U/Den1sH7E7443^sGe[ME6[[.l`)*X[EHCRb[Dl->C*V7J_0
%^*3ae_dA)0h=%^%AbcQ&,X!G<F/N"ENZske&N&@-0`j]:7^a#O*moe:2jFYoV_`[_HP6$V.s-dYi@33-1icHd7!fh-B,"3>.C=ed
%HCPsl?At)`A_7d)6ZWn!Ss'p(<,8F]D=GVmLM5^9nLH:<,'0mN9LH(T9k]h"h3"rPRKO)*4Bc19)Qdh6Cm#tq_#]7cXjG1Fo$6YH
%QAbCc..._rfMGVCjP0(6/sHgA8Z.^$_KfjKBBU2orDod(!`ihf"PGrM_23<s4,e@t$;gR.].Vi;L_S129'OOhE7.+Ig`?9D.!:P?
%k")o%/Y%,VIt2o"'XtsCP`HR59n`En-Uu)bQ:eMNJ/#l@0[4n/rM[Y)\nJ5=KupVFc&OOfTn"bd4@P<mM)=eS&Fk$3UlqE$-Ys%e
%/r:)4'nHjP9rB=J[sRZM!]rLAnD/>BZta.F1F`Q4<="`F5+ErVZ58D)FE3e!q92"(<jAm%VZn"'D(gkr6l.56)\i3`&T&m)[T3SV
%3X_I^O:''X$f#?FTI#a7'd-cRj,F"pidLU<OmZ'PTJ;p'_kWo/*`0p['McQUhl&@UlDPs/]Rj^Se>A!nb8@)8!BQmAG,'SL7Pm]>
%6Sa"HBYtr)7jtMDM@;6K@O)&sasWRGTi'Or@)ok$2@1Q(e[dW,*hciF5"RYQVt&'-KLX4lJo+XqKE_2Yeh+C4FO^bhY$,PHBL/p.
%'/5nZ&;3QS/s8eoR2>A6OmO8a9_7/=@?GEK.$D\gTp;;689L4</fK_d+,uq)L>a[+r]9LEd3q7m!,",WfKgs3h^HtG#qD!BkZ]Ko
%ob'7*Q=SSKD0Mqq#tZa)N"fI7/L'_nbaWFR'4-6>S/iXBF&q#TjV-_g2XHpGb_"m)SYQq</=J2K!D>ujZC+/aq&ZM;p=<9Iq$b4B
%kul9^M*%nW1fV5`4sXCDdK]i)n&15M.K_*HG7s;DiXSBkVUJ/G<IS;X!V'FIO6D=n?((&19JH@30Q8FX'G-IXE^5m!.]nH<*dajT
%.WkAS7gh&Zoe_+J]$`.Z1nPI)l(X9hL`B1i^._1s8d6:T.]hm!NOgoi,0>I0P>IDN.C"FF08\^3,W=tmBSfc7;AQbjAdBXF+.u0?
%OirLf9&Jc.Ck/?F'nPeWP@3la,m]5\;Kl9kP(T9HK4BVDBa%<]*U28iUX3ZsetFTAKgGa/<ko-K8O5;/#bC6PPC\ND1na("'e]j;
%Rm+4YYu-JaC]C,I6'Ob&XsoU+XVrQ4KapFP$WA2\.AtW9(CJ(d904ouZK3bDdjj@TJq;8_Y8\a@'Bu&1J3nBWJ\Y"/X&,hSjS:3T
%cm6e87&u*Q5[6prZ$a1c,#(a5&Y\Qq;?A\G#c+MDc%=@geSO`@$bX*Sqci/IW<oWh48.AVa-pTQEKc12^rbfhS5-hOXK!<V[A7KU
%Ds3S9$:mH>%'GHpdHmg^1UlG].8,ga3qX@BdtK7aU!,A=Th&Fj78!GZX@%OG3DEpt-8cYC&!J@ZU)O2Q4^<%#16.TnTt(eho4X_`
%T[ocda)?bU,mq^OFL]D'iq&m%TbOP5P'mo*&K5H3m4DfkaP=YKLAV@jhsan96Cab_GmD9PamNc/)VI_BOPi*nM0qW>&W)5KV%6bd
%Oaj#C@+.AY'Ws%ZWQE+paOk=mpi*IJefam;+<TJhc(sDcJ;l^*BJM@H/<D2$"c'qfo#Kf1TXg1d6p:d-9MYpsH%?*lfZgusi#gDN
%ROA>_lUm6>+)24P<dk/k<n84(ES8hgk:HC43s+T:ZjbZk!Xsr!.ABKME3o(<&:Pge8K63?n/)km;9ho:H3jUUhEjm@h&Dbs.ap^I
%-&)#3LXVP?9UamqThIr\%`=d"E""UbKpkVsa"fgm4_DiVU/OH<Abbp@Tio"TWI#$8=K-?2b:(bnNPH\V:2TU"aD(%Iq>ogpTkdcc
%k$BuGl5&+]&PaPSTXA+fXbF"Of1b(?!`6t1U1uJM1*JTZ6Th*<'\I&S&L./t!fT/GM@J6mTI;$5e5N#q2pY#`.$ctiO:COXA0)pZ
%W&("/1;e/`k5t%/`c7cZ,m]%DSaRtt?lhAq7oX%ee?&F"lER'o%d@#J>=["U.E#bD6DVr2AXBqo[QDikYOT#kM-WY":h*2<P$8e3
%H9\*2&p.]%eIkQp<:F:,]GBR!d9(Q'd%ZgT(Bka9ajCGRg1`'@i,GQ,JM')DSm3W3hfU<.D[Y!`jomA>r9Z*jYp4S-$e&80(A:+@
%GrC@3b&eR`Ro*"7/0Qc7RdZ@Ao>3t(%FB(?P]+?nA.hrE69Sa56nJOE2<0hUdtPkhd"s)#e;/`^V)"G;/L]_)XboGjZm4qc$M0'R
%$7_-u%.m1<BM'69%S4EM9$:l=b[ETfk[egOYokF"+W=!TMS>&#j&W:R"B(P6Rnoio9En8@*:#-Y\BsSARG2#0)Vd#%)O!o#kH.Ra
%$Pi><.RsW>8WunLl`(,O0d.\!$_[g=AW;#fKT_d5,!k=&<A3p!Zq"W*WQAHTZ61$gn<V(-;F2)W6SD`EkM`Hk<N@/VTo.LIXEY(\
%cc(-k@SJU:FAO=*N!!>qRKn`I3n<gB,e?JT'[[4e6o)D/PFX$(Clh7b1nU2]\=BhGY4n["jEKkMKkbt.=[ca3`D@JP(1\9@d"sRL
%PXOT0?($AU>Vg7I'P?oJm#DY>+9P/.%./eH@-'n`$%]HW(E=Ofqo3\HQ:qt)a^2e&3$BS8aL/lh(EdII+,r`/!Cjl%_@P=-dNPPu
%BO%9,8_FdebK7h_fltJ9B8,.4gb_A49q:EeKL8ukC5$\H[p"oRh%<1"ohgG%jDGT6**#a`\"3#ZSdB1t6F@QB.gHB_-N#.1:\gGH
%7LfJ^(M;`a>G^+FDs1U(*].#Ber>Eu+QTZ'9.h='Dk\gZP#tT,S.\O"lq5V6.Z:L8dIY.]6Q?Bf3c$m(j=iTh^neLf49>%3!_8+"
%L[?E%ThrfXo3N+.MR2ZlaY,qtD:=BDS,?iJKE0<`efeMVARIf2TS#K]#oSL58HIP)k":OhWn%O7S$30GqAZ!2)f-6m?SZ4*g1X[D
%W;<MJ$.'[%74SZY-ImK<)SagK<ti9a<6#>[5cTNOG(uk,QHUE/6%H:FBM?m,bcq)24Zci)jg8><[5EhL&m\?9CD8=ZroE'5Vi1-/
%6rXKfW:dMaYA\9FHAGDrb\[QW$R#k3cmPhbR>FE8[H@k@>?^VB]NNXlKGODX"$MtOd8UJ;ns\h%J0^Faes6CN_D'psNh968TN\Z@
%lVlH!PNS_L:U`gH#Q&:W<7GB#^(H*ANQI.WQsuF6^^gU7mV-ZWrVCepi_8m..596>#;mnKlCgJ*Wc4+Id]!*XSCeCU7=V\:jp2i,
%766`\>6)Adc;HkLn4&"dZ5!P@Yj5sp/=J\d!a+91f$S<YrB%ETo!pLa$BSqIO7Fh.X\c,>=S$)$.RcNJ^S4AdQ]siI`WhGLd7(=?
%Wl]%u?t`:BXY*HLosUYmctk-$8IEHup_mHC_2nkdeI54US4g*3ZA#$/K)VbjKBGqk-)*AVMahYXaJV=;lqc[cC-X[D!Tr/pI.B0P
%S-c,"Ub5LBPQc2O=K3+pph&f>Zu7O<Fg9'=9Y1U_GaU1d(gSdGc<s5lAdK?0:'a9*5#Y6M/!):P[:gK+os:B$7Eb0e&Ln\$oXQU^
%"=[]H\Sc`I)BBBRdnUT/TNf3<!jtWS2<-J#h3@JX&-fRKQP1&F;@sbP[:[<VJCY&oQnYrtn?NMqc#o1Z]*;[gjh;&sF\Kk=!AX9/
%&XEKSaqVm0R2N&+E*<m!m=m"u[1!X)%5"65;C2/BJ^'5^iE&f%S[\jeT+L<8WqW!qGH:$r64:2bc@gfZGmsrEg`@m!oar4=8QKFX
%UA.L&N'^CF=>2]/8'%4;6lBT[2lQ(?e?(r:o?_ID/&516==MH;lfCkU&4>2NA4&3Co-coo72@IY26UW*KDJ\Y4dqCfKR-f5+IKbm
%/6YT;odTIgD,'4S0$m)i+W\hNUd!Gu?QJ/V#i:4T1i;nJ(HD4lKX3DOZO,Np6V,K'j`0@7KQlP$'r0!_r>CkW1L/ur]I2/2'eU5X
%XW'iC;J8NL*M,R!891-&g!@ZS5iJ0G)IkAbEMBV4_1J9B!XPB<('.\#,jk/QMWB:6K"Wp>$ZngkSH?A1fu'U*\5O=]&E/4<G==Bk
%+dhRWXOq?2C'8_L(DIn,a[qeNP#4UN2Qb7FQJ&Er%0NS!K2R*Q/HUd-UFFF7=!ed1@ISuC&J$'b#q7Q&+/l(uFO"KAi"KWV%2Fs-
%h*Z^(M`1F^dorI6OW1"a;bQUJ:Pk#jfum>Ci0!8XaDkQ"D3ApXUoQ@QodE@VGs!3L"+h`fWDG]Uik%#S``KWJI)J1p%Os\43D>20
%F'426j3F(X$8E3/UGHIE94_HoYO">@]G*BkKd&]hJ.0Jg"(B8\:JcO714mTX7Qp=VD@$7f\>q@d!Rp7N;Ilc)'RV^Ja@)k`CQRd)
%1;\Q$l8ts263/B8PJ<b@r<b6c5i8"T@RPL5CbH5ajL)q''j%+(F$aM=H)#.?qhUgmN?T2eh#j0S&D\`=BJQ\(Wl$WqfMuMm)&KTc
%$Y8q@G:6f2b&j%n.EO,DBPK\Eeu*njU4,uS$TSREnZiPATt6g1/eg`ue-`H<8cu>.5KL.mS/:`MR8,ek-IS_0iik+S"d2%5,XguQ
%(Rdgd3IP!P<KE7$>%E9iV9ts6!(cT#Kcp/<k3SBVX;Ik2OI!%o!Nk\l8/=gi'8j(Gob8@M0o_L@_.<U(mr#N8TKAs+H[mjS\HR9R
%3DcrYM+Y)#)=mj>&;t6JUINQnVj7q-#LIPBVE5*]`i#*$B*3oAg7\3kh3,1,.RF^+'i^]:_B[3hU!AlTk3\tdKQ%blAqgs7o-hD3
%RQKdtqDb3f)k?*uY_?bPr5V4u>f`?fRS8]1RT0`)1W`1',2+ciCbEV8[if[V[3gu"+YoccM(26[f'94N3gXQ+>8,L)LtHV9=.,o;
%.7]fgN65/VZ`p:=rjjE7K#RMqOkl5SKu)?VjZkjHo;*QsQ=eX\6/#ih#:R.+C=:h<@6($k+[A`?#CKR0pZ*M:1`pkt8[Lc:-7^?4
%CO*5iH!`&hC&QK\a<ET#ZO-3S`n&-T=>)TpY7$lX6:SQT!lkmVna^tP-G%_Q^6,uQGt.L+7SND3Z)^).T9aKWdLIS%9_X@lqU3g;
%HA&?H>Ubc[Pk)[Jmq+/WNmJ*/J]<H44].3nNJ@n4&,DPdYRFu<Frb-jlA6h3Jd%sH"[be:PGXp:'d7gsb>XbJ/g936ef*:c[%*ne
%gp1Wc$]cr]SNQ9J0s&`5Y':s8&C?GFZW6%fFe)&5GhW%h,!*Y?)VRM.,t\1J?s5I]R*W(3Tic]@4!l=!^Dc;sV="hUT*QeO>.3eA
%cC,]h_P"0:F_TnY!iCYq<90F>GD9<W.+m*I_YFL:.i8d$=hn_Y'ED'3NoW@WL;d7:1[Q]](@j\1*Ybg)>tVjCFrGL%iqM-DnCka>
%[%B8`E=LR+d*jOifY!/n_GX^<SD!i.MHApLPYBVB2]XcL;b@F+lm3n.M,nHp;J:o8eQ#Wo*C3T;N31R-W&E"%D=EGdY`'%_&T)hD
%lmPJl_l)$bGRa`T30iNI6:W`F4pJ85pciB#eko2^FHRL6RXXa'An6BgoIH/`#.Xp`^M#p,e.J,+$3u72fp6JBS=5WekMBg>>RTWA
%.h^quOO?V-Se+\;JM5"fgF:u)eh@\)fi%r6g"3(Z7S2Za7p^>c,=6pkZU72r]$*>Q%kqi,o4g8,6c`(2GNo2?-F0U`Us2I`dhGfd
%!WH%p!MTCd/@3>/0#:(k?`.s@bG8h5C<l%m<IRt<L&DHFTq_Yq),(AnZH%Oe3dR5OY69(1\`H*')jVXOie5#pH=!%[>'(ZK@62l6
%9`!&i6>,Hp>3nNC2QX<>[ou`E[D.hbS.8U.)Q+j.4C*4hjR7tH2bsQ3@tbR11J+O>+O`[t6p+-<)1m9n11[M59s+s<X?U:=Uc#*q
%Vj6+o@.MYuEDdW=hOP(ICrP\=)jUGfTaSa-MS<V?9#H[_3lI>XU1KMPgHs8@Q7^gp3c]oi?T((obuBSmZb0M8Y/bdQBM[!-9B6,C
%HsGd46120Y\W+7P>egI[REWlEF/A,m0@4".'='W@E>-"e'\f"8JP6QJadK$IWc`%SA5Tk)<e='ck,c+V:Vs6]b#I#E<;Zm3p@-j6
%g2.fcWPG\Y'VR"jf:(HUHS&(,#a';d3]4i&bK<"CVr7n_NJ.u^XV?dH=E<Hk'R":C<0)/[mVJ%M3!N8p$OLIj_Fuh0KTi_S_L&R?
%EZ?YlO4n_(RS_@n9f.:KB<7K%1EkJj%QtgW1J&$E)3?euko^[&D=kSYJ:.'%JrVITk_l,-"em9PC)-Ic7Q(Rik/ruJSoiZ!7Tkcf
%.d8qYm-M*&Kjlk!maU4sM?J]ll*!$o,CD>3f"#MQdLAbaM>Wg>#JIhu#"bP$=ql1)>1k=+0.TXj7Iq3?AbL>,':i6j<c!R6W(^hk
%Och"Z6F4NDq'ZoFU,*dt#:_%]I3BKU\u9m.aj?dNTu<g2()lLE:L?(,C'lkp&/5MqK["hIOJ2;0bA)0gSIr`+.$YUq&!YNK<@T[F
%.2ee[7$&Wf-Fj>1$LN4pRbJ_%0FA21]lXs&`_Ff6TIDVYC'oSnK=boMAIHp+,X2Il?9(X8&V>#L+HY&$90gC_muZ?0ASS5,Xi;:T
%<r,<`LS2^e[YddRk^Ac"YX/#q;H5_U7,o]dh+`r+?Q5ur$$m;%4j^Z6(^-[N#1'#&$<rcHHUAfUnQcp)6ffFmdmo#<JbY\nHJ&6j
%hiXIC1uut>EQK+U1TF.RSUL.#4CjnRJ5-\8SXSDYn2iB4Y\`VI?ETZm0.U@L>*M]mg4(uhKR&/e;YMB^Lk*e-]RVYHnH.-TJlT?W
%Lea&d>N'EE$#\`U/#D0-MM`'BYf2j/bfo#P^:kW$?p/hTD"=@/Ys7PJ_pReQfc0PHa`EDk'S^chDc0ii4*50pFt@:)^t@h&;de![
%KU7DcGSDr3HX.epc:C7#QMJ7K4<mZ9BMqTYM2d0.W^T_cb%Igf;[UidA5QC'pd"Ol8$pgq'h$aPbSC[L<G[h3os6eV<.VK[QC==c
%-@&O2L:^d<k9Prp@`5ZB).8"A6D9\($b7_iJd'CD%,#1iZpFh7+NBa844C4-Ml$n'G?VgN8=InRA^4tW'Pj7\[-7"_hB7q\E5adB
%;CarYA"]u-X)aWef-UA1JLC@UTHi"o8[U7b'oOiZ"DXWaf[1D++Yh@r*?6nj645Wq&L*_:<\XA<*@:=#V:(bCKTdX6!A9m#e-m\P
%am`p01s,#F>LC?oNIE.#=*3aeg8)*);mjV7H"r/noad`N5tT"'W)Zs$l#VnHUEDLH=@OQ<0cmSrV%OI,j^#*]EpL/$T09<IWd]qg
%Cko0@$RU<.#*W*ro[(]^YEVo+5+pY\DJtdtSPc^bI%.@<euoiI+W5^JdnG3*7Q[!$-q0eD%?nB@/4S4?SK+>H78/R6i*8_4`u@tR
%^/t"a$[aY6>+0hrWFX'6[L]=?3HVj?&qq5>)SV=pAEt.-"'%r`hNqM5Ucg+#Q<2<J+d?7LR1d>*(uhMI78Rj?>"-\M=<064qHl/Y
%W-K)GTjYo5T&^:^h&93=TU2A$d*H8^JlkGWoLmX61f4?Ui'=-=RBV%4ib'a*<9T9,.q:`i>9L"7M5;p%mY&gs2GpDS:o2SQVpr<'
%(9Bg5mlQDE1'1bm#:!J&!"`&-jF0qp&AX!r:cO:P:-nBBO<!40;l#eI@&0WYN=^1MB1-YqkCi8;S:e"7o0IO'c>?OFOITGh"PQ1D
%1e,,$Uo7_W8Qm>P4&(rGOPH_27.D_CU@@ckY-B<YU22J&r7aQI9SlW-X-J&FbbRa+Mhiug*SD/X-r;KDD9;+kF&ilILP69dB=\u6
%QqZj#%Ug&[#j\UuVLEVH.+oi4$#hq,\2D[8aekKjW=P*r?j#7`n&4=$QH>ffaSW2W2K;@taUY#n<L?,#DkeCE9-YYDTnhJeMbL>d
%eSi\^e2!DM'tk`O#Q)Bj%m?Iqi"Q[f"hdo&F?mN<_!?RJZI1.^k`N-^,dT`RWD#:@/5FNIJnd'R!G,5$gg*/^/Wp'r)kkZ3D0+bl
%oS=;k!0*6l=3GnUIO.B:6%,D6!jYU<PSO@d7L4;j:dK5u,2t))lV.]%]89^*R?R'lr\Mqq932dO_5.@(Dd+R!!sKEcUMY@T&5\ZH
%GK$dhp;kXW!e#oWN?G$KN&G@`.muV,),G0-S<G*7h&%=UPTS?RTK&dsKW@VW$.pF'$uKufmEnBarXmE)R%g02"-`l@LYGR0C73^9
%OtW*tRF)'O/D1U`8aLL77H6N]An%s9660?9(ruu7n01,kYC\ijeeo@R'm`QmlOtR(&LHGR8u"57ne)X@(X6gu;2$>si>Q8eR%=9p
%V4-'f)KHd;8t]C^5-LlZ?ia.XiMJSu*aff#+W;&;cihTmQ[.9J@RBKd+A?j;m&r`],a\o!WJj,N@.Qp6-:NZ2j0R3e<'qde((/o,
%o626F#^V2oM$^M@,s3LR!dcDd-+LfP>4"A"K8mHlhgaP^s'P9qM(_sP\*:f.pHM=nroq%EqlkMHo_uc%kI:>4Vn`)/qfhADqfe[H
%45J\@GWS(&qTYr&na5mk^H6p0rFt$ZQh.i`T?dJV8+3lN^4"%Ws8)Zbcb;C6]9CS(p$M>7]RKkM4EI#V_kDQErNMj-4I*S:n`Sg.
%o](+TceeH/l-kEss*F\Cg&3;SLa'=7j6-5&rm,4!^\tZY\n(7rHM6crD7og>iTdbYs'b`mp;]u*L8VNKmbZ^?cECb4`n/lC>g@?h
%DL'"2IJ:dg;#bh;n6u18ma.N<hT=r145]r`%@98*rpfTiq*1MGpE.[F^Am`uL<&o1j4ee4Vt]AppX=H$q8<$jL\H;pim$S4Z[DcA
%jh#`/h`e3H^Rm^Z9`CsEp&2Q%iAZgYT0If$0^5kAiV#5+%tC$3Hou?I\pT"Aq8<.(e)U?$Vbc&l6^RI]&$q&klOL5HJ,e(pj2T,^
%^pA+ZE_^6f`m?;edLco4j7_o%T>!PiLVNeKci0p(pd[B[o&gPP+!8hX\mCEp<L<Y[gJ?/!g0S+B?f(hXP<FhrI5#!RV*j+Rqm:eH
%e+@li^CA$hj8F1k/n4X$ro<_:l21JPcMl''Iq%^"fUUkGVuC='Lrl5/kPVi<>,LD.@>7"[?+0?sone1IB^rOFra4Nb)N-hPhsT7Z
%a6gk!s1q1_lY#,SF^)RArV8RjI<Wnu(gaAZ^V+3u4TEpUhnFC3<cDDkcT\9,HaissNt]i1B`5#?j8=O9VKe-XT/C)S?='I?IsueA
%Ug>[7mlt^Mpcfi:]t\uCHuZUl0@-MGph]-aNV+.aZK<gDE^/=1O&,`No>LXf4@-H>m6m?K.tF_#&^E\O_f's#FO=D%j.=FSG(%U+
%I`h)[Mb?4)^&B8[XJ6thanhpPN3e+LID4HS\U"(9?=mKN+SiQ]S?gW4@Xh;:FKSqW-poHqYOa(;XZqM?lt$H.+42dLW1t>^np7>r
%7Ri^Ua7#g^k>-CACH3mrZHMc<pXSWaK@A;lhJP.=`O^m[c4tc8QSJ#CIu_)k50BL$57:o`$?_"qZ&l,K*#HrWlc<b7TeT8IQdWnj
%lCrE/X6646_'gYBL=#8r=*8GmV1.jmN[f8#A3b7YZ0LZI=K:2>#0Q93oisLDc_UHEB&N1jQ_2NT?iskZ8AXONB8/(2L#[<&N1$4F
%UL&Q?[&.olaVY<&YN*4e1:M>SdLr2ocbJ*7N\uj+piP(PkcpC`=-+V5'[P!`U*l@RfR6F1*L1cX9SKR1[GO0-5BZq2l2NWP8TR/[
%&u6UVR-c>CNi;-V6Vql5Q_EBuE=!)G'jU$HZJRQMSA""*7GW+mqH+fJCst_Gep3Eur6BJM^!rnRcHOd8`u$GDHA/3bjU+Y`Ng6+k
%eGB$e`6bu.@-rlY/qpQN2G8o3>="lECjhnSUe"K%'^W:?Y5O3D)G(uGkaFtg>Hfh2RVghnAsbED=VENuYq5cSNf!tb.Hh-WjD9<D
%R!VRZWi"mWDm8,/9^JUiXDi<nZ;U>pac.h3lEl*7Ll+kld>TX4Ah$;MrDV\8\H]-f<cAn*E\(fD5O2N07BcN(j'V1"jtmOj2MU\`
%-8&u/PWT.Mo8&`FJB,9)9:[N%A%c,\c=9aaNEb@Vp]=O;Kf71O]qq]uF[c!c+602a4=c^Y:J!?)AK,3X/_?Pt#!-+UJ`8W;.uq([
%T<@dDX2gOkg3skta%NRAc\e&l1GW^<1=P)%=3nGdG4e.rT:[H^]l[@Y9cFt;XQclYhYs<>TbpPB+nNMd3rSb^NLEZ%iO?/]&_kk&
%d3O-?A%Cij/jgjAArb42`oGOes*C<4#Pk2DokpjeR!H,;1PX;A[0md,_)'N;(_<aI4Q_X[B+Ar()E1kLC!?C)9COhEK5S0`hEnV'
%X#qBT[i/?Yfm]i-4m]$5C.qDt4P<u`PM+W&o:sfC;lJnBAIL(INB_'H%p+E-iu;f4`:<e2-kfhJ^/"$DS_.Mtk:m<N9FY.,bJ_u,
%\4l6O?Dc#j.q=.MiD0'Y$P-=fP7,[,fD/k]ZM^u0G&2ifq,l&R7a#E=@q7%Ha2Y4F^j7R73?e<'f(jh=r$c$7]")X\5tU!s0IBc8
%*U/Rt&O\AZ3U?a3]4%4G!oYts)5TiHbc'Qn^L9Ts(FVcEr:"g]VCfm5\a)oGm#j>4%+gj5C-"u$%X+gQ',6tK5.&35N>$`XV7)_W
%)D7@+B9gViF636R*-MiKAM5O>p:-0]CF^6pd''p#]^47rI`7P3;h)^(^I3u`M.>XnIiTgWY8;?*kjbor37/,<mF1#N"(7d\k68rV
%j8smD7@p42b(e0C=@`=h(./e0Bh7O)D#(T>FEqt.dlOo,1(?TT1&PG'T$:&=*Ql0]<AoYE;pDKUl_%68%Z^i)DuD^$[9b3ip)qjK
%(4A);J^<fd^_G&r&@9Zq/g36:#S%c337\R'o.h'0e$iYTk"EbiQNfIb5UK9Zbc1t\`%M#bZ8?n7if>6"<f.,edqqJjNKip+1'NVb
%3IFIUR#_"9)U]V:TicBDa8@Id\-IP:QN=Au?-UaSMs^<!0/bopdWGgb)QT8HB$4JmG>(7>J@]P>(ZWZg]PCBpK`0*fRq]d4Gffft
%[)_,+n0.^$"'n/RRNOSCU2sC#^pgJNR]RTOT0#0Z4#lc9f_R6cScHXUF81</54B@!ZoEE#/O7+f"`lZH0O/"t&i&t[cBR96%I)d^
%FA$6Eq4/&SQu2,/m?r</HF<8jStd>B:6^N(1iTrl:dtfKO;a0@Bb\tqdtZ"N2':*,1=F2kS+1KR4cPe4qR'6W^,.O\<&R"cGbQa=
%`1H3+NcIk,"MDC)2Al_!_:ceL\3c)[qnTZ2;62dp)_X]m@?):Vi[*M_2\u0%J_biC*)?]jT9#,>-2\Ui&83D[KNF.$^m\hKTZO-.
%-OUuP.C+XKBe0Yo`FNt]Y+8-Z1c14"H6Sb"%.D=bjm,mRQZCWMo&SV_cba*3`Y9U(.Ku_Sm5JO>`_.F4EO,E?&]<`rJ/8Yr0s-g!
%b\RA`%,2%"Z%brnI"9?,C]k.q`re&WUC*XA&@7,-dR9#e]8kc=W5)'?^E+&Y7l4]+P"'7DU5(k^fC;BV95Gja.d.g>2<%;=)d^OG
%bsmHm\/W8thQDl`S?O9+iFSZ5[Z6)gQj;E<r>oC@]u13@oGB<A=";h`SN'+V@42X4p2H!ICUa4./C"=?3:8;*P;Je$Q3Q92O!B__
%$>DnZ!Lso3nIF4.``;7`GsGmNQ45O4--S4(9>MLRF#ajAp',c=Na0Pj_LWY;Gn>#]/DQ@0)&gMG35LeAi!b=Oo4&b^9`p?90,[m,
%#!3G3X32H?o[a>e]'^A#EBJj4IYmY7`n^W?c3GsDrZhOkm>8b9R!o$?EsKuCcW6i8-8?$,JD\K19,Id_"]tfLE<U%bFir6^$D008
%&I2cO7c_Q^dK\jMR,i.D&$+O70,R*h\Cee0ZB..QTHj1J5b@h4OFlROCp=dLM?Ma,i]/d/NsAh.9+39liQ1%-DBWG(o12+948*0U
%1$tEt+XRA+,n@\Sr%LFA*f1O,s']#sX8irD!"=c)0&:+>knL[H114;\bT2e1rkqbg#$h4@AB)Jp<A]\Wl>0$MIZ4Z.=8ahnA@LP8
%6*6D[kq1(8*qnA)DA[;+G[K]In>\B!TI*s.L*VeE2lmWoakkD"W95n5QHS@c\JpFM+8J:./!HC_Wc@(XBmeVo4m9).&::2V#7eWd
%APUY![Uf:^L=$S)J_p/cq`Tn%]p/J,":7c8NDI6T)'C`m7]abBLG:D)Yhkfd$&1BB*d5a916'q4=Zpq6Lu'a4Z!WZWqI48i-jG[u
%nQ-+X&g=S&i+3J6@HG5mcijA3N#9>>ZP.2cEkDf^Yi0$tOK[0f(oGaPR@8Le1U[)Sh:'Fu33tFE%erQ<'1gUg<O;<>dj03WmeT1"
%bf#`9c8(XsAFc3U@J0+*7Q_2kOG5,T(kU]593=LR]3Kb/f]I1d`7nf]]YML.fMZenMY;t]BNMOV=C=&&+T\)#/`C?+ARm_;JYYO'
%@(*q8%;.5:*Y7*sDHmVd:U"1,['sT7YQOsLC'/*A-&8B\I6Olu0%Js;OjF;nBIF]-O#cM)'%&'cScE05AXaTg#u>(m*qM>7Pl,!f
%BV$8$"Wsj^AUT75[)R]])rqIZH+"IH%i\1,;a\cLnmsAQ0^P+=`&FtG,/<GdgEC`eal?%9+B,]WrCCG&cj_<7dYqjkR*]g?0co#;
%hdp'4PH@VVG._?U!:PoTbO.o]AP3PC!uPgu`n6;.X\Oa41)ue(_RBo\1d3q3?s2AAYs@n+_#TuMlTaf>Vg]BJVX95,G^\RTlLr0(
%`gSLWOh"7+D"*o5_'Zt8O(ap,p`h%1n77$$-Z@H\^O5%Wo!?^D3L_uf%:!*XhNHb4^Vp6tWjqi+&b?H](%#jZ;Z&_K'/+4Eq@R)#
%J[is("FE]["eYpfk[jhJQRhoeRJAUD'JJ^F33J2D&G,Q@TiJId_%Hn2-#&.c`li[ERV5%J,ftHVRgZYLd`n'2%S94C9bXtJGRG@)
%2T];kH.':*EMNc[MT`l@rFG\h57Of*&2t'9cUZX-WP_?6h+3nOaK<(ZNE6;koTm*R&u6tED(UO<#69aqX4LE!>fHddI_<=jOQ*b2
%^GJboN4l+.X(iT6]Ws+M1L%9oo'5^>Kt"EU)OlgH5J[U-[Ga/QZ"XE4I2*1-o^TeK>9'hdT!.Y=\B\0W+UcUU7ibIn.rQ"'V`M+%
%]$".TCd":iYuq:Q&%l5Pdf:b7H!(A7j(02J&,_Di%UYg#A:!eQd2dR,q8mZ!>OhbV/B:kEChs,USS]>:.uY$6a(M+b"!6B`_mod*
%c4&6j(<9Z*hno,$'!c@4r!e94dY4d'=$UDg80(nHYPPL3C/uYj/EW!Q`EmMtI_6!@H\IgGWpD1ge_%.`gt+(I_X'M"nqXcoNqEFh
%?CBJGLd)Lg)P'rDX>#&D:T3Sfm>j96>\DC/-Qq8ta3>qh43iRIRt4o.9H9Ja?l@EI$jbmYa#9]@CE=oUp9rY0n\\FL8UQE)M"A`M
%\7S;po;gic'cLA07XgC1i$Ano]h;f`"(Elfi#49SS*A%tEOB:;0PT6#YS&G>06<?!hTu^^">g,ieAUS(7WB:%169-3,=o(fA.nI'
%O\$)p#<G\63DPLp`oqi'6%+k3#*P9^YPBV;mFsLJl-&k;j3qYUG_VOY2NrMo?f!!<_`An5kE6nd[?padL$eX53)L,\(]'B@4u1aM
%A)D7"QRV9?3#NbN62BOQ+d/74dHm#"?cUC1i:*Y^Ip-#u+?l9TG[B_OTG@WQi7p5@>p;W:9Z>PB8Y#i:m'>A`D]QTR/TkCZ`gM;n
%4>,ZM-8+%Oq![aiG(a[3AumkZ]"T$(,hE]j\rJUFK"6iHO^:1'TDVp!*9Vk:UfNQ"YAV"S<[^5S?S4FgQ?SZ=W@?Ptg[?jkm3R*8
%C#iTFFE':gEnQ&CQS`sidjGOG)d-t2g<=`Bp3V>,G'O$VE1i>3D#F0m&Z//d2d4Zal"hsnVOafRD6\X*8L(MCkE!k[b]^5XGM>1h
%r\>P'GH?Rkh5CONmbu6`--P'j$P:OA*$L&*2"AAWI"^Fffp==$,E#5>PDi3r$i(:q6P+TI:"P(60A\g=UGm[*VXu^e24IMb4&9>k
%44q8l2FEeMW!'Oo8;kH-KP0g1'h6IN'V!*9k4p)TR5&5!j">2'jD/@r=LaDP+.7H-i1l=1?8d6b78c$LK-0UaT8t3L^`fV<ffS2G
%A<T)X>`dWF58%pP(aM@`[Rk`:o'u5?dGfe`Fam'g[X`nfUa:<S(<OQ@<,V_!+4%ikO%0kegZ,QGlH":)T7n%tKGNYT/a>4#nDg?F
%5?Zo-2I%Y>aWlTe!qO=9JMq?$bSml&@tu\j@.PaP2HE\^GtH:7N>.7Epb3nI0mrDHS+9Y`hGVTCUNDabOHLuCF(S*38&MeS3aukp
%GH(gNO+OC(6%ri0fcN[-#/E"rN-7I?iGe`d27%ToG/WKt=gICB)9Zqd61lZ6MU/">B8cP@<32UH%2<be*W'Df'FbK+iU,2INKa2B
%li@D1;Les(.Ttd-89&e,K?$5rYL-hBE\S8V3/]gUn.$^24[ZI@%?OTSQZPq1Q_X_6JPd@7%Q%UF[^VcnAHVmn!qhkXZ<3Wj4%Anp
%6\t$AS>n.N\GjC]O"HFNNsi;aYkcuN;s6<KLQOX:@SZPL,Pp'OoGH(ujN&p4>Xn*I4L4:JV@HO4.B>S2i,X;#?0!<\4:\^:.S`L1
%%&Q5tHXmf!5$@/m(iS\3XJE"&pA'M>Z=W\uhSCo1fMj16E]"#%U]%3P;0dO-TJ(6tkqQgr9lM/=WE,`l7p$JGZSW(_^e0%em+\\q
%2qi(B[Z=l_2a(SV*;*n/O%!t%,k2f(]-DL&l$S?LO0G3I6#MB39.R9j`ts%O(<IQK9WXRCOFH^h)@=C@0*tcE9I;`59>75_$RlM\
%VNF)*VQ<#)<L-KG8J]B0Oqh#X&c.7(q-pr;6["lgkn7)^*n@>^0\EN=%Ju5>V&+Og+gqAAj9BokOsWl(QnBOlH3tPg&MgpBA9:Vh
%-D!dhFruU<&R2mnS*]_knO;tW\g3anEGu>d($CMfN0Zr7,P`Ct[G7*VaB"VWNEP[lfUV7MHnb`FeV"N_fk+?j1BTL)Y-qZ<H*Zf)
%iVC%`"2e_p^tNN2Q3c^f@Kh6t4@bmhpA8esH>+N<0e,U9Z@9Mp6*\tuQB=0M6$nH'fh\sh1\33]b6/6>P/IN+,*E9hpLFD^o,.j_
%bY,Ld;5m\JS%S3$*1!KGq=Uo&^+@P8QND-7,`Z+H[<Y`ei/VZDDUaXc+9PG+@?(d@IeJSt/PTQq7i;$dl'_um"#u5J#+ef?.NU$T
%#4H$JNW_;uSSd#cPpn=qHQ%*GAH6;c\J1&YX^<erQi,7@]l+a\Q_acEG(q@\mYhqD%M7Z,AAh(+,g/FK,N"68Z3=cP03gCS8Z^FH
%^d'4D:.GUYYnHHB]HLG"3"2k--6(%JAj5A%Ka[IV9f<!iO^nbtU6!!B@-*BiTF2Fap6\>k^g<2'i*"dBF1Z$6/-IN4`!q1ROUh/K
%NjhPJ@*j6S)f/Rm#B7]&Es-L?n;@DoEF`%S+/PX=6Y`*Tc>;&eWnZ4Q\>!7&PSd1d@[rrK>9;:KN-0rY*kMo)?l5r*+7"fNAW3p+
%5VRlM=BF2B22d8!QFH.7,OO"IcLG^%??-KF<[1fHIBkC^a\Pf=^)a_"<6\XA)l1@>;$]1&hpk2HX[!mh4:b;TTtEM';SIaZC2\>I
%il<\'l]u6H9(cJobmAl9Vh:0]`?e)V7S`<k7cL5tn/0Fj>k.Ni@q%+C.K0dWj@-1&_,qTEJF1Nl,>gr36p5Kq2:%?n2O_IoCr4,Q
%?6XDt#8VAag1>,.P3'D?V9o0>hE5%Mg/`Y@E/ksg0M2JOT=+H?Un6$moc10mb/NLfA>VL:W0&AN#<kC;T%+mJ_$8dL,6q>4Wu_fO
%eZkNUY?6.TMA\!iRDUnA>"XjR`84Zg@)&#n0Rgp'Ge"hq07<iPGkC7G;gV+j@t`Z_8KN[qQcqYe#d`Wa[dIs)2d6Dso0'[C5Ge%+
%(n=E-#;gYp&U4bBiJ5T@]UuMh8D!A`Cd<rK/lkP1C=adi^Q1t2b@A;QLs)[8;05-Ad:)b?FV;&iqfnW9\$L?$a!)E^WF@r[<bZJb
%$V.Li6$k'r\DhuLVO;VoE&*r1\G5o;AWcXS1:$t%1ogqPds+I<nJ-C$[eXkn?O#e\<Qg=*WG_7cX*Sl1Uo.l&Cca(P>.DRqG;5%H
%7_gq^a7Jff3c=n10H6?9L/k,j.fs,Q$LD33Gq4i_m>S<@BNJb&o9PddK6XX`p<ki`fV.:I>9T%(bbKiFHcIRp0t7Y8nh`\j0ZpjX
%.Y(F//;JUjf?EaS8qYS^=HE!l57]R)7dWE["k/7:m?2t7H]:Hf>]puBIshb#ofVZDQcmQc!SH$\+:oLfeDUJ57]]&<83@:%PCD!q
%@jK&2*OWlD;Xh?``QpRbXX3QlFYWm0(/Ed>4$=JpgsMa@D9p`fihP'+8t4kE3[UHok])RLk4c^#OH,qd5H_&n:L-/fP;#&UNfi]R
%X6*b/VQmN>?Oj]_SAs8"n^:V10+KIEqri$]4Qu7?Ab=,qH'E[-R(kaWcd4k'*2X,?I;*L=fFB5;+uR@n%k=)B+2&YY1jFju=iiX-
%XC"&fSaE2=K8RqgXM]tr3D/tZ4K.h4oRY1Om<U*3YL]m`?=hd^dE=iSBB(p[R[49LB[bEqkZP=;5\-BklX)jiUR/,Z8ft`O*bV3`
%qC;e./h^R%:FA/W]T1F)@f':]SlF_Op#4pbfp(Lt-So13_^Ajfj^F]Qe;#]4l"jm0kgCB)L%s39qUn&[3@nO_L,$(oT(9;,J3rto
%bAlW!p@c;SfDE^miP4`cQ_Wj-Ca?:d(ZtS/Fufgr+28f:UUC>B)djB=IH:K;o^/uOUL%;f$Jg^L?U'DSXNt45]$:l15I^F<E<KCr
%B.ld2?Z+,KU.+Kc8""?Hf@=+IY/B_JnE7!Ic.h_P>`R8Va)RHa(b*&"*lo"n=&W,&ZR[-NRp:F$N')Z;SR3;I_o>j?C'!qXN_3s]
%m,b23XA")uTDsVOn`8tX>&+"CQ8Uhp#2t6+?QOs<W`RqRYHtbZZ[(%N]KD4n;m3O<p<.$9O3ctk[CeIOn/1G5K#sK(a+Z7Dq<LQ(
%1H8Xfe`g@1"eM6Urq,#<YMQu4ll/1's7'_Y*A@VDGP\gtqJf^<8`-U6hYnl$6%AnfDqFBoGGj?)Xa]lfTAP.P53hTtS$:hq+$WGK
%g;(YQr\.+i\"!?d^"i%#GFcd$gZ.>K+$[L<W4Q935Q5["E;\/ADjIjSQHqe^O5%G+r4%1Mo_n[5+/a>Kbs*c.L\L7TrqQ<VUODms
%[XYmam6+&2n_LjOn$CUfhZ!'B:Y/P!7kalZJ!rUfh+osJMWs0q2qnl:ldOV/Fh@JA@9PVM0fe';r8OO4i:l!NqYnt(p@70Ii:tQH
%?/KNAFN5KL2]jnhE)@m:2*PjFQCk,Q^6q3us/58?4FOG[n!hM`Dd\J_^@T7RDa1m_Vh[U(a3EZA5JCF#a*6u:h0f7OO5FmEDE\>u
%I+598lcfsh_I\/"LNE(Ij6)Iao(0nk:]L"bj(AhTg\2e-5(3H>gTLRFQHu23RiaiSrbq/:'tt=X[UiZsR3m@2qfbh+k^n8N4t`HL
%m>>*-O8o-'qOh>Cq>KrqO)l:ZIUqX*k16C1Cb=\+\'LZ.m24a8leUH="#m^`2m898\@K)dDsm"#aAAHKIXaNK2rdiO)5m8SZd8R3
%qO.4Vhr"@FSPW\bgMt#I`rWr'G//%:2?!5pg^g#!5J@$cnY_l6IXG[$r8Zmnrc&qUO3\=8a6QV&Fo:cRhnT2afs6&$5r3\5r-1#W
%'2OtlR@YE^NDiX)0:?W9VX8!+%*(79ho<-D:C$3d[d.pOa/@dS:VD1"MRV3`C`8=Xj+QmAa5:7,l2@pjhB*iM*k/l^dp(ZGKCO4,
%qK\Uqo?XT&oC\KC`h,KK@/P+lqn(>Gm`gpUr1F#Y]8rS6f`(aFpR4X.FYW$NM_4hlo,k^)n+i.EkP$oBI,[f9T)kp@pO@R7Z!CEm
%q7@00\)/'Ob-/OHfC(qRcu#;6hfekVp!)T:SBcWWKZ5J4FN3k<J'dHZ2a-Y+[YFh]7tSqUh7Mhlq-Q??2rI%!%sO'i`W,Q*J,fN8
%VsXCho_.qP+29mcoker*c?H<ll+d&^o^M?hs7#10ou#V'm6cA:&+uVYjG3@=+2WY[E;'n;p\/Uo?f0bshqn,)G$j^]ID/MOnNPb*
%HhZ[]c2F+jDdL2hHZT(]^M2SrhUFLG9n&;_`&HY7J)aj"]Y8mok4S&lGHYplpXeeTI9g1BfBIF**FAWpmdB'%rpJ%elasd@gUhpd
%mcn)gbBN2'hM"%@kIs%652>#P^:AZ?HZsg`gMbh`]e-_h2VlC-E9hFJJ*?Y*9n2!fqCND`*Q<Sg-uTXPGLmniI='FL\%?h<HIFa[
%$C>[(/[j#RF7l6`f/NAF]rSWMf2cZ=<Sk2S1jH&O&*:O<.Bgp#\LkM%Jds00mSP]n0=o1$ORMe1r&W`sgY?kn24"_[5#d4)3'X59
%oHq7HGNh$Ye;uLYd#(>X4-GL4nNO[DYN&p$NBK2S^FlI]`u%1.h[C%S5.h3*_d0c@_C32@R6q<9K]%LS&,tG#nZVn^^\(DdUAL%#
%nkeQXnU5V%HCR_@`8*E_RaZ,c@M7K/WD9?er%DS#rot#<_hh_%:YXU4p]!PNmgid<IJ<:&8O)'@YNG#?IJ*n0IJ;lk```P48c/r0
%qu2B<_t:I1msj&Yd*M`kmu5R>ZDQ^Xa^=t1(I.RC5OHW9I:L`Zs4Yfd0E0c*V&t-Gli5_32o#2Zs61L&g\uQpV&t-G0E1@nIi^H,
%A7F>Dhk0r=^<m_Yhp;KZUNA4^:Bp'o3J)#C=.>rQ:="mHF*%!/+C.YR\ttdi@?`BVBc&0jP8U:e:5=D;6t)mGRDMd/W\@J@.h!39
%FVl^S(5<4GL%2`1"*SImiNg^oC9@2.bb/N'C<6lg1uf@q_""$95KC"a+$X\(T@`*nk3DC2F*mlMf:Vd'V`su,5PrPu5PiB9L@jS'
%r.Ud4Q[eXerkJ9llO8`MIkQT;s0LU-RH">jQ_3i6TDI*1p'X)O#5Z@=eXtU2piH2Q5PiCCldt%doB)BgoSpW\[q@q_@!_L*s%_&A
%jaRILs1A:)5Me>*k-uN`!&YZS"e#KdRmBpPl%#OZ;5!+QU<d]U"bL%]kR71]/`8F4c.]K?+6sYn^9mTP%OcXI[Ij-,l+^urA]J.]
%qIb!NYk$mjjo;'7a1`LcIJCC5s-<<V$gXs6r/,Xs"l'$Wm(0q$9ABI7[-@UoYiG]g,6$^b%f2TE\bpY;ZPWO$Yjqrn&%k%:H*u!t
%cc?17CdBIXBXCU#@$DaG+mFW5V$*ZKV?Ef@(8);7.S/)c[4mk2<Sgrr.cDiX.j:t&M=b2,/"nK0/)_uZlj.#+@L6NNA4J%@0M=B@
%!Ne\Y#J1Sb=p!Fjg(N2$n<O&uKX`8Joeoelm%t)28#SM$>mkik"HSXg"MGTE*eEbcI7NdR$%GGF4@7sN#X6,`9->c=2M,B97kf;s
%LQ?u\)A6D/ihs$U&f;]MoI2d!mdr%qI_qo4+Scm1I?%$oCt3TBAbJakoO>(sgT3%qk%i?A%%f]ebs)T*X^\ql20AhDn9b\;h94a0
%_WUA_?O"lD]ZT?NVcj&\atJia^k`"O"tUY-A\a`8H%84Qhj>rF'.l"-DT4nF<gTZT["p?XkLn;ZfqOUC3Ym]:Z8b'U/n;0aI&T4[
%PG^k?ZpZaINZ?AVM3K76PHN*H*Vl;)V/^imI@_3D3c[Gg(g9JU#)?d[k2inqP/tt9`;dg5]Csm>>R,l<)rQ4EO7ls`POX[c>mrt6
%ai03S4bg?#nR/V(aE61fLhmO]Q3?Z[ht)jAR<`^NZ)T*Q;bUE?H^GZg)0+ZK+1-_#5Rat(M+%^10[)#BFs41#a^Mu[O:Oh^&&S5(
%6,74dUn:=2d:t%4/4Bg:m&6R#4$U%;F,SFT1YQ&lVTfCnrjpYDMV[J!nLpP`E2KDb51!#JS$>`>G!#!?iBLm]aPBRh[uoYVqea;O
%/$g!Skp\AMh2Y1#Y<`+p_el)>MYS$Rg(/T([V<SkX&dtNm-GgdBZg2)07N`7huEQIBZAK8U5.+M@UHqMlE.8*fNuAmlE.8*L0h[p
%lE.7W4nO.!X$9N^=SLMB=+?MarVG4@=+?51h0/Kn5!uf`3g"C?+FlZIOqI$'>u"LNq%;B)>VP.FNHAUIrqm-n4?uqnqS/.Eg0a#d
%l%c@hmhT."hELn?<b_ANC5[PV2LOHjHiZMA-Wds$V2H,s:F\aQYB&_cZU1'3$:[.e86rYqM-Xk&C)$_H;6X%ZG3K&@nfC?D#9YIf
%5\UYZL^-IF!KtnUp*k:mAEXNEd7<uq%EMHN6Br4-=D^=9"qWNA@j#D+J?4/#FVPk6Vi6$3/!.IT,k)h9_E/ls+5ufM+H[7,-$Jm^
%5WUugd!%`Kmsq?cKI,9$aMsZ&//ZHG"nIS"`ng_V^&t\=&XHl.1*(pNB->qDaEIkErXR$F*K]rTYS\=@q$7*Fqq0M\SV[S*"4T[*
%J2M_--/!fK6splM=@WN1dXd[r".!s4XQAL;"StjnG*@ID'OX-7f['Uqn3&J&%tNB+5_BEZY[EL,\dG[G#-;V@97%2Nm/nL+-P/HD
%Ye1+?Y5erH^^:=N`:q%c56-jr!eE7[BUaNt(1<jGR-=UJ$?H@Dq>jFk'8Xd3fPVld;^JWpTMou'kMR$4DBs$KKHHcON::T<@qUL?
%qXl8rnabc)O$\O"=KL[g/G;WC+*REb\h:N)YIYRCIN:nj`]bGd_2(m8jr-=6$V#O%Ni-2=ikamVfZQg/HJ.U[Hpfa3&u0d#lVDFe
%h;@C/?Y?t%S*urDI@]V/Dn^RYp3!6Z@@<!kf=oOPY;b?%8,G?r]r52_2eudT3$Hhfk6Ck5Har/>h"iI9n5ps3s!F_()E").A`"u&
%@;ao3>kY9t)+\*NjK`]hb2.Mi8M9m@W=5T+$Zaq<;OL*^7rJ9e7.@EKo<9e=O?>IM;eQ_eGB1BHi4?OJ_2/#u%hDne+1Our'7\c)
%_Y0)glG=W:#a7LCJa7uo$&O*^dskNjjZ+O9;`*sll`+@gp]rX!_2)1#qksI>W]e.)BB8kd+O-bK//ZE5AA<TMF`(W7=e"5CB46-1
%9A:\U]5LM2>qjW`=Me&R"8V8:/E&(:!Q07-9=W,R+Fh(d-!Y"9XISo<Q>i,.5lQ'Q9=W]lnarah4J[/m-Z*'T?P"-sZ2$"a$?%<^
%`XgiP5,2/:]*IZGa?A>iFnIX1BcHh*G\<n_;8QYt#(h<"CU_DVQu7nmA9oVhf9';.1=ESbGU39#R4k\>h@c0/\osR%KE]NC%HhY4
%#.ej,'7FCUs7-!T^YHL%`G]Yndsj\Sg%$)Gra%Asrld/7Q5g%7Ye5K0gacXZE8]E(E3F5oq<fO;iEkIESc/d$iEkJp6hg_;E3F4X
%oZ/s._C:H:dim3$2K86W9$84d$&SRRit`JE[JP,T-=$[8)=?ZVl*inTbP+463T@g43'QqEL>KQZ@\[?jCXA&1WGT9BZo'bD#pEIS
%DL`k/;"ToB6-+pl\PA??30K>/q0Y6p3$8)_Gjs63oB0bN5mjkQbT+$Q1F(&1=laHXEY'^mQnD--&SItpB`Ti4;;!80RU+aP@FmTQ
%hTL%Sf*Aoq;.)eP<Lk1JN=DJCRX^K+=fu48jbkU32S6P+6`tWV]sm=QXq,](PRI3:4R,kASdRD'V15dV'ZYK6S9_abje>o<`(Y1E
%kOAQXk<T<5%k]gJ-D2K6`s35>,'3fS4:)t:P/_O6\DgC`@)VA&.1`5-f_O@e:a,D0c)'&Qf$jNA:9'a%5M8WXo>`5]dV7/D2MANR
%[kmYRB`)IT,RLU9Z_5r8%+dK_NH&1-=YVlR^/j4rbR9LO+?t*HJ]/]Z`psf5KoJVj`,]/%+-8i(8t9Z2T/h^++Ko0jnU\QE57u5o
%LmURk*1;$VEY"Hi4)mXK+im*>O*mT+pJ8_%R%GKk8JFp*KWd3>ZQ@%jR(jc!5op+bL/;Y1EYXGc+MV?FK00CL%e:Y&4NMm;.+fJ+
%Kg2sI+/UisB3qQfAitIH"Mg(](rFB<HmuaSB1[YA_Q^YJ#<#3qWCGR*f',i&-'LkdM'W[)!hiH@&!gNWP6p+cAKEJWU`21p0'T/K
%#FM)]II10piM@g;IJO7i0T#W^lde_K;5,]<k.?t=UI5Ct$g53.*$sSQEL%E!UVugN$Y8(Pk8\1-[=GMqZ1JhciXcVGkWW\.Ib6LV
%Y`\onLVQ9[LaU,L..=T8L\^*a46^9I:+k^Q,"^$,D#*D\kW3dFmG)Cg>]mD%5;'V4h#@;_['*s@mtDH.9sm#-8[7C"Cfeo.2=4Jo
%Ju(B,BuQNa/6*joZXp*nCYH,O]0n!<UCk_Q2(`$CgB*AFR=-U3ZmD'Go\QZSO35^loA)$).1;t6cd#@Ea#$SkT$PcNQ?/pP9`L=Y
%1(Ek)90QFp-S;m9,qO*&Zr`m4`3ut>^beuWLebN<-Dm*t8N%F8[03Jk9Y&c>-DI,#5rGu9PFFB0+6fc%AQFt!i'AnONU5>/DL[g,
%@]<K?:por++pBcc9;5W'kr:I)E+pZK0s55^cqLQO!s[eXVV#VNOQI'F\t(/&WGt97*1D7&\ODg;VhoYeBqu&\N5pUpDn`!r4O-+<
%r$+qbdo8J)f.2IA=g1(mqOXSR_$)&50iA$Uaf'Wn^AbhFH"Y`jX31Yp.49qXS2:DR80VH-;l,h<9d[_:;J9N'8.^u0J$A7aXuR[*
%B=P"SX-'6OnUI*W+%`ak,h5-.*^ap/hdEi<Mp/.p#0t]F.WaEdHeC#=Q5St1[G#6<mC,UObgAUA()e`I.lNj0Q"IGbH<]fPWL:15
%ZIT".Z+\..2U5njXZ"XGUR%B`h,W3h=E!+kZ3<a83+Tu_3t>J8ZBWgPP(`="/38!LM5uq:3](e5d[;+.XadKBN*J#s6!X.n9Yck)
%p'2--1W"a(^@"?Bob0ZDc3&Zai[%A1$9AP$1.ghH@6og"D7ts\6;P[E^D\N-aA&1:aR2];XUG/#B-jLZg`rt'XBN?o7e@\\*JJD[
%m2"%tHfs_f)]s+8Q?$1sJ!:=ADWMJXqcpCI*SaStL@";.YqeFeIE-3ESq1t0a4r9(%CDAVgT"dC@]tQ3$c5p7?[_=M-i-a?p4j`=
%nb)d/\G7KQTi^=UHVKEG9oFBnM`_sKRDE'&#hjU]Ld+HPOpMcY<^Gj,ol"T`(Tc*VEb#(,7beqX?LqW5o3u(u@UJ_9+6FUtc]A&R
%>kj@+HTXs@qMuW3Me2!VP@L6]b\M7c:Q`frng"-jVR!r6Lp+q*rt?ZuIS7i6"4s;<I%WCge`rUL]`,\kr_^&Gf-&g4rug(JbidU%
%kL[r@J"rFXB?nrgr:t%YP0^c>Pe$U2A=1hYs5RleqeJh$CJ+J>9)B\WV4C:tO3DBHn%G7Hmd>EU_gT5mEgf(&O?YALID,C4I)>bE
%p>I?oZ]GFqmi(r6W._B8?e_3AK^cVdIp*0;cZ@$sd^Ja.iZE!TD[bWRaPp,Dh/m<&3VZhQG+Zso]HA.Rqp2VLSV?]2/'tX*m/q]>
%Kb7To*%/^R196MjKo2_D%C6Q#BbDBlDLk[o.+n:=G@W(19+fp9I*h=PEaNaL@2::m?\3dLG/Vt,)$#UR,[_6u7j:US$jBDUj/%i3
%M7pHj!k$pJAOuuV5EIAoM+f)/!ef7IRjk/'",34tT+A4iBu'3Y"g<F:Y[Oh)D%uU`-%%[L?p'1cK+(+Uo,LBXa[.j1\t"D1n&S]*
%5ud>Lj=T60DA=G@3(f!Vk&B?>hiTLkP!,k.9rjI`CIn4TLEO>Z/(^>F,',a77h/+VYiLeF?\(gH"A<(JA;5LkcsuOjA(8S7#s#Im
%>d=oGO5W'Vfm$,Z`hbNPVo3@U\ZSbdbI$9Q3kV4'5UlCb@NV0"l%QS[4%o+8@K<7'c=/nQ`d=/J&K;XpYttn9+)C4tUE#Fnqu-ra
%=OUr3&hTs,;B"\KISeHjV$&,@5M4h?U``8sMBi`]'i@$_IaSfphNa+k;3HX!J<"iH-BpO)UF9ZdSePbaPd/RLTIN3RmNaCH86LNi
%f-kLXP(lnp\p4&q'Sb<JX]3<fR00QoWD/NYUEULk-)JSgL$j%U=kZfH8V&u=qVVXpVjSO4(lj6\ic:mWb.EQ[(!rQ<h2BVV(LQB8
%Cn6OZf/L_S**`ADDk,HU]0m>-+oQ/RnQrot\N3bR<O!`_=?c0NaV*4+II>WLpM->tZ`qch]#A%4iid7i=1@t*>Q!#'rl6^=s!\nO
%?eB1?8EkC/$\-Cn\012U]O&Lm^ZkS.%H;gG$\&TnIglec'-6V(,'ghuf"S$4^8BJqVUiJYeiqN@rDJC?B:8)3;eo`5k.I#(GqGFO
%f/"ktZREsp7f5jAk\J;1mBpKMTk<0)6oi"mh"=GT(&jCbYQ"`&p+Ma9n>r"5Hl`uapMJN`&W1LW1>ADqL*s.KM.j?3\VW.#Tbt&I
%1c1Up9RQ^MhmUJ4.p3gV!08BPle@W5`Zu7bb0:tG'iXNu=S\Lmn#c9#SHKRVHit[C'V.ud1"bX->mdt58[bK-g_PJdeXEk#i!'eA
%,i['mdO9^:7GLJqX#>s!`Y$W[@Omr@UX9PXni8#^736[J@pPfm>18ALW*t`a`3-Y90.CDol51s\+L%unjeGFk<6FoLfqOj2<1?t7
%_S1!W^20r?W'uVi<@(AhZo?l&<Ga4$Wiib+B^X\S1cIt<=-bfuM9dA%3gonkT3b,ef"HW_g?m1L<TTe++84qR4/;[nXtVLY1Q\VI
%;2)(!]W05'`S%69Mt3AaWjkV_hbqDFm7&uk=r$:)^f\brMnt/e8WWtn)B`__a51@4)GO8=a_EeTVA!^Eilri7']``!r3\M0U&_q&
%ou%K(-YXCaqTe'Ba#2<<c$'pLIuKNiA9bGNC5ZtXIlQ&15B"9B\5pSB^5Ip$1[_Ls02\fD4?T-Z3e2SKV3L&e;O0NRh$dPYT@CAH
%;PO2d:gU$:n#]^l4/1;"]A[!tdJbU@2d>hO,b+j[_Ic775=qO2#:nnc-iA[C%:F^Po^BYZWYP4\_Gl\6]n?;0[Y4OD40IBLnC$!+
%LO#e9ZK#0Uq"?bT[16E5Xf2f<eaY56Aih$j8k7V!\-<)&bR73er2>/IB^fM+%$,B,TSW]R:lPlZ1G_/L!VB>-OI7!eK-+`BplqkN
%hTJA@hL-O7pO\NcmpIeU2KH(=*+(UE&LFBr)gdO%gW?q2s2b>UrV=47*Y0`?%S$\e%KNmK>-Lm,V$@g*ELBnfU_st+6<fq!=Z`e8
%<a>N6>\biBTGTBBO_T9Ld.\%uP[iU.CS`/u2-VX/G$K."<a8/&2K<k_Y#Bd29#]NI[@c\]&)Je9).400HO$F/s!a`TDma!Wq-64`
%K7?W*e]-kh[3n)Uml?q6`#A%KXo-">T;r6pG,bfLGaEq3]i1_>d*adbp'kKJd%oDf[b`>s3gkACpJH7&YjhY;\rnmZpkALIp(3Zu
%KNoTB+s+IZOED2150@<u-FEI[RN7)EH&mWB)nFH^$CR6`69o@sY7Qnd9&`^F'C0uQ:""M]=YoLpWQ=fMg34BC@\c/AQm?C4Tj_5]
%NdZYBSVH'qMZBNhbGAN4qeed-f?h.;f+8N=,sk4OK]kCIULK%AQsEm`:Fu*/W&)/63u,'7B9L2L,!92YSfZ&GK[_Gac^=#E`Jb)4
%(UgNDQpjroarr@ePVUnCLB[,1`sbUU=Z^_sOgHl!lE[Fu=4VOXBU32YC`^ma'$(&OG"VF$6(NmU2dopU\=%TAI;)Bk#1CshSU7iA
%RXT:Wp/LC9VLKJ\]O7od`!F/CUY#?F&bmW;XXT!cM8?sd\L,_o>+_M%>.+*2+8j`GID+-?kQ@a]*?t(KIVcg5`L$NoV;,&@IT4ET
%:"UL`b!-l2ngiOLps7E:"AasFH!4J%e'bq$id#lU^;>1Zh5g3js-)ogq"X0KN^oEk+Wej]3!tId'JUt49^+*g<T"hKb%L+coAH`%
%\-6c0e,#A9]:F?+L?K4.5?E(k2r^#1^GsX.,I\WBOQgs2B7n<<%0Ejn"k6#*Wkj1H`dc_3O.1n^d34E*p7m@kArjY=RX!3\I`;7[
%kq"HV9ASLhnDgXKf00`XE*Z1#;&"T\^N1%@&f:%@=S:!)K+*%R/rT'eATotN8*>oc>.t[)8Y22W=i]m-?)0Jdjt1T\FgJ.'2=,X%
%fDEOL2k>6Rd$$ZJ+'ijH[Q+#YK5WgH\4_0lNkXcEX&;\^YAVrogjdcV38K,6'fb$#FA@!S6#d=U2(,5Mb_*sUQIAO5a6.hUN+P5p
%WB0qJpt4-gGh'jTWEq&)o(\U%7ms&fLaNe5EkOQFhOe+uo7@RV!lX>G\q'CuU6c(JmBUCHe^!XqqYf8GksqYN#!7=/YF9OF42(=#
%SKZBejeV,)aEA>fEu7KJ'JeBjE;Jp5(n;"AX4(m?3O/%M/'/dI^`,Pf<EF<_RVl3IZoFl3&Zm\Li7u8Nq6KG;.8!@k9s_ouQ<CIZ
%.orBYlGBP=0n3&[(hejg/_(SY/A&2'?4e3Gh,8S`I+_o=F/:Dl;eO9u^R@f(=8Jo<F>]HR9r>ar936bF:fVEf]jrncX3#Hr0K!pN
%jY/]Yl0R5TkgF>XQ^@^;9;coh1piXUQ]0`gHQ/6pH*Q!rPgKIe?SHX:EJ?HrMoBSnHBJJ52rcn')LX43J?Q;<"hTRX>g@]KUt>P;
%lest_LGOf0c<brJn+$c&Oik;,o006'^gC_IEcR`DbWX.V5O+tUg?VKE(;9OB<Bi*6rS1RqZnjfsYNg4lAo-Ft^.Op+3?OghEB55?
%$W<OWdg\;XOlVCq1/64<W=I&7*o8o5V2r65,+K`A]b"IqY?0tr^,h2&9rX.FFVu"YGu28.GobahB2hXj*)jGYp`$lT6%'3]W#j>L
%d84Hf(8cOSs-*TISVQ1!:dV%5mrmQAe[MahARsM>B7>R&[+Np0YkKS[5QkKZ<KG#^:[fEZZ$I+]5688Mq%R*'^c]`-He-CpTuMp5
%R$=_?QEkI1:\;_3JM&*5qFA_TBq__SB$=X&j@`."<Omu$0[s2f/N'D7K.9Jc*)oU36Dq$K5O[^N6>'P$EQH\lC3!=bMHngeod[#X
%,,,0uW5M41BI0F[\sZ;Ys1G[RaOTBeAD(mALA36ABcNmn[S9IP&]Tr"'D"MAR)I`oYJ%QSCJMtN)=HeXC1Jc,r82EBI/9L!L,*Ea
%R0e)AaILspi&i$^1=pp]%tn<l("q>RcFjQTlcda?PGS%^>Cs4Gm/0:bSqY]mZO=VQ>hXm?Sqd/;]8^!3B#^@pDT$ig#07[<q-aTJ
%N/O$r8t!=LphtHs`7FuoNHF<@re<r>'e]:o/nR7rZ_)d7;;^F<\7G1qjHD^XQN&!qHq":7Zhd*;M*7tqd:-HeY@CS--b,DD<])pa
%,W]K?gk;0ap=s;"i<ICni)l(s/df7dn-u5M![;3JMK&O6LU&p4\Quln&)PGRU9gY)BZfsj!9KA#NH(FR"EK,Yk&1!4G,0'c$p/+E
%9o?D&<[Idrf5>r<Vkp#3>5I+)nr9C6js'G0N1PpH`V_6Q"QSX=ok(knN7aUSHcXj?$dB!pUA$uoF6\38LrAbQdbh!,D:sc`+._se
%ec34<_Cjd/4Y\QD!WZ.\F4j5s^bc9iK>9;M9V[-A:Zr5idkib<"4K@d%0Y-J0T?3E-6Ng8R0oN:b2uW"2I$f)5;&\s;ZtcBN0U@;
%UDS>1`3(<Nh-Pb7nJ)2QUB%o`YNMX\>.mtAPsZ(pfQnmMSqsEpJuT-VP^SX:,3gYLm`!US+C,.J5\G+7oq,@Yr)UZ*Jh%C-^_8Ls
%*c_G$.=G_5L<$k,@9jsXK&Nu;5et]9Q=+rR!=#4e;M*lH7E(#hjEt`.an:>Q-]*X@;=WCp_isSL7gas2/nG>65#MN2;!:!*X*f'g
%s3K[#h\TO;T`CFYr&<t(Ab%sSdU1[Sf^I"jr`aRG>Nu)$%)B_r(F]9li;cD.:Fj)ab8NM$JI;p3C/3%(!\,nMkE`R2\`$pJ?`:K*
%)PLTS?`^m\9A=C!gUZ=8<T"?mEH#fu46%AZ(]4h9[akV3Xb?;D>RBR4.Kr&ZYk+[e,gWXopeA$6:TD\7W4:o\.YcWhh=Jt?m<jlY
%\N='.-m9E>s*K\R3^t/2/*%]qR49ue?,Y2H1?tsPh_E^)r:OT'^>uhSN,S]sZM*>Vm>pe:49)i;2h#f(5bBBO8<R9lV"<RdFNMpL
%p-1-X_@L?TNF';Pm5-8<8Voq,GaB%+j*0AId\1<lcA^=7,XMSXnVPWi<5of<1S\r%*6q5\FKmd?6tWO:N$ju)"#DE7qYd=9J,8WY
%8'b0&:q-$I\9f3I]6E5iVZGXb:'-G79hB(h.SHGD1ECm:\G&EQmjPkOjX7B8G-)07bK>LK-J&=7O0!;3L?Ck\^_225:,i%%j_\Y&
%R"r`EB_&oMk$Dp)&)DNQ(k1lS\9?V&jT%:1?6&A3=)PV9ju><p?bc,f-NF,BcbKDJqgX+erlZrYrsFbabAWcPc\3\Eomunc]9fJ0
%#\WS!iWr>E3'k]76t(bH8=XY+*iV+]<oSe-odI6,nId4rTgpL?:Q[Vn%R!-if_7ltoBu#GJ^E6,VQG^4/,0-E#0?iAf>%=DDgq<$
%++F.L&-):qX[dC205nT%li09NQMBA:jqg8]q#,,[!:540s8DXMhr">?meIYeIfK!d_L^_H.:)oXkP3dj36si[A%VQKJ)ttUBDD@R
%#O(Vpo$.2So7-d)gW_t0I=LuIr:`5$=8PRAhW%BNhYj6Smal+9k79E9c\*!O@Q\%9VKMbdSkP5WjN3,1<c3?sO6'*n6aNGX)1IlX
%Oa?*$N>hrIgZWRJB`Rp27USc1%qQcBDSohh__=>4ooW9t3;OTMVlq9MNN#^u$.=h5U2unV7mC^,5A-JV@E&Au-gXTt0TG$<I.mN^
%g<fl`;tKF"_Xp'6_J*4%4L]DrWtV]Jd>.9J(L$BHSb#7:\T[g!K(-?hDU*;gSF].aYD.S=a7S$TnSVdD_kP7O]@kP,h.;"Lmf137
%I2bK9H$sGQELlgA%Jm%cD:>pr+""*#lQa"NTtfh]042:pKk5sO')L+Ji&^%X*dmjnc?Z/AHr_UK-`Ko/OHimr>GpkmT^SdA(KR/s
%GMBLfIaGHIlX[25LR.CQkh6R5VR0j(bt85P_[sCl@YhaX+S7npe@^.!p;@O=WS;:=[TO\!X`HDkZ0o_+$N-7Y<af,SRY3j^-b.HI
%@L1l*X`L)SbKZo2!oh>I%UW:PclIl-cBu=_mXRJYk@i?DgG^4.`<'6Z#(+X:msag"f>%:)0>I:[muc_C?R-o("TS4uHklt^b("t^
%LgSSTp=I*0$i1\%VZ2@\Bc.ZIBompC-Q/_CC_<&tY>3b#Nr*r:D8*g!F\_$?nR]1tC9T$cGZpp&3W+U3l^Runj2u9X1Y:C4;r%D[
%pWTPkgB,u(%:&^/Mope&jHTaVL_+FVjCc2D!E?=D)c6]p\%RQm^L6@njQ):::k2>4TO?kcpmh"I]'V'emm9RW7CNT[L(9inmhfrO
%!=6e@;1\P/^)XPP^AeAo%Jlh_J1rrhBkr7L[j>qRn?^th)$D<6K*!"$D2YW^!Bq8_DuVnsgJk2c6t,J+/%+6L(K<NQlVBJj+P+_&
%.4jA.$D1]M%<RWJcOL'<W:M38%@j5dDefNiEW<A\ibc-:$lcYV</hjQ9DG&Ech8=Ij,OsF"*B(h.DG"a]cZIZ#!.HtB>=C,%4Lh"
%buj,-^R%_PTR;2>\"T%.r9[Q^J\&uX8.VBe*e(_\;OD>KbVk![F8YD;_LR4pZ/2@?bMi2IG6VU-K`?S"edju.DC\No5Qmg3=EXE+
%O,sD(OMN'4Q'K7*In1;$a&r(=cFEi^N"qO!3$KPW,9kep)[fZC-6eW34LCh>7"4+a8-NDO5Qg/8GPgXfV_B>88;Zr[mtI&U:f[t\
%$7^9_r*G]EJ@mIa.Q-sJpdlDTfUtLdrJINU.fMF,p*aH:_DAd&TnR:^gZ,<M"J9ad<>kK!HT;cEP`q;nd_fB3If&0'5bfX[D2ir`
%IkS`/JO0fVQ^([o:SfXS!.'mOS+JYpSmqamQ[%]u;]2gYqRb>5)IVDq!>QI!oN'B%f("^dJ&C2pRJN!HJZ`o'^M2Ga[-iC[VtM_n
%Y<WYQ6H2g>g*`j>ItKj#2L1>a2gA]I3K2VErb#uTYo?,5?ilGuQrF*T;/8;lNWZ5GYpT\VI^R=*0TbVfIfhk]V+(dpOe?kWbU!;o
%5i0-Q>sQ-'nrNmiD2L#&/6U.R*.Bh3KN`3"$'mi>kr62sR?*=+'Zsla_?e<u7)gmprr!?dmsb13N0MM(@%T8m7)F`giEN-K*TsL%
%!!73pF$KR0ng29T=QE%#Rl#tC$*rC8SjX1`q)=6;r.jtm!J(:-"'7(s?YJ+Sd,:8p;Va^j#%Th]"T]qXV"[?MM+NH^^T]gFYEFBN
%mO:*6c]]GaNIEY7ldl.A_HeVJL,dF_#_AZR[K?O%00np_)&O*,MLsjh"N-?XrC`[T7ib:i,=l<76&_'*JRl&OM)Xr8^/a%.+IRpG
%]?J]QdTINF?a8aQ;l][kn.Q9[n/,UKE-a">:foY9On;MqeeQbWoK;d'l-8q'Y"amSPX5ZB!KAPSVK-H>e)+00Tf3Vf-R_d8\b])`
%o4%Vi-5]<dd1&aS?odq83)CM#$lbnZ^klk@Bq!hrs'"Is#q!Ea3NgF)d<P@1TbWVM1!JKH+IS?Sl/q<GDf5d??)t9L?fb?SC6XS/
%k(rkgkg_Wr1G6Vc2\C`"UQ7hu(YLY0GN#h!Z.NX+./[4TLAt*;G+4uu#h@C5^eO*POqtCKnuMWs;G0bQq8ZN-4Q:EdpoeuX5gW+3
%iH)*HaY3O7q$g".(u($539I0WfpMQ"K9s\CkN;'DY#DA5[l]T5Bd/T,F[G$)(1]slcOlHL<sg43L?I1<!+K++0B%(<5sJmF_]r^N
%1%NK9;h]&H1*lnHIA6Hj87j6q/os/g_8&MBDU9S7f*0tXd9m5""#MC@Y:Urad&R6JNTX0tSW3ZGgq"kd$J<I4!"e>7[#L]P*Rl7q
%Og=`O^[k_&=[1Ml*YPjlPDCS)Yj!Fj7q#Tl1Or<D8.oqf\HpfSO\1'Nh*<W[h8!s;a5s4T9_K-r.O+Q`Ca-(lT'"hqm;dhS<?AW;
%5DnqdH\FmEL*huhnl[/&$,gE3,gsJ+diW$=+k;r'h&blC,dVON#RQ6JgCkGEH*B,20_2@lk"*L$H>].J-]:(N,:DV,U8@B5\8@>5
%<+E802JDXAf4R+72(!M_j[&fK;Ue,dh*B&IRhP7]N0YH<am0'T1Z;t`P)nU0+UJ2u'bLGR%na>tYe*VKg`aEL=>JaOOQAJ].XrB8
%#*O^na^]UVRHKt67L"S._6>#I^FkMef#A=LIB:G)^=lB@Za^Phl(O80Uc00$As+Om3!9A2+F%K38B<%!N7di7P\@*a_ag"Cp#`h@
%5M;Bjb)IF7C=Fo[_FE8q!sR/(HAqJX<nsAD=*7i'LA0rI#@9`D?@Pb5fKd79>,8Y!&AX>>^,jqSQ/_BLo\XeKqY]n!O2An!G1\2C
%_(&FF-T:,"6Us*M*Zp_=e(A0kn<g&5AiI"_8q!uBoD7["j=<chj,0-">HeNYU5>4H783KRM4(?r6ho8i<VT5V9co0PQ6RE-TDX"\
%^s26QH\HKc>kSN')H%_]Yt4o?$d*s+[YdAm5FL<:DPr#V(OWhY)>qRl%kV_N)qLq]K3o:pg-N/N7B9.^q6gW2S&eT)XD0hr$7<5Q
%<?g;kE+(LeI2.BZ(Ab,)j:c3TgQVK!dRPP)o@TA>=Z?>J3Sl%P[*k/ZLH1sT^@c'3R4f)*h5KM<\9Uj)*$['D+$Qpfi48?S%rK<>
%2eAamiP5[&>Wi%'NrA7]N`82`JRCo$@-Rp'K*j]k`F<;l!jWeT=r4FoK@I?WQB-olQi'n+@S<Y>ktN;D[dF@Ihsr*-P6Hcq2)dE!
%/:9#::%DMFO:%+te,0CkAG8g,#*1]ArU7MsrqddTrm+sLrKlt;J,/bus,<hT",p7m/MS,M0^Vig0(b6r$L\Zt&H6i+ItRd5kC9%P
%gJ4hJSLjRM)<#sd*cAm1mDc*mDu-ZI.+j<\X&Np8Jp*ulmR[@Zs!Z$ugkTnYF<k6Vop!"(f_N6A#=!ZB#"<U#c=al:9u="Dh`L#]
%M'j1pC]\VVl0GhD^Zu$^S3T2a\pGsbqks[t2X4o#Ci3h>hr;4/EUHRa:4??@FYZGiWB,ZH'8ZP;<rGO6J$mn[_g8Em<$.)<<B$fC
%hnFPN?+-T`Y11ATh+l=f(Qi1U=)Y^s>s<43?G+sL\,F@mQd%>a0IgnM&"DuSh9Dhn_<AjFf;Z=FqXnf'4eCI-c+j8?(LM[f%hq$<
%J#=D!<^Fa7#>D]o%N:8gWMB<^f)e"WW.pU(1bbl>EZq*.7c`0=)Tklo^9$f&ipQb#pT4dplnu?R@&Mgf\]J.p*<*pj`=JFt,X-7!
%Hk_hR"6=s>Y1(L[I^X^L4D6#Rqf*8Uq/G=ZjSIF'WRmHqFBP2i5<o&E+)ZQ,j)9DB5:@)arBeIG:aA^0AdmZB7/hm[/2#!A'lLOR
%pE%1e%q_O,nCgXR[0ae`Om!GWPnrHDf,!FO,+(Ilg\]n+p0[gP`qkV.rr2XNo'7Y#-&,L9Hh6'3hlKa>?SPlj[ghD(&?>$*_0Ut-
%2\&.U3,1.:#N)^mOK1.8ciTf6>_9RrIX$Kdr%FH9OK$J^HG]d2WmJDbfC5Rcg'^2OlimBS$e''J"8aQ"1VC,tgb:GV,esnF7t@9C
%]sDSc]p&Le#BHRO9"PN=h@2_He6:,uJFL$F'*GL6=WegkNPTH!FNSlZHjt-dRiYB+#&Y99-Qc7`c.U.R!-j1r_n4h(pu.R3J,JE3
%J,%!$rq5E'5tq-5KRmiKUqaS<%sUcspnsUrGlRd!kKgpAqQjQ/p^=b/05phQhYFqGs%qI16H"qpag.S%5%S"sr#-91$/P_Z&=/'L
%"=t1e+m:lb9ilgr8'kHbb`::2iaSHre(lnB6#`KV;RccoQtKeDj6#ta5/6=0&_j7iI'Re5rK`^16]P)%\qkFF@kE-\""A&AJ>Ilt
%^l)RXK1cNVd(KTK:dB#*d1!T:%rdDu0=F?"qe"X]`F%L"h1)8k.b$t,jo8o&>.GZa'9ZbUbE17hT^ueW#Sj,@.\2TS\lWYU/>:Ds
%m@\*i/MV3\SW"Tu#9q%F_I9;B3l[kQcG5[e&7D[3rg9`M*au;[-SbHCP^(+,$06]Z^bSBm=_Lh<4>*]O,91p-JQgl.Q1q)s&%C:S
%Jprm,?GGO,/k[3(NmL)RXc6ZEd(E.qm7a#S]J"MEaUc9Ue85R%%tPf,+FOHR88F.!`nsJ*bgB)m:;H?:]JZ&k"1Lnd#@EE91C.*&
%bo6a6#ZF3k5ca-ZiO^M*7rHV7Q:4P!cO9`?Q3C:Tguh1(L`*'Qh:<o3O5#e1<uW\`$UL'^QG)m)LQZK`,:lot]J29%RKGaoL]q"M
%Bb:h'843N]9I(Fo,6+DTMd\0%0EtQ2<TS`brNPgs`=J*e"`d]^2hT?4Lp29>:U0fp*1T]i_'S0`@$!g/ge6T`N5q@>$nMIWRE6Yg
%M:O,kq4LGL%#S7#JdYt2MgS!q+LU\oUs*aE3sp%\j4`^#;G:K`nis^MqtJ3)*i=.b.utu^jJ9c9*uIif5\.p_no]nAV(WuH4I4!.
%V@]$8^k<IX"p37]=N6E61SeQIKL;G=9EY\Fc-5HlPuI$)M_.pP/\nX2c.OK%nH+D0Gh2M:A;)M'W]'A49'#sNWpn5&WPB=eYii(e
%hfR[L[d%s5:M,C+":/&cnFP$"NE3lBj[]hD0*Ioa!(@qA/<@TbkO9@H(F)dhD[ani,G0F4l.;t,)VEZeX.>Wji^"uu/K8@n6?'pM
%JmJ#X8T8E=ZF=lR&=?%jT\UUHjqJ26RGr'T,gl^#Vhi'6Kt#e#lUfNX/_^?aQeD)W5dFE'OB=G;X'hG;TdN#^(ps^t)Wh/VG3FR6
%4Y2uYf%*_GD3M=@rf9Z%'K8Xb#ucSr0r:-eZ7m8@B@6b.,0MGjo>Y5Iha56i-8LHU&f;F@GN;njRX8sN:uWX%8LcU\D)?\VHorS3
%EF.7R1+YsJKGE^W69P%CEdG`U/s:Ho%>l_[*YGA?=Y0*G<5^<HDg6'#$oE,.1E%G#Y2E99oATgnk!LPSaW0eU\l$(bl(4R7^L;G5
%ZN!&Z/LTSNc/[fR!GOlsYD/1nTS8-^h68=a+\aOmee)@,"N>Im-%AHo8UeSl+8nSm],$0p*TG'<V4Rdu*TT$!,T;Ha]>l5nGJD,N
%!$=TR0uN!.*(<XLSJ[MV$5%1NZnY\NXfr4n5*?Bu$[DpF&+KG@<hsYr`JK.Sp@en!/Yt7nW7_pDD?O,.9MQCeoeM[\^/q*cA5CE^
%Nq/CYm.p3Nmp5!%>QUUSXd.,ZV:bY1]IkQXIG$"jl;g7I5XbP+).1VLKM7s=+/GGu8=3s5+W81KIffK;n,=(3+G>Du:Mag.s3\`0
%+=LSM@l9J='^:"].m\6ND1I8eBh"IkLEVS7\34Y^cP?uf=g<@-_P[c*Q=l75k9Og%Z>FmBS1]Y[iWG%O=*WIj+iSLA=Vf"CC6fMC
%;]bM@RRe=4=qn36b*l_4M8'q4]Z$bl/Me9`ZdHt@l)H0M`2IfN(S(Mna+!bGG3i!grbRiPXQ\@&T5W0rn\.KG%[><g*]>(u)98l$
%$Rpj^"h;>^ih?j#.PU4cMSfb3Hh%L>a#AMFL<PDpJ,"fLGka7ni\t'V8ZbrjaVIl[lr@XZ5oXR7?'1Kq49=u)drHl0+p>4bMfSD\
%ZXMu]R"Z+hTc`-^$U8mN^E$8'2Bu?_]M0LFj]5h(l`E;l7Wl3:8K?nEgL^)DBC/r?hmRS8aCe*^Y?8(U/+Zqf&%\C+/r.D/GQMmr
%T'miZ/*9d'mg5!q^UF6!X+S`7U?)Io)IW\e10A9gU0Hq'%D['8MVY2(Q)6>\!#D(+*];kZQrPQMXV'l:6aE5-e0[Sg%CA,bOj[3g
%hiMmmf7R3,=!]:G^gjpr-\)n4jKo0-X,R?RDDm;9F]8IajuJYDo+L@f]qAP.G`FLs;&"G`@M-",?qOFP`]ck`1/"^F1;.L`-](.E
%Q"F>^[[AKQT.(``N^o96i1S.P_Z1]+40Aeq43B[ASDrNe(0-1G[MWNXhC51V8;;D\aY(U=671"4:K^`*aoRK9T+*C)ifZ%L-$Qn&
%oNsXo+l06@#)fk]3_'b7(O(Sc(VqeVNi,]FQ9)jtcPJ;,$_Gl0?]YpGDXDEZpkJ"q%Va+6k<rM7+(uAC@r9&l-$!ZYXMpYR.0g>u
%Oi<,JHpLteX0=M0(+-,or'Xb"9?g.r'5`kk@9Sa_>@][+SQ<CWH[ln*"7dXgl`=\oj@+fha,7JW;Im--3ntab=M8Ukh&=O80Td1M
%'.&ngnfh?m/+/#'L`,4\l5#=3g<'G=Z0GBuA&V_9.>S?>m_U/)4K3\_76"L^*:DgD2-LlQ]*37C90(o_$5G#_'mUDW6Ff+q`'*N<
%r.quKUZjKTE#3R9RG9gXXnKno\i$0_k"'GA7ME5;U+QF5-#\f2>o^7$fl<rpBb/[M]%+0SM7EVe@>"aFU?@Rdbf!bNh@^d[fUi0'
%^hE+c\M2KsbfD?&$c"ZH?VqVi"#D:tW*:3;9ud-g\nImS/FbaM"YFqVl%$?FOE86D:`Di/FiXr/L$qbAjMffVM!C'<[li%X*:gs-
%`3*n>O;Hg]NL:1FU(rOPh[Xp?fWhDqefc^7%N=aOjMa./3,VK2EK@d?5@SPp=qM#+*D5uEp9seBM7tPqF53NDg*I\84bparF6J$@
%h\I3DGNarslcQ0kd!$>cSG8"Ck1U@0gGWY'*dqHaX70tLS8<#sg7rT(EYZ!akR6:D2O''4!2L5OHh;.t0L^.n3qOG_6+!;'6g(8n
%4bpaR0IAL0S*8T,"ZE6J'7Iu%YLMI'03YdL-p.'Tdt65VTJ'J3n@7o6(ZBLo#`QL-BW\ZWIF1&P;E1=f_hnTj3^MZ3EB*G:1@EOk
%i@!gs.Vi*UM*kWl.5L"+khG8^-i*lu7:k0_IJZLm^'jXXMR'02p>W$jof`#cH3Z?-:$dT..e.W5/"m%Mo^,bgZ7b@!NZ.P#)#=^R
%pI[K>0?bo(+a9Z!h`/l16!s9!NRSL&gG;@p0'M%uh8D]8dC12$?CXQG4/&@#`*@tm)!8^$a,.G:?n.;C+>3)*MK+E]K*u*-&/W<O
%/aa/d\#7dtiXQ=U52\$H`(/P?/XEr'4/"sFn:7tLs70FF<-jD7Lc'`gW:YY<N_^5K<off4IKZW-!UEXtq[L93U6,eL=Jb"QE-ac6
%2rbXC/!@Z7rjJmdr/TkJP^?k/Oh_%=F_o9")5s^Gc@l!g#M?l]'s9ScUVQo=&d#>CL$0<E8<&tW+bgpJe$h.=hSF'e35hW8)Hg^:
%ZqRuJ6c0jd?S!P<7QIZ@+je]*-GJM%D3_&g$(4FI'7]S6UBi#)`6-.2\>dlVj*Q]o2.G_^N$j9AIotq\M2$W]<q[Ja-96LG8,0dc
%XE_`'HH(R)((kA[@3"Qc#<gJhHC\h65rK^+#eA?M%ZEIU9P%gX8]o4)*b;&0^e$O$%@)Rm*9+F/,gR8>dU8Z;"5(U>!sI"[2$j6o
%5#Yo'=qRV!D#7#eL/t+40b1J&7]7(*eT*)Td1t&d"9gl7JEM3PQ!^2f$Bdpt?.E!J%X6(ap1I]$A%rO<[HZ,"ZDi2JE$W;aQe(P!
%@Ws&W)i(qUWlTd='YpmW[YEbN)kA=V[=f7X=,O[''\R%(W4K@R1^q]'ao?eu^'7h_`UomO^Ob[f7fo1TI*9'p_`?do[UEYkqXT7"
%AR`5ojNm'X#<<u-*[)dmR?RQ8m\b5]bLBohU3?5i8P*Kk'#mNm/X".O'e#j&M='6q[RXO;adM/dpu]H`3d;QH-o_%Z1^r"rr/aR>
%!uFE8a@VBHa,_ru(`R5p=E[#aHhbGr,T%g$Q3:=RjA?VO*p>c:G-?Wp*/gg`,EUr15WfrY-QL@4cNN(mQ:u625:mEGHWcFna@:_,
%QQm87%B!2R#)]H6Au_bH*H"(kjh1P'jI70Y8:95BVL=)\7=2'rs%54Qj=-6h"Bh2tgWU`m*Z)1hA-]hU_%Ef,3D\'LUKiD_@=C3/
%^js#%nQG7L7/9jA)nR2skZQho*AUpLNhKZbCJgVI)$KMigi/M"-Sa8(BrqZ&I!0[S?sd6_SG(",bE7>Z`%bYAHo(U_g#&)dlt2;!
%dTN;l)9q42eT,`h!amju/TY/Bd4;XB068HBYBggH2.>Ymf$mSJ4_Y=FF4"qa2!G7r:!gK(eJ+".,33)&:aY^<;4S4%2EpG/3?u@C
%Q^]_^R%5K>Y/UOu"==GJZCB#[7YTCY$4CA-?Y<GQ_FW3j2Zn1>Uo'qq!UM5618d]pb;7;cK+3A3hmh;L"&g=2%5V,8cjdq?nj+m=
%/B###34X]1.jk6j[CX4-405'AfEmNA\rHD/G'8;Wbn_=_2D.es7H'C%0UT:0:WU+9kS:W^UQ$GT_R2fL#!up5+@U\$]dUa]FIUWX
%bm^F`\8pSj27o-m9"1d@==dF]Im95j6tLsYSKbsoPNC@@i?!j3<kMZl:s<7_=HTQ7MU=1!@08%/L.8GDNH@gH+g[M^iCI$t)jNDj
%)DXDf.Amc^]aYc1dRoX=UDU_S*5KUH2-)uZa7s82.7aTl1#>gL$6O<(&bHLQY_2oMZoRDt>C`O-gDkl,@#":*1c@%)>A*45nr.KQ
%h.Mr3C^D=d,oNdSK#tlM1X%Y3*'tUXX@/'gV.W_eoY-8(:9;JQ%8'(jX:U6:M_%9CE!2Q5b/Xr[Zn3>\bZ51o>of=N3kW%#!*Dia
%b7o4f[Kl&e=-G&t>Da@pNL\aL."8)R6XeLRCKP/n.f`>53/mqH@t\YS#3ncMekqH^.GK6RXLh3$Q7TPKW^anALZ-T`mY+^Qp0_>Q
%c_2MoWAfZ'U$tQV[Q'.*+D]R_grpUg0lf:PrDGWGgouk[K1LET47/Nn2Id"n<7`^nP2E7_,RH(@'aG%M`gYUa*;pS<o/d[t,iB>7
%Ctc6.T_qGBd=>Kdc'`R,Wn+F_1.^3>":l'dkH8B)4'etf#aD8#e?[99Z_YGI18ZPrOAn/3KX$9GWHUr(!VrqSm"&-rEIWco()p)m
%doi2/D4ir$V[er'ir[OEP1&@Y/]G#N1<4Teg$rX:gDNp;B<R[jX.MN9&b<5I_S]5Aq&S4"HU;/$L`MA&h6Ndg#'UK<!Fsb=#t_KK
%Uukn0H07n="pMPdeH@S"\,^UiLkTYL'fR9)6GC!OX^UdhP*X?OUG-2lgq9ob1h@%2_W]<?#t706G84W5a>,M7a4g>EB<!)q6/uY'
%h)P'7I?!SUU(SMfl\<M2\m'_7:dQWj`33gT,Ef\o"H+*O,&3GGg6-G$XL^JaS&W%5B[L.;Zn_1/+Hb-@eTD!QMeA[nf4BbKEk%gi
%"m*j.MlT8QLnK%:]dR[D=(LK1XtCV@@Za[$=X6Z"&nI_(@+)\@WYd[2(*Xj*r0rQ\UT#:WOXcM-j^)A.1^f3"A\='qdm/di5A$RU
%>=^O*'X&Jr$!*49ld3.mNlm@;4)45sbV=)1">FeS`^:p_Fo/.U[Ftn/:MjK%HuPA^PJCE\nKC:WS++5!e$_[#664"rK0WN=g$4IZ
%&:?:bp_5JJbRK::#I\AX/73(D,]q9@6R>&u"KV\\1b--WG%3ND3_VQ%U_,@D5U9/pQT1ce:8l796PAo#8Q21tOp@)4-R=CY!Q%^A
%JH9=tPkYMYaMP6NM),7<f(Aksp$W(tdhi:E7Qe,TS(bPmW1R88s',aB<7*s>'/")2.\6D!>On#?:a^G;C*R6L>*TB4NR'5CleXJJ
%g`bEW25J<a\TYc=P:iB)A#bREN+KYRS@p[[pC<E94P]bjS%$[#^BdTo'a!>:QS(S#GoQI*J@mJ3Q%jrd/PWhG2N<^`mE#(TQ\smS
%6ICHf6k?gEAR%RtC-LC&DOW8`la<,.(f5u2gDC:"Q,u?HZR"<7XC*%!_NF$^fT`]Zh8jpgCLNk&p3OVM1\">$.>Mh,I8Z;.g;PQN
%5`'t\1G2iojC[%P<Z3hDp+;[G7UUo:*$QUd#;k#T;("Y_7hA$IC*t/!cg?Y7a+3oaYn;L\69kNJ;(AumM!Q]ZT6k9P[KLrQh67'4
%Msa7dEDV[bh='*]9sgLI#qb+eYq9kGm=BeUD.uJoW!e8^Y-?&e@k6nd+0s'XGg[6ElbDf=1O=Koa&l+AO8ch)?SLRSP])8-*JKd9
%4jO>?IC!/GQ9;QQTpD7l<EuBn<c[FE0I"3s_`Vr2paK#]a'_ap(8/&n)AN\u>c]QQ@dkn<ld)G*lE;o7j?LOhrqdWu/0f3[=Q/1+
%QL:]P6C.gLfW_"WfAK(A0,Zso_&t'umbYj(I";7qV2X`LB\19h:In.A1*D-q,06?]LRR?'.<,LFrqioq"g7A3hN4Eh*U6$HZGL6r
%*5;%>ffK$=IpQaE8)f-GNQ\b,T?I3-+iCE#m,Pf5Fd?S3qmUtIq1kK#s2#kVeQf%^+#7>HosCj$oi.,5L8@3GP;.TGNh-cR[XRf3
%-gX<OiK(Qr)W-FS@$@PbY>_u#YM#d4LDD>GFGS@uN9lH@.<EQKEJLO_?]Lo\@?29QSV[5=G^uX\"U\DK@e5Du?`n;*DG*_0Ic1gL
%<*o*:S\OUD))H8/_7IB8fDEHeh-WFh4^:eArAjQ(hlan?%p*6,-:5OuQHVMTgp&8;cs%;k]"bHhpO?:CE*RU2FO2+\[YulknEq![
%:.Kb1/6ej$SfK5$'?V"]Sgp$s%Z8G65uE')E8ss2#jrI\1UC66la88.\NJJ?'/p^IW_0?u@r7@Jg//I#,SY+;$5E^Np[)LVs/`".
%,Wq&>Ag&&p$!"VkP5gOcOqJR6=;-kW#Zt;p[>]D^EL^,oJtMLB/`YSbe/iE1Z,ahpLYjtD^'joi6).Y!B':mY9>l?^V!V326EIb/
%b*?(.1^5o7fS\d)hF\ZI,S;FgPe%GQi2L_W,JqSmW\tcZ[;6.=^hFjk'UP)Qah9Z3dU6r(fHp)`UM)?p=-?ZaR^!;/-;8ElBksE7
%JephbB@$QKVhu5H2@b<9H?klZI/<HO-f+=ql'_#W$+RVSonDTXEgoA\gg.<!!Qd@3hbi0-3r7Si7iEsj[,nR\`uer%G-P>Ne#.s2
%0fO/B'hldj<h9Y(X'H/4QELFKFq9o3_$NaO_Begs0dfNQE`>sQeR47Q<lRlM7*&4_ZuB&#g1HWn\r!HJ*U*)(/N6rd)ab70RUk&B
%14hsW@2(DbBGuYN1/+J9#)3\iT1Itf&C#R.H:)BBCiX:5FST[!=CVFJUHBF)C"9W,J_uSn'q)1ETL5@[n<Mj1$\<E]P:4V.h$A7A
%]+o?g2cXUN*-h-3n#o=r:;615,q^h)ko-12`heYVgZ:55\;31YBQf8o(QeA*dne<.kuqHLR'SA,me>Nt2>K"A6]@AJ]i$94QfA8l
%M<G>oe)BQUdqPgmMQN#B!ht:3RU+`'_Pa_UmK206[*DN3&No=1[Z1pPn+1]%`lsF^p;:6hlSsY;:A@]uAlVA`(R[3l%k*?h*ei&Z
%^)l6)'!;<q1F4Xo.[uG!(n0"_bK5!QORg&Sn$K@/CE%#;TXYB7<-REVeH$sX"PZ!2]">N0k/PL`OcutM@)CP.b=S7D9C!mfHep#a
%F;m[9n0"r,<+CcRT'#!cV'27GD),o>-gEUs'VGME*@-llh2I7MJn/M.<Oi9(>@AcK/OftX?lDnW,''4>!i46c2?LDs#d-ab!DO4G
%4tB2WILZGWXQV@sP+@NH/IO#*#,C`=0"fi8'T,85)JVCiS2hk!<Qd3+<k_L`Z5#_uT"B7eS>aNq7&ol15f-VB6/`h7MV,Z)W7aLg
%#rg.\O-B_5.tke9S*.&<:DR@$Z?kh'7P9`WiV,jP<jtJ)PQdBF-utJf=rJhu"L7@@8E?ei=lcYGUo,%[g;SF>%R5Jq`P]`7M]BT+
%G/U9,.[$ngfP4pReg%_kr66)IU=iX,li\q>n6h`''"a)%Y%34lf0tK.3jpXXjneCHFoqX9,`V6KD,7ICQYqj]`Tgrg%9YHNG*iA2
%1lSfR[qLAU6V%GeY]kXKWae\"Y);O@&/mg!_RU<oUh80Vjt%8Dgqf6?TSHI9JVgbF],;i.HJ?gO&+g7"26+_rSS[P2N]q$>aAuL,
%^de((PnnETEmA&=V]K`_2]HIM<#Rc(o0=/onVA]E\XT)1=d)cDi5/M]dl9;,K0n`pjb6o!i541fI.BR^1166tED2`O*2RX_YD>5D
%gYJ>V9Zf),>VL>Qlo=o*'2BO77sN/c*p.ZU*^YG8n)7s8fT]p.T:]^morQBNeBU@3V*f=H284lMhl,a)79B2uAEh;Z^.j9L_]k#=
%14dHGLeY@VjTB/=+p.U%F&?Br_?<mhBG-M;`3]lrRZ)i\bhjC"(j-iW0F9kc@FKHG2rBT%hQGaIY]UBpf[agJkuMuM#(@3e(Kai7
%CN;GEZP+a#E-FT)rLu13:ptd&<dJ%0'CVufE7It+ZI9cnjAq6Q"h/MS2,(kX@p(Y4_36'sF4D7L=geL:lS]!=bLSC-1tLKgiES1L
%'ATnP7gYrYbN=>uZLpTl<QhE0^iD't?)$6%",t^O>0b`jG0FOX?t;bG0F'4F<<jfo-ko5B`eE>YIWT:PG;Fsa/+P)/F23Ln3V]D3
%R%h$K*A),-TDUru-[='QbYaP?%$R,iM91m?U`\.bh#$O%\W`5P/3l_t:e,$+E3^sP:?DZia4(lt@t9AC3UW7\V84eTbW:H3#;:%-
%fG'7]8ViS<j1D;uA53WMA`tH/D@RS[n&,U@U#ZkiUe=_dp#_7/],)&l!BPMI_5HdU_hp!/`N3s.s/Sg_q,VJ_PIX%8-+tqmXq*$C
%cep!"/o[(90o'qNgo]!R7P".N&7cBce[.r^o*A.VfY`Gn>bG$XVX3'EPKl$R^e+&(;;G)SZ8Doi+3o@qnB<6@3B.'haO!`#"5So;
%Y^@Dl<Je"]+J>]<F3+u"[nrFQ7:<)@0,q.tC"McpKTR%0QihK:=1JG[&1D;,iD.9uel3-8L@ETu7#0SLfs`#P4jYGN$C?rB_[;RZ
%)59-Uf_,QQ;:"-jqM[[2-CO&,;5qK]3:op$Dq:DU/nhV&"jZ.[n@jn4j?Tp/$HeR(2%&4N@8Hf%\55d;<bp\5:%`SsoQPusZ)2XT
%Y%qQRe3Hh/>6`qe>2J(:e8RL[M?eG;e?IqH=%^f_Wb$=:9s3VdSc_$XEQ^h*(@u8gUR@-a0WO)uG3Pa[DGFG1_t/%T-t.7)&FcU6
%U]u<r<P2FBIL#$*o4#IiS!69YbAAg$OPdr)3mid8EL!g8]7d;S348mdm,m8r7jK*U,sm9!d5<R>dVQ$EKh.[)?0q-L18uLoMqEMG
%@)"7HQ/@c%;M0!K%db%`$@3Y98uZ`4nN'=m:;nJuQAs*DM[`L/2#/\1>`6%,d3]9(J54'dOuqN@=rFrgZ&VeO&meI1"A,p*F6G&3
%Q4.]\DCQD?9\*>;RB*>J30Eb`kFJ&Mb3H-"/ucj,UfnEBm"K!$6R')MPdKY/Yu/rrA^bN-GSI'3LOn*kWeG>S"q6'H17>[p9f[&[
%PC&j#hD$:J4JjN1[]#3+m^bZ/p9Fg2CVhiBZ"eBJdb'c!99Z(Zeq0Vj'aB\T8n$.[k"`TFU@2L@R0\Es>L`@ibOssF%Fe#5NEE9\
%;cPn7L:bXRLgHPba\s@li#5\5pK:K&X#"PQaJ$dGGmHk:GteXI@R4YPSAc=tBUaNh)2'_Q$U&Zf@3.&qC;So/@?%<uJAS_EGlUOV
%NQ/&%[#7;X7bl#%@N?ouB+[:P!(qW>BiYQB@;8UI1'+@'MSN3A4@5I-1'!%fBX8rkX*@9?:+^R]"gnSpBr?!1*+<_rfeB:o'-&`*
%<XOe`AC4A9XfW"2NtKGL\[k5V*/C5q+VC*AG)+HNN`<CA'iG:\?F1<%WP_;r]&<p+aA,VGpKJ!3(W/H@L.(@V##^*+2^Si'fFW%Y
%>>lK_^bQVgR=PZm>*Y:Mb;]L:>.4fAh'NWY._9DSQ>mI]pNR2#Z<V/2-*(VlJ_YC5kp`d-Z%:.)</Sk9KN=lYCm@j+dj,!s@=^;<
%"e.2_?ris3k)!i]A1.q!FZMB4'SkfD@o*PTkdD.0Y!BchLG<+AHM;5VqX)?F5&2%KAq\8^N`OEY2-EGe'GKob2>=3fZO\[iUD:\h
%aZ:?3@EqE8X94%/`*qUENCrDi[W%7]<O\caU2c3J7HK4/Gh19hT.PL_@iZ"M[-0Wl3Z;$Z($3ZGNeVZ1]P#)B)V#bn$g5=u'&6\N
%#Jri,gU(o0*[!qu3=n[Nac:H#FEQo.5iG1gnt<&df0Ib((Y4-F7T,.W*PAa`>?FD5@N:oN[]g6p;s^l(*=.mW1h.P^#ne5dY`>TK
%8Y1&YK&s<-%Tk.'ArD#mdFuT37?2RK/0rrV)kHJYetVm3>'L:hLX@m9*=W)f8mb[*%*4=QNd$#,k/8+aeje%2p24XM<hpY6]hdLi
%E@j`-3jp0<gi8?+Qlfbq)uq'THg1q#BVR(pS"'Qlg3AS>*,T4t<0MH4`4*0u1"Ln@lL),k*Ol;Q,fI#!"DYVD@iY\/<]sRj_Bl+%
%Z47#[JXieD1R:p3Hd:#nM0P$^NQeLD4m0Ul-qp6Lc@Kr[k')c:(0<*+auD<'12Qp)3"R\cOHX[#8J-/%%Rc!r#KLfo66#'$PB/F,
%WIQCe"-HIEmD:k%=cH<d3(MF_&'m7>hs<IMcI&S"fYTTd"f`=iO0#17&+&8]1`<h@ehXVtF,@f&Je[VTBeBSGGdr]RIpr8%D..Q9
%R`.LT\>mAR:6@#u*+"$o/>F1s1uXKu+<j!(*%#_]U1a_Pe,)]rpnO/Z%>1Uh*bLQpSGD[BbA\B_0W,5T8e4>N2_BQI/6C-5oB]uA
%[/<:TVJQak>0m=-*Mqo(]=44fgl4@G1'JV)#QJgtCRY6M>NB7glc]J["4,;42uA<5;%K`!H+uC]C0Wc/;pcO9+'=]nX%K;t:StCj
%^*?XRPLUG/.&"*1J0JQK1Ocp)],<H]YS/F+YRu'J01WO\dWMa_KsTUj"=PM@&",@09;06EfB;aSIHK<U.)rPu;CL:0kR*Xc6X\$2
%03d0Z;]qAh*[#hke(r8`F`>6Ei5C6]pm4/!nD(e(:5#7/5<]!5gs,GSh6;\-q0ZEhO/'djeSjbnFG7nm+bS:k%GP%hc8^Q8#Jc5A
%C#j07RXjLTotZCh-h&d9\08G5SK/#$2h-;SLU`i:-bEdtlgsq^4qgF>7FXLc\2J6N$a(e-?^N.LZoM[c.'-VoNC;?&K'O!Ba&*oe
%Y4]\F<h?BrX%5bg^YclZf4)Q>/n0#:*k;UE@JUeum_+Yj`heHgnMfQtgG\^c/*AbU!2=ZhpDjfVheX=[4M8Y9,H)`Cj<,mFm1_1Q
%!K5Dt8/ZUMj&ujjYsuFn=rh2U`Y`"UFX^@iE(d6j@li3mV/!?P3(dou_e`9kW699,XkA:`ok':'fb0@H;bGaEdCV</T?o!oP\\Y8
%)fh:%I'ID1@0N+A\8Z`Dp#\*"">4GM=Th3:F4/[orb,]a]G[bq8BbJLb%hBHf$WWaNUGD"?C-EBf!<)k.'</cG*,nB']d<MBX%nL
%@EZ>kJG'-[:8S!cH*u(5G1jrcoc>+BZQ?O>S8`Li;WAiZf/NrX!NY\eKbg0ooc(h7N)e,%-60.S'p_rVPiiL7hR0(X04u%,'pk5c
%EWV!tVtZmPG>3#437k@?G:hQ--IjZhIJ8#:*3r!j\C4YA^MOMR)_hkr_!h$ebl&c2OHbX6f1M+9/I"\/B0+qIn_TC\=Tu]$9t\kS
%4UWrHoSirkL/2m;c!ld5_HINF!L9^i`CWAe++'#K*AnQ$UigBRCP9&%\b^])_!XS4:rs3e*`Telo>``Z:ed:fiip'nd&.\L3k94)
%W+WFg)J*soDV(4fViAW;;$e(Cd:=Y^mnoa:&@jRpH?6H",ApVjp^MKbq+P@Q9bX.<_Du>uVF5"SV[;&?\!8`M$)XTt"e;;%<'VrK
%+'aNkb7]#1^mBo0N]Q.ApX\U&_o#B[D#5VP)q,Vsr1[)gFi,R\Y\D)m8)\.Ki2k@=r>VuBUDW";[ZQ:LRbLO>id!0p-EXo'<`SON
%5WF^O96!-KEC0e>QkW91@'5`<0\C(2R+V!;a%CAPo3s_?7lPJEKk5HEGa-'_jCdlX1+dj/+2I#-"kis-CV:sE8QB8:O3HJLSu5fG
%"8rq\JlM&R^.kG;/2ecmT[=ku"@L(KZn1rh?)Pks'Sm\Wf0,'DKD)g+WIl_=,a&\-"(Wq!.umC/:<08SO)R#oXZ;BYapNAq/_3b=
%_=R;LgW.U'i0LTd,o#*e$*Vnu(R#2oB=_$!UoH.?/%jimVC"Qk[dCsX6b?!";d"h0f4,2m;M.3WF(Nu`k\nHb[o$aK'qVb#G_Lg"
%4sd:G=Mm#d?ECQ/4^:rC\pA,4]U872]JTMIjqC5rfc#e/RJQbQn2Z9i7QCEA]NmSPOS3MKHNQdM)]-K08%A]qXX92VB-'>]ekd0s
%_tRDfgZ6Ec2&RhUB2D@QXqt%EA[nIQi)($='bK[nY(0CEC5^5Jk/n'NR`mY$/4pKun"U%$&,Fg?I$r5*:"@'kSGN]S5E$T'^P::#
%5lP>HLP0Z@:!dibC\*?*`3=ulc:seP'oPRF%Y$?=pB=4u@5TWaULBi:%1D3J@Gq?l6gP6i9ahCGC@RtI#K4j_kUJqqYYW1Fp5+%1
%51)"8-dLY4)tolW-ViUf^&Rk*97]G%_\S7\0cn7fp(e-YA<*YJ";1C9s2Y6mfM]Xj3#(4id1N7:H)+.r,Y1oIPhD42j\HgceIK$h
%1hCelGL#lR5V/^;K"#]`3l-.F#L5VMdS9lL[2]phG2k!+$(M3[[[#[nB!jlQ2=u7r;@D9nM$#tFMtNQrK6h&4SQM5EUB95?37aS<
%`'H\)=l\cm\3[m]R5dZ?Dam`jm3-Uk+km/K$[Jsq0N_YIeRrSOX2QT^:u-^ZOj#e>//@'a`"Bp&>";5@)%^a*3<UD#'X[]2gDk?U
%e]8oLK9=(-4RF"p8r*\iY:-7NPEA507a1e4(bWbnOG>BH_(]'$]6:^d`_,V<5=RPkW!Vio&1h#X$NW:-a4T:.2NFdT44T@+:MLN?
%!31[2,I1@_S6q-h8p(ADpVEK;lAD')GgN>$Cu`mfX'M1R\=F=:_V7&W`dnsqa`,(5N2-d7$7q-^cH;i"74:)GWYe#d\T/@N-ET:u
%R:D&8YU7p\aNW$g^gPZ+kD3Tn5a(g9!gW`TP!jb&957>u&ojbDjIG4S<SFXqPV.eg5Wu&&<R80l)4=,E_<MZ`8S3rV<@3Uh&d-35
%2.Wfo9L)OSV(T3g=lY1$@At'#Wman1_epVteJR\ib/If50G:e$K?gN:T6L[[ol,6G(PRdl:#S3TW2:dpL>cQ9?0sV8;5";+duJ`!
%GI'.Pe`p)3Gm=bl1t`"Q,8_JDChal@SZFRKU/;S;k*FEDroS%&s2M#t$l%_LjU.I(Sbcda2[E[,e>/t,Y(i_Y`7-=oeiJ',C?T1i
%)qf)j\e"*:HT2=/nduM=P;ndt5%8<`!N/e5,%&JrX=6UrK$5EU'BZ3S2+cBF(GLB'I*l?-'s7C73)5A_-HSaH2f%;8/BbqY)%f9\
%cjR(Ti!RFtGa+.T1q&=U+^//te2fS_8qEU78WbPiIrj.f6F*'@Du`e$C)]ItBJu!=_t0)JR@#L]G*D_2'2%HYhUYbe5OQ0.d4,2K
%/3(&SV52%I@SsTo#I,cp%e,X(833ak?jS!H^puFp2<Aao*7r7&P(7$68[WI4B6&\/G=;/$WVId@0B6_o)<]S;r#G#q]jQ7KK?lQj
%fRc6)Lbm>93/^XG)KF1/,L-Vn#tCFf9QrARSAB&_0=G%6D+sOo^LR`#YM:"Jg:8s%"J"+cI;00OLF9'Cs,tIn#b+`F0%cEB"e3pX
%>fJe1.1,n_KCV+Y;=,/n;m+?N[nRUFD!Yt:m=K2Tp)!\7QaU\KIE9W.@bYX,_S-G.aL66A.-625W_mLc-FrAGJ1jBh#H^@1>MQ[)
%>0q2gMc[T=hAMh_AG2U)ZQ3GagZ`9-#GZK5\$Q5AWYJsgHT1[qkNhbq7rEX-3:D7X;r.tAURa7dr2u4---nlN%TmsZG<1?@_IY1D
%n)9KNbs3@??pGfTYXm1p5X>Ouj?jea=3@Zi-36=Qcb/(=VZEM&DONCjkfg*Haa[GLTX@:$=b8Z>F[)CY+49(\*#ujaZ;q>+!@:TC
%"<W%)j'2_pijbJq'%CCYFWUWo7L9Jf$kCE&+&jIZNT1q-j*]KC=JmR)\Yu*!G7tO\iL#ZB)L>)qlpb.TS(3(u"=3R4bpgl(V0TD.
%DG'a;@OG-J.9/QL.VZW$O0CBFbm.aHk3h/uZXRIsfE=e]'K4L]`EoR[H.Zd%R,/gK34#8^l%@FH=3NHKnG=HCp9"u24uR<B*mN-`
%.J5FiBSj:K4jkS1=9@7[a5!BqmP>8^>64qccH?I)j?,YE7qKp]]*b'd1j;OVUnjUrWRJ]X,4WiKb)>mN^[2@j\c,*SYJ'3^4S%C5
%Hh\en3G%@TI+<&gU0WAS>1YPEYu=fb;*Mf4&>RZ0`Mg<ia,N&aW+<GW(Z;>ZFWCEiWQMnaOfFjM-X<LJ$"'MV2l@&QVb'n[3Mcha
%<17@h9qjqY<_?;U]JuQ37135>(';Ot.tPTY7N?HU;T#*%CU^(/<'*[>R#kD\,BA10O%V>E!ImtNF=;7,^/*<<R0$BCRY?$GKCj+u
%.C41N[WcRM^>seP'3jD;nYkSMoK6'LOD8i%RfZa\ese%"S,BhC4R7]hpS_-9p#]H#:.A?9NXb!:[H>9q2Ogm@.G`_!Y7f(]=7N37
%AGdl)\JZqReH/eQXIJ!.-+.VZY]jOsqOlho03*Q2@4*T9?ZF.YQJM,VSJ^'3HcZSqc"0^siHE)/+Pa*!N0BWaV.D:=FZ3=@h+S"J
%K%9-;[Ze".Mhph^`7,%Iq43tl!q\Q_8$H*nV?K(>(oh#Sa[2r/j*#H?N;>*d1:8Mu1.gW#lIH$,WgNs-*hRQ(WUO?<8+m7kb$d5/
%a(^]Bapfp`V^'#EYWcD:Z!O5@aUDL682]A,kbK5.%NmDZkpi9TO5eT6o,2ojQdu;d$ZII_*P_*D(j4oN?ha%Y>\_*F8/L3b\C<0_
%%`X_h=eT\5Cg[jK-@AP9h2;en-lFLaF!"9Y"H0pL)uB]-_,rtTg1XSrS$(]kUg4PAe]`#TMe8F?9Eh''?oFW[`kU"b%6H%XD*6N!
%ptL_O`DD2)&rknFs0p[(.8.F:C-Bcq2G$i,MlWN4lR?8>5hF64-94iR9f>Xd7+?Z-h<H$^P:N-r/4"m<P4=j4,=j%bajrab]9`9e
%=Xf2#+-Ibn`T)Z^4b=#Z-#8Tna?=3aYs(baVHo.l>o7f#HT8g'JI8/+J#(/"_&B3;Qhp:gU[MFJ/J5q@`uDB=1]a)5h([/l*"E"7
%Go=HYWLB*`L8?K;[Y;c'SA+H2_C#3B5+dN=$%"o4dL-`Zdl61-&P:9qkn<FOEV's-04FhD&NN!JQVQDj0g.VE-g5d]EVJ+649g#A
%/_D))_q)Kak.`aBl-E>Z1!6J/#OeiX:mKJAHh$).I.A[MWc0'J8W>.OXg'TcJ+_s9Lu#$bF>D\Mrls[1]IRU.qr_nE[R]_J".#mJ
%iFGR9DPItb/nL#IHXML?q#)6dR:l8kT<rbZ%#@]]Z;'7k;BY6+I!mLd<J_m3"CGJnBdT<M*]f"Yn"&ch$'+K1\?ZGnk&G<]fnl)\
%E^14jdg/a5XBko(&,iE?"oEX/@"0!Q+6aWCe@Gme38`a@EW1LWb:B.!4cZ^G0Ycf6Dr+*(='Rq"JnU3K50VKl0-;K7\8rl>23pM@
%3`!],CC_WUXq&&_7h8pZ"*W;TZ74oR49;4^H$6).03Z!s`fo?7LsEE<!2gJcr]',4^:d`^P1!N,A$quS">I3@5;Zj/Wtm-IKeM.Z
%W&sW@6(K>;7#$Ugq`sh6X6k@9GdBkqS((/$?tRf/j6dohgaLJf>9d=*!ZG17P.VWif&T)(iGu6E);IeePkuknS>)U]LcKHPk,'Tc
%YulbI`][2&c:sbDi[Z`_m]D^%AT'+hs%3aE_\?p-Ku5XdJ/L)ibSH3o!XVVAS+d8ngts%Y#DrZtJ_Y[YF^I"I2mRcX+Lb<c,RJ@+
%<\!*uWZ]%#GClV9'bDhU_r/.HmPPZ;MT9H+@P[7mTibYV8Ph!e#0*>qQQZ[rR&O?0#D=.\3u_QJfNsD#p/*4?);4)95n!US>D_`]
%-"sUg"H%2UC,/7%+r(!%V^&->'<FJ'%9rL;C%uY;K._EjL+6<&\a+hIS2.qe*ho7D9H!P(Ds(k8#`M=V?6sdd33Kt-)kn,qbqRZ\
%X=.'P!Z<:eRkb!]=<o@IEY1/5k,OQ?MEhU=ZADFG2%u8Mj$>Qppc&AH)jUl>/h'aL;t^R!eQ^j;FHGB1>XJ">'rsf+d=UI\kN">d
%h*d<)e;k]q%7FUk3fjF//I8F]KUPMU$a;.C>jmCf@_\^`=Xh4>XO9-G.`>T`)07P#jokUp'V@0=?'Wsd0rV72n>Ztu]Q'H%!BD23
%Ja?AZTQmQ:PinSI+RQ%?q^b,dGHF-e,ooIpaJ%hBN%N)Lfd_4'Def^<W6&(WYbE_P9>=3Tc,DG'\i!.)gjXFHm$q.:nKUrt!T2J0
%o1Y(2IBf9YJc]0(o0&Sm#L,+3((7e3.qLT()ac5q$a[kE-iFTuWJBN,(C5sV"!^uY,YFJ8YkCK*:Ull.2eWU&l1.;_@hSf5%d[:A
%dOHq&*WRlZ)bYn<b+uL5S'fuTjP/#uB[(Fjh">(W%h^)5Zbn,4(p`KL!j.E6KU`-<>.Gjh>?0J3!1LeJW>532Tj*W]UWI(.'^*OV
%gY@Jp@[CSUU61s3BknmoO9o-A8S*p<:80gs?FC0l2<`:-=<nc8j7/0Dd&A0=jF/3#=su@]Nq/,GNg3@59InOT*T3W)MlKY`BYA,'
%"7%Jb;-B@=?^PjH_P:_OBT!i5$J3`*"3iCe$2Ys&BlTQ%/%3g:1^lBdCHJqn^n(>Mhf8]odEZ6AHH\*59[[?GId%d2V,b17)*B3D
%Kjf7qK^c%LS2@cRc$r(N)\]/ek%uKC]Bl5,1Tqs9#nJ"GHMLAm8[H@AUqeT01n:+P&YM:k$V(5bc3%]\l!3,90!m?!UAE!ZR5LF:
%_k^Q?<hsTT/N:d*7&-E6>KHS_Vj?=[X]'8qbb%k:*7h4`:GDq5Xq^C5NG2+^+0"+cTn4j9EEF*gK,-.o3tVF(TXhV&'McIGg-L/[
%e/[Sq$o?;BeO\6b2@K@^4+qI:<l.+V>iuBg!H]q"?I\j7qiOeP$isOcH:%BeLS6Vi.!=QA"W0;%:^nn.Y&Sodi(N"HG0<J^%a]fV
%Z.<nacH(SThH32M+I[,ma.sT1<,Co-iRs*ZCUsod/07,8(JGCH$LC'n$[qeQU-U24K^T=MpRX:+J[8Q:`DYCig9"E@3ARgNN<TMG
%gA7W\;0d1Y#mk<sTO#U@&F)mEU/_C9fj)XIP?&;*Plht6P%e)"$i&.pU5b:$DXLetFO2XKOb;TV:9*l!,I;q>8\.@0"R^Nb-(UQW
%>,[.LK$o#fkd0K,9iR$'9T?&@^MU.")0sbfSu*_YT<(;.h7=5Va$:qr\SY8216kc"Y[V$t>hXMD'Q@V>-Q_9fL*-o%V4duaCD_G;
%TA,I7Z9+)#!T>rBja+qRl+dq3K1VaoX7q*W.ARR2*_>#mT=^=Td)%oJLEad[?oD/r?@(%e$e*ce5A3TV_$:ZU)b.gY`-4Id7?#?p
%I[=PkW!Ei,A>ElF$Z;37\bHn^=P1\q`$J'UN]KLg<)o``F)%f:oLX%:ZN[dOoM+BH,G%2hO)OU.Gp3No\=2tjZjRr+-g8.uV9KO7
%UPDJe`Wjk8PONX1H9j<d,!lAmk!ga[0XW&:.b/dWY]R!9EeRCC@CW^:lD/GS@PL>R:#huWJm%3WBP8*ebHY2#b$i8hd->LJ>a6Fg
%QSB8PpkX(uM1=sGHVI%bej`&r>Vudf7<IL$*5Y([9o*k$mWaUF:>0EgaUlil,+K!1$BK46[<EnuK17@,l'P)>l;aIS`\KG=g.Kh4
%mQ(RZM8jTM21)^pX@Ai1_PjIm-7Q#jd;`n+&[d8F2M`&BI5pTh)V#1-RBDg?4=4/d:K;L%_X(\$8l:VMEQifOB!-]p/[[YhLs5FZ
%Mk,$0<:2.j0T8dAg9si3A-!-Y:nB%MVEM]9h?9^8(/3FOQaPMB0e#_J70tL_.L"JT-rYb^#cFq>kX&lu$%Uo;/@d`W15"$2o3572
%Aeh-Ej1c;gL/]1g+q.WIHs9``Dn$1@TJOecY`7=t9Lr1ADLsc321(\r<Kdha;a^g^#?O"kP8@'t^>_G]1IMS,W9$4ff_j%j'6k.E
%Ac;sVLtp\,nohTfJ4S+N(op]i\k&#?$rl92$"WtOA2SI"F.Y-YMO02@6edGd:)J@OIV@Q)aLr0sJF;o*j*[n-%n6C/Yma,3eXO?k
%"LT-jQ/j0Ij`c%%kuJ1!WHuF[n:V5n%;QMfEmlLilICl1DIfCgr3V@;NN`k's1&7KK-J]m7"0_&f+V4N1hd>aJI<IUSY24XWg64H
%<keZq:fZH,`*eWk@EO.DS/J1H/-:l8ZFMj[Ob;Pc2'lmp6nBZ^[%:^8&]UW5=O+*cFXO3Po9N&>2)T!AY43#F0^IS.HbQ^P_)')@
%Fg(:Oe!$U4&Zk,]L?p=ZOgdt@5M.t:2J[MX,d9>3Cd,Ijb37!-@Tj#.>>:]b:.]2Z:mh]dg-telG`;hSmPYL?#\s+4(7p@]aAGS@
%!jtqZ=(I5X9O?@R.^Te@bGcR\eg>.g)1IA5PHGa4X_8J-kTnqe+]*3#b.tj[-@n7h0Q:!,"JaM?d/r09Gt8m^&X)(.Li@8](+44s
%$rND]>B1sG709r2S$q24\/JA#ADfR;Y"4US=\.[.OqG9oDH"qt9nU\)?!=8O][X&KXN@%MF#Oi'h6^Y$1jC-"[@jiT]6.rb2%?hG
%3)X=;McCB1*X/@\8%pfskDh<gOCZ"F;u(D@AfSVC"kKl1542b9C0-;J+%lf84fOIC"%Vbi9*0uB(taILe$I^cS_6QV=.SG4QNM<L
%Xpd\n2/.($AXeuc;(dSthF'W^39eaYa=;=/-dB-[lHiDY>YqGkCS367W*uZA$h%]5B:uB/lC#Wf-6h:h%a"e(a%/RK[A\IRID&/:
%H<@J8S)f49YfC!H#EdQ9c<@lLc6(5#AW]BXg-As/e.4Kk4(?+5hWo&$XK=7K8lH[$Z.:PF1^'7L0sQ&G.\s'S.\\m\J@\L-SJ5nd
%2O#*i;%'Xa?drR[`F*L,<;2gKB\\D?U=--;Su=4icl:JmR]r_@HIIS$QUn!H#/?F61=bOA?PR>o:-:_pbs@m]<iS?_f7id3WZ.X%
%X!?)*Q%ihN<7j25CJR6Wjj;VY/N_ebR3et<'@7h<_b-\*`$pfQ$C10^V*jHdM'cSf3SObpbR7Fg,Rl#kRS$J#OCJ'B:^beDLOLp8
%DSFT_VjaEG!DP>L3Q4hg0G5l%nQ_>u(9,SdVYs%`MAZ\L1S7kjEs2.c7&Fu_K)/Q4NK?V/NMmQSI]Q[D7dcb+TVV[@[2ldD]b4Bm
%P.b;,E%TH^jiJAGKMJ'Q;hHU:d>#.GFU'A7M.V0!HLID+^BrF6p0qoYFa!l/L?dRSh<n@>H623&Rt[^Mrq/>n!-TM9WbTj2Ei7[S
%FYT0@gVhtiW%K"+@Vd6#OMfhCX)M[O@\9)"&8[_#]dEAXPp9:m!h_qu&4JGIo"g`0"&jFE'*Fr.\Y7TN?e8E*aQP3+HFUSdLtK@&
%BXrpK?4-b5G/C3(0F]lN0jtQR<A*R,l''58?okH4$Eg8(7o$@s!Og?l*TgrJe2<]C%1<3[<3'2F<G<\JX6/m"8Rh&gJ=pulk9j3B
%]FcQ8lUHPqRo+8%Te_05J]qdl<,P1Dp.jdIFinHbLJbNpM%T!=DD]mX.M2q^C1!Y?!!X(qo!"N\0/Hc^LN,+KE,ngb'n%f8YFN#8
%,OoJ^Bq+L2':WKBKPVlha,Y`!G+RcPW3B,u.Yq.(!o)Ui`k>KtE#-E'>,ff-2fmh!=YQ&T5`ATURnVa+Gh2'sGXL'.W2`IRVLlUZ
%Yo7@rSPpIOb_9n3%P74<-"P+-ij?E(VQFd9YB;KRDO`mOm&F,u>]jXd+5s.JW0Y@*@-T4J;,i&SYaO2dXgi-&Zq(>iLWqkqS$\5'
%M`H@r-]r29n[G?Gd\U.C`N4s1O/)-VU,i9#FX2!1bW?gfBiVqq@JOV27.1bWJ?Y/0qDNFdh:OFdb8?_gDW%85_s.C@5ECHdVl:"C
%R.\^":-m0;ebCDcmA]=UF'(dB;DE$A*).t\b)R709rPSah.CFg:DFPf(6sM`Qq/_C)1gIZ)h'`(G.=45.lN)U6pH&&+';e>9uUQQ
%7ek/=eBPuj*Gp?p'OqjV7@(Ds/[!@bGlUds.D8Xt(_uWjmD@j2Ef.F8d7T"eB%0@jR=RX-p*AOB,sW]u\_8Tg'5&7C=TpC>N74=l
%i90hm%84U'n&V@.$oJ\LPPPk"SDb@1I9Uis5HV#Fd;CCiSu/b4'EY1u&sAo!">f%6pck5T;g,gjQ8`$r?<EYuA%>+k2Uk'VDjF+e
%`Z"3pDUBR@H6<=N)32RNQ>oTtjm)c9$#=1R;G*P\cSbf0gaY>T.2ilUX@krRl3>*eVcP-4Bki2V$)A\U675N!DS=n):Im?fDk)+r
%!AVLC99PY85[b92j*`1;]@ltC`A%fsmUTG/BN8IG3%O4pNe5bK`D+4*d1%=LTnI12-7YHB7\QE<>?(l9.S/8MZkMBWO@Yj`*CQ9J
%;Gu$]EE>6j-Ouf_e@Vr.r$n#G0_:g&27D$d=q\Z>_Qho[#Fn\Mobe<7FdkgD*5\r?0RmEUB%>PidmC#S=i*q,>SIE%19_RQmZi2G
%6![pq-;"<F!OQq]Ck#jd(RoQbltVK?=A)SYHe9L&BGX_9U'<=B@G&FZaW/ga)k5?S+BT3%V')irUVoOJ.AS#-[:7OoAm+]@(6-X$
%_Mm+SOU^BVR`Md;e%Jj8Sp2JuR7s;`fBK"[@sUkNWetZ5%k2,79FDKZMUTh]l#iF]nE-EQ+^IVpNlpu4pIC+&itRAg%Y`$X#SJ&1
%\6H;RN`B^#9IZJ!q@#cQ1MR9+XXKd)U3s063K(Br:5^h=_bF<8*1[=gR`cYPW34(%p7SP=TMOo]#jWB^PG\bRW;*l_S(Xs09VKF$
%PGV36HIWC'TVtg7fKoA^2\'c<=1C0`DX;*nGS:MR.bU\pL,AOVetbRQ,=&GH$B@JEpb(ZBZGM@3Tr#7WU[Y>g@Y>6r+A;uJS]B:X
%5\rr7ZfeD@7cQLu2f8^[Ye#ht;Bi'&.g4<iah^co8meKA*M/m*U@D/r`iXA^e5B/59-Zni)7>-BA(u6gG"iV+e@C0&;1UXNM!\@[
%+&S+<=p.O3@46@m85lq[AK3t`C+J$sCk*GI0!,sZ3EBZ&a[FcHTH*:?h<(SJhfKf`jZ%D2,;]NSO%k17-D1]'bshsS37f]$*S$(N
%j^j*/kFhaS1-`//`PP1i?tS*8QE>\tAi%]*k+ha"jDUPrc86[4^-r%aW0,@B$6YQs-ha_Ong7?s[;]L7O[#>X\_3;"Y)8d+]/U7V
%%aSaD`[Nhsi1?d@$'-X21:_'05q=8lU%Vinm!_KK=pQ`Zckt`#J))BUY\$ht-!Q)sdnhVt2+qYfoY&,,aP\2YPg79G*'B8R+3WdV
%`PBUC1u,h<U!&ba)mNSNIYh%$c;m55!tb^X%KOcKSouOp?`KC'5q<d67M%O(_%1P@!Y-,X8L?;!WjGcoB^^LOf#1%F#FCs+%%Kt#
%[a%V7=1Guh`M-/J5aI^_Kb%An%72S]<P5(%0^qsMLE2"\p=:!:@mNc5:U;u[=#WJR)SUo"<teT\35+R6C"k[*Ym[V2hNNsELtGj(
%Tg5CPVOQ6rFXaS^K'nTH.Y++[RZ`i;Bd:s4_M(@'%,NjpZY8f8$'*TD20;kiS7cG^@lc>&SHB%,1GEmR6l5i-MH(E?9Qm=$9$=2O
%MG7+2?Sbp/pc]&Gm+g3'GXi0h`"9*#7g#LpTTP`-3m/GKlqCIdQ_IcR!tQ4shHZM$]%OM'[A-97c`;O#h>'p=HC8:?0L@hRT]4/6
%!2_YQg#`_4:j9TUb^tXB'=MLAf`3TQ,tpifb[INRQ]&;7n'`#P[I<"Ya7GBC_sk`.3^nQ8D<WO[:tUK<YWNW1bf!LTUS(NbRnH&u
%5^NoIE8@_/ok#B&[bE*7N>?36(,</(<U\LXW(#H7Mn,mX_c$qu#oY0Wd8AWr=PUGXN42sU+rFN4*4',5#Z4M!Mo?B2.V:(*gh3PG
%@J,2LE`/ZYFRb&oLEp9U>QO5.MMA>`R1'tNT2.r/Zsust_]hC+D`Ogb0FB%=:"6t_N2CR%>[\Qr%[Uod%[HJ;AEOs\`[DD'N+Ct:
%26.sbfUC&Nl)o+UZ:L?WNWsfhGnGpZ;eIjN/WNuB).ZsP[[81rZ<[3/%C*5m*J5XOL@Lq\KSu;;DVBM1iZGC@RFS6WflP`3L1WPQ
%O$<q>6/",)S$<B=daX7+BfT/c<ott,S0gE[VD?6p?*X<r1cJbS[1Q`Qq2r[7;*F9Ia&`,Ia0_8HRB3=RTaD#0c=B*6FQkA4bL$TA
%(%.20,Xb2c%(/QtV."Z^i:=rFUIM$CE-b-ZM?\Lq-;:$EYZL'ndOZZ4LIs2-4>U<mPea=gZmR->Wm9^c>9B]0leF$@,#o'YU;E&K
%=Vo$]VIHrl^nt0_X#UTucAe^8ajcFU7^W;]3RG4/cHaR@F-V;g'S1><*66HK;@I]R+B^JT>!Ii=L-"qJ&2*sh^b-pcmm<luHl_,$
%C]P;",bcm5g/2QV;Dg@d5SFcGeIX^>:5naL[.J^V='-cZUCVulZfAq3N-\#*(So^;.CVp5.oNVuhQCm"4l;X$)^#8X>Z(qi<^"T2
%q*5DViY;AhWdkB?=-aZ)*m'Y@2;fH7U3%0OS>jLnEFKJr9J0AI<DApJ#]Ap0Tp<fb==%q9er*a')kbjSW/D;GAp)NZA7Cpf<gSmi
%1onbs2IVE.R/4AuG;Eg>Rasd!O/;3CN<f'TXPO1SrF-O\*("B/h)MQ8J[.eIN*F=rbQiDZC_oqU=JEYHX9s7p)BKI6hW,l/&0@iK
%'(JL'V\a+[+U/d"_7jO(W'5L9f`74t=S0qu,BNsk@&8[YNU(V5<TudN?>16BrM[gK<6l^:E(f>Gl.nobWMskb@WKL'N<I]l+"Dp/
%)/@r4C#702$T(6e2AkHGe4S7k3]_YGIO#+5(sO+k0f%8!g$an^PFDa`8=(\RTYZ@Y"BI&,JKDlM-m7rkDE1(p3j4c_HWa<D!D]P"
%[FE,Y.lgT#hTYW(j&c$EPN;)UWpWrr/#YQnAcPE_qOX6pc:*<<>$u;eiJcS(UEAU\aK7g(;]5Y$RoM+TMcg'T>&*0Nap\tHU0]*,
%3eqG&qWtr`hXbh/X"1d19%g+D93)HD(/IkepqZ,>aPP-E^R^Q!hQm+!*&;(3B=Tk)'#%t&R[[I3la/_ok.L20[$QV(V_S5IWplV0
%o$UEX+U`&YW9bT<?rZag#\$drN-qNJAA]t`W+I8uZ]S?,<LR'`C'[!DQr12X=fASRDF[Ks4`M<t5W9@E=qKFN:hZQM?4F:]*puM+
%G@JXK)FR0MYQ`NsK5JUpAW?=KOtFB`"H%d<kH?-uB=*rBTK&(pgS_%%/;&^,ki@o'f;VtBKMW&u,I^3@N?eZ:AOH6/*If&!3>NO[
%]6Yl^EI[refmD?530#4hpq%aF+6NO['9k)#FmZ28Y;V!.,[7mb`$OZUHn:$S"<e?m#k3A;[.66Shqu`&P>sb%^]6_eU*T"r,c\3=
%=]K`m'%^K(T1=0jmXhTT8S*XP[E<-jo>nO11-)YPK-AeWh*YLi'W2RreQp.#(sVf89r[O24Mo<:?.RA?p=k*#L47"0:Ir2WD\+*_
%\B@3G*6k=@(_#Q?EaBFKXrj,D_$DD_NXdURQb)@$]:)s>fOatgS"UDDO-,*`7iri_CN&nl"p(4>X=Mg@,b=b"P;e:8K#ZNVgSBM_
%%B2,)PJZ`>lA`i%,9tcA8Y%rbe-.WWRo^&'q/d=>X3H#H==;VGMp/0B`j+31<M^YZW5hq;$_ZX]1^3p\l),.2=)4;P8_%@&Rni=?
%00iU>%U"SGB:%Q+jQmB!Fp5CgZCkm6B[M,C;-$E?CmNV@=gFf8'Fg6\^ia'BXUN`l<mn7`fq$^t%@0N004g'?0S!''%YDerPACX^
%A##6-ETG49coLTT%ZL1GA?M9DVOf>s*0JL&M7#r:*XV7%"^Z2lm?kTF-U-3'Ur[3$=ughCASuC?fg:G8SsFc!ce1-1SA"]`D+@J@
%i:#40Z.F![?L4KY`rq^UP"t.QJSX*r,BB0))nZ@e@EZsZk4UjchQ+<+G9^gn=EYgB.hsVJlpKY3[Tquq%e"r1WKr0^Bm\$@RTfo[
%k&G<V(pFWUD(e:f.N@IiY/J`R[\VNH0gPH<;&o;R@pcnk)<4$C2'Ungm/!@^l]hLB/X9R%6j;/5^Ao8d:'.?@FQ19\%J4D#c"r\;
%2&K;;9J:\7UtoLg]Nse/VpZ`A(Fe:_k!\L'Hg=)NjB]E;4ebI*53@#"iO3"kC^^RTf`RLk:!8j>!3ntqf7"M,;kPJ;BP5$<W9_)?
%kAp^s%5lqojd;9lW",5Fg\C#kEOAq*8PQCtOL:^.;)XdbN>Yg4^g/Ing_:`DpDc*'%EF9q2T5?P2!.hi\N^/`Z1Pk<!4-995Jl#D
%pclRg971@g-:A6acHc\o:X-5MHVV4^YUg5[UWhY"QM@+_$mpZ6:Gulj%1(ZcX;*%-5_[%KaCg2^(krMp_7(h67:kQO(uC4u&2828
%<`"WrR:/+Nq]Pr[BXBU#?@mIj.!3_,9hf40&SF>)2Q349E2^R%9CA>6C6s]q'IOh3VKr<#QpSH)n_h4^Tebus3C+l7(**UT17T:P
%e6sHeE:Fe)AE5E^oJW+I3C"ciB+]nUMaS3Yg!XMqncBkFHDRAU?g$^R)m<EeS317&J3f!A,O:=)eMaTI/28GS7l]:3?-A1HZESg9
%V9s@\i1*)@(L;HoLY70n^;h9Aa@4'AWa]Mu62*pm=eVldTN#\mC?Q>^g'7@Ue=WA9_hnu*&=9L.(7(!4#T![b!kUL.-S2:21XT0I
%CoU_p>Rs2jiep(=3/e,.9HrKB*u^e?Ge"hCOet_462*2H\C8&n)8!FFbc##]X,bb]:i&+bY++/mXa)3->VV\_;=uGX#-Z3r88s,J
%R!3]Bl5F6mfk(7cegTLBL5k3q%V\p+<J-QGVeD2[9<FYTM@LSqhmEXVj+;dkp4@I<G<f-;1GeAce=-[L`ak3P?)ebG="kTNFJXV2
%F&X\PBCJ+p8!rj@-B(1(h39^45<Kro[3,qcBNEJ3X`eU8NWel%!T774#u!_2Yl.Y9MmB(=A4*mNm_'\!><mkQf!3=,Ym;-&[p8n&
%Pt_?akA!\b#NuOuFXk=eQ8jOu(:g(DZ!hA-@]6L&GfBD:?![%k.1"n1EMa"A@fW(_BPWRd^*>bS&YMI,4_BQ\%'9i]nB>>[k&"Kh
%71L7t1!T-:dBSLJ=OX=iUof[;C^lK2>u!QZFZW%s!HA`@fO.jV#[ft1,5@P(VO(Xu@g5)Z=ATPfM[;ao=?]'`s!f]4/%WE"C4Rd7
%RPC)KhR)t+"*p[l?=+G3,-=F5a7ukoOiQB-aroC3)BN3a>B36==5\8Ja%-$`+dl_iCIf`dOu:D_;9isn0ET*$\26R\A:hdJc=]PZ
%i3kNH!"kA$dL]D4%d_#<)gsmdFpZHG)IC\9XJNeTYZM"1Oc[F)J-1AoA'p8%PhF?IX@F,^l83d,##%l3/95R7"Z'jX8RO+4/jnVA
%It9LQXU,E;!hJ\Vcf&<:SQ,i1_@3^gmDeB5a3Gbp,@`\O!Qh&?olr!]2A+r)"Mo`0^C12E\[l3M((hu6GpdV;%%=Ck$9KODS^l6b
%lE-='Hi\ZEq]W$6K4VK[O4O<s9a.0/@#?T;r^nu.I@((F1L.&piG(4PEY%"`F?(N3D)@WTarjljjm)$84Gr$=22Gjk6,U.$"Dr5s
%oFTq_e[lWR@'A^b[<iD\?)7726R1l;\N+iZblOb^_>IGo3Ued2Q6+cCTUn%9Nhe(P4HLTp`8!*]c0I=Kp0b^71JIR[Mj:#L4l@Rm
%:bHK>dQ(\YWeUk)/[2,qT"a6XkT)2(>Jma85S?c:BMeQYT\cC\Dhsdemg:T8*#t+r![CeXa_]@EYsBLCK<pAs'XE-OD].VA([^8E
%;.<AIVIY<'.hp)d.Si%m!7/m?$mipGJq2Df#'-XY^"M*d?pH/qVIV)j.2ket8!pFbaT?np"kFfZ&T0=S2#+S_EU',#?iZi)-b6gR
%X5Q/5@6F-.m'i,#"sLc1_DZG7U..]8*=_>O[?cI&/o"[Si)OKIRYiG$9AU8C^ga,LAl&#hNgD=jC52<+EUm&L,G%Yi+8eHn,kGA?
%\A]@j!4$B$$[F[#f+9^;^$d/n%b!L7<tNafF:;l==.?eYN.NLP>o[6i7_q(6!4l9)K#QG*F8R1j6sQR,07./Yo`Mm#$jNTf9Pgo@
%TJK[c%tm"c-#4G]b/fgG^MbAoTFo"Y)Q+XG=8XJ?+P+%`QpF+pn0]Co3)5Poc>/sdDV1&.1JA7d(t317`l6Y<R,u6E)UD5%eN=,-
%D29U>hh7rt!3?>:@E(\?U!rH-'^h09MU81FV;RpF0c@SgEC4.)/_kcRD:[u[E*@p0B4g3mdG3)b-r+%l]`lnj3-MeS^dWJ_4>6ur
%Oqk@R8#m@kZ;NB<KuU@3J2Ut!"Nb,.&6(S*N$8iaYbCTs=cG1_!"MX:>#SmSNg7oEJ.;l*.r6^i#7$'hfR-hrJ13/c8>T>32A7&g
%?q8mXc:*Df#6aoVpG*V_1>pes-F+pUeu?KiBS$Be2=I@Ei$FDp2Fj!dqnXuWB#e*7@h6"]BQ@O)ea@9S)P/m@?>HTf$dMOaaF^k:
%a\0eW-]lT.SBsuZ_8rk7Jd:\6U)DKa7r*sVfNB)lf?f8=1$o#43CIk['7bHQ)Z]_UL%BqTdK"3TXNSk0d9SaCS`1raC+[P']BuMA
%g;Wd1H1VQ6GmW"VN\t'&D<n$]g$u\[.'hcE4unTbW0?760,jfZ[5IcMUiqu<Y,0>_gGTTm=eMe67T-=<5(AfGZpY-ock2Le!!5B?
%cH54GI<;hQ"R"/o51_\Lf=_%1p:9H.*!1C+Rr,R\>=q0lji88P^>;#.lU>$/5`:"2j7R;DeqPs'Slr_&PA&W*B6:NVka]@lZk,>K
%SFcA:^.LTK$nQ][%?l^iM[O:0nn>/[KjjN?\'D%"7cu=be+'b"(?a'O:1/Cp2gU=Wj+#J/?+"=sZ#fJVUA1r]UA/.j!^+o>7Rs3J
%rVdpBrYYqE-.qa*C<Yr7Io;bTJk)7i9#OL)rH=#RRJgPr=jr*l^cgkDZD'T6]cnYj_DfHW]gPN669qu5<MkJQW"LdUZ#:>\b:iKS
%W+kf>)_tgr9<pB+m-\(+1fHLT@'V?uBdPh]!2nG2XPI\24c_uS6kq_Xb;d?\B1V$mZV3=RjmrYOg"2/i`/:Qc(ICJW2DY)I)hKFT
%LsIBU+<IJgQ3mM&r5;b^`+3Y>U7]AmfFtBpNTM_mYWAL/\E.A\j^9ZM!B=".glH\)()thb85Q=Lo"62&W$6"QR7NQq$RrX,(87.^
%?s8cD$!CSdMT2FO,d:HQZN=0i'6P=N`GCBpZT'DP+"T#BegB*.ANZSUhIkR=i/R+b@V,aDrI2QVl`#j*]u"2@<VQ9o:haH=5F3@O
%c\g;BK9j!A;_X.unWb*Q%n"Y=4pfV!ZK^%0%rW>5MDSsK79q"BCk;Vjr(Ku%,CWtUg2L?a8/-:XU.>,p8#5?;=[H8S2c;0UZWpJ&
%<L_3Z-BkX/95$"jeL<N]P0]mF*`<d>k::&N&(NP\@iAMa_%=E8Ag-jLfZ4'j.#]9m*bhXc(VldPi+rHS3='"Jr^$TT'>T&DJ-Qb'
%aTO;k18k0oFOhRb#L(V(!Z7Z>Of[@r>X41W'>W-Y';;ZIToErG."8[V2#fUKLpT8X^`ZSM:"FUri,qGgMV\n[$2nMBm["79+jS1B
%ldAA^>2*`IZG^oS=%r\,R/jB:JE+qD&atN6X<!Fb*E3"t,"9#@!0/OZZO,Q#!]ZPI/tDthrL4(#6F_[KXsSZd'>V&p3V9?Y@&(1h
%dB8$#?:R]Vp^"^gXs9**X*n>K!3`5^G%?lUHE-CQCRA<QG60aIK!lK2NF&(S:*tLH-@iE/i&h[g!sERX!k=[!B))XF^csJjD5]lb
%;JsMl7K9=eDT"Z+!7!'E/[$Nn>=_RbF3$$a9`QOS^qg/X%0L0T`oej^Acd5C9E!4%LT=a\YOX6AlV@h]T@H#P8'62gWkCAo6aD((
%N7[JimWL`n)!373=Wp7C;aA4'.JN:2.R-m4UWaI797/c8V^BFJikn+?1a+$mc8&W$=;QCXGs7@KT?MKp4?c\>ZY,[WR8MA!%0m8p
%Q.Qg--$5C,#.\<f8-U)tZ\<QM9799;2r=:2>hPFOC/V%=ilsS5C6Fkt%TPi3.AMGMXnd(3pm$Rc%DmSChWpt2rGsRf/tpr*U+Xh`
%&'X$0)-%k.K;9ZbTNkB(L)CVEj(sj0*h(`_YSfJ7_+L#RJVJOa@g"]9p#4#Ulu-_WcoH7gAt_)@]j6VGQ_@[fN]+Kq-7oWn1V5ht
%-$%42EsGI[_-6mJS"'Op'X(,</4!,!fjrc+Q^VO;o`T1jEpC^TlX<9WQ5u4n>2\qcLn5'gD3b-=)_M<jV;+qmW5O6n4:su:1U.-N
%1U/.-gPe]#_q_F1G)YXRihTZhS"Z8qbDb's`0O95VPO`363>`>'Qq5tklI(O6$(.W)DntXic.5]#ilcr&N*o/ATNHM?prB,0H^EA
%)nI''OiK(!KkB-[L6`r*_C:ts,.GTb_p%aMi/p\on7qChSGl;HnsUNaN!OZ)nq^3)"so`,0,!P.i)99)&i4C2h%Hu%SW?/)>fHs>
%MOF`FjWZn/6A2]38ghtK8d$SYK`NM?eiD-aCjW!G]g*.a8a5Mg8"etlm6"SCB_#5eXEJk'37%ogT^J_28>4lOS7t=8J^FP)3(58<
%@3FuB)rtTekFaND<1V1uMOthm"%XbCU'@u8%:*4#.-;a0_PN7Y&S1602iJ??7RYk,/&G&H=J6lrcO,SH(cZ.9r4'VB=#dM&-1h*H
%%+ZBjqPab63lk!Q\rULB5XoDHlbn1l-s,E,:E[J`_4=VJVcQ1MObZs)]iQ%r9tI4t<+gnH@[7;)M)_pt1Bs>N3Y(YAmb"u'Z(]n2
%eN<u:'=(UB9q<Cp769F%BAu5i7\KYmLMG,P1cuC>!R=knFP;J20L'k,+AAs#lJKj*l903$j]rc5p"#GH(`VhMR'[aHb5hL?Yb7$h
%>og[m`9@khM-jG7[Z*Gsff5msh%&*=5rH$CAW[_k/u%T.jkq5K+q7M"JF>@%?uR\]a_j4kFLrb8CBa'\LkEZVEOM:?X)/Y`G'?pA
%EBogrohm$/7UWBBbrY5K4X>3\fqoJ&-]a!7;%<15dR]5SYd5ULHMZ!]L$:$<d8g[QPL2R6[3Qe3dmRL]ia.-^fPlRGTmBm`S-$2I
%Us<<7gO?b6j%7$>qgrFkR+hW)0&e3l9UDUI<PT]Q(!u+A?Xg\19$c@'OMVDBh1_DED0hNsB!o;!'r?KF'R8$h&e@G'D!B,)k")2Y
%_V#FfKE,'\HH>7$8s,<X=035A1Sa27];PIj/A5/OZs<L20ZomKj!o!kMkrV,f<s*\[!8gj/=)P:/]qDgciYL7/\/qAXdUKIQ")5R
%k-6Pd<^X/t]n9b10+l5ZXQ':nJA/Id([]k\/Zs333]@&<FANNqmG*5ZSUgj4Mg8E_jpQn3W1UVUKG[Sl0pomPM8W'i"D\u<:\?8r
%<"Sf?JT4&C$`h`6Wa"59Y(*P&b;4Yn;Q5H\-$k1ce*C!MEmYTRR[R6Gf$cWa9t35E5:OZ$</d5%5Y5g3</7EQA!s83M`*I])_<-Y
%5A@@'Rq'1X7,NWn!U'_WSR"g[2#hU6p/A9Flm=]j(FTk950jGDd$%+99ot/J,&4^,=[faWlZ\mrqJ7aW[WOa;Y%@CLe*0RF:]o"\
%7Z7Q+4CkrucA?N\Z&)Ys)&:`OYhS^dC$0/R#10qEht!t7&RNsG6\F)5<$+VQ"cij=Fi!,d_/SWjDp7@H9ecn>ou1'D>GUP7duBdY
%N]uX3gYBsD.6s4T]"OPW<l]<r`9BWH+hWFZY7UiI7Wb1s?eI3Q=`5MfE+&c$D<qJFXQE83Ej1UE?l4tphZ^]Ycf5;VlBY2`"NF0G
%G1g;^+oP5?Ut3g<8<^m<1=32mLZcKgdua<V3[[cSF5kUJgTjPNq/?D$B^o_uA=[6MQ42Hl+C%Vt-:GiBIF!FCLd".c=tEbC/r)SE
%qjrFs4/dZJ]FGMU`&=ogY'-Q*?EdL31*`<":X60cFkMsIh8aFeoqn5k)sG;#1ZBs2FR_g=E)n8mmh%9r$rS-J.T<!BIaLT"f";Oj
%X`lBFoe'db)tT3@q^DVq7c4`n=bg6<7dtR&@SDWC>P'Hgm6SkZ\&n(ZGln2s_p&Ea6i#L+kcf>*PY>=NTh@cr4Kikd61]b`;)1a]
%$0rY-grLleSU1Jt"MJ^gP%ofW;.8Z0(^I^-D4'(N70=uWit2*XXBh<j]cq)W`\1KL#Eu,Q:u_/nPg$*V5^*@B&0Y0<7")nj55>c;
%os#8A/@ktJpI.sYLu`O_%:(f;5U]e84iPB%BJphSUm&o5hp,`+X5Ye#k+.<icqsm/M[-7Cm0;0t=LUA(_@>4W*c!D'Rld3&-!263
%4Hch/&p?sLO@AP8!^cRG=qGXYmjedC`(^k8.R\u97E=+5kk-VQcC*g",5O!$6I\7PhMijj<YpR_QQFH#_pFkZMMKP",i2c&lpk'>
%,0sZKAgLWGqDoZS?,s+-L3>[`f")Jf)kY*aF)BAIX?KbN9<fEe[@]46.[f[r<kF*$XgG)C*u^H_$MS[tW$G6CPr7<L[b1]c"NQ2F
%i47$KWc115+OG1tEf^WA$V*rrC=D*#-?@J'B)?24b=XBmXqq6)E[Yo.?TqbL#eheuIaD+_dol8GcrNNTQqS"UgBG9U:R2?&Q&R@S
%#F,>'K18eD&7)BaUd<W-(=GlhYG7.0nt^-BU8Y=!<mjNNdblA"HBbn5&0$]4>#>&Lr8LD>="I>d_*gi>,2t;4@_XnO`).ATO,X6`
%ZRpPnl$DR%[Ln^ZQ,QF].+.._c3[SV`Z\BIKbh-,:9h`ZK0k;N%K[B^!RqjT$W\*ZVUYuV\*9D.+DHhE=c?KX-Ij!h.,e_#9=b9b
%pLVO(\i&Fu^2HppqCo@RLi'CVH\i91/m`DIK@To]N,TIJfZDMBP9YjLOBkEIqIqTd8WT)='aVtSGt<)bX("%"qIk`s<CmrnQDB-/
%VC=[(c!Y7Z#7WSX-Kn*P-k`)ND,gnh@%W]:n1&j/UT)Uul!"V'N!d"PI`!S\pHhAfLn8D1j(EWKf;oUnJ$+g;Rf@MlG#sR(-*C5a
%d\LQ:N?f21_WV7[#PnYP#%Vsu<N!-Y2N!@*,t4RIMjCbJTTN7nG<om\M-X_NI<OnuRcsh[\tS>E=u=X4cpj7hf<7K"oR3tc,e6lP
%fSI7L=,11uh0:`gC`1LH0"brC+DCDIBf_u6&PsZRLKh!;@\]`)=JMZ!Tr^k$.N?U6QE&F3Ab;:O"$HHE\s"pu$qfuY=SPl9Zl''8
%:,d8lCJil)5_J6jZ[9Df`#=g;FD\9n#E#iTFG3X24OT]M&JLZ<pg*Ci*!#Eb$tkNTIXnt/h'T30,`F::f3h>s9&;G2VH@hT=a;PU
%-cu@PB([rRRIN]Y2CD9T@k?;RfT'1P=']#a3pT7Oh+g^U3Z2"S2'K(,d7HE5'<+g6.)1*=T/F6LFalhMMJn1X/SIZl!GBG'UZ,Yo
%i7^Ol2#@ra:Bg<O'0Q_aQ!k=Cj.ScE&tGa=NhbqC+[W4eG3:Z,\44"TbSZ#,J-aAP!_js5+dtGM/,Y8u\UqC*30AfG1lSG8(E\1i
%1.4j#=>OTW-I`:>gsi**LoO,lXu1Dg7TD#"%"hQlbT[DkTe1.m"aM9'g42:;$lIHjB^L1jRoQe%juGne-$^WEn!8&sr#E".J]MaD
%oo)!;)u9X'"&[clQE_&!5kC^F7-*VXU;2^!0f:hef@M*U"*:m-FR$f/je?5VV1ott-7U7_J)gA@atna"*<S\pOAgjhenT>#!bZ;A
%QWGgYY2W'FaCq02PUd)dJQ(4pIM8+nN/)S6HEm3;@84d9D%N$_N(.SM/$,(M,)W+7M:gP?P@*(&i2k*'77fm+QtVDW/(iuU@aaGW
%&EWGSZX(8$.#G_n2T?p))4#WJiE:l6F>H(P:Kr_e<s$[^fCEo`\g[t:W0UV1[Cjn0qdr^+2R7WA-F&a_&%,RSerE41Y:qm7[#1`B
%_NcC!J]K^D_5Nf'2DW/$@YfcPL7<%C&:]lqE:(a-F^^q\;Hj>.#"`9Hh\4^-)Lu%?Q7P_`.XCEiKOqJ2FCpTaSmbgDBjG/gIIB]t
%rg9-na,AVCLgm,%=tm`1_3QC<'TMuR^=Q#.\k!2<(eidaTMe4I!b[f\Shi'4cnugY-Vnj,(4"nA6:fV*en#h_^YU355rS<DX3ef9
%9gltAo"A$HB=ikDEPtpf)-;YfUM+G#K";.GJ^B&!%eF:&%I/j<VdPNs8$,l,k3UIt$5Eg_M?6\R2C_qif?km0KSbF[EJE,k>YPb9
%\uoF#[kNoD/lYgd\t,^dbXHLckDdGIGB2;=3sH5LlGFb``(4aG%tVY44Tl2!/ZB<gQm=Jad)aJL<hHLn0kbmbChIffQkN>8PsNW3
%aroB..Yn>XXt^.6A(+?j-I9UC;:D'c"'\^8?%R>[;($*]q0m$g\ePCh^sJhrk(<5V7/*'pk:H6>kue7YT#a:JRAr=Z0EmP"VnsKP
%@<n&8oNJU:V<PmRkfh1;9outH3LQmB2]"aNUUmk(YjRY5a(\pbBY>X'dnrp$TK1?h!4*d10-,TRVOB1_:><)?ShXihQOl$*(DTuh
%W.lr0[`0K]".%$5@KGa\iS-^W.3lh4qS_P,"ABPCS1iE)]#^bHFJftJN6>lU3iqFZ."=W3nCh/`fne)50ELAbEJUK"(8$^><\o1;
%[iG=o65d_u@MPonR-6n*Z<'=?V.s39f_Mmso;S&cMKj-?Ro%(mjclJCD%!,Y3CE8N'oS&4o_sbi3k8s/Vfb(-7*dYM\7d'R-B2br
%ZZSC2Y=f0a-qY7$&Q@^0/J-HB&pBj`,s8Z')71"@Ra=C8Tm<,M@Cgl/b5s^tnefTgHkEY9d,V3,n4ep-C.l1,^B7n.=UJVd`J0\a
%+Ih,lp=D9_dA&CeHNP=Z'Y*R'?0Oe<VEW:k\eK64MV;fY^k>*L\`;B\JBTV"?!V0DbHa3C>2Q#^pt-ANLOiMe<pJ>2%743u6YUA#
%fmDCi]<^.s-!4L-)RaA$Pj/r`Pc`m+e#sR@/qZ5#<XdkOn_A0'NKm&!(3gqY%iIA5!R4?t?jRBEL1=o:CiFV!%b2HtiF0I\A[%Zj
%8e9LO<G97Ns4uM;h^I;g2</r2W/MUVVIn`\2KE]/&'OVd2'JfB/2l=>TkfM&P-i0]k%@/"P2.9OooYgtP&..`\^9SbMb0:p"R#`@
%S.S\l6sCBg.q5Z(V/MnZ!BT[aV]VuXrn50V6rFmGSb6#P6sK#YN0gqW1$e_!U,q%M0P330'uJN@/7WNm<kV*>-&?M*\u(cp3EcVJ
%.18SPneImcj-U1sZS"`*CmGt"*RRmS'\V)+BN=Y<'+CAX,,/(!K]O(Y:5H+^HBI6_6rSKP#^[/k<qK^O22L]g;nWc'P`DlmoTC+%
%Q+\h@:#3kA8-]r*7i)j,eBot4-Q6Mhm*d'ikX@<s]gU!9P;"423Z<"ZVH8f?qaH4FlXh-Z5BVe2_P3f7j<u%:]OUKJ!3d+l:l^fY
%N#RhofuAl7<4B]n.3$7W<k;<\8s+!K/2-3^R&a:;);0XVq<6rk\e:ahJqQ^17&.d&Yh&uIZ,t[l\_[m'S4M>27C1MLNO^E,"#[bg
%<MFt16'LHrfg4I%\5c%D(A/Xk9_%Hu'>&3;U_"'",h8X5@$_2^Q-WlJ`@l@OAU&%LbY4XAGjD.R;NLhZ/DUHlQ_"=IccekG/]/+:
%C$7E!_+fH9(s)n.;LT@9dN40HA0.MqlQMWD/5OHh03rJhT@2n@-H/p5Q5.ZY9P(!MPndAEFTBu5U</Y=72/TW9!\@\hH_F+ms!+:
%ZHb46p(Q//\`#ID*<j09(,M:Oa[k.sY=WC4MtfFu^up$MVB(LE=Ji.<2C5)OFVM79.0h5XDj=hDYe7pV7Y.fXU+[([A!b3N,JKB*
%hAfp(]=baf$9VQ@+I6hK>%LAdVMaWO>aIbYTY]sJ0OrS3jj@0t8,3mtSSBW)%=!4#\ghKQ"ihq4_aEUL3r(P6!Y2B!krt5h$%3"%
%-0:hcB-^KS)X#TY0i=0pb+UInX9DFu6j]\$U08;1T?\uJ8M_+iK46jHBB>g-UN,e5";iPe`G6%4[u?'+Q!Pg^,84t@^_48^N%Tc%
%NMQ_"5<gl=gi5MYMnD]KOpDqcPZTc5"hYu@]iM`;)N.EJ#3ZmcjJ;4lpEDBq-d$,oObY\E[B/;'8/WXEa\+Fiq2tBQ$"DbagcYG=
%l_]p=lY^u?C[WO[3bkP-%X=qVMPtVP$.aGi6l@/4AH&5cd@Dq/V6"U0IG71'r(2!8UqK2`$kgL\6oc3m7Tp`94TehAAo\>H&*.7E
%NWQa7.?pBh>V)@a4L^gqe;%I7q-LCkTqF-EZ3YiTb_NJ\M8?-o.h@DIf'W,Z)%ft5%jL``51;X;3[Pd7]lnkkGb5nFJEPWNE]mZK
%#jK!F;U*9g?=iDrgd"s*o$h5dVjSa`:p%#VMXUcK%AF:[)rlIB>&(K_m/e4@"^<egq&-mB[PNgfQW@ma&>;gq,<8%h,'A7@,T&jl
%'%ifC#"`OQ^!^@D)I-q=k1Tg5.>t[B/CR[G8IT9@h<tt:\AA8eJ3n,d35BKr/YPmR^-YuJ1ZP-G6!;Pe[&j*79cZmX$%444fiRQf
%'foeH0X7Ol%5_U*"'ZqL>6/#G=C'T*3q0P`fe$IIg$03UL"fl''CLS2+qD7GNtG6PEY:)aFb//o[U<KY;cW$3CKrNe<5.(oLG;AR
%W:"OtR&s>ddYKl`d6F+k?-MeXV9.NW-75iUIB-8X%)3Ot<X-8EBWGENd/UNpD3sckTljKH2DCp[O"k8d>rt]f:C$+M3R".Ok(31_
%M%c*d'E$?cOU`"$4gU=t<IJ6pN6Wmc>BG\.8c0':j;*9GAms\m!BA5KD3M(X#r7Ai=Ino'Om-<_>!_k+]F8)O`67G,e"FR3Y3LDC
%8X]53m*-:;6'MIN=;7R-WLo#,Wi[):\s+b+q"&Z[6-HdKdP:'-P`-cN"&W`u1b=$F^=_nG)4fBUdG]m'.2ER6q<CX0[%o=T20Nia
%HO9YJRMm\F>iduu73R7`$7di7lr$bo'*g[u#b8jRk#-m4#adGp0atfVk0<#\T$G[s3g1.>0-&1\00(4kcs7=fIVYWE$e=,n)$W9i
%<>^?&&LsM,ZgTc6hTC5^ck7X?SMn?Me2;i65u.V_VMkTi-\AT9`G;e%r19:NC"6m9!kNq!l"j*,76BhRSAWc[+0E6rB-YS+P[:H:
%fmN4]JR)U(975;QpnD=9V&5;)hCTCHbq>esEaf*0'u6+Te0E77d8H*i%VR]o(ZHujEZ>7Z7?crV.Ios9o`R_ij*?W-8Y)!okf:2e
%7I)%ckb&3O<[,nHf]@]>fFt8,M.:9J5.VNZ%(>aS[)-B.7&a9M0aMt/!alG```[GZ3Vb89XVKuY.-D1[[O(QE3NEb_LH;"l$mR*/
%BfbumhNnh!UZ+ILH!_7tL]IhT<^pdkMg?_0,A<MsP%2fiU+&*5VW_K`Ld=L`#VnCPLoU<.%Y=[k*#*Z0oNe5)1bH3#BBi*gasWK=
%cV-fQ9l/*faTET@K@ASm^FsLd#tb>i&Fosh_TLN5dC<'Bl7<@F%C"fPGthmC\T61.40,5lY;eG`7L-3[Cro'TT!boUe`>!$McqGV
%f8-R80N8m_0.'Hk/k!%FcRRsheU`l08S+U.l";dIXp[UVI^SORO^8sE2+F<c1Ri_>k7g7m>)Y@9BsoFU#AW*k,IanZAD)CW-dPg:
%?C4CH2N./q\C;=n0V[YE0+'*"!]$L;4tpZC!>,S#ihE<D,bi#><58,,*3(IU=N)UTpbp*W29E\X=_Tcj0G)0ObNlR$M!FOB8)0<k
%9pcY*bm]dE40[<M3p7oH8[.J:2NgZj"H?R=YcOc@?AFKc`3nX;haSZ3!oca_!tV?E/11;NV$S<dLusmnFH,J.c%n<qBZ!T7$-a-m
%*qo'0bMJ3J]L&/RW\BpW&(*grbZNo!P$?A>&Lk<=ijLNj)D^bQUPG^ESi)1:Cd$BSC)6guRpA.jB(T4Nq-C8L`3k/bbm\LF+^3IR
%Tm%C\&J:Ir^K'gNk["cI#0$.FU)FdO\H4tqK2rgB'<4dr#3Hn/'3p1+lO)eq<NL=JZc)A>E<oBDN:qQCZKd'q]P@u*mo;L`U4mFr
%E-VRb2;8f67@/odb!7nsNg>;a-u4(KXCUqo$isBW+p0K:\j)%fXA^p/@#cA0O"q36B.-D&b$C+8WN*Tnj[4R)%@,JFQ'S+\Y5&A)
%As=PHN^WJn(>3pNg)17_pYKp+B1#%\1]ZfbSB^.?R#W$+,ibQFI+6junhiBT!D$4f\T)7M`pZk:^a,\CN7#eJ'"k=kB0r*U(A?;c
%V!o5Nq.I:Li'p.W'sGk>1&t>a>=T($'W#<]*\^PoV=%_^ZIE6(INAos16<!Fl5jA4YAn7J+k^*K=q>m$eMcP.X>Gaea#Ibn-IL@6
%OGF(P%saQ*6rT``KA'8pI+AO\%&7AIi>@7s0O9!VhGa]#)Q#B,H+`+)5`8c+>P^F&#_5:<AAk5h/Ru#+c%sjM]$X98W%1UGm:&R]
%89^%Y45qEFBjdZ^0Ors!O6)"*%YI2GdOpR$Bao"pg@#X!@pK5q]Pn7%S!Ab-7VGO"h&$`?LWc`ngdDs418h]/U7,F?M-'cZ>ZtnT
%R+IuifdYjjTJ&)mNAa"%m#F@+>X2!HSl>9![TI\-[:_lM7*LL)D%L=f291]AnuE0)8rjn]'2'.t+'TQtdHtPjS9I7@/N+S%OZ@'&
%#]LD#i!sjIOk:dpe\b%9W`2Ap+i<>jR015qja+#q<EI>Z5cA:SD0PX*kTilP*ihag%g.d>Um2KRn!2:#^YD,lZh3kUqfgNC$-$6q
%Acl`c`&;F,C2f,KGQdBSA3p3PEZg2p1sW`9>Mra$#/]`c];>cF,,RgD;[O*UZn6VZ,n8HB%2X@b,n5_:O:HOcWTdgQ"VV=qK9@6J
%n4#6:N>=Vu#CF0/b[%/^oB$=!bKq,hXIFOjS:T\H!HsriB<Yd1_6!1-,EB>(_)ap;ahc9g"5LFPhZ[:/Tdl-=M58@RWL5+X@&Ah"
%MEJ]K_#>fqbTrnaERE'Q+DOWI7gAE#X:1C67Kt3M3;HqtQ[*/n13O:8dkXs[).QBu12u#a;C2C?,0))D8DY:.8*PSRHo%o>_!H;a
%^@9+'?bNp#;gK6tU&ufPcj0qMc_k6MQm&&W]'%2bBA)B.HL9T9`)tN)7$gRqI4NAD5qYsi_RXG($q=f.c;erTns]QS)@h];+lk'#
%MM4]KB6%m[A<.4R1PD%@*irYZ`a8Q(O\_HSpdKi&/[*%<TX$^"oCRBaMJ^h+&ZX\65c+#eI][Y.Hecr(2B$(JP9OIo-0nUWfV@2C
%MeD=GUmb^=MM+3_8mk,!Xb:[`U*HKnc6JcjK,OIC[RAT:gT>GG>1Sn@Be?u^n3$i6AjbLF?TZX9k)SJ>`mAFgi7:G)*US2rkcS3-
%G/o1K]*%m9>=Q*g>-D\59=tou[J/_QQ7\XCqG=daM\42/l+,"@dIFo'ba+8s->3/BeAR[?20u2<)1a#44Qm\hhsXRHYM'BgH)gF=
%?RsdrpiSY`0qj76HM0C%X9gY8[,S]jX+N3:T#d:R&SPS=2-(.T)t(JBW0?UC@-/4'C^%?3MVUc$AX_n7@+.hg2>YZc\jQMJj.8@(
%D$KJIUSc4'4:0[!"#L"\:W^tj$/^,\'1,P!"6u0j=!hBkcg9&l,Eop;mt+jL^P6#dm(f9f9OOHiMf5B.cI61^WN\O[3MpY9L=YS2
%]DKVsE?m3gd'N2s^,7.U"nZ9WgK43S1OV\j%9IQ>HEi2G`?lER)Zp\YL'g>tCY/R]53JSq0?C%U+t#o^FQ+,HEh*[_o<+k*$;jpE
%mq/!TJ9Zj7?J%^RaB-;XVV"%s>d&eN0$Vusp33C.Rkk8ag@U$Fm<W[*"#+E*$B\cE)oCrThIb/.qe(m(\u*ZE-BE1j7uuDQf.=gA
%-a&b]O6MBt'30k.G$/O`mo5PpY7CsOD]E^(RP-*#=!s_XTI:BU8q>5d1^u^\A,dC*r>F'I7Us@2n!Y4).^!Q-cmW<:ZshS]>0q+M
%K29XWPs@BQlAIE$bYP\lVU6C;A#kIP;,j"(=V6MS=OZbH@M8$^UiB#-CTu:?!gA`[8XRLUBp]67/f`B;fHi<t0RLj.>#F(-)d+&7
%dYW_\8cu_77Z4*D\tV'@inDkG"qL7i#A@2t(K/NA)kt=0=*"re3eF(SJ^4V($LWRt@jdhkJGF<S)GQ)0[6KV)>=6>f<>BYsOL@[:
%Q^StjBmWgU4uTfiY\3980)=!L>:."!pQt_A=@%S-[mDprr[?)5+Y!gl#N%lu'lSn*D68MJ+Qb9s:G<S(!m);]LiBJ>U7,u"H3"rO
%@!6-MY&8r\\s4Lh_!(B+2,I/`348G#!0-s"/%D:6mFF'tW@Su,h)XO';RGU)OW7q6M5dmBp$'3().n]-=r'i$ZJ7PfX'"24CQ<0K
%QpIWd1b@%)Hp5Nk--(<8Y6ih:H'`fX3KSZCf*n&]W7<P%l%seEG<q"*HqPMNacur8a$GqM<)R3te1U7k*"Yk3-m\Y00*!"=ot>Z9
%ptka%NU>EHr':WB`(XRQF%`oBG6Kl`,EiXORU5k_XmaumTg_Xc3FoK=C9sFMBV"1s[r9/o::L]EB>]H@3c2/8oqIpM$@%*C&.X$0
%:Z8?keL[%&APf`GK0K<9k&\f$neIa6N6H0QKerQZ2@WEhOL+QCh,[Y>^M`-J."lAt+aa=%`n5eo6k'^("C#URo].mU`ssEJ,$XHK
%EKD,SNFm\5!)9!42#CY1:sT$9"]ejcAQtm-]5T-$m=]2q$s1)phP]3LZoE=Bl/g20)BGUQl>nN8`=C5?#N4N>P9(-/cF7K=@/4>\
%`4ZLAU>!?foF%Zo,8Xt1=N&*l`Z]Jclj1Wq%Q9Q8A(Ck"rd"Yh8'0<i$\[#k?(Z(_+r\s%aT1RWH24Wa@!H\dBMhr>idtO1d@/"9
%S6KL?(a2#u>ETe@d$2f8<QW41DkOOt#,b#Dma6iBer(jlLS^kNUBf&39NEZ:<9K%^YQVWE.>L%p=\ci94aGpER&*tcW40tl6rsA6
%&"j?299UfL_c@n,Qh.YRa?1$`5).,pC-mI`%'^#des]N-ZmI2c0[UU[SVSN7CB2eOESuR/%fP%]$2gP6%E>RgWkPra-g9-aF\DZD
%Rt>boKRBZ5?[kQ3n6!?bae=8+^n@)4)q1X<mB;Y+c0R@E.*KsQX;Y'\>\=j]`Zi!!8r8850ohRmc3FHO*5sA[<(e6;%Dm01Zuco6
%g+l9DSAmkE_gUL:&ZoWA\qBnW.%,19JO5M972.\'Q"K80<Ign5Le^`_eb$Atd"gpsJpQ51hMJD4nPSpNVOUYnj>)T&b340!UP,TR
%cbc,:YD#L>^[hI\B9]`foXi\@7Q9dMd]nX=*bAud"uJS[2KA@70'^kY6qN2/Kb`X0`e(+\BW60]VaCdq``PS0Los9+6kilP,'m`M
%&R9!PA$";'d1?oE6uhp(Dehe=It`NWJ5KUaWU,G;;XIF[>i`0a?RBg5Jd38B&QMfoHnK>sd\*eWJMYNm.cbIb%<@sS[Udr3@VjVm
%);Q08^Q43*iUjCKUEbqN1e5gDAjkSVasQQcC61kuFpAP.js'2"2:G\ue,X8bk<]n&#>5afj31s)SI.@W<a'p>f^pJc:/.et)gn,0
%+[PRRBJgmUI@\eO"LQCP'+^Yo\_$E<I5[M6%i)5Q_fN?s904m%nLL/(T_F](dko)hYuMfN-P5L$f%\8L]PoSM)Zm+Q:3ZnD-]s/W
%]jcSF:.2#Bg_/?V_.^qgW[V)gX!nf5Tr;'HqB9en,>@&mXT?^6rjkC;*>1?;N-K!<G"GXK`^,lurG$@7\dgRM'9s1F+ji>L?;DZU
%6P#@Q$H[2!1ImKOWa+SG%A9NVdcgaYP2LFNhjZu?HPEmaZf1S&#NS;tQ=r\Z8^)4G1_.p)P//(B+:ucL@\f;MKGKU4;&2>L4Y>Ep
%\&0ntZ4X6XK=C(Xlpm;2:H%7_NQiBqkd<E#H.PJpG"bBkKq3ACN$Cr2lau(84>tAoo#c)9I^/43gWAI:g,@U94@)J![`qas3nuX"
%G/=BL1EXE[G:/q*//H,FVW0gLM82R)>BD]%2Y<;.05fr@Dq>dr)BIeI<1C]B'>7RXokKn;,H2J\-U\]NVV1_9*\Y#`/$c];Sm]&)
%CcN+iTq=d>d-Qu8O-1f@>d"bH.M'Idg\h18APL'Yr<G,UOW1OBKa@3<=mWH6!UcksX]sZaA4%B'DE/7\CQCk'QEEAa'UM&p9@k4M
%UfIfG`YmDJ&_.K6=^"3;%X+[km7EtT%73J&EjCOZT;=ne7SZHk#%GWOeK%eM\et+BQ1ak3B[LQ\L3p>se[.be]tZSPBLko3h60f'
%`K$dCT'_r1oa3](!rm47CrroPTaE:mXjC<,5=gd+FH[7XnPE_s+_?aCK;K]'YS[r[SmWQ',t(aS'hJCB$ud7%aWeE6FH>$&:_"hH
%qWa;[E;RT+)9>:*DKZ?;GQPD]#3k-/Y`8]<Hl;(+Wsng'%8\?um<snkEuoG!S9.=X7nI-;*d;*Pp&VnQdej[^^#]h\lQm6;,%hbs
%M)a41^f_-T']-7N<)^Tb".^$0"`Ug!&/2[dG;Uk?3Y@k0hH?jMd"Mb+q.LScDP`?k]jjf=V(*)M(`?%<k8O3hEj%@iL`W4aZ^i6T
%j#L=GmWBM.6_fFr]5c;MW`=?LoD(A,p-Mf&*,YSh09'QW,t^#)j#*]Q'J8KQDN&10Topm+a.7tS:#[ScEom(H>pBl1Fb+#E2)W^M
%BOZ!uQioS4Ot9(A-7IhXjp"\NaI4L$Q4T`8WT"01(oq"2'o+j3+<cJu:#d@2Qc-QX"P#7<NNs8j+K3AQ1`BQ.X2q7u$Mp+;bVW7h
%RG2>$8(@[OC,cP7Ij9`5Zd;f`gJgPcFS55Pj9VO>i/G1qL[LO.&<nFu#s78,R@<JYG6>";/Scud'OE]j;$o-)<IkmXq'DnQAkrW6
%6GsH9qU*NTc<uHbX?cdVZIl[>q-g*`jUTZY&d-"b3"]s"g95D)cc9E8K9PZlW#+#$&>d0<eU+7;h;">sWBJ"`ROj3TOgFnQi&2bl
%j04>pP</Ychh8PK9^-`Ci#YL^c/Z=N)#6^8*9Ku]3)EB!`jm:J8i7'\J[WnE@;4(0[,H]!p0oAQiG<V6hD7RL/$@c,`&p5)K,SPr
%BA.5eT]PV"b\,'E$ZkQg&c$T9<":JkbF*P1Bc'mO5MG'iDC>.hFOAs#hCpsHV5>^4\6h1TSW1Opn2,(GN/:Zd)X%pqQPc_G_Y=%]
%7#slBJ;\9r;9]:p6k,DdAmf.u@I+mM\Jt&-+IZU\.+"jF88%!MkkQQU'T`nn",_o55\htA(1!BaYbkt<)27on,R[24EG3;9r%mAL
%K:D46iT2,j]\mgjh1`#6:?L=aF:O]E3k%\p_4a=V`pU##@?67G?EYcgW7I3rh#\7MMoa1/<[1e00/-gOc&=Mge_m;D9Nb+Y2*ag_
%e$]ln_?<S4g=E?"U#P,?Z+9kZkjsK29oZXW/_<<:^%fMo;(p5ug1=&S(JWN@`E'0r<N"gcb1&j>S77%-%Tl8-=j=72<@:2e9mn+O
%2UPg%/^`BS3c`+Md=mScd/n>+0D-p<NFfiD"&`DK-*.Z?3DK*Rm"7Y\`!I]DkmEV$=5+J.0IB3:0fY)%$gg4r9^s,Sfd%:hoO-:D
%CKue`<;O62;'KG535YO8RX=&p45Gk5J7s1\`t0h9fQrm6E:uHDkG("H:bjl*XG8M?%EI/YnBkXr8E!prV0*Ft77(3g%<<B;7E"Cd
%i<0>oHIOn;ODY0>*ZE3jA;!F9NK0,,f!O5ZYVk0+G<d]\Va9\J"=a%Z'lXpON-gC[)^#]38AKfA$EK4,XW6,+UA<GpR4a(Jja`]?
%Y1BER#D5<EQ$RVWE#nQtRu:5e3dC-K>,ZZG3C;m78h=_A-6ePE95&6hf7SZi+:AbjAU4W_[%*URlmlRj9I8t$7Ii?eW7aq%k[tkD
%quO68lBhTUB143n@Y]t]Y)1Xd[2q^<dM09DBSQeB1LoHL_@`NCAu+/fc9OFc7C<^^@]DLI03.3E7Amt4:jGTbl(MoU`&3s=@p%^5
%/t^/8P3I'W_9rIT1G(Cs%F)oR>g(HW4N82?A)7!&k0-9jgHhknis;DQ0F/J(cs13/(7#?.:0bb^A"]\9968$>'bMeAM5[ToYVco`
%PCmo,ZH].6+k__)m\HVS(*Iq3lq)5;+I^:q[>khrUR/Pd\6N.2@#5^5ONmG(@\TDD^r[<P&rQt1(Y$<I>\sSU'!u:e39[G`@IlBL
%Tuc.m_`%jl?BXMP_n<Ad]:_*e-s7cgZd/)]'&jI!DX@2YGauoWGR>"q*S`1[)r1U*?)(MhW7l8Q_7\2A$P7L25/)fD"^?Rm"uE(f
%X@uT+=$>WH_9do>`5*!>(_WKnTJOu(YM4%ljHe#IA\d^h?&r]r(CO>"l,&-+dt'ob;F-"P,'b#'?*-pLY]A960_nF2Fd8L(HS-:X
%#,Jh.R@Y.7@^T029S]9AKC$6'5+.WPdYaa/B<5]O)k.W@,P\,,ZAMf$4fEnO#UOXGWttBGo\ENYVJb])15SBdEcj("-p>GCP0ghl
%>4k;O`hp62;I**_RL+2p$]RcH'<?';X@V9Wd,jBFXddlkJ[\t]]UDGLMfcF>$C,4A=6fL'&m7EUCg#ddHJsr3El.*/HJ6TG)(K_.
%';DEE/>*?ak;T2n32H1I]#q\uGe+m,Tor?%<f<j00Fj2CB&R7i5JjQA"JUMZ&03R/CYoU@1M)JNK?NQB+bb9Oe&lLko-TE.p.fch
%G*PXlba^t3$?o5I11=YI287=UY/r0*P?;IBI_L#,I_#fPQZ64<h>Mp5cbDEbJaR<q;I`C);A09&=haMR$`G3aQ:&?#I[fb_eM#bX
%L.$$5%_Y;sOu2"k`$_9boO]]fh<d1iX#P*!@t+$VR$DL"^VBFkh>2m'Gk3<JmZ5TpAB)/=]!rc%V!/H&gGPN'/dM#d0^"h].k^Y"
%AXuIMh6O),fG*4K6(?npU.c,ZUb&%5+^9A/Qu>t^^k:(oMOEWi"$DMJ'p/)VO9o'_&\R)a%n4jR*oMD'Hm6aj2fsO9%WEYK0Ei/q
%K%ft@5Tf3dArcID4qu9!FB[0%H&_LIl,/0.,2bK1J);\AII0iT_K)FQdGThp4Bse)V*i#=hGWMn#C'ud1Am!Zo"0mF@Tu^I43)U;
%g*]Y?;7@pncBY%Zn:k([UNS&&X*&T'f;dq@=HF/bhlpEIM6:_mK15>I6WYTY7_J=,+66j7)1nY0'NGU_'%,''(jE!"&AN<Rl55uU
%hLHi0kQme8Deaki_>M/cRK,I="c(0R]J=R_*A*3++Ak]s</Y6^bWXrrkE/7`I0%?N7F(eciK%0l7#$On/Pl)R7X=`6bF6h5B^dk&
%L30Sd;YQ0%L(SS2ChE11Zs\n&GXF"rCP'!rZiGbq@&p+aW,r2GX4"_c=<`JTd)M_8PQ<gTPHO6FlK#es3&S+CWI=3m?_D]:g!DOQ
%/"<'t9[!cgp79N.b87-+qo2e-pf(SYPIqd6M("],NZ6=r$m[?YcGMjaL'WC?bj1l4#2mYY(45GrPIb%%m9rd3p')4_1pPk/fAUE`
%P]IF\E[=1K4d)hiG'oWAc')]Po"QRo)Fl%Q0h!tI1Br7qMku0DgtTh86Gg%WHD,[^`S4Qne-TKXn^CG#`NkFN4]pf\GnYE#g>I'6
%0<bXa<.1+BG"1rYJ62Pc%=c)L/oJG=pu3s9hOFK62toM<?[[>"m/H88=3huVSXgdk*oD:)WV6q;3BWn^Du]Y.GjiVfZUK0>epD:S
%n()ihDc*Th`(YRK!tkQ]qU7YUg@pN4ps\5@Is6f`;jf9[EU.?@BQth*a8u"n@.AZ<mk2uih:+"lU%(.(hXNUtlMl6Hg3!@^SkbMV
%44+#)pHi2J6gH"-^87,[UAmdRa+)ljcVH^o;bn6_[4]2VX;:G'P(aT\<EidD?J4n8<kU2<R_)EAj&f1X*>]auZr^_giOfk&DEndA
%YHL6"Xbl87-*BP0LD8kb`=A$EC(A?SPQFi_>dhL"4ZL%GhU>]XLZCnH!/tVXri(a'E\p[_^M=N+^rj1Pe[#SLrq'Wad@B8`T^PHn
%n)Q5&/Z)>tA2soTP"kbfW2l/=<?CuFjWR--:+`ZD;ol)BGC2DK.%jp8*[N:6?V&>_.):N>P6tCuP*e\ac[l!4PQN)"@B3)&#"[*L
%"L8'pG:?XG6UKc*BL@[>Xl'ZF^UHt<>-93t.BNA4%cULn`Bm]*Nok+Q<<=^N(Sr!l>glo^&!)*6faTNei.u4&a^Wo/JMUiKF/U>)
%5#uQ%T+<\DBVK72lbX#SlLLtX`ZV^8i*8N9>mUMm8IJX1M]BY(b.8*qTl\TomS[YM"P]R6PK>O*(ekIG$lf\6FZ5+-e=BaDV8)@X
%"I'%BPES`u#B^gAQj;S8]2m@(0ee4saSDYn5f0N'+p3>seSAn$I(_On$4uZFZJluLb:B:^,:\7b&BTb>PC-_/0hYg4FG]"26IDm'
%ofO*;*1qN0MiY"\Dq+qIS+8tI1H.=#9$fXGF4?EXXR>$#BeK[h5:`Z-;)4j\=?Rp$\@a,?!1j`8-UD4tVrZ(WdqPNHon938nm.Hi
%!gZp7?Dq"@PaAPu@0Hj-8i?\9=i.520^&+3bha?s;K:pLc4pSs@+s2C$E#?t[t)i*jmLA04e=ojn0b\&D*YrQ3Aml;^fEYpISeoE
%aqS/bC.+NTd<GIQ'EOH<2/@E,WpqKqClqiB_82d;+=O$c<sB.;XV`fads0?QiiO%i9BeP?23q!%]B/2_=-Gn]>-jOB1Q[HHNDl>n
%-ta:<,VNrX?.."i;NK6`,c0T[`Hrg6#lqKaB+Et'[s$*DH<N'/UrAerhnUlt9'Dp'3EZiIj@-td!jRW(nO1^ckr^O(F_6FJD>>3J
%Vr$b'Z^e@A*jJB%WMbG?H):"b:sH:VK]+ZKoU++lWeDI(E#L$6M4>C89<(!Jl#Pj(ad@u+HRM!;b/Em(B5t%\HPZUIT"`ZcVdjc\
%[WI>&l$D:O&g@tpN#K)0>Mec3E!`g[9(Z4'llSHO<0<UD%]B%\nsq!>o=:O2'$LucadNu!'n/iYM::Hl2'?1d7_2iJXdOM$<</+&
%\`JMp&g3bMM,osA:P$3CQbCBRbW81uTk+<Pa%eqA8^='^$Sq?C76UpBBK<FT+fGpV@6+^\2J)_`9JZI>P<8\A,IQV<m/-%aT;4.L
%ZJl4iP*`N$IKrH&a\E&<;)pd^OM1j#Di\gRIC66FC44(E22B9i\O>aS1t"WNem8l/1.=Lj3JVJqbqlMKS#2Z1AU9ou"bf;iDB[i(
%$-"aC?$WjC(T>1cJbrZS>3Q`/5b%R_WW%qWpssAt\pNo<m%_JsZbr!e^!e&=s"]T$=19&RFKFI"`SJRIVh`=M/8j@[IrBi:onu<f
%B7!VOrP]"@o(VbuWIRmO-bV-tWVb1Ag'2j0SlTeu#K,QYDk6XEN6Z-?Vt!pS_`@?TUM:`R1F=RN,?[r`rc/se?=*7<&`8V;(`21c
%(_I&=K%10"hH_>3[F]f`)jg0[NQj1:nalH*q\Ee%l&Z,75X[pn[XQ<N;=r7a7r/e&VckVR"tB=9UJNf5BJX<-`$HXmg\8K^&0E9>
%@'J"Oc<)q*!3Hqt8_AZ'$qf#KO__PD)MN5J2-h&r[5D2t;*/]nk9:tk00k:WS&&,b(="$k-$9;(/.%R4#!k]CH1beB?"Y]^_Y8iu
%VF2X5EdO7A<S\W,ZSc0j#M2+,oTI(3C![@Vg4tE\k"#cJY(li?kg&U<0\AJEr8Lo'"8m4lV%G;Fmr>01f=qZiRhliN",(jifL.Pu
%;E+\$B(X*PW?$Pd@1VN]<?3)?%maBqX^)#TH0eK&24ErJP"35#K:+cEJ@u-52C4p#Cm`^"f[*Y'i5ZdFj>8<A@&IR"@%#WToY$:3
%BGY[FOVeP?7sXP<m<):]r1!-tq+V/BL@9.q3e].pZA"!/ln0qA7c?%18q=9^Q?dWfXaEdBA0YncpnA\up&H7[DoW0rQoLK+3D%LW
%VM?'$;C:GGGTR#Sh$.XqMTpWn^jK*onaN\**kbI)Z>qN^<?NKRJomTillN$jd6."(&'Hn=`G(s2Ug9AUkIE2*+\+uj(^Dk9!h1Go
%7lYVlX0.?u@S[8\!+H4r!m_=@1dm"p$Yf&5A]o3N5O>"N/Pp5tpdZHYDepI*<C>i/U0:>diCeD6fa\^o1Zk."I!Hl@mm<iY7kG8Z
%D"cIb!PRHmMXF?T0.9%s7-lV0]t[0B10c'FPsN-<3'@r;qeg^/:'Z88Up1*S'0UW#PZ*?LU.p\LKJgA<PW1i"1sh8rL)uuo71f_<
%/6[lkb1,9_*#q#`\OMM[oP#'94K-:L'I@LU)\!\J23O+,T0[S;p(1u1qN_7_@@G;Mc(JGDXMTb"MYERq3]/sl,!R$o;UjQ:M#TnL
%6p-79)ChuniQ,9`a=4l;pj+h`*NmXWcp_B]c,s^c#`ns3>j59()?]?3MDUXI?^)9Vfem8Yh(kSmYW0SQ2\cDu6#%fE74JlRnN`Hk
%dZ,!&K%'DP>?3;p$Et)h/es$frcsS78d7I.<Lae_K:E0G=YZG;d286N1^XG;&A*;i&U2tZ#W>!g9%L<7diu^b-^;iKa7RP?_d\V*
%&:oR8)phfIWFL.`Z#Q/NeEGE_oePNC&Ric!dDSp:Upi`@GV[9$TFJ./^ab;F%E2@eQZRf\3jWiD?o1VfR:`2UYGGY-oG>&[=9CNo
%\<MZM5_AE_KCKmWi&M6;/jnEnp<BoW'L3f!69qgd-imW)MZgF<Qds'BgNJM.>S((L1ImE^+,5:lk%hhY[9;sSkHlAdE!6]1k'i;$
%Be`qu'(jm`,t/`L-MjRhR(DD7_Y^<D=>ef6Hb#,N?gnc%Nn;>8;J1dJ%^tCaLb[rl%M%>P.J?9d4rB4g:iD)&<%M.LF!`<$?`WfR
%UZ?_XTF#1+2]]I;j0";22$/^WnJLL5IYhB]2LuE>Y>#fW^gW-IPLD%(irEYR#.P5SCd;8E=%BWVe#j'n,<%.mh4dcLIdE.U%*!)d
%68m`F)aY@/UG1bBD.m+1C&r%"ltI$=S\%F3B(RU*!%5]?>'1P5ra.(4=G^K@(mMN_3"q2W027S=@p6"[S+!5G?["=S*ss4sKc9)(
%cjK,76Zf`8&eZ.fNQ1Au#M0Y.1Me$@Vqea9>;!ORkliY@e(h>O4+@qu^&he`8!;ZPM@-KALtEk?^CP@8<Ir[O)"Qp+J_-BG93onr
%23YIlH<8\7`=$<mQ2MGO=-r"%`I$H6-dH0$AD!B-nP+JN'g'#cO9!adc))7)*s-Hr>+Q$eS?XVn$<<<A"Tmkf94hR-dr!\[3+$+W
%;RMI;j;97b.!m(#E)oYbjNSF#REhq"E"<@Y/&G]\a@`M5c-EO`_&1^s:"AQ^NshTiF84H0eq"?a7ahbtAMs%A"@`!`!J[)P(<IrB
%:5j!D5-.d,'F'tp/9UQB6fBGi4\>R6`4MfKPdC@M'b"+69AL1AH3I+S>i%=%"#Gaf]0-]DN*#Ve*O]uL0sq[$[,PWWXLEKGhf3pX
%p..mj<Kl6cEkp\;aa-@=-c]%XU6h+qV^NE#-@.R0>V_;\Mi\p"P,4ZT4tGBBQPGCXIu,WcltHR[d&\h^1oJRJEFqqZD>S#!e6/u9
%ZtUi@7TDE?fgV[K-^`O_j=#gt!$1=-aM0:k?k99fVONW/nS*D.kY?;beL&'>JUF3R2-4"d1@8t)W%qt.`Z0#.eu5,Y]fND2P&*r`
%a'b;&@8*\aM-Z]33jr$_ifWhkZui%B#mOBtSpH%[A:oAQ@l0_b;D[EKmY^:eJEfqeUCO=^eD*>f(MfC:[""\NoLegH[%!Ck@SpDH
%0#`kUZqO3/oJd_@l;SCd>05T8K^L)9%aqZ(h7gId^<T*J9[.<*/3W?5Zq?D#W+R(B9p:hR9VT&^<,ZJ)4D4Un>&<C]Pdl$9#&r"0
%,=F)DN9Y.ILfi(uN=B3Og`X8XEVgmh*]UTQjgidAHB^Ufk/JR(^pf#@CfJJY;GF-KZm15&TEY-,^Q7hbbHC#R?N"XY]=(r0a'dU]
%@aD$Vfa#U'$u3"DZWJqQQg)L@plt"\\?s&%an?bqD3GU[3l,fsVRT#PK[JQa)8.DMK;M4`mD`GNRnYoIhH\e8k[7J2miM^1=(ng7
%N.NHk$ucfVbW-Q68IddJe)"-Q60a`<Ks;Hc>--l#k6=5TP_3h/!).FiCK7MFVP/qR3:YpkcCe]E=`CBts$G\!Y(]N$.>nMS9B!_4
%)tKkB)kiR-i#Wgk%J4U6IlI(]e1PsS\#O-/X,<7Y?E[t]C[s90SiKI*O=2XbDd6r$nME^^b8*3ZE@mXFFqRQCr\^&PS\I';9*r1\
%*l]!fH]U0D9EH>TK>sZ$?o!#,(]2fD9\8VLc/aT,[s!sAFA<h:RO0BeHnpYtTc7]&n)s?h3,\N1]pD\W4$udKK^W=FN?rj02Xo!m
%G=-pIOtg5+(q>rOmr`=3OMb1iO)n$:(.``-3T*m[=)!ic`WA;l<<],R19F,RiRXjFFetQDXebjM&pjJ'n)_CaUP%T>e'pS]oHRX/
%\,YLD1/E@DGq`T>NlQX4,E$oH1^17U*4aecINeuK1s)K,H*Kab_iX"EUf:7W':p`k(cear)EM>s'YVYu_DQN+p0cX2BS4T-UO,pj
%27=3fURlA*%3TC)XMJ3$Y02gll8\943Jm`Ds1GTY2NgfF!5J1$HEg/AjH9"d,lchV]4XuP)TCKT'H8i&1=;BJgT_b'b-N=-"3e(f
%FDi&@)d<d_;Wh4t!%?P$CMHqVlVuoT3W^/&^lDU"U?r/$7.bqk48k'`E^aqi/XH3mn*b9tPHRoFV'F]MZ/oIr\2N_EA(qU'#rZ7c
%Hh/Y(Cro[ZXI<E65W!]GQ<=rV>L+5>PsNb?M\KA`Qnboj,M-F`P>@M@X!<faO'LlU'(=4ICII13>Ta2!Ymji$SdQ6EBaN!lE:&J0
%!ZeO8p'-uA\./tT[5@tQdns5=5V(UceT"k9"!+Z2nNn:uBq"^D`1l)eU>QNo=JcW&Y,42r@&X;h0B[;*EjprTUt_0slY2&e`@6%V
%A(qU'%5qmmHco%4fFBLF88A<`g'2>3?at6\A%OK+4D]<dPDti&Jk/MIDX`fo'WW@#N/0CWkZR'_3?JHV`K`=td:[uCit`OsVA:N+
%YE3SD5ASO@:aWT/8l]eB*ChI]dWtLXeEU7B]>C[;*SZk9?Z]9)]9/l"h3'0Kn67<J+J$T^=Q/d;FM4K56a4SCA5Nnpnh?!WRh>N/
%"JaF*MrC6;9NAK#KlNDUN"X&;U5^c^)I6dom3L#,L7c9Ze-s#mZ>b:kZ\in7Ad\i12Ll2'H\2ANS!J!K[;jIACIZUDaq39+5S4iB
%&p*1"^d!q%`cEfuRAaJ@G&mM"Re3q#hXB5s3a^hBhqWPHZ^:XPro)8jl+`iTrPubRflXd>p[$u*JR7aD[!01Wc,&Z(o@%=WVseR#
%j[+Fn@.3=Cn=.n?Qd63:[HNg<PG>aJ@I`o)n]B28g#DE'7GhHG/\fOPGXl+grnZGY73>(JJ>,2JiO/ZCE-^Rh:ITuhimGm6j(B0O
%J3V-cSOLrHq`J.h8pI&rUZj6#OC(n@a6Q?mg`K;c?G0Ot5MCI-ckR4#.u"#5GPpeRc1n=K/70GLFq=;\k#0(^S?ecXS=VlN4?hL]
%]nk_/f2).d:0nq.lZbSJ4$>[\5<?#\9HrlqA!06dcf.ID02><W?XIP3?4WXrSaN,WH!AVbPLjZ=q@^ZG.sH5!'mTEL@W%8$:J["2
%((Uq9qf9Ph[581mPg`pLY(`d/#QM/O_X%-JO/DbFT)WBj]8aIWf2TZ8_<]Q3cOT@_*PT,^raJC,r?NlTS,NTpaQhJ%&^f/KrT"c=
%/]rCn1(0-,/UST#s3jDF3Y=o&FdGlN,3/o_lXp+U*@IE60nQTH_>hq2(O(2+%U]gmH_BchfNL?(CPYZG5=kAZSZp[kc`Nhb)kD9^
%g*T^#PacB6'+%<an*b;<_6aTLOn(/bp7VH5^[DT[^HOXA`-&PlM&1$bB*[=(JM4\!n`@OS[NQ'b(sq>*9EBG8>6jjK#.#-"lP_>?
%Tk9-0F1MFY$aMDS#?pDXDU,t'bC`TYHP/hE.3-"F61DV.lgB\QlmAj$<ldt`-XBBa8Q6CXd.*YjZY!.5Vc$daeF9$%kCAod.9eV[
%6J&."jm4ntl+3_?3[%:)`\F:F?e>j.G8L$9bPIk12#U2qP%d%fT:,:SKYq]<7Bn^@p+EhshdfZ);D'n>p^*D[g>oFpA,Pkdd;B,$
%9J6K7knae^f<f)d9eRE6j=Lg:Si)6g/:8cEMs/j);UETZ>[>r.7=X)UHLBmLk.eO\XR+KBrAjZ@c`[.dm/@u87)gVq/Ks]cPpF59
%c&T[ij5R4Wl7VED?OW:u'l(5Tqn@1N:$n!AD^<%*dP"'?R9l]]Ed-kZ1dlHN>'A"V?0Z@3.he5\c?)5=6ea[LE3IX>lX#\94SH9H
%p6_)i9n/4&^\FGbpttS<_g>8RmI`"&:H-A#8=BJ9>Jgp$*L=9#r@Iu1nL(k9Pm4nKNU`b.l#!T,EZKM0Q>3=IDn>i5TeEfL<=`!n
%FPBRtQ^f"o].$^dmR<u/:]HCOc_^KObq9mqGLQ*Rq!<e#[Wq,O]Dlkuo)1<C6u'm!p\#,iOUg=;B@Bm.FlV;)qe(]A*E\01%o-HD
%UfmTUn;(tXruuZX_rHFb&b>g>BPNqGepfTk)>:i$nCdcR=,6[ZDba*B4h19^^crfeI]A*YcWhE9=+6p8>$TqRc"3IY^Or^+^L,cB
%DfNC!`VS9F0=\=,n#'OLV0i$lIQTSMIeNX-m(=sp5MgG%Qg:G5g$m,30[U\RO?TRgO/D$E\9CD@pV)Bp[hjU"r66a3qX<;XCs'Nj
%f_X^7[JG/ZVl&=CG0o7BT3iUdr8#3ZkKf`*@Dl<4I^SV8-g8=kQgRGsK>upKVS90rIJ'SOs-.]!q3aq)n(H[9n_'YN:D^@[QHDTl
%TlF12KOojiL]$oG2oP"\rO6qZKHFh5][_(kGV7)F6MI7;]Lk\K.\(,F-7ACsBD1oVF7krl^A7Q=&,'@/jml&VZ0(O=-HE<*5C/[:
%9("'Iom1RtH@0].l@$4A[uYFQI_E(3pi:,:gd.f(#AE,a,qaD6*1e1Q4)q11c.tkpdlmF`XWt+[S@`Lmm[F:HO?]8ETid)\\n:k9
%Ec&=(1%GO8Upka/LS'%Q04LsMpAWBbn%[WR5N^Nu<U-o'UAB@gYkMtY>+Ycnr5H=mkM4TMZ2\pW#2Q.s?gY,GJP(26TC!X?Fl[:Q
%s4.,*Q0.t1,h^1]P3nfNHRIM'8[_upABXD3A:#]WhFY/"P3j&5g&*qRp.hp,PAK\5gFl=-Km/^ISRd'pg"o</?^tYbmj-ZB/_Suu
%5GK1e47J/HIQARD?[uBS^M^T*s6uZ\gcIZEHi+JZ>DRb"r8;h%pnV8%-og>3F-g%<F`[=RR>`I\T:Ji8XXlNd9s7ln4hnkf]"raN
%cH,EAEN#C>/-l02&to6EH%I;Hj)si\I.;ZCfoEhoac8;<fl,Wm8[1HCFXd&E26c-BIN-V^?\AgDr?F?*-qO!*]iWMj?G/KLc]>Ug
%*Pp]4\eeH&_E2s7%[\F^(,tb-^I^#0poC"@[HYn_VeZ";H1V!a,38Cce_/=\Di`them$Au55aQ8Hf(o2@OCs2J+%f,rZt#A>kH1J
%7m=?Spu'[QgfoHEp[m"XdHe+@qi0EOp0LF"SBYcG#=nM,GqegJZYp=+;BWV@dc]aF[VqEVik%t9c26'uDgnP+rtciA+7-[%><IAK
%pPcI/Di7_HVfKF!=Y^I,1QV9@&P*Z]re/_]XU=EYKBK-PNV2<(PLG/:`CJDUl/_JQ<QOmK4^ZX_H!F`UW2;C3h05S*+[hr_pmjt6
%cF@u-n(3is>&qV=84cDqgC`'-N9a)*.ET^1]^^FDl:fqNije"to3qA4APU>l$(/$s`h3.QC==QiC=A$Lde&C+g2nNfpL=Ei.^[7@
%S2%dYVp!-$hjj+_7sH*dO7pj/IW];"?-:tu=M:$tBi=jhPOc%WFqEZe\NRRM#KKWeZScK-o^"Wh`]lc8lM3S95NeW?H2OCD^K`.Y
%CCS;p&s#g[3Si[i#o&Fr7Y=;MaZj&n^0Khb3^%b&n#kd,>kcG5068oZkMG;-mN0\M:B/F12Tg4KVe7dfqpV<Ml'9rGSfYR/'hZ*j
%m%&SU6aBXlgr[aQrOF6Ajkc\Y\Sd/ZeFDMJrm<0lKj28U>mc'u0DA99NmIE*]m'cRoTm2FhknH\2PO.]f#@UNkD7[_$'dDI!ZM#E
%iq-jk^QVp5=eq8IIj+V,grdCC7H"Hn0M4kXPZ;@lKXEF,l[irM5HeX<P7mk-EdrCbJW&_Rm%QF"W'B*&=?J]+HZr/u4/Qpk,(KOM
%i,nGOg#D$6%TjDM8hA,PaHK$c1$so&0t3>pU$U)t'UO"KoU@H<cJ$;DEuZUmHaau8]\04PcZM7\2=l,XcJU[D#J(H+%d!Z[4"gQ/
%C5lT=;>kJ&m.Bf.lu7IEkj[ic?S:E4.;jU9TV79pT3(l9:;QOK^A:.Qr?')5e*Zo^27%N,nG1O_4IU`t08gm"Ha.;;me5#Z'CX]0
%EuL14O!W*Kkj[-GUV.c1a"*XPIqI0-;foj'V0DP((<r351]H:N1KT%)1\]2bq%n=[G^]F/qW#KFc^l0U3dh6V7S5Wrr@a,oilunH
%4p4*(MVtCgEAJ-,5/qH1&$7qFLXqhfh>-6!c^rItrqb0])(!XT^=q]:QfiR>`o5^Uhe>!iY@!jFqu5U=nAY:9B%]lQO5mR5=6RbK
%4Sj51Xardr#P#`Y>J.Iq"]G*BZr`lkHqtefLX1El;YS2]Y<R5rfss#%nYV9e2mD+e*(S>alalr<g@[?2>nRIm^j[i^1iJ<!r>BD:
%0!D@gOUFj%EF]*634\0UF+O-a?S>ClMn0T[h),Yaq/4RA/aOlGeh>8Ge>F8Sh,TK#?\;%#rJGD(%hEQp+S!nfe=SFLGdp=6K>)qE
%T,epn;tl*g[L_=C-KcEa=)$>^W[$LLe.HT33oVn<]bd[nhW!kd472;BM9![6Vh\'?h?^:&gRu_oK21R;"K[dKlZaF$p85BMo)6D]
%\#VYp/TZB=f(%MM57:$'lN.]pH[Eg1cf^P1j/&ATU%UMFjRq3N>IAAbBS`@ani6D;fUd"<4RFMGjR8&46jcm8"7&ir9[_\m'_u<r
%eSbuDp7M@_d<^7>+a=<obOpZ]Lr!]IRJ8C3^,n<&]-!V'@2Z^D9Ad@Hokn?S>?UDqed\ga\*B:QmVR;LQ`u[WcPUcsO,)UT5FVS"
%(J"+UN$EYlh8%nde#h);c3m&5;8\Sbid_i3bMl9u4"1r%;"d+_OMoHd#f;H9&;58.8._Z*]`88r<s6b:jP[f!?CsuNEqc-7rhYM<
%CQO%T+9$5jpYq8iU@aHno(V$&)>3aCbF_PUFoA$,q,\?J\*:hgKu3X`$%WSf1^8uebWFZY4<J9dj#`m/2j;=4S*54&O3[a]$ff9_
%04#\W@GJ\KWfP?scTBs5%k"o.2J^r`mX7-Fp$qRYH`(L]nLGqt,(9.;amm9tl%?n6DslCXqYc'2Y^a0,FDuDH+K]qa<%=QUDu]4P
%o_V^&VgC6%J#A/!iY?T[M>V=Bf!F+\H%&9iL5jE%ViotH<dL\70<4oo@a-P2roLB`Q`Q^lS_!frn1V]M01?#lYNWgoV[r$pnQ5Rj
%I8+]GnfKJbno#:AF<^[+qG/W/eKaWh%a[MH9FQ!_O7@,j$3oN,LgL.s*eO:_+&3=VNY`3iXRjG+_r6p9L8'=d>IVKN&@9r]@%+KA
%-S4%no2%3PY(7&F;s*WC_,Q"UmnXr[*kGHW3GP7RSZ%&70U<_pU('b2UDD+7LW>iS-%/iO1p2D>qQMcF((B6dVgHJA*+2NRP8mY:
%fh,0fQ_lepca=MM=mW'@YKjTlVM<ACSViHYYQ$XGRC47C@'j@-`XYZ%C8JJSJ,4-J`g5A@k(@I2H-E-mU9M(NBn3<F2gXb&)s!RD
%mIYc*S1^PK<bJJ?CFDd`DRMU<VP-DH0?^LU-kY0(gGJs'i96!R-+<d8o=FeaINhjC4.Eh\fBUr1U?r&='hGh,a6-?/E*56*q6qFs
%\Er5&FCp^CIKSW<hfPuJI!0IJ[(*kp](kpHNQgO=4"_H.Y`XL%4/[jTXGDd[c-#`CH@>_V@&"CC'r*E^O?V?EH??B@F@(EbQad:(
%q21SGkq_([k)X'S5FP@(97B,&J6C7(6,B-G%kbnr0@(%J9M>2+EUW8<<ph:Mo.Pb'jZE86B^_E`[\>EN$m+8D(D=?'[$sU98%J<L
%B.rpE_nX*SAp:h3bcY3[>->_HCU-LelB)Kn/VcsT>(aq9CH8]`f!<nQmh<'7LO*au<4Vj=n''[uk"-2'2*`Nm#lBD'Uts2odC3;j
%S(2kX%+=:=hqA+7?\oEZ&#UeY?[d>!onhpraH(;VQfhEcdO[U8jHGG3Hh\V;XA[cfo%]&bo7([Y>ng>R\L5kliqW+Tl-a=[>%"n`
%Bn5<7b>_r)f2XO'nr9#$hWGZW@m0jWZ![I(eT9S.dEVF5ao:TBdpqsD]sGD/rmb9ck[d+Gc<b2!q.du2Al\P!9GZ*HlKQFIl*JA.
%ajJ5p,U'%U^e_.,'`Eahnmr1nSSj0c2MW"3q.2qFL5eY!2Jar"[DAJ>:()`X_"=9\Ie@aMo\auoLT/;2B+&e.qor49jJJ(npKgVd
%q!.@flQ^k2BpmUqVc;sQf4QaD:P*9n/dJ;0s5]?,Qt#)jqoIsR7t3Ref#EG?qF2,L_:cXZaef#b]m"RCp;:A6i4FUd/c'hR]mk&p
%ZL`^6V)#`M:X8+;TCqgNA9%1r_<FTrPDd?=C#iU54F+o,95n6Hd(P$t<pafPdc5tdf.VIW\@_LQ_.e8eiqt!jd:nn6VYaaJlL&a+
%\]prerr'h(0m@6`Z-,eTPqf@pH_4'p82'I]CZ8E;B=W6P^"9`"hl>/<h)eUO_%kEWVimr.D>&7$,5?0JJgb>Ga<aNuZ88@[(TG?D
%i+lWZ0O9`p:aV(W)9*gpPX$(dENsG`K&?*<qW`kbj%a^$Zsl][4/Mf+EuT9HD2PL9=fWn3?f1_O/a8P0?AX,S=PS@Tn\njK-r_Sb
%LQqn-R!jH7eu9g&fGUPZqUEhnlV8;W377Y!N8?3s*I$djrQismVuM0(Q'm)do&(lnh=3iQ(ND!Jaj5+fU</+[dXIuh(qAg&i;WRR
%>l%G&5Ki\sd_=6DV"X65HLLC+L.=DOh(=RXh/P=<>ictb%H^%u#uZi(1@<"B-K[)%Bp`W.nlQ7F9Qk-?f2V]&@ToYc`)_hR_p4A!
%cu[Al@rPpbj/c7IS#\d2)Y(j>m`[%j,)ij*4X(f!DO&/X`IuQTq.[;X:GO;p.brj%:l.[E[3iInlJrct-&bcP,/$F;YkIq81tteI
%nt3.Mf&2)Yjt#-1?i9)hp[3M'i8jRqiNuZB[lj%g:U%-8`1'6_ak+c'Q'eB2h^AG7b*e&7U!^V^]G?']s8Au_*<#Btq;^(&?_./=
%UA]?u<Y#uDm6,='(VBV*?hqJ:26Bf'2LdGQQnRmN@->Lm#Hd,R[JtqY]e#cQ!Um':L]$h:oJ'$ha2O8*9`%%Qd5:h%)_([FLoL<n
%IId=^`qGJe?G0N)G^cms/VNh>4lq$\Wa4Lh4SeHFag]#IeNZ3b#1TMt4t2=67c$6V\,Yns\9:dkG%s14lXKDWdE17u@dgp]59>8=
%s4]^4rH:'o5t'V@2,-RSSW"(T:=#d>o4e6RQ;tLf_Htm*WKO$/]jk%8q=1m.Ka['UZ2!`t\oA]2+.dn+H`<Jf5Hn1Y*.Re`eJ:ZT
%\i;T)@(XB4N-W>#==dc!S:,]Gh1WMTr<Y'?SL8o8q!j^>s.8Fp79]Q,Fq'kbS;Yu/2rrq>p&=NjfBOHL]TaMHX>4To3t'^UM[pWl
%pTcNN5PcsIRtUIR$YZe)H[ba)B=9=fqOYF6>(tGYYuQLM+&A/mCq2]`+`*O[/$\bE(B#Sgs0H!@F5AV@]U-At3W8ZpgK3160urPP
%G_o&$golo$fJKQOcG/DYF%@6ok9]MZXg^mm)asn<ac!k4rpmMP)1S]Bajc-KX!JGFL7VjI^,S6HjM6fU/JI!Bg/'^8Ku:)1?f%)$
%hpF@[lf++TTC.1$T7=Sa]D,b5C[qF!HV-6I<TX1dCLuaKBZQM*B=_kp>!Ir@_7V"*g=b_+d`$_6prQSZJ+C_EO.L/N_EMgA:Q%Xp
%Pc3k!lZ...,.a4N)L'3E0]#\]3PWhuqmXP^H]K9'id89(dMqK5R^(\sRiZ-F0"nI_Na?#;g<6m/EU@c%gK*HTB(9_I]\VSjoQ&eB
%2CEn0gNgoMYW%ZLGpjW__H,9B9l.9YR)*(<BWf92H,&BKR^f58iG`/+M90'&F[F6dce=TDi0\>'cR*)jJ*3U+`MR9`dH.m3nuMF/
%`f3'E7:9p)<>s]Y$(Ej9Ft7M6gFZL"^NaO3ajj\0Y!pP(jRi-8[g17#8q(5QNe`BC%iFotC3g@@QjjdKGJ9m;I(=JkH/VOSI7W*a
%X]-t1Z5;dbVL":6^7U`o]p)lIq51`;_a""Ym,ZVk[-k+n&,snV)?"L2TG;%eB'mO^[L]?3Q#+!7VP@VLiV_nIn(B(d-SOnYSU<if
%P7JIVc^oQ1S&_`0'm4BJK.maPj.RuE[5e+G9S0Hd"4P#t4j!98:[UAlo#[Yfs76\'6K>af5]lO*@J>c/?ZBlVcL_;m8HV\3]^Y$<
%H9_5da].Gm<9@j7>coj5pjP!cV*EC\qJ6&Ip2s/D?+auDHYrA@[ni#Ks8)%?+6bK+S6sp!H`ng5It)D:gQ.DfdJ^8@o_s&QZjZ*m
%gsD'._KJ]-I?kWfmtn/^Sc5j-puftc<jC)^XZDL&`e"0=]e@+R^%^UJcQ<"LmVEuli.&!#DYlK:%M5f?`j:NhG'B-Pacpc3>RTfC
%cfZc:T)5_5c/\,b+5ZLuj2oT92V5Or!>^I'@6.Jnr:Ib=>kK)6CK8):Kj/^FNu(R`9Em\03D$u859Xn$<I7Tdjm(U/(M$.J\/0(*
%)5>kX^-kCo2F$:2=6N!NH?F2H;nsT=?2>V54Jg_uf%(e1_:,Mr_buf8g7ch^euOkkk]B=4W,TpWN+(aEQG5gTs8;u/1B-\0H6m4`
%hu<3@/]TR+9<:C-4\nCPs7PX@QM($!WMT/TX.::jq%As03D\L=C:RV\qqS>`QS5m7(>!>,%:d*4ija.VCDd!rf?:NQ:/2UG<ZQYQ
%I_Rl?f=t#Zq;(MRI"/bsCV'-p0<c<)BfGJK*UWl\J"Bj8!?I\[ft.'W?@'b.;mNBJbF8>TkP.[9l$8LH_1'!(=W#ReUrdcq=\+`N
%Q#.mC68"U2Ai',UbV]3$?%93cIeUIhDnXr3^[uPV/Lo<FD]dDun-rH+8s`e2s78HZG:o1S/JbrFI/<3fpl(iggYY^lFI/HQ8PmjS
%FSTD<"r2o8M5blTdI_#1N*YVcHW,>smQU(lYpQX4ik;=c/Xu4gAQMsFG^o@3qW%S3ftj./00baq8W'qZ?9^S7h:k.U3IS5Kh501#
%;_^F^G49*$ep,lWc+4A^AhP*!^<IV/]DX)M`P%+sKKR8$^([Q<kYp@%M(4Aq<D:/YlY?dTpfs]5.rDJm)k1)>l*<lX+s/B0Vb'+B
%-MpCKd;%D!qDs,tD->%ODqA![O46hVdjp<i&;Qf2Ngjh?Ec*creD@:iWAWb"0!Nss-u)ag_V(2[1W`h2jbg^0GO*`jZ=\nAA*_EV
%oJ=0!gMt7CQXG0:#=iRr:bQ=`h!1TlbIEak92r4QL=tp&H`75SM7K\%0NotbqTe)35o"hC+UM4r?-lAKIU9Bb2nH\?\&L>1h/\Kl
%FI;/Iei)F:&j!t%6kXfENE\$F96fC/l+C?>gQkme<5X?8Nui`GnY<;/b'fT\laPUU`_3hWb%@%jAuQYP*o!%OG[8^F;12ZI^KRJ#
%E.+:X^&CE^e$%u`Hhc?NTAGj(]4I$^3jNY4?T54FDSL(09\klt"t.YJL.j`;llp;MmAig24MBtD\@LbhUqp[;cuV=0[Tc%e4[co_
%mQ!.3<LhbCDQ%p*!SlU&C6uZ&Zdp(VA)?8]GEH%sDRpKFnC-:Le\/f<F`Gf9TA>d$\IDVhJTkt`j<uC:^i-\H`%L)Ug5C/Nir-cr
%_Yo@118dce6_.F6dBM:Q:9Sk?B0Q64R[='Ks7fBHB'>,=(FMOt;l/5lA[>n&Ht*(@kO(S62,+%\qRfM&lr)AOfbqQX2fD9+[\\i9
%Y*>EUgp//B\4$86Rjr9meFlO8[r!MJ-$DkX='VZ@fW+'j`[_>ECXnTD3a?\3hLN=nE&92ZCp*J@&#+O.<5E`Z5k80olpBB3m9luC
%;g$isp,$UZP&,VR:[Der4E'qWCk(uk7!8OaoU,IHZ`ftun^5C<s7lEX7pA0N;@XWdO_:5'/unWThlbrqD"NLRs$a-N^O?"R&,<uP
%]6?^]8714K^]!MOiO;mt?aPR+nHtK[L='F8Xl7^7IV%8*X!Qh"cL/0Vqq[Q<q!h8RGU;M$QFIY#/S16_N$mZc/.R\H*F+N!^")I-
%4!@peEQTcd2_a*+T]3K7C%4<TigW*3aQ*-&:**&X?.5PuekOGE>H)g)Z/'Gpb/I,/>B1`:p>lt\c6o5HGr$gg]8pm1DnEnMk"Uke
%b6Gqdg-iqHgV9GZD;2hY]C6`/=R:pQWP0s2OY5[n\G^cq:X96u?lLTLZMF$25)pGXRDK1SRbg:P`QL8+Y%ZM+S#FtL\?,GaFf`Cr
%`O`RYeh&8s?f$e4)IDQqWnXrqQZmql?p26?3cp^2K:K'$laT-4nT*KK2cB>1HmER]caaaP&4g`dN-ZA&8\MoWrG2aNZesgIh0akC
%Q-6Zu^-Teoc+]"Ir$9\cYFePhq(:i^\#V8k`X/oh(aC_1h"'?1..\c=`3&I2S(MV&dgYJM#KA@+`eutbjo3EZQZ)$EVt\e;okc)G
%M>`1Rp]f?I)T2Yo;_;4^h%-"Lo8hl3(YlN'I]li;L@+;cS$r=H*rA7Tf`o1Fm1t#f>\9ODk;S-<[],S[esW`%k&kj]j4N@8F%,N*
%'2H6rYfO8An4e;>SFH)=n`PD9FUkplgN!-mLMhS@rk8:/f.S29SFp"V6_VFd*O,I>04(5Haof4J]UBc;');&^>u^=mak>@h$NSM.
%E.5pbK<NT$KKm'>b<;#iR6;10k>;0S('Cd:K=Kr(@@L?-PGcf=`,Qk%@QTjd;qsVd!n2)R=;_1r'4Q?ZA<DJ<a.4s85_.QVoV5%e
%!pLbI(^TPuSD`'9c<*%n;I\HRe#,n3K\T:?K#)f1N%$A[gNGaTl60*3Vj(mZVV[&2onTMP@=!OcGCfU[3T[CB0\sAC"/*h5Fh1<N
%H;%$28o`d_R(>&\SAI]/38Maod7m]@l1Vq<=:%'\7kjNO;gtiK(j1[bFX(,(fUU$(j*098nGM,702IQL`f\<s=!*ZH*k<aZNZM,_
%MC\UqGM^Lo9[bhWKkj4^nB.`+)sb:-5N^$e%+RqS5`9]kC&`[,f<X/^%7KpondjFkn4(R^Rp;h-iY[K6+u[g9"MkZi!V->Yiuij/
%F(TZ(Ot<Mc=%*lZkOOeR)%L;6ioPI%Fm<1W!20fX;2`P2@4\OO>LZ;1YFe,t0`3]3@,TH0=XoG[nqY0aSV+pLoTh^!3ZW#.]OW+)
%-)IDfpV<t(3n"Np$["s"Rd,1Er0g#ENmiieq-pE<j"/%APo/Um&9QlP!JS#aek^HkHR0d8[-2QG0.j=]<,7LM>>!HlQnlp3VC2M5
%a9bm+nb`C%BriS\XFVfursT@%-70kskcNQ5/L<+kYnP1d\Xq6%8e!CJ$PZ;.nu(G7c<(Dt5Dj7ql6,?gNJ]d^1-e_"+rZRg_>A&'
%ZB[FCBtG"1C>!$tnkn'20k@YAU&2i$S+,Z2.,Z;Uf3+;YBshb_bYl\(/8V'-"Fe"KeuTBZM.)^&p0aHcg4PYoY]gn**fX<L#mA(@
%V)4=7+57`/-ZCNX@J=2-7CR,!"S_4&_`Mk7qoqZEMh!GdZ@`o%kEX*f,h#:OrECrq'I?&f"D`f#9qc]>I2KR\D>RXDp9TWQ;$g"e
%le5s@f7fn^PEPPf9XsM%Z<-?AcaB0%T'j;.psrD@,N<CYLc\k\ZiENL/XSUG,#%L_3Q8A`riPt$fOA"eZsPO>C/Y0$ULIEBhC>Bk
%XX4IC(=T!n/QYW(^;gge^V4M(f'WKFO<^gR)1=>[-`^tKVji*(O\C(YcBM+W[rs5!>;lXWE^NoMaHF%TT.J<-+\#4Gdp/^ibd@Sp
%'#(%G0$0IYNl!*XJ8OpWJ!VB.=K*Q(TmQMX*Rqr@;ek70dg:^&?sDL;^rmrZ&Z?XEB]N-g]c=!fcU\P/hdPkog_!f'S;`?`SPopa
%e6B"C*pHWh=7H0iaCAE`<_RfbU+.9:iDl+eO)ZP.>SL+mldF#@%-/0b9:-bfVjl4ml"_m0=tl2f(gR0PmQ*lm^rt0PG]-"%lst\J
%:6lPB:nkf!%n1HJInhFR#N;r?&9!:1aNht3=p0hu;J\(fPoQ_r!`:<gGl5<0lD&[-Zbg:,bMfPlK_pEEU=,3W*8-GD8^HhY#e)FN
%+DPFTP&/<mYu1@U6.^N4UX.Xr0qjU;m'AY8JT3j-F1LN$JWHriEQHf@/9,G8JDcV2s(e<Kr'1W.q"_098/VeTa-W4WK0bs:G\)PB
%$CJaLadlGA'g9<u`$JhlZHRtIjYp<j,tj2]B<aG"SdOI/R<P,)SIU6C"E@:4d[K^k_(].W'99qFfanQ'L8dJ^iks`Vdq"fQf7T?G
%[M_A'7FNT.'iHNM,T4ec!)kA90Z2Vk@7p&G);@GLeP_/N<Qc+RWi[cW8?n05[EuTgJXIX.=!]3s"KX^D,?Ya*7hB@:b^:>RXpVIs
%->V49Ts:ODjHrDs_m/6R==Lk1L.4mH=<dOAM6A<0.?182*mKLeJr<)TM_*Hf"VS)oQ.'i*]h(9#rfB:1<nXV^3h;?VV`+<)W$TA%
%MfsZ]^HFGH(V%H;$_aT#Z9+GR?8F/YeLlRACt/T8iCJ\bG%UJcc1KU'#P5m:bQ&jD-q*uP[^N[Be[nIuNb.S7?/#t3(0;8V"j]/_
%VJ=7^ehBOQq]jgm?eSH4^OQ61IPLm"rTVGEMt>af[XYa[QUWl)=oNYU0thBY](:GW*m:jRD0EM0_SRN>Ei0)AUHXA&cV2DJ978OQ
%F7.4>-S%c12'Clh&hQ=\VMjC3">!c,&Oa^6\KDXiX-k!f)U#5d*lptC)?U=b$,QNV]EiEX_cA\,p5<h@F?DPYZjuD7:QZ=c-BIqG
%cAu(oE+m[VJr*JT-Pe<>6Bm6<cZh>AnRb-AFqf7BR[Q-W4Z9tVR8#E@ifjpT%_&L-3eArhpQ\XE);EEm?XL#Yn=n4tM[%)\lg=W+
%rG&U/Sj"^VX37i-8]&6AS\an6!HgIf?S4?#LQf'49^,#"?ms&;<`cV!iD5/_CAk\H>hq'9pJ1<mCej`QU>Io4.AJ=OHTq6$e1e"t
%^)cfqmWT_:SUTX;lBkWT^ZD_4p)K\V2]Dd,rpLiUZUASg?l^/@8773khY(IX6+1!"Z#*O>88+/B"'3/fVl)JS#H4n:OR=!WLEX?Q
%FIrake,n5NBX^K]Tn/.!`G/+8d&YFNEB.1Wgi-VIH&"mXJ_`HDhCg7GDmqr%iChu7K"X61?*D"]*psiC2b+CB[i"W-l39sVY*KT#
%[?m4se]kSBf@A+\WoZUurZGJ4kr$%>c$62LSRN?VkkF.SIWCKUM;3HNTnf7a[t:[Yo=6S\;A=m9X9f)HT5NfTkl'ZTDgqR"rIlSj~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 603 4975 a Fl(Fig.)15 b(8.)25 b Fo(StreamIt)g(co)r(de)h
(for)g(a)g(soft)n(w)n(are)i(radio.)e(Arro)n(ws)h(denote)e(the)g(paths)h
(of)g(messages.)p eop
%%Page: 11 11
11 10 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)199 b(11)523 448 y Fp(b)r(oth)28 b(of)g(them)g(is)g(in)g(terms)
f(of)h(the)g(data)f(items)h(that)g(are)f(passed)g(through)g(the)h
(streams)523 548 y(from)f(one)h(to)f(the)h(other.)648
652 y(In)j(StreamIt,)g(one)g(can)f(sp)r(ecify)i(a)f(range)e(of)j
(latencies)e(for)h(eac)n(h)f(message)g(deliv)n(ery)-7
b(.)523 751 y(This)26 b(latency)g(is)g(measured)f(in)h(terms)g(of)g(an)
g(information)g(\\w)n(a)n(v)n(efron)n(t")d(from)i(one)h(\014lter)523
851 y(to)j(another.)f(F)-7 b(or)28 b(example,)h(in)g(the)h
Ff(CheckFreqHop)24 b Fp(example)k(of)h(Figure)g(8,)f(the)i(sender)523
951 y(indicates)40 b(an)h(in)n(terv)-5 b(al)39 b(of)i(latencies)f(b)r
(et)n(w)n(een)g(4)p Fd(N)49 b Fp(and)40 b(6)p Fd(N)9
b Fp(.)40 b(This)h(means)f(that)h(the)523 1050 y(receiv)n(er)24
b(will)i(receiv)n(e)e(the)i(message)e(immediately)i(follo)n(wing)f(the)
h(last)f(in)n(v)n(o)r(cation)f(of)i(its)523 1150 y(o)n(wn)i
Ff(work)f Fp(function)i(whic)n(h)f(pro)r(duces)g(an)g(item)h
(a\013ecting)f(the)h(output)g(of)f(the)h Fi(sender's)523
1250 y Fp(4)p Fd(N)9 b Fp('th)29 b(to)g(6)p Fd(N)9 b
Fp('th)29 b(w)n(ork)e(functions,)i(coun)n(ting)g(the)g(sender's)f
(curren)n(t)h(w)n(ork)e(function)j(as)523 1349 y(n)n(um)n(b)r(er)35
b(0.)f(Due)i(to)f(space)f(limitations,)h(w)n(e)f(cannot)h(de\014ne)g
(this)g(notion)g(precisely)f(in)523 1449 y(this)f(pap)r(er)e(\(see)h
([17,)13 b(18])32 b(for)g(a)f(formal)h(seman)n(tics\),)g(but)g(the)h
(general)e(idea)h(is)g(simple:)523 1548 y(the)h(receiv)n(er)d(is)i(in)n
(v)n(ok)n(ed)f(when)i(it)f(sees)g(the)h(information)e(w)n(a)n(v)n
(efron)n(t)f(that)j(the)g(sender)523 1648 y(sees)27 b(in)h(4)p
Fd(N)36 b Fp(to)27 b(6)p Fd(N)36 b Fp(execution)28 b(steps.)648
1752 y(In)g(some)f(cases,)g(the)i(abilit)n(y)f(to)g(sync)n(hronize)e
(the)j(arriv)-5 b(al)26 b(of)j(a)e(message)g(with)i(some)523
1852 y(elemen)n(t)21 b(of)g(the)g(data)f(stream)g(is)h(v)n(ery)e(imp)r
(ortan)n(t.)i(F)-7 b(or)20 b(example,)g Ff(CheckFreqHop)c
Fp(kno)n(ws)523 1951 y(that)28 b(the)g(transmitter)f(will)h(c)n(hange)e
(the)i(frequency)f(b)r(et)n(w)n(een)h(4)p Fd(N)36 b Fp(and)27
b(6)p Fd(N)36 b Fp(steps)28 b(later,)523 2051 y(in)f(terms)g(of)g(the)h
(frame)e(that)h Ff(CheckFreqHop)c Fp(is)j(inputting.)i(T)-7
b(o)27 b(ensure)f(that)i(the)f(radio)523 2150 y(c)n(hanges)k
(frequencies)h(at)h(the)g(same)f(time{so)g(as)g(not)h(to)g(lose)f(an)n
(y)g(data)g(at)g(the)h(old)g(or)523 2250 y(new)c(frequency{)p
Ff(CheckFreqHop)22 b Fp(instructs)29 b(the)g(receiv)n(er)e(to)h(switc)n
(h)h(frequencies)f(when)523 2350 y(the)g Fi(r)l(e)l(c)l(eiver)g
Fp(sees)f(one)h(of)f(the)h(last)f(data)g(items)h(at)g(the)g(old)f
(frequency)-7 b(.)648 2454 y Fg(P)m(ortals)28 b(for)h(broadcast)g
(messaging.)21 b Fp(StreamIt)k(also)e(has)h(supp)r(ort)h(for)f(mo)r
(dular)523 2553 y(broadcast)29 b(messaging.)g(When)i(a)f(sender)h(w)n
(an)n(ts)e(to)i(send)f(a)h(message)e(that)i(will)g(in)n(v)n(ok)n(e)523
2653 y(metho)r(d)39 b Fd(M)47 b Fp(of)39 b(the)g(receiv)n(er)e
Fd(R)i Fp(up)r(on)g(arriv)-5 b(al,)37 b(it)i(do)r(es)g(not)f(call)h
Fd(M)47 b Fp(on)38 b(the)h(ob)5 b(ject)523 2753 y Fd(R)q
Fp(.)34 b(Rather,)f(it)h(calls)f Fd(M)42 b Fp(on)34 b(a)f
Fi(Portal)h Fp(of)g(whic)n(h)g Fd(R)g Fp(is)g(a)f(mem)n(b)r(er.)g(P)n
(ortals)f(are)h(t)n(yp)r(ed)523 2852 y(con)n(tainers)17
b(that)j(forw)n(ard)d(all)i(messages)e(they)i(receiv)n(e)f(to)h(the)g
(elemen)n(ts)g(of)g(the)g(con)n(tainer.)523 2952 y(P)n(ortals)31
b(could)i(b)r(e)g(useful)h(in)f(cases)f(when)h(a)f(comp)r(onen)n(t)h
(of)g(a)g(\014lter)g(library)e(needs)i(to)523 3051 y(announce)d(a)f
(message)g(\(e.g.,)h(that)h(it)f(is)g(sh)n(utting)g(do)n(wn\))g(but)h
(do)r(es)f(not)g(kno)n(w)f(the)i(list)523 3151 y(of)j(recipien)n(ts;)g
(the)g(user)g(of)g(the)g(library)f(can)h(pass)f(to)h(the)h(\014lter)f
(a)g(P)n(ortal)e(con)n(taining)523 3251 y(all)d(in)n(terested)f(receiv)
n(ers.)g(As)h(for)f(message)g(deliv)n(ery)g(constrain)n(ts,)g(the)h
(user)f(sp)r(eci\014es)h(a)523 3350 y(single)d(time)h(in)n(terv)-5
b(al)26 b(for)f(eac)n(h)h(message,)f(and)h(that)h(in)n(terv)-5
b(al)25 b(is)i(in)n(terpreted)f(separately)523 3450 y(\(as)h(describ)r
(ed)h(ab)r(o)n(v)n(e\))e(for)h(eac)n(h)g(receiv)n(er)f(in)i(the)g(P)n
(ortal.)648 3554 y(In)j(a)f(language)g(with)h(generic)f(data)h(t)n(yp)r
(es,)g(a)g(P)n(ortal)e(could)i(b)r(e)g(implemen)n(ted)h(as)e(a)523
3653 y(templated)23 b(list.)f(Ho)n(w)n(ev)n(er,)e(since)i(Ja)n(v)-5
b(a)21 b(do)r(es)h(not)g(y)n(et)g(supp)r(ort)g(templates,)g(w)n(e)g
(automat-)523 3753 y(ically)j(generate)f(an)g Ff(<X>Portal)e
Fp(class)i(for)h(ev)n(ery)f(class)g(and)h(in)n(terface)f
Ff(<X>)p Fp(.)g(Our)h(syn)n(tax)523 3853 y(for)i(using)g(P)n(ortals)f
(is)h(eviden)n(t)h(in)g(the)g Ff(TrunkedRadio)22 b Fp(class)27
b(in)h(Figure)f(8.)523 4123 y Fg(Rationale)40 b Fp(Stream)26
b(programs)f(presen)n(t)h(a)h(c)n(hallenge)e(in)i(that)g(\014lters)g
(need)g(b)r(oth)g(regu-)523 4223 y(lar,)21 b(high-v)n(olume)g(data)h
(transfer)f(and)h(irregular,)e(lo)n(w-v)n(olume)g(con)n(trol)h(comm)n
(unication.)523 4322 y(Moreo)n(v)n(er,)27 b(there)j(is)g(the)h(problem)
e(of)h(reasoning)e(ab)r(out)i(the)h(relativ)n(e)d(\\time")i(b)r(et)n(w)
n(een)523 4422 y(\014lters)d(when)h(they)g(are)f(running)g(async)n
(hronously)e(and)i(in)h(parallel.)648 4526 y(A)g(di\013eren)n(t)g
(approac)n(h)f(to)h(messaging)e(is)i(to)h(em)n(b)r(ed)f(con)n(trol)f
(messages)f(in)j(the)f(data)523 4625 y(stream)c(instead)g(of)g(pro)n
(viding)f(a)h(separate)f(mec)n(hanism)g(for)h(dynamic)g(message)f
(passing.)523 4725 y(This)28 b(do)r(es)f(ha)n(v)n(e)f(the)i(e\013ect)g
(of)f(asso)r(ciating)f(the)i(message)e(time)i(with)g(a)f(data)g(item,)h
(but)523 4825 y(it)34 b(is)f(complicated,)g(error-prone,)d(and)j(leads)
g(to)g(unreadable)f(co)r(de.)h(F)-7 b(urther,)34 b(it)f(could)523
4924 y(h)n(urt)24 b(p)r(erformance)e(in)j(the)f(steady)f(state)h(\(if)g
(eac)n(h)f(\014lter)h(has)f(to)h(c)n(hec)n(k)f(whether)h(or)f(not)g(a)p
eop
%%Page: 12 12
12 11 bop 523 232 a Fo(12)199 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)
-6 b(erlag)523 448 y Fp(data)28 b(item)g(is)g(actual)g(data)f(or)h(con)
n(trol,)e(instead\))j(and)f(complicates)f(compiler)g(analysis,)523
548 y(to)r(o.)d(Finally)-7 b(,)24 b(one)g(can't)g(send)g(messages)f
(upstream)g(without)i(creating)e(a)h(separate)e(data)523
648 y(c)n(hannel)27 b(for)g(them)h(to)g(tra)n(v)n(el)e(in.)648
749 y(Another)d(solution)h(is)g(to)g(treat)f(messages)g(as)g(sync)n
(hronous)f(metho)r(d)i(calls.)g(Ho)n(w)n(ev)n(er,)523
848 y(this)36 b(dela)n(ys)f(the)h(progress)e(of)i(the)g(stream)f(when)h
(the)g(message)f(is)g(en)h(route,)g(thereb)n(y)523 948
y(degrading)19 b(the)h(p)r(erformance)g(of)g(the)h(program)d(and)i
(restricting)f(the)i(compiler's)e(freedom)523 1047 y(to)28
b(reorder)d(\014lter)j(executions.)648 1148 y(W)-7 b(e)38
b(feel)g(that)h(the)f(StreamIt)g(messaging)e(mo)r(del)i(is)g(an)g(adv)
-5 b(ance)37 b(in)i(that)f(it)g(sep-)523 1248 y(arates)d(the)i(notions)
g(of)f(lo)n(w-v)n(olume)f(and)i(high-v)n(olume)f(data)g(transfer{b)r
(oth)f(for)i(the)523 1348 y(programmer)g(and)j(the)g(compiler{without)f
(losing)g(a)h(w)n(ell-de\014ned)f(seman)n(tics)h(where)523
1447 y(messages)22 b(are)h Fi(time)l(d)h Fp(relativ)n(e)e(to)i(the)g
(high-v)n(olume)e(data)i(\015o)n(w.)f(F)-7 b(urther,)23
b(b)n(y)h(separating)523 1547 y(message)i(comm)n(unication)g(in)n(to)h
(its)h(o)n(wn)e(category)-7 b(,)26 b(few)n(er)g(connections)h(are)f
(needed)i(for)523 1647 y(steady-state)j(data)h(transfer)f(and)h(the)g
(resulting)g(stream)f(graphs)g(are)g(more)h(amenable)523
1746 y(to)c(structured)f(stream)g(programming.)523 2002
y Fg(3.4)95 b(Re-Initialization)523 2175 y Fp(One)34
b(of)f(the)h(c)n(haracteristics)e(of)i(a)f(streaming)g(application)g
(is)h(the)g(need)g(to)g(o)r(ccaision-)523 2275 y(ally)j(mo)r(dify)h
(the)g(structure)f(of)h(part)f(of)h(the)g(stream)f(graph.)f(StreamIt)i
(allo)n(ws)e(these)523 2374 y(c)n(hanges)c(through)g(a)g
(re-initialization)g(mec)n(hanism)h(that)g(is)g(in)n(tegrated)f(with)h
(its)g(mes-)523 2474 y(saging)g(mo)r(del.)i(If)h(a)e(sender)g(targets)g
(a)g(message)f(at)i(the)g Ff(init)e Fp(function)j(of)e(a)h(stream)523
2574 y(or)28 b(\014lter)h Fd(S)5 b Fp(,)28 b(then)i(when)f(the)g
(message)e(arriv)n(es,)g(it)i(re-executes)f(the)h(initialization)f(co)r
(de)523 2673 y(and)37 b(replaces)g Fd(S)42 b Fp(with)c(a)f(new)h(v)n
(ersion)e(of)i(itself.)g(Ho)n(w)n(ev)n(er,)d(the)j(new)g(v)n(ersion)e
(migh)n(t)523 2773 y(ha)n(v)n(e)26 b(a)g(di\013eren)n(t)h(structure)g
(than)g(the)g(original)f(if)h(the)h(argumen)n(ts)d(to)i(the)g
Ff(init)f Fp(call)g(on)523 2872 y(re-initialization)g(w)n(ere)h
(di\013eren)n(t)h(than)f(during)h(the)g(original)e(initialization.)648
2973 y(When)i(an)g Ff(init)f Fp(message)g(arriv)n(es,)f(it)j(do)r(es)f
(not)g(kill)h(all)f(of)g(the)g(data)g(that)h(is)f(in)h(the)523
3073 y(stream)i(b)r(eing)h(re-initialized.)g(Rather,)f(it)i
Fi(dr)l(ains)g Fp(the)f(stream)f(un)n(til)i(the)f(w)n(a)n(v)n(efron)n
(t)e(of)523 3173 y(information)23 b(\(as)h(de\014ned)g(for)f(the)i
(messaging)d(mo)r(del\))i(from)g(the)g(top)g(of)g(the)g(stream)g(has)
523 3272 y(reac)n(hed)h(the)i(b)r(ottom.)g(The)g(draining)e(o)r(ccurs)h
(without)h(consuming)f(an)n(y)f(data)h(from)h(the)523
3372 y(input)22 b(c)n(hannels)e(to)h(the)g(re-initialized)f(region.)g
(Instead,)h(a)f Ff(drain)f Fp(function)j(of)f(eac)n(h)f(\014lter)523
3472 y(is)j(in)n(v)n(ok)n(ed)f(to)h(pro)n(vide)f(input)i(when)f(its)g
(other)g(input)h(source)e(is)h(frozen.)f(\(Eac)n(h)g(\014lter)h(can)523
3571 y(o)n(v)n(erride)i(the)j Ff(drain)d Fp(function)i(as)g(part)g(of)g
(its)g(de\014nition.\))h(If)g(the)f(programmer)e(prefers)523
3671 y(to)h(kill)g(the)g(data)f(in)h(a)g(stream)f(segmen)n(t)g(instead)
h(of)g(draining)f(it,)h(this)g(can)g(b)r(e)g(indicated)523
3770 y(b)n(y)34 b(sending)f(an)h(extra)e(argumen)n(t)h(to)h(the)g
(message)e(p)r(ortal)i(with)g(the)g(re-initialization)523
3870 y(message.)523 4126 y Fg(Rationale)48 b Fp(Re-initialization)33
b(is)g(a)g(headac)n(he)f(for)h(stream)g(programmers)d(b)r(ecause{if)523
4226 y(done)i(man)n(ually{the)g(en)n(tire)g(run)n(time)g(system)g
(could)g(b)r(e)h(put)g(on)f(hold)h(to)f(re-initialize)523
4325 y(a)h(p)r(ortion)g(of)g(the)h(stream.)f(The)g(in)n(terface)g(to)g
(starting)g(and)g(stopping)g(streams)f(could)523 4425
y(b)r(e)37 b(complicated)g(when)g(there)g(is)g(not)g(an)g(explicit)g
(notion)g(of)g(initialization)g(time)g(vs.)523 4524 y(steady-state)e
(execution)h(time,)h(and)g(ad-ho)r(c)e(draining)h(tec)n(hniques)g
(could)g(risk)g(losing)523 4624 y(data)27 b(or)g(deadlo)r(c)n(king)f
(the)i(system.)648 4725 y(StreamIt)h(impro)n(v)n(es)e(on)i(this)h
(situation)f(b)n(y)g(abstracting)e(the)j(re-initialization)e(pro-)523
4825 y(cess)38 b(from)g(the)g(user.)g(That)g(is,)g(no)g(auxillary)f
(con)n(trol)g(program)f(is)i(needed)g(to)h(drain)523
4924 y(the)e(old)g(streams)e(and)i(create)e(the)i(new)g(structure;)f
(the)h(user)g(need)f(only)h(trigger)e(the)p eop
%%Page: 13 13
13 12 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)199 b(13)892 1447 y @beginspecial 70 @llx 296
@lly 450 @urx 490 @ury 2541 @rwi @setspecial
%%BeginDocument: fft-pre-tape.eps
%!PS-Adobe-3.0 EPSF-3.0

%%Title: (fft.fm)

%%Version: 1 3

%%Creator: (AdobePS5.dll Version 5.1.1)

%%CreationDate: (D:20010725101253)

%%DocumentData: Clean7Bit

%%LanguageLevel: 2

%%BoundingBox: 70 296 450 490

%%Pages: 0

%%DocumentProcessColors: Cyan Magenta Yellow Black

%%DocumentSuppliedResources:

%%+ procset (Adobe Acrobat - PDF operators) 1.2 0

%%+ procset (Adobe Acrobat - type operators) 1.2 0

%%EndComments



70 296 moveto

450 296 lineto

450 490 lineto

70 490 lineto

closepath clip newpath

%%BeginProlog

%%EndProlog

%%BeginSetup

%%BeginResource: l2check

%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.

systemdict /languagelevel known

{ systemdict /languagelevel get 1 eq }

{ true }

ifelse

{

initgraphics /Helvetica findfont 18 scalefont setfont

72 600 moveto (Error: Your printer driver needs to be configured) dup show

72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show

exch = =

/Helvetica-Bold findfont 16 scalefont setfont

72 520 moveto (Windows and Unix) show

/Times-Roman findfont 16 scalefont setfont

72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show

72 480 moveto (of the Acrobat print dialog.) show

/Helvetica-Bold findfont 16 scalefont setfont

72 440 moveto (Macintosh) show

/Times-Roman findfont 16 scalefont setfont

72 420 moveto (In the Chooser, select your printer driver.) show

72 400 moveto (Then select your printer and click the Setup button.) show

72 380 moveto (Follow any on-screen dialogs that may appear.) show

showpage

quit

}

if

%%EndResource

/currentpacking where{pop currentpacking true setpacking}if

%%BeginResource: procset pdfvars

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: definition of dictionary of variables used by PDF & PDFText procsets

userdict /PDF 160 dict put

userdict /PDFVars 86 dict dup begin put

/_save 0 def

/_cshow 0 def

/InitAll 0 def

/TermAll 0 def

/DocInitAll 0 def

/DocTermAll 0 def

/_lp /none def

/_doClip 0 def

/sfc 0 def

/_sfcs 0 def

/_sfc 0 def

/ssc 0 def

/_sscs 0 def

/_ssc 0 def

/_fcs 0 def

/_scs 0 def

/_fp 0 def

/_sp 0 def

/AGM_MAX_CS_COMPONENTS 10 def

/_fillColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_strokeColors [ 0 1 AGM_MAX_CS_COMPONENTS { array } for ] def

/_fc null def

/_sc null def

/DefaultGray [/DeviceGray] def

/DefaultRGB [/DeviceRGB] def

/DefaultCMYK [/DeviceCMYK] def

/_inT false def

/_tr -1 def

/_rise 0 def

/_ax 0 def

/_cx 0 def

/_ld 0 def

/_tm matrix def

/_ctm matrix def

/_mtx matrix def

/_hy (-) def

/_fScl 0 def

/_hs 1 def

/_pdfEncodings 2 array def

/_baselineadj 0 def

/_fTzero false def

/_Tj 0 def

/_italMtx [1 0 .212557 1 0 0] def

/_italMtx_WMode1 [1 -.212557 0 1 0 0] def

/_italMtxType0 [1 0 .1062785 1 0 0] def

/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def

/_basefont 0 def

/_basefonto 0 def

/_pdf_oldCIDInit null def

/_pdf_FontDirectory 30 dict def

/_categories 10 dict def

/_sa? true def

/_op? false def

/_OP? false def

/_opmode 0 def

/_ColorSep5044? false def

/_tmpcolr? [] def

/_tmpop? {} def

/_processColors 0 def

/_defaulttransfer currenttransfer def

/_defaultflatness currentflat def

/_defaulthalftone null def

/_defaultcolortransfer null def

/_defaultblackgeneration null def

/_defaultundercolorremoval null def

/_defaultcolortransfer null def

end

%%EndResource

PDFVars begin PDF begin

%%BeginResource: procset pdfutil

%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Version: 4.0 2

%%Title: Basic utilities used by other PDF procsets

/bd {bind def} bind def

/ld {load def} bd

/bld {

dup length dict begin

{ null def } forall

bind

end

def

} bd

/dd { PDFVars 3 1 roll put } bd

/xdd { exch dd } bd

/Level2?

systemdict /languagelevel known

{ systemdict /languagelevel get 2 ge } { false } ifelse

def

/Level3?

systemdict /languagelevel known

{systemdict /languagelevel get 3 eq } { false } ifelse

def

/getifknown {

2 copy known { get true } { pop pop false } ifelse

} bd

/here {

currentdict exch getifknown

} bd

/isdefined? { where { pop true } { false } ifelse } bd

/StartLoad { dup dup not { /_save save dd } if } bd

/EndLoad { if not { _save restore } if } bd

%%EndResource

%%BeginResource: procset pdf

%%Version: 4.0 3

%%Copyright: Copyright 1998-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: General operators for PDF, common to all Language Levels.

[/b/B/b*/B*/BDC/BI/BMC/BT/BX/c/cm/cs/CS/d/d0/d1/Do/DP/EI/EMC/ET/EX/f/f*/g/G/gs

/h/i/j/J/k/K/l/m/M/MP/n/q/Q/re/rg/RG/ri/s/S/sc/SC/scn/SCN/sg/Tc/Td/TD/Tf/Tj/TJ

/TL/Tm/Tr/Ts/Tw/Tz/T*/v/w/W/W*/y/'/"

/applyInterpFunc/applystitchFunc/domainClip/EF/encodeInput/gsDI/ilp/icl

/initgs/int/limit/PS/rangeClip/RC/rf/makePat/csfamily 

/? /! /| /: /+ /GetGlyphDirectory

] {null def} bind forall

/v { currentpoint 6 2 roll c } bd

/y { 2 copy c } bd

/h/closepath ld

/d/setdash ld

/j/setlinejoin ld

/J/setlinecap ld

/M/setmiterlimit ld

/w/setlinewidth ld

/i {

dup 0 eq { pop _defaultflatness } if

setflat

} bd

/gsDI {

begin

/OP here { /_OP? xdd } if

/op here { /_op? xdd }

{ /OP here { /_op? xdd } if }

ifelse

/OPM here { /_opmode xdd } if

/Font here { aload pop Tf } if

/LW here { w } if

/LC here { J } if

/LJ here { j } if

/ML here { M } if

/D here { aload pop d } if

end

} bd

/ilp { /_lp /none dd } bd

/icl { /_doClip 0 dd } bd

/W { /_doClip 1 dd } bd

/W* { /_doClip 2 dd } bd

/n {

{{} {clip} {eoclip}} _doClip get exec

icl

newpath

} bd

/s { h S } bd

/B { q f Q S } bd

/B* { q f* Q S } bd

/b { h B } bd

/b* { h B* } bd

/q/save ld

/Q { restore ilp } bd

/GetCSFamily {

dup type /arraytype eq {0 get} if

} bd

/GetCompsDict

11 dict begin

/DeviceGray { pop 1 } bd

/DeviceRGB { pop 3 } bd

/DeviceCMYK { pop 4 } bd

/CIEBasedA { pop 1 } bd

/CIEBasedABC { pop 3 } bd

/CIEBasedDEF { pop 3 } bd

/CIEBasedDEFG { pop 4 } bd

/DeviceN { 1 get length } bd

/Separation { pop 1 } bd

/Indexed { pop 1 } bd

/Pattern { pop 0 } bd

currentdict

end

def

/GetComps {

GetCompsDict

1 index GetCSFamily

get exec

} bd

/cs

{

dup _fcs eq

{ pop }

{ dup /_fcs xdd

GetComps

_fillColors exch get

/_fc xdd

/_fp null dd

} ifelse

} bd

/CS

{

dup _scs eq

{ pop }

{ dup /_scs xdd GetComps _strokeColors exch get /_sc xdd /_sp null dd }

ifelse

} bd

/sc {

_fc astore pop

ilp

} bd

/SC {

_sc astore pop

ilp

} bd

/g { DefaultGray cs sc } bd

/rg { DefaultRGB cs sc } bd

/k { DefaultCMYK cs sc } bd

/G { DefaultGray CS SC } bd

/RG { DefaultRGB CS SC } bd

/K { DefaultCMYK CS SC } bd

/cm { _mtx astore concat } bd

/re {

4 2 roll m

1 index 0 rlineto

0 exch rlineto

neg 0 rlineto

h

} bd

/RC/rectclip ld

/EF/execform ld

/PS { cvx exec } bd

/initgs {

/DefaultGray [/DeviceGray] dd

/DefaultRGB [/DeviceRGB] dd

/DefaultCMYK [/DeviceCMYK] dd

0 g 0 G

[] 0 d

0 j

0 J

10 M

1 w

true setSA

/_op? false dd

/_OP? false dd

/_opmode 0 dd

/_defaulttransfer load settransfer

0 i

/RelativeColorimetric ri

newpath

} bd

/int {

dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul

exch pop add exch pop

} bd

/limit {

dup 2 index le { exch } if pop

dup 2 index ge { exch } if pop

} bd

/domainClip {

Domain aload pop 3 2 roll

limit

} [/Domain] bld

/applyInterpFunc {

0 1 DimOut 1 sub

{

dup C0 exch get exch

dup C1 exch get exch

3 1 roll

1 index sub

3 index

N exp mul add

exch

currentdict /Range_lo known

{

dup Range_lo exch get exch

Range_hi exch get

3 2 roll limit

}

{

pop

}

ifelse

exch

} for

pop

} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld

/encodeInput {

NumParts 1 sub

0 1 2 index

{

dup Bounds exch get

2 index gt

{ exit }

{ dup

3 index eq

{ exit }

{ pop } ifelse

} ifelse

} for

3 2 roll pop

dup Bounds exch get exch

dup 1 add Bounds exch get exch

2 mul

dup Encode exch get exch

1 add Encode exch get

int

} [/NumParts /Bounds /Encode] bld

/rangeClip {

exch dup Range_lo exch get

exch Range_hi exch get

3 2 roll

limit

} [/Range_lo /Range_hi] bld

/applyStitchFunc {

Functions exch get exec

currentdict /Range_lo known {

0 1 DimOut 1 sub {

DimOut 1 add -1 roll

rangeClip

} for

} if

} [/Functions /Range_lo /DimOut] bld

%%EndResource

%%BeginResource: procset pdflev2

%%Version: 4.0 5

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%LanguageLevel: 2

%%Title: PDF operators, with code specific for Level 2

/_defaulthalftone currenthalftone dd

/_defaultblackgeneration currentblackgeneration dd

/_defaultundercolorremoval currentundercolorremoval dd

/_defaultcolortransfer [currentcolortransfer] dd

/initialize {

_defaulthalftone sethalftone

/_defaultblackgeneration load setblackgeneration

/_defaultundercolorremoval load setundercolorremoval

_defaultcolortransfer aload pop setcolortransfer

false setoverprint

<</MaxFormItem 0>> setuserparams

} bd

/terminate { } bd

/m/moveto ld

/l/lineto ld

/c/curveto ld

/setSA/setstrokeadjust ld

/defineRes/defineresource ld

/findRes/findresource ld

currentglobal

true systemdict /setglobal get exec

[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource]

{ /Generic /Category findresource dup length dict copy /Category defineresource pop }

forall

systemdict /setglobal get exec

/ri

{

/findcolorrendering isdefined?

{

mark exch

findcolorrendering

counttomark 2 eq

{ type /booleantype eq

{ dup type /nametype eq

{ dup /ColorRendering resourcestatus

{ pop pop

dup /DefaultColorRendering ne

{

/ColorRendering findresource

setcolorrendering

} if

} if

} if

} if

} if

cleartomark

}

{ pop

} ifelse

} bd

/_sfcs {_fcs setcolorspace} bind dd

/_sscs {_scs setcolorspace} bind dd

/_sfc

{

_fc aload pop

_fp null eq

{ setcolor }

{ _fp setpattern }

ifelse

} bind dd

/_ssc

{

_sc aload pop

_sp null eq { setcolor} { _sp setpattern } ifelse

} bind dd

/scn {

dup type /dicttype eq

{ dup /_fp xdd

/PaintType get 1 eq

{ /_fc _fillColors 0 get dd ilp }

{ /_fc _fillColors

_fcs 1 get

GetComps get dd

sc

}

ifelse

}

{ sc }

ifelse

} bd

/SCN {

dup type /dicttype eq

{ dup /_sp xdd

/PaintType get 1 eq

{ /_sc _strokeColors 0 get dd ilp }

{ /_sc _strokeColors _scs 1 get GetComps get dd

SC

}

ifelse

}

{ SC }

ifelse

} bd

/gs

{

begin

/SA here { setstrokeadjust } if

/BG here { setblackgeneration } if

/UCR here { setundercolorremoval } if

/FL here { i } if

/RI here { ri } if

/TR here

{

dup xcheck

{ settransfer }

{ aload pop setcolortransfer }

ifelse

} if

/sethalftonephase isdefined? { /HTP here { sethalftonephase } if } if

/HT here { sethalftone } if

currentdict gsDI

end

} bd

/sfc {

_op? setoverprint

_lp /fill ne {

_sfcs

_sfc

/_lp /fill dd

} if

} dd

/ssc {

_OP? setoverprint

_lp /stroke ne {

_sscs

_ssc

/_lp /stroke dd

} if

} dd

/f {

{ { sfc fill }

{gsave sfc fill grestore clip newpath icl ilp}

{gsave sfc fill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/f* {

{ { sfc eofill }

{gsave sfc eofill grestore clip newpath icl ilp}

{gsave sfc eofill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/S {

{ { ssc stroke }

{gsave ssc stroke grestore clip newpath icl ilp}

{gsave ssc stroke grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/rf {

{ { sfc rectfill }

{gsave sfc rectfill grestore clip newpath icl ilp}

{gsave sfc rectfill grestore eoclip newpath icl ilp}

} _doClip get exec

} bd

/knownColorants? {

pop false

} bd

/makePat {

gsave

dup /Matrix get concat

matrix makepattern

grestore

/MadePattern defineRes pop

} bd

%%EndResource

%%BeginResource: procset spots

%%Version: 4.0 1

%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Predefined (named) spot functions for PDF

21 dict dup begin

/CosineDot

{ 180 mul cos exch 180 mul cos add 2 div } bd

/Cross

{ abs exch abs 2 copy gt { exch } if pop neg } bd

/Diamond

{ abs exch abs 2 copy add .75 le

{ dup mul exch dup mul add 1 exch sub }

{ 2 copy add 1.23 le

{ .85 mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse }

ifelse } bd

/Double

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add } bd

/DoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add } bd

/Ellipse

{ abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt

{ pop dup mul exch .75 div dup mul add 4 div

1 exch sub }

{ dup 1 gt

{pop 1 exch sub dup mul exch 1 exch sub

.75 div dup mul add 4 div 1 sub }

{ .5 exch sub exch pop exch pop }

ifelse }

ifelse } bd

/EllipseA

{ dup mul .9 mul exch dup mul add 1 exch sub } bd

/EllipseB

{ dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub } bd

/EllipseC

{ dup mul exch dup mul .9 mul add 1 exch sub } bd

/InvertedDouble

{ exch 2 div exch 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedDoubleDot

{ 2 { 360 mul sin 2 div exch } repeat add neg } bd

/InvertedEllipseA

{ dup mul .9 mul exch dup mul add 1 sub } bd

/InvertedEllipseC

{ dup mul exch dup mul .9 mul add 1 sub } bd

/InvertedSimpleDot

{ dup mul exch dup mul add 1 sub } bd

/Line

{ exch pop abs neg } bd

/LineX

{ pop } bd

/LineY

{ exch pop } bd

/Rhomboid

{ abs exch abs 0.9 mul add 2 div } bd

/Round

{ abs exch abs 2 copy add 1 le

{ dup mul exch dup mul add 1 exch sub }

{ 1 sub dup mul exch 1 sub dup mul add 1 sub }

ifelse } bd

/SimpleDot

{ dup mul exch dup mul add 1 exch sub } bd

/Square

{ abs exch abs 2 copy lt { exch } if pop neg } bd

end

{ /Function defineRes pop } forall

%%EndResource

%%BeginResource: procset pdftext

%%Version: 4.0 2

%%Copyright: Copyright 1987-1998 Adobe Systems Incorporated. All Rights Reserved.

%%Title: Text operators for PDF

PDF /PDFText 75 dict dup begin put

/docinitialize

{

/resourcestatus where {

pop

/CIDParams /ProcSet resourcestatus {

pop pop

false /CIDParams /ProcSet findresource /SetBuildCompatible get exec

} if

} if

PDF begin

PDFText /_pdfDefineIdentity-H known

{ PDFText /_pdfDefineIdentity-H get exec}

if

end

} bd

/initialize {

PDFText begin

/_intT false dd

0 Tr

} bd

/terminate { end } bd

/_safeput

{

Level2? not

{

2 index load dup dup length exch maxlength ge

{ dup length 5 add dict copy

3 index xdd

}

{ pop }

ifelse

}

if

3 -1 roll load 3 1 roll put

}

bd

/pdf_has_composefont? systemdict /composefont known def

/CopyFont {

{

1 index /FID ne 2 index /UniqueID ne and

{ def } { pop pop } ifelse

} forall

} bd

/Type0CopyFont

{

exch

dup length dict

begin

CopyFont

[

exch

FDepVector

{

dup /FontType get 0 eq

{

1 index Type0CopyFont

/_pdfType0 exch definefont

}

{

/_pdfBaseFont exch

2 index exec

}

ifelse

exch

}

forall

pop

]

/FDepVector exch def

currentdict

end

} bd

/cHexEncoding

[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12

/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25

/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38

/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B

/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E

/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71

/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84

/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97

/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA

/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD

/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0

/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3

/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6

/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def

/modEnc {

/_enc xdd

/_icode 0 dd

counttomark 1 sub -1 0

{

index

dup type /nametype eq

{

_enc _icode 3 -1 roll put

_icode 1 add

}

if

/_icode xdd

} for

cleartomark

_enc

} bd

/trEnc {

/_enc xdd

255 -1 0 {

exch dup -1 eq

{ pop /.notdef }

{ Encoding exch get }

ifelse

_enc 3 1 roll put

} for

pop

_enc

} bd

/TE {

/_i xdd

StandardEncoding 256 array copy modEnc

_pdfEncodings exch _i exch put

} bd

/TZ

{

/_usePDFEncoding xdd

findfont

dup length 6 add dict

begin

{

1 index /FID ne { def } { pop pop } ifelse

} forall

/pdf_origFontName FontName def

/FontName exch def

_usePDFEncoding 0 ge

{

/Encoding _pdfEncodings _usePDFEncoding get def

pop

}

{

_usePDFEncoding -1 eq

{

counttomark 0 eq

{ pop }

{

Encoding 256 array copy

modEnc /Encoding exch def

}

ifelse

}

{

256 array

trEnc /Encoding exch def

}

ifelse

}

ifelse

pdf_EuroProcSet pdf_origFontName known

{

pdf_origFontName pdf_AddEuroGlyphProc

} if

FontName currentdict

end

definefont pop

}

bd

/Level2?

systemdict /languagelevel known

{systemdict /languagelevel get 2 ge}

{false}

ifelse

def

Level2?

{

/_pdfFontStatus

{

currentglobal exch

/Font resourcestatus

{pop pop true}

{false}

ifelse

exch setglobal

} bd

}

{

/_pdfFontStatusString 50 string def

_pdfFontStatusString 0 (fonts/) putinterval

/_pdfFontStatus

{

FontDirectory 1 index known

{ pop true }

{

_pdfFontStatusString 6 42 getinterval

cvs length 6 add

_pdfFontStatusString exch 0 exch getinterval

{ status } stopped

{pop false}

{

{ pop pop pop pop true}

{ false }

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

Level2?

{

/_pdfCIDFontStatus

{

/CIDFont /Category resourcestatus

{

pop pop

/CIDFont resourcestatus

{pop pop true}

{false}

ifelse

}

{ pop false }

ifelse

} bd

}

if

/_pdfString100 100 string def

/_pdfComposeFontName

{

dup length 1 eq

{

0 get

1 index

type /nametype eq

{

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

2 index exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

exch pop

true

}

{

pop pop

false

}

ifelse

}

{

false

}

ifelse

dup {exch cvn exch} if

} bd

/_pdfConcatNames

{

exch

_pdfString100 cvs

length dup dup _pdfString100 exch (-) putinterval

_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval

3 -1 roll exch cvs length

add 1 add _pdfString100 exch 0 exch getinterval

cvn

} bind def

/_pdfTextTempString 50 string def

/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def

/_pdf_CheckSupplements

{

1 index _pdfTextTempString cvs

false

_pdfRegOrderingArray

{

2 index exch

anchorsearch

{ pop pop pop true exit}

{ pop }

ifelse

}

forall

exch pop

{

/CIDFont findresource

/CIDSystemInfo get /Supplement get

exch /CMap findresource

/CIDSystemInfo get

dup type /dicttype eq

{/Supplement get}

{pop 0 }

ifelse

ge

}

{ pop pop true }

ifelse

} bind def

pdf_has_composefont?

{

/_pdfComposeFont

{

2 copy _pdfComposeFontName not

{

2 index

}

if

(pdf) exch _pdfConcatNames

dup _pdfFontStatus

{ dup findfont 5 2 roll pop pop pop true}

{

4 1 roll

1 index /CMap resourcestatus

{

pop pop

true

}

{false}

ifelse

1 index true exch

{

_pdfCIDFontStatus not

{pop false exit}

if

}

forall

and

{

1 index 1 index 0 get _pdf_CheckSupplements

{

3 -1 roll pop

2 index 3 1 roll

composefont true

}

{

pop pop exch pop false

}

ifelse

}

{

_pdfComposeFontName

{

dup _pdfFontStatus

{

exch pop

1 index exch

findfont definefont true

}

{

pop exch pop

false

}

ifelse

}

{

exch pop

false

}

ifelse

}

ifelse

{ true }

{

dup _pdfFontStatus

{ dup findfont true }

{ pop false }

ifelse

}

ifelse

}

ifelse

} bd

}

{

/_pdfComposeFont

{

_pdfComposeFontName not

{

dup

}

if

dup

_pdfFontStatus

{exch pop dup findfont true}

{

1 index

dup type /nametype eq

{pop}

{cvn}

ifelse

eq

{pop false}

{

dup _pdfFontStatus

{dup findfont true}

{pop false}

ifelse

}

ifelse

}

ifelse

} bd

}

ifelse

/_pdfStyleDicts 4 dict dup begin

/Adobe-Japan1 4 dict dup begin

Level2?

{

/Serif

/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMin-W3}

{

/HeiseiMin-W3 _pdfCIDFontStatus

{/HeiseiMin-W3}

{/Ryumin-Light}

ifelse

}

ifelse

def

/SansSerif

/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus

{/HeiseiKakuGo-W5}

{

/HeiseiKakuGo-W5 _pdfCIDFontStatus

{/HeiseiKakuGo-W5}

{/GothicBBB-Medium}

ifelse

}

ifelse

def

/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus

{/HeiseiMaruGo-W4}

{

/HeiseiMaruGo-W4 _pdfCIDFontStatus

{/HeiseiMaruGo-W4}

{

/Jun101-Light-RKSJ-H _pdfFontStatus

{ /Jun101-Light }

{ SansSerif }

ifelse

}

ifelse

}

ifelse

/RoundSansSerif exch def

/Default Serif def

}

{

/Serif /Ryumin-Light def

/SansSerif /GothicBBB-Medium def

{

(fonts/Jun101-Light-83pv-RKSJ-H) status

}stopped

{pop}{

{ pop pop pop pop /Jun101-Light }

{ SansSerif }

ifelse

/RoundSansSerif exch def

}ifelse

/Default Serif def

}

ifelse

end

def

/Adobe-Korea1 4 dict dup begin

/Serif /HYSMyeongJo-Medium def

/SansSerif /HYGoThic-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-GB1 4 dict dup begin

/Serif /STSong-Light def

/SansSerif /STHeiti-Regular def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

/Adobe-CNS1 4 dict dup begin

/Serif /MKai-Medium def

/SansSerif /MHei-Medium def

/RoundSansSerif SansSerif def

/Default Serif def

end

def

end

def

/TZzero

{

/_fyAdj xdd

/_wmode xdd

/_styleArr xdd

/_regOrdering xdd

3 copy

_pdfComposeFont

{

5 2 roll pop pop pop

}

{

[

0 1 _styleArr length 1 sub

{

_styleArr exch get

_pdfStyleDicts _regOrdering 2 copy known

{

get

exch 2 copy known not

{ pop /Default }

if

get

}

{

pop pop pop /Unknown

}

ifelse

}

for

]

exch pop

2 index 3 1 roll

_pdfComposeFont

{3 -1 roll pop}

{

findfont dup /FontName get exch

}

ifelse

}

ifelse

dup /WMode 2 copy known

{ get _wmode ne }

{ pop pop _wmode 1 eq}

ifelse

_fyAdj 0 ne or

{

exch _wmode _pdfConcatNames _fyAdj _pdfConcatNames

dup _pdfFontStatus

{ exch pop dup findfont false}

{ exch true }

ifelse

}

{

dup /FontType get 0 ne

}

ifelse

{

dup /FontType get 3 eq _wmode 1 eq and

{

_pdfVerticalRomanT3Font dup length 10 add dict copy

begin

/_basefont exch

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}

if

def

FontName

currentdict

end

definefont

def

/Encoding _basefont /Encoding get def

/_fauxfont true def

}

{

dup length 3 add dict

begin

{1 index /FID ne {def}{pop pop} ifelse }

forall

FontType 0 ne

{

/Encoding Encoding dup length array copy

dup 16#27 /quotesingle put

dup 16#60 /grave put

_regOrdering /Adobe-Japan1 eq

{dup 16#5c /yen put}

if

def

/_fauxfont true def

} if

} ifelse

/WMode _wmode def

/BaseLineAdj _fyAdj def

dup dup /FontName exch def

currentdict

end

definefont pop

}

{

pop

}

ifelse

/_pdf_FontDirectory 3 1 roll _safeput

}

bd

/swj {

dup 4 1 roll

dup length exch stringwidth

exch 5 -1 roll 3 index mul add

4 1 roll 3 1 roll mul add

6 2 roll /_cnt 0 dd

{1 index eq {/_cnt _cnt 1 add dd} if} forall pop

exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop

} bd

/jss {

4 1 roll

{

pop pop

(0) exch 2 copy 0 exch put

gsave

exch false charpath currentpoint

5 index setmatrix stroke

3 -1 roll

32 eq

{

moveto

5 index 5 index rmoveto currentpoint

}

if

grestore

moveto

2 copy rmoveto

} exch cshow

6 {pop} repeat

} def

/jsfTzero {

{

pop pop

(0) exch 2 copy 0 exch put

exch show

32 eq

{

4 index 4 index rmoveto

}

if

2 copy rmoveto

} exch cshow

5 {pop} repeat

} def

/jsp

{

{

pop pop

(0) exch 2 copy 0 exch put

32 eq

dup {currentfont /Encoding get dup length 33 ge 

{32 get /space eq and}{pop}ifelse

}if

{ exch 5 index 5 index 5 index 5 -1 roll widthshow }

{ false charpath }

ifelse

2 copy rmoveto

} exch cshow

5 {pop} repeat

} bd

/trj { _cx 0 fWModeProc 32 _ax 0 fWModeProc 6 5 roll } bd

/pjsf { trj sfc fawidthshowProc } bd

/pjss { trj _ctm ssc jss } bd

/pjsc { trj jsp } bd

/_Tjdef [

/pjsf load

/pjss load

{

dup

currentpoint 3 2 roll

pjsf

newpath moveto

pjss

} bind

{

trj swj rmoveto

} bind

{

dup currentpoint 4 2 roll gsave

pjsf

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll

currentpoint gsave newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

{

dup currentpoint 4 2 roll gsave

dup currentpoint 3 2 roll

pjsf

newpath moveto

pjss

grestore 3 1 roll moveto

pjsc

} bind

/pjsc load

] def

/BT

{

/_inT true dd

_ctm currentmatrix pop matrix _tm copy pop

0 _rise _baselineadj add translate _hs 1 scale

0 0 moveto

} bd

/ET

{

/_inT false dd

_tr 3 gt {clip} if

_ctm setmatrix newpath

} bd

/Tr {

_inT { _tr 3 le {currentpoint newpath moveto} if } if

dup /_tr xdd

_Tjdef exch get /_Tj xdd

} bd

/Tj {

userdict /$$copystring 2 index put

_Tj

} bd

/iTm { _ctm setmatrix _tm concat 0 _rise _baselineadj add translate _hs 1 scale } bd

/Tm { _tm astore pop iTm 0 0 moveto } bd

/Td { _mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto } bd

/TD { dup /_ld xdd Td } bd

/_nullProc {} bd

/Tf {

dup 1000 div /_fScl xdd

_pdf_FontDirectory 2 index 2 copy known

{get exch 3 -1 roll pop}

{pop pop}

ifelse

Level2?

{ selectfont }

{ exch findfont exch scalefont setfont}

ifelse

currentfont dup

/_nullProc exch

/WMode known

{

1 index /WMode get 1 eq

{pop /exch}

if

}

if

load /fWModeProc xdd

dup

/FontType get 0 eq dup _cx 0 ne and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

/_fTzero xdd

dup /BaseLineAdj known

{ dup /BaseLineAdj get _fScl mul }

{ 0 }

ifelse

/_baselineadj xdd

dup /_pdfT3Font known

{ 0 }

{_tr}

ifelse

_Tjdef exch get /_Tj xdd

_intT

{currentpoint iTm moveto}

if

pop

} bd

/TL { neg /_ld xdd } bd

/Tw {

/_cx xdd

_cx 0 ne _fTzero and

{ /jsfTzero }

{ /awidthshow }

ifelse

load /fawidthshowProc xdd

} bd

/Tc { /_ax xdd } bd

/Ts { /_rise xdd currentpoint iTm moveto } bd

/Tz { 100 div /_hs xdd iTm } bd

/Tk { exch pop _fScl mul neg 0 fWModeProc rmoveto } bd

/T* { 0 _ld Td } bd

/' { T* Tj } bd

/" { exch Tc exch Tw ' } bd

/TJ {

{

dup type /stringtype eq

{ Tj }

{ 0 exch Tk }

ifelse

} forall

} bd

/T- { _hy Tj } bd

/d0/setcharwidth ld

/d1 { setcachedevice /sfc{}dd /ssc{}dd } bd

/nND {{/.notdef} repeat} bd

/T3Defs {

/BuildChar

{

1 index /Encoding get exch get

1 index /BuildGlyph get exec

}

def

/BuildGlyph {

exch begin

GlyphProcs exch get exec

end

} def

/_pdfT3Font true def

} bd

/_pdfBoldRomanWidthProc

{

stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth

0 0

} bd

/_pdfType0WidthProc

{

dup stringwidth 0 0 moveto

2 index true charpath pathbbox

0 -1

7 index 2 div .88

setcachedevice2

pop

0 0

} bd

/_pdfType0WMode1WidthProc

{

dup stringwidth

pop 2 div neg -0.88

2 copy

moveto

0 -1

5 -1 roll true charpath pathbbox

setcachedevice

} bd

/_pdfBoldBaseFont

11 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/Encoding cHexEncoding def

/_setwidthProc /_pdfBoldRomanWidthProc load def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

pdf_has_composefont?

{

/_pdfBoldBaseCIDFont

11 dict begin

/CIDFontType 1 def

/CIDFontName /_pdfBoldBaseCIDFont def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_setwidthProc /_pdfType0WidthProc load def

/_bcstr2 2 string def

/BuildGlyph

{

exch begin

_basefont setfont

_bcstr2 1 2 index 256 mod put

_bcstr2 0 3 -1 roll 256 idiv put

_bcstr2 dup _setwidthProc

3 copy

moveto

show

_basefonto setfont

moveto

show

end

}bd

currentdict

end

def

/_pdfDefineIdentity-H

{

/Identity-H /CMap resourcestatus

{

pop pop

}

{

/CIDInit/ProcSet findresource begin 12 dict begin

begincmap

/CIDSystemInfo

3 dict begin

/Registry (Adobe) def

/Ordering (Identity) def

/Supplement 0 def

currentdict

end

def

/CMapName /Identity-H def

/CMapVersion 1 def

/CMapType 1 def

1 begincodespacerange

<0000> <ffff>

endcodespacerange

1 begincidrange

<0000> <ffff> 0

endcidrange

endcmap

CMapName currentdict/CMap defineresource pop

end

end

} ifelse

} def

} if

/_pdfVerticalRomanT3Font

10 dict begin

/FontType 3 def

/FontMatrix[1 0 0 1 0 0]def

/FontBBox[0 0 1 1]def

/_bcstr1 1 string def

/BuildChar

{

exch begin

_basefont setfont

_bcstr1 dup 0 4 -1 roll put

dup

_pdfType0WidthProc

moveto

show

end

}bd

currentdict

end

def

/MakeBoldFont

{

dup /ct_SyntheticBold known

{

dup length 3 add dict begin

CopyFont

/ct_StrokeWidth .03 0 FontMatrix idtransform pop def

/ct_SyntheticBold true def

currentdict

end

definefont

}

{

dup dup length 3 add dict

begin

CopyFont

/PaintType 2 def

/StrokeWidth .03 0 FontMatrix idtransform pop def

/dummybold currentdict

end

definefont

dup /FontType get dup 9 ge exch 11 le and

{

_pdfBoldBaseCIDFont

dup length 3 add dict copy begin

dup /CIDSystemInfo get /CIDSystemInfo exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefont exch def

/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont

/_basefonto exch def

currentdict

end

/CIDFont defineresource

}

{

_pdfBoldBaseFont

dup length 3 add dict copy begin

/_basefont exch def

/_basefonto exch def

currentdict

end

definefont

}

ifelse

}

ifelse

} bd

/MakeBold {

1 index

_pdf_FontDirectory 2 index 2 copy known

{get}

{exch pop}

ifelse

findfont

dup

/FontType get 0 eq

{

dup /WMode known {dup /WMode get 1 eq }{false} ifelse

version length 4 ge

and

{version 0 4 getinterval cvi 2015 ge }

{true}

ifelse

{/_pdfType0WidthProc}

{/_pdfType0WMode1WidthProc}

ifelse

_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put

{MakeBoldFont} Type0CopyFont definefont

}

{

dup /_fauxfont known not 1 index /SubstMaster known not and

{

_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put

MakeBoldFont

}

{

2 index 2 index eq

{ exch pop }

{

dup length dict begin

CopyFont

currentdict

end

definefont

}

ifelse

}

ifelse

}

ifelse

pop pop

dup /dummybold ne

{/_pdf_FontDirectory exch dup _safeput }

{ pop }

ifelse

}bd

/MakeItalic {

_pdf_FontDirectory exch 2 copy known

{get}

{exch pop}

ifelse

dup findfont

dup /FontInfo 2 copy known

{

get

/ItalicAngle 2 copy known

{get 0 eq }

{ pop pop true}

ifelse

}

{ pop pop true}

ifelse

{

exch pop

dup /FontType get 0 eq Level2? not and

{ dup /FMapType get 6 eq }

{ false }

ifelse

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1Type0 }

{ _italMtxType0 }

ifelse

}

{ pop pop _italMtxType0 }

ifelse

}

{

dup /WMode 2 copy known

{

get 1 eq

{ _italMtx_WMode1 }

{ _italMtx }

ifelse

}

{ pop pop _italMtx }

ifelse

}

ifelse

makefont

dup /FontType get 42 eq Level2? not or

{

dup length dict begin

CopyFont

currentdict

end

}

if

1 index exch

definefont pop

/_pdf_FontDirectory exch dup _safeput

}

{

pop

2 copy ne

{

/_pdf_FontDirectory 3 1 roll _safeput

}

{ pop pop }

ifelse

}

ifelse

}bd

/MakeBoldItalic {

/dummybold exch

MakeBold

/dummybold

MakeItalic

}bd

Level2?

{

/pdf_CopyDict

{1 index length add dict copy}

def

}

{

/pdf_CopyDict

{

1 index length add dict

1 index wcheck

{ copy }

{ begin

{def} forall

currentdict

end

}

ifelse

}

def

}

ifelse

/pdf_AddEuroGlyphProc

{

currentdict /CharStrings known

{

CharStrings /Euro known not

{

dup

/CharStrings

CharStrings 1 pdf_CopyDict

begin

/Euro pdf_EuroProcSet 4 -1 roll get def

currentdict

end

def

/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def

/pdf_PathOps /pdf_PathOps load def

/Symbol eq

{

/Encoding Encoding dup length array copy

dup 160 /Euro put def

}

if

}

{ pop

}

ifelse

}

{ pop

}

ifelse

}

def

/pdf_PathOps 4 dict dup begin

/m {moveto} def

/l {lineto} def

/c {curveto} def

/cp {closepath} def

end

def

/pdf_PSBuildGlyph

{

gsave

8 -1 roll pop

7 1 roll

currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse

dup 9 1 roll

{

currentdict /StrokeWidth 2 copy known

{

get 2 div

5 1 roll

4 -1 roll 4 index sub

4 1 roll

3 -1 roll 4 index sub

3 1 roll

exch 4 index add exch

4 index add

5 -1 roll pop

}

{

pop pop

}

ifelse

}

if

setcachedevice

pdf_PathOps begin

exec

end

{

currentdict /StrokeWidth 2 copy known

{ get }

{ pop pop 0 }

ifelse

setlinewidth stroke

}

{

fill

}

ifelse

grestore

} def

/pdf_EuroProcSet 13 dict def

pdf_EuroProcSet

begin

/Courier-Bold

{

600 0 6 -12 585 612

{

385 274 m

180 274 l

179 283 179 293 179 303 c

179 310 179 316 180 323 c

398 323 l

423 404 l

197 404 l

219 477 273 520 357 520 c

409 520 466 490 487 454 c

487 389 l

579 389 l

579 612 l

487 612 l

487 560 l

449 595 394 612 349 612 c

222 612 130 529 98 404 c

31 404 l

6 323 l

86 323 l

86 304 l

86 294 86 284 87 274 c

31 274 l

6 193 l

99 193 l

129 77 211 -12 359 -12 c

398 -12 509 8 585 77 c

529 145 l

497 123 436 80 356 80 c

285 80 227 122 198 193 c

360 193 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-BoldOblique /Courier-Bold load def

/Courier

{

600 0 17 -12 578 584

{

17 204 m

97 204 l

126 81 214 -12 361 -12 c

440 -12 517 17 578 62 c

554 109 l

501 70 434 43 366 43 c

266 43 184 101 154 204 c

380 204 l

400 259 l

144 259 l

144 270 143 281 143 292 c

143 299 143 307 144 314 c

418 314 l

438 369 l

153 369 l

177 464 249 529 345 529 c

415 529 484 503 522 463 c

522 391 l

576 391 l

576 584 l

522 584 l

522 531 l

473 566 420 584 348 584 c

216 584 122 490 95 369 c

37 369 l

17 314 l

87 314 l

87 297 l

87 284 88 272 89 259 c

37 259 l

cp

600 0 m

}

pdf_PSBuildGlyph

} def

/Courier-Oblique /Courier load def

/Helvetica

{

556 0 24 -19 541 703

{

541 628 m

510 669 442 703 354 703 c

201 703 117 607 101 444 c

50 444 l

25 372 l

97 372 l

97 301 l

49 301 l

24 229 l

103 229 l

124 67 209 -19 350 -19 c

435 -19 501 25 509 32 c

509 131 l

492 105 417 60 343 60 c

267 60 204 127 197 229 c

406 229 l

430 301 l

191 301 l

191 372 l

455 372 l

479 444 l

194 444 l

201 531 245 624 348 624 c

433 624 484 583 509 534 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-Oblique /Helvetica load def

/Helvetica-Bold

{

556 0 12 -19 563 710

{

563 621 m

537 659 463 710 363 710 c

216 710 125 620 101 462 c

51 462 l

12 367 l

92 367 l

92 346 l

92 337 93 328 93 319 c

52 319 l

12 224 l

102 224 l

131 58 228 -19 363 -19 c

417 -19 471 -12 517 18 c

517 146 l

481 115 426 93 363 93 c

283 93 254 166 246 224 c

398 224 l

438 319 l

236 319 l

236 367 l

457 367 l

497 462 l

244 462 l

259 552 298 598 363 598 c

425 598 464 570 486 547 c

507 526 513 517 517 509 c

cp

556 0 m

}

pdf_PSBuildGlyph

} def

/Helvetica-BoldOblique /Helvetica-Bold load def

/Symbol

{

750 0 20 -12 714 685

{

714 581 m

650 645 560 685 465 685 c

304 685 165 580 128 432 c

50 432 l

20 369 l

116 369 l

115 356 115 347 115 337 c

115 328 115 319 116 306 c

50 306 l

20 243 l

128 243 l

165 97 300 -12 465 -12 c

560 -12 635 25 685 65 c

685 155 l

633 91 551 51 465 51 c

340 51 238 131 199 243 c

555 243 l

585 306 l

184 306 l

183 317 182 326 182 336 c

182 346 183 356 184 369 c

614 369 l 644 432 l

199 432 l

233 540 340 622 465 622 c

555 622 636 580 685 520 c

cp

750 0 m

}

pdf_PSBuildGlyph

} def

/Times-Bold

{

500 0 16 -14 478 700

{

367 308 m

224 308 l

224 368 l

375 368 l

380 414 l

225 414 l

230 589 257 653 315 653 c

402 653 431 521 444 457 c

473 457 l

473 698 l

444 697 l

441 679 437 662 418 662 c

393 662 365 700 310 700 c

211 700 97 597 73 414 c

21 414 l

16 368 l

69 368 l

69 359 68 350 68 341 c

68 330 68 319 69 308 c

21 308 l

16 262 l

73 262 l

91 119 161 -14 301 -14 c

380 -14 443 50 478 116 c

448 136 l

415 84 382 40 323 40 c

262 40 231 77 225 262 c

362 262 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-BoldItalic

{

500 0 9 -20 542 686

{

542 686 m

518 686 l

513 673 507 660 495 660 c

475 660 457 683 384 683 c

285 683 170 584 122 430 c

58 430 l

34 369 l

105 369 l

101 354 92 328 90 312 c

34 312 l

9 251 l

86 251 l

85 238 84 223 84 207 c

84 112 117 -14 272 -14 c

326 -14 349 9 381 9 c

393 9 393 -10 394 -20 c

420 -20 l

461 148 l

429 148 l

416 109 362 15 292 15 c

227 15 197 55 197 128 c

197 162 204 203 216 251 c

378 251 l

402 312 l

227 312 l

229 325 236 356 241 369 c

425 369 l

450 430 l

255 430 l

257 435 264 458 274 488 c

298 561 337 654 394 654 c

437 654 484 621 484 530 c

484 516 l

516 516 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Italic

{

500 0 23 -10 595 692

{

399 317 m

196 317 l

199 340 203 363 209 386 c

429 386 l

444 424 l

219 424 l

246 514 307 648 418 648 c

448 648 471 638 492 616 c

529 576 524 529 527 479 c

549 475 l

595 687 l

570 687 l

562 674 558 664 542 664 c

518 664 474 692 423 692 c

275 692 162 551 116 424 c

67 424 l

53 386 l

104 386 l

98 363 93 340 90 317 c

37 317 l

23 279 l

86 279 l

85 266 85 253 85 240 c

85 118 137 -10 277 -10 c

370 -10 436 58 488 128 c

466 149 l

424 101 375 48 307 48 c

212 48 190 160 190 234 c

190 249 191 264 192 279 c

384 279 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

/Times-Roman

{

500 0 10 -12 484 692

{

347 298 m

171 298 l

170 310 170 322 170 335 c

170 362 l

362 362 l

374 403 l

172 403 l

184 580 244 642 308 642 c

380 642 434 574 457 457 c

481 462 l

474 691 l

449 691 l

433 670 429 657 410 657 c

394 657 360 692 299 692 c

204 692 94 604 73 403 c

22 403 l

10 362 l

70 362 l

69 352 69 341 69 330 c

69 319 69 308 70 298 c

22 298 l

10 257 l

73 257 l

97 57 216 -12 295 -12 c

364 -12 427 25 484 123 c

458 142 l

425 101 384 37 316 37 c

256 37 189 84 173 257 c

335 257 l

cp

500 0 m

}

pdf_PSBuildGlyph

} def

end

currentdict readonly pop end

%%EndResource

PDFText begin

[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis

/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute

/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde

/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex

/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls

/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash

/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef

/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash

/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef

/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe

/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide

/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright

/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand

/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex

/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex

/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla

/hungarumlaut/ogonek/caron

0 TE

[1/dotlessi/caron 39/quotesingle 96/grave 

127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis

/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE

/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft

/quotedblright/bullet/endash/emdash/tilde/trademark/scaron

/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling

/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine

/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus

/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla

/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters

/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla

/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis

/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash

/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave

/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute

/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde

/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute

/ucircumflex/udieresis/yacute/thorn/ydieresis

1 TE

end

currentdict readonly pop

end end

/currentpacking where {pop setpacking}if

PDFVars/DocInitAll{[ PDFText]{/docinitialize get exec}forall }put

PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put

PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put

PDFVars begin PDF begin

PDFVars/DocInitAll get exec PDFVars/InitAll get exec

%%BeginResource: font ACKLGD+TimesNewRoman

11 dict begin

/FontName /ACKLGD+TimesNewRoman def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f71ff99e0df88816f90507fc8706fd0507f8870609fc77f8f515f86706fc

e507fc6706f8e507090e ND 

/parenleft 100 RD 

b4f7e10df752fb0e1576a47ba57fa6087fa681af83b8087fc386ca8bd108

8bcc91c898c60898c59ebca5b108a5b2aca9b3a108a0073b674a50593808

5937722f8b26088b479848a44b08a54baf54ba5c08ab68b46fbc72088d9e

0568a271a377a408090e ND 

/parenright 99 RD 

a1f7e10ddbf8ee15a0729b7197700898719567935e089551914c8b46088b

4b854d7e50087f51785a71650870656b6d637508897805deadcbc7bdde08

bcdfa4e78bf0088bcf7ece72cb0871cc67c25cbb086cab61a859a3087607

ac76a6729f7208090e ND 

/plus 42 RD 

9df8c80df7afd015f78807f78806b307fb8806f787076306fb8707fb8706

6307f78706fb8807b306090e ND 

/hyphen 19 RD 

b4f7e10df75004f79106d507fb91064107090e ND 

/zero 164 RD 

aff8880dc0f015b540c066ca8b08ab8bac97ada308aea4a7b2a1c108a1bf

96cd8bd8088bf70172e259cb0861c05ea4588b086d8b6c806e760865716d

6274550875547f4b8b40088b309d41ae4c088b0609c3f8161593c59bb5a2

a6089d9f9e95a18b089e8b9b869880089e7b9a719766089a57934d8b4008

8b24843d7c530880667d71787b087a7b7883798b08678b6fa379bb0874c6

80d58be6088bc38fc494c508090e ND 

/one 103 RD 

f709f8880d91f8db15a1959c90978b08938b928891860892888f838d8108

8e7b8d6d8b5b08fbfa078b63897387830889838484828608818877876c8a

087907f78e069d076d8e778d819008818f8493889408899389a38bb008f8

c3077b06fb363d05927c05090e ND 

/two 140 RD 

a0f8880df836f71515837c81808083087f837f867d88087c88738a688b08

fb3f069e9cbdc0dce308c2c8b2c2a3c0089aab93ad8bad088bba79b467ae

0867ac5e9d558b08598b617b696b08696b765d834f089d0698af9ea7a59e

08a49da995ac8b08ad8bab7da57008a47198688b61088b54744e5c49085c

493a35fb0722087907f81b06b9f715057806090e ND 

/three 221 RD 

b4f8880da4f8a415adc2b5a6be8b08aa8ba581a07608a17695708b6a088b

7185747f76088073787a717c08717b71827188088c7c059a06a58ba486a4

8008a2819f7f997e089581947d947908967391728b71088b687f6d727108

72706e7f6a8b087e8b7e8d7f8f08828c7e9277950879957e91858d08838e

838c838b087f8b8387838408828488828b82088b7f937f9b80089c7fa986

b88b08e48bd1a6bbc208aeb59ebd8bc4088bb381ae76a90875a76da3629b

08c8bda9bd8bbb088baa80a675a50870ac629d568b085f8b687f6e73086d

727369785e089c8305090e ND 

/four 55 RD 

9bf8880df7fcf78815f844075506fbc6fc4b054d07f7ab06fb4307dc06f7

4307e406d007320609fbcc16f77bf7dd05fbdd07fb7b06090e ND 

/five 155 RD 

bbf8880df729f92b15fb13fb9505c889bb83ae7c08ba77ae71a56808a368

99668b63088a617d686e6e086f6f697c658b08728b7293739c087c968091

858e08848e848c838b087f8b8288848408828388848b82088b7a947d9d7e

089d7ca885b38b08b28bb294b09d08a597a39ca0a008a1a09ca499a9089b

a891ab8bae088bc875be60b70859c146aa349808b7e405f75c06b1de05fb

818a05090e ND 

/six 196 RD 

b6f8880df80df93815688b6584637d08637c61705f62085e606a5d735608

725480548b50088b2daa40c95108aa6db27cb88b08cd8bc1a7b3c208acb8

9cbe8bc2088bc47aba6aaf086bb0649d5e8b085a8b5d7b5c6b0897b899b1

9cab089eaca0a8a5a508a7a5a59fa69808a697ae94b68f089e076f0609fb

69fbc8159a90988e978b08b48baa77a16208a162965b8b53088b5a806575

70087470727e6f8b08738b77937a9a0876a079a87fb00880b085ad8baa08

8ba68eae91b708a79da096989008090e ND 

/seven 50 RD 

b0f8880df88e049985059caba1a2a69a089b93a590b08b08f74a06fb5afc

e905c206f770f926059e07fbf7064cfb3105090e ND 

/eight 250 RD 

c8f8880da8f78215776f816e8b6e088b649969a76b08af66bc76ca8b08c4

8bba9cafac08aeab9db38bba088baf7fae72ac0878a665ad52b708c2aeb0

a99da5089ca494a48ba4088bb17bac6aa8086aa7609a558b08558b5e7b6a

6c086a6d7a668b60088b6e93719a71089a70ad69c060085a68696b786e08

09edf76b157b9a7f9b829c08829d879c8b9c088ba495a2a09e08a19ea695

ac8b08ac8ba5819e7808a07794708b69088b7186748177087f76736f6468

083ace0509f73bfba515987991768b74088b6e807376770876796f80688b

08668b6e9874a40875a47fad8bb5088ba992a998a60897a49fa5a6a208d3

52b95fa269088a07090e ND 

/nine 181 RD 

b3f8880db47d15c98bc49cbfae08ccb5bdc0afcb08afc99dd08bd5088bdd

73cf5cc30864b95da1558b08498b5870635408695d7b588b51088b509c5b

ac6708ab67b379b98b08b68bb89bbeac087e527357695b086a5b686a6778

0864776581618a087907a78c0509f770f7cb15778479877c8b086c8b7199

76a7086fb27cc18bd0088bbc96b3a1a508a0a5a598a88b08a38ba2819f78

089e779b6f966608946891688b6b088b7288698561087b7e798177840809

0e ND 

/Z 83 RD 

98f8f70dd4f92b157dfb3a059e0691b393a6939908949a97969b93089a92

a58fae8b08f76706fc3bfcf105897905f8b106a8f743057d8e0578547866

75790874776b83618b08fba206f847f90305fc7e06090e ND 

/h 234 RD 

91f8880df71bf94b15fb1a54059279059a90968e928b08938b9289908708

90868f848d7f088e7f8c6c8b5808fc29078b6f8979878208878186858588

087f857c88778b087907f771069d07748b7b8e829008828f859288920886

938a9e8ba908f78107a3a5a09c9c93089d949c8f9b8b08998b9987968308

9684937f907c08917c8d6b8b5a08fb33078b728b7c8a8608877d86828385

0882867d87768b0881067907f76f069d07768b7d8d839008848f85918893

088696899e8ba708f732078bc388b185a00882a97ea17999087799769272

8b08758b768576800876806e71676308f7db07758c05090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/ACKLGD+TimesNewRoman findfont /Encoding get

dup 0 /.notdef put

dup 40 /parenleft put

dup 41 /parenright put

dup 43 /plus put

dup 45 /hyphen put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 56 /eight put

dup 57 /nine put

dup 90 /Z put

dup 104 /h put

pop

%%EndResource

[/N57/ACKLGD+TimesNewRoman 1 TZ

%%BeginResource: font ACKLEB+Arial

11 dict begin

/FontName /ACKLEB+Arial def

/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def

/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def

/PaintType 0 def

/FontType 1 def

/FontBBox { 0 0 0 0 } def

/FontInfo 1 dict dup begin

  /OrigFontType /TrueType def

end readonly def

currentdict

end



systemdict begin

dup /Private 7 dict dup begin

/BlueValues [-15 0 600 650] def

/MinFeature {16 16} def

/password 5839 def

/ND {def} def

/NP {put} def

/lenIV -1 def

/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin

/.notdef 4 RD 

8b8b0d0e ND 

/.notdef 40 RD 

f711f9820df88816f90507fc8806fd0507f8880609fc78f8f515f86806fc

e507fc6806f8e507090e ND 

/space 5 RD 

8bf7aa0d0e ND 

/parenleft 74 RD 

c8f7e10df780fb66152af7305af7308bf731088bc892c899c80896bd9bb9

9fb80897a8a5bbb2cf084e064c395f396e390871447f418b3e088b329c37

ac3908ad38b444bb4e08ca06090e ND 

/parenright 73 RD 

c8f7e10df74e9015acdd9ce08be3088bd77ed672d2086fdd5ddd4edd084c

06b347a55a986e089e5d9b5d965a08994f924e8b4e088bfb315afb302afb

3008ca06bbc8b4d3addd08090e ND 

/asterisk 97 RD 

aaf8190df70bf8c2157b7c706c655d08c562059da1a0afa3b908a55fa168

9e7108c6b40566b870a9779c08b291b393b4990877d0055d7d667b6a7a08

91bc8fb38cab0844068b758e639150087598659b579d08754605b181b382

b583088a06090e ND 

/plus 43 RD 

c3f8dc0df7aaf70815f75807f75706dd07fb5706f757073806fb5707fb57

063907f75706fb5807de06090e ND 

/comma 47 RD 

def7aa0dc3168a6d8674827b08827d7d7e788308a56505a597a19d98a208

99a191a98bb008ef0727062707bd06090e ND 

/hyphen 21 RD 

abf7e10df7a3f76b15e307fba4063307f7a406090e ND 

/period 16 RD 

e6f7aa0def16ef0727062707ef06090e ND 

/zero 163 RD 

b5f8c00dd2c915b25ac172d08b08bf8bb699ada708afa7a4b39cbf089dbe

93cf8bdf088bd286c380b50880b67cae78a8087aa872a16e9a086e9c6992

658b08578b607d696f08687072637a5708785783478b36088bfb1aa32aba

4f088b0609cbf8a915a3adab9cb38b08b68bac78a66408a864983d8bfb0a

088bfb0a7d3d7064086f656977638b08638b699e70b2086eb27ed98bf70a

088bf70a9adca9b7088a07090e ND 

/one 52 RD 

f701f8c00df79bf9631552067c6c716b666a08666b606f5a74083607a694

aa9bad9f08af9fa6a0a09f08fcc407e306f96207090e ND 

/two 148 RD 

a8f8c00df70edf15959b979b9a9b089b9aaca9c0b708cbc2b8b4a6aa08a6

a99fa897a70895a892a78ba8088bc177bb63b10863b3559d468b08468b55

7963680862687458854808e582058bb698afa5a408a4a4ad98b68b08b38b

ac7fa47308a373986e8b68088b6a7d686f6608706456593e4b0859636567

706c08706a786c7f6b08827888778c7608f86e06df07fbf48a05090e ND 

/three 207 RD 

b5f8c00dd2b715b566bf78ca8b08d08bc5a1b9b708b8b5a2c18bca088bb8

7fb274aa0873aa6a9f619508ac99a39f9ca4089ca793a68baa088baa82aa

7aa80879a972a16a9c086b9c6793648b08518b5c7b656b086569725e8050

08e57b0590b69baca2a108a0a0a996ad8b08ad8ba880a176089f7797708b

6b088b617c6e6d78086d766982658b08898b868b858c08803e05a5929f8e

9c8b08b38bad7ea57108a670986a8b63088b607d686f6e086e6e687d618b

08688b6d9673a10874a17aaf81bd08317f05934fa25ab46608090e ND 

/four 55 RD 

98f8c00df82216f73f07ec06dc072a06f864074306fbdbfc64053a07f7cb

06fb3f07e30609fbcdf79015f775f7d605fbd607fb7506090e ND 

/five 136 RD 

b5f8c00dd1b615b566c079cc8b08da8bcaa8b9c508b0ba9ec38bcc088bcf

76c360b60860b657a14d8b085a8b5f7c606d08b1f75505f7b106df07fbf7

0646fc0405de7f0598a09d9ca29808a097a592a88b08b98bb07da76e08a5

6d9a648b59088b567c616e6b086f6b677b608b08678b6d9672a20873a17b

ad84b8082f8405914fa35bb36608090e ND 

/six 211 RD 

b1f8c00df820f9341567aa5d9b538b083e8b4f705e5408594c71268bfb1e

088bfb0fa232b95508ba55c670d48b08b78bb195ada008ad9fa6a99eb208

9eb195b58bb8088bcf76c362b60862b759a0508b086a8b6b836c7b086c7d

7173766b088cd093c39bb2089bb2a1a8a79f089f9ca492a78b08b08ba77e

a372089b7c9672936808e0920586c374b767aa0809fb91fbdc15a6a8ad99

b38b08b38bad7da56f08a56d98658b59088b587e62706d08716d6b7c668b

08708b7492749a0872997aa07ea7087fa784a88ba9088bb999b0a7a80809

0e ND 

/seven 68 RD 

baf8c00df7f2f903155e58614c64410864426d3e763b08743a81478a5308

e50690d296cd9dc708a3e0aedeb8dc08b7dbb9ccb9bc0889cf05fc610689

3705f7f38a05090e ND 

/equal 35 RD 

c3f8dc0df86cf88b15fc6c063907f86c06dd0709fb6d04fc6c063907f86c

06dd07090e ND 

/A 67 RD 

8af92f0def16d8f76d05f7c206ddfb6d05f70106fbb9f960052406fba7fd

6005f00609f74cf88c159bb898b995ba0897649c59a14f08d6fb5a05fb88

06daf76505090e ND 

/B 215 RD 

d4f92f0df7a516b98bb28faa9308aa93a597a09b08a0999ca299a8089ba8

91aa8bad088bb47fb074aa0874a86aa2609808ab9aa5a29ca6089aa594a8

8baa088bac82ab78a90878a871a26a9a086a985f93548b08fb9f0689fd60

05f7a60609fb46f90c15f72306bf8baf88a08408a0849b7f967908987890

768b73088b7385757f7a087e7d797e73840879846d89618b08fb2f06f76d

0709fbc104f73a06b88bae87a38308a4839e7d997708987893738b700889

758776827a0881797f7e7c82087e8278847587087e8a76896c8b08fb4606

f78b07090e ND 

/C 157 RD 

bdf9660df863f70715666c5e7c568b08608b629666a10866a36fac79b808

7ab982c08bc8088bba92b99ab7089bb8a5aeb0a508aea6ba98c28b08bb8b

b37fab7308a874a4659c5708e8a10578cc69bf5aaf085ab04f9d438b084d

8b517d566e08576e62616f54086e527d4b8b40088b47984ba44f08a451b0

5dbb6c08bb6aca7cd88b08d58bca9fbfb408beb4afc69fd9082ca3057e4f

725e676c08090e ND 

/D 147 RD 

d8f9660df79616b78bb18fac9308ad94a797a39b08a299a1a29fa7089fa5

9baf98b50898b491bc8bc1088bcb82c478bd0878bb6fb565ab086ea3689d

6294086e91608f538b08fb890689fd6005f7970609fb37f90c15f72a06c4

8bb486a48108ad7ea970a46308a46197528b40088b56855d7e65087f6379

6e7575087b7a767f7082086f8366865c8b08fb2b068af8b805090e ND 

/E 42 RD 

daf92f0df8aa16df07fc4b06f78807f81f06df07fc1f06f77007f83a06df

07fc9906fd6007f8aa06090e ND 

/F 35 RD 

ddf8f70dea16f7d907f7e406df07fbe406f77307f81806df07fc7706fd60

07ea06090e ND 

/H 40 RD 

dbf9660deb16f7e507f80606fbe507ea06f960072c06fbbb07fc0606f7bb

072c06fd6007ea06090e ND 

/I 18 RD 

e8f7aa0dea16f960072c06fd6007ea06090e ND 

/Q 197 RD 

b6f99e0df925f75b159dba94c08bc6088bd27dca6fc30870c662b656aa08

56aa4f9b498b084b8b4f7c566d08566c625f6e510870527c4a8b44088b46

994ba75208a951b360c06c08be6bc67ccc8b08cc8bc59ac0a808be63be6e

be7908a9cd05649863a25fa908afada6b49dba0809fbcc4515ac83aa7da9

78086c7e6c85698b08448b50a45dbd085dbc74d38be8088beaa2d4b9bb08

bbbbc5a4d18b08ba89b580b17308b173a7699f6008a06194588b51088b25

6f3f53580869aa5da1549a08754705090e ND 

/R 160 RD 

daf9660dea16f7d207f70206a38b9d8a96890898879a859982089a819a7b

9d74089e76a169a76008e9fb2905f70b06fb10f7570572b171ab6fa4087f

977797729708d194bda1acae08abaf9cb58bbe088bb281af77ac0878ab70

a26a980869975b924b8b08fbd106fd6007ea0609f91104f77606c08bb180

a37508a676966f8b69088b7385767e77087e78787c73820874836986608b

08fb61068cf78105090e ND 

/S 246 RD 

b8f92f0db3f015a466ad6fb77808b777c182cc8b08bd8bb994b49e08b59e

aaa5a1ad089fac97af8bb1088bb181ad77a80878a96ca3619e086f99569a

3e9c083d9c5c9c799c08789c82a08ba5088ba898a5a5a008a69fb496c48b

08c38bb47fa77408a8759b69905e08e6920589b37fb275ac0877ac6ba462

9c08639d5c93568b085b8b5f83647b08637a6d74776c087669816a8b6708

8b6b936d9c70089c71a475ad7908a67cb97dcd7b08cc7bb6809e8408a97d

a17e987a08977b92778b75088b7584777e78087d77777d6f80086f816b85

678b08638b66926a99086c9a729d7ca2087ba382a887af083083058e5b97

60a46508090e ND 

/T 30 RD 

a2f8f70df7df16f90c07f78006df07fccb063707f78006fd0c07ea06090e

 ND 

/W 101 RD 

97fa440df7b316f72bf8b60591a293a793ac088d80936f985d08f729fcb6

05e906f756f960052e06fb06fc60057e527e57825e087ed879e072e50824

f7ff05fb0606fb1cfc78058980805f783f0881ba81bd7fbc0821f86a0527

06f752fd6005ed8a05090e ND 

/bracketleft 31 RD 

cff7aa0df756fb5b15d4072106f99507f506d407fb5606fe2707f7560609

0e ND 

/bracketright 31 RD 

9ef7aa0df756f96015fb56064207f506fd950721064207f75606fa270709

0e ND 

/a 258 RD 

aff8c00df81616e706809f84a087a10888a089bf8bdc08f709078bb28aa6

889a0885a3829f7e9b087e9b76986f9508719666905f8b085e8b6485697f

08687e717a7974087a757d6d836608e37f0592b09ba59f9a089e98aa93b4

8b08b98bac81a277089a7d94728b67088b888b848b7f08687d5782448308

698670877a860874867681787e08787e7c7a7f7608807785738b72088b60

9a67aa6f08aa71b77cc48b08ad8bac91a99608a997ab9eaca7088c729275

9478088a8c050973f778158b64866e8277087d727876717c08717e6d8369

8b08688b7193799b087b99819f8ba2088b9b8f98939708949a96939a9108

9a92a590af9008cb96bb95ab98086b07090e ND 

/b 138 RD 

ccf8c00dddcc15ae58bb72c88b08c88bc0a3b7bb08b7bda1cf8be4088baf

86af81ac087fab7da779a20879a4739c6f98086e976d926b8b08528b5b74

665d08f794073306fd6007dd06cb0709b4f7eb15a7acac9cb18b08b28bab

7ba66b08a56a99598b47088b4b7d586f6a086f6a6a7a658b085b8b66a26f

b8087ba682b88bc9088bcb99bba7ac08090e ND 

/c 135 RD 

b2f8880df7d6e81574766e80688b08618b689b70ab0870a97ebe8bd1088b

d099bda7ab08a6aaaf9bb78b08aa8ba382a079089f7b9a70936808e09805

81bf74b367a70868aa5d98538b085d8b638165760864756f6c7861087a62

815a8b53088b34a149b65d08b55cc474d28b08c58bba9cb2ac08b1ada4b9

94c608359705855f7c6b747608090e ND 

/d 146 RD 

adf8c00df85516f960073306fb96077ca1779c739808729970916c8b085e

8b65806975086973716b7a61087962835c8b57088b56955c9e62089d63a6

6bae7408ae74b180b48b08cb8bbba5acbe084907dd0609fbd5f82d15a6ab

ac9bb28b08b28bad7aa66a08a86b98578b44088b4a7e5c706c086f6a6b7c

658b08648b6a9b6fac086fac7dbc8bcd088bd198bca5ab08090e ND 

/e 144 RD 

b0f8c00df7dde215747a70836b8b085f89679b6ea9086faa7bb688c408f8

15068c958b938b90088be175cd5fba0860bb52a2468b08438b51735e5b08

5f5b74488b34088b35a14bb75c08b85cc774d78b08c68bbd9ab2a808b1a8

a6b499c0083097057e667970747a0809fb50f7de15a6a6ad99b38b08b88b

af7aa769089d76966a8f5f08fbb5068eb89aafa7a608090e ND 

/g 200 RD 

abf8c00dd4fb3c15b16fbd7dc98b08bf8bb795af9f08ad9da6a69bad089c

ad93c48bdc08f854073a064b0763bd59a44e8b085c8b63806974086a7470

6b7961087b61815d8b5a088b439f4db25808b158c371d28b08c58bbba2b1

b8088b528966867908846d7b75757b0876796b84628b08668b6d93759b08

7a98819e87a50838970588539e61b1700809c5f8d515a6abac9bb28b08b4

8bac7ba76b08a96a985b8b4c088b4a7d5a706c08706b697c638b08618b6a

9b70aa086faa7ebd8bcf088bc899bba6aa08090e ND 

/h 92 RD 

cdf8c00de316f7af078bb490ab95a20894a29c9da29908a098a492a58b08

ae8ba5819e77089f77946b8b5f08fbdc07e306f7dc078bbf85b17fa6087e

a577a06f9a086f9b6a92658b084c8b5873625b08f796073306fd6007e306

090e ND 

/i 32 RD 

cdf7720de3f8fc15ef0733062707e30609fcfc04f89b073306fc9b07e306

090e ND 

/k 52 RD 

cdf8880de316f76207c8c605f740fb9d05f70106fb6ff7da05f75bf75505

fb0706fb62fb670589f82c05350689fd6005e406090e ND 

/l 18 RD 

cbf7720de316f960073306fd6007e306090e ND 

/m 157 RD 

cdf9d50de316f7a1078bba90af94a40895a59a9ea098089f97a292a48b08

ac8ba2819977089a79926d8b6408fbe507e306f7c1078bc197b2a3a308a4

a3a998b08b089e899d879a82089b81957f917c08907b8e728b6808fbdb07

e306f7f8078bc67db76fa70870a86399578b08498b556d624f0882a679a2

729b08739b6b93658b08698b6c83707c08707b76777b720889d4053e0689

fc9b05e406090e ND 

/n 99 RD 

cdf8c00de316f7af078bce99b8a6a308a5a1ac98b08b08a38b9f869c8008

9d81977d92790891798f718b6708fbcf07e306f7d3078bb189a9889b0886

a482a17e9d087e9d789a7196086f976f906c8b08438b546f655308d5073c

06fc9b07e38a05090e ND 

/o 133 RD 

acf8c00dcec615b85cc674d48b08b78bb696b1a008b09fa9a99fb1089fb2

95bf8bce088bdd74cc5eba085eb851a3448b08498b55785e6508585c6f45

8b2b088b33a149b85c0809cef7f115a8acb09bb78b08b58bb07ba86a08a9

69995b8b4b088b477c586e6a086f6b667a5f8b085f8b669b6eac086fad7c

bc8bcd088bce9abca8ac08090e ND 

/p 153 RD 

cdf8c00de3fb5b15f791079a799e7ba27f08a37ea585a88b08b38bb196af

a208b0a1a6ac9eb5089fb694ba8bc0088bbd82b87ab4087ab671aa69a208

6aa263975f8b086a896e85737e08737e7677787108cf073b06fd6207e306

09aef8f415a8aeac9cb08b08b18bab7ba66a08a76a985a8b49088b457d58

6f6a08706b697a648b08658b6a9b70ab0871aa7dbc8bce088bce99bda8af

08090e ND 

/q 141 RD 

aef8c00df855fb5b15f962073c06450766c159a64b8b08618b6680697608

6876716c7962087960825d8b57088b36a147b75a08b95bbf72c88b08a78b

a591a49808a3989e9b999e08fb9307e30609fbd3f8f715a5acab9bb18b08

b38bac7aa86808a6689a578b46088b4b7d5b706b08716a6a7c668b08638b

6a9c6fac086fac7dbd8bce088bd098bda6ab08090e ND 

/r 72 RD 

ccf7e10de316f7a3078bb090ad95aa0891a1969a9a97089b969c919e8b08

a08ba185a07f08aadc056c9e6d946d8b08778b78857a7f087a8078727766

08db073c06fc9b07e306090e ND 

/s 232 RD 

aaf8880dcfaa15ae6fbe7dce8b08b58baf92ab9908ac9aa39f9ca5089da3

93a78ba8088baa84a37d9f087da1789a7296087293609a4d9c0860967193

828e087c917f93849408859587958b96088b9d949a9c98089c9aa891b38b

08ad8ba5839e7c089e7c96768f7008e1970585ad81a67c9f087e9e749b6c

97086c976891628b086f8b7288738408758378837d8108797e7d7b807708

807786768b74088b71917498760898779e7aa47f08a480b87dcb7b08ba7d

a9829783089e80937b8b77088b768177777b08797a6c83638b08628b6c94

759e08749d7ea686ae08347d059554a262ae6f08090e ND 

/t 98 RD 

9df7aa0df75dd6157e8b818d848f08839086908892088993899b8ba408f7

c407e306cf073306f74907335605fb14074a064707cc06fbbf078b568f68

927b08927a987e9d81089a81a586ab8b089e8ba18ea490087fd9057b877e

8b818b088c06090e ND 

/u 106 RD 

cbf8c00df83816f89b073306fba9078b5e866a81740883727a79747e0873

7e7384718b08708b75927998087a987f9d85a208889b89aa8bb908f7b307

3306fbd5078b658d708f7a088f719575987908977b9f7ca57f08a67ea786

aa8b08d08bc2a8b3c6083e07da06090e ND 

/w 74 RD 

8ef9660df78d16f4f82305a03205ddfbcb05e606f737f89b05360630fbc0

056f270570ee053ef7c1052f063bfbc405784b83668a85086ef7040538f7

bf052f06f731fc9b05e88c05090e ND 

/y 116 RD 

9bf8880df2fb6615a78ba3929f9808a0999da09ba80895a09cb2a0c408f7

5af8a4053106fb01fbc3057c6580648164087eb47fb37db108fb00f7c005

2d06f759fc9d058782888489860881688175858208848081827f84088084

7b88778b087d8b7a8e789008953a05a0839e889c8b088b06090e ND 

end

end

put

put

dup /FontName get exch definefont pop

end

/ACKLEB+Arial findfont /Encoding get

dup 0 /.notdef put

dup 32 /space put

dup 40 /parenleft put

dup 41 /parenright put

dup 42 /asterisk put

dup 43 /plus put

dup 44 /comma put

dup 45 /hyphen put

dup 46 /period put

dup 48 /zero put

dup 49 /one put

dup 50 /two put

dup 51 /three put

dup 52 /four put

dup 53 /five put

dup 54 /six put

dup 55 /seven put

dup 61 /equal put

dup 65 /A put

dup 66 /B put

dup 67 /C put

dup 68 /D put

dup 69 /E put

dup 70 /F put

dup 72 /H put

dup 73 /I put

dup 81 /Q put

dup 82 /R put

dup 83 /S put

dup 84 /T put

dup 87 /W put

dup 91 /bracketleft put

dup 93 /bracketright put

dup 97 /a put

dup 98 /b put

dup 99 /c put

dup 100 /d put

dup 101 /e put

dup 103 /g put

dup 104 /h put

dup 105 /i put

dup 107 /k put

dup 108 /l put

dup 109 /m put

dup 110 /n put

dup 111 /o put

dup 112 /p put

dup 113 /q put

dup 114 /r put

dup 115 /s put

dup 116 /t put

dup 117 /u put

dup 119 /w put

dup 121 /y put

pop

%%EndResource

[/N54/ACKLEB+Arial 1 TZ

PDFVars/TermAll get exec end end



%%EndSetup

PDFVars begin PDF begin PDFVars/InitAll get exec

70 296 380 194 re W n

[ 0 -1 1 0 -226 560 ] concat

/N45 [/CIEBasedABC  3 dict 
dup /DecodeLMN [

{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
/ColorSpace defineRes pop

/N66 <<

/SA false 

/OP false 

/op false 

/OPM 1 

/BG /_defaultblackgeneration load 

/UCR /_defaultundercolorremoval load 

/TR /_defaulttransfer load 

/SM 0.02 

>> /ExtGState defineRes pop

/N45 /ColorSpace findRes cs

0 0 0 scn

/N66 /ExtGState findRes gs

1 i

111.401 415.841 m

110.681 416.44099 l

109.36099 414.881 l

110.08099 414.28101 l

f 

156.401 374.92101 m

157.121 374.321 l

155.80099 372.761 l

155.08099 373.36099 l

f 

111.401 415.841 m

110.08099 414.28101 l

155.08099 373.36099 l

156.401 374.92101 l

f 

222.881 414.401 m

223.601 415.00101 l

222.28101 416.561 l

221.561 415.961 l

f 

174.64101 375.521 m

173.92101 374.92101 l

172.601 376.481 l

173.321 377.08099 l

f 

222.881 414.401 m

221.561 415.961 l

173.321 377.08099 l

174.64101 375.521 l

f 

110.08099 554.321 m

109.36099 553.72099 l

110.681 552.161 l

111.401 552.761 l

f 

157.00101 593.681 m

157.72099 594.28101 l

159.041 592.72099 l

158.321 592.121 l

f 

110.08099 554.321 m

111.401 552.761 l

158.321 592.121 l

157.00101 593.681 l

f 

221.561 552.761 m

222.401 552.161 l

223.601 553.841 l

222.761 554.44099 l

f 

170.44099 590.561 m

169.601 591.161 l

170.80099 592.841 l

171.64101 592.241 l

f 

221.561 552.761 m

222.761 554.44099 l

171.64101 592.241 l

170.44099 590.561 l

f 

101.681 511.601 m

102.401 512.321 l

100.961 513.761 l

100.241 513.041 l

f 

101.681 511.601 m

87.881 498.64101 l

86.201 499.36099 l

86.201 499.841 l

86.44099 500.08099 l

100.241 513.041 l

f 

88.241 499.36099 m

88.241 469.241 l

86.561 468.521 l

86.201 468.881 l

86.201 499.36099 l

f 

102.401 457.481 m

103.121 456.881 l

101.80099 455.321 l

101.08099 455.92101 l

f 

87.881 470.08099 m

86.561 468.521 l

101.08099 455.92101 l

102.401 457.481 l

f 

121.00101 512.80099 m

120.28101 513.521 l

118.841 512.08099 l

119.561 511.36099 l

f 

121.00101 512.80099 m

134.681 499.841 l

135.041 499.481 l

135.041 499.121 l

133.241 498.401 l

119.561 511.36099 l

f 

135.041 499.121 m

135.041 468.64101 l

134.681 468.28101 l

133.00101 469.00101 l

133.00101 499.121 l

f 

120.28101 455.561 m

119.561 454.961 l

118.241 456.521 l

118.961 457.121 l

f 

134.681 468.28101 m

133.36099 469.841 l

118.961 457.121 l

120.28101 455.561 l

f 

1 1 1 scn

98.08099 490.36099 8.88 -12.48 rf

0 0 0 scn

97.841 490.601 0.48 -12.72 rf

98.08099 490.601 9.12 -0.48 rf

106.72099 490.36099 0.48 -12.72 rf

97.841 478.121 9.12 -0.48 rf

BT

/N57 1 Tf

0 8.3813 -6.48 0 104.8006 482.20061 Tm

0 Tc

0 Tw

(0)Tj 

ET

1 1 1 scn

89.08099 490.36099 9 -12.48 rf

0 0 0 scn

88.841 490.601 0.48 -12.72 rf

89.08099 490.601 9.24001 -0.48 rf

97.841 490.36099 0.48 -12.72 rf

88.841 478.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 95.92059 482.20061 Tm

(2)Tj 

ET

1 1 1 scn

80.08099 490.36099 8.88 -12.48 rf

0 0 0 scn

79.841 490.601 0.48 -12.72 rf

80.08099 490.601 9.12 -0.48 rf

88.72099 490.36099 0.48 -12.72 rf

79.841 478.121 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 86.8006 482.20061 Tm

(8)Tj 

ET

1 1 1 scn

70.961 490.36099 8.88 -12.48 rf

0 0 0 scn

70.72099 490.601 0.48 -12.72 rf

70.961 490.601 9.12 -0.48 rf

79.601 490.36099 0.48 -12.72 rf

70.72099 478.121 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 77.6806 480.1606 Tm

-0.0275 Tc

(10)Tj 

ET

1 1 1 scn

141.521 490.36099 9 -12.48 rf

0 0 0 scn

141.28101 490.601 0.48 -12.72 rf

141.521 490.601 9.24001 -0.48 rf

150.28101 490.36099 0.48 -12.72 rf

141.28101 478.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 148.3606 482.20061 Tm

0 Tc

(1)Tj 

ET

1 1 1 scn

132.64101 490.36099 8.88 -12.48 rf

0 0 0 scn

132.401 490.601 0.48 -12.72 rf

132.64101 490.601 9.12 -0.48 rf

141.28101 490.36099 0.48 -12.72 rf

132.401 478.121 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 139.3606 482.20061 Tm

(3)Tj 

ET

1 1 1 scn

123.521 490.36099 9 -12.48 rf

0 0 0 scn

123.28101 490.601 0.48 -12.72 rf

123.521 490.601 9.24001 -0.48 rf

132.28101 490.36099 0.48 -12.72 rf

123.28101 478.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 130.3606 482.20061 Tm

(9)Tj 

ET

1 1 1 scn

114.401 490.36099 9 -12.48 rf

0 0 0 scn

114.161 490.601 0.48 -12.72 rf

114.401 490.601 9.24001 -0.48 rf

123.161 490.36099 0.48 -12.72 rf

114.161 478.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 121.2406 480.28059 Tm

-0.0562 Tc

(11)Tj 

ET

1 1 1 scn

97.241 428.561 m

97.481 425.80099 l

98.321 423.28101 l

99.521 421.00101 l

101.201 418.961 l

103.121 417.401 l

105.401 416.08099 l

108.041 415.36099 l

110.681 415.00101 l

113.44099 415.36099 l

115.961 416.08099 l

118.241 417.401 l

120.28101 418.961 l

121.841 421.00101 l

123.161 423.28101 l

123.881 425.80099 l

124.241 428.561 l

124.241 446.561 l

123.881 449.321 l

123.161 451.841 l

121.841 454.121 l

120.28101 456.161 l

118.241 457.841 l

115.961 459.041 l

113.44099 459.761 l

110.681 460.121 l

108.041 459.761 l

105.401 459.041 l

103.121 457.841 l

101.201 456.161 l

99.521 454.121 l

98.321 451.841 l

97.481 449.321 l

97.241 446.561 l

97.241 428.561 l

f* 

0 0 0 scn

97.481 428.561 m

97.72099 425.80099 l

97.72099 425.92101 l

98.561 423.401 l

99.761 421.121 l

99.761 421.241 l

101.44099 419.201 l

103.36099 417.64101 l

103.241 417.64101 l

105.521 416.321 l

108.161 415.601 l

110.80099 415.241 l

110.681 415.241 l

113.44099 415.601 l

115.961 416.321 l

115.841 416.321 l

118.121 417.64101 l

120.161 419.201 l

120.161 419.08099 l

121.72099 421.121 l

123.041 423.401 l

122.92101 423.401 l

123.64101 425.92101 l

124.00101 428.681 l

124.00101 428.561 l

124.00101 446.561 l

123.64101 449.321 l

122.92101 451.841 l

123.041 451.72099 l

121.72099 454.00101 l

120.161 456.041 l

118.121 457.72099 l

118.121 457.601 l

115.841 458.80099 l

115.961 458.80099 l

113.44099 459.521 l

110.681 459.881 l

110.80099 459.881 l

108.161 459.521 l

105.521 458.80099 l

103.241 457.601 l

103.36099 457.72099 l

101.44099 456.041 l

99.761 454.00101 l

98.561 451.72099 l

98.561 451.841 l

97.72099 449.321 l

97.481 446.561 l

97.481 428.561 l

97.00101 428.561 l

97.00101 446.561 l

97.241 449.321 l

97.241 449.44099 l

98.08099 451.961 l

99.28101 454.241 l

99.401 454.36099 l

101.08099 456.401 l

103.00101 458.08099 l

105.28101 459.28101 l

105.401 459.28101 l

108.041 460.00101 l

110.681 460.36099 l

110.80099 460.36099 l

113.561 460.00101 l

116.08099 459.28101 l

118.36099 458.08099 l

118.481 458.08099 l

120.521 456.401 l

120.521 456.28101 l

122.08099 454.241 l

123.401 451.961 l

124.121 449.44099 l

124.481 446.681 l

124.481 428.561 l

124.121 425.80099 l

123.401 423.28101 l

123.401 423.161 l

122.08099 420.881 l

120.521 418.841 l

120.401 418.841 l

118.36099 417.28101 l

116.08099 415.961 l

116.08099 415.841 l

113.561 415.121 l

110.80099 414.761 l

110.681 414.761 l

108.041 415.121 l

105.401 415.841 l

105.28101 415.961 l

103.00101 417.28101 l

101.08099 418.841 l

99.401 420.881 l

99.28101 420.881 l

98.08099 423.161 l

98.08099 423.28101 l

97.241 425.80099 l

97.00101 428.561 l

f 

97.481 428.561 m

97.00101 428.561 l

f 

1 1 1 scn

97.241 518.561 m

97.481 515.80099 l

98.321 513.28101 l

99.521 511.00101 l

101.201 508.961 l

103.121 507.401 l

105.401 506.08099 l

108.041 505.36099 l

110.681 505.00101 l

113.44099 505.36099 l

115.961 506.08099 l

118.241 507.401 l

120.28101 508.961 l

121.841 511.00101 l

123.161 513.28101 l

123.881 515.80099 l

124.241 518.561 l

124.241 539.92101 l

123.881 542.681 l

123.161 545.201 l

121.841 547.481 l

120.28101 549.521 l

118.241 551.201 l

115.961 552.401 l

113.44099 553.241 l

110.681 553.481 l

108.041 553.241 l

105.401 552.401 l

103.121 551.201 l

101.201 549.521 l

99.521 547.481 l

98.321 545.201 l

97.481 542.681 l

97.241 539.92101 l

97.241 518.561 l

f* 

0 0 0 scn

97.481 518.561 m

97.72099 515.80099 l

97.72099 515.92101 l

98.561 513.401 l

99.761 511.121 l

99.761 511.241 l

101.44099 509.201 l

103.36099 507.64101 l

103.241 507.64101 l

105.521 506.321 l

108.161 505.601 l

110.80099 505.241 l

110.681 505.241 l

113.44099 505.601 l

115.961 506.321 l

115.841 506.321 l

118.121 507.64101 l

120.161 509.201 l

120.161 509.08099 l

121.72099 511.121 l

123.041 513.401 l

122.92101 513.401 l

123.64101 515.92101 l

124.00101 518.681 l

124.00101 518.561 l

124.00101 539.92101 l

123.64101 542.681 l

122.92101 545.201 l

123.041 545.08099 l

121.72099 547.36099 l

120.161 549.401 l

118.121 551.08099 l

118.121 550.961 l

115.841 552.161 l

115.961 552.161 l

113.44099 553.00101 l

110.681 553.241 l

108.041 553.00101 l

108.161 553.00101 l

105.521 552.161 l

103.241 550.961 l

103.36099 551.08099 l

101.44099 549.401 l

99.761 547.36099 l

98.561 545.08099 l

98.561 545.201 l

97.72099 542.681 l

97.481 539.92101 l

97.481 518.561 l

97.00101 518.561 l

97.00101 539.92101 l

97.241 542.681 l

97.241 542.80099 l

98.08099 545.321 l

99.28101 547.601 l

99.401 547.72099 l

101.08099 549.761 l

103.00101 551.44099 l

105.28101 552.64101 l

105.401 552.64101 l

108.041 553.481 l

110.681 553.72099 l

113.44099 553.481 l

113.561 553.481 l

116.08099 552.64101 l

118.36099 551.44099 l

118.481 551.44099 l

120.521 549.761 l

120.521 549.64101 l

122.08099 547.601 l

123.401 545.321 l

124.121 542.80099 l

124.481 540.041 l

124.481 518.561 l

124.121 515.80099 l

123.401 513.28101 l

123.401 513.161 l

122.08099 510.881 l

120.521 508.841 l

120.401 508.841 l

118.36099 507.28101 l

116.08099 505.961 l

116.08099 505.841 l

113.561 505.121 l

110.80099 504.761 l

110.681 504.761 l

108.041 505.121 l

105.401 505.841 l

105.28101 505.961 l

103.00101 507.28101 l

101.08099 508.841 l

99.401 510.881 l

99.28101 510.881 l

98.08099 513.161 l

98.08099 513.28101 l

97.241 515.80099 l

97.00101 518.561 l

f 

97.481 518.561 m

97.00101 518.561 l

f 

BT

/N54 1 Tf

0 6.36 -6.36 0 108.64059 508.3606 Tm

0.01019 Tc

-0.0239 Tw

(we)Tj [19.2 ]TJ (i)Tj [6 ]TJ (ght)Tj [23.89999 ]TJ (ed rou)Tj [19.2 ]TJ (nd )Tj 

1 -1.2453 TD

0.008 Tc

-0.00279 Tw

(ro)Tj [17 ]TJ (bin)Tj [17 ]TJ ( \(2,)Tj [21.7 ]TJ ( 2\))Tj 

-14.22639 0.6792 TD

-0.0029 Tw

(ro)Tj [17.10001 ]TJ (und)Tj [17.10001 ]TJ ( ro)Tj [17.10001 ]TJ (bi)Tj [3.89999 ]TJ (n)Tj 

ET

1 1 1 scn

152.44099 345.401 m

152.681 342.64101 l

153.521 340.121 l

154.72099 337.841 l

156.401 335.92101 l

158.44099 334.241 l

160.72099 332.92101 l

163.241 332.201 l

166.00101 331.961 l

168.64101 332.201 l

171.161 332.92101 l

173.561 334.241 l

175.481 335.92101 l

177.161 337.841 l

178.36099 340.121 l

179.201 342.64101 l

179.44099 345.401 l

179.44099 365.321 l

179.201 368.08099 l

178.36099 370.601 l

177.161 372.881 l

175.481 374.92101 l

173.561 376.481 l

171.161 377.80099 l

168.64101 378.521 l

166.00101 378.881 l

163.241 378.521 l

160.72099 377.80099 l

158.44099 376.481 l

156.401 374.92101 l

154.72099 372.881 l

153.521 370.601 l

152.681 368.08099 l

152.44099 365.321 l

152.44099 345.401 l

f* 

0 0 0 scn

152.681 345.401 m

152.92101 342.64101 l

152.92101 342.761 l

153.761 340.241 l

154.961 337.961 l

154.961 338.08099 l

156.64101 336.161 l

158.681 334.481 l

158.561 334.481 l

160.841 333.161 l

163.36099 332.44099 l

163.241 332.44099 l

166.00101 332.201 l

168.64101 332.44099 l

171.161 333.161 l

171.041 333.161 l

173.44099 334.481 l

175.36099 336.161 l

177.041 338.08099 l

176.92101 337.961 l

178.121 340.241 l

178.961 342.761 l

178.961 342.64101 l

179.201 345.401 l

179.201 365.321 l

178.961 368.08099 l

178.121 370.601 l

178.121 370.481 l

176.92101 372.761 l

177.041 372.761 l

175.36099 374.80099 l

173.44099 376.36099 l

173.44099 376.241 l

171.041 377.561 l

171.161 377.561 l

168.64101 378.28101 l

166.00101 378.64101 l

166.121 378.64101 l

163.36099 378.28101 l

160.841 377.561 l

160.841 377.681 l

158.561 376.36099 l

156.521 374.80099 l

156.64101 374.80099 l

154.961 372.761 l

153.761 370.481 l

153.761 370.601 l

152.92101 368.08099 l

152.681 365.321 l

152.681 345.401 l

152.201 345.401 l

152.201 365.321 l

152.44099 368.08099 l

152.44099 368.201 l

153.28101 370.72099 l

154.481 373.00101 l

154.601 373.121 l

156.28101 375.161 l

158.321 376.72099 l

160.601 378.041 l

160.72099 378.041 l

163.241 378.761 l

166.00101 379.121 l

166.121 379.121 l

168.761 378.761 l

171.28101 378.041 l

173.681 376.72099 l

173.80099 376.72099 l

175.72099 375.161 l

177.401 373.121 l

177.401 373.00101 l

178.601 370.72099 l

179.44099 368.201 l

179.44099 368.08099 l

179.681 365.321 l

179.681 345.401 l

179.44099 342.64101 l

178.601 340.121 l

178.601 340.00101 l

177.401 337.72099 l

175.72099 335.80099 l

173.80099 334.121 l

173.681 334.00101 l

171.28101 332.681 l

168.761 331.961 l

168.64101 331.961 l

166.00101 331.72099 l

163.241 331.961 l

160.72099 332.681 l

160.601 332.80099 l

158.321 334.121 l

156.28101 335.80099 l

154.601 337.72099 l

154.481 337.72099 l

153.28101 340.00101 l

153.28101 340.121 l

152.44099 342.64101 l

152.201 345.401 l

f 

152.681 345.401 m

152.201 345.401 l

f 

BT

0 6.36 -6.36 0 163.84061 334.12061 Tm

0.0099 Tc

-0.0047 Tw

(we)Tj [18.89999 ]TJ (i)Tj [5.7 ]TJ (g)Tj [0 ]TJ (h)Tj [18.89999 ]TJ (t)Tj [4.7 ]TJ (ed)Tj [18.89999 ]TJ ( rou)Tj [18.89999 ]TJ (nd )Tj 

1 -1.26421 TD

0.0071 Tc

-0.00191 Tw

(ro)Tj [16.10001 ]TJ (bin)Tj [16.10001 ]TJ ( \(4)Tj [16.10001 ]TJ (, 4\))Tj 

ET

1 1 1 scn

142.601 403.241 8.88 -12.48 rf

0 0 0 scn

142.36099 403.481 0.48 -12.72 rf

142.601 403.481 9.12 -0.48 rf

151.241 403.241 0.48 -12.72 rf

142.36099 391.00101 9.12 -0.48 rf

BT

/N57 1 Tf

0 8.3813 -6.48 0 149.3206 395.0806 Tm

0 Tc

0 Tw

(0)Tj 

ET

1 1 1 scn

133.601 403.241 9 -12.48 rf

0 0 0 scn

133.36099 403.481 0.48 -12.72 rf

133.601 403.481 9.24001 -0.48 rf

142.36099 403.241 0.48 -12.72 rf

133.36099 391.00101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 140.4406 395.0806 Tm

(1)Tj 

ET

1 1 1 scn

124.601 403.241 8.88 -12.48 rf

0 0 0 scn

124.36099 403.481 0.48 -12.72 rf

124.601 403.481 9.12 -0.48 rf

133.241 403.241 0.48 -12.72 rf

124.36099 391.00101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 131.3206 395.0806 Tm

(2)Tj 

ET

1 1 1 scn

115.36099 403.241 9 -12.48 rf

0 0 0 scn

115.121 403.481 0.48 -12.72 rf

115.36099 403.481 9.24001 -0.48 rf

124.121 403.241 0.48 -12.72 rf

115.121 391.00101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 122.20061 395.0806 Tm

(3)Tj 

ET

1 1 1 scn

106.36099 403.241 8.88 -12.48 rf

0 0 0 scn

106.121 403.481 0.48 -12.72 rf

106.36099 403.481 9.12 -0.48 rf

115.00101 403.241 0.48 -12.72 rf

106.121 391.00101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 113.0806 395.0806 Tm

(8)Tj 

ET

1 1 1 scn

97.36099 403.241 9 -12.48 rf

0 0 0 scn

97.121 403.481 0.48 -12.72 rf

97.36099 403.481 9.24001 -0.48 rf

106.121 403.241 0.48 -12.72 rf

97.121 391.00101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 104.20061 395.0806 Tm

(9)Tj 

ET

1 1 1 scn

88.36099 403.241 8.88 -12.48 rf

0 0 0 scn

88.121 403.481 0.48 -12.72 rf

88.36099 403.481 9.12 -0.48 rf

97.00101 403.241 0.48 -12.72 rf

88.121 391.00101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 95.0806 393.0406 Tm

-0.0275 Tc

(10)Tj 

ET

1 1 1 scn

79.121 403.241 9 -12.48 rf

0 0 0 scn

78.881 403.481 0.48 -12.72 rf

79.121 403.481 9.24001 -0.48 rf

87.881 403.241 0.48 -12.72 rf

78.881 391.00101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 85.9606 393.1606 Tm

-0.0562 Tc

(11)Tj 

ET

1 1 1 scn

142.72099 578.201 8.88 -12.48 rf

0 0 0 scn

142.481 578.44099 0.48 -12.72 rf

142.72099 578.44099 9.12 -0.48 rf

151.36099 578.201 0.48 -12.72 rf

142.481 565.961 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 149.4406 569.92059 Tm

0 Tc

(0)Tj 

ET

1 1 1 scn

133.72099 578.201 9 -12.48 rf

0 0 0 scn

133.481 578.44099 0.48 -12.72 rf

133.72099 578.44099 9.24001 -0.48 rf

142.481 578.201 0.48 -12.72 rf

133.481 565.961 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 140.56059 569.92059 Tm

(2)Tj 

ET

1 1 1 scn

124.72099 578.201 8.88 -12.48 rf

0 0 0 scn

124.481 578.44099 0.48 -12.72 rf

124.72099 578.44099 9.12 -0.48 rf

133.36099 578.201 0.48 -12.72 rf

124.481 565.961 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 131.4406 569.92059 Tm

(1)Tj 

ET

1 1 1 scn

115.481 578.201 9 -12.48 rf

0 0 0 scn

115.241 578.44099 0.48 -12.72 rf

115.481 578.44099 9.24001 -0.48 rf

124.241 578.201 0.48 -12.72 rf

115.241 565.961 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 122.3206 569.92059 Tm

(3)Tj 

ET

1 1 1 scn

106.481 578.201 8.88 -12.48 rf

0 0 0 scn

106.241 578.44099 0.48 -12.72 rf

106.481 578.44099 9.12 -0.48 rf

115.121 578.201 0.48 -12.72 rf

106.241 565.961 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 113.20061 569.92059 Tm

(8)Tj 

ET

1 1 1 scn

97.481 578.201 9 -12.48 rf

0 0 0 scn

97.241 578.44099 0.48 -12.72 rf

97.481 578.44099 9.24001 -0.48 rf

106.241 578.201 0.48 -12.72 rf

97.241 565.961 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 104.3206 567.8806 Tm

-0.0132 Tc

(10)Tj 

ET

1 1 1 scn

88.481 578.201 8.88 -12.48 rf

0 0 0 scn

88.241 578.44099 0.48 -12.72 rf

88.481 578.44099 9.12 -0.48 rf

97.121 578.201 0.48 -12.72 rf

88.241 565.961 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 95.20061 569.92059 Tm

0 Tc

(9)Tj 

ET

1 1 1 scn

79.241 578.201 9 -12.48 rf

0 0 0 scn

79.00101 578.44099 0.48 -12.72 rf

79.241 578.44099 9.24001 -0.48 rf

88.00101 578.201 0.48 -12.72 rf

79.00101 565.961 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 86.0806 568.12061 Tm

-0.0705 Tc

(11)Tj 

ET

213.161 511.72099 m

213.881 512.44099 l

212.44099 513.881 l

211.72099 513.161 l

f 

213.161 511.72099 m

199.481 498.881 l

197.80099 499.601 l

197.80099 500.08099 l

198.041 500.321 l

211.72099 513.161 l

f 

199.841 499.601 m

199.841 469.36099 l

198.161 468.64101 l

197.80099 469.00101 l

197.80099 499.601 l

f 

213.881 457.601 m

214.601 457.00101 l

213.28101 455.44099 l

212.561 456.041 l

f 

199.481 470.201 m

198.161 468.64101 l

212.561 456.041 l

213.881 457.601 l

f 

232.481 512.92101 m

231.761 513.64101 l

230.321 512.201 l

231.041 511.481 l

f 

232.481 512.92101 m

246.28101 499.961 l

246.64101 499.601 l

246.64101 499.241 l

244.841 498.521 l

231.041 511.481 l

f 

246.64101 499.241 m

246.64101 468.761 l

246.28101 468.401 l

244.601 469.121 l

244.601 499.241 l

f 

231.761 455.681 m

231.041 455.08099 l

229.72099 456.64101 l

230.44099 457.241 l

f 

246.28101 468.401 m

244.961 469.961 l

230.44099 457.241 l

231.761 455.681 l

f 

1 1 1 scn

209.561 490.601 9 -12.60001 rf

0 0 0 scn

209.321 490.841 0.48 -12.84 rf

209.561 490.841 9.24001 -0.48 rf

218.321 490.601 0.48 -12.84 rf

209.321 478.241 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 216.4006 482.3206 Tm

0 Tc

(4)Tj 

ET

1 1 1 scn

200.561 490.601 9 -12.60001 rf

0 0 0 scn

200.321 490.841 0.48 -12.84 rf

200.561 490.841 9.24001 -0.48 rf

209.321 490.601 0.48 -12.84 rf

200.321 478.241 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 207.4006 482.3206 Tm

(6)Tj 

ET

1 1 1 scn

191.561 490.601 9 -12.60001 rf

0 0 0 scn

191.321 490.841 0.48 -12.84 rf

191.561 490.841 9.24001 -0.48 rf

200.321 490.601 0.48 -12.84 rf

191.321 478.241 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 198.4006 480.28059 Tm

-0.0275 Tc

(12)Tj 

ET

1 1 1 scn

182.44099 490.601 8.88 -12.60001 rf

0 0 0 scn

182.201 490.841 0.48 -12.84 rf

182.44099 490.841 9.12 -0.48 rf

191.08099 490.601 0.48 -12.84 rf

182.201 478.241 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 189.1606 480.28059 Tm

(14)Tj 

ET

1 1 1 scn

253.121 490.601 8.88 -12.60001 rf

0 0 0 scn

252.881 490.841 0.48 -12.84 rf

253.121 490.841 9.12 -0.48 rf

261.761 490.601 0.48 -12.84 rf

252.881 478.241 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 259.84061 482.3206 Tm

0 Tc

(5)Tj 

ET

1 1 1 scn

244.121 490.601 9 -12.60001 rf

0 0 0 scn

243.881 490.841 0.48 -12.84 rf

244.121 490.841 9.24001 -0.48 rf

252.881 490.601 0.48 -12.84 rf

243.881 478.241 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 250.9606 482.3206 Tm

(7)Tj 

ET

1 1 1 scn

235.121 490.601 8.88 -12.60001 rf

0 0 0 scn

234.881 490.841 0.48 -12.84 rf

235.121 490.841 9.12 -0.48 rf

243.761 490.601 0.48 -12.84 rf

234.881 478.241 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 241.84061 480.28059 Tm

-0.0275 Tc

(13)Tj 

ET

1 1 1 scn

225.881 490.601 9 -12.60001 rf

0 0 0 scn

225.64101 490.841 0.48 -12.84 rf

225.881 490.841 9.24001 -0.48 rf

234.64101 490.601 0.48 -12.84 rf

225.64101 478.241 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 232.7206 480.28059 Tm

(15)Tj 

ET

1 1 1 scn

208.72099 428.681 m

208.961 425.92101 l

209.80099 423.401 l

211.00101 421.121 l

212.681 419.08099 l

214.72099 417.521 l

217.00101 416.201 l

219.521 415.481 l

222.161 415.121 l

224.92101 415.481 l

227.44099 416.201 l

229.72099 417.521 l

231.761 419.08099 l

233.44099 421.121 l

234.64101 423.401 l

235.481 425.92101 l

235.72099 428.681 l

235.72099 446.681 l

235.481 449.44099 l

234.64101 451.961 l

233.44099 454.241 l

231.761 456.28101 l

229.72099 457.961 l

227.44099 459.161 l

224.92101 460.00101 l

222.161 460.241 l

219.521 460.00101 l

217.00101 459.161 l

214.72099 457.961 l

212.681 456.28101 l

211.00101 454.241 l

209.80099 451.961 l

208.961 449.44099 l

208.72099 446.681 l

208.72099 428.681 l

f* 

0 0 0 scn

208.961 428.681 m

209.201 425.92101 l

209.201 426.041 l

210.041 423.521 l

211.241 421.241 l

211.241 421.36099 l

212.92101 419.321 l

212.80099 419.321 l

214.841 417.761 l

217.121 416.44099 l

219.64101 415.72099 l

222.28101 415.36099 l

222.161 415.36099 l

224.92101 415.72099 l

227.44099 416.44099 l

227.321 416.44099 l

229.601 417.761 l

231.64101 419.321 l

233.321 421.36099 l

233.201 421.241 l

234.401 423.521 l

235.241 426.041 l

235.241 425.92101 l

235.481 428.681 l

235.481 446.681 l

235.241 449.44099 l

234.401 451.961 l

234.401 451.841 l

233.201 454.121 l

233.321 454.121 l

231.64101 456.161 l

229.601 457.841 l

229.601 457.72099 l

227.321 458.92101 l

227.44099 458.92101 l

224.92101 459.761 l

222.161 460.00101 l

219.521 459.761 l

219.64101 459.761 l

217.121 458.92101 l

214.841 457.72099 l

214.961 457.841 l

212.92101 456.161 l

211.241 454.121 l

210.041 451.841 l

210.041 451.961 l

209.201 449.44099 l

208.961 446.681 l

208.961 428.681 l

208.481 428.681 l

208.481 446.681 l

208.72099 449.44099 l

208.72099 449.561 l

209.561 452.08099 l

210.761 454.36099 l

210.881 454.481 l

212.561 456.521 l

214.601 458.201 l

216.881 459.401 l

217.00101 459.401 l

219.521 460.241 l

222.161 460.481 l

224.92101 460.241 l

225.041 460.241 l

227.561 459.401 l

229.841 458.201 l

229.961 458.201 l

232.00101 456.521 l

233.681 454.481 l

233.681 454.36099 l

234.881 452.08099 l

235.72099 449.561 l

235.72099 449.44099 l

235.961 446.681 l

235.961 428.681 l

235.72099 425.92101 l

234.881 423.401 l

234.881 423.28101 l

233.681 421.00101 l

232.00101 418.961 l

231.881 418.961 l

229.841 417.401 l

227.561 416.08099 l

227.561 415.961 l

225.041 415.241 l

222.28101 414.881 l

222.161 414.881 l

219.521 415.241 l

217.00101 415.961 l

216.881 416.08099 l

214.601 417.401 l

212.561 418.961 l

210.881 421.00101 l

210.761 421.00101 l

209.561 423.28101 l

209.561 423.401 l

208.72099 425.92101 l

208.481 428.681 l

f 

208.961 428.681 m

208.481 428.681 l

f 

1 1 1 scn

208.72099 520.961 m

208.961 518.201 l

209.80099 515.681 l

211.00101 513.401 l

212.681 511.36099 l

214.72099 509.681 l

217.00101 508.481 l

219.521 507.64101 l

222.161 507.401 l

224.92101 507.64101 l

227.44099 508.481 l

229.72099 509.681 l

231.761 511.36099 l

233.44099 513.401 l

234.64101 515.681 l

235.481 518.201 l

235.72099 520.961 l

235.72099 540.041 l

235.481 542.80099 l

234.64101 545.321 l

233.44099 547.601 l

231.761 549.64101 l

229.72099 551.321 l

227.44099 552.521 l

224.92101 553.36099 l

222.161 553.601 l

219.521 553.36099 l

217.00101 552.521 l

214.72099 551.321 l

212.681 549.64101 l

211.00101 547.601 l

209.80099 545.321 l

208.961 542.80099 l

208.72099 540.041 l

208.72099 520.961 l

f* 

0 0 0 scn

208.961 520.961 m

209.201 518.201 l

209.201 518.321 l

210.041 515.80099 l

211.241 513.521 l

211.241 513.64101 l

212.92101 511.601 l

214.961 509.92101 l

214.841 509.92101 l

217.121 508.72099 l

219.64101 507.881 l

219.521 507.881 l

222.161 507.64101 l

224.92101 507.881 l

227.44099 508.72099 l

227.321 508.72099 l

229.601 509.92101 l

231.64101 511.601 l

233.321 513.64101 l

233.201 513.521 l

234.401 515.80099 l

235.241 518.321 l

235.241 518.201 l

235.481 520.961 l

235.481 540.041 l

235.241 542.80099 l

234.401 545.321 l

234.401 545.201 l

233.201 547.481 l

233.321 547.481 l

231.64101 549.521 l

229.601 551.201 l

229.601 551.08099 l

227.321 552.28101 l

227.44099 552.28101 l

224.92101 553.121 l

222.161 553.36099 l

219.521 553.121 l

219.64101 553.121 l

217.121 552.28101 l

214.841 551.08099 l

214.961 551.201 l

212.92101 549.521 l

211.241 547.481 l

210.041 545.201 l

210.041 545.321 l

209.201 542.80099 l

208.961 540.041 l

208.961 520.961 l

208.481 520.961 l

208.481 540.041 l

208.72099 542.80099 l

208.72099 542.92101 l

209.561 545.44099 l

210.761 547.72099 l

210.881 547.841 l

212.561 549.881 l

214.601 551.561 l

216.881 552.761 l

217.00101 552.761 l

219.521 553.601 l

222.161 553.841 l

224.92101 553.601 l

225.041 553.601 l

227.561 552.761 l

229.841 551.561 l

229.961 551.561 l

232.00101 549.881 l

233.681 547.841 l

233.681 547.72099 l

234.881 545.44099 l

235.72099 542.92101 l

235.72099 542.80099 l

235.961 540.041 l

235.961 520.961 l

235.72099 518.201 l

234.881 515.681 l

234.881 515.561 l

233.681 513.28101 l

232.00101 511.241 l

229.961 509.561 l

229.841 509.44099 l

227.561 508.241 l

225.041 507.401 l

224.92101 507.401 l

222.161 507.161 l

219.521 507.401 l

217.00101 508.241 l

216.881 508.241 l

214.601 509.44099 l

214.601 509.561 l

212.561 511.241 l

210.881 513.28101 l

210.761 513.28101 l

209.561 515.561 l

209.561 515.681 l

208.72099 518.201 l

208.481 520.961 l

f 

208.961 520.961 m

208.481 520.961 l

f 

BT

/N54 1 Tf

0 6.36 -6.36 0 220.84061 509.3206 Tm

0.0087 Tc

-0.00349 Tw

(w)Tj [13.89999 ]TJ (e)Tj [-1.2 ]TJ (i)Tj [4.5 ]TJ (g)Tj [17.7 ]TJ (hte)Tj [17.7 ]TJ (d)Tj [-1.2 ]TJ ( r)Tj [21 ]TJ (oun)Tj [17.7 ]TJ (d )Tj 

0.98109 -1.26421 TD

0.0083 Tc

-0.022 Tw

(rob)Tj [17.3 ]TJ (i)Tj [4.10001 ]TJ (n \(2, 2\))Tj 

-14.3396 0.81129 TD

0.0081 Tc

-0.0029 Tw

(ro)Tj [17.10001 ]TJ (und)Tj [17.10001 ]TJ ( rob)Tj [17.10001 ]TJ (i)Tj [3.89999 ]TJ (n)Tj 

ET

1 1 1 scn

244.36099 403.36099 8.88 -12.48 rf

0 0 0 scn

244.121 403.601 0.48 -12.72 rf

244.36099 403.601 9.12 -0.48 rf

253.00101 403.36099 0.48 -12.72 rf

244.121 391.121 9.12 -0.48 rf

BT

/N57 1 Tf

0 8.3813 -6.48 0 251.0806 395.20061 Tm

0 Tc

0 Tw

(4)Tj 

ET

1 1 1 scn

235.36099 403.36099 9 -12.48 rf

0 0 0 scn

235.121 403.601 0.48 -12.72 rf

235.36099 403.601 9.24001 -0.48 rf

244.121 403.36099 0.48 -12.72 rf

235.121 391.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 242.20061 395.20061 Tm

(5)Tj 

ET

1 1 1 scn

226.36099 403.36099 8.88 -12.48 rf

0 0 0 scn

226.121 403.601 0.48 -12.72 rf

226.36099 403.601 9.12 -0.48 rf

235.00101 403.36099 0.48 -12.72 rf

226.121 391.121 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 233.0806 395.20061 Tm

(6)Tj 

ET

1 1 1 scn

217.121 403.36099 9 -12.48 rf

0 0 0 scn

216.881 403.601 0.48 -12.72 rf

217.121 403.601 9.24001 -0.48 rf

225.881 403.36099 0.48 -12.72 rf

216.881 391.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 223.9606 395.20061 Tm

(7)Tj 

ET

1 1 1 scn

208.00101 403.36099 9 -12.48 rf

0 0 0 scn

207.761 403.601 0.48 -12.72 rf

208.00101 403.601 9.24001 -0.48 rf

216.761 403.36099 0.48 -12.72 rf

207.761 391.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 214.84061 393.1606 Tm

-0.0275 Tc

(12)Tj 

ET

1 1 1 scn

199.121 403.36099 8.88 -12.48 rf

0 0 0 scn

198.881 403.601 0.48 -12.72 rf

199.121 403.601 9.12 -0.48 rf

207.761 403.36099 0.48 -12.72 rf

198.881 391.121 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 205.9606 393.1606 Tm

(13)Tj 

ET

1 1 1 scn

190.121 403.36099 8.88 -12.48 rf

0 0 0 scn

189.881 403.601 0.48 -12.72 rf

190.121 403.601 9.12 -0.48 rf

198.761 403.36099 0.48 -12.72 rf

189.881 391.121 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 196.84061 393.1606 Tm

(14)Tj 

ET

1 1 1 scn

180.881 403.36099 9 -12.48 rf

0 0 0 scn

180.64101 403.601 0.48 -12.72 rf

180.881 403.601 9.24001 -0.48 rf

189.64101 403.36099 0.48 -12.72 rf

180.64101 391.121 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 187.7206 393.1606 Tm

(15)Tj 

ET

1 1 1 scn

244.481 578.321 8.88 -12.48 rf

0 0 0 scn

244.241 578.561 0.48 -12.72 rf

244.481 578.561 9.12 -0.48 rf

253.121 578.321 0.48 -12.72 rf

244.241 566.08099 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 251.20061 570.0406 Tm

0 Tc

(4)Tj 

ET

1 1 1 scn

235.481 578.321 9 -12.48 rf

0 0 0 scn

235.241 578.561 0.48 -12.72 rf

235.481 578.561 9.24001 -0.48 rf

244.241 578.321 0.48 -12.72 rf

235.241 566.08099 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 242.3206 570.0406 Tm

(6)Tj 

ET

1 1 1 scn

226.481 578.321 8.88 -12.48 rf

0 0 0 scn

226.241 578.561 0.48 -12.72 rf

226.481 578.561 9.12 -0.48 rf

235.121 578.321 0.48 -12.72 rf

226.241 566.08099 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 233.20061 570.0406 Tm

(5)Tj 

ET

1 1 1 scn

217.241 578.321 9 -12.48 rf

0 0 0 scn

217.00101 578.561 0.48 -12.72 rf

217.241 578.561 9.24001 -0.48 rf

226.00101 578.321 0.48 -12.72 rf

217.00101 566.08099 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 224.0806 570.0406 Tm

(7)Tj 

ET

1 1 1 scn

208.241 578.321 8.88 -12.48 rf

0 0 0 scn

208.00101 578.561 0.48 -12.72 rf

208.241 578.561 9.12 -0.48 rf

216.881 578.321 0.48 -12.72 rf

208.00101 566.08099 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 214.9606 568.0006 Tm

-0.0132 Tc

(12)Tj 

ET

1 1 1 scn

199.241 578.321 9 -12.48 rf

0 0 0 scn

199.00101 578.561 0.48 -12.72 rf

199.241 578.561 9.24001 -0.48 rf

208.00101 578.321 0.48 -12.72 rf

199.00101 566.08099 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 206.0806 568.0006 Tm

(14)Tj 

ET

1 1 1 scn

190.241 578.321 8.88 -12.48 rf

0 0 0 scn

190.00101 578.561 0.48 -12.72 rf

190.241 578.561 9.12 -0.48 rf

198.881 578.321 0.48 -12.72 rf

190.00101 566.08099 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 196.9606 568.0006 Tm

(13)Tj 

ET

1 1 1 scn

181.00101 578.321 9 -12.48 rf

0 0 0 scn

180.761 578.561 0.48 -12.72 rf

181.00101 578.561 9.24001 -0.48 rf

189.761 578.321 0.48 -12.72 rf

180.761 566.08099 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 187.84061 568.0006 Tm

(15)Tj 

ET

166.36099 333.761 2.03999 0.96001 rf

166.36099 297.761 2.03999 -0.96001 rf

166.36099 297.761 2.03999 36 rf

1 1 1 scn

230.561 322.961 9 -12.60001 rf

0 0 0 scn

230.321 323.201 0.48 -12.84 rf

230.561 323.201 9.24001 -0.48 rf

239.321 322.961 0.48 -12.84 rf

230.321 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 237.4006 314.6806 Tm

0 Tc

(0)Tj 

ET

1 1 1 scn

221.561 322.961 9 -12.60001 rf

0 0 0 scn

221.321 323.201 0.48 -12.84 rf

221.561 323.201 9.24001 -0.48 rf

230.321 322.961 0.48 -12.84 rf

221.321 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 228.4006 314.6806 Tm

(1)Tj 

ET

1 1 1 scn

212.561 322.961 9 -12.60001 rf

0 0 0 scn

212.321 323.201 0.48 -12.84 rf

212.561 323.201 9.24001 -0.48 rf

221.321 322.961 0.48 -12.84 rf

212.321 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 219.4006 314.6806 Tm

(2)Tj 

ET

1 1 1 scn

203.44099 322.961 8.88 -12.60001 rf

0 0 0 scn

203.201 323.201 0.48 -12.84 rf

203.44099 323.201 9.12 -0.48 rf

212.08099 322.961 0.48 -12.84 rf

203.201 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 210.1606 314.6806 Tm

(3)Tj 

ET

1 1 1 scn

194.321 322.961 8.88 -12.60001 rf

0 0 0 scn

194.08099 323.201 0.48 -12.84 rf

194.321 323.201 9.12 -0.48 rf

202.961 322.961 0.48 -12.84 rf

194.08099 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 201.1606 314.6806 Tm

(4)Tj 

ET

1 1 1 scn

185.321 322.961 9 -12.60001 rf

0 0 0 scn

185.08099 323.201 0.48 -12.84 rf

185.321 323.201 9.24001 -0.48 rf

194.08099 322.961 0.48 -12.84 rf

185.08099 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 192.1606 314.6806 Tm

(5)Tj 

ET

1 1 1 scn

176.321 322.961 8.88 -12.60001 rf

0 0 0 scn

176.08099 323.201 0.48 -12.84 rf

176.321 323.201 9.12 -0.48 rf

184.961 322.961 0.48 -12.84 rf

176.08099 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 183.1606 314.6806 Tm

(6)Tj 

ET

1 1 1 scn

167.201 322.961 8.88 -12.60001 rf

0 0 0 scn

166.961 323.201 0.48 -12.84 rf

167.201 323.201 9.12 -0.48 rf

175.841 322.961 0.48 -12.84 rf

166.961 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 173.92059 314.6806 Tm

(7)Tj 

ET

1 1 1 scn

158.44099 322.961 9 -12.60001 rf

0 0 0 scn

158.201 323.201 0.48 -12.84 rf

158.44099 323.201 9.24001 -0.48 rf

167.201 322.961 0.48 -12.84 rf

158.201 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 165.28059 314.6806 Tm

(8)Tj 

ET

1 1 1 scn

149.44099 322.961 9 -12.60001 rf

0 0 0 scn

149.201 323.201 0.48 -12.84 rf

149.44099 323.201 9.24001 -0.48 rf

158.201 322.961 0.48 -12.84 rf

149.201 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 156.28059 314.6806 Tm

(9)Tj 

ET

1 1 1 scn

140.44099 322.961 9 -12.60001 rf

0 0 0 scn

140.201 323.201 0.48 -12.84 rf

140.44099 323.201 9.24001 -0.48 rf

149.201 322.961 0.48 -12.84 rf

140.201 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 147.28059 312.64059 Tm

-0.0275 Tc

(10)Tj 

ET

1 1 1 scn

131.321 322.961 8.88 -12.60001 rf

0 0 0 scn

131.08099 323.201 0.48 -12.84 rf

131.321 323.201 9.12 -0.48 rf

139.961 322.961 0.48 -12.84 rf

131.08099 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 138.0406 312.7606 Tm

-0.0562 Tc

(11)Tj 

ET

1 1 1 scn

122.201 322.961 8.88 -12.60001 rf

0 0 0 scn

121.961 323.201 0.48 -12.84 rf

122.201 323.201 9.12 -0.48 rf

130.841 322.961 0.48 -12.84 rf

121.961 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 128.92059 312.64059 Tm

-0.0275 Tc

(12)Tj 

ET

1 1 1 scn

113.201 322.961 9 -12.60001 rf

0 0 0 scn

112.961 323.201 0.48 -12.84 rf

113.201 323.201 9.24001 -0.48 rf

121.961 322.961 0.48 -12.84 rf

112.961 310.601 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 120.0406 312.64059 Tm

(13)Tj 

ET

1 1 1 scn

104.201 322.961 8.88 -12.60001 rf

0 0 0 scn

103.961 323.201 0.48 -12.84 rf

104.201 323.201 9.12 -0.48 rf

112.841 322.961 0.48 -12.84 rf

103.961 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 110.92059 312.64059 Tm

(14)Tj 

ET

1 1 1 scn

95.08099 322.961 8.88 -12.60001 rf

0 0 0 scn

94.841 323.201 0.48 -12.84 rf

95.08099 323.201 9.12 -0.48 rf

103.72099 322.961 0.48 -12.84 rf

94.841 310.601 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 101.8006 312.64059 Tm

(15)Tj 

ET

165.041 671.44099 2.03999 0.96001 rf

165.041 635.44099 2.03999 -0.96001 rf

165.041 635.44099 2.03999 36 rf

1 1 1 scn

229.241 660.521 8.88 -12.48 rf

0 0 0 scn

229.00101 660.761 0.48 -12.72 rf

229.241 660.761 9.12 -0.48 rf

237.881 660.521 0.48 -12.72 rf

229.00101 648.28101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 235.9606 652.3606 Tm

0 Tc

(0)Tj 

ET

1 1 1 scn

220.241 660.521 9 -12.48 rf

0 0 0 scn

220.00101 660.761 0.48 -12.72 rf

220.241 660.761 9.24001 -0.48 rf

229.00101 660.521 0.48 -12.72 rf

220.00101 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 227.0806 652.3606 Tm

(4)Tj 

ET

1 1 1 scn

211.241 660.521 8.88 -12.48 rf

0 0 0 scn

211.00101 660.761 0.48 -12.72 rf

211.241 660.761 9.12 -0.48 rf

219.881 660.521 0.48 -12.72 rf

211.00101 648.28101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 217.9606 652.3606 Tm

(2)Tj 

ET

1 1 1 scn

202.00101 660.521 9 -12.48 rf

0 0 0 scn

201.761 660.761 0.48 -12.72 rf

202.00101 660.761 9.24001 -0.48 rf

210.761 660.521 0.48 -12.72 rf

201.761 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 208.84061 652.3606 Tm

(6)Tj 

ET

1 1 1 scn

192.881 660.521 9 -12.48 rf

0 0 0 scn

192.64101 660.761 0.48 -12.72 rf

192.881 660.761 9.24001 -0.48 rf

201.64101 660.521 0.48 -12.72 rf

192.64101 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 199.7206 652.3606 Tm

(1)Tj 

ET

1 1 1 scn

184.00101 660.521 8.88 -12.48 rf

0 0 0 scn

183.761 660.761 0.48 -12.72 rf

184.00101 660.761 9.12 -0.48 rf

192.64101 660.521 0.48 -12.72 rf

183.761 648.28101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 190.7206 652.3606 Tm

(5)Tj 

ET

1 1 1 scn

174.881 660.521 9 -12.48 rf

0 0 0 scn

174.64101 660.761 0.48 -12.72 rf

174.881 660.761 9.24001 -0.48 rf

183.64101 660.521 0.48 -12.72 rf

174.64101 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 181.7206 652.3606 Tm

(3)Tj 

ET

1 1 1 scn

165.761 660.521 9 -12.48 rf

0 0 0 scn

165.521 660.761 0.48 -12.72 rf

165.761 660.761 9.24001 -0.48 rf

174.521 660.521 0.48 -12.72 rf

165.521 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 172.6006 652.3606 Tm

(7)Tj 

ET

1 1 1 scn

157.00101 660.521 9 -12.48 rf

0 0 0 scn

156.761 660.761 0.48 -12.72 rf

157.00101 660.761 9.24001 -0.48 rf

165.761 660.521 0.48 -12.72 rf

156.761 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 163.84061 652.3606 Tm

(8)Tj 

ET

1 1 1 scn

148.121 660.521 8.88 -12.48 rf

0 0 0 scn

147.881 660.761 0.48 -12.72 rf

148.121 660.761 9.12 -0.48 rf

156.761 660.521 0.48 -12.72 rf

147.881 648.28101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 154.84061 650.3206 Tm

-0.0275 Tc

(12)Tj 

ET

1 1 1 scn

139.00101 660.521 9 -12.48 rf

0 0 0 scn

138.761 660.761 0.48 -12.72 rf

139.00101 660.761 9.24001 -0.48 rf

147.761 660.521 0.48 -12.72 rf

138.761 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 145.84061 650.3206 Tm

(10)Tj 

ET

1 1 1 scn

129.881 660.521 9 -12.48 rf

0 0 0 scn

129.64101 660.761 0.48 -12.72 rf

129.881 660.761 9.24001 -0.48 rf

138.64101 660.521 0.48 -12.72 rf

129.64101 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 136.7206 650.3206 Tm

(14)Tj 

ET

1 1 1 scn

120.761 660.521 9 -12.48 rf

0 0 0 scn

120.521 660.761 0.48 -12.72 rf

120.761 660.761 9.24001 -0.48 rf

129.521 660.521 0.48 -12.72 rf

120.521 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 127.6006 652.3606 Tm

0 Tc

(9)Tj 

ET

1 1 1 scn

111.881 660.521 8.88 -12.48 rf

0 0 0 scn

111.64101 660.761 0.48 -12.72 rf

111.881 660.761 9.12 -0.48 rf

120.521 660.521 0.48 -12.72 rf

111.64101 648.28101 9.12 -0.48 rf

BT

0 8.3813 -6.48 0 118.6006 650.3206 Tm

-0.0275 Tc

(13)Tj 

ET

1 1 1 scn

102.761 660.521 9 -12.48 rf

0 0 0 scn

102.521 660.761 0.48 -12.72 rf

102.761 660.761 9.24001 -0.48 rf

111.521 660.521 0.48 -12.72 rf

102.521 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 109.6006 650.4406 Tm

-0.0562 Tc

(11)Tj 

ET

1 1 1 scn

93.64101 660.521 9 -12.48 rf

0 0 0 scn

93.401 660.761 0.48 -12.72 rf

93.64101 660.761 9.24001 -0.48 rf

102.401 660.521 0.48 -12.72 rf

93.401 648.28101 9.24001 -0.48 rf

BT

0 8.3813 -6.48 0 100.48061 650.3206 Tm

-0.0275 Tc

(15)Tj 

ET

1 1 1 scn

152.08099 603.761 m

152.321 601.121 l

153.161 598.601 l

154.36099 596.201 l

156.041 594.28101 l

158.08099 592.601 l

160.36099 591.401 l

162.881 590.561 l

165.64101 590.321 l

168.28101 590.561 l

170.80099 591.401 l

173.08099 592.601 l

175.121 594.28101 l

176.80099 596.201 l

178.00101 598.601 l

178.841 601.121 l

179.08099 603.761 l

179.08099 621.881 l

178.841 624.521 l

178.00101 627.161 l

176.80099 629.44099 l

175.121 631.36099 l

173.08099 633.041 l

170.80099 634.241 l

168.28101 635.08099 l

165.64101 635.321 l

162.881 635.08099 l

160.36099 634.241 l

158.08099 633.041 l

156.041 631.36099 l

154.36099 629.44099 l

153.161 627.161 l

152.321 624.521 l

152.08099 621.881 l

152.08099 603.761 l

f* 

0 0 0 scn

152.321 603.761 m

152.561 601.121 l

152.561 601.241 l

153.401 598.72099 l

154.601 596.321 l

154.601 596.44099 l

156.28101 594.521 l

158.321 592.841 l

158.201 592.841 l

160.481 591.64101 l

163.00101 590.80099 l

162.881 590.80099 l

165.64101 590.561 l

168.28101 590.80099 l

170.80099 591.64101 l

170.681 591.64101 l

172.961 592.841 l

175.00101 594.521 l

176.681 596.44099 l

176.561 596.321 l

177.761 598.72099 l

178.601 601.241 l

178.601 601.121 l

178.841 603.761 l

178.841 621.881 l

178.601 624.521 l

177.761 627.161 l

177.761 627.041 l

176.561 629.321 l

176.681 629.321 l

175.00101 631.241 l

172.961 632.92101 l

172.961 632.80099 l

170.681 634.00101 l

170.80099 634.00101 l

168.28101 634.841 l

165.64101 635.08099 l

162.881 634.841 l

163.00101 634.841 l

160.481 634.00101 l

158.201 632.80099 l

158.321 632.92101 l

156.28101 631.241 l

154.601 629.321 l

153.401 627.041 l

153.401 627.161 l

152.561 624.521 l

152.321 621.881 l

152.321 603.761 l

151.841 603.761 l

151.841 621.881 l

152.08099 624.521 l

152.08099 624.64101 l

152.92101 627.28101 l

154.121 629.561 l

154.241 629.681 l

155.92101 631.601 l

157.961 633.28101 l

160.241 634.481 l

160.36099 634.481 l

162.881 635.321 l

165.64101 635.561 l

168.28101 635.321 l

168.401 635.321 l

170.92101 634.481 l

173.201 633.28101 l

173.321 633.28101 l

175.36099 631.601 l

177.041 629.681 l

177.041 629.561 l

178.241 627.28101 l

179.08099 624.64101 l

179.08099 624.521 l

179.321 621.881 l

179.321 603.761 l

179.08099 601.121 l

178.241 598.601 l

178.241 598.481 l

177.041 596.08099 l

175.36099 594.161 l

173.321 592.481 l

173.201 592.36099 l

170.92101 591.161 l

168.401 590.321 l

168.28101 590.321 l

165.64101 590.08099 l

162.881 590.321 l

160.36099 591.161 l

160.241 591.161 l

157.961 592.36099 l

157.961 592.481 l

155.92101 594.161 l

154.241 596.08099 l

154.121 596.08099 l

152.92101 598.481 l

152.92101 598.601 l

152.08099 601.121 l

151.841 603.761 l

f 

152.321 603.761 m

151.841 603.761 l

f 

BT

/N54 1 Tf

0 6.36 -6.36 0 167.0806 599.5605 Tm

0.0099 Tc

-0.0047 Tw

(r)Tj [22.10001 ]TJ (oun)Tj [18.89999 ]TJ (d r)Tj [22.2 ]TJ (obi)Tj [24.5 ]TJ (n)Tj 

ET

PDFVars/TermAll get exec end end

%%PageTrailer

%%EndPage

%%Trailer

%%EOF


%%EndDocument
 @endspecial 523 1571 a Fl(Fig.)15 b(9.)31 b Fo(The)h(bit-rev)n(ersal)g
(phase)g(in)f(the)g(FFT,)i(with)f(N=8.)g(A)f(bit-rev)n(ersal)h(p)r(erm)
n(utation)e(is)523 1662 y(one)d(that)g(sw)n(aps)g(all)h(elemen)n(ts)f
(with)g(indices)g(whose)h(binary)e(represen)n(tations)i(are)f(the)g
(rev)n(erse)523 1754 y(of)f(eac)n(h)g(other.)g(The)g(Butter\015y)f
(stage)i(is)f(similar,)h(but)d(ommitted)g(for)j(lac)n(k)f(of)g(space.)
523 1981 y Fp(reinitialization)d(pro)r(cess)g(through)g(a)g(message.)g
(Additionally)-7 b(,)24 b(an)n(y)f(hierarc)n(hical)f(stream)523
2080 y(construct)32 b(automatically)g(b)r(ecomes)h(a)f(p)r(ossible)h
(candidate)g(for)f(re-initialization,)g(due)523 2180
y(to)41 b(the)g(w)n(ell-de\014ned)g(stream)f(structure)h(and)g(the)g
(simple)g(in)n(terface)g(with)g(the)h Ff(init)523 2280
y Fp(function.)27 b(Finally)-7 b(,)27 b(it)g(is)g(easy)f(for)g(the)h
(compiler)f(to)h(recognize)e(stream)h(re-initialization)523
2379 y(p)r(ossibilities)38 b(and)h(to)f(accoun)n(t)g(for)g(all)g(p)r
(ossible)g(con\014gurations)f(of)h(the)h(stream)f(\015o)n(w)523
2479 y(graph)26 b(during)i(analysis)e(and)h(optimization.)523
2745 y Fg(3.5)95 b(Latency)33 b(Constrain)m(ts)523 2928
y Fp(Lastly)-7 b(,)36 b(StreamIt)h(pro)n(vides)e(a)i(simple)g(w)n(a)n
(y)e(of)i(restricting)f(the)h(latency)f(of)h(an)g(infor-)523
3027 y(mation)f(w)n(a)n(v)n(efron)n(t)e(in)j(tra)n(v)n(eling)e(from)h
(the)g(input)i(of)e(one)g(\014lter)g(to)g(the)h(output)g(of)f(a)523
3127 y(do)n(wnstream)27 b(\014lter.)i(Issuing)e(the)i(directiv)n(e)f
Ff(MAX)p 2110 3127 27 4 v 30 w(LATENCY\(A,)40 b(B,)i(n\))28
b Fp(from)g(within)h(an)523 3227 y Ff(init)c Fp(means)i(that)g
Fd(A)g Fp(can)g(only)f(execute)h(up)g(to)g(the)g(w)n(a)n(v)n(efron)n(t)
e(of)h(information)h(that)g Fd(B)523 3326 y Fp(will)h(see)f(after)g
Fd(n)h Fp(in)n(v)n(o)r(cations)e(of)h(its)h(o)n(wn)f(w)n(ork)f
(function.)523 3609 y Fk(4)112 b(Detailed)36 b(Example)523
3825 y Fp(W)-7 b(e)31 b(no)n(w)e(discuss)h(the)g(StreamIt)g(implemen)n
(tation)h(of)f(the)g(T)-7 b(runk)n(ed)30 b(Radio)f(illustrated)523
3925 y(in)38 b(Figure)e(1.)h(The)h(T)-7 b(runk)n(ed)37
b(Radio)f(is)i(a)e(frequency-hopping)h(system)g(in)g(whic)n(h)h(the)523
4024 y(receiv)n(er)29 b(switc)n(hes)h(b)r(et)n(w)n(een)h(a)f(set)h(of)g
(kno)n(wn)f(frequencies)g(whenev)n(er)g(it)h(hears)f(certain)523
4124 y(tones)d(from)h(the)g(transmitter.)648 4227 y(The)h(toplev)n(el)f
(class,)g Ff(TrunkedRadio)p Fp(,)c(is)29 b(implemen)n(ted)g(as)g(a)f
(sev)n(en-stage)f(Pip)r(eline)523 4327 y(\(see)41 b(Figure)f(8\).)h
(The)g Ff(RFtoIF)e Fp(stage)h(mo)r(dulates)h(the)g(input)h(signal)e
(from)h(RF)h(to)e(a)523 4426 y(frequency)26 b(band)g(around)g(the)g
(curren)n(t)g(IF)g(frequency)-7 b(.)26 b(T)-7 b(o)26
b(supp)r(ort)g(a)g(c)n(hange)f(in)i(the)g(IF)523 4526
y(frequency)f(when)g(frequency)f(hopping)h(o)r(ccurs,)f(the)i
Ff(RftoIF)c Fp(\014lter)j(con)n(tains)f(a)h Ff(setFreq)523
4625 y Fp(metho)r(d)20 b(that)g(is)f(in)n(v)n(ok)n(ed)f(via)h(a)g
(message)f(from)h(the)h Ff(CheckFreqHop)14 b Fp(stage.)19
b(The)g(message)523 4725 y(is)24 b(sen)n(t)g(from)g Ff(CheckFreqHop)19
b Fp(with)25 b(a)f(latency)g(range)e(of)j(4)p Fd(N)32
b Fp(to)24 b(6)p Fd(N)9 b Fp(,)24 b(whic)n(h)g(means)g(that)523
4825 y Ff(RFtoIF)19 b Fp(m)n(ust)j(deliv)n(er)f(b)r(et)n(w)n(een)h(4)p
Fd(N)30 b Fp(and)22 b(6)p Fd(N)30 b Fp(items)22 b(using)f(the)h(old)g
(mo)r(dulation)f(sc)n(heme)523 4924 y(b)r(efore)27 b(c)n(hanging)g(to)g
(the)h(new)g(frequency)-7 b(.)p eop
%%Page: 14 14
14 13 bop 523 232 a Fo(14)199 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)
-6 b(erlag)648 448 y Fp(The)33 b(optional)g Ff(Booster)d
Fp(stage)j(pro)n(vides)f(ampli\014cation)h(for)f(w)n(eak)h(signals,)f
(but)i(is)523 548 y(usually)19 b(turned)g(o\013)g(to)g(conserv)n(e)e(p)
r(o)n(w)n(er.)h(The)h Ff(Booster)d Fp(is)j(toggled)f(b)n(y)h(a)f
(re-initialization)523 648 y(message)j(from)i(the)g Ff(CheckQuality)17
b Fp(stage,)22 b(whic)n(h)h(estimates)f(the)h(signal)f(qualit)n(y)g(b)n
(y)h(the)523 747 y(shap)r(e)k(of)h(the)f(frequency)g(sp)r(ectrum.)h(If)
g(all)f(the)h(frequencies)f(ha)n(v)n(e)f(similar)h(amplitudes,)523
847 y Ff(CheckQuality)20 b Fp(assumes)j(that)i(the)g(signal-to-noise)d
(ratio)i(is)h(lo)n(w)e(and)i(sends)f(a)g(message)523
946 y(to)k(activ)-5 b(ate)27 b(the)h Ff(Booster)p Fp(.)d(This)i
(message)f(is)i(sen)n(t)f(using)h(b)r(est-e\013ort)f(deliv)n(ery)-7
b(.)648 1048 y(The)35 b Ff(FFT)f Fp(stage)h(con)n(v)n(erts)f(the)i
(signal)e(from)h(the)h(time)g(domain)f(to)h(the)f(frequency)523
1148 y(domain;)21 b(please)f(refer)h(to)g(p.)g(796)f(of)h([19])f(for)h
(a)f(diagram)g(of)h(the)h(parallel)e(FFT)h(algorithm.)523
1247 y(The)26 b(StreamIt)f(implemen)n(tation)h(consists)f(of)h(a)f
(bit-rev)n(ersal)e(p)r(erm)n(utation)j(follo)n(w)n(ed)e(b)n(y)523
1347 y(a)i(series)g(of)g Ff(Butterfly)d Fp(stages.)i(The)i(bit-rev)n
(ersal)e(phase)h(illustrates)f(ho)n(w)h(data)g(can)h(b)r(e)523
1447 y(resh)n(u\017ed)34 b(with)g(just)h(a)f(few)g(SplitJoin)g
(constructs)g(\(see)g(Figure)f(9\).)h(The)h Ff(Butterfly)523
1546 y Fp(stage{whic)n(h)22 b(is)i(parameterized)f(to)g(allo)n(w)g(for)
h(a)f(compact)h(represen)n(tation)e(of)i(the)g(FFT{)523
1646 y(also)f(emplo)n(ys)h(SplitJoins)g(to)g(select)g(groups)f(of)h
(items)g(for)g(its)h(computation.)f(W)-7 b(e)24 b(b)r(eliev)n(e)523
1745 y(that)37 b(the)g(StreamIt)f(v)n(ersion)f(of)i(the)g(FFT)f(is)h
(clean)f(and)g(in)n(tuitiv)n(e,)h(as)f(the)h(SplitJoin)523
1845 y(constructs)27 b(exp)r(ose)g(the)h(natural)f(parallelism)f(of)i
(the)g(algorithm.)523 2121 y Fk(5)112 b(Results)523 2330
y Fp(W)-7 b(e)31 b(ha)n(v)n(e)e(implemen)n(ted)j(a)e(fully-functional)h
(protot)n(yp)r(e)f(of)g(the)h(StreamIt)g(compiler)f(as)523
2430 y(an)f(extension)f(to)h(the)h(Kopi)e(Ja)n(v)-5 b(a)28
b(Compiler,)g(a)h(comp)r(onen)n(t)g(of)g(the)g(op)r(en-source)f(Kopi)
523 2529 y(Pro)5 b(ject)30 b([20].)h(A)n(t)h(this)g(time,)h(our)e
(compiler)g(is)g(a)h(pro)r(of-of-concept)e(and)h(do)r(es)h(not)f(y)n
(et)523 2629 y(include)i(the)h(stream-sp)r(eci\014c)e(optimizations)g
(that)i(w)n(e)e(are)g(w)n(orking)g(on;)h(w)n(e)f(generate)523
2729 y(C)i(co)r(de)g(that)g(is)g(compiled)g(with)g(a)g(StreamIt)g(run)n
(time)g(library)e(to)i(pro)r(duce)g(the)g(\014nal)523
2828 y(executable.)27 b(W)-7 b(e)28 b(ha)n(v)n(e)e(also)h(dev)n(elop)r
(ed)g(a)g(library)f(in)i(Ja)n(v)-5 b(a)26 b(that)i(allo)n(ws)e
(StreamIt)h(co)r(de)523 2928 y(to)f(b)r(e)h(executed)f(as)f(pure)h(Ja)n
(v)-5 b(a,)25 b(thereb)n(y)g(pro)n(viding)g(a)h(v)n(eri\014cation)e
(mec)n(hanism)i(for)g(the)523 3027 y(output)i(of)g(the)g(compiler.)648
3129 y(The)21 b(compilation)f(pro)r(cess)g(for)h(streaming)f(programs)f
(con)n(tains)h(man)n(y)g(no)n(v)n(el)g(asp)r(ects)523
3229 y(b)r(ecause)40 b(the)g(basic)g(unit)h(of)f(computation)g(is)g(a)f
(stream)h(rather)f(than)h(a)g(pro)r(cedure.)523 3328
y(In)c(order)f(to)h(compile)g(stream)f(mo)r(dules)h(separately)-7
b(,)35 b(w)n(e)h(ha)n(v)n(e)f(dev)n(elop)r(ed)g(a)h(run)n(time)523
3428 y(in)n(terface{analogous)16 b(to)j(that)g(of)g(a)g(pro)r(cedure)f
(call)h(for)f(traditional)h(co)r(des{that)f(sp)r(eci\014es)523
3528 y(ho)n(w)32 b(one)h(can)f(in)n(teract)g(with)h(a)g(blac)n(k)f(b)r
(o)n(x)g(of)h(streaming)e(computation.)i(The)g(stream)523
3627 y(in)n(terface)d(con)n(tains)f(separate)h(phases)f(for)h
(initialization)h(and)f(steady-state)f(execution;)523
3727 y(in)e(the)f(execution)h(phase,)f(the)g(in)n(terface)g(includes)h
(a)f(con)n(tract)f(for)h(input)h(items,)f(output)523
3826 y(items,)i(and)f(p)r(ossible)h(message)e(pro)r(duction)h(and)h
(consumption.)648 3928 y(Though)h(w)n(e)h(ha)n(v)n(e)f(y)n(et)g(to)h
(add)g(optimizations)g(to)f(our)h(compiler,)f(it)i(is)f(nonetheless)523
4028 y(in)n(teresting)41 b(to)g(ev)-5 b(aluate)41 b(its)g(baseline)g(p)
r(erformance.)g(F)-7 b(or)40 b(this)i(purp)r(ose,)f(w)n(e)g(dev)n(el-)
523 4127 y(op)r(ed)27 b(StreamIt)f(implemen)n(tations)h(of)g(four)f
(applications:)g(1\))g(A)h(GSM)h(Deco)r(der,)e(whic)n(h)523
4227 y(tak)n(es)i(GSM-enco)r(ded)i(parameters)d(as)i(inputs,)h(and)f
(uses)g(these)g(to)g(syn)n(thesize)g(audible)523 4327
y(sp)r(eec)n(h[11],)g(2\))g(A)h(system)f(from)g(the)h(P)n(olymorphic)e
(Computing)i(Arc)n(hitecture)f(\(PCA\))523 4426 y([15])c(whic)n(h)g
(encapsulates)g(the)h(core)f(functionalit)n(y)g(of)h(mo)r(dern)f
(radar,)f(sonar,)g(and)i(com-)523 4526 y(m)n(unications)36
b(signal)g(pro)r(cessors,)f(3\))h(A)h(soft)n(w)n(are-based)d(FM)k
(Radio)e(with)h(equalizer,)523 4625 y(and)28 b(4\))g(A)g(p)r
(erformance)f(test)h(from)f(the)i(Sp)r(ectrumW)-7 b(are)27
b(system)h(that)g(implemen)n(ts)g(an)523 4725 y(Orthogonal)f(F)-7
b(requency)30 b(Division)f(Multiplexor)g(\(OFDM\))i([8].)e(T)-7
b(able)29 b(1)h(giv)n(es)e(c)n(harac-)523 4825 y(teristics)j(of)h(the)h
(ab)r(o)n(v)n(e)d(applications)h(including)h(the)g(n)n(um)n(b)r(er)g
(of)g(\014lters)f(implemen)n(ted)523 4924 y(and)c(the)h(size)g(of)f
(the)h(stream)f(graph)g(as)f(co)r(ded.)p eop
%%Page: 15 15
15 14 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)199 b(15)p 558 373 1161 4 v 556 439 4 67 v 570
419 a Fh(Benc)n(hmark)p 986 439 V 102 w(Lines)p 1161
439 V 23 w(Filters)p 1373 439 V 22 w(Graph)22 b(Size)p
1717 439 V 558 443 1161 4 v 558 459 V 556 526 4 67 v
570 506 a(PCA)g(Demo)p 986 526 V 151 w(484)p 1161 526
V 179 w(5)p 1373 526 V 310 w(7)p 1717 526 V 558 529 1161
4 v 556 595 4 67 v 570 575 a(FM)f(Radio)p 986 595 V 188
w(411)p 1161 595 V 179 w(5)p 1373 595 V 277 w(27)p 1717
595 V 558 599 1161 4 v 556 665 4 67 v 570 645 a(p)r(erftest4)p
986 665 V 225 w(347)p 1161 665 V 179 w(5)p 1373 665 V
277 w(20)p 1717 665 V 558 668 1161 4 v 556 735 4 67 v
570 715 a(GSM)h(Deco)r(der)p 986 735 V 41 w(3050)p 1161
735 V 145 w(11)p 1373 735 V 278 w(21)p 1717 735 V 558
738 1161 4 v 524 848 a Fb(T)-6 b(able)25 b(1.)d Fo(Application)k
(Characteristics)p 2001 369 1314 4 v 1999 435 4 67 v
2013 415 a Fh(Benc)n(hmark)p 2428 435 V 102 w(StreamIt)p
2707 435 V 21 w(Sp)r(ectrumW)-5 b(are)p 3158 435 V 104
w(C)p 3312 435 V 2001 438 1314 4 v 2001 455 V 1999 521
4 67 v 2012 501 a(PCA)23 b(Demo)p 2428 521 V 268 w(1.3)p
2707 521 V 366 w(3.4)p 3158 521 V 23 w(N/A)p 3312 521
V 2001 525 1314 4 v 1999 591 4 67 v 2012 571 a(FM)f(Radio)p
2428 591 V 305 w(4.9)p 2707 591 V 366 w(9.9)p 3158 591
V 23 w(N/A)p 3312 591 V 2001 594 1314 4 v 1999 661 4
67 v 2012 641 a(p)r(erftest4)p 2428 661 V 329 w(330)p
2707 661 V 352 w(330)p 3158 661 V 23 w(N/A)p 3312 661
V 2001 664 1314 4 v 1999 731 4 67 v 2012 711 a(GSM)g(Deco)r(der)p
2428 731 V 159 w(4.88)p 2707 731 V 320 w(N/A)p 3158 731
V 69 w(.47)p 3312 731 V 2001 734 1314 4 v 1907 848 a
Fb(T)-6 b(able)22 b(2.)d Fo(P)n(erformance)26 b(Results)g(\(in)g
Fa(\026)p Fo(sec/item\))648 1006 y Fp(T)-7 b(able)34
b(2)f(giv)n(es)g(the)i(p)r(erformance)e(of)i(our)e(compiler)h(b)n(y)g
(comparing)e(the)j(StreamIt)523 1105 y(implemen)n(tation)22
b(against)e(either)h(the)h(Sp)r(ectrumW)-7 b(are)21 b(implemen)n
(tation)h(or)e(\(in)i(the)g(case)523 1205 y(of)30 b(GSM\))g(a)g
(hand-optimized)f(C)h(v)n(ersion.)e(Sp)r(ectrumW)-7 b(are)30
b([8])g(is)f(a)h(high-p)r(erformance)523 1305 y(run)n(time)19
b(library)f(for)h(streaming)f(programs,)f(implemen)n(ted)i(in)h(C++.)e
(The)i(StreamIt)f(lan-)523 1404 y(guage)27 b(o\013ers)h(a)f(higher)h
(lev)n(el)g(of)g(abstraction)f(than)i(Sp)r(ectrumW)-7
b(are)28 b(\(see)g(Section)g(3.1\),)523 1504 y(and)k(y)n(et)g(the)h
(StreamIt)f(compiler)f(is)h(able)g(to)g(b)r(eat)g(the)h(Sp)r(ectrumW)-7
b(are)32 b(p)r(erformance)523 1604 y(b)n(y)27 b(a)h(factor)e(of)i(t)n
(w)n(o)f(for)g(the)h(PCA)f(Demo)h(and)f(FM)h(Radio.)648
1703 y(F)-7 b(or)24 b(the)g(GSM)i(application,)d(the)i(extensiv)n(ely)f
(hand-optimized)h(C)f(v)n(ersion)f(incorp)r(o-)523 1803
y(rates)e(man)n(y)h(transformations)e(that)i(rely)f(on)h(a)g(high-lev)n
(el)f(kno)n(wledge)g(of)h(the)g(algorithm,)523 1902 y(and)32
b(StreamIt)f(p)r(erforms)g(an)h(order)e(of)i(magnitude)g(slo)n(w)n(er.)
e(Ho)n(w)n(ev)n(er,)g(this)i(v)n(ersion)e(of)523 2002
y(the)c(compiler)e(is)h(only)g(a)f(protot)n(yp)r(e,)h(and)g(is)g(not)g
(y)n(et)g(in)n(tended)g(to)g(comp)r(ete)h(with)f(hand-)523
2102 y(co)r(ded)36 b(C.)g(Our)f(co)r(de)g(generation)g(strategy)f
(curren)n(tly)h(has)g(man)n(y)g(ine\016ciencies,)h(and)523
2201 y(in)31 b(the)h(future)f(w)n(e)g(plan)g(to)g(generate)f(optimized)
h(assem)n(bly)f(co)r(de)h(b)n(y)f(in)n(terfacing)g(with)523
2301 y(a)h(co)r(de)h(generator.)d(W)-7 b(e)32 b(b)r(eliev)n(e)f(that)h
(stream-conscious)d(optimizations)i(can)g(impro)n(v)n(e)523
2401 y(the)c(p)r(erformance)f(b)n(y)h(an)g(order)f(of)g(magnitude)h(on)
g(unipro)r(cessors;)e(moreo)n(v)n(er,)g(w)n(e)h(ha)n(v)n(e)523
2500 y(y)n(et)35 b(to)g(consider)f(parallel)g(targets,)g(and)g(this)i
(is)f(where)f(w)n(e)h(exp)r(ect)g(to)g(\014nd)h(the)f(most)523
2600 y(pronounced)40 b(b)r(ene\014ts)h(of)f(the)h(abundan)n(t)f
(parallelism)g(and)g(regular)f(comm)n(unication)523 2699
y(patterns)27 b(exp)r(osed)g(b)n(y)h(StreamIt.)523 2948
y Fk(6)112 b(Related)37 b(W)-9 b(ork)523 3131 y Fp(A)26
b(large)d(n)n(um)n(b)r(er)i(of)h(programming)d(languages)g(ha)n(v)n(e)h
(included)i(a)f(concept)g(of)g(a)g(stream;)523 3231 y(see)e([3])f(for)h
(a)f(surv)n(ey)-7 b(.)22 b(Those)g(that)h(are)f(p)r(erhaps)h(most)g
(related)f(to)h(StreamIt)g(1.0)f(are)g(syn-)523 3330
y(c)n(hronous)32 b(data\015o)n(w)h(languages)f(suc)n(h)i(as)f(LUSTRE)h
([21])f(and)h(ESTEREL)f([22])g(whic)n(h)523 3430 y(require)27
b(a)g(\014xed)g(n)n(um)n(b)r(er)h(of)f(inputs)h(to)g(arriv)n(e)e(sim)n
(ultaneously)g(b)r(efore)i(\014ring)f(a)g(stream)523
3530 y(no)r(de.)j(Ho)n(w)n(ev)n(er,)f(most)h(sp)r(ecial-purp)r(ose)e
(stream)i(languages)e(do)i(not)g(con)n(tain)g(features)523
3629 y(suc)n(h)h(as)g(messaging)f(and)h(supp)r(ort)h(for)f(mo)r(dular)g
(program)e(dev)n(elopmen)n(t)i(that)h(are)f(es-)523 3729
y(sen)n(tial)38 b(for)g(mo)r(dern)h(stream)e(applications.)h(Also,)h
(most)f(of)h(these)f(languages)f(are)h(so)523 3828 y(abstract)e(and)h
(unstructured)g(that)h(the)f(compiler)g(cannot)f(p)r(erform)h(enough)f
(analysis)523 3928 y(and)27 b(optimization)h(to)f(result)h(in)f(an)h
(e\016cien)n(t)f(implemen)n(tation.)648 4028 y(A)n(t)21
b(an)f(abstract)g(lev)n(el,)g(the)h(stream)f(graphs)f(of)i(StreamIt)f
(share)g(a)g(n)n(um)n(b)r(er)h(of)f(prop)r(er-)523 4127
y(ties)25 b(with)h(the)f(sync)n(hronous)e(data\015o)n(w)h(\(SDF\))j
(domain)d(as)h(considered)f(b)n(y)h(the)g(Ptolem)n(y)523
4227 y(pro)5 b(ject)22 b([23].)f(Eac)n(h)g(no)r(de)i(in)f(an)g(SDF)h
(graph)f(pro)r(duces)f(and)h(consumes)g(a)g(giv)n(en)f(n)n(um)n(b)r(er)
523 4327 y(of)30 b(items,)g(and)f(there)h(can)f(b)r(e)i(dela)n(ys)d
(along)h(the)h(arcs)e(b)r(et)n(w)n(een)i(no)r(des)g(\(corresp)r(onding)
523 4426 y(lo)r(osely)f(to)h(items)g(that)g(are)f(p)r(eek)n(ed)h(in)g
(StreamIt\).)g(As)h(in)f(StreamIt,)g(SDF)g(graphs)f(are)523
4526 y(guaran)n(teed)e(to)h(ha)n(v)n(e)f(a)h(static)h(sc)n(hedule)f
(and)g(there)g(are)g(a)g(n)n(um)n(b)r(er)g(of)g(nice)h(sc)n(heduling)
523 4625 y(results)34 b(incorp)r(orating)e(co)r(de)i(size)h(and)f
(execution)g(time)h([24].)e(Ho)n(w)n(ev)n(er,)g(previous)g(re-)523
4725 y(sults)d(on)f(SDF)h(sc)n(heduling)f(do)g(not)g(consider)g
(constrain)n(ts)f(imp)r(osed)h(b)n(y)h(p)r(oin)n(t-to-p)r(oin)n(t)523
4825 y(messages,)37 b(and)i(do)g(not)g(include)g(a)g(notion)f(of)h
(StreamIt's)g(information)f(w)n(a)n(v)n(efron)n(ts,)523
4924 y(re-initialization,)26 b(and)i(programming)d(language)h(supp)r
(ort.)p eop
%%Page: 16 16
16 15 bop 523 232 a Fo(16)199 b(Cop)n(yrigh)n(t)26 b(2002)h(Springer-V)
-6 b(erlag)648 448 y Fp(A)31 b(sp)r(eci\014cation)h(pac)n(k)-5
b(age)30 b(used)h(in)h(industry)f(b)r(earing)g(some)g(lik)n(eness)g(to)
g(StreamIt)523 548 y(is)i(SDL:)h(Sp)r(eci\014cation)g(and)f
(Description)g(Language)f([25].)h(SDL)g(is)h(a)f(formal,)g(ob)5
b(ject-)523 648 y(orien)n(ted)32 b(language)f(for)h(describing)g(the)h
(structure)g(and)f(b)r(eha)n(vior)g(of)g(large,)g(real-time)523
747 y(systems,)e(esp)r(ecially)f(for)g(telecomm)n(unications)g
(applications.)h(It)g(includes)g(a)f(notion)h(of)523
847 y(async)n(hronous)25 b(messaging)h(based)i(on)f(queues)h(at)f(the)h
(receiv)n(er,)f(but)h(do)r(es)f(not)h(incorp)r(o-)523
946 y(rate)21 b(w)n(a)n(v)n(efron)n(t)e(seman)n(tics)i(as)g(do)r(es)h
(StreamIt.)f(Moreo)n(v)n(er,)e(its)j(fo)r(cus)g(is)f(on)g(sp)r
(eci\014cation)523 1046 y(and)27 b(v)n(eri\014cation)g(whereas)f
(StreamIt)h(aims)h(to)f(pro)r(duce)g(an)h(e\016cien)n(t)f(implemen)n
(tation.)523 1324 y Fk(7)112 b(Conclusions)37 b(and)h(F)-9
b(uture)38 b(W)-9 b(ork)523 1536 y Fp(This)27 b(pap)r(er)f(presen)n(ts)
g(StreamIt,)h(a)g(no)n(v)n(el)e(language)g(for)i(high-p)r(erformance)e
(streaming)523 1635 y(applications.)j(Stream)g(programs)e(are)h
(emerging)g(as)h(a)g(v)n(ery)f(imp)r(ortan)n(t)i(class)e(of)h(appli-)
523 1735 y(cations)h(with)i(distinct)g(prop)r(erties)e(from)h(other)f
(recognized)g(application)g(classes.)g(This)523 1835
y(pap)r(er)c(dev)n(elops)f(fundamen)n(tal)i(programming)d(constructs)h
(for)h(the)h(streaming)e(domain.)648 1937 y(The)41 b(primary)f(goal)g
(of)h(StreamIt)g(is)h(to)f(raise)f(the)h(abstraction)f(lev)n(el)h(in)h
(stream)523 2036 y(programming)27 b(without)i(sacri\014cing)f(p)r
(erformance.)f(W)-7 b(e)30 b(ha)n(v)n(e)d(argued)h(that)h(StreamIt's)
523 2136 y(mec)n(hanisms)18 b(for)g(\014lter)g(de\014nition,)h
(\014lter)f(comp)r(osition,)g(messaging,)f(and)h(re-initialization)523
2236 y(will)h(impro)n(v)n(e)e(programmer)f(pro)r(ductivit)n(y)i(and)g
(program)e(robustness)h(within)i(the)g(stream-)523 2335
y(ing)27 b(domain.)648 2437 y(Also,)21 b(w)n(e)g(b)r(eliev)n(e)g(that)h
(StreamIt)f(is)g(a)g(viable)g(common)g(mac)n(hine)g(language)f(for)h
(grid-)523 2537 y(based)f(arc)n(hitectures)e(\(e.g.,)j([4{6]\),)e(just)
i(as)e(C)i(is)f(a)f(common)h(mac)n(hine)g(language)e(for)i(v)n(on-)523
2637 y(Neumann)32 b(mac)n(hines.)f(StreamIt)h(abstracts)e(a)n(w)n(a)n
(y)g(the)i(target's)e(gran)n(ularit)n(y)-7 b(,)30 b(memory)523
2736 y(la)n(y)n(out,)38 b(and)h(net)n(w)n(ork)f(in)n(terconnect,)h
(while)g(capturing)f(the)i(notion)f(of)g(indep)r(enden)n(t)523
2836 y(pro)r(cessors)25 b(that)i(comm)n(unicate)g(in)g(regular)e
(patterns.)i(W)-7 b(e)28 b(are)e(dev)n(eloping)g(\014ssion)g(and)523
2935 y(fusion)19 b(algorithms)f(that)h(can)g(automatically)f(adjust)h
(the)h(gran)n(ularit)n(y)c(of)j(a)g(stream)f(graph)523
3035 y(to)28 b(matc)n(h)f(that)h(of)f(a)h(giv)n(en)e(target.)648
3137 y(W)-7 b(e)23 b(ha)n(v)n(e)g(a)g(n)n(um)n(b)r(er)g(of)g
(extensions)g(planned)h(for)e(the)i(next)g(v)n(ersion)e(of)h(the)h
(StreamIt)523 3237 y(language.)e(The)j(curren)n(t)e(v)n(ersion)f(is)i
(designed)g(primarily)f(for)g(uniform)h(one-dimensional)523
3336 y(data)19 b(pro)r(cessing,)f(but)j(constructs)e(for)g(hierarc)n
(hical)e(frames)i(of)h(data)f(w)n(ould)g(b)r(e)h(useful)h(for)523
3436 y(image)31 b(pro)r(cessing.)f(Moreo)n(v)n(er,)f(a)i(future)h(v)n
(ersion)d(will)j(supp)r(ort)f(dynamically)g(v)-5 b(arying)523
3536 y(I/O)28 b(rates)g(of)h(the)h(\014lters)f(in)g(the)h(stream.)e(W)
-7 b(e)29 b(exp)r(ect)h(that)f(suc)n(h)g(supp)r(ort)g(will)g(require)
523 3635 y(new)d(language)e(constructs{for)g(instance,)h(a)h(t)n(yp)r
(e-dispatc)n(h)f(splitter)h(that)g(routes)f(items)523
3735 y(to)k(the)g(comp)r(onen)n(ts)g(of)g(a)g(SplitJoin)g(based)g(on)f
(their)h(t)n(yp)r(e,)h(and)f(a)f(fall-through)g(joiner)523
3835 y(that)g(pulls)g(items)g(from)f(an)n(y)g(stream)f(in)i(a)g
(SplitJoin)f(as)g(so)r(on)g(as)g(they)h(are)e(pro)r(duced.)648
3937 y(Our)31 b(immediate)i(fo)r(cus)g(is)f(on)g(dev)n(eloping)f(a)h
(high-p)r(erformance)f(optimizing)i(com-)523 4036 y(piler)j(for)g
(StreamIt)g(1.0.)g(As)g(describ)r(ed)g(in)h([18],)f(the)g(structure)g
(of)g(StreamIt)h(can)f(b)r(e)523 4136 y(exploited)30
b(b)n(y)g(the)g(compiler)g(to)f(p)r(erform)h(a)g(wide)g(range)f(of)h
(stream-sp)r(eci\014c)f(optimiza-)523 4235 y(tions.)34
b(Our)f(goal)g(is)h(to)g(matc)n(h)f(the)i(p)r(erformance)e(of)h
(hand-co)r(ded)f(applications,)g(suc)n(h)523 4335 y(that)28
b(the)g(abstraction)e(b)r(ene\014ts)i(of)g(StreamIt)f(come)h(with)g(no)
f(p)r(erformance)f(p)r(enalt)n(y)-7 b(.)523 4613 y Fk(8)112
b(Ac)m(kno)m(wledgemen)m(ts)523 4825 y Fp(The)23 b(StreamIt)h(compiler)
e(w)n(as)h(implemen)n(ted)g(with)h(Mic)n(hael)f(Gordon)f(and)h(Da)n
(vid)g(Maze,)523 4924 y(with)c(applications)e(supp)r(ort)i(of)f(Jerem)n
(y)f(W)-7 b(ong,)18 b(Henry)g(Ho\013man,)h(and)f(Matthew)h(Bro)n(wn;)p
eop
%%Page: 17 17
17 16 bop 2069 232 a Fo(Cop)n(yrigh)n(t)25 b(2002)i(Springer-V)-6
b(erlag)199 b(17)523 448 y Fp(w)n(e)23 b(also)g(thank)g(Matt)h(F)-7
b(rank)23 b(for)g(man)n(y)g(helpful)h(commen)n(ts.)f(This)h(w)n(ork)e
(w)n(as)g(supp)r(orted)523 548 y(in)28 b(part)f(b)n(y)g(the)h(MIT)g
(Oxygen)e(Pro)5 b(ject)27 b(and)g(D)n(ARP)-7 b(A)28 b(Gran)n(t)f
(DBT6396-C-0036.)523 783 y Fk(References)561 936 y Fo(1.)43
b(Rixner,)30 b(S.,)i(et)f(al:)52 b(A)31 b(Bandwidth-E\016cien)n(t)g
(Arc)n(hitecture)g(for)h(Media)g(Pro)r(cessing.)53 b(In:)663
1027 y(HPCA,)25 b(Dallas,)j(TX)d(\(1998\))561 1111 y(2.)43
b(Ab)r(elson,)30 b(H.,)g(Sussman,)f(G.:)47 b(Structure)29
b(and)h(In)n(terpretation)f(of)i(Computer)e(Programs.)663
1202 y(MIT)d(Press,)h(Cam)n(bridge,)f(MA)f(\(1985\))561
1285 y(3.)43 b(Stephens,)20 b(R.:)27 b(A)20 b(Surv)n(ey)g(of)h(Stream)f
(Pro)r(cessing.)29 b(Acta)21 b(Informatica)h Fl(34)f
Fo(\(1997\))h(491{541)561 1369 y(4.)43 b(Mai,)28 b(K.,)f(P)n(aask)n(e,)
g(T.,)h(Ja)n(y)n(asena,)g(N.,)f(Ho,)g(R.,)g(Dally)-6
b(,)26 b(W.,)i(Horo)n(witz,)g(M.:)38 b(Smart)25 b(mem-)663
1460 y(ories:)i(A)e(mo)r(dular)g(recongurable)i(arc)n(hitecture)f
(\(2000\))561 1544 y(5.)43 b(W)-6 b(aingold,)37 b(E.,)h(et)e(al.:)69
b(Baring)38 b(it)e(all)i(to)f(Soft)n(w)n(are:)h(The)f(Ra)n(w)g(Mac)n
(hine.)68 b(MIT-LCS)663 1635 y(T)-6 b(ec)n(hnical)26
b(Rep)r(ort)f(709,)j(Cam)n(bridge,)d(MA)h(\(1997\))561
1719 y(6.)43 b(Sank)l(aralingam,)23 b(K.,)g(Nagara)t(jan,)i(R.,)d(Kec)n
(kler,)h(S.,)g(Burger,)h(D.:)29 b(A)23 b(T)-6 b(ec)n(hnology-Scalable)
663 1810 y(Arc)n(hitecture)25 b(for)h(F)-6 b(ast)26 b(Clo)r(c)n(ks)h
(and)e(High)g(ILP.)35 b(UT)25 b(Austin)g(T)-6 b(ec)n(h)26
b(Rep)r(ort)f(01-02)i(\(2001\))561 1894 y(7.)43 b(Kohler,)24
b(E.,)g(Morris,)h(R.,)f(Chen,)f(B.,)i(Jannotti,)f(J.,)h(Kaasho)r(ek,)f
(M.F.:)32 b(The)24 b(clic)n(k)f(mo)r(dular)663 1985 y(router.)34
b(A)n(CM)26 b(T)-6 b(rans.)26 b(on)g(Computer)f(Systems)f
Fl(18)i Fo(\(2000\))h(263{297)561 2069 y(8.)43 b(T)-6
b(ennenhouse,)24 b(D.,)h(Bose,)h(V.:)33 b(The)25 b(Sp)r(ectrumW)-6
b(are)22 b(Approac)n(h)i(to)h(Wireless)h(Signal)g(Pro-)663
2160 y(cessing.)35 b(Wireless)27 b(Net)n(w)n(orks)f(\(1999\))561
2244 y(9.)43 b(Bose,)20 b(V.,)f(Ismert,)f(M.,)i(W)-6
b(elb)r(orn,)19 b(M.,)h(Guttag,)f(J.:)24 b(Virtual)19
b(radios.)24 b(IEEE/JSA)n(C,)c(Sp)r(ecial)663 2335 y(Issue)25
b(on)h(Soft)n(w)n(are)h(Radios)f(\(April)f(1999\))523
2419 y(10.)43 b(B.)26 b(V)-6 b(olume)24 b(and)i(B.)g(July:)34
b(Blueto)r(oth)27 b(Sp)r(ec.)e(V)-6 b(ol.)26 b(1.)35
b(Blueto)r(oth)27 b(Consortium)e(\(1999\))523 2503 y(11.)43
b(Mouly)-6 b(,)25 b(M.,)h(P)n(autet,)f(M.:)34 b(The)25
b(GSM)g(System)f(for)h(Mobile)h(Comm)n(unications.)33
b(Cell&Sys,)663 2594 y(P)n(alaiseau,)28 b(F)-6 b(rance)25
b(\(1992\))523 2678 y(12.)43 b(EIA/TIA:)34 b(Mobile)27
b(station-land)f(station)g(compatibilit)n(y)f(sp)r(ec.)35
b(T)-6 b(ec)n(h.)26 b(Rep.)f(553)i(\(1989\))523 2761
y(13.)43 b(Microsoft)28 b(Corp)r(oration:)36 b(Microsoft)28
b(directsho)n(w.)35 b(Online)25 b(Do)r(cumen)n(tation)g(\(2001\))523
2845 y(14.)43 b(RealNet)n(w)n(orks:)35 b(Soft)n(w)n(are)26
b(Dev)n(elop)r(er's)h(Kit.)34 b(Online)25 b(Do)r(cumen)n(tation)g
(\(2001\))523 2929 y(15.)43 b(Lebak,)29 b(J.:)47 b(P)n(olymorphous)29
b(Computing)g(Arc)n(hitecture)g(\(PCA\))g(Example)g(Applications)663
3020 y(and)c(Description.)35 b(External)26 b(Rep)r(ort,)f(MIT)i
(Lincoln)f(Lab)r(oratory)g(\(August)f(2001\))523 3104
y(16.)43 b(Gosling,)27 b(Jo)n(y)-6 b(,)26 b(Steele:)35
b(The)26 b(Ja)n(v)l(a)g(Language)g(Sp)r(eci\014cation.)35
b(Addison)25 b(W)-6 b(esley)26 b(\(1997\))523 3187 y(17.)43
b(Thies,)23 b(B.,)g(Karczmarek,)f(M.,)h(Amarasinghe,)g(S.:)28
b(StreamIt:)22 b(A)f(Language)i(for)g(Streaming)663 3279
y(Applications.)k(MIT-LCS)22 b(T)-6 b(ec)n(hnical)21
b(Memo)g(TM-620,)i(Cam)n(bridge,)f(MA)f(\(August,)f(2001\))523
3362 y(18.)43 b(Thies,)18 b(W.,)g(Karczmarek,)f(M.,)h(Gordon,)g(M.,)g
(Maze,)g(D.,)g(W)-6 b(ong,)17 b(J.,)h(Ho\013mann,)e(H.,)i(Bro)n(wn,)663
3454 y(M.,)k(Amarasinghe,)f(S.:)27 b(StreamIt:)20 b(A)h(Compiler)g(for)
h(Streaming)f(Applications.)28 b(MIT-LCS)663 3545 y(T)-6
b(ec)n(hnical)26 b(Memo)g(TM-622,)h(Cam)n(bridge,)f(MA)g(\(Decem)n(b)r
(er,)e(2001\))523 3628 y(19.)43 b(Cormen,)34 b(T.H.,)h(Leiserson,)h
(C.E.,)g(Riv)n(est,)f(R.L.:)60 b(In)n(tro)r(duction)34
b(to)g(Algorithms.)61 b(The)663 3720 y(MIT)38 b(Electrical)h
(Engineering)g(and)e(Computer)g(Science)g(Series.)i(MIT)f(Press/McGra)n
(w)663 3811 y(Hill)26 b(\(1990\))523 3895 y(20.)43 b(Vincen)n(t)e(Ga)n
(y-P)n(ara,)h(Thomas)g(Graf,)i(A.G.L.,)e(W)-6 b(ais,)43
b(E.:)83 b(Kopi)42 b(Reference)g(man)n(ual.)663 3986
y(h)n(ttp://www.dms.at/k)n(opi/do)r(cs/k)n(opi.h)n(tml)27
b(\(2001\))523 4070 y(21.)43 b(Halb)n(w)n(ac)n(hs,)33
b(N.,)f(Caspi,)i(P)-6 b(.,)33 b(Ra)n(ymond,)d(P)-6 b(.,)33
b(Pilaud,)g(D.:)54 b(The)33 b(sync)n(hronous)f(data-\015o)n(w)663
4161 y(programming)25 b(language)i(LUSTRE.)33 b(Pro)r(ceedings)28
b(of)e(the)f(IEEE)i Fl(79)f Fo(\(1991\))g(1305{1320)523
4245 y(22.)43 b(Berry)-6 b(,)19 b(G.,)i(Gon)n(thier,)e(G.:)25
b(The)20 b(Esterel)h(Sync)n(hronous)d(Programming)h(Language:)i
(Design,)663 4336 y(Seman)n(tics,)j(Implemen)n(tation.)30
b(Science)24 b(of)i(Computer)d(Programming)i Fl(19)g
Fo(\(1992\))h(87{152)523 4420 y(23.)43 b(Lee,)27 b(E.A.:)37
b(Ov)n(erview)26 b(of)h(the)f(Ptolem)n(y)g(Pro)t(ject.)38
b(UCB/ERL)27 b(T)-6 b(ec)n(hnical)27 b(Memorandum)663
4511 y(UCB/ERL)f(M01/11,)i(Dept.)d(EECS,)i(Univ)n(ersit)n(y)e(of)h
(California,)j(Berk)n(eley)-6 b(,)26 b(CA)f(\(2001\))523
4595 y(24.)43 b(Bhattac)n(haryy)n(a,)29 b(S.S.,)f(Murth)n(y)-6
b(,)28 b(P)-6 b(.K.,)29 b(Lee,)g(E.A.:)44 b(Soft)n(w)n(are)30
b(Syn)n(thesis)e(from)g(Data\015o)n(w)663 4686 y(Graphs.)34
b(Klu)n(w)n(er)26 b(Academic)f(Publishers)h(\(1996\))h(189)g(pages.)523
4770 y(25.)43 b(CCITT)34 b(Recommendation)c(Z.100:)56
b(Sp)r(eci\014cation)33 b(and)f(Description)h(Language.)56
b(ITU,)663 4861 y(Genev)l(a)25 b(\(1992\))p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
