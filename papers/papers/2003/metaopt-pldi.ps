%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: main.dvi
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica CMSY9 Times-Bold CMR9 CMBX9
%%+ Times-Roman Times-Italic CMTI9 CMMI9 CMMI8 CMR8 CMR6 CMR5 CMBX8 CMR7
%%+ CMMI7 CMSY7 CMBXTI10 CMCSC10 CMSY5 CMTT9 CMMI6 CMSY6 CMTT8 CMBX7
%%+ CMITT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P cmz -t letter main.dvi -o p103-stephenson.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.04.26:1144
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "22 June 1996",
%   filename = "8r.enc",
%   email = "kb@@mail.tug.org",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "119     662    4424",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMITT10
%!PS-AdobeFont-1.1: CMITT10 1.0
%%CreationDate: 1991 Aug 18 17:48:50

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMITT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch true def
end readonly def
/FontName /CMITT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{11 -233 669 696}readonly def
/UniqueXX 5000779 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cdbafa8977dcfa841fdff9afd3a7a7c7905c219
28506d4d50a72fd1db1b54a855775831bec099a567f3f795b812ed5e145213c6
d5d27f9ec6709245e9e4068a6606742aef616dfcfc9e0b9af7e687fdcda43c51
81a08d6ab72b86fb38756fec992191c1b3fd151c417125d4777f0bd0c57d2959
0db35f1e9e27945498a3f7dd60bc54d72bc8a573457c16796914029dc282aaea
fdaa4b1439f4125add4b7399be6fc68e4d5a766cbe5ddd161180d4e1ee3c95d8
64e79fd0c65b8f459336e99827454d662768df3e6c1c3647b00b70b5f96a3944
b7a197be0f58a1e995a77221bd374a40159d81c7196c94e8af7c3392255ee6dd
0663e05998ff917a62d635ca45e952252342507d6b4d28833c7809c1b88400ea
50c652efc339a66355c8017651fd24d9a5cc51ecb55bbe64ea523b094332c832
52f7b426909808ae113c1e5601b0e081fa8e7777ab93b42207100f43abbb9ce4
ebbf51e584299a06fbea62b8ad3632ff0f281ebf9503ba6b8ae4f3b57f650388
df63eea9e1ef1e08f7a2c6e4f5cae2c4dc7b42726a6ea6b7592e9355a01fe517
12264a713ba83c057cb5f663045791d4c7598b246cd3b8466a1130249568e95d
ee2c0b4abfabc8e362b78d9fdc025fc19cdf1887997d32fd1487cf2bf0ccc966
319e3e3cf4add90ab51f0c3e918a00e5726ee346ae410ec3ce90404580c47572
35b3ec4f5ddf23dd43224d90d8dc932ec7f0acfbbcdaf80f261482ea4a2a2644
129c27fb4b44ba8c78d23273122cbf1ca49ae879ddeb6991b87ce2ff25c655e6
b5ad950028de17f6628f9eec6842b79f69c84b6c55ae423714e622eb4e47f9fb
c30a71808d70b89cc1a9b60f0ef21ad074a63d38344446947fda8f2fa98b7ec5
6447e0b540d7d0b20e476da6f61c399f1fe5aad0c271a4e874a04fdc1a78cea9
475bb266f6c80e6666ff232aace56d1ff43fa22f0f3cc95c16c7df0a50b996ce
93725d7b51b22ec54a0c644a43ca3c6ef8dc4f48f300a3b5560d5108bc17ecd1
26fa45463a8388bf86e4e29940e21c2a3fa420fea12377477485f7f7acc50652
4e5f6f1ba57d61a15d5719e71680a6c2ac7d8d6ac7cd7619fe4d274e61e37d68
9e32ed6e9058c1232109789c7161a4625da6e9c4e7967be701edb52cfa3cbca2
4461428249ca6f3c1b8844ceb793f1aafa4a20c4089fc174bf22155a5dbe8d34
b8394615288baa330586264d28b0999b00b29e376aa304eac585451d0e03aa4a
052f17bb78cdc53d30a67e72e8d163224e0c23ffa84681b2e7a4d9f3a454e4b7
95699d6ac2129d3dc8cfdb0a37a92079f54fc627f9a256858951f87a781dab6a
b5f59dc3c3a5b21084c6cf06859e2e6bea9b0f3f455849dd41b1ed6fb3991960
efaf850558e5bd1634555ba03b3e19183f667539b284d8342be32c9b639095ca
bc8687db4e63573577118393a50e4389a1de7f30fa53c84c49884c4c009aac73
750ec3e33e275b0ce15f7fbd31762331bca26b5d33a85fc86b01b67d0173f1c2
aa99726da62f91488c4de7da13cf3396681bd7c0e4625184498fe2b0a976ffaf
2e4504f5a9159ebc85b0800c03d7dc05c36162960e592db50b0164e3ea4ec87d
e0acbc8ceb88ac6af62753ea65dbcd027202b2c14a91af274744dd4455a1be45
c6972c3e97b6b433dc11b618dfca6cd3d6b89695aa5081da046be27edda2cb7a
31c1048e24c1a4bf2cffa651e9db4ec0f80b7de4051ed404f4be274fc9b1c7f3
ce368b660e0f38b8aa4efb5256405b941e5958d4e61c107172a19933d0ef7491
e5ccefcab583a79306545dec60ad854f833b4bec6e3d9780addbe4f674b4e4ab
e92eb00ad5489773c50b7f87f151f15e845ecaeecad648b1ebb57fe559236c2a
c1945d5b3e1c62b1bb2e1c17b757c7b244efb7d91b48f211ddb16e1659efce1e
0592dffab8172159bd05eedccc17211a7c29230304ae0e8d9f0575f3537ac67c
232d88e78238fdcd2531df4847f4724d043dc07fa3dc53dffb49bbe5f9eba584
d0f46c6966a3382f7ab784179169ae95a44b99bd25fe1121f683f5a87c36e9a6
c2cd474dd2e763a3bbbb79f41a65647f8d9dec7c59361f0cad08564cab875aac
3c7c847c62ddebe1d9b98321e42e96e94127915384b287d7c5158feeb0f48725
45157211fd074a02fb2b2c461e5b34bf12ffca130cc028acbe016dbcf4731fdb
e2a40855ffcae4e2dd27b08c93ab4c71b515cb33e8f7da403656e9237cc23eef
f46e4051522adf9ba4c539f513d9bbd8ca90323f3deaa016308c0cf281e84ce1
bfafd47abf17261cf77933dedfb435b5ad1ef71efefcd090e6101c66856a948e
7e7a12f7fdf3dff6e0ca589053abc5e6e2e616e06132e195643bbe6c2c147692
d6997dd97a089d249b5b66500c189429844a5290f063447ee26a27d4cdef2d61
2492e859f2a6e466e5534eb809a9577b6c4549920ffadd4bb9d6d7931c6827f0
514fc16351a534ef6e41d476a18fb94fa28cdaf1256a2e56a147b7d591c54717
8f17634f18fe5d50e3d3d80c631c9d98cf21ff397528798674d7c904d1e36d65
f98328b24211e88e9a61913057e7ccfbd1ad3d4c98d88d6f19e6166f4a6b138e
c2caee2d22359f7a90f743e776fe5570501982f562658bdc0157f6a4ef5b9c9e
f46fbed3b427170a7fa0e7c958857a08f3ff67dfda3365160af54f067642185f
f664b1611d2245a7d71ded57e55dab8ab294dfa8b2a53b79915a093ccbb06085
4b53f1c5b4d86b96c9a9e9657f45e6ba789a11ee122ed1ce4f9bfb29a12bb0c8
350e50702826a8f432a41a0737bd8fec7dbbbb745d763759804bd2c9a9cd0752
7398539cece22797917e990d42f470be495ad199710fa8a35c9a2a177bcc632c
a8c5e7b9368e9fdc787ebe634a07331347fd347527627fa6a2be78931ebafff1
de2cce68a21a608f86e4f99d562b9975dea36e57492e323e238509464359ac02
acf9e450ea925c82ee3f9a2bcb7ac030a78e7454f48dff005945fbf4c94a1e08
91f72542d77de8749dd1fcd0c5ce535f24e67fb4a30dada65b0e8db6bee1075b
e3a9a3f67057060a9ba39f7c1aa2e04c6508bd2abaa924e77f9fc0e13c3ef935
bc76fef42b2c3b49922c3e1ba4ee1f8c669221ce169d4c01f866e4859a1ca04b
eb4c099ea0dd0820082e3b893ce98e21e8f7e2f4cc01309af120f3d9236b11eb
b0abe09a2dd38de98a9f5a97ab3335f79dada7550261190302fec45f386526c3
c688b26584a129c15645456224a38d80d2089d8ec78180beeb44f2943546be45
38f260d6ae395c5e3ff7501d9927660f0b424da47cbf181ae2626f20bcf086c4
a1b91b06d700af7923b3524d88ae54b4b15c4b5ba0c0ae803096a5a9df8b8d7e
3508cb719c84939e0b88923e10526d27cf3db15ddeb3bde4cc0fa8cc8f8dbcce
80e36c6d8cff221072e2b8139ca7f1fb9d66ed0f883006fe3ea41ff6b915946e
ff56fad997b17897eb74238e73fc1987714a07e165a788e22ba4c5fe738cb24a
aed5e6f191372c68d1b0607d4d2e0a38afc4499c4a7cb88f3e5b40e00d851e8c
60f92bc243fb36fe2e0788dd1713f3f6fc284b254274d0749806ee3f53f3f4eb
9981d60796a77893198af097778cfb04514af758fd7c54e86ea6044d9f916b6c
636b92a72235e8d53a0961560669545f6cee82ef1b74ebaa71bfe5843c5a1bd5
9567415dae742e5fe1fcdec2fb24c7ebf19b0cc2d901a23a002d319da969fc78
700ee6c8e4e55946423483b699457a527aaa52a5f6e22746abf962337bc0eba7
e95f5bf726f32f60648820fb7f200cbd0164d25055fce4fbc82cd9e6175d508f
9b343664d3e6bebe0e1af47ac018fae88e44fd0ec20ce554dde8239587782da1
979c1acecf6d5662aa1f341f1572efb8920993bba77ad52cc5943692d3121632
0503054b1edbab331b0d85ae1bc90108acddfb9073a131ffda6a0fa8a06c5129
0c9fd86d88e6b31121c647dbd8e68a95bb44f6a93d1d061cf33ae756ce746483
74a79bfafe6b6e545455e05f3ea1843ccef8477e265c3cd2ee2f911a483dd136
230119ead8e4dd1ee891a28cd64b89a73744378e12b3447163962a7728c3593d
9006f7eb37e51018b83f8a56e1eb583e390e0f023fa243780ed47f9541d8d208
4d1331056b6899b8b65f3ce6d7c713d4ec950d6bdd308ad49cc511b397ad9421
e31453151769b1c2d1b1cb8f79cc71bb29844b6be5b289d3fe1c1242149be556
45f99c0f7c42fa5ac73cb0cb4860e3d4d9b4f7509dd1b130c5c3f2f40e7a9231
d30fdfe80d9cd8fc95e3dff50d3a7dbe96b0f4d5e0e486f91a1ea9cbe1bcda43
019c613a1990d0dff4fd9c84cc2f62bdb4c27da605a660d501850a4b39aca3e4
ebcb97b6db85b1d8b714b79a670be2ff2890c47c40620ac835d4a4915a356b02
bb47363ab05ce3fc3989ae7d3fc2252d28fc1357337ba20b6781aa7e0ae3ead5
ce1dce7fd0ecf0ce76df192686601c814d891958a242cd1a1b0edfa6df12939d
dd12bb9e557c79704538aee83cf8215720c6f34c5cbb6193dd4c0aaca4d2c499
969cd66bf97ff918f97142d7eb4f74e43c939893f515ac040ad445d56cdce01f
60e88e134054cd9cb7662f627e50b274734f59c4baf1df47000ed35e0a569646
d1a6df8cde4bca2a4762338ff58e8f03d229810375e3dd2e41db13750bc87ec8
666906438dfcfffcf06fce66d5dafcb20f09387e03856bead1926d754738c67c
5d8e003deaa0162310581c10c421180c1d22bf2ce160eceb2dafee14a6590703
d323d6aabb8f7759578c0b5c3ee69a44ccd68fe5632bb83a893680400e37d14f
abbe549cbed868706015c4802228cfcdb0506d0845c130c9672c26460b0a6a03
b010ff7b946d911a4958146f5b79fdfc004a0ca3d09cdfc620fdc1a63787c3f6
5ba0e89eda65c711596ad7a0d16ac395ac32f1cc599f6085d56f4c5190d697d6
000054acdf12b08e669e7d7ea592801a65d74ce02e22454629d32d3bf39bcd95
7f5c9a950f8dbb3e77d41d4b0a5b9442e6b840a1d9031a735e5667d73269c2d4
3dc0d8fadcf6cd3a8d5a473e52b8ed97912a5c2661333ea47171f32be0ff11b3
4a12552802e376ef0f95d5dc907da64126afcda02aa6c6369de8a65420ae06ba
abf08c232b826b028c964c6a07c7cea7141fece93b59cb78570b7089022ed28c
d296ba685278ae92e9d81f259c0f09ae7b212bc27e0db56626067a8a129276e0
e2f6eeaa0f17495949e67b8185cb951b7266ca1f35f75b33acff21df8072604b
ae5a241c8dfbc5dbec976be7a684c56485273209787670f6dc39209d3acfe508
5a105e18a77613bf2c4816257ea35f5b8f99a07524d2aa16a9771101559f3f75
684df86be7cdc809b98b38fe4d33b8247089363926f2a00a56b22cf2e2f12501
6846c528a43b020a03cce5051135a7ecc8b3e111aa4570a45bf2684212abe2c0
fb4de262f781ebd5cec9b92476acabf3982c5d586ba999221ebca9ae72bdd535
1588049dda1c90678466db9a5444ef401748daa50c73cc005e06d95e72e3345e
8a1c799f2d81cf55636b9b02ef7760e30471bda4351cc15f69d3f8d814cc79d9
c3ebc7a9ad1191115b299fc8ef17f6823ffaef123e9993b8f746142ea00c53e6
db0a9ff162fef16ebb05da6808616cdee6eaa9d477b59aa12163553cfb1eed71
cca9a1876a9225e1623d7ea9d0dc7050780352ef863f97893782f37621adc953
55662c7d1bd8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBXTI10
%!PS-AdobeFont-1.1: CMBXTI10 1.0
%%CreationDate: 1991 Aug 18 17:46:30

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBXTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMBXTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 122 /z put
readonly def
/FontBBox{-29 -250 1274 754}readonly def
/UniqueXX 5000771 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cdba9914cb8d6d773d679fcc3463e9bf514c07b
8a59bb54802bf5b9f4228c8b8b6a93f5cb6e4cecedf3ed4c1b45d436a79d0605
ab5ba5671bf4a19250d6097b2db5ed045a5181a2cd083529d1e0348cb7a4c964
d4a46a9860423c2128e8fea6c2fed3172ec3248fc938bfca9c203e46943b34ef
f353a65048a47a67163137679b203f5581d54158719e31d0d4d3fbec5baf44be
b9f177de2d803c9effa7bf891abd703e805ba31b109a3faa3fadb7d2b0b6715e
442535273facdac07195806f92e7899d681d2f9f66de160ac9ccca7351ed6971
90766a61f8d2a1bb13afe3d5e900f651607676a6e6367d816f1d6538500c770b
b745c4760aa539bfb55f5f6806589e21ff19c65a21565f38129f6f0b9de7f897
8760d49dc02564371632dd9b729080a0e673fac60ead57447c081dea03f3b073
d01b34013646e9de40b69f47559159070a4886f198b579a51a67eaebf428671c
e29a61a391b5dc2d72704c13052e66a665b556035dd0b369918bda248d700ade
79df005abadb022bb0ba2541ed90ce7f821362fd6070be5cd0da4ebcdb7454ba
b34a378a154dc0555993f32c0d0928dcfec6fd9cbeff662e5af2042a27af70f6
dcdcbf1dce427022f31e403c920fef3dbe1aa859e6de55842e1dd2c9a71b7ec6
d89b9ad85ec0cbefba3d3d06c065ba92cb4e1547d613b0b5393634f63d7f3033
3a9ac0d2025950bac24faa5b18b8a9d24f6410acc06dd15cd3158b74549477b7
b8b305d5ba7ebc2c09762cef0b881148a5dfe8252d600720db5930db5cbba6e2
1a7bbb9165268768a128bdd348260c43b36660fb31d933be8fabb1d5011983e8
a4b625abdd138a46d644f22023d2cac13c76dcae7ba20db90793477a3f2538b3
ca60f7f2e6f1e67b45c27d3f8f52735553c6cd802bed2d75fcb15efe5adbd995
00d16e7e67eb1d9dd773cba9f1ade8e9d6c36c7f9003e5b60abdeb45a0ce0ff4
b399965375696a61cb0c18a65876d35b2d5dbfbc9202df0af3e52299671a1b45
b8b8611edd8f8fe1023852e1134e6bb5a9d936ac26e2a590202a4646fa780ca9
d91c828b7bd9b8b3452faee6db275943f2bffafc8c9e2f21572e735e9a4a150b
5b84dc91d3ea388ac0a161d0215b4ead76611cbf02aaa9f3950a014e71a73679
d50167f80e250bacd8ae51ee1c24eee766f82752c3b381c179c18b9a704a315e
adac787955f17f52578d51ac6f80c3d07b3de9e69e0702f27f7949b995d7fd53
f0932db18d130aed6a6a1b739aca9e09ca82a4145d8922faa0bc44e5b93737b0
3a6952845db707af9b13ec8e77eafc9d84a098a0c8813cf46483de659c1a1a52
274e17fb98825655b3ce0ef8f46e9e2896c5b96133c986999ddad9072731717a
5e042cdc662cc7a0527582db3b07e123401fa75b7f5cd498d16be555dc294573
78a651711e41ea9e8f0eb1b80047b4384166938eca1d05d4d9c9f3807db9e961
406f34f670217b16926ef8e1cc214df2dcba6d5a5f6cdafafb0f897b8deba049
fd190d4e213fa9dce3745627d43e687f0832040ffebe0b98b7624a1da56f4de6
64aa2057e851a8852144ca1b696720d900a6656837a6b3419814356cab9beb83
4eaa380781a5f02d62b5e1b93186054149b79a3a1e36fa92ecf42b1998b6dfa0
c7b139f3e81bf61d7cdbaed3d39e1febf5daaa1270bc5d1281f30559bbcc7d9c
d4a863018382d1e720fe15d16c3bc0ff2f18af4ceab329aa801a5b35932d2e7a
417ac8d06bfa98b3599b4fed1f66575ea90942f2a880f99a5232862ef2ed2a0b
ac277d7c6f56952396c41569edaab73b2803935d22e7aff9822a846546bae5e0
44e9c9ec4edddcccedf392e6f82be606f70af520e10db6432fbfd67daea00bb3
7bb8f1c9b8d8ff978c83aca10e1c27936bc3c5824cfef6d070e85e8f8e7ff095
a5ec274d91c6909e9f6a799838cbc9277edfd6510595a76ddfbea74075792b27
db6b4e1823e0af3214796c8779afd8cf310d50bccdc54df9508461896203219b
d7587c746198928f10a85790716017797bcd0656362c15d24a869c18e6f4c8fe
3d89145221be1084017da91c2568f1a8e35d017bee10a049fa5f0f0c8cc36b71
24642997e0b6d915fda0e088c76f33b9465d51d2ac75ab0e390711d1957f95a6
55f1477d311e878578be9d35ee0a3ced27fe8b031bf294093778eca86ddc3663
01ad40c172e9048a86cc53fca30eb43f607cd85118a72545045a18e6f138abb9
1dde9b9fe972afe3f9f2ec2eaf4f28ebe9b4a49c06b6fc281ef8bdc75c5e3c43
f59cb1717be5adfcf2d1e0afc3a789f1da602481554cd654b8ad1d769e80c9b2
a58a9ba576e95e03dbc31c5494069290e0fb507cb4d4fd1519252ebaef770652
66f9304158c2bb5edfdef17f815c63e87e739f5634e531ca17bfeb113078bf34
f59441b94f3f6834562c224fee2d1e0f6ac872cd4295eaa4b3012b68b69b7337
1b4715b49e68ec48e291fd580c15e1cc2d11fb6acc758f25dcf2e65910795188
5711c00e112c009763e7fd42f8771006b45cf7efb99f6cc264cf190570fdfaeb
e29ccc3f98211dbcc97bb5a70a6df69fb8682bf86322f854ca5cb41e56ebeb0d
f363541a38957a8d4c4dec789bea3668b6c9ad5a42e375c9eeb5619bb8de3572
ad064e69c38fc241ba964b0e8a77b07d5c343e66d20e53153ce13401f77156cf
39d00af511f18bf2395230655a2b23a0bfcf09af6ff83c64b0d6853e0dac0d6d
eb0d8b677bb24ffaa7ac155a6812f9a03b1a2565f3dd832d132f76d34cb4dbd0
0277740f5f47981c0fdffc326acca383748e617fb8e1c103b07f1085b4f30c70
9af2364fcd2de86aed0934c65f3fe11658edb1cba088d3f675ede9bf9af1ef74
05cd2a2764c38055338c8688cda6afea92e34469f6e94a90f6a3ff2e7e87f0d1
8877e18ea1b7c5ab5ca7c33115ae5e84cf0058af904cd9cf8a2661d1ec838a62
877759989749fcde42c9ce5b275fcd14c46844573d631c715eb0f222245d7e63
b373499032c2e11ea3a16fc858828f39655b7d345908a6cdbdb7caa56b479c01
f68098635b5444fc2f8053f71b18baacf592a3c589bc53fd5afadee5f9db043f
ece6e667e251350232dc581c7d4bdf1c149e6378b81bda84437515a38f051c30
51f8acc54c5be289b5f94c796920ee12495a47723ea61ffa74f3f14b3b802a4e
07153c605cb0830c6ff36c150cef63b7e10a21d3c382da965a7feb89c90f505c
2a31f2c27929a61a078f75f4af09ca07b2cbc7910790c100cfcc09b9b3cb7294
61dcdaa2df38944018400dbebc657a77f5b568c46f4da630b2b2b7978e0279af
83cd4b725e28ec8b4758555d1b0f4bf025484353c11ccc4bd04781feac30063c
d5b435b0b533364cd2014c9a3ccd51e6b90d7ea86d31767c31fbe42008308375
3920293b53c93312ef8466cc0b5f3665447cd2272aa919c39a640b3d87a33bf4
d6a6132932ccbb927203f2ed25738a7bc50199af3f8799f5796dae3fcaba20e5
e69061ffb77b01f407abf96e59219cb0be4b09f9c426be9d8d42616bfc0b8bc7
209871520f4eca77fa59414e598e8edd1f441419021c8404dcf3041476b3ae8c
c4ffb3f3ec813d4f058906e8655b3dfaa2e22f2940593424437f2c7d45fe3565
481fe8d3bc84ec96115d1f834e626b9cd01e2d87bff721172faa841dd60c0b8c
7c8af2af41e736f694309506c5812bb3f83d2ad662d2235e33d2aa7789dea6d3
a4b4e8c60d0bb985964c635275f66a79a1d15b451fbad1fec9993440e6ef3911
60974d55c0ad5cfc94f9ad23dd48cf9bd56ee55e07c3b8d526f316754559fdaa
ffc324cbc897831e2ef0753aaa7063740bdb900cf133ef3973df3aacba21bfd9
1b4f99d805644c4edc41a099c311796e7931007a73fedea35169f647ec264062
eb5d2e1934d5bcab34bd6559048246ce1a0c0909c8f4c32cb0fd1cb0bbb03fbb
66eb67325345b28e7e5b7c9bb0edc895a6ab6526609e1615a9e3d301fdd93cb4
967fd57003c3bc505eab0f96296a316827926fd4e29c64eeb3e4539417d06552
c2a5a41782423966ca2fd7bbfc79b2a88636268f502d59c15ccfe560e86497b0
500ac57f0d9cef7e4cfb33f74046affeee9812d6ac6c620bfe18769e9a6afaf9
78cd78bdeb6ed6314f7111b29e7a30e0a2ca7585bea57558e1ec50718af6789f
ffa27626f6eeaf14a10a6acbde180e5b2581b67fe1a1da7e471d8872ea74df32
831bed1a7a1a85488815d052288b83b0b6a78de28571da25eda9fe1968d8c356
106be034c8b66f6393aa45c014d5ec367996f26a6b23b2dd716b5b871f2fe2b5
0d6abdb02ec9f19e0cc89ee29cf63a521e20e0a9a06058285355974fa1559d7b
a8752ead456f36ddcb32d2302024712cd22f606854cbabda5295b8b45d41cc07
caa74fcf1f37c8723b56c92a93f6712bceddb829a587403abfee6924d498330c
180c9a68a4bc23b5c8302f0aa87ce8fd372bc428a2faede384d270f1939551de
a079fb8105b3b363ea52cd7398c4f22956d8dd1c6d93cd5e12c6743704cf8e10
1e1197bb49f28ca7ff2c698a07ec70da9787e534d33bfd1fab5bb6a1b69b8d61
c56e93a4bb5ce2fb61fee8f19190b664b6a43cd6552cb417ad1b3eeaee67a6c7
814a44fcf124daf7cba752a12535c50d136ef986c925ae57d57dd39ebe4ff34b
ea28cd9225b0af3ed27b6bc580ae8a1959110c9c7bf37f83303458dd73690639
d4462401c9f5dd456b6c24b2d53067b7dc4f582ae2d0b0c61b2ceb7267b17d9d
cc5b1e43ab9530943e881148690ff9001268ee745a5b04d03c037dfb1c6d27fc
0c7e0175efd6a9fd944890b3fcc5609773cf2796901eda1b2a1b2d69604d8773
4b3b645498d58fd4c5c0f7b96f032546c6c2e5a42e6b6feb3d412bc0bb6637a1
a0d0e8435f549a8cc06b265be1371d69ba64c05b0bb784e8e28488d13d050f80
1c1c101d2713e2411401ee5aba917c95c95bb36b20e0348e514b32a07ca9a11b
c41b90d672e69fcace47fed728cab881e090add86fe6640d028ab0d122e7a966
2f8244fa9f2226cc7794a13c53d031ca7be306abcef8b82d1e4fe45b0a96ec0a
81007764a924cc59eaa101fba6f9f13001823ef0484038a7a4f39d232173882c
bcf95d66b44cb27290d1c38307966c36aa2c967d42f8fb75d9dbd4dbc23f2ac2
a380bdca13f97752c16a5a46837b0dcdf238e5aeaac4628258e52de92bcb6388
ba67e635333adb955ccd88032adaa6b31ac7eef1b69fde2dd6e9c3e7304a4928
51778c79e36547a5556a0e64da69731f5cf9fc1120c96f32d6dfdc67541f4943
98ad7852499378e6447d295e72e0ce55d2d7c869fe6933ab4c48e818815f0e58
1369437a27db2345f19d1ad8caa8493a789e27c33010891170dfa3bba9f05a16
a8815df6e81ce99248f18e8da888767842c8a2f82bb99fe9c9e240c203060a0c
45b875c2b3b01b5fb60bb8fd2ad9ecd2a8c2788abdc5c8d15ca3937f162c3810
259cb6f59cb48476fe19a6998c6b83667909054d325a47a9aed4b79a9046a863
d3aa0725f81121e7b5af8593148273992b53ebc933d02f1a7980736505afd4ea
4c764bc2c5ce2dc74abdd374c753fe7a8b3ff607fc2edaa88379041eb9555eae
574bb7f5e017dce2cf325007dbe29d7a8eae3dced11a1d9fe4d366a9de4429ae
7669f7ec84b4ab06fb66e3ec35fa74fe3e11e44b1fd4ca55608211a7627d8fe7
1b82212e48f4246dee124ab15706044d1263f1b15846bcba23245a7caec8f9e6
99feb14078be2b0e1ccefb7d7aace5a4d1473105ef42d38ace679c4444230f6f
d7943b1d9c34a94c65f169801b73c71fc733455b6112c62fcebdd6ad509c0c11
e7e5c7b5ec6cf970f0c5ea3da6e10782353877149db2b8b79f985e57283dbbb8
aab54a13ee9065c8642a9c48d28a959e94be4a4d68f0c101d7d7781f2ed2be09
506ce6b5addcf3f0b776672ad81cad178e411d30521368ddefbbf49b0e2ebd8e
f7daed1ae738fcc140b417bdacb64ea659425fb77a80bf47aac8b4a71e22be38
c523e8de27168b75d281ba91faf074cffd4b1ebee3fae9252c4eaa56ed31439e
0d4e05ac01397a50cbc8d7d6c78ff602436d3d7ab35e81bc1634fc2811b3626c
17391d73d8460f546f4db48741c1e8d2c6a380e55294b167900b8b23b790962c
1b3ba2e715ab2a25736f685cefeeec53bc7fde3693dcc2cdc2cf600f9375e7c4
a878b80221512004ac29b8db9b860a24839e1f20f3caba5cb13ebde24ad2cc2d
d7b28d7f1bda5e5905345a8e11b6b78dc33252b033847061387803db86e1e5cf
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX7
%!PS-AdobeFont-1.1: CMBX7 1.0
%%CreationDate: 1991 Aug 20 16:35:49

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{-55 -250 1289 751}readonly def
/UniqueXX 5000765 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b1ee2d9de5f5346241e154574f14a4532b35968596ef7a20
102dad629475cf5d654585d4caac68ba7b2ff21b103a98af3e9ec01fae180804
26b73d62e93f0328ce7775e81898de587dd0fbcfe98934a58afb1aa4dd8c6eec
d19373ddd360a5e85cdd4b752b2f2baa13b48a282214a05632d28e915ec90824
21ff8f2166e940c7122c583f235bfd098f8aac0f1dbb9a625b02bd889869664e
f1856608899ba509d6eb8ece665afc34a459dd5b54dc7711f6f04a288214efe4
53095e239bf19cd36b7028d46c07a2b8c17d452d8563ea88a3bc5e5ea29a9ea9
a7e38481679f893f9e6a983ccb5512bed4aca5888793526701796b3fcac0fb62
f69c66d0688eede0fefd590fbce954b2cdd2abc9017390077a2cf6f6fa7d0db2
dcb4b0963e3dfbf02be1dca9cad104f3d29495d19337fbffdd745e1729e7c0a6
41fdd3bf42c30d715670b3ade44f481d795071f1b24f4f03dff59d91bf9d678b
4560da27ad826c9fc8f8cd9a333248cb2007b4ac0a9e2d5c044774124f1ee23c
0e3e005a4a16e1d0cba15797fc42fa75cb45b24fcf8a8cf41de8e06388b5f995
04454646c3246074f495564cfc8ad75a949cc477ecf03f0511b90b6a7456b730
cf09773b5544f6ec17a9a179714e47e2eb1142d8005bd228affaa375eed7fb1b
075b3023be6386f3805aee05b47c7f370e8ad410110429d2ee8801d0d2da9e68
a453a323c147716ca588fbf563175e5f47d1086a21b04102cba338a3580225ce
00dfb1784fbcad0fcd11434afcc2ec13337ee24775c2952be02e20572aaab17f
d21287775e4a4d9fbf877a487b252b5c880463541489f5578c7472d39fc27320
2e4ec86f9935ab2ded14ab9ea36770d79a1a72161102412bc57d706830aedcb9
afeb1579a6ea3bc0a7cad48e1badeaf33b358551ee3d3ccc7590ec9c0da32938
473281ef69828ea546481f95e415622800753d1adff1c9ce13c23756377a240a
5f13aef5c6c8ba4e448997e9dea1aa0bf5810e6c053f6e18bc45aa57f7e4c26f
fab45fe0860cab854b46791ea902c6810079416318db664dcbd3ce95995a4c1f
4514c2e44438d8f1d00456297ab9daa738e399a70e59e538485926a26d5109b3
aa65654709781c9d75304f2bf4d7729bb388c5ca2bf58411ffef41d3d76ba0a4
a8190c548c255a98f5904a6af67392c1e45a48bf3189e32fc67af172b1f43d94
e098f053b74c882e540c1d887f0f0ac5499e96f56177967e3301037ec79c6605
e03c2dfef066b5b13f3144976c996c54dfb7d53854c617e1056c1e239b8e7ebe
84a815859ede14ebcfb990d65e055d475e2880875cdebc24bbf56ac071aca8f1
927161cc4ece0f34aa22cedf34e381205d0010a1ce23d6868014d5431b0e42a9
c24d19c6e6062e25ce32d29dfcac5df414fef1a2672f31fd68528332ccfc6a48
71dccf341070036b9ef9a701cad33c25b6f87ef90486ecb3c2b16e14b34d3eeb
80e57c457a3d23234983a241acdf1da5e386b0baba1359878ceea4e945c3dd36
8969901d5cb15cd76f68f69cf91ccfe89a37c3e03215648e1a4d3db0301716e5
7d7e1dc1f17afeb0c145668ba8f0a408b7879cf06ef2a4991ae319b6612339fb
a0f903615c7a72a7854fec04ebc84959923caa34af091a2d9f5b99140b5991ad
0b4702fb96b765e6d3cabd088e22a24fa12f7dbb7a9fc3c1a6b449d36c0663b4
ebe8f66f29022718d2d208bd3c14b24b2f67bc9aebb405834b3c7bf2173e1580
1822617b96ff20d53e93bf9ae36bd04ab0dbcd8c5f7a05c4acfe0fc4c3610979
8418f78bd57041dd8accfcc805aa67bb67f273329a18bca405b578da80f93a7f
89e8654319ea789790b365ca5aa4525cd8bb60947755277948df8374b90c0734
f068b89332645730312e7e3fd24f64c4b2bb42e828a38a2fd39f03300050f79b
8c4c1b6ccb1cfe9eb599d08dd8e77fd1a2ee610136367e18f38eac7d5d4a181a
00ef326df169d424e5446dbe8502327dab54dd7b78ebb58173338b1be653973f
ce4d48250eae3705a370d53f074d6932e3427a935decd8f7591881d2687621b0
2719972775b71608c4ef9ffe0289b5871bdbc2cfb41238e57e80d95357f4c7a6
5a83e9dae537ec82c9b022a88ce44e93f84dd3b8c7c031ed467a97dd6812edc4
22581993d157c433418c1681414cc0e0ba377f6650a095757f2de0cb3d8ae68e
960d5db19e499ed8b436e4d5fe1c747eec12b8b2935525572cdbd197edb4fe6a
4e69857f8f28092dd0880f761453a30c67f3fb7c289df51964eeede3a87bbcb5
3d52042bcd08c250694b00309bf717f6aa0a7087556903253fa2e9b9ddd29357
f2c6d043915fc96b5807d1171a7fd39ed77aa64bd08a3a007811cfb49f673544
410dfc682aaa34c4339462b8702fe95429348b3f3fadd8459805f41b43d67f25
f212aef773b9b90da5c1a350e125276bd55dc854dbe319455e934baacc6e1dba
2de08e56476087864b097b0c93a9918fb311d9c75a9cffa0a3976b5a692bbf45
251f7359a1ac75c076cf4a552a0449185df144473e62ca98adf44be7786aeed6
0ee54e47c2722693ecda2cfee4ea08c2f388718f858db7aef5418cddb9b5f03e
f71db8f256fa5203682ccee57e79e038ce33c2f9366b1427bc19e6d9715d57c0
8cd8edbbf71723a2fb76b464b7849c6bd165b9a788ee64fa9a2d97818b89297c
da9310e4e0be6f3e12f3459f11e37ab2df16e5ca83796caad163c4cba7bff9cb
aa71f2d9902d7c615f403049c665047b5ea71b7f3adade8d9f1b5df1dcaecef0
2f6b4c45726cc4b10f04c164131e4d1b4360fe0ccb0d72f15c79c1e709d24df4
3c6a2607c1330f5e6e54917adf037ae22c2cc5d06f4a5e2c4301cde2cbc596c0
d3b375b41ac829706dadd83cbdb448c67ef1d333aeebfc143848dc8711716627
b5bebb13c8b6b8e0c590e8612b512e64013ce732131b3614dfbe0e39f0fef11c
9835e0172e8af0cca19c93fc993485ba14bf0d33963dc9bd562ed63dfb22cc04
bc8a5c05c11d9d7adc49b7cebdf2ed1247b29d6617efed58180eaae83ea98583
eef94fba19dd8129facfb43a3b62ff2b61811f40e41a074fb5faf5a8b789b2c3
79d9c1d88a34df985643c38b3236666d9cd3dfcb04d69798d0364b3cdd20ba69
696f67ac612c29c9a68614e9d814563656052146a8cfc52b08d923f61cc3c66b
9c5aae349b77e22026e77e9b5cfe9c44ad79ccbd845aa5632019f97f5abf026e
c92440cf173e0ec436c0446c7db7facb57925d2800d31d69ea454ce8a9e6e474
cc9bf42e20cc604999a4abebe72679be0c2d179a5bc5dbbffe547a399d7581d3
c185d6493461bfa9426709b6971b21b7df086f1cef9c49bb7d14b0dd5c7e3862
f677d062fc33ae1513bba521fb1091583ef5e610cee0f0f11ef71e21d99ebcf9
8fe11f812b8a0df839b73df5dc6f4df7b7a3103e4c6f228f77f11d1173e55dd8
057e70014034508ac7693a1e620e9adb97f59e6f56c728b9df9ccb3fd061623d
867bf558517cb7a8efe08196ec2300af302ed0ffcbf177a64f520d15e42ecacb
e31040ee6b8a7668d9e459eced8aced22cae7fa5a9969de693d4c72fa554c6da
80de308c0793cd146f5b60772d32aa7873ab6f26b624641f0214aacd395f5efc
af181965eb158386c6c9b06ef263008c578387dbdec22601a0ea38a94fb8e608
95ef6dc013feea2b2fba88d5d1c68f1310dcf7f72cc3dd52ef4f06ba511860e6
e4910135cac8ccbf42c38e1948574a86a0cf12a20423da2826f416b557990d07
c5fae06ec1fd3619b6cf7b10d13ba515f3c42e2ec2be8d8cbaca9fcaf36f662a
cafef54557fa9ed87d731cb9cf1a58f9159ab65574fe3d6dc7d3d557edefb78f
828b836e5786686d8bd85c14ae94e894f88c0b892bd67f60c08594439e32b5b3
033cb90795baa5ab23ce538ad2a2a8915a6ef077e5908d8675bee266571181e5
3835796e4038564260a6e43addb72026be63a542e33dcf5089fba47c0f3830df
a5f34da168c96370f8b1a5cd777e8a991794b93a5282df4b960d898fe49b15c9
fe213671303880ba86dc8bdfe1aeb3361998fb0d369aa4283f68354c357080a7
a4c441a8077496f9c9682c4101bdfe6da02819866bd98772be9665f5854cd649
138784aacc807007415bb7d42c302d656c33d9cf988e4094365ce9675d5377c8
76bec163decaa1cd4e0337beab7ee12ab993a8f699fc5d82028383d037bc1f1d
607a53fe29dc04fb672cedcd5464844a2a33aaf802acc20c8d822b5fbb6c6d11
5fe68f34eddecbd3a73bf69bd11c0ce873b9f0f82492505fa0aea501f69044b3
b9b6ec96e6f4ef44fa7c13f008f26d020e57dc437461ad879303e97502b11009
49e6e6ff98ee7faf235581229a4d8a965b5e133a46c4c1ba7efc28b92dad29de
51a67ba6470d93ac5481cfc5dbafb013848404ffd1cf82c30299b7371b7725fd
3aceb2dc69aa50118c1e3c5440a45bb1cf1219c93afa060b79aa5fbb00907574
83e9266d73df73f46eb701bef45f8b412421b51eec3cb223dcaa592a5c0e8f78
547545b445fb5616fa0a879c2dd6eb9636c0fda3769fc3db89974a28fc70e0ec
96edec3571eb1f6e48d8a016e8881708aba915039cdc3b60b3e401943125d65f
0e9220e66e66f9325d85c3fd4c8c5badd9fee5322fe93977397adec881707846
9b98a7057d2f57280f7b3ebe1085312b8506e334bdeedf5a97b297c7e07e8c02
290258478e48f5f8b1ab7ca3891cff54078acb43953b0ff985b84a7e6bbd6a4a
337bd3c7c3aeed60ab768515ba5c0ae0c8f7d06884d25e2ff145eb5723606517
6ff76eed194411c63aa8f1a2057e9c1f49e7067c2c70316e73efbcb460a721b1
2fc317c652bc06a1638871089a35352e575d459160b76541491148d3e4204caf
809bac46deb67ef50f86146e22fe87dd60bdc003b9b404723afb6e4c07a4bb7b
88aa2c0948f14fe836be5f5d0746a10ace3e0c48cc7420c31a8b67c6c02174c0
89b8bf2f4786bc12f06de25a5f5c30d0e949d29cb9d5b6ee5ccda27245e19032
468aa7208a0d21caf2b9494a680e11525a5495d34d4e348fa76450636269effd
413f6df8984bc4e391358acd90b8e944710fe7d8f79c775102e6e3f1c7ea903e
386f60862c2f1b94ec64266342a4db46c304a329dc487cf03166fd903432f3a3
6a83c62ee2744e8b1fc6ec3c157693a579456db38efbbf145b2151c47eac7cc6
b624d06076098e9407bc2f197a7cdc59cdf9425adc684e9fd073b0b2de09ea26
60948cdd682daa87e93803f9221defbd0b997bc9c269e6ae6f4dcbf2fe9c6377
ba1e74637eebd21d5ae60e87c9f4f6ea00ee1e75c02ef1b64fbb584dd975f933
9e0561b51940cfb10906251d35b0db3d9c66a6be0570f6de09b81d476e7e8d50
9123d2f0d263111b377bf3b5595070ba994ed1ce426bc78ff1b91f37b4603881
c105f01240c7ab71bf68db67200bb3c166f69d46c1352bcff5b059d856a6c2ee
3f5b268f6c7d26a97a08e4f96ec04bd723ce7f6a0b4a747a2a7487a150fa8eed
e7210fd84454f88a84e4c0cac45aa2460760c26b2dbb92868a168514387fa75b
a4cc782415a12d3ee9a253bf5a5fab1120cccbac907c00b15c35da0d360268ab
1f4302ddd408946daad0fccc002d606318c8ee9fc917e42a5f7c7c2a7248da3c
6b8afa56637a2a1a0e768db20dc576f8f649ffcd6e2d058d3c0fc8e79659b4e0
d01c1c893ee2ddcd41763fb42a2e22aa21c20e49413bf0cf8cb6d34faee2fb66
6192db58307bdb31a5fffa8cfaec300983634c0380bf3495ca0b208c7084df12
229d98dd10decce12b003f42d23035e189357e14c6edcda9355ca3468cb2cad3
b74f6e191e3d81a3ea6e5f9067d2a92e167ee2642bf7c5ee2e05ca561d3a744c
47011bbee4bddd15a92043d0f212a9c6028a62459a06b1f6b8ca9aa67b6f20ad
e5e18a3b506c1fb3adb928e86bcca00e5f7dd7c0ce8bfce8040f9dba1ec08e9f
37963a61ac5cace3342817ddfe4f443e8aaaa3ce2d39f379ed5ba6fb5d7608cc
dfafadb48af0294af4e95c96c616ce9387c02780c12312e0fc1812faeec1e064
f286233bfcee2bdcb09718aeb07d0f206d4343500cf81c2d346bfae58bca9fa9
e5471ceef4e1dd0327166105e820f0ddea97144658e0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT8
%!PS-AdobeFont-1.1: CMTT8 1.0
%%CreationDate: 1991 Aug 20 16:46:05

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
/FontBBox{-5 -232 545 699}readonly def
/UniqueXX 5000830 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be533de8dbe3ccd493ef4c9656d5d5b76d531
9e704539dd76b065f45e6d6f62ec499c9ab91923a364237ef75e1d62d52df3a9
43713cbc63b16c1880feedd1633766248fed9d060ff709951f2ec84ecdc06bbd
9cc4a865e1f275455525e5ac7e2e6289615e98cf7ce3763b6914d3a4c5b75b29
b8043dbd898ccd5be448064cf1af2f80f969a44b4f9b801c42f6d6a6d0c3ff42
e0b1cff748c1fc49b598eadde0c2802dd591c54b802ffd24cb7a7639295713d5
4e639514ac78460672c9c51742ae2014e4137ba4303051c06f686395aaef86c9
9d7f9a97009436c2ff55b770de3e80cef0d53f4df46aacecc21632c0c676e2f5
ca7bb101a239a0ff67ebd37a6b8c4c8246dc2c90b759dc03fb26bde8f134f552
23ef3d6496aa0c4a2d7b6398de6e6a0474ee1b0d78b2d865614609f1db92fc56
4ab5921078b4944e11a2162902f0e04f4b29448aaa22b4ea92fac48f8dc47535
d717dc7acd08b25d391c97c6c540ae0a98be5d6a8da564ab73e8b5d3b5e1989d
6e25c3a35ea44d596b5fd6b2373b30de7d59c1831245edb76d6a67816ab91a80
a27a6597c6dfd274db8b3e45cb01aedee59ba6efa1428e41ed557f051012a389
9b195ea44a4e4d0067398d9d40ea26195efbffd2cf785540bbeb8964f6391361
904fa5e187e4af3baeb4e8cbe7558fb7049c94a1769a2ff0b44f679bf6f14d8a
974bb8bdc735d5a9798c89d7d81176ba98dc22dddf6766acd52020e3ddcbc94b
71ad8a336dbe9262f302d8e8d5ced4481b19a586e1d73d0138ab0b732226185e
8cfb8408890ecb590f032a5633352c42df62a7dd1a3cb4fb12083709edc26146
f31161bae67a54aa5b41ca7af61b515c100b38a01b77f831245a013f804584b7
bb764dab019978bf8edeee83a12c771ae6fefd3514c7535bf9905667587bb53b
2f0bf263a4817293acb35d9a3fbfca7a5f3674cf9dba26a3d05666632ba95c44
e9c0aaa78e353a8dd516f96e3d03c54ad0e1017fb339105d4789720eb39e2159
262740bab10893111cc379193d1580ee5039b6ea3c6348c0b7299c437edf90e9
4bb4a886f7e86cfc4720d4d81bf263ccc48ca2151e33696dac74e0347dd3fe4d
b61d84e550a00f2dc39dd78e9e220ab59c7de8a640e598a269a23c73707ea4dd
f560900b59fd62587472a2f5af970bf411cef64eeb26b1bf185898ed56f66a2b
e9ae0071f957e3c4b91acf57ff30fa09188d2039ad05d3882c64a9a191386d7b
50d589934335443070676a1b2e56856537c01b553ac14a171aaa2b552f320752
a7ff41571a9215add71565d788e9ad416b751ff418aa3014d7eed1b110c9920e
87a4bfcfc6a8bff02b77edea89c46d1795f807d3957fbee66bedd66233d40099
5b5c88eaee04bc44b69b6b401804f3144ec432bc84105f5120eb50bd75583c27
0442023261b17a4a8c030d5351241296414feccb143c3c2f80bf25b057352271
e7b77284bc9660cfe437c6ebb36d2ac0934a11e38554637f6823c04f3238d026
9e08d198b7d03265bfe7649225967aada5975ce08ce36d88336eeac51d4052f7
3c37e73e3b027cf3a1682377488ce34a933175422de66d8bc21317ba3481e766
86e87ca3a0d7174b36789d17dd59cd3427fd01e6c934c9779878d98fb4c723b5
1bea32fe2191ea5f90adbbed03b7223fefc6a542912918b735935da35a7239ca
fd2218f93617dcc1ebe487b7f90073bbd55505a258f0232402d8f018abdfca44
db9206bc2a4209b64711d670ff754cfbc2a9de10e94641f469da3ea12c09225a
81fcca91cea3932233bac46f2cf182f4be71f0c4a2a00d7cec2f9f6b589dd693
4717b31ff6dada12f63a764bfab01953e100832d407bb0b8bd80a19835d079f4
0da096bd876250ba007f1a6c0c6f46c4b9d41c407f5b19529fdc8f48043529a3
f7b68b37f8f5ce530579afe184b17092dd855a18dac7d833663f4cb1cf59c34f
c3a31be60734ada223bd95ce4503b6a37be07bc3c3af598e5ec45ea1270a4e1f
f9997b9c3f40566fa862038bab4d9095693d50ad87202c24c84f895895f53ece
2e541287d44f370c1aaa5e43291d4f1a49a24aca0dc2ef994653c4628c012fc1
1dc9b8561b85d6b3845999ea75b732e35d7237634cad94f53ff8efc0787ca6a3
904e82d88b72a3db26c6f17edf209218e837c54eeef192fa84f711885871f0b4
2ac71e1f02382a8b79f442b6b3c1f31a056241a2c8b4f051906d8a981aa1a230
e3ecc7c681ae379f52bf0f81f75921198a64f65ddbf4f88b60fee99fc4bb28b2
8806fe75bee2929aee6b82ed95a02f1299af3ba746d7c2bb90ab541685f941f9
7733ce045f03c30e0d0f69351768290d9d42926437f5ade8195ca2e391c7190b
c9517b462d2c10bb8301f5790be63d574a83055a87252846388333cdd6972443
a43f0acfb59c629ef61b38e293a49fe6d09f7e24c4deeb96ec8bb2403992ebbd
f9dc921eebf574371f7906022eed56d93efb500199c3bfd67ef30616bc46c92c
61cbde2194084093721a934e59ea33c7d9a66cd21a91884d0b7e4f7075982323
ba1b1f7e67a7c41a5903b31e99bf8d84d9c7df2d1fe7353fc858f0ebf214d60c
8620a4d71b83b9e25463b6c9162f172376b85a05b07b3fd1495c8430a8d68028
7f387d55388a094fe1d94cb3508adfadff93252439731e055d7195eefeee43fd
039ffece81c4041f9eebe0f7a19f52b7ccac2d84e0d2bc800f95aaa41cb573d1
555570e70f4a53f46956d11c4ebd35b80625b293a001c54cfe34195ca5dab127
edb8200e38193d6ca17fef1674fcc210a3411aca064a3bacabe2dbc23c0bdf50
db558b169508af3ffbbf3bc5ae0fb4f0229b5696680119fdf4d8b024286b2e9c
d3d29051d32352a5213a5638b3a63c094c29a32aff2b1d0a82b2dab98c4cda61
ec5c9e8e044a0cafbf438aefbb3424839c191af50169ea2f972fc54f2aeb6442
f4675c56885f60dbeb6c7e87799b89b7131d2ffb365790cef3318f7a8502d100
cf8d14c59c05a6ff34c057ba752ee3684df88df736259c0d37647f7882fcc33d
0273efc53b26126a93d32d87e9bb9954e983730b586cce5cdb239c2dd9fc9504
b7451913fe64155ef9d8695e5ec03a7d2fa8f44b0307368b29b0db90faa0cfd2
340b865178d23f1c221916b88ec5484016b88be0a964ffb9c11247a979be540c
67952b9f1e595d852704418d22c8491f3487beb7be83dfbc5f63e53084023339
4bfb9e54dcfa73823d0b79a7502826d9cfd380f91adc0b9dfdd4c88f3cb804e8
69ceffb3c695a9eac977ec7ed47c7c68377e8326c34098904fb6af79e9982f13
95659e9665bde9a50188c9662f128a01117c29bffe305f2c2d9a5bcd6f751650
96d9890ceec7fc6efa3552e65eba2f6c7823b6caf4b10d655611cfd13e76607d
5e1558569e78c1cc4b2ab17b48d152afbf1b8cf1317315fb9b4a57c0e90cb2ba
065ccb118523e630edf826a200139e04df9e1b3e5f4c7aad4670feef0f610ed9
695e0b2a081db967e1bf8a738433e07af58941b455c7799bbd5e1d5606c135ee
95892d73c94d1bd96242cb5a5c938cf61a1fec2813591744b7ecb4e0cac38415
444d391ac53334a8a44f90bd73e742c673b4f42224e257ba0403dcf7a3de2faa
af4f78c32f430ad5976978e32432f8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 114 /r put
readonly def
/FontBBox{14 -250 1077 750}readonly def
/UniqueXX 5000772 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3037a112066957
7889d67fff57549064b985d67ede2fb03272083723541051ebe936eff01a4ab3
cd845d565dfdf25d9ddd2792db17f52f894bea484480f06c832140fdd6c3af0e
fef0584c6b78b5e2bbb9a752f10581fd1c48cb498a822afb18cddebba34695b9
b418010368fdfb7bf758d50f3af03360b81c776325c33c9c81130b1e1be840cf
68c71ffd091dccc0df7b507fe8953dc3836af0da08ff9ff3e9cf7288d9eb8baf
ffac546a0fd987ae8e0bcf7b759f4408e13524f478de5896d816cb0ad2904271
cbec82a5ca50f0598502b434ecd94531b4a65181b5b3afcb650904b15157737a
a4386f1a7f1252caf2adbd5c8162bf3b065c01ca471d520c884ebbe1b29f9549
134e285dea2fe158c15a08a744cdda00bb6c62158262e24702803d9e1dc1d3a3
1383085631154b077fc20488ee3aa03f47ed2766644330b94133f2f9389b99b8
96d3707d1c5bb227fd3bbdf3a6ff572bf07164107c7a1c0710a5c7cfb67282f9
c238100fa138b75c553d7cbef17e2292a320d3d86a6210e6e3a1e590b10dac6e
177094d5dd163db623d7b344478752f6f3d7d5b3fa92e6bc72dc6fc343d2f946
9153e3d14c5a6d6b1d9ca52947b789cb4cf6196a02973aff0b097333f8d615c0
a1726ab7e31c378eab77150faa28cce535afe3ae5798402ca51cbd18dedc2c43
5281d0781351df30f4d11761579676449ae4a47a10f677cdd31ca9120fc2606a
9025d3cc09d58856a9bbfb17669f706ff8c7efe37a3656c9b20609cccb58b309
0595ca5666833f2bbf884aac1cd632fce69b4e0ea2e0a25b9c4d471f0e322e09
4cefda321359fdbe0a82656d3ecaeb68b7e0c7e733d85066ed7474c22b67169a
1bf1bdf7dfd0ce0aaeef78ee393ce6ea65edc1fdcdf3f744f714005d8221a156
4e71b9abb745bea99a9ef73f14b3621c1032e837ee618d0ef819035a7a1a159e
996944567127c430d37f1599086464c5a8f202ed7b098e4421ea2e0aa6af7ccc
949f934b1dd6b5f997302ca839d4d632f062f17bfe1a92cf67e161fd9f60d9d2
c4e1248719b0284ec8d9cc412573725703df40c67b9d9c58f305f0b754ac3c80
c73a8987a5a3b70d213b2e44d6ed0e70704cb8297e0d54fcc0b08be1d08a0401
0ee992239799aeb1e3b70cf02eb52dfc1f90776bc45fe21a4fc6eea1501e2a1f
bdb253eff1b1dbdb17714ce514837178fb659a0b9d4655ca630e6876fbcf034e
71f3311aaeea668f7fa9ac121594c533465b92d73e5d17084aeabcc731b723ca
c2d5487db4de60050893b7a6b8a57b642aece5ad6bdafbc3376db7e1139b1a41
3689f8f0e36106d19847e908614d718fc619560436bbb12146d42f44893ca230
56f897a1e33c97336fad864712cd807741d6e9767fd0216e322ce1ee9ebbcd7b
e9f8d2b23f20ada8b35bad6114583a3042887ddb372b64ed3a2d
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
dup 50 /element put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueXX 5000816 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b6a18979f258b8c6ed3
ccafbc21aca420c9c83eea371adc20e038b4d7b8ac303004b0aa205f04135140
76407216032fdd22e6219da8f16b28ca12524deb7bca073cc5eba65c102a5e85
fd48e6d062cd4283ee570a7774597e5bf0e3400b6be72db0115f3cb12db70ce0
83722870cddfadee715f10f1fcaf20e06f3c54afe5ca238539bfe2b596116e83
f5371ff18fa5003d8543226cfd4025f9940365b392a858d27f078d3abcffe4a1
54e78c7692d1a32bf935967c64f01b24788ff8325d61145e2d4a489fd986fb77
38e6b254522c77ca2797a504a9ce4676a77ebacb026eca94dde5922c936f8e90
c43e2851973f31a3280c08220536dd2c2de1ffd15fc739091343af4665ca3189
e4eb32f438ccca524c60ed10d30ab1d639fad639c6e723d0c0cd4a530b985187
82e2dfe820270616344f2816f5e9b536b5adefab8255d561a65407fca4bf6c22
f33afa41f77f126a1c1cde1c9cf9aa9835b92abd5a86de713bd2d3d33d99e7a2
4a592d1b6cc7bf2e333333b43d75730ac9d9f37e52de05871f92ea81c4f3ea3d
e4e57b7004f04ba92042e16e1e07de58e0fcbe58bad34eecc7d85b69ef5ee2f8
d6ff4d56f51e1b841efed79571be21b544b8c019c5ba1a4b2742b81a03117af9
e7847531670c80e554590509a276e1364bee307c5b3a527ecffa01a418149354
78e185228cd07cde658749664a729dcf17d56d2201947f633ee96a18caf8a7ee
44b03d0a5653476ddf81f9bf8d5555c3fc601fea0c7b40376b76262c5c6667a1
b539792e3069a81000513d23b3030d14cd6eb6bac7c97753fe6af8bc21d404d7
6a7a93dc1779dde9193384f6c50e6ac9cf18d37755d8b5f21af3bef8eb7e31ad
256e4521b7f4210f8df84c1b41b0af297329e319315cd496ce5fa7aeeedd6326
d3b5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 114 /r put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueXX 5087381 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a1e67ed7e41cc25acc04702f6
8ef703e3d45722c1a91fdef7100a48631a02a6f02a08c6b1f9b4df8310385b86
8632718fd87119a233f219d9411383b7fa9f3e4780d8c27e2e89e0cae883d664
c3eac57a3aef8988a2e9f0f8c7f53e0a80bdfc4620e21287d0390e1975398544
7f3ea66401024bea75e1b4c4437b7bb188f76f96b918ac7c6ad7e8ae7f21d8c2
790f08cccec904fe48ef39e597ed4d4237c1d1f596f5906b19ea308020f7a35c
168e327ec3246b1dfabe912f6b6daac09974876d3996e57d180261110db05f15
e3e8eebba3d90b5764c03df3033a1ed678ebc679569a2fb297378b25434c0f20
5313ecb8a952f07242d3ee731b0cdc086a4481178a3d65129c47c09b22e9c431
e11b3747b94c26a757c38d06001798c6a568303d541385244b967d3b1786edea
f65bb53c4c2fe75e4b1b15c2c78d930b4296c80f08bad86012451edc8e9f0854
c3b390a16e27b11b3d45a9f72eff8baded2242dc928a61685d79e09681c97425
5b90a498614cf560fa5b1718981388268ba206a96989e6d0b5d485d9aca5594a
e67dd7b34d8a369adb06647f8aff8814d6d9cdc04a4835918e557174c5bc0f3f
bcea9907a04cf93c12727ec40db3f2f77596dca477862747435bdedacd9b2311
6cc97fa47ffdd7d897fb6bdd5572e35d34e7e1cb5e7273a4ffd86525323ace4a
84e1297028c2bd5469baa2e75d19360c2c9042139d5e7dd4390a6a3935424711
de21910126d750ae279916ceb71da3591d60dc62db333c5021e2c1cd61ade51e
9395804fa8f124b194547de13ddc8ce157d5d0de6efccc2cbab2e36769639ca9
d324118c349551543ba132ad88aa212bae6e329b67f9e64fc6eebd3078681221
7d286764f29ccc232c338612e2c19efd9651faefc7422b868e8c888f9d318ea6
bff0a8ba68e464e00db168816eacf04a8d405267b49e4f2d30b9592d4dbfab29
9e47e9fd8374010246d70c1c80abc786cd17533ffeede533132a95dbca8f1203
d45e853165c9be0067f2111d6a183f522280464d3dacc693023beb2df4cd15be
e3e05d8f2f75fc991329cbbb0b5de1c4e04b6942f3ef3d72ad2cd4795f810afb
92586e215b534719c7f907574da4e99dc517b54483fd6e341f1009f3656f5938
8c05bb5f43a5751694a055c01c2f913452cb60ef2396a98b96798080957e724f
c68652f3b9e3dd43abffb133814b5aa3be047a62a5e4b34217cbe64b1c3faad3
5c7b838562659b7bb63e8142444dbe377123e01b23e4094a7bdc5dbc58334c49
3dfd9a87063c46ce66184ece687c248385e4dd34a3b4866c3678b5ba0a70a3b4
7de1888eeae333b2e33a196d382a433818f909ac19184c38a12530c5c739e398
07fce771803058350c4a871d00dca0678a46622583f537356ef93bd14f6769c4
0097b2babb0702f7991165b4caf84cac231e5bbb306d47d6dc87cc633afd192f
8e168fbc17b0f51439e00dc18e7b800ed1c40784208d5637a40fee86cdb9b0ed
8119b72ca1afc13c9d77c335c50ec4d20c3840aedf1af640249cd70db3590ce8
fe12be620a61ec8c5a3625091d09d648337af69006f49fc8deedde5a860fb909
3d5c6ed120ba7e34b54f23f56256e323a5fe836ecb2bd097fc31966669116736
c438576ae5d56ea8e70d6cb2bbde9dcf7d038849af9ed18b030f7207571b14e6
1dd2025391f965f86a1b6790d9ea16244c896d2dc4228396d3f6057fedbea506
a9fd72b34bc6067c992f2e12df4515cc272f6846b54f5c4c893f5457a3906c4a
fc301ac6ad944e2692e6e0fb2439bb06d56a5ab0e3d7e375d0d1d37675e0f29e
4d0614958e0379ba00e21b53b949e0724e03d59caecf9c4e2f920362a3e45bb3
e5ef435d048c3857edd0ac8c287bf15d663ab0281bcee907f7603c0ad8eadf99
d22ca703857ce5f8b1aad622c2e7322d55be64dca294b5b9b8df1243975c96be
7248cd184e0819bf0894ed3bd6cbb902a716e8a09783775913d8346474ff06c7
ed3b9ecd92d36ed5bf34e4484733c2c0469c1f9a875e21e233b9e0d248e73b23
8629123091b20e0119435c67673bb103d84e33878ee2db9d9cd28362352c9dc5
884cacef03b2b37718b8749be7738a423440bab3e2892e3a3fd58303a731a3e6
17ce9035a085db54fb3735155650b0dff022a1342c36a5f4e90c7d218ba3d4fb
3da3bfeb52882e0333bd3d254b0b06bddd6efc590536e5585235e0256c218b2a
d4349ed6dd0953f286db3fe2b07c37b4b123d67257cbb7467505e18b3c66d2ea
787642d14ec8658ffffbfa221c4caf56abe8a58ae42cf3b4dc330e4781ea39af
883d8254e4487c3c1496918a862588d8df76d0a6aeec
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 42 /asterisk put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 79 /O put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueXX 5000831 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be465959b1188f76df7824c135a7fb382c4e1
1b0ddfe856b6f34552ca48c24b57dd8448fac257c4d93fb122e1218fd36b99b2
d79dadb8a66613ef11039be77816a7a2d6781fe0d69cecc36232ae87a172afe0
95532a8c7ff40bdd4a5fcfb6ccfd8f73c572231734e0609c6743ee11010f6579
820b367c49069ac1d45760c0ce8dc1e67e2beb72be6d287910547e1b4bb52465
b75947d224998223275a2c340a1c14c04328cc2935c53ee2723f1de6357a291e
14863f6c1411477b3ea074052b30a4c1ef03ab324d678307e1cb02c7aaffa90b
73975378b9debcd3f6aab626a361be8068c60edd0b2be4a7bbf4efa21cc23607
bf7e2556c17b5923d7b0fc036d5fea743c55f2bbf72e8a61995bd63d7104a085
b8dd5a83d9077376a4ae8f0c048606bb9e84c640c52d0a95b35d48cfafd6ebe3
d6eb0ed88c1212818ca93e40614740a77c446b792d02945642014a5d55ba970e
f97dcdd5b839f621a052d1085a1e668161d3ac0227c7867324ede883589b39e5
d152793009cb5a08eb6719a44dd01b6147e3436bdbb28215ce3d29a3b1dfc72b
d942f8cb3376b4e12cff53a793d935346ceb2afc3428cd9313c671ec1911252c
19de341556999aaf7417aa5085daa35ee71353fdc2c7d83ec2dedaabb1b89b99
e4cb5282159cbfb45a286f8d6bf3abdedccbdcebaf6994b17f1be07d10f00cba
47f2fbf66c0d83921a5a0a4e2054a8a2dcf492cc40de855b476ae77bfe12ce22
d1195e3f9d51272541e21267b2924e293e7a1090b4eefdb707d2c29ad62a240f
ad89834a3b49e3715ed086a4bcfb0b5118744fda024989692cdf4e88876c2dd4
e1f3dbf5792893854a5c4495c99a9e9e2410ad797d5c79d940621c6e94fd03a3
3430a835efb9f316b5b63beb13e0a2b3c91a52705015e28068edfd68afb9f3ae
5e2c4eb78f6530677a16ada21c858af6458d89db5310e196e39843a2716e0bfe
934b591534b77fe4b5d3a6fb1868e88a3c08b988ce9c7b33368b3e19d02897c6
9b437746a0128ab4bed4c2621799ee6791cba3fc7734beb9953966d09c30b3b1
664b0936c6fa4cf091045f0e9645df397331499e8f08083a6e47ae29633dbd85
48e692d8c42e95b1bc302d8c7085c5e240441210570c76747868c285878c1c2e
c2c098a71bde3bd2ae7241ef4b66d5222b809fd4e82e61baeb16b1d46a98ae13
a398fc5d3e68016832324fa48c32df22bd40960c7596fd93e28f74867ed71b5b
7f06b23081cc1893020469b1c5476011e5d76ce7bbaf65cb1c6cb4b0275e3a72
8c76bc6b56ef3bbc585a8744a2ed8ab8ce62252fcf5dd2236d9679779b8ac591
fc42b2638dfa825e949967dd1f3e49281d9f72b9ba94146635fecfd28e74503b
8401a14a526be62f68f5c7343fc7e6b2854761662ce47fe46cdddcb5c2fb1ac6
b04fd0d268e1f0db0d39edf633bf17b90a5b47a55908faee932c885051e4fa05
b42510b0c6d3242f5cda403b9fd272a685bdba2fd4d296e9c9dcc8cd06b4c6da
f40d12c0a4ac5e77347a178498b0eff79fb1cda91db87d54dd8d5067d9989a21
dc4ff48809d2ed72ff236eaca48fce346212394d6f2cb0246f2b1c514ddadfac
e65f33895cf0ba48238f7bd34a7fc1d657063b38bca71a9a7623e05b2c4fdb36
2920013956522cd952d8762d0a241420a944a7dd92c8bac36928285e4e675aed
759c97265d11dd7a7f053fd1c25e3c6eec35aaa41a7bab1ef241b8182ba3fddf
b390f2fdf9aa157d2c330f51a9941a8434cb2a3a7b760b1580071dcdcb604339
738e7a5459bb1c246913a0460da399f435ffabc43796a6ba85b6c1fba7d8280e
54834f93d1472570f5ba6c0c22e10dad3d8851bd9d0ed5d81a7ef111510a909b
73273bf7a18d98ce741d74c170d89fc563c49fd181e640ef2398686b3bc65419
0a705983c3a3ea4727e3b1cf35e1cf3a5f47d94c96d3dfdfcb4c4cb429a250d7
4442f13c3f1fdb3e9ac4ae2897cd3878a763b6812a0e97ac670cae9348ffe709
f8bb314c67149759d3da90221592047809747567818d2a94f1715cecd4a4ea5e
16de68cb96fdf43e3d805dc7b93ceafca8ff994b1cde395a822d8a052dde468b
d47370bfb7f3a5e70bdac9c0e3271c8f5c0346b740bcc0cafd216a0ba5fcd6f4
63d60bb041b3e2223e2a0acb0b11fb24f790eb094bb6f2953aec2520fc9632a0
65f774780be7cb22c25cf6ce77cb776190a68ac69ff9f30c4f1eb52956498a4e
09ff1bcf7efc7c788e8c75a30298b01f5fa01b0c0a7643f76cf64f5eef14db80
af16feb21f3219e4c5ecfc30f298efbd9eacb37e26aba357248ffb8c68181959
4e9c4ce6174fb3fbc232c34ac02273eb5f7151ddc1bdaa43915a969fffb1c58d
5952c5e9e1a0fd8802ca761d1aae44ad9011e3fe3f6a989642a6339971ed750b
4ab7e26f2eccad899d3a7f6a22d072a66ed8dc35024f199b252b1ba31bb0bab4
b49ab8c9893a8614351f668d17afcc42a927ba201a41b021399baa01ed914935
9d40731514335107670a26fb8efc781d5ec4de8d6a4a4ec6ca6d0091aee95931
74c6fd293a545fc4c1ff26c5a37a126e3e38178de9ac1a21adbad27baf785ef9
d48292dbbc4d78909f274c6ae3174420b8866ffc28feb64acc6add54859cb067
f1c4b70243c3226bce494b57a1927f8da537173a7c323170c0d1b0aced8319e9
4d109831570066dfc11d629410e989c45c5edae626e7efd3afb0797334ebd395
b48fc0bf9505a9af2272359bc7ad34b9d88c73809471df162cbf5c44a738fbef
06c80a5e108ef8d1d10b70af5c53c241a0ac8cc993d9dc9ef26256c0fee12353
f387d1742ddb43427fb7a3acaae7ae670a4f808dfec3da8a1e5abe74af2e3e65
655acf803b1ce755f775a2536c150f7f264f76a5b6918ffc5f53b089b5adc78c
e878abc921e1ede0de6424455c603c6ad225b2972d22e6e4137d43e11331db6b
07a11746230486b103b14600fa39f841787c7fbcc956bae35fce157fbd845c1c
fa608b04ee46043a9d52b01438ac4008304cbb4d542d9c928d3a9ad942e06c49
3356528a84343ef8daaa81c67e58ab1a904ffea4a5f52bfcd92c49e8f6b954d7
68bdaed76fce20bfe8abb974183781afa89ff827fc345d39f55a8ba2f4a0e013
7fb7ef3d9431d502024994ca25b3c342db3898f764d414f879777d84ba7ccae4
3729aed8acc4ae069674151215983463cf72a13c4529a0fb8c5808c0dd1e455b
433b818e4ca5548a9499fb61c9f595dc8b0a994a09e92d52e9dff37f31dfdca1
22987de5ef2c5b8beabd9dc99b73c64f4ef92d563e94e08b992d9e3274009ef4
5999f608aa44f4cc4a4348869a5c41d924658a3287f08cc112dbda32baccc8dc
d35deece9fd71073feb0a8caa5b292ee8cb0c205e6034a92f696c4f495c4e1a8
e46b80dee2394427dc9271857fcf5d1f4de3bd60d6d79fd47280a2c93c9a74bf
ccbb0f27c01d8d18efc30ab37e4b07b5af9e9c2ac6e0d6d81c9eef4034bfdf8a
3efab66f5e1aae419b50202993e311fceb18390ee918bf46c4508ea89be8bf7b
2863229441b9b1c8b9e8ae38de825c7f1102bba354224d6c76e2f8cd14fdc44e
d8716bb7ae780e1e5602bd047ac9ca42acaf8b8b7241794f2367c101b779e36b
9b463c7f04b813480d59fe05860330467a2454eeae58aa07be79a727af040c1f
efadcdd885279172d672950d8401ab3d41f108f86eb3b7bc1ef305ade0953c8c
b6447b31fe04cd95ad3795ed09400df70763cde0fed8b81c7b2ecbbe0082788e
2f32d87a0d793df35d6e43a01e87fab2c2904dafb2fecf288d0429fcdf7f1108
c8031d1b5b912832c3b49b79a2b05e1202927ecf025c47a1487c32af76a0b4a4
33d76659f7a7fd19f582270f63688048089d8acbc130308ab08e91f692b3b6e7
72980cc37e124f4126f1928b9d80b4585d9c73780cad6c1f103cebfe89bb4111
868555b04745ad4d935144e54bac0aee77bc1e10ce0b7d6d25daab41f25aec0a
4c5276b1dfd725100733e21a7d86da1a21c60d4ea69979ad41548c299b047d3e
9d0cf54496fa734629922a0d097356a3e566c892f92cf15554dd6ae8fd791b6b
6e49a0d22145517462a353f47f24e5be747f541642778796bb3efe5e328fa48f
181be0f2597b39e9bace0be10cdc0d4d42d66e5d6cbe75ec30ac3493419b278c
eddef577d3e47d6394eae12b1277057f564dbfffbba111ce01f98ba3fb97f213
95712289c9991515ba1ee3b58ce177f9fdc53762ebfaa5d3c907dc4de1d2e59e
dc993dd89d26eeeb2b9e34d69be15437671f6a6cd01935005f7f387731d2b566
75bcc848175878ff5547d004ba84118165683942e462c2307990253ece2042eb
90f7bda003387a9a2881aa3cfb24e5c68faa6a4cd10f9920d7b0bee618e364e0
53703a9b8675445101cf3de762e4d231d830fcbe6fe243be5c92179c51130d43
65a75925771d9560631202f7d964a60af6caa0d48ac43c5f748a4552641f4a9d
d5b7c6775a5af092e1779d75f10030f2a48c2ea32ebad92837f89240a0d2edb2
924c1522ff8a2e11f210cba23bdd84837b29739a952a585f8b18014ab7faa96b
cdceec2c6f1bf1e5cb3615756e1e20a591054a6b16ede5dfaff5f05ec19f2f88
4e27aff25bdb5c5b8ed9dae1ff0ef5920e0dabf379985f9d512d7d4a28f34ad5
cd44b1a9d68afe372b2bd2ec0e245cceb9fd8899491fbbd3adfea309954f408b
29a19fbc011621eed654e8219d65f2a5059a85bed41aeebc59f78932ba292212
5ff5fac4f7eb325ed843374c5ce12e0d12f22e7f4d23fca85d81c431a12e574e
7f514bb09ba5390a84db45e67956dff93e3eaac03cb1e2a4f9e40076d2099335
10e509295c79e1221dd403a53eeb89359f927c6cba78cd8ca57cf5847d8a6e5d
6bea0349b9fea9386033e92e291bdda5771e96950bfb4a27c8958ca306d3b904
34efc8f6a8ed2bc501679f80b10ab7eb1b071686f53892127597fd78568d0a1f
47d5ba44d60078aea63c205d78cb67e30758415cf7025157dedd48de39548153
2f5b4e464ce66325e4ec87a8c3b00d0b26c8cd4848872086ddcf826c2fb1db1a
6c22a9f4391b09b4758acddcfd3274b7791c337c891716bd1472ec549b9f8ada
a706bb66646d37714fcceebcc9e3f1e03017a897e70cf333ffae3fc27e3e0ca5
26a8e44578052d247dd53631576b771a624b87ac4b0f00417d89e748e834fce0
0651b146a5a8e7346efd8bad419acfd31030baf0414b5e5b607f5dea7e5f7602
1bef90ca9993cafbcdc63853d8a39439d8fea23bc5b8e9fdd8612992af465336
38cce22deb039f53622d08ac364484dab9558ebc48a1c054d591da37e9a90d6f
7daf66ba2c3ac183a3190f28251a8836e828357b90d1c6e9a273a04cfa5a283b
548d44f41b5ad8f8a4a717a5ee12fff17008eba573c3c0fb7c191fc191a46fd5
fc6edb314fbfe7d2e3edfe4c359b96d20a96f937b747c770e532208ddb063400
2ab225fb2c4c3ab8b3aedbf01eab1c9dfce20e9e7a8e7baa036667e2a539f381
dbc5e60bd1b2856d9eae455dfc3bc2bc6d6a16ac1cccb6e0058b4f8e9e18739d
11e194f2a5f959eeeba32da32b37c6886bba536776838a6dfd9c35b32bada695
5d91bcdb835c8dfbf74847260048844915328343f9a2350848599bd46546a5dc
867ef47a11296d9beaefb3886f07a19aa349b11c6f97706a3e9c8600b29febd5
8a25f281d324872d539f40c50ef039130b26fa14e298feb291429c6f5e5cf814
12b21b8fddf24b0b5e6a8d758dbd4321d405c1c25cfb1a067df63a3010d5e018
9128
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY5
%!PS-AdobeFont-1.1: CMSY5 1.0
%%CreationDate: 1991 Aug 15 07:21:16

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
/FontBBox{21 -944 1448 791}readonly def
/UniqueXX 5000815 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b6784decd2fb36dec8f
7478da853762e00bc9c52ba86ef50d222ff142abc18e4fb95b86b3e57d9390ca
86e8de6347bf7f48f93322a372c5d7830521b14e8fa0771961b027c81365426d
d95d16b950e216a90f28ce806244ff28dd969cb512a23e05045e7b2bcaf7d6f0
ca8b51494f2ec0681bdfde60420628d9bce98a0ca1ecca9140f452a88db19a30
ed46ae881b098c843a51d06f9a153489357fd24de6a0c36cb5a9eb9b3b64dd75
18f83018ae7cefa1c12fd205df6880a705e28457af7b869a6dd28f6b37d82cc3
e51cba348dcdb34efb119b8ce5a996f15492b0f5d34538850a2c1b6a509fe5fa
015eceaf28b787e54f5f78aa5a89e3ed380237c85d8bf04e237eafde44a62e69
3a7fa22cc35e540c6a52ee169c4df8fcd0d5a42cae5b2be85f7a8ed20776b6ca
ed6ea42cba846631f2df7a19703005326b382b7c3359531c21552baf55b7fd6e
9dabbc3a6327ab8a9eff85ba6a3daa46f4ae0579e20a2752f48ffd64eb53a661
2ca5f04a7949675b1b736525a27ea279f52cf5b035f83ec3c6ef750656cb3b86
cd1f86d6ff3d6c92b19c98c4720941cdc4169e0ac2e1eeb54032f4f426a79965
c41eeea6e0a589b052d40882377028969ab08a4a6457cdbacbba80b6537c82df
0d346f8bed51d61213a7cb09fe800cf40abc0c3ff665810ba9877557b22df850
cbf18bd0573455324c501b52771bf851dd36fec83141659da1c47d02dbd42043
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 54 /negationslash put
dup 102 /braceleft put
dup 103 /braceright put
dup 112 /radical put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueXX 5000817 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f73e9b697ddc0351763500e23c4d170ea8a2d2
75ad0b6b23097f02fa803c1f46f9ac10fe0e527c431b11b1b9a50e874896cca6
17fe3e255960846bc319ca68b9b930a45d5d0fc36b352c3443ab6f7793b38d2c
7fb9c409ab7980ead55e9f8f6b83c70088d1fa6d7f2214da8928e40b96334ad2
72d1b5db9d1355a579b26a8dac21f021e393d7d837a95deb8de92ed818a8b80b
98ee9cdd8a3c57ad7d6eb7a82f43eaa6ec520eefa7302e750edc4b495f70bba2
24a2182eec37f1a1c5dc8e20973007150237daa6bf03d498826777eeebe09014
ebfe05a8731e1a421cfc513d47d673e3d94d805f5d0668ffa265e0962cb5a75a
4a93d9b877ca4bc5cd9c6c6dad91024aa3cd58a7ec276a45510cad80f10b9356
1e62c497ea0eea8e11387891398b3c063d850c9c655fdd2b7985026629ba6f33
bb860326eef1d0cdecf8ba2b07d1a332c60c36deda038f2a5a0bd40c53075244
a934b2923853e4a6151c6f846dfd0ca05fcc5aa7077a4a827fca5d18be2532b4
8dbd6902eaae8b70a9bb4588deac5fe5d53693cd7473346ad0fa40af4ed7c413
a0beac8e1eba747fc35b7d92978217f4bd586713e5d7c06dfdcd5f102333c614
210bd07736a53810b48895fd4699e39ebac92e5631a4cf4c811439e08e626a8f
d676feec0e40729ad159086c540c2816f67e890825ebc4aeff6120ee71ca0084
cf3139d8dc39c20e3e766a416b553bfc9f27ac6a4b27de8adae77de189b782cc
6c31d10cdd42323103463f578737301e4024cd84ace3ee2f66b7c4dba65be519
eb5f67171f82ae8ec0f6a6a115797b132d54450f035bfe3df6637c70fc55eb64
eb350acb58f17ba0d23ffc8e00a7d38b9bb96bad7f902f532518b61e016a61e1
3765d019a71ab76a5674b2e45d2961b34e98379c3e02d10cbbb3962e146e14c4
7262ee3307d52e3277adab7fbee45a6cffb7ffdcce831231917a75f5103b2ead
2524d030e474db44e70e59d32d3e0c0cf869dbf0719fa32b2385e87f77b2a31d
7f1c91e32b820960517612478195dfa338657a1a6cceac9e19d0fc8c436c5fb8
7f0f8cf2e4b73cb8246a9bf9fa2b47f9c5d6beba68bef1e304e307333ea01345
dc3542c644957c224ebdcea99b5d295e35b97f25796ea78c0640c6faaa674c6c
f5ea1cc52887dc4680bfd2397f5b7b50324e32a916c87c0da77537ad6bb4bc32
7139effece029329598522d649a9a13524a9d1c714c290c9fd638081500c76ae
212a137d76956fda62df6960a8d7df3a3c7d153c21f8a701828c99c31afcb827
a729bb0dfa25bab819e5ac00cf1f6e2138fe5efda621b31f83fd62f96497ee3e
fc43f7f852ee8302b75fc4145655718688d4f19999f7f750187e9d999bf2e41a
1ecc3410b1bf5cec65f0cca291606062b02be0b7753f16b04449ec56c4b54719
4e6e358ce8159925f23f38327c1fef3291eee9ea8b772cd51dd60c4cd3a29a89
476c1c67a381c38535519a583dc6e0cfc04a3b3d6988ca63f53833ca0b1dc8fd
37a39d7358f15a482e8d3be5a139e77ec319296959869256678345982271659f
815bb696855a887fd168148ff50b336fd0fa70886ca0c279
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 66 /B put
dup 74 /J put
dup 75 /K put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueXX 5087382 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930f01bdaae649990604a33aa9eaffbe5b5489
e5c7c9ff9d9be01b08220832c41caac64816b53bbc087ae4b621d2b44b21ae5e
3f7fe4ddb05c675abfe30510eee4a7c874bb57b2ffe521a6875eddfdfd18c781
25bfca5a097aad361dd94df46f14026c25ea988194899b95001209cb7009cead
4b4ea03473ea120e7a7e341d4e3926796347fdb3a124c29660ac09f4648b313c
b58e824884382f24ce08d2edc686923acace1201c16a07a42803288cd0b946f7
546510e95b1fa1cc96f0bf72aa823d8e83d7c68c752c82a54c752eed2b1e699d
e9db1830272ffbf2f4996ccc2d6fe2ae272798989525ef3b67b0d09bffcef749
a805e5f76578222b9c4a8a09b13189a16ab746ddef7875f1ecf83e568f493d82
ff729baa1e0834dbec30a35d3c49c9b10c5e1d90c6e3c8fb737df5ceb3299d96
0fb79632f91f257753b4d2e34e3f54a26c7b950981fb7fe4dee3315db63e75b0
24b4d318baec8aac9cde186f6d65767df1dba35124287c2e805bc660a3a22772
0ae4fa097f1d75107441c0a0fbb9eec17d5516fa03b98756b7df7ac7eff9c7a2
364b9f691ed5cb692dfff9dd80c761e9c4d5d6061782b327302c053ce1cd09ba
0605ebf761cf9b730524e1994e7dfaa956799d522ec53d5acba27a35c4d28279
617771938ece58c5ab664aa00c1bc4efba2d15504247a68e3af0f9bd59a12ac1
d8764421dfef5dfa13fbee58f5ecd4deeb4cda9fe9483c229ab29460b05559b0
35c73d6b88f6a384de0e2dfae4b1886f91e522d800b0ad40eae57f680490fea4
a2eda9f8f57aea1a4315674be45989c2293362dfbd0b5d90a523a7b79de04d6f
7b9ffa9f9ff2f2f7a1645e6b6e199c88c8430208a7df1f8f8839769a44b3922b
18294062582dfb8eb65d087635f1b602efbd5aa1d63676616822ac40947e58d4
49f3226143efd388f810db12077f5cbbd8d6cfee0ad3ef2426bdd29bc2cff5ef
5beff142f376dc492266b9a282daa4f6fbbb4b56cb5256610f4e6aa350a65075
701fd2779816cf13885401d87739a5ad750b644fdcdae730bef6ccda5e481246
a60381cf1558646cfe8dd51445fd2605aee6b414f46f8a322c9aecb7ddb6f1cd
9321712faee05f7264d34e98843c6a1f70af776b0dcb98b28b7cd13c7e98805c
0e7dac4f720fdd93f4772cb8d52b1a0d0824569555991e17131a80a1edf67ca3
71df24c24c4c8adf178794a9b01b1c7281be68137639ba2ee73af580ec0fd911
a0f59efc7e5288eabea073d88178ed4efaa538a33d850d977132d4be4c5e9bc4
65e0371e2077bf6832a11e1d5c1d34e595147c084580f558793125ff0ac3d3ae
a5a146adb7bcd217c212d00b83c7fe8bc0930eb31396437f22a289854770ae08
1a60f3a4bc2497c0a1f92f69814a182e2dad8c1d113bcd8a908bb169cfb7ad37
cabb3eda465c85fb1a26e0bd37ca20fca24136312a92e573533ef22b446b6400
862c9c4c9133047fedf6db4352c06ce25cdc2ba35436a8053ae681bd54c2d42f
fbc0d54e2eff212fcda50de4054c8eee7b98c4a00a9b9636fefa769cdfa2e1de
bea9838c864c8a27f05240dd5e98f9dd7aa8d66b4087d43868367fd3752296a8
3d162bdc88f33532f9560650a0d2e35a23fc8f19b0c6fe194688db102a423894
3cd9d675c1ce3089949ac5a84e5e20b8095baa5f2a73b6c2f9ee83d2707c47a0
9ad121535e249520d9a0a101f63e3250a5028d7b5d83476cd73c4d5f56d45999
d9fba5bac975f51fd5afe39b47e07790d91e6b09f8117ce0dc2dce36270d4944
7abc07485fb73088cc05a9c1f10e6fc8bf3335fb53ec903564558e1e449266d0
b08ec652dd90897fb244abca6c882d63f057aa942053d5393f4a6cd86709eb30
e2d4e87f172162d53e40724fdd79da72be9681fd924d316ca42a706b3412a0b6
d19ff68f3a566bea55e8281dfebcb9c79dffd43439343a9e96eac649f53c1dda
e39fa57c43000a5073dc065b7dfe42a20f24d5477f549cc211292f61f559f7cd
872d4bdb74a465189b97e978d88379d69be10e651773ff56d8c31fbf0290fc8f
76021e554afcdd6fb58fb99a8e970f392f60412a8de129fa18b5615b4ec7f055
b217832e64a399447a8c5f1a14915e595cfa8367fe3ebe9c223009cfd1274252
ea58f09a12dcbca9e7669b3060f50ee673f987667199dc05b65ca9bf59fa8222
c4de108b23ccd49cd26d4e53a2ca20c623fe963834e334340325b3ce648f7dec
d969def439f4b176929153bd9762604f8ea402e9c7ddce387b7ceaf516d58e5b
4d0637b7f97f6ee03c18d5d640c5acf3ba56654fac509066d657c4f4becd626a
51ec5855b3d28c3103ef19d2a4f6caf7431ef53b096adc57d59120f2fda7188d
4b82c11058e9a228e652bbd4d947b1fefdb2ce032543d9052f78b7a69b9feede
abdb92154395de25767907329dccdcd557c22d1af2964b4648e16e8ff468143d
85c6908a3b3b36ebb27dc5280710c6be875e863b333fadcfe0b54bf83b56757c
13f7050d05b1b105b8cb3d70fc28a5e70adb1032558603e5b210f47dc4d910bc
2c7f37454721cc30aa6dcc002c0cad3cb55b58a7429f36f523c58530f2a537cb
b7ed66f92f5cf04ebe2adb8c11bbd12c05eafce882b0162d1d3a014d1b46265b
3fab57f34d6351362d420d51651e3e6afcff1fb6ed1bfbd4cc448561b6aa5a80
cfc4f2b4ffe288890caaec744454dce5c0c4b4d39289668761704a339eb17743
05314ddd1ad41a34155c82133454f980e5f368095562e5d25f5d20e085250406
eb40143666f2ef730563564db44f717f3e3233270a0f68c74c84816eae1babd1
d29ffb32235bcdddf00877c0bc7f127fcaeb66adde9c84f2396d2376cd0ac57a
67a927e93f1af075e1b35233b8957395e7e74ae7a6bbeae43da2350068ca1c1a
5e47bc6af0e8b48cda05c92375cb445473566a7fcd06c836290c6424909249a0
49d272452b5629ad88d892cbb76c3d71b8233638a6f3da8e752a8efe5b90be2c
cac609fadc93f97ba620953b6a3a2ed8031328a0006b2d1f51b3db8296f372ff
0bb031291c3283a1b310050cb2ffab4e051200deb9c58cdd1416568845d040cb
e756a18d2bdeb66387d7ba73b07a57309ff2b3534ae083668b82f0df89808ac4
b909a1fe497e842040390e528421492e7d9a3cb92adda2bc07580f3140161d8f
3d8135d24a3400a59fe216486ec1efd2f777d299607432a6201896c3da06ce98
2116fdcf14031bd00029cd9864001103eaf1efe3bcc8f5999d2bf5d0511572c0
fc819111a78a0ca02c08e82a1b40bbfa8090eef782581efd4fcf266035343cfc
bdb7b2579f0204163146a526ecf7b6180bc3dbc61361460457eadab7908b958e
ffa44f6a2fa6acaf7a3d7d7d757946770a8d39f8cd131e2a495930b41c408b0f
2f8fc9a29fe392adf63cf59b156c48dcf214045f28e7fea7ab5859e932d9b48f
52743041410baad5c366c4d34797d244511d6f99ed75983a28335d3d370e3ab0
7a495b17dbb327a1e54bf92cc7b8a595ac32d1b06a4f0bd8e3804b2012fd3e30
08d990b5f687f35872642fed50b00762bcc6281f8c9d80e2e005a2015c9b3a96
4d1887dd247c0c65c6eba3f465eb0d4c37869c07055201da7c3ba9a862ecb503
8c7196ce858ce8e13629e081d807c406e2f717404b46f2a916e4e19ed7dce758
86194ec630709e67ca563b967344d4f24094ffc3aa6b0e3cdf2132a82a008e57
e5ac6f00e7282731325f6f40e0543152e2fde5992308b523b05c348a7c688030
3c7f59ea887ff6330a9775fa3509f8039e7864e00506de45700dbcab904688c5
8b8a6aeb9cce86efd22d14cec2a27ca068fc1604a31c0c41ec87f2c89bc2e245
96875f7e398e0bd2a85eae072bfdbe0c8adf902fa0b1ffca1af9689d29da72ab
5e6757803362d0157d242ad42753f523c1ab880a3b31f68d978e070266b88bd0
5b044eab881e1a7490e16d281e52b25600939727f61a33d0ab4e2228098f6199
6e38aaa53e9a4a317ffa6bd2bbc2e22d6d50bd4f537a84ac452fcbbacccf1ad6
9f7fe6624af4966c003fb1455ada66085315b9c0f4dbeb2a1cf9e0c171cb9805
569c560b26d1862a86bc2666e7116736fba9d69b4d4941dbd0cd6d2f35e661fe
b7d4cf3bbb7de6050e7ba0296e2d36ee0a0a07bf11c05b6a8be5cdf62424e685
74b231a0926e78c15fc47b3cc9eb9e2406fe4ed48c374131649f38c344bec73d
75ac75803223b9ea32f1c8f886401962f7a836ed770c298e1ea4cc098df9b916
b291d0a8c4e6b5fb47bd6396330443506a23b32228a2b797255cd67c67cd9d2d
d9ea190af491e9a6c85dbcb031358db50fbcdec79f8c92ab9146da9607c43829
fe1d4f61203e9545bf8c682870a79bb337239196aea5bd39da476c7bec3cf4bd
af78640013a49603bdba213a7c58acd2095c2f2601d345a8f5f5466dea632077
2450426d5b96b8c3f2dc02f7399700ee29032e7a8f677ac6b70f4f9971221f2c
b9b62433c54f1c70645b6be8f2d5ea838860e4bd894cbe213e3bf9f02fb4f917
edb2baa304dabcd543a1230e814f282414fa0f706199bc897fd3240af076cf5d
7a0c6c4c49bc174c205a28a6f78195c960a43eb3c37a09ffd05daeb2583df59e
7c8d273b4ea8f36206fb7d7a9943e99e6fa2ef7ea8ff8b207710f8514fbe7c63
716fddd7a872d1574839a821aeba962fbd96d855634342ecf67723ecea4996b3
661cc7517405385eae7968567e9a2714c82bfba729115904a9385bddac3d5d7c
f2f93d3c82fed81dadf625effacf8d106925f015690c0f566e2b76cfa3ddb6ee
00c44dabf1c32909fa9db7579bc0a658a44eb0ae91b702bbd76b2b0a3aa921c7
be6319e2a5d6ea3a5b6135464d00f2876fdefd5bb62941583539619e2d67e7d4
b233a3454d023f4d5a30115766ab4c019a0ef1e2d48f7fa1119b0ed5fc9e8eec
375e3dd2e282c4a8667378168f7c7806be5ce73a7178be9e2971e2fc07ac4261
a15d419d60fc4eb65682e36bd963c888e7ddd5bb5a9c02a6739fda3dc6616cd0
68f6d52a9387bd1d3b6fab43f5b8c84a3261de72ef328577662743891f089e99
9f2e42369a531acfd4b88ab478d0216fddcc560436acb858fe933077bbcc9e56
b6f7a23b434d311aed09386fa32c3cde2bf42b2c282a6841b84b1f99b02fa773
6a5914b75eadc3b1f93778c8323f97b857475cce58a5a60dfebaee9fa96ff328
7033ca52ccc684ae4fc2e8e5ea2b811433aed7bcd7afc0f70ad93ed9bdf194c2
2fa3be0103356cb3ecfa3e6fe0f152f9d8a190dff4e903331ee9f4cbda28c10d
6cbfbde1462c9125151a718719ce3a7041fe46af1362ae2818df1de9f64838fd
57b180c4ff4ffe540f003de00c6f0f6a19b3e74feb05015f5203ea44838fdac5
c6ace0f422c132323c95879169afdbc85f2b5c0272bcfa2199339542a00f1c33
fafc0a89bcea19b5a6bd8bfca3e0c898dc4d19393a9f547c6a78ba09866768b1
205b4618478284c218d7da7da6f8ddb1c743ad72b4c49daefe4e2acb8de86580
58d54b111bfa518549fdeba9807510086913cea339bb7186309f8464085a56ba
186dbcbf705a214a1e9b4127c851e922f889cddb06e0ed6d5427ba4aa21bbce2
89c754130e6006064ebdf9090dc119322b76ad4d8c95f6fe78e70869d7586613
2f3f85e828837c2baecc24e8d21b207b699615d41d063e3c8f907dc558cd9da3
2b2d1f4d44b17a318ac0805b0400d104935042f16618d84ac07e6da0ac0ca65b
e216fb63135b9324d308ce8aebedee369fe76780dfd8c17b2aaec08906e6e7dd
8e44ef2f7ffdd11e0280bb5267bd000e372b67e5e3a76f64acba41e1eceb12b0
edbfa514598b838848dcded8d838f6b4bb79d91f286fda9c77e3a20636502358
cec4770200c5b607faddac3d7e95890742077b53055aec556a697641d38d9937
5daa07af7480a1557483683fd142eadc4a80960b7a700ef56ddd24eef0053ca4
d1b981e838c929ad21d17b619eded2b642ea86187ac9060f7261d9f81b8c0a99
721b331b18ec17328508b9deedd40fbae9448f62bccacf51a601f21813fa7ac4
46ff859cb1b74da3fb2056b695d22d97cdb31e647dc92b88682683b3ec3897fd
e4fc5f2ca72a54834619a8b8097a85aea597e7748e8dee6335222c1f6dba3fde
4405e6c204f6d2669e44456e17725c61726b0a6f3c6d996dfec9925d057a792a
7b67d8391176fb10b699e0c2cccdb2691f5d2ab13919e7f16081ac8bb861cdb4
0aa4814da4d0faab76382e5dd4766bd187aaa4f572e3263c8d091b09418e2dec
27ae424f7cfa63770a53f052af98549f684e5db9dd3625e62a4fd8142f0ac837
d81ed23633e3e449bd49441088e59fe5cc3fb04059248085ddcdf30a4eddfa99
9062862e97bd49127dfdf18fb57ae220e771e5a19c8fcd15c116c0e8c105141c
025de5c9591286814786c18a4278f56f83b00bc9277902c91d2f066a5a1ffed6
253d58d0a4ff767cef1c87d887d570620d46aaea5f6ec887a7f6963c66199371
7181dae4e4cbb45fc7d647d1d643d2142ee4ec66dd2b015589ac429a506d146d
02f4e58752f5a23bb37c3c2eaf6fd3fb909ec7b55186e12c37eb25cdfbb71c79
9ed551e5607b8c362898d870b3e3efaad2593a121c8082d48224418e12de8157
955478b0bd115a1f75a4a76a08623425b7b9505f0bf4847e9d49776f9a35807b
0e930900a4e11d5a66075768b200619d60507f5304160c06a1cba8d0fcfa2745
f7dbcf9587b8c22b5d9f6f746310b6c97a79a330f76a3062a3bf252ceac444ae
4fbe48b7226a649d49072dc2256201c487f65767a7884777f29d6bd8cc16d240
55e4be1e45de9113e3b313d494d6ca6e57ca8dde281ad7ec183fff7d4e0f875b
e183f7cf5221831aa261bfb4c863ae6a42682ecfd70161f052e99e9392d76f0f
877842ea06774f2b97c308310a7e8dee7118891840ba12f2e2699c02a620baf9
68ace28b7b37760476514eaef92df77878f385d68869dda04641fd98d75db2e9
5da86903cd91bd7ed16e679e8c33ef35e0e3d714a00f65b9b52b9633f75c7812
42d93ab038884f3b98da74735d3982a55f73fbb7c2a245b1d54819088e4d564f
97e6b32238f34a11ed20fefcd2f3559c168cde213a53abacef444fa499a3e837
b7fa95c3d41fccf37ef4f0da9a037fbc92264ada59f19ead0e8d2d117ad9be68
6f0b07a41778573154b712a358c8819aad7495e05cc17121069104c1e49bfd42
80a9ece16d0b3807b36dedb732c88cad4fd16644bba3b4a36d286d4bb6ac07ac
1b3bfff1acb63f00130fb314dcef97d4129f52332014a817eade62338ccec7c1
73daecfa7d68dd996c59563951701477603f2558da0d59eb344b1c47a1c5eba5
26e454c13f1807604480e40a513f74affc51243b0e45f607f10f86dbfbbfe51f
62813497bec47f90898c1225aa124ed082951515856d48692cb9afd01d30418c
d6e2e57abbf7d777c90cd7f530fb11f37092174abd4ba6b01e17c020a84fa146
e5d2341d9c043da18d75e170b3716a101754fc2f3a80b9120a4cfdb3f74d8406
374dfba4d56010baf334bee66727ea243b42b8e1804b8db0cebad714a252764b
a1892c6a0be01912092fd2a0c00b25e473a272cc45e0e0dd12138fb14311b7db
dcc10030442c1042b6338d72432b58ac9ffcc3b26a8b64c2a157d9ea305c7110
229a02a8e16b4a52e5aaad1d05ecf88d84d04115b5c6ae9a786df8088b81b7bb
a76d206eeac8ccd9416b0afc7b212e2df993c8226b5e8d0ecc5902be2e1f888b
881ea9a8f349a9c828f6ed22f112a2c16070245432e19463c6d30069cac4d4aa
53331cba1885fe19dc917bbf673148b53034d6c0a7e0a53c4fe6b1f56a88122b
154425ba357e4adf77cad0a7faaaa3e69cc5964cae4538ba8d5a0d07d1bef90a
74f9c828b59d5d759a3e58a46c6d6a0ea3216f40bb13daac4ae192b05e6b9b25
3cf126e211b3761bb68c68b911c055a247aa1458f728cf9360d4b6935951f867
d5c10cb409b470afc9d1e62bd674653a11ca0fce2369cda170b2a8a5e271f57f
ec87181c057516ea754dd33a52216cfdabea8643897960c9f5e3a107e2920f05
e083aefed2fb4ad4e82f8063e3af31c3bb9d35b8ddbc7e6daf7243c22eb25a3c
731e1400705e7bef2d010a24a4151a6f192006cdc26176eb28ce0bcda0bde9be
791024af737ef09b1882d1f7582f646ed3eaa3faa024542acfc8973419c1b5c3
6bd4b14f6dd7865d759cad08768469b2f39deeca9511028e7391820f71547e5f
58507bfa067a671c1af78933426d1b24e5dcdd66db502fb3fa49360a24ee6af3
81d7f337b0b0e065c57176c38e51bfa84c38c1a66b82b49fd9ede08a2800aa5b
8ad6255541b39bb2f778928aaa1ad2af79365520a154337013afc3a6b0742ba4
41b480fcc03cd0170840053ea4d349a1cbd15509a6f50def1f53818f9e23a7a6
a0a828666bd8ae61ad7180f931ef00fc2c3f34de3997442656dcb18feb5ff92b
4ac70774dd926d0318a998617e52c0ce61a854f6287f32721fa2010f27af45a5
0a3eb6b2a3cd7c28ce09b750b02ed7f8ceb7e60309644569bff978c57acb7b49
c4e56a9df46ab6cc57e6b81ab5216f308aa8e4dd41edbc80fc24c000f9ee809e
4006755c0f0d9e23ce55ceaa1f4bd729ef3b6fbb3c843437701b32c676f77fad
1880df8f9fffda25e8f03e8ea2ab0bdb7ad223eaec75ac797e5da3779e731f13
07f6c34fd99708c188a888b08e08472b69a5ad95dade54972e1332a07d9fb719
e884206e38a49c3405ebc404bdec32f00b2b7d9d3e5c0ab9375423c6898ccd0f
962dd35441cb9ddebaa19e53ead8a2f5e8567247e11010ccaf58acc90d22bba2
c071595447680ce33f6f35e02a5f4a90d5151cbb2d5fe6b4e31e70d552bc7be6
2bfac9e24795d59eeba02fc1310fc25a3b05209acad9c6caadf853596e6729c7
2ac0a34fc5998d567c086f49502c3385ced5e388236fd574967b4b33ab7eb850
1249e9fdd4e2a85fc9ec67879d370086a15114c01d04df1febe00a879d83e15e
1261ea00b70b5bc1313c728fffce348f1e6e8ba78ae59ffd88c0ebacc7d43001
f1e98dada582dab0c8325fd3d5e0c7e732e841a8276764ec098221a8ba715ccb
7dc633066df292d7b274afa317f67b0a5ac5f956e0183ff57267e7a0d6f9c100
8952e2bb686301e93336ea6d8a4e82ada52eaea80c6aa3ace5c5529ced725656
433c039c4ff2034a193b2b7dcbbbea9c07b7a5ffc8788191320bbca472912f0c
0906b2e18f6225e5ce9603479d71ea167331ccc9a1b87cd1f706d5d7bf56511e
155039193f18f0629b77d2433939bdfc7fbf1730f4ca88c39f20d4cee57c0684
0c8e2363ee0023acf7ab7bbb30b8c81c39b7c9ff5e9d97e6192abcc680f398ce
df8fb7c5fc470b3cb5477840b2dc9c2caf5a1d35626fd6bcfef9549bcae2b334
2af4026f85c74c8a7da0feb008abf9422758750081f914f82ba50649c78e9f64
a01f7d59a686470eff99803c7ea34d9ac31f8acf1967640cf0030ada5abf594f
ab1fdb2df21a61008199646cda0b7cf0f1ea004ea06a08f4ae6de2fb70d97997
8932b52bd3fac15380e5b01b2c621e14ed080eb13b457ad181d6595050bb1af8
07f412ff335d0cd9a89aede068c59619a91419da705880c3db53c4e798e45f0a
70ef883544bbf1d19ceaa424d6153cf96f06c1ab3aca880c83debecf2f126641
5191f04acd4b34a388fdbaee54964f99befee3beb2842407ee96b8836a615468
e347732e111ca8c5b0a233d24082baf9d66ee529d77df94246df955373c1c694
670d41b0eb06478c019162e955b4e433afd64bc29db10ffa1d4864dfb7d81512
0fd1ab3ea8c9df3978f75c38fb2ec0a97d351b0d1ffb0d32e3027fa4a76c00a5
db2c932a0746bf5b39c0c9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueXX 5000790 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685940729e6e22f4be0e08c6505cba868f7950
93f556b64b808dd710eb936d3ac83e5783b5f7e56d363a59a026a5619a357d21
c4e77bea121eb24b09027d1aad93158edf912940e91cd2f17922b35885894644
7773730bb19af9e70453e1b78d5edc123b273a979891d6d5e624f4a388f3897e
13b045e34b4ee2f5e4fc5e996d3549640010c671de14d18b0b3cd300e57dac03
22e59bfbf7b29422230870f5897fcfaad4b50c7c1c58edcd119218163d6f6e56
25ccb882db7b6d09a1586508e8cb642a11c29a46915e4a96e282079cb21922c1
c2e360b487a45302fd22ec8c5fab63e54b5e844d4b17ca2fff37c69c366dd72a
d02922c14c0932f65ed03e4219c117962edbad2dcdeaa9c10ce8af38a4ae52e2
b377245b0be19a77d6c936e7530cc4d0b78d0cc4a92698fa2870fa54f2d8503e
2d17b3d52fb2febb09f2b2af0c2a1892039ebe19a690098799a858e3d39631bd
6925a154d161df3918074ada6bd52baddd0adc3f07e2d9f15e27cbf7fe8b98c4
07205c811121fa91e059f2f99322fed63f359ac9da97aec383f067f23e5de331
51e80f0a88ab50fe8fdae4a5de93c1ae2fdca06150b37246140c0e87cb2325a6
0d2349162ae3ac93144eee1e665a1289105318fdfe86b6e76251cb25adc967d3
d0b97fe5e279e1161736ab22b4ca510b964342383a840defd38f96a7280e6ac1
34e48d740607ff2e7804164a16d47735864db8463a486ce4314ce68a4abbfd0c
1d8090a1146e51c1147146f1189098b0ac1b31819e481ca297840873961ddd87
af46c4d818cc252607802320dde80926c63221841035992073004f7dc1ec8b82
581e2e62ed4d0cc3ef0599b2dee151270a188a7649e96e60b4578236e03bb332
6e18e077fa8af24e434ae05a3139f24b6da32f4ae82a86570b3f933c7c8ab503
7809a99ab190d89e32c8f9a62383c0b3ef7ec5822b4938ad704a28f53c05f078
5d4318b99d69cff20e26eec9a54da7e326e5067a755e4e029019ffd6727cb878
16b3932758dc50e6f38f019d44a0147e654e85b30763981437d8e7541ed5e973
0236897dd964146e607c11b9f9de34723149d85cc6be6d8cddd1008fa32aeca2
dd831769e8f71777d512886dd8261ec4fa307943217674d45b2c25f51cc4ff5d
c6ebe0f3d905581ffabad916c8437da2bffc53f321637572dac2ee15f7452af3
980a84a3fb76dd66c1ce6b6822c0d14ad11760155ead2c3a16b0025e77d92860
6847ea5825e43e419184cf9005dd09899bf8caa71b69ffc3fd78a48ab6ad66d8
bdeed1b005c2f4fca59453c073883c2b0c4efd9743c9624ee0acf156a597dc2a
cd88231eba166f288bd61d07b914da6de0402e1fea1e28501c6ff3bf82e5fda2
1b768b212e438d167c9683463506186c90b63bea8795d027513b18e5ece97be9
566d00af9deb081d529c448390cda55c056b83e8a132115e5ce7e02df2d98eff
db5f2f121379f030004344924957bc3fecd3d1fb5a6784adc10362b21229f1ab
a127423794e3a787e9938bf2b8acf34c7b9b4fbeb3a4b54c6e3e02a4372cd484
5890538d59ec174d6224d353b9a22912bd1da3c542086f202c5f2c33cbf1bc17
0feeacc95c1e895ce711d98178b447f5bae092fd49b0c228ecabe035f2e50169
36d661b6db8395c044cef10ea3d7ab228a32ce2d92e2acafe59f9aec758dddc3
27b2b97b13b497c584678a25a2c8b85e36bafc7c094c38761cae9dec43f7d342
8761a6205b9de0034350d37226db8dc71b94c65f3224f34ff1b1b2e7df226ae4
d02160250343571c412c85d0f70e59b7da14b4ba26cdab3a767eba054a2de50f
96179e210e7806fdfe5b395c615042a36c9892b8712fdca7fdef3e519ad4eaea
b346d60befd65adfcc42210deab2b5ad70b8bf2ccbb2aabff1f5265a66d6b786
5caf8815d2896b73b538c571ced698df77130082399b24b2e043174bd743bdbb
ca7bbc71c52898fb7df4bc5f0f1e32cc3ba80c7a3bf8fce9618510b798f6bd42
422223be956558bc20758755b0ec33911405f4058d8588719f1e4e82874df067
e287174d44e5631bf680628c359cac6c92672ba3e481a650703a4af4350e949f
d3271abeef6bdfc8e00e704619000be27f8086ef552b9d56fc5b1e7b2267d692
c444d1566edd58e0d6f89c2491f420988aff165c8ebc1c3a5ddf413af017cda8
ede582ebd6e13cd8448fd61243ddd4d430df589372cd61db93fbf46a8147eb44
b3ed169e32a2bd665dc69e98a6f90e90b3400e5f116e52f30c72351a17027482
7b1e2d8c7aa5e2ea69986c63c7418b2a56912e66a276d83f089a970c800fc2e5
40630b1f30406ff88774ddd9fd01a04c53b96df06b6f96525c5bd7fb17b032fc
450a2f179c6639ff8740e6cae1da940f435362291a2455b803487bdf1ae7b0a8
00e38d17c424287961d0603a1e7801fb06ada0296e2d36fab6541cb2ddf181e9
b5a615cdf341869e3ac94be404a800658fcf008cf65bc8e77cc007821bf15b8b
db25b7eb859abbced4cccd160e3ebebe07c41cf3802f3f4458827dcc0dd1ec25
03cb4622906f26906d1f317c4a4946d9e283b77c6f07b7294e13ea10c367ff53
9057a01c969c369aa4e4b88f4d0020318570ffa1d0ea9d8ae20c53fcd239185e
c18a302797d1f73f586acfdd152dc1cdea993e4601c5d21b99ce84a86c004753
364256659103982789d04c6a709e0d7b77081ef88457933bb0573ad17ba8e351
2da4ee158d8279779e09e0a5e45c25eaf2760af9aa8b200a3bf566dcc0326147
d75a4509d63e909c6a51fff9748bf15440e94ce685924978814176a811341c27
8ce8608e634d1d64558b0a81cbe6315406663d873ae230469b5b702dec48fe8e
2e69ea588541149b10fa72904807cf9b6dde8682323ff020b6354a5b5b75d72e
a8467ae799bd3ce6392609cd43091a5d2ec91a69e25b24394ffc9e3f77eb4820
8db657752079f6496bf0cbf1d88bde340309cad68d17a022e52a5e1216d45f6e
65de6f052ebac87cb265a14e5ac968adb5bdc8cfdcce7ead1141f557235f3271
9bfeb57a310b615040277989c9d51664a1d9c88bbca01f59cfe83b144bf8cc00
c7e99140f8214b8245e9f8e6c8678ebbd059c4396b27ddd2f562c365dfe36f08
784cc599e7b41b2acaf21ae790415d934080f19af1c6aaf661a46e1366065417
94a125c0e7d74036714716fa6ad413e139e2944ebcfddeb49bbfa30f5bea5c2c
402953e9bf2ba06e951170f4c019a27cf89b07fc1d6e157b5559e5fee5180134
c98753a030fd923147a338e944dea0d480cb2c132ec0163ac436fe703d776716
528ce2df63fee50da1a8e295132de2c059a670d3562bd2909ac40cd4c50474fa
62aeb007f5cbd45f4249d861166d5ad03c37489fb1ec9a9d8d1ff6c5f4324e86
afc2ef249fb1a66a6f9a368afcf8c4000eefa7a9fa8a7d50c6fccf7996d7c5f3
f7ae94961037906f341b945a9fa2740078a0d68c2a030e9b711254b6c792b39d
99c434b47aade2ec640c329b693a28f207d1d0c512fbd6f421b17ca6fd644b7e
13db339f394b460eb0867eb6901725c2d24de82918dacaa56353c24f6e454d34
c7633ca00d9efe0c92409e6a39426d51ea2f592063fa9d59f22f1f9951674508
3735dfe0a2d626a328a965db26ea768b2d396e2b27857bad8de200a71d84db3c
aaa3cd6d1344901c16debeedb7448ca60f1a2a4d706f3100e35864b3d2f45de9
547f477811b5d7404d79ae8db3e3a13dacc1f1c58aaadacdd67aef02498a2b6a
7ee0938741558b02744e63a7f058f31828b072f7f099ce3b7d1dccc27940df25
5ebb2619f97adfa5037c53aaafd64a758d506067ba007db30d364e3e4413a9fe
61eb4c6a158b5a3b174c63bb112921ae666085d6784a899831dbe501a88f37fc
ac5003a25193e440baebd0d27412639156f5e5fe5d873935da574ed26d60a048
e4eedcb1881a26801f718778a19504af9c461ea59c7bbb79d3df2eb14df70b5a
0b27e2b89667f21c6594fa4b327194c7d50392c97c60bb4fc417baa1751e2954
2d1846053ed2d19ea901c817cd1e0857cd449b9c1c2878184c0e42f58982c924
51e902654a5104b4f02e01a460de9b2946768039ba0ec88562684d69eb11bad6
a527e3f7e549cebbf6caee440d3d0218602f7e1edb732789bfaeac166990a245
b2ddb0493911af65a155aebc773c19ed56e001e49a9a0c54afa39f109c8bdf39
8f92fac934a8a45337f10c02bc5d3fb60443d72ac6902415dd9904978a348d5d
51d3626677e7d5423dd6edaeb8debd1b01ae78e803af8b9103ad06d2d376c7d0
9fd34a6fed58d7f3e8c35e6fcb907a3b539995edbe5138ddbb9ccab923a6cd1a
734d911fab219b42890cb86911634f1b054a5ac259823c483d8fc51b94f3d3a6
ddf088cbdb469b2ca8b251f16df78998ab923a67bf94bb97233b66f99093b745
9b047d7b76e49744efdffe8b01208b3bf671b04d27b7a9b85f2840bf73cae024
9efc30d21d1ac91cde7be48b3631e7183c233d7c3d6db5e82094a3b57414cb3c
ce761454c810084f9f04f5c5f0f62355ca20143444c8958ae0f168d4b26569ac
958f740d07f1a38199c23529f73652a03492ba56c8af4aed48d2d4cb45d758ef
2d2bfca53295a734c3bdaac9f9fbc5bf2af00b4a36aecf591a4fcaeef92bbda8
3d420dc3b841377dc8b15cbe6ce37186e6abdf7f18911579c250e0b4cec78dbd
76e6d458462716156eeedb3e9eab6668be87657bd16c6b8fb4c92dee069a5e33
009d9e474f4b68835ff218dd65dad1bda5d8edca2acaf12292bfece2bd04fed1
9c4ce19ef2190aed6232694d453b5071db0fe0443474181506f910b6c23f7d68
de8ae7a69a07971b07da601741050d08dfa18777a49bff08878f530725b3beb6
85b7c4751de722273aaffc50708965eb3f6a4ebe803fe37ff68b8cf621a524d9
ee4844ee0a4f66d129eccf73ef762e3a55eb6f76714279898ee8bced89aa0450
470c30022206f53fe8117378130cdc4c7a984aab39a94fb2e8e0190e1ddc4423
fdaaae65cfadc2451535306eb9b3ccdd16c27561dd48bc0048397c34995fd680
f08fbbade1f0888d3f3dc9667e89d7327350e027e60cd31d0e63583c00d2c4c1
fc08049edde0ea9ba5b8a0c46aec100ac309d28d95d29311bb2ec9816b6ea87e
78f2ff863fc4d455c15e28f4dbcbba2a885a48afc999806ff5d2ec44a222bfab
d0016da3deff61036957dd7664e18050275d145826338776cf644ab34dd76ebd
2fe8d77c78ccc6ca325ad9f07384f4d2b63187e01d51f7df19f4a47c7ec87086
ee3ceee1966c41811b762b4d39e02478b422eea33b1ae5bdbb203e9772fd72d8
3f0ec6c5dd33d4c7409c72a7f28b2b1ef59045cf76be8ed9e956172358dc13f5
78a8a5eee23d2dfd68f041a7cbeb37dbb4570aa9263d809ee369f602c4116096
2ac067747d94d63d65dc2cf4ab37370c86d7a1f02a6c050fa35edb10b8ffff9b
235be030256a4503d95d40fa55e821e575a13187cf843bcc35998be4b0816a4c
f9729b973d84bd7bafdba66b50d15adf581a20f43582c9c93224b070133a8d9a
5f688fea850a668100f73c3dfebfafdc818cc3988f19fd65a79bc18617545114
418de01429fa90760175c43056c3bae9714665225ca72a968147b0d9d6d111ce
79fdd96c7f1b6134c69bcb5fe005f979828b86c514f3149eda70714bcb576312
60f9fa57486a63815ee4c7ff2bab2c156388b263111f75ebb1907dd72f4d1381
30e1dd466bd13f2bda0fc0d1199e019f5c7f1204540dc8aae1b6d3f165fe987c
a1a9102e1033960f7758ad1c11fe3097594989429791afa3b96bb1ca41c1f044
57a84bcd9f13227c8a4afcc0af355d3028d9b03449c6a88ce28cb284eb82856b
94c65d47ccaf28d27c8018d1f639218e0cc04934d724213f663e3fc5039411c1
cb266b34568b289eaf6836f8e449667141ccf10220a44cd4f86abdd831c735fa
cd10a543e996e8cba0dfc778810bdcee38bb157bd812ea58304c1d6a937bfded
bea2ada33bda42bb11f333c70649579a07ab368bcfa78962d80a3ed497a50aa8
d7648f3c37de7fa09ffa16f9b63c06ff63f0f6554455c38a36b150d4a395fae0
647f5bd3829d055f5f15c94d57d10e87f87bb237b561f3bcd0a576ccde4e802e
9e6ae7b949ccd4efc9f6699ad7f4e5acb953af8b8cb62658b81ae1b486d165c2
3bb2c6518980794de351e410198d235d08c71013a4c94a93a5100376d4a6b4f5
69ce40f1ea0b5ca3d8f17789674c229ff678469041f34adce4dffd2cc9e3d363
b2b5b0b89c74780aa2137331ca04ffce0a85fff15b76eed596791289d383adb0
060a4ae828c7ae535dc0d821285cb22f0223997b31a11d95b8f50bf7431e2f16
1d6ad3d77d72917a865346edefc7a571f010f996614d7da055067b226e2730d7
f94bd96a43eef3196e9e24ceb2414c4f6c508b0eeb978e654ab0d34cc31798d4
5412b21b6ce51184df7c3b04fa036ef848e45bb1977dfc54fe7d49d162334629
043ac367eae2a8c1b37c786affb2a7180dddab4533fc68094b558c04084590c7
62928841fa762d4ba2e0c8e19dc270d63520016aeedb82dfff64f65834892a58
6ddf31814b65e873b0d09a3ac4d7ecc33f502970b008c74d8452ec5fd35ca7a3
d26968fd7687d12498463b906fd895a83442d7cd18c079a6c7727eaed70e0ad1
be960fb8a6d0395d4c75d7b92dcf6448ba4c2d586396fed3f8214d343954678e
160a35fc7074727045678a38d68c0578d7a19196a02870d3af8bcb50e0557cd9
aad9a6faf403c4c9437c8f0e342d5b085072e2fa135d682424b2ebe5377ccc52
b3c989742b87980e71a116ae7b21b9d82c195982c4a01d69f52b9cebc3d7c8a6
5643bb06781e9b69a446c9572e9f59b4f79efdfcb46e6dd65d438fea3f4a8b10
d7e0a57bc324b624b820afa33e2f8d23059fa30eb4bd5af0507aad63acc63e2a
29497447da6648699edb015d5d7fc8b9ac7716e976ef6af04885a0de4e0e73a6
cd626222eddf2930d4ea455d37a4257896993302c03df3a2c7f9cdfffe1f8e55
4d38671e3dd5cf84ebd05f51c1f2cda3ab33a3e220d97e4cbf406cebc022bba5
9405bcfc314b58dee255daa6598d77cf4933e40e6b72f6da92e36f053d04550c
a97a35a08d135272f9b0ff17d28e4d9537f13c2aacf7aae160fbc48e1594d4ab
e8c43d6599cd556126f101edbff6cfbfd9c557d281999f461e7ceb31728de9d1
0fef0482b758294c0dd47f8eb5ecfb1f8d4dd0f9d60618b98d94a1ea7d6d4611
41d28f14deedab380603bb643da78bb336de23925091e220619495d5666f9821
15e808c50b2c118aa6a185bef2104750fd33b21d5f0619f9b9759ba63b79117c
afe3d18795f03b7886c73c786e1360298bcf8cf4fa56e93409d5dac143fcb057
28c98ea242e78c57b708f65f7b6c7f40b0bdb217d5332b32a93a814a64e70b18
c96a518349e35bbe8731cd8a81352e58850152a7d986f1b76e0daee9f0656389
30f67e0debd6f9ea6f181e68a2d48ae67158c23f750fb56a5713b18015ca5151
b23613d6509610f6070e9338f94700cadbe4a727543d7512d5b8352d96b0935a
6cdb19e18cfba3f0815cd26ebcc4d57a7147507e7a1356191922ca852f6440a2
93b209da1db7456c3dae6c77abd760bf2e61e324c0f85b113a53be809aabc54c
f5fc4e8b4b3b40d3a3589de75333b22c5999eada9d6a9e53fcf3c58ed8bd7271
9dc7e46f3faec9bc7e3984d3b2221df07cc853956ec1027d0bc69324fc44e6e8
7cadc9244dca80cd771f4c8b1522b228d43d347f94a5a8ec17c386dbdca2a806
26301047cb1d47f341b5b03d18c8722b2f807fe8d538e724f638a421fa075365
cca3a8cfe87537d318e6f646529e5d0558c84a461df99a0d9621cce7ca68e28b
719b348eea810de84c58b0a1f14dd3fd98ba627bbe4b2cf854830c7efa4a271f
86ec1c34b70e705382c86752ab83d0a60b00d1b58a4e2213030af5bf98b9af7a
87e5a4ad8b4fa5ecd568c0ccaaa32df430c12bd6014c9466f59998d6a5db2c44
d27fb89c7e147bb4b5b38a57057e0fcd54a4fa45c071c3f2b681ee1561817078
536a942f6f3b6b892a36700da626617d9974277932a1de11d1af5a1b88116f8c
af1dde9cc84759bfd727ca62e28bad3bf6e6b1cd9beba072960cd65b92bcbf98
a7c7fbfc36ecb75354c64e4754010d93308d74ee4c1469c420a5305d5fb8b6e7
3c1720b505cad4f7e962a8744b8f54b83c67c0ee9c0c48e50ec801026c948af6
1190c5a93dbfedf7acbbac76452f54115e29d689719f7aee00766a4547d2bc81
adacb60bb70b1246987a6411520c716efe468322ecd2a3cae2df36c0773bb9fe
e8891f35f6c5e0b78878df0126ddd90172396cb2d65479e8d13ebd215ca5db45
9a351afc0a96eb31772a0bd8dffb7a034e80c9d38aeb8ca268c4df6649cbf598
31f1d61053dae48fdc6b99df774f59f13ee550b77cb9213c8fe809bddbc84a77
b2519b41e8f2312aae2ab42bf46ed19fb5c9817f83016683bd988986aa8d69ad
9201e0b66a274ea090b86308987d1ce8f09db5d63fbd00a0aa34c0a1c5d030be
b14ccd0413bbb00fe65b3e10bc4979c17accf7a3187794193904ab3994bb742e
3fc5fdc1198592984fca3d9dc71623e069ae1dc8775d4da748ed8fb0e6b40945
779e611fc5903a842140759e81c1df987933d1e91d277df90bf2fdf91a129a8c
d3df74808aa3063fff466dccbc42fbc8cb304d10bb4b89bb8e935cfb5a4079a4
613dbe90459d909c0b51430e6bf9efafeb46659caaaa87799f170c701b45b0b5
d53a68d99e951c0a2833616f05d2e840c72b538f8c9ee168cdb7ab4da8664364
7570d03fc2f8824ddd47c2d7024d7fce0aafd0b9f2fa9ed67d6c38aaeaa909da
388da1e1597254eff0aaca0f458de5721f396be868ecfaa50be1182464e50a04
2549ffe00841ff5a4ed482b9d9ea042fa77529f0aa341138c731a6cc4ea4255e
7e19d0450695b23546f9e553f243efaac539dc6d25481c094f1a64fd0a41032e
ce02a1bd780a0e8448abfa855cbca6810a1ecca42bce26e54724cc80ee2f938e
5c5b0319d3f0006280424b810219969a360ec910b219d88d51680d40623c4b20
7680a7d1b0e6c1d1a1947db5c998f0c2a1e2c50c8abe420d1f6e91e2a7422184
5284ddf36cb702dbc3b720f123b37e10d4273cfdc35cf459035cf983bf7066e7
1a04dad635889676b1c8f22941834dc3a52311e4b032b36ff19c27910ac56073
71ba038504f1605c7faf433b789e7dd382cbe1f42e1636989dca84a9184033de
10156d5328914d854fd70a329ebb79e5d6bc6a522de4821b0aa8acabce8d356e
902feed90e72f03f4fa8f2e11af06c280ecc9ec7ddd7316725c8c16f8aa155c8
50ed0b158cda65cab4ac2b01b6cbf3247d3eb956b200a8beb70253e7c73dcfb7
a64c89070874e7a4dbaada4e458d993fe1286ca99093c40f9e7152c005e6e61a
2e196625c82534591c454ed1427d53ad1ac467f228684f012a7e8f6ef3284160
9ff34952a48978a1ab3bd7098862bc7392494840dddfdbc2c1097a4115a19831
81b1d53a722bf5211d5688c8b278099bdcd55fd4773b718f9524e3429f524bf2
e58af26152150ede23cb33411b19f0a7a0f0c136882810d46173c648c320797e
9745f57c815d465390073a60ca3246e8cbe69493994c9d061ab1d76ec241d6c2
6d6889e4fe10319fd229c88bfac0dc3c6ebd8bff7b789b9686c30157ef0a0d28
020728d2ffdc991db1d993d593274c87f241eb019732141f320bd2ff7f448604
78e3d15d7b48176575865b2ac88de04fd339f42bb6e63a23fa81983191ae0675
bd7021406ec6ecaf114667e38b7fffd99d332ab0e8594a521338180cd93ea223
8ec4b2c8bbd0a99eb2ca95975d08ea4658eeaab08b30d80aadbb7a1137da3d35
e5b85bd347f160ab6f0085ef9df4c58539b65b9ebb826d11ae61bed5f3db0dc6
2a7515aa626244a303ab449553740d7eb952a1dbe97fe638a0820b7fa3c33e02
7bbf13966d0c794fc3ebdb9a143e82916c1294f8d8c81febd1d27f5a01baa83f
21296e50974bd8867195d79565910baad3506fe7e382a205d9dd6cb77e53a47e
d81c6c4d7582cef6a612057f2f46a04d835e4edc4994f10571310944907d950b
a0267820e09fe0056236dba3a3b2dd85092a35789b6c1064d526a7b36d420316
f27fb63c158ca03631f6243d61d3d58098d79452df4f6f00440f8664fe514066
85ab4bd79e6e385d014d6c60b050bf650d0c32be97689eaac16cd0369d7b5e44
d6d56180fa9c5d05027d21e5a1b52935cf986f5c746c5d2b8d02a2696ee9e134
a8c841c1092f2363243534c145c28272051feaf83e16af6a5476d4fe6ac141f5
38363053f45b56fcba93263a65426328ae3804ab2052a13c01fa7072bdadfcbc
7563467e5f74de1999c1f1b4f55bd530bc04b50ea05229b9e8e77afad971c45a
d5182c51557fd49bc838de3c24beaee98b07fc1c58d12b000efed858052d9e1e
20d6debc032db338f9c284c0ba3d2a8a8f6d10256a57ce26ec1a5a6f1c8b0a8b
2b09f689f5e18af5d77868f4d0f6b78ca22fbbae048c2b983800af0280383ba7
e85589ef8ca746c4ede846c7dcb297006dcb37f580647630210eaa738f69fe49
de17dbb7e494157d7880546225c1d20074361cf07e62fc6ffcd09f995c47e543
e577229d4ec17f82b6a6ab0eb1cf8b79c44faf704d92c3c8ebec79e66025d7de
74267fcc326b91d77429adad04e640010da84cee7d2dd79dd30804522ffccbe5
e76c4ba809feefd1bc7f8a9065746d5c5ee90a16bd64740795610a44923f8f47
8fe0451ebbe54a45a94a526ec00dc71659c2ccba1e2566070cb835e439e94111
7405dd02d7d4cd24adf98d81f4b302c0ab312d98407b4a58b4063ddc2b47f67e
239af58720155b13c04147bf910dd48672068dbefdcbb44a285366e358d0fdaa
4c595efb8573f53139a53ffabfe7bd04d547422ea3af8925138dca866400caa9
3bec890cbf0f1a7230ab107bba7671f6063cfd821766e8a0782dd237a6762c6c
a3ad178981da975144676c1ccf2b41913405b1397d438821585d4387cd0ca4ae
f911652d7099835810a881ff6da3aa09b18f61998060f474eb373c567ea98185
ef691a5b9fac181c968015e53be13e9f6be7e815d5446f4c656af5bb8ae9772c
ae36868694d1a59c90fd1e86572c2f949184a96e10572843acf6466fb7e20fd1
e0e553e934aee4ba40bf0251cb9adfe4c019943fea08c83dd97e8d4373d666a1
9984ea931f07ecca855a7c16c7cf6550f54e0f97a68cf856e25a313c566390f8
7c4458239e8268bd0c90afa5eecb5e263d4f7af0e747eb61058e4b1bcce0697a
063513a0b8ebc9be9ef3fc3b8f54b935a2fc560a9f6ab4de32379b0e90587a63
b60207e323edb4b551c693ea69c70def07eaf34e82d59bec381e90eec3aa4fc1
8848481c65fab2483aaa308aceab42dd2d93545025dade600eb5abdff39e835b
914f4daf7db331c1d2ca17a2ff7b2be735192270da02fff0b8b181196ff2a504
28a69617b4b461a7560444a299f08509a008e478d230921772c2b5e3907211e0
2bb2a29775d01d57745a5cd80e32be65d9af69a45da18428632c577576468b61
069c9959af8561bee5280bab69440802055644fc8c59f89649d7487d5b46826e
6f9f7414930c41b059e2b612f78b48ce50292a0dfba4d47afe2bdd56108f6e56
9fc84c40695e498f952eca6fccbcdc29067a7cef78778e87017b73c97cc95957
689a3c599801af7d6ce4cc1c0c3abbb796a28616832e47a8645da7cd354e917c
0d06e1298290a96370d2fd8ceddc9bc208097c371b6778e704e91ad138669a52
a0680aabe73013da854baa31ea2d4d2d4f33eb4a97278abb928df3765daad88d
8dc57f65587b9e50f6d8c20b9c477406e1ebba5613334a271434eb7213571fb9
848b882fd805e18386c2a31f2c2d3f2c7fb2d8c6578f9136a829cc2942743b7c
83c3c75ba9a82f1460cb1fd0a822c8304b4ca612582e825f33b0ec910e3be279
058fbcb615bf717ea4a8971ac48fc306d516967a925e9b0f9b49f007dbb3266c
88e4314b8bf4c6a0eb88c3b1b99ce9cdc76782e7ddb5cd3e6958303691a461e2
d77388c3b87f1ab84b16473646ef0c11934ac9715df6d272f418c41151d6bd2c
e337ac2bb2008227a65b07a37b2a04d9623aadcc410555dd6087ba3fed0a218f
3994331cdb15a09749f05edfa6b2b3e78475c04d7ffdad1cb59b90e346399224
133a266911824c0540fa224ec62df2ed3381bc96019c099f730682f5fd206604
4c25ef351b658367ced06d1921685105e4aebba717056fc0d37d0ede0e1d0e69
53b461a52dd8ecfa44c8e681e5515a5ba7f1d2bb0e3ad82da251af527321fd25
8cacbaf17c2fcc188d06dae73544aaa4693df058634248a6a610e72e62913cb2
2fe2b0c5ebadc194b83e745788682e3bcb0c03c0e1fbbcf40b6ca997d82e1962
8a8077bd2cde1cdb340f5f6fa60c97a65a857d5030c07bb62074cff166b2e299
d59e63e069801c046810552badb677c9bb08058b046429fa55891628b1eb7f59
5fc643bf17859a33e59c1f208c2491de2679409cac676252a9ca3759106801d0
55007b52d930b868c00d61ed04e3bcd2d6367dfa1ac80d849b822a43248fc02c
fe57aeeea8c8e3f17371d764ec48d28a890afe360447de5a3d90c6be88989b10
4a2e09d2f8ba130177f53e01b54e7b2bf1f0a05daf1a216a52ab1e988180c49d
8a8899080b3afe849cb78545a1ceb99c08ba7bb7d8a8c4d7411c5c3cbd7aa073
ed67bafa92de983f1ce910a089bc4b3fba51e52649ade2054e44e905016d6115
365d3bb2f1010b1e710d536e3ae078f5a97601c1edeccb93c198cc7008e589da
69e1f06f7a0366d64b6bacd9067770c368848375fbab37b14ab2ca92c5a9ea23
b13f67c6cdb4aac01fb445b9d922cc72293c0377083400ba61f36386bdade7e4
42589ac81457ccd6bb8ce6aff2cf257ed83e467565e60891f3509f9c25f71347
28e64fe8965df7dd34263405db5b049c5cd95cef67c44acb0bbe14986ceae7f4
3146fafeec4f212ed7d9086c9710435ebfa8fdce6d01d3fd2bc683082d0fdce8
b5348576d779498dac3734fbc2f34a848491998e91bbe3646ae2e2b90884fdd0
af84c627565f2aa5e45fd2198eb094065ce6f14f578ea3f861af5f1e4abad281
f5ce69766b3af4c06619d59cca9d9b99df8b6a43b1fa399c1210bc13ca844c6f
c9344a271c28021194e391d5244e1c0c7a9c71cf59de3a683d6556b6536d9ce5
4a09516899b4c692fbcba1c665b17cc8e1c27c339b0498520d1c0d34f9686425
21c49a52cd22e57c21dc6f23e90ff8690fb538c622f9c1ba0aee86da30e88af2
07dfaccc1ce1385cdf4dab74631f6d8d830fa6b28a48a27bdf19005a1c4089e2
79d5bf99f5afd9d0bb94c64cafed394163d195dce6924d7e1082ec67591b3058
4423dc1065d70d7fd059c06784b916dc57d06136de1633273a45771942b9cd62
b9d7c0ce5115531209c9cba0f72f5d37c7d86c03b69e8544f976efa4ff417964
2de178014b03dc73a35c094115613aebac3d9a4a1fcc6e2b7695a71f3c3e8903
3280152f2fc10a89be822168ce65f50fbdf331484c43869c366616817dd5ab7c
2e5a7838570712ed707caadb4503990b1e925040a7d316899b7d00766292824b
2d19011159b9999bb784dfa562dd3b353b23ed20c9203553dcba20a9bbac70e7
c442d9d329744a7a8c53c4ad0422d455dd995f6cb79f8bff4f3cab4bd457bce8
f204d8e876eeca2f4e4a130560de5343fadd881db17098dcbf78a2d6038c7520
7810bbfa1946ba7c88e24ffa881765b68800c878162cc581f06d9bf6a9371f7b
c4626cf4bc21373f85e666ec94f0676b9f0ed9b791a3ceb5f70c99d439370eaa
8005eb3001fffc7a14835e6b582904e51f2edf01b0e58bafbd954e60a625427d
4a624fb6e624436c9cacb2958c5da289c0737917bd0eaa3f6664662e2a883ba8
f2484c03d23dc98cf905baf326f272011b72822c072dec3865d693c164e90dd0
b540759c2137788ab2a73acdf5510087ced38e2a61bd16aafa811422c5956427
2297acc8c7ede94a3f0bd3430b92dc635185e1fdc70131246d205d5e2c9c5add
80eb5e897b29430008829382f6e03712d293ef4505732a0f549e1295c231266b
3507a2e13db6a23ed4e0ccc1aa5057b9511de75f394c042ab11d245f3ea435e9
d1e7a68aa9e7a5a98e1065c5666ab96aec596dafb21f7b334b6d4e3c43facbf0
49efe204c5ca9fc7c9dd28008dd7a35a10214e4bdb3f3c65d46f18bf48f33462
f57fad507f833f9e05df4c724987dfa5c65726e2b94730422f7a1a910b6f00f0
d33679733927a4463b435a10606d318fc5fef69ca5472aaa41644d64b39796ab
f9d910a88d745dc8a872fb8ab78f991488fb7dd4a73316134297a0c38f11bcd1
8ec67765e999503bc81cfa5fbff276d58a21104d3883f4765c262d953fceb13c
c3ee91d47355f562bed682635d0ba0d2ca9b57a618493213fad500326a3c0a9e
6885d5908681aad3eaab29164c6bb591e5fa70f54d33e3330ca6a21898161f07
1437953688ed73a73eaedefdcb308621c9e6212a78c54c701116b8c71ce6cdcb
d44d230e547ee8963c4639ac3af9600a0b5d0c3dca722fbd943fd1466dad8d1e
914ffcae0dd0ff87286f9ea13a3f30111b6fcc8f3a4a4052cf113e5ccd157e2b
cd3dce4c881f74b6cf50000ba531be58c43d03c9685ebe0ae9b766d86938fe71
21d385d95e8a942b6d10ad3ba7b6556a8b876d692d67dda81a7dc623b9a715e1
f11daafbde2e8678ae282ad89ebf706ff692e8991b0be01d47d2051e537ff69e
277e97e76a6b6a8a1e74160b152686f56b702e681de2c922c93ad88c8ec00c8b
9b1e6e3c9ff28f43dda2507a67d2c868930a1bf8ea98e583c143135c10b8436e
1d26ec1734695d101f2a63fdd92655747333817b2cfd417a8cbd7bd6fc0b69fc
168204661bdbaba7608058029deebb1f8111934594c9f1ba03a689ca449a2013
038832027c3dfe0728de1fd7d38295d3d23c7e98800476153030a1934dfaaf3d
5e77a531050200bdfbdbf0231041c2340c8c132ee76050f68dbb378a7b616158
c8e0b84671082dd6895a9d8e749f19e0d45c84b06a3db79f3fb45d5cdb7b560e
ece3025b6f407b1147b1f6a3346e88cb26e3890662a733a486e61c12ebf243ac
cd99c3210e64a40ca4d2691dbde4b7b4d597245ba1725f4ff3b24878f8af0343
8904ae2a05c086688967b10a409340ffa2c261d374a6b869132d4b1dc9d85845
7aefe3c3e82f1b21f04b197b3a4f1986f52984dab7080dfd49987a9b92e265cd
538189a07b4cd752002b8da360003ee3ff44d6bc519d16e611c1879b8b5b2ecd
e18229013b3711bb4c30ea4f3c0caf69977b6b2de12399d08ddddd62ba4ebf09
c5f5e0144ed23f49824d880fd4c704b1b72e31d1b8808e811fa6b1088e9b8b47
7cfe83532d5e98f9db5c59dfbd035a27d570e66d32784f2b5f8551d04a26309d
6f858d64fb7123372e4afa230bcce89abbbd09350cb2cf2e52b0af5e70356dfd
1f234b8208609c30f0d676bb03848205078dc500e0e9d9f43f82f20371ff8729
3f69dc9f7d8537be961ea7e51bc5515d618f5e5a1307fcb54d186c211acc332f
d9835d090681cd9828d520e266e8415c1fb70b156d53774a09db484237db835e
03bf5a727ccf1ea914e6c433b5feedd5be14edcc636fcf855fc151a3035074d4
a995d413f7a347f6eae2ac9a5a5b9ba7be914fc215703a7fdd7e50b018374b7e
950c54c978fc09a5850cad9b0dcc0e71edbc5df50947f2a8714b79aa57ab8114
7b36dfb5488b353ef4a109bca6c77044750a7080f8eee12309e95d821eae62bf
8b69b38f1054b2ea6f06e7a3d2ecfcd64ebf3b9ff64018907faa242d75adaf19
0498516c47d8ddec81183886496f15651bf31f289740bf40ef4de9c0210a8840
2c63bd3c32a18e47ff09479f9663d9446791835bded8f90f82dca709c4abe043
382a31db32d85558041d886c779e2787b517579b9afea98ef8825e36b36aada2
d95bde2c3469452148133114939f258505e0dec06f23ab028a49295699211780
e2c9d5f729cdba4f60169163983fcbde2a11e2c8765a3b9cd17a6bcf261cd9d6
652e80bf512f63c01b0ef1e7782de48eaf9762affd0c8f06a14a01e61303bf91
31c28b6f3a79f1b109990f5e72237e4c521f510bbdbbdf4846b48689293f455d
88bef7ada2a3fe8502fbe4b35f921184312db53ae3bce027b7b153d3164d710d
1792fa342cedd3375636f55f056636bf5c721e36ada5eebc080a779fd0bfd2ae
4c4682ac8b9285cbb60c6f90b422ec80561c9be310027ebec4eb9ad63ee3855f
40dafa832357e40a8bcc8786ee134196f35a36f96f10cae4f21204fe4a2e4a88
decc8427d1f8c64105acd2600efa1e721a1eed1cb78ad86c620603f5b558c1a5
46f8e2eb681a7488d390c505027657960a91ca0847d5bef049d96583d1c1290d
68e63e8fb6f0c6777114da1f
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX8
%!PS-AdobeFont-1.1: CMBX8 1.0
%%CreationDate: 1991 Aug 20 16:36:07

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-59 -250 1235 750}readonly def
/UniqueXX 5000766 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be1f91da738298311c1360c8158d61cb73427
3c21bce59b0f2e1d38c2fbc0984ce6a04f5d3bc84e2601397499a981b200b307
771141805f1f5cd7b12befe020f7121ec103dc2baf17f0aca1d0740c92a8dd61
12fa9c0d30cdae4f2af757b9f713c127d6ca02ef315205b81eff629104b21462
17d2b0f823133bccc80c9e400d6840db5fdf828f845313290fedee040d34f309
8f1b5a6b8941c81d1e607dcb310b14169cb433329994b4d1ac1b491e7422d518
2a8faf7ed3cbc2e23c58a2e310b56da54f51360556d27d58783694c51aaf62a3
a2db91ac8df80303c35cfd503341005020a5cf501fc0b64ff4f497951df6cd50
f00fafb04725d23bdd36616c7c06cd9052305682f6b6e521882922377b4979a2
e6f031b91b2a86d8631e81de17f90158ca05045c3b823da8b2d2aefd37a32728
45bace7594ceaafaecbf6140212789b3937a24cdd8dee327c934a9b0e328fd83
a1b535d9bbea6f0204ce5ee74cc30769734d4fa3dd0cac3986510c99ba062868
9285146cbe64caa89cc2f18a61d924e7f312fa189e0ae4deb913ed1cdfeae61b
4e0fe25f2775a8b2edabadebab4eb2ecf47258c1a77101c810cccd3b06633907
f765fc80bb1a2527f8a59c52760fffabbbac1d65a11708a3bea4557f24536773
d17dfd0eeee4e22f406e04765cf582d6ca4414f2441b6ff463c56018e44aa2fd
c9af3f0480da99856aaa97e56b4bc28d9a74e6d74e5faf2016475d2991256254
6b9edd4874e8a3acaa1630376769be1149a2f5bab8c18a7d7d3a1bfe32aa1e53
05e5cdddc7ae6ea0b7945065d40d736808683107ea60c6a28e64b890097100f5
4da60fd7d785a9159e668cfcb1710f359ccdbfc25ecada02943aceeeae0ec38b
4bb1cbb26f4f5e99aec1e96415e1e2d58c726d576aa4a9cdf17420c396f4f87a
c3e7e966f8d06c0bc29bcb3fc35578dbc1d6579e74da662c7d863adc0fe7701f
f673389c26afc7ce29d0a9a3d5deca370db407c0d01c26800c7241c3625945fb
de56a88b1e260f570bcfc3b4e2d230d5b24a724b16e2d2bb214db2a72485570b
99ae5adfe1b38344dde6480506f860053f73332a8dcde70b703e0f411da4276d
2de724de0bd52320474df3c3b46b9c7562fd80fb2d3c5710361408abe7445f6c
fa87724a37c70a9636da9a63f05022d936435493da9554c78df59bfaa4fbefe7
493ad861690a7b3d089173f2af1d31e6fc2d2150d7c3b637092a6149049dca85
998f4f14e4a7faadcd07a7ee18652e49fed58ce93c70a0bd1c2c393b81161ce3
3b93413621b5fafc28209dd6430498e76520aa45832bf98324af5a6863d22a2a
a221fbba7ee5e1d363bfc039a3fecb4105f0715d7ae8b4fd72b8735c964e095a
12337e5d431f59b0c3271296b2a4b52ebb3774a977935509cdbeaff41f0ae919
d325e0cf3b377835819886b8f4e4bc22e25dd0a1d08385e4a8b7249089708488
2c5551b302b4b5f5524383f0e3772b3babb44bd1a5db5383fca01a19d4e4f4da
748bd4ed62234e93621fbadd77d45632f8a37f52b78f2e5143ef4f9e5ef99fb4
8383bf9edba56ac69c8b926904d62532977442549e7b1b213f86e8f5addb1676
48ca5af66544d5049ec8b46d61dc1ac1220606de35ed5202ec5522c41ecc7b25
17bc9621a0dd9dced51a6d014c2810ed719898ca7ed1b8468fade8be65552c59
66db8380ea5906f69d505a23fe0161d5273fec5a985cac276cb5fe2fd6c2dc01
e779abeea9490116e6d5ea939a514b1a45c2fe7e7a890717da86ee45d19f09e9
7d32eeac61d6b38dc70c3c8b26249354b9124e18f8e6f11bf8928307dbb60b66
7613624f41b9042d69649a24facfbd217c993961ef9083441b46b9b5de918050
2793614002b80d251bb79a5cd15d961abc0f88b125583d484f19cda1a7a31c0b
ff9225d00a432523b194e23464f4e1e4a8f612f5b6b6972598d4a06d308288a5
0512241486cd5cb62d2e92276e214ff33fa0ec5af7b75f57d1875a5d6b9e25fb
2470e2b335bd683efe22dc26f4b2f1dc4b0bbd69252031bbd875dbe5f230bfb7
59a9dc41cff17e9c396b01fa1e6413d1bfba4b4a21b5b9a59f81286e5f5cc23e
7053473363c85e1fc817b5120761f397447e8acf12a7a95251827f784d8c26d4
86dde24ca8f2452a458232f677342f182c79a446628f382f0562cfee8574c45a
ecfdd18b80815b531dc4057d9543fdecda258ad14b115b2ef3410f9b9fcbac82
e04f28a40329f1469ac2b4d35fbe02ede74a9eef6382945e760bdb7ba501c98c
ed23d16dbba0cb1def0ebc0f54285e3808736beb576b442b056cf1d3eb1bb8bb
58902ea0d3e761ad6dbbc02f58055860f816c3d969b1e31dcb014472cc5a5196
f04a4c7535bcc520c599a4d449618e88838e3f708c0045c95e9009c67f89b8f3
fd901c7966f8439b9e3495e5f9d59267ef04505708bce08e743f0df9e3c2f55f
79ad4489d92da7a11b7ee1ee71884662387da7410f1cdb0891075bfbfa1bc353
0ada61df18d359720e586f39c636a7bc0ff165014a642bc993121fdbcd7f4470
c100c413726fdd9a9ef3ceba85e7718daa7439fc42ee59fabffbcc43f6053f3c
cb7fa59396d5390482b24c7ca12e3b13a64a0abcce6758ec94da589a15a31cb4
b2d878fa713a834038019f7dde239a6364657a2b50539748d97ea557fd4aa7ae
dfbc093985e7cbfc1edeeb5073a3acd4d8e89a012ed1e96744515f08e3babe6b
5f35d85f68badba745a4d5ada8773d3cf26e910683aa10ec36d3e789d7c98e95
3d943deae7ea298280700b7beb6c8105b9dcda1492eeee2f729b003c76768557
7486fc2b17f4b65d0c0558a52f361ddcfb4f0d9a0b3bb31c57a05ffcfb5b0734
99881854c27e1ff52fddf0fdc8bfcfa00797782a4e050ed8f53e3a5a4a46ca3a
dccb41264fc79bbd1cc1d5df15ae3290341110078b00e1dcc1c3276640112462
8606eb722c4d7d1646654aaa34eb6fc19d99f64f6509ad3ce357f48dff284fc6
ffed11e9ca2dc9085c6ffc189667931f80de278de42ac5ad905f5928dbacf69a
13b7b0faab3c1e12ba250015ccf58900301a5097136c146a6ea678d691c3585d
ef2c2eaaecc34c92febe259e3b9de97670b66f64e78fb5f5f855a38cb4ea221c
4dfa57f984adfaa7446d71cce675ffd80b6c70ade8375c10d48cb7c483f23e92
e68fc8913847437f14c4b71a3bebd2ccbfcd80cfc68481df35bd056556198b6a
677ca3940b508450ed87b3de72ff59ab7fbeed1504f2beb407f02d3664a8e7f5
679d92d942fc4174d1b9fc89b3513c1448b243ebd9847934fa3b8217b0c68258
7b41d52607a8995cc37cb1e87a0ef933da7d3406006e56b9ae43575f208e7a2e
621dc504fa3523ddf35b64a23fed564214605f54efca6c2118decd621c9ad55c
d1b6161f46d04f235ffec4c3235201a0a49040faabd0046148f56e23e8ced7ad
739510a84ac24a96f6cd49dc2ed0c9012cf35b54d0769e65f0ce23e3a59d1f10
b0aa98218a7a38891281879778e7b745ca18fc6db2b8deeabba5e3790eaf0fb0
4e34d0673b65e1681c397c28676c45836afa92930e440aa2ac42f2b75d27ba66
0a05baf80b1eab4601ee488f685b78cca347390e90a5dbe10afa8f42fbccf035
f3686eaab80207cb20f216ac3c64d9799da7a2a8eb11765ec0c0f73b92ae66dd
6f27ccdef9d786e32fc42804e0f815b3d356f33d84ad36f59dd829b282480673
fbcd967d45c115ac1aca5c27612b89bce5a68485151f3c80c43ce6a23e236845
ffd5ba35c3128461d1e3de9dcd88a0f033d90204a8b8a064ccd19a91c5d3dfc9
f7419075b6cc186c4db626acd7cf38abe7d15e95e9870f8fe4b81192a1d51780
8d3c7023b708aae4b8263cf5bf0a796f6f15e2a2ce4fed01864c860198413a00
5f086211bbc3c031a381e79955d1cf11874ae8fe5750b1329ea6f32d71f32892
32615655da16b6fbdf82fc88c4041b9cfc624298c67ecae8ea1d5a7737c86211
044e1a01c0a5550671929c4c38c8aa4a394df615fbb1e8e3726d278ec41d952a
e22c4c3805d5ac06c7b153671c91f3269b2b52f4134471f69a8c326ab41869f3
2c27b5e21a0c001d8237c5a72180b57a114f3f9e5fcb21ab6cb229d031150ba2
acbb12c902fbc22efc9f04ae30eb2f7b75e931a5c083db427bbf94abb5f20bd6
8e98117031bbb78ded921ce05c1d5fd5f9131b4f8b894dfa671ff44e1e011121
5b112ce4c92049353cfded1a7525f72e9488c31321f6315fdfdc692a7d97dd13
bbc8c6d00d719e169c5e10596b40ede607b1b251b89c3ccd59489c294f744261
71f4072c594755f8e4433480e34336e4ac22507da56764439b35308eed4e4ee0
1ae0b87fd610b97d2282bd0ca9bcef483b1c569610388bab3894a0e6129c89db
e1ce0949e2c2d12c38041510813f0c153c9682ea6db70fde46b3488033f2a31b
3bb01ba177fe71f09a0345873ae4340f7166f919b68909fef2fcc927200e4f97
7d72e7d5fa2f9a7c01dfb93660f33f96e63a0d5148e73f24e4987ccc27ff6dad
60380d4ab1aa8d921e33a33bf93d930db74c80f6972b91966e7e53ec3392dbbc
d92df8d0b76a3f2cfe28a15bd23c662ee2b2b328550800a2b69d64cca7181785
11b407c900fa368399d79c56594029404c56518c82c0e800122568bb89e09863
d3f132501274ea608fa801fb66333f5562d39e2c5338498eb9fb678e5fad7255
c11ae75790ecb1a7b2f0bac2eaf70e7128904b7b42e6065b74aea1577c2354c3
b9d7aa2be1f3f2f43ff25e7f55f3d2d4691fd1ec06e298fd3f42aea9bae09fd6
6fe1f46c0a56b897832f347d1fd6fff740fdcdfb46487dfc1ad870d3974713fd
02a9866646291244db953363b6a45f204194e1ff068b1a6a5c2dfc05a3883fd1
a1105a4d2e34c5231af38ed47608e12e70fe1985b4b958a9db08c99a7be5aa42
440c8e57ca8cc89049fdcfe2d04eb90162e8677aee16f33ba62a1ffa6caa9170
a0bbfe7469515a90ce202d3518f3e57464862c5423046ec42a469760c652196f
2ac863740812419075267752824909cfd2f3b23af2a1b4c43dbfb7ca6a1ea411
55f80d515722973457a535bdbfc3fb9c55b58b522cd9fbd2738cffa991d5a2f1
288168b217e7f9515719ef3846abfdd9f870a966162ce293cfc714e2fb41c3ac
daae60c0b4c401f9fadec289539c7fb0adf405abd6fe092e1f17f4899fb202db
4fa3c60ef1abd9f17426b102b07ae55a5e9045ea07625a8626ab60d8c96419eb
65cadb0a52a34de97ca4a4cb72a928707854fd1999632b1b7b8bdb87e97f95ec
bd1a349c2a306a744d9e4df179de1769d999613d1a66d157c9931ec6d528b94a
e0c7121d3d66abc688ae9f9ab868b486c833f18334b626939e8010f2283ca032
7dd3f22c6e254658c80f22368e45def6aebf0197ea233ffef541ebf42984e241
0ca390b1d9af9df2f2245f1b7f26c9c80b7095131856d977699e9dcddc21763a
51aecd6b5ff3e571acfc99e66f35e1d861c0eca3e58df4b5838394dd31f6a041
d1d7c7fae4574e5a9eb2635083970294b64de3b0ef7297929f8e112e06d72c8a
77cabb7f71ffa0cc6c341ad920e619931a30f9632cf63abcb76f50dc3b0fdf4f
50b7d651d0107df1796c2d25b971da1707b0095ebb65e8356869eb483bf338fe
9b0db26ccbf566a7f11cc8dc12c6ce16be073a0bcd93d642c81f8ac0332e9cf1
645cb8fa8e8fd930693027e932b339183ad5755ddd8f7555d535549d16d7d39b
2733a641047edfa2e1ff6da8ef62149a770b563e36b282fc21ed32de5b3fca61
c036bc292bb404e3f1694fd904e5a6fb4ebe28eebf84517717a864425629d159
4501b2d5d085c55d2adb53685da6a6246b53b99cc27f33747fcc436a2fa4fa6a
0804271adb1d9e1af8d68e6f4240ebf77dd1f17e17fe9b935ccb845aa739ff39
b493e647fa5f0c8a58245848ec0e6a57021a66f8d8706c9eb6cba44fe4db168a
026c9265c7bf2fa69ef3f217ec942ca79d8f4da92a2c25cdcaa960d129fa8bfd
442f83fe1aff19ec8d07a4f54a01cc9165e069106d964903c75aed5d363dbf06
09f59a0686507a39ae475446972692f561f04036de3b78c473b0e9ab2fde5be1
7364caab2bb8dcb537901f6ee545754ecc4dfcf1876b2523f87353cfc9ce2637
21140596437c75e9548da9ac8f7123517b2903e4101df55339c9afc8318e6dcb
0664c247e7ea940610ee0a7688fe066508a080e4a6246553fc17339b8921efe3
83a8bdbac7b40a68c31699a028b5ab229468136d0f46f4593e7e741bd735d151
8a98b955708900d0a315013bed95f1d4e8d6f8721bc546a7a2a08ece26dea343
81e3ea09b21b983e3e5f04651b251bf2af00957b52bf4244ac5ad022d2bd506d
241286f3cb1dd72c77f4eea911a6cdad9e40e3a486a5d1b74cd69cc8bcdcb566
7feed00a71a50f144b54b0333c8d49fd35d172e5212e95af864d166582860afe
214887963aed67522fffa827f014ca7ae29dd1632e642f93e54a5448b345fde8
d7a209f54c35343faa4d992dc73258ffc6bca2aedb009f4456df4ccc924f3506
552258b4421a20274922d413943aa0f355cc39b74b1cc8f1f0bf23b00e1aa4e2
b8de1660fde4096ff500e67aab7e755ee2a1f5a88694058b234489db9441b19a
8c090206401ebfbbe3b5f6ff25ef67e86110ef04d26ea1cb21b738eeafcd884b
f8908ff1386d79dc01615f3224739a42bb30114a3dc54a4f85ff8dc52d6d6ffe
1542246deacb1855817d4c7bda53e6dcbcc574810a944eb4f339d54535663521
786c36f2d1a885d757973881214e2d3f3c513d837472f31445a92193703b332d
1ebdbd1611d80420a7d0a8550150de5ef17774fff150bfdca61a1150c7c1007d
a729580a2502e1b02860fda3994e4d9ccef131756efeab95ace6f825c96b256e
cad5cec681c924468c419165a23e762e12b70792fe35a58dfac7406805d396bd
046d1d90668f4551bc6b043c52f49713a2528845a9e71b847aff9ca961c3790a
0ef95e686aafcecffc5cef2c86718c44f88f21eb7c3793e3b5ccfefea249c5c0
d3b4d6c393ec2f91dafb15e9f52924efca4905ace5bafe41e1a1cfb95ae570f2
ec2e868f5b00b18008abe5f3f319ac86a5407c3320bbb6aff4b13e9eb2cc5de2
4e29e695eff64348a851cdb0b1608506cc1715d90b84336ad198a125efb1b820
b0a85758ec1bdab4e9e4619017d43dcaaf8722e536d0eb4f60a228e8ae33d424
1240e424d2b58c73d89ff231277426ed8209805c37111d9432f624f9bef4b521
6a4c4fccb4f44f84214fc7686092d6f8757f0201f43f9f39869a51088b71bd57
2368e27e5faf2edf55ad7c7aa1399d589a49ca2dfa8e42242cd36a5b096c8df2
25ecea16c32488dbb70c334fb75ec778516c8b58b0da3f8f090a965b45c48f23
fd0141d8b43c58ead5f94da9e49a1011058fa8a8ea4d8a364944bbfcc37671a5
e12214fc8f569d3f652698531d683033949588d90478a286f4d9db93d8f5a56d
c0ffeea84aba4ea6b325399e64e0c1477c74d1d4fe19c33d35f62051067df689
f94d89b1f6145cf5f989c68270398443ebedcbfac30682b4cc4f8c6166da9f94
4ed915d6acc28e98b21783bda9991e08f1226430019d16b6d065062e4a62a2bc
5fc9e6b5e4168cb4615c7665c0ace39603a7c6b7564ae30ae47b1167e5f87cdb
aa2fa8a2408cbd28e8fe3fc14fcdb2c33fccf136046ef0e07a67f0ef5f03e762
d8f58df367c4cba0ce5a329f480e9008fc1f2f51ff2ca9f1211a4d64d46b5b32
661794752c5bbfb11661c66b08690364d406e29860837038b62e4075f5fbc5d7
2a92c98e861b1372769718f7b0b8ee33526c571395c2b6d9d99ab96fc7adc657
15edc2251195ea6c4cf00c3eb0e849b161fea5766dc1639850f744471fe7a33d
a356d5c1451610c74692cec7dddf17fa64512f1016e70c04aa69d278e09110cd
098a8d4dddb9ea2714d6dddffeb7fed5e9a9aac5288f336baaadbf2e39d52497
8e2963c70fbed0c66692642c38fa88738ddcf98d569f239a8061a2646ab1156c
6b5288527286ad1cb708924fa3ad8c17ec9b0c24089d16115280d3093945bbbf
4400ff3ef8c256a7ab0539291bbbeed5033039cc78703f431b13d375e947f6a3
ead4cfd1268e7b432559346cc8d64b9d70cfa80577311b5b16c86317c7405cfe
73e6297bd8a3549e3850aba96bc436f26bd34f0a31e19e06990ad01088b5ba91
04819a0441151a90bd768fd112f83998b68f8e4e8a89d15966019d540f65628d
f342e9ecd2096af549e144717e94ac3e74197eaeaa0dd0c99f7297622af745e1
d1cb60e3f7e758acc4077a3384c1529b33003ad259031dac1978b5f631948c98
611f93b555daaa44fde6d57d444b9b1194de519038f71d127cc66f0a3486b3db
4698aa6ae4002993cf09450f7c2c90944a3a1d0c5826966222f09b8680fe3e98
9cf7db604990a6d010757f63f948fb347eebb355922b13c301ab3b9e63bc6551
7b75c5ebb4e31e567d4c1301fe252dbef823ccd1ed79bd81347b061b0703f14c
774033d39213fe7588e21bd5fc9510d591cda324ea76e4132b7122702e70e053
79d38722f6d9e915a5664b9121dd8774793204787b546b0c24de4e079780743f
11bbee63966a6ccbab8f6bf307640039f20bd42eaf201c7126c5c2f86d84a02a
f1957b9374a9f4bb00c3287a102c4e73077ddcdb4f1b95e2d04afd8a1a6b52d6
df1d46d68424bd6e2ddd5c136fd711c9909be57fab179124d14258eb0ec11ac0
f97ae436a484a1e5bd25dff3fc52a2b1368d3a1e8735087eb70b3642bf1e53b0
f371764ae4a851fb8cb71dbfb4af60f548b4e262f77a8a584cb45d14a4fce069
8ff6ac9492cc3ebca29a43d15e6dbb13f01d82b5c78e1070a91cf5be9140e2c5
7ae0e6edab046e445a45232ca4315c7052f0fabc40d6b88b5d5fc9b7220c5fd6
7e6f14145747239c84a3dcfcf07edff9f29189b2d7023a9dbdc7cc44526ce96b
b4799e2e08c55a57a6fc90c53a716b90d12ea977f871fd6e3677e103692b0de5
4e36f9f678157a09a70e6e6d85409605d3f5e1291a5268881e58ed630fb5900b
c3174642318e668a77646dd7a4db4e23586c01453949faf9bd5fb80b3d918f03
8564d4c081f7b7b99322435a0aebe350d922dbdd5784379418e5210063a60113
db3f190e11aca6ea9649fa135c53dcf270fef877517f832324cd00f3c58a1623
9ac151ce6969f92dd56e5b7399592b3f0ed79e2cd4aff91bc5f181a1407c5b5d
24e0d17e6e61fb9d17165c5e095965845b482c2643f94c314b34091bb866027c
4b8b266292ab4783bdfb7eeaecff9fd923afcf208a040bac1f4d5636786574b0
2b61ff92521d21987460d9c648617e0c349382bbe6d8736fa89b0765238afd02
78f4f240e3d40e08281429e2a873f10c5e546439fcb55d81e7caebe1d25f2967
30b0169a83e6f94c2e3a2733f9f92e0b78fec87c455d57bd4461d50f7d06fa79
a44cb4d5dc57450dea0f6aab08b813e9e416bf86db03d0852846fe079a6e3db7
e56356472a182a972b2e038d0806fab89560db4e9607e36084bacb4363e33c2b
035f9d0a40f870ef90b90919fe9b75aab21466838922d2cf66d186a161d80945
5b4f8414dd90f4bf067c359f4b0de553010bf926d6ec51b4a1067df1793caf33
173c33d5048260f8220eb0fcfe84562181717067f66839d9af740f48a8a69726
10e81436fc1c71c51816a26a2a2461dabbc2d53aaea9b83a097325a296be396e
6e9515fd31a21f31edd46d79cfbb39ee8f28fb40da76ea5a025058b72b83f2a8
96bce427b6d1431519fac08008abec9cc4c50f3213e5be30117a84a6e939edf1
feac3349e8bba391a7ec3b6eab382d1d63ad963e385c51916229ec9525bc02ee
917fbd188b8563b03d3b87fcf6ed8bd799059b7a2d8b76d4871787dd7e819f7d
5fb675577729fb81c972417ff8a51b603c7947184e6076e1a5cc480923bb3353
c08d2d605d7b3e02e85e643fbbe7ee564ed3fdeb0fb953ca79e10b6f3cc248b8
31730a5f5219eb534b25533377495b9c93e760e4d9250e7e1eab9fa56f8e6d32
83fb53a91841e9f2f3dad29ba40ca1343b138bb0e559a0146568d75f24fef0ad
3460f3407c59703a5646b37afafec632ab658f574aa09d45dcb9685244fdbdd3
3cf2ce52a618c78a06f204a9cd55db120c132d5d92adf8ab29f777b9e607f3cb
47723414e7dedb664535d3b413cb16800c0592e8e7a40ea161c8513cec3ca4f5
b3ae4afafc32b1554c1b5258b1b640e2a9aa8612165cc536776efa747b710cf7
f98d17d97f27899ff30391447a5f4220e5586f1bf03fc29fed5e4a03577976e6
d9528022f5d484f67f0f9817b3a0891eb08943f57de4f33cb369837ee38ce1f2
03f7e014d24c639b7750b78f78d1091bd2de5684239dd5d9007f17fe46b68da3
ed735faab339f771164045d85b5622f02058d0dc6c7e4e21cdec445b9856ef39
c56b299f92191d8ae1213853a9912e4606238f06d799f3f88dd752135bad5df9
0d1ec16406d9a4550522cd118c60c591ad0ebe4af3dd513959ba955c886ef1e1
14f0bf00a5c08b99cc58917fbf19814aebe1d084ac4b1ff1dee1ff1da0362a2d
a3b7a1c1aa5e2e18cddeceb3064bed32fb7f6e100eb51abd847530d75f1d4b78
06c458d4c96f13020bc4eda57a76666abf914b6e7c59aeeb69048142db24ee49
01e6a1363a076a34e3ddd4efa6c4bb7f0bb244467438d42f62305362e70073b7
2fdae2bd50d20b3717f88af13aef1af82ff1dba5f80524a0866935d9e720bf02
720276295a341b5726733f9a768ab2a030c50df11b5bbd6340b919e1ebfaea0c
b14263d48b54d5b20a0c0c22c913b1ec420a18fe5aa533e0163c707753226484
e7ccc217b917a4cab87185469b18f240caccca8af79fc97982c8fd575ded02c9
88c21e2e93c640219a8816f84baaf129ee57f605db09043ad1611d970a9a2a75
96cf3806c58060b9b425d4883353d35fd5e4fc446184ef264edab7ae7694c814
ca63799e5e4b99cc7633c300633ede522da45d5d2636bf303e74b2ed82ddc9a4
e4939662a4dfdd054e9a008273252ab5eac00a0a8d1bea078452ae1082f7cb1d
dab7600d7e6d35e46aac9361f44b7e55619535bdd6106c046e57393435be3016
ccfe3194cd565f734190f1eab8d7f6b6393d7571f9b08736c3e7fd5c7c81d86e
ffc09aadccdb1c49a12d075f3356c2e2a1194fcb9a5ee7dae239603b887835c3
ddf73fb1029bc72c56838292424e19411380e1ecf342b724ec686a500a18ec78
567431f976a1673c30b5fa3d3b83b16371c8cd105d9039cea8809c214fd6e982
fd7dc43a9c961564f8c4dfbbc693870762da18d83d4fff2589b96e7797cff0c4
e00a95e9b58f3d771fd2100cf3162d7c4406f203c01120581c2907e8401d2025
6579f94f6a65f3a0e54d6c474c84a7eae905b4f96ed3a2bdff108c1e68adf868
dc7b1311b693c6bccebdeef8216710416ccceb08dd178bc23db041603f32bdba
00489e91720a847ce9d69012b0fbffbbc65292ad6fd935dab4d7da95fe2c0fff
b1527b392aa92d9b6fc3cc18b79ad9294ca85005e96ba8f2ee75b2fd958bb11a
3c26c3b1887e0828c8505d7f264001fa79fe3007fe5f45f217097266cc33a59c
2de299c105e4e417ad75fc17b7355519ec91d556354647900b3171ba77c8af2a
aa2777812c553741c1bf7b5e6d72767f3c76c2a35986bddd8e9e5bcd34c8cf60
ce039094087bce560b776c19b0f15f7d52971bb21d2e32068c9bad232b7d4766
42d9682ccacd6b099fd8fb93b3e86dc0692aa5e054320a81b71f2659b6c36e47
1d09a26d85824d066e4080a6f68a6bf1df0579820138cd07debc09bc991579e8
202f431b2ce219d577614f77d998996034ae84ee2a32d52d5a71799da40e8929
e45c07c6f649a0b3ea314b94c11b16f12f622ca4d2562ac84b1de3f8cf7959b5
7157092dfcf03cd9adb0c43080c45fe9816509b13f282c8bcb94e5378b2f23a6
e3bd98ac263815ba9575c2237ce00288da1d4986f6c206527f98e71277f70885
b6116547ab24fed00073111cf0305001514af16667805ea92419af69186c7349
07d9703a3fca380e9daa60720ee95bd120e672ff6b869eb939b0c17aa1b77036
5bde68e7f740579526c425e8afd7f87b5e1070cb6b3c44ec3d86d0e93a5566d3
f0878886867ce72dc2ecf21150a4f9ade3031907a90d4e380c4fb5278864f18a
aafddd14516351a5b7afc4767c359df48112638ed5713914660a993fcc5fd6c9
4d08214c084382cff7ed2aa9aa50bb4e50002b70ea72ffaba12c03b34014effb
6f8bfc55cf56e9396c85757c5c66d67bbd06510a86eff400a4738d5ba006709f
ae324467e17f158196a474d0e3e35c1a0142ce528091b8dadb6bddd9c8109250
46b050c72fefcd2a6d0f103d5d99cbb8bb2092441def47438ea0cebab9823ccf
4dea45ff8cc031c304c21cbd15abffdf52aa194c801e6854d5d0a1f18c992816
b83d38498c92d151cb91743a0c546cab5ad10ede413ee8a5a38f18bcce9f29bd
dadb08bbbdb8380ecec91c100aeea2e54df1a8adb1fda4b9f5b6ceedaa736ce4
f0afee7a9edf62150edc0db1628ca3d5fc8b42297ff2d326019702f02c3538ba
3081bb84ea7c896e24631847279a57e48a8adc50e84ad8d8e407ab4fa89940a2
7f5c802469ea88c9f05cac5ce6e67ee66140871e3261f0f39dfeb0d3f1a2684c
76df506ed496e85d684d09b5fe40c34207321cf7a3696ec19ed5d515a220590f
e1b844032176e522da45e3ac7b04050c3b89a303f1cc2582aaa5620ff05f7433
ae89fb636d5b5c3bcf634c4e9d988772831dc5c2784d8f8377b9f965d5d00828
610fdc640eb6eb8bbcfab9ddbcb8bed24dd0d23a6c55dac1cafa45dbfe1f8250
e0a9e4f0b29e76d339d354f41791f5339ac5187da23b3cd0c5531696d5373b4b
7395bfc8695094581c24329dee9e5c48ce2f82074789c150571b0ade309d1321
37305d9c8f7f8d5faac95e02b8be5fc63a3973bcf87e7e6bc8c152b98aed3903
049ed2e392ec90b1cdf1005c6a85de86dac7ffbf037374bb93170689d4cfdc5d
6c7ddce395d46a946ece3c5cbe453240180a36d4ba86cd59906863158e29d57e
cb46fe4ae4032d172f458b55ab63c8a493e1a984f6f421995b850f1bc978c871
2eb5ce90de98c9b9ca7e6783d0f4c4eaf25c482e57250f655f956045eb4c4f79
43dc9e0b69837815db8eb4971a4d4d2a2074e95cece3fed1f6840244146db7e9
9136519374f1fee27f35437056fe961c629642fd52e2f6c8b44d4dbf984c7ae9
0e1ffadc33cd437edcd9a9d88451398605a16fa531e1d465f9078da78aed3677
c0b74bcb4e088fd3af63bf2926b6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 37 /percent put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 68 /D put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
/UniqueXX 5000788 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4a71813d2ffb26
445026f89b4787516ecd1afc78f8bd19e91e9ccc9402e8c36d2449c1ff850a8a
f61165aac3fe931332dd28e261b91b05edd18f44ea7d58a8f35fe88493b64aad
6bfac3a0136215fc2f4ca8e91d70c5010e6f4013e6d63b44f6fb00afdbd7cdb4
5ec5b1d9736f45cefc8a0124b815987cebd81bbe0d44dedb2d5ef37923b3d551
abb6a1cefca7868fc7bf3814ef7d7b6b1ae6e869cb77aa29e3d90b12b0dc3ff6
ec945922b5899bbf2f12e92731486d2ef1230c528bf8d7e0ae09ad7632a38966
5963de49d1ef3d65bc483e4a577b927c940f5e121169ba52f6576c85793e5fd7
7f5863c488e55bdefd5d8b2514795533aabbc12e7f51816c7e1484f1c441aa9a
66a5dc77158e79cd6692d299b95e8058b35e771a6972d2b5eb1cd6d2bb8e835d
361a6eac0c90c906aea1cd75c4412a1339dc1439f93e59917311bf20af4f2bc8
bba5a4626f75f28a47d4595c37f4019df480d9385975159142618e22e964f019
d88125210e2ef21d65baf500adf802297b24eebbf4e93c617a613f856bd0d45f
e17a9480980ef83950bdb8ebf208c895ebc4a7132f0765b7c19a332ebbf8a3c9
ab65063a42e19ca9d43dec3de7aba46b9a5d24fb93d615c0a1726ab7e31c378e
ab77150858535b91362ab0e2b968dee1c539964126d937f9d4980ccefa92bc81
b054996a65a13995c9c9d819ff05511cfc89cbfe67447c940405001d61be633b
b771eff383fc6977ec06af30f981504260de7b9ec97359974734f495ac073935
fb30e3700679092ef5d971b6b2da0e15960f2391fa6b63c33e7f56b4a9b86951
1d3686a5e8e613a69a0add8b8c73b127ddcd397a48d785079e786d24b43941ce
eb102f2ac52fabe1885dd03c6da04f58e51f1798ed33c3ee89f59a73b43397cf
5eecb9a29dc16834cd85f9a07054e26e6e7ecfba00fac34bcd99e2e746fc464a
74f8fe62bb63df1b223062d35c24ffe6e27c49e45b7449178c5954bc36233971
c99b0828efe9c642cf9bed0e8822d13ce8949c84ec017cec27d6ebd687c15f1c
b1ca76aefa7296d6506a165f04fc9fc816b15da4ea65479ed9ca98cfa12afcfe
e6f85cd7a0187330bf2784ee98af9e4ae4da7347aed9db2da85db9432cacf568
662bb01f9f8e401de69a7fea5fd26d6cbb39464f5b3c3416cf9a26d897f56ffb
331c54ce7302dd45cf3c1a978446222c6eb91e6cbc18cae79068a3599ee51f9f
b337e14423e9501573f8c3d9d77c9446845c7567594633b26b7567a4956b1940
b06a54277e6c8a93a6ed75bfb450641c19be8da5f9002975bf1295fb319cf408
5edcce652c5bbea5a889c58113bfcae17048d579c7ed77727f9862a4891fa7e3
7a9ac8c9b5b4a75201ac9f1f5f46669ff7a112bb83a2f9ef93337493805b2008
ef5fdea22d163cdc4b8766a709b93e791eb4dca059fdb7f0e9ed5c5761a790ad
2e5ff0cf78d4c7fe6961a2ff3234d0095110805d1d46e8211a776681a873578d
aea73b444cf9d0d0e2f8358dd1b2536f7a8de85d1be33a97ac89f4cdc0f7e0e2
72eec721d5196ac7ab7067666e04d878bc9f92e3f4588c1b85a4f9c7d63efa54
8ad08b6ca42c1ea7dddc0050146b24daeb4c4989af8783e757866dbbe9f1a045
7e16d5d95f4e7e6499c78157fd484465601d0ff508267e3d102146af8747d12c
ebe3ab857894c35e051d50736136143009a2f34c37c9a4060c36e1e1e07aaef4
55930c71a08477c0949aa52632cdcc9906af5c2d5d84dcadba260fee263bd795
38b64a15044cf645dd7939ad805e2683129c916bba934e44ee25b8fe4b33c029
721607ffa4b8d5325a47adae3524ca0d50808e97f4a16b8dfde173bfb45a316a
a1e0ea97acc50454d58105e70d47cab827b873580c2460e6ed7b2f6e10ac4b21
cb0dd1d5f527e8f8bbe37a2caef55d678ed0a0796d41b5e57fedecd26959e8e7
bacab49392c717db5d45400fbd624b23bd51dcceaa9a508de0230e8673549bae
13b95a5ca3b9987163625facda5762a38f5b852f181c8e8c4cc3dcf347b41930
cbd94e661764e5f272850127a41408e4ff4f37eab4e202c4189b1baf1ff515f4
9f639463087965f7bbfb5a1e3f7693c615bdd8161401e576b748c8144fc13f78
6adf98ce0a138f5f77ecb63b27a613047a8b748daa735ed6b9286a805ce5069a
f9483ee9cb6def2dcd418dcf6b2d688e611e59e2bec0a3a9a77fcc47183a541b
3f9d786081656262debc6517c9415bdc7f89cf1bf91ae792c0e50e1a9ce2b0df
dbfd9ea03f96be61a27a9df66891ba6f5cebb0e18654153f14c1db137b2a861f
17b0773e3019106162ffaaa9834faaeb0eb4e30507ba762585928f1d34d1d4d0
99087fc4307d87aacdd794e6957e66c1c68ca7c43a6a2db2227944ed428a217b
99e5a8cef65365950ccdc9731541c715c6b3d03bf4263a9568142b98db72ba95
887005a4e56d4ae4a93fc845ca60631beec79813698e80e5e4dd0f44e88c7b99
fcdd658cfba1498055bae875e7282220082bdc092c5fe275803e6dfc07482964
94c3a4e70063a66860bcabb53a3ab9124e429410f4f8accc969c833d9a9b96ed
8e2a8e1310f2498ecc72a70889ade739a4c728b516e6049b672833e7db49416a
768309deb228efcc8a4e261bf5a3f65954bfdaa149c6fc645340226d15ae5f01
a0b4837e06df8bd2554f3a5e2ef85afd65ce96748435b1ca83f179529665c957
2b7cfd9cc2542338fe1051c68c7d4acf8f5b90c20b8345ab1e203a4563b92550
8e352afcbc8b30713cfddd5a0a04c207e3279485dc35a2fa7c4d2e704d31901b
a5a9d6e72ec734540310fc01abdc086ff89f67b7c2e8f0ff8d07f5431ca6d654
5391b8292be7d84e8b77ed89b6ffe7bccae0a795dcde1ab26d83362955eb334e
1eefc88e1716e1957cf62c82c164c769f9c20852ac72dbd66a5452f8020a92b0
11471cca097b04fbe7bbb2573a4369df4646a534fea80034d8380e891d999eae
d67d574cd27dfad4626a372e50b0527d0185702ba2d14029f864dcba1b57a021
7168b0d6aeef296a8ecd6f55f6fd2567bd8eebef6eb32aaea898025daca0233c
8cc2188b8a57e3726488e47b43fef44fc341bc688a5c34785b8f84e936be6ccf
8dd5c4281343105787046e6324d7deec884bd385f56331e837639aa9b034994d
6157ca6470365d6c5df9a945d278a0c5a4761028d96f0f159fd0d4e7e496d3dd
6736d12d0f6d7c09f4bcf25dbe7240677f06a37e0bd7ba7768d9bd83e8d4040c
cc98e58fe96a03a13432a4f1b85d52d0e86e560a343402adf323578931339734
fb6f680166adb787ff6bbc1d2a9dfc25f75f7f80ae34f477179d06d18bbd7325
8cfcc65fcab08120174e842a9345e541ee80da53df84d21737cd2d93a9e963ec
4cdb1389e7805ba9140aa0a90745648f690896bbfcfc5b0e11b80a119d151148
755ebb3736465b20360dc8e2943d214070f5a805e2d09059fe809b9e51eaf750
73c5dbc37683f0a7c1b7a6d327b9b07ef7ae68e449baef38ab7f4318ee6e6985
437192fc285ccdf278d73a1747b06a610271dd156fc13e4b43dd4bcbc3e55cff
1ba3e4f49db83c2ae3f92b20458e10b3e90e43a0849703060ff6647af4d8b3b2
b7aa6abd7e734f28644efd98ec8027568e1c65aef8322e9d852de2d3e9f199dc
a368df808229cf495ce1872ed96c8659edb35517bf6e097bf117a19baf43623c
e8598016443aad795062e08d9ca52a9f28f2dfe2a6aebf15a7e02f0a1c376cb5
8609165cb0a8f89f1d8489b20f9ad68038fe2de354d43132e39dd8ce46d255fe
4e9685ece2eab4b1133a761e9f5372af170770cd043a50f1150ca034ec8223d3
51f69a9e9a28301e44ebff3ecfd12f6cdb351dedf2af108a33145a30f859fa75
f0b1da0ac8da7d3eca0540090faab9a83ea8033f0ea2a5ae0b53461ae451cb52
49d3f1101ce2b0343c4f8490704a1f77f0e1c6920f130b6130e66654e0a2d798
0e092cfeabd0736ee06378fc16321442d65ca7b7300bff36bb568def6bf18cb5
4de6aca76ebfb0cf87496c480a08d91917ab7f16ec2c57515991ecabd3eb8c80
a3a4a76969da6049b285985c0c9be7b006b07f5a52fbce1fdc1453a49a56a5cf
a434bd8e5fdc811ffcec9e0d982521cda00d346fc9c986942a68523e0fc047f6
b4d7fb342c4ab2f7c2537559b4c8566b7499950c97f5a5e02cac73642679ee54
bf045f2efeb98760d2097abd9526d431ac8c82ca7bda106a7429f436003c1cb2
44ccbcefb64aad55d2338623be584ca2904d8aa868d262bc546519a8561e8df2
9bab3d01cbe637ead7d22de1b32287a4a118ffc25399f640f1930c75c2f58cc3
c099ea90f43ef0cadc6503329b865ded2684f0ee4608ee9bd7d40085a3721300
6934d141e62d32b83e5c283355700c794fa0776d3bd0116d11d5a6b855dc4679
14d8ff7f4150d42d103f5b8aa2154988b43ab02ca4154b297b52cb8a99121de4
2723850c7707191fd62ec325348018b00db269f9b85532e281c0aa7bf2f243bd
9b3d48aafff2c7282d6ad0768c4a4b3c0b67c2df0ca5e76ea7fc12437ec918a4
5ca9c2a7d59a68089d8d96696fbb462b07e613a1d9f340e2fc42573651789aab
9595824e2b82fe3e0143f553073f83420b8c924729ae4b00a8003a902e2f1ae1
e5d868d93216e59afa0fa8e76aa7992c54bd4a64c84ea25b33cf60e66b066d3a
8e099ed36295d4d6afd2dff314f5dd6eb85afa8c40f271f616155ee3a46d64ca
8939a2f7e0fdff037cfe33b8913d1311846842033fd08277b4855c5df481abc2
090f5e843fdf3ab4f192a435266c58f78fc40e4ee0e29a0021689b06e36a3549
241bc57144e83b339ce2deb043ef95a1d18357613993c4fda2466a8dae69e6f9
d1d5ef9b1dbf312e0f438909e91881f31ff9d117c85c54c90c69017fa623aea2
48f0ac9386b69d0afee00f4a43df3c5e143d4932424f8634b0e526da9c9d201c
3829bdfba1f67f5df7dca7c4e74a726ee6dd36ad818c241f4fd686c1690d3732
b9a0bcf8389f5e1892443b70671c1f3cad06034d3817316cb5fcb42a09de869c
30cd89b45d9f07635fbe0f1a989b1c26df8d5eface83538e1498384e6a7deaa9
c214ef0e2e0d8073759e6fa44c4e21dc66f3d6c6b8ef8e5677ab63121f937a73
a5112d3640e2af9e1ab31d3e61f854cc97cb5086652cafdc88cb610826b3d72d
80401da2775ddce421e1dc4cd38b599d5abf136fce441fb94784360512374e37
edb9171df620c13a856cab4aca70c3011e4829d7ba380ee1f8ec4bda1f915127
10a34bc9782ae110f9ec7ddad9a23e47b31c947b701045ac03869b05e7b023e7
be87c05ca1921ad13b7757c8b0ded16880790160584497bcee7beedab15078ea
cc1d5729f6d190a73f2cce66f1ed5990c52b3971446238b603581d5c7d606be1
d9e5ed41acdaed60eddd6808dfbac7485ee7355c08eb4173c0e550a3afa928f6
ec73cf215704cc4fea996a2b1e9877f79d20093b5ed880da2af16147d1c04e7d
ff276e53247d7e009f2068a40253056b878005c700de685fa8769f7f21b0a93c
6510fa830b921b25b661a307019b65e6db72a4f4d58c4d43b58a41f953ffc51d
7cec6f1598adae046c462e6e18d4ad1ca4f66acc9bb4f8fba772f083936fd7c6
6418798cbc776c67473f173882c96e45ae50eca6cc9bfa3eef69c177a684552a
d10c03ef15ded44f68703912b3cc36917fd97eba0d6616f78f6a2f0012fcdbe7
8498d72aa96a6bb062afd0b1d67676280fd226eda0f9f05ff89801c8a5fe2f8d
f098c8c18b8dc9af2e601f435634771d49c2e50a858dbbc85ce80a3e758ed18a
cf1cacc2f1726d80bf53f38faecbbb9659ac99475820b0e13496fcbd749e5341
190566a09a095d25993576315573db3b08829298285e88115d1c6248dcf7ffcb
1634d6dc4344db3b5e7eba96084310aca690dd265ec02bed83cadf4be18a415a
53451a27306149bd69effb7011a062fc8f2c9f496821a0dcbf9b9205fe0ff020
ae91417a53156f800c2af8aeaac3b3854bdfcad3b49472ae4d0e88f505072a0e
2264f4eb85f3919824294e09da6badec10a6c9a9dcb6bb1fc81200080cc660d5
bbf3e748cd596081a65f25dd9c11dfce465a35394806ede60367fc681fd4e5c3
5eb30fba7ef162d56737d5ec301d484e57f6456ec414f1ddefd64083956c5316
734a648dae18b08f809f6a62b65f3e49fc8ae4c764a2a8c32112f469b72d8666
c32b0f065f442022ee1a325ee8d4fec3bcd882d9add89636acd271cbf009c080
ace94087dba62c3da342da4043653fa6aca11f86ef407990022a45e53e857d8f
5691de4698e746d474a11a58e18b13ceb304f0fc21ff74cd1619ae86f5b84a60
3658f23de9edf18771e340b91e514cbf508509b99955cacccf2700ad518b6528
77a85c59243d0c21e177f803e017244845770192f5f9276daffef89d8e810dbf
43a5d21b52f0d342405a551f6f30059049014ecf9b9e400d070ccca2d6eb069f
904914650e217e427c14ea923cfd92b330b484ed87999933aefb51c272c62960
20b09051e2b5d7a60f837e2cf5a3e5d0174bef671a54d6e621254987fd33f570
9d6e169653a23fb495f01ef2551b310e078b90569fcf30905a288458e2d85ff6
d9d8208143d9b4f1541afbd0c69d9ef8a7d92bbb1a9e0aebe8f9319e83052c03
0c155d5f270925cdd1667e39bf802aeaca9a11aa3af6064301c4ec21b4bbc86b
78126699c347ecdc2fa3b0b1fe9cde9694167f22eac79e17232adefc5bb27f0d
ba57ea75d712a64dfc9e6a2122827cb2d2810e7c5613633c27d76807becf50d6
865bc43077a7c1ef45cb9a8a5bc449b389ba1dc8325ddc60d298a8db7b12e550
87ef294c90d6c963c3513c087b2a9b827ae0ee315488c1042a6c47ba1ba8b7a3
775a6d651e8f19cf9f8e1cfa5c231791b9770f6af56a11da73b65d5e4ea4d1bc
3e549efe1418098c9e117f68bc4ebab4d9b73ee854c19f7feabc1f2a9d0d8ae6
47e1481ed877bc84d4cfbb97b3193dac6f8543783314b7ad2e75fd6b13e6c8ca
b25c876eade15b69a2c31c0e19f3ebf4112a5a730ad1fd3e2f6e7e615ec883e0
2837e4144be22205c8d8ac366b95481954720c44008ec9777a9b51cfbb867108
334657bfa001b1177900e6a6d9013e7a1940a0b95d30bc075ee77f91d5b0a63c
449fe90a5acefa7b89e23f1d73ddd2ca82a684289c2a5c8818a98394615c84a1
16c90a9ff01aa8cfa315ea480671d47055b30b5602cbc93e8364397578c4f7e9
af10d36580edc97186ca6a38b77ad2e177b8a6d769c9643d8546386b2f20882c
638bef834766d649d1dad2157e7ee8a9bfec16511b4e546d12aafbba58aec6fd
b694c7487eae626d705f69d6505f0b3e3d70a647dd827d5e65eb795cd13e4224
566ec9be83536fc120fff2dc2f4d7d9b748668fcc9088ebf9d50a9265a2470ee
826cc97facb0bb850ea47e83ceba7b69f0453512911633c0389031f885f70daf
819d941514e9855ee5888077f3c45b2e6db811c05910f2785c81fcd2076f783a
791e6343a798187943c4839953663f895ecf301efb3e1367f254c5c653d30d8a
ba71162ae9cc50efb1369353c07cdcc0e1c48cb7a2f94e9252f7673d48f2d371
825582260892b1b7f82d83d8a597184ad6a2ba3458b51de6365e9652436dc556
70ea8706b22fd2a16abf364a2d5f3e5a2cff0a8de6e5887746b082810a18e255
9b8ee2908946c977691afec75a50b753a8f19fd6c014f8bd1130b007fe52901a
d94bed6f4c95d192d4fb8597d69f7efdb7c606bc2e8a3df7218f9b492b2a5a89
0334c92a091e34ab4e49f789ead853ae4fa0a1226b6bd0e4045f34eabb1a7edd
dddc1b88f2d0760862aabd8d8058edffdc981cd4f96a6a872c86988d9215122d
0bd7833bfd9778140f3e085e74d84f847a77df76a63a7598c06b1def175e05d1
ab99861cdac5ec071a67e1bc2092e544dad32b0c851015bfdfce77daccc52588
264a9ea84f397024f00abc45eb2f7b1a9585309540addcf0c76f1df1dda87535
af1a3e77600b291707bf2180881a37681cfeb6c1e070e898e3823bb0b8eb1f4d
0b6b493b1b76cc5fe5258835a6db7e888ac519378ff6b508e5f9a7c8d0712b1e
16d459c7677832069c5c1915e2c288b06d3340e3ea2e0d731406e7aa42d5c6b1
ee44b851a2e7f59a25a7ff79ec8b26d47a5b5708895995e58e222c8cfba8115c
aafb0c97ae7ee58e583669cd431eddedc679b0835bfd1d4837af35fac367351f
b5b09bd5ad00e850284c055a32b3321a5d04ce4176d5573135eeeaa4c3dc230a
ac9abf7561d2e3d4e4e49a95a3018d028366389b53974a121927b9d15b3578c4
506c5edc88e38b0ab5c81ddeb1137e3cf0ee4840afe6066cabe6829e8b420d01
f876909d7e68786b50ef12e81ae744b2bf12582831e0d4b922a170f6070f555f
d229496e333d19ad11232a742249322c64103e99c1eea8e60cfde3c46c305f4d
044a84270a32f56eb99172f8c1ea066898b701cbec31a5cbeca61c08501149bd
62baaf9438e7c6e48850e28f791368f0765f3d6b0b97e3e737c976b0a9dd63ce
55692bea8c91021561432c935e7248ffb6cbb031cfc9eb30bf9569aabf877eb3
cc28eeac21546bde1d5debc712ddf0fbe4d05aecb034e708f057e4c911a9d4e3
34590d1fb9a1a8de3e1465c4870c3edd53d87fcc9c67c3d753792365018fadce
fc7ada67968a408f2d2212cb33c0477de84400ab0530d5a4f25de253452488c1
223eccef1763ade550c228d4171e04f668027cad3da037efa45e0cb1f755751e
6cb76d45c52756331538fa587ce909ee130a0f26c669b6ad0a5b3b303bc9fd19
daaa1876761880356b30b1001a8bae01288bd6c9083f2b7e7011bbc099758cad
9f76b16c473093f78a3904738014877ca014b0c31dcbcc1af2e7c0617a818318
a552d9327217d7da12fa2dab7d425a5aa6ab0aed5999e9613a01edbfae73429e
92a462c1d10bdb4717ba6e86dd4292c105019bd21e956d3c5c39571221380234
77100a53f81d474ea335da26bb6724ecd2a3aeed541691d486a2c076c4a9156c
57a97988928b8de18a23198e9e3b09e71b05d23bd4d1ba49681f90cace39dbbb
6bf2dea8351edffdb3aa1e61efdadaea838741b9c2349f3ef799ee47cd1986e1
933e74d225ff9fe78112e03ef9bdc913cf0e000c4cce58ee6a357bede9b82942
470741d5c942bd971777dfdc7dc1fb563b918c95b94c7c3372c549b335f414e0
f8c0fd118b8daa0db1b53d56ea06f5d19db0ddf113a56b3f82c2c7a5561ee37a
797d3cf46ab0f6b69deef6cc072010bb8eff3af19adcbd2c30a462562dc71c1f
56eaebcd028c7261544b3d404f2620b4bab56915c2adba74adfa432f5fe1f040
227e2da12764d385ffbee377e0e7a3a485bda598f48e9bcdf746b6d341035937
ace82bd0a9a63843ecd335ac431ab7865d555eebf0595eb4b077acafa80bcc25
b4ae74e5bf7c215e82eae7f6e70b4e8e85648f891652e3453fe3f665cd84a12e
4d11a4eb9d2803ad460bdd2f9bc53550cbd83fe661d41b49e475abeeb06b9eae
a4f561d968fb8d363638aff69bd43e2c841d8efc54b7a2ffe3799951d8d6419c
75e9b46d61bcabaa00e49c89c39292135fe5efa1708142cc5df0bd79a14f0842
26d32a022cec7888dbfd90750e351cfb2c9ae95ad2122c8c8e381d9e75d0c7de
c72b5e1a7c121660b4f0b27c73fad691a800e79a820a730a5b292c1c4648f510
6b2ce32508e3bc0ccf74f4334529295eef69e3bb7a08558f67ae4c03ce14b69f
5b11ada5f6e36536db08dbdf87bcd60808760db6a8af57286e5861c8f43379bc
5a37855c8056d0fecb16b5466e044adeb0ba0a7445d418289a154958da6cf789
cc46e8cf6828113b4751a2447f9b42d2bf3372c95cf5e3f2aa632d91fa3e6175
c716094a52fa3af88017bb8587c723bf5cd151ed813a10afdcdd0326903b07d1
c97398d55094f89d7fbe6843183094f235d6d170be71930601edd0fe692e3421
2a7213faefdc318c9f3a7afb493abd2e85dbba459e80fc8db421ad756e05c34e
4eac5c5a3f1ee9df2ec755a4950427121330ae8845ba6b730598685948c9bad7
f10ff9cd79815d8126b1d98d9db97e4caa88a80e6239531988b38ac4972d1180
210750595d1879947c75aec33d7e2ed3d752c1d51ce879479f51a95665463541
1985a7d3988feccfe53b54e9376660ec95d192bb677b25fcfb299303492debf7
95fc66e8152f6d8b993b628dcbe75b4d8823aba988799673e7e40bb5be2e5e34
3fb24668745239f81cca72a11dabefb93e79d1b7b4dfc18a1ff0f08e1946e7e9
e438277eda35a7b0010548f80624f969a902f818db16e12234344b31080eba65
cf4a20241e740cdbb1541f62800235d799db43970dde9fd791ba2f4c21db865e
eaf5d3727970a9a5412e2aab353b72f69bb4d610e36a7314646cac180042741c
baf3f1aa06e5735696c459884acb7d5973b89b5c26ed5875dbc3d96393275e10
564f01e15d4bf91a81ea307debf010963383ccdc828d117278e99e38cd62c43a
3369df8d0309a04a4399103c4a0d84263ca372251603b8032a0e90d8f91e026d
f1e249d31d70958e77222fe2181504b7b13cabfc8e63cef73fd18add44d0bca7
5a119648ef48f1a796ea6b549c0811f896c43afe7a61b6b1e8d0612dcf0e171f
007ab1e22b79c9844b37eb82bb2f9d9df2920fb7fada7dbaf7fff303b7c922a1
975257b600d4825530a9f812cbaedd701e052604edfe5c875ead24cb3ed0579f
1a9a3ff0913c65d295eca453f3103e65fa369bfb1c02e3e4ecbf26d5a2a65f78
3537d2db72ef2caec36166c7831474c31a224778fdd66ad972a69a71d552e1fb
c3ee954420e9826ba4978601622767ec9b30b3157b867adc1ed6d6dc6f09a5d0
bc93e7debd8e9cfc353684ee4e4702cd72b2f6a17fcd2f63646e9d9ae3090e23
13458c4300a2c582378082ab108e575d4ca9623e6df284ab33b42bcd4c4718d1
ff86c2d7c11030de589df7a4e8989086b71dc21953d49c6c1593ae1aa08a74be
f62d012260bf2cd1f3f81415e74714c47ebe30835216c607b9e2c3e0f86aef60
d9177d7e0759b8456b2efea50f2f4fe740923e2cc9975443c2a4896363317f37
7e43ea9a830a32d00255bbcd5c24f8699c00427c178d9f105702db698331c636
48bc7fa65d5fc084be9454b3ecef1793c439920c60c35bdedfc380d5bf4678f3
1b212b1df9997c6ccc207da54636c5dd6f175411a7d2a3773f656607755300a5
4cec82fecd77e028a68704cfc4c7fea504ec90ba2cdbde52c2ee5161013ad531
c3c196cc8d4612be06f6c9efbac25697707e1b0e0d5592b26caac436448e1ef2
3d7c592811b403fd5dacf4783d8426148710c4ed66578e16c8b00f22f014529f
045f7ac0e3f82a0d53b63ae45a38079f6f764108e67f26103a1a345e74f0c6e1
cc34e2e84b0d76fa0221be606b2674d487abccd5c60da63cc8cde05d7b249b4d
3b5d110c12021393943b40ec279d647457dbab25f4f1a2661834ce98be08a39b
297618c3bf0288e1b9c227fd02e418713e4aaa2163e7fbde0eeb8a55bb27d6a7
940b9e1910eb539f6ea761bacfd79f3558613a681804321deafbb0b224424c5c
f7ba401a1cdb669572fbf907740fa5c5c6c4ff731b6c6aba6e432b038c64dae7
19a1a01255e9493357a01fcbd3e3c00b74f880d34d3a38d0f620349d991133b7
8c5f1e62c26de93f574cd2b0367108525a437f2d668462e6587949ed0d3ae397
117ac9009a80e5c46593329ebc91d4ebb65788203973a06f6b3bb181808b6732
2e656b082f60cc581d9c4561b730ddab2f325ba6e80edc79f058619b2df7f589
9a26f71cfabd1e2c63a36a7e9a5077ab173e490cf316ed17ddf6ebcf06bdd83d
bdf8c6f27b0850b6f76ccb54f2ad7f98
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
dup 97 /a put
dup 109 /m put
dup 120 /x put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueXX 5000789 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b031f3fc6c13d7da7277a94ba
018e9998b3dd888011a5d7c4204989f30f908b95533bda845746b673ab71ea57
65a0d14f4350707e47c8276305b28513cbe1bb0dbd269a53719bda46e536685d
df78ca0146b6b93e760256b74d939d4e35b5e77238f04c92298dfdd188feea30
e053eefbcbb52f2011772b3aae39f5805597bbc1e8bb75a446ce014030f4f2f0
f49f9e962ee4a1024a746fa92a3628db5270732b54e43fe5ecfa524f127e5fcc
788e77e66098336ad67fe4cccaf0253272d5df79864bf4b734cb9a5859d557d8
bc11b8e00221ebc12e97de4b1f466ead83a4c894709363bca9040410a52d592e
34ee40cc7e5efa920546b981aa659513a24b1b85c221a1875b62d0b89e57a368
321b8043a5b094e0379760a443d632892b14ad6d19dacc8c78093243ad67e6a3
08e56e6b68412ee690b10dac6e17708754a00d51fc957b500eb80175716eef4b
2ca1ef867614659bee3f2b7319e97b6fdf1efc847bf3cee3156f72f21751da8e
5fb6898919e6799820d3de0642d756e09d6fae4ff08dd3deda3173bff4bb11f7
9109c97ddc05897af709ea199a90fcee8ce4c7a3c15b18170c41c04de2d3fba8
f34296a95b8e1e8de3739b17273f8f2c85e914615e8eac5e8bd2387ba3b1edf4
7968f06e2067d836d0f9f3e085cdfd2de06a62c81d786b304326f7002e83160a
36598589228b4dddddc43c85e1d126f8fe81b828028e26317af5894aaccf4f69
6301e1a9fc45935d8a414957f08febebbc3a72ada80f101e47447d019ade56e9
f4fab969bba2b44e47399fedf5caa1bcea216d7ba713d523dc2e86aef195ab23
9219b07306974ad878ced91b9d15755ee3c9183c5cdc951ba7ef460a0098b07e
ab81b1d3825b3401d5035fa148030c52cf604cc5c892336a44237e4e4aed7200
f446694a341b58acaf2eef5052e1516e56b9bf4e7da9390324127acebde56672
71263acaba6c7524ff75b0eb91b88c5b61c1c7839a22f7264ccf7ce50cfb9b96
fdf079f8121e9ee93a2f1ee974c59b51546073a273bee84c5d77a7f43529fc74
dceb1ba9833a80c084bfacadc24bc4af6fa028c2b66f815e758d3b5383b56a52
77757036349db704c4bcdd023012c6bb3948c5e5b6bcb3f20391d58b0419ebcc
d220d129ae8e3d72eaad90294bb843b9b13c467bb88a5bcda1f42a23bf1c7c38
803c5d7617c8a4bfcc6ffb301fa685e5c8da5a874d8e8081211b23b4caba4420
96e9de529bbe42f67ecbdaad70bc6b8f77c28d9f2c0d8af5601934b69cf2742c
2bb6963c2e58270dccb0f92b5dd7eaeed5fdb47a4122ce5c3ce510d008dfacba
22f4846753860b514ddf17a3780decb1124d8a55558437363055568be6fffc48
e62e160f1bab4930fddf0e23f39aa323aaa10a92667a592fe6d324541cc7e2a7
9d947a7922b9987e69324e82224eb06fee754558922a4dbe293a793bb61cf57e
f336a0147b56b0559be7ad1d23989472c96b8e4ad3b5826845aec38b525583c7
df6ec1ce5fbb37e963834f978505396be766a0dfb00cfcd89fb5e91c5ffe1904
c1aa36ad8535e711109eb87306b32fea0c8c40f8e84b52a4e7ec0ce8d3412ba0
b5ff37880167dbc2ec418ce9febc87c461a9ddee6feecbc41c39f09ebea33505
4d3b0087ebf4532f2f6c084cdb89ce3e53a396568b661bdc35a60633895b2ace
8c234dec2f7ff86dbe598060e77045c5aa5beb6c5c087bdeec40736c4effa817
b57c7bac72478816c40d8579d65edb768910293749314872322f8447e94d236b
5311560c4f10115dd465c48645f12aca7bbe621778dc0e3cf2a36c37273e78cd
4bb4cca5c5d8b8b078baa85f94162b1bf4a4131a0c5b3d72668adcade9d2999b
8c9b6c60bc719017debe33860ee18f74ae4f828eca11e2129f66249302c88074
803a92d66fd020d371f0ac0b94e735ec15d29f414d15f45dcba7cda92548c281
64d1dcc0f3bfee87059534676fa49c9dc80f70f94d5ac442c0b816393edef561
f052feaf98cf958b40b650584345669b48abddd036572647aaa39e864de9d7e8
7b09316e89410ba1ed061f7fd55adc98815707e77fb3a6070a15c36e1388e540
8dda2c8976ce8dfbe98ef7873f7225264db785b243f8731bd61825d4d681143d
aa84e485fb39f37e0331fe4326a08d04556366d8470cd0e574c1c08d3ee31aad
3db038faebe17a967db679e01293477d279514ecb2499b42439e161872a9d92a
2c8545147953c5ce2a0449eff81012d08bb538849fea6711bdd50d1a6959ae0b
503bc8eaed6935990aed004e0a5b93c3aaab178a72028bffc37eee8439856ba6
e055b5c0d1b3ad407b0839688cd39b77a31dad9c9bdd4c31857715d3c5f7be5e
7fc80f95670b31a1d41834129120c0dfd8b8220fef770278c85a0c28ad0e398f
743ace2df9b95e5b2cc32c7887ba092af71b1342496f4d7ccf65d668af8c2049
083fc2020e06b9567900e7bf778307263d604e3c05716b9ea654927fb8fbffc9
e906cdea1dea88c638e42871e78b2d8bea8b8940b9f10f697c37295d9dc4be11
b242387e4e66ded800abeca8a8f2867d4935bf769d2e3a631c227d24982922da
c9c348910d68f4836aba680413cf38a015ba6d35bbf87f434c9e3921b7ba85a2
9d7522d5bb7576d2988311b0346a56d12bdea93cb9d69906c7beea618a99fdbc
6c8b3c44d1ed4ef5f5127c7352f8938bd0bb0cffa5cd81510ac68677469b87bc
cb35f00b943aee39d3f267f625bf8150fd9df782524d097d9474bfbcfb9bb3ac
6cb47ce389e2bf0d6618fb3347701f0d8b4da7d7722fcea6c18db23dd677a15f
2a88f9c2db4a7684e59261dd236152eefa56d969fcdbc8389e4b278ee7a47ec2
f43ea7d0aafa3175270c6c42e0def9e693c4215cbbd90961acf2827b85d993f2
d20a49cdbdea84e4308c40a915128067d4c031f80583f16dd7cebcd9f7e2d462
c5e3121a795e2b9c3cd3bcad5833102b81aaf88fbb2deaaad6c11ea0d45355d3
d78d4863caee86939f9a3f4b89fc0dcdc5d02ef3d9e5967a866385bfdad0fa28
d4a61c72c0dff341c0b69f822e201b75c5bc4af0a18dfda1c9b92bf733d0ccb0
08aa8660a051e1f647796fec8886d9968810647a51dba35a0352be5a966a7e11
6953be1db3b5360db4fb959ba5adb8f09cb63573010a6f029d80fefd185c66f1
023f70c0a65686af808895a3b0c831923375047de5e83473904c88f9e6f2d677
8fe45979cc77e67202e74e0fa59562642e091a3c7458e9f113c218f94af6eaeb
52e5d15f1fb7b12a88c04f9d417284f535f9d2cdf8cfeee78c473b2b1fffdff1
23fb05da11ed91c38a0199da669f37281ab329429e1498f81867f443101c7d53
46799be47885cf6cad4fff26e66da0dcf8d023bb94d96917053724b1094d7548
db77a9c94c88e9a7edff10a73ad6761df7b48b8cea668a12afc18ef33b736c39
c6ba62e69c91d408fe93ec2e60bcd93ec7a31d9e933be78ca9d4d7ed8c34d83a
b367877d81a118f62ef4af73fc6560f7e42058e6e0f267f863b29328b033a07f
90cd890175bcdf219a2fdcc3add7e6fce183d1bebd67be303d965297fccd7ea2
20532191e206e78dad7dfe9577bdf530cef13e9d4c3573c5ee056c2143f5093f
de44889d735d70355f6ee5daa28200179c12421e90042ef4c40b2ab3609cc01f
5f83f0481e4760cd6a21d6d879fbcc7a74c9de9289844f7e14c29d985a41a95d
84f216de2a502d665900309fe082538192c2bb74ed0b01e4b6236cca404f8f9c
aa2f016ca746952ae5bf7d9000a0841a680514cd804793fe90a37991f04eb050
f8e0f4273cdfd75fe7591dfe029e4a0889b3be8b9d690c6eeeeee98ec63ca0f7
feb0d29b49a4dd61dd1304a324e363262913145e1548dd8098dd035ff340fef2
12a2c04c22d612cd7c4c12a82ad41e33e503cc95be34f858fb4d0004c73d60fd
2bee65fe0fdd3115412657afab644297f070f0b247b8da50297a1f984bb539a2
367451e0e30610ba864769f055bfe04c335b526274b50b740d58562df377a76b
f032a6667801bb46d69cad04bb44defcdfccdc7c51c9d2c6a64b56e63341c067
65d183ea1be330e7a45cd8d1df0de104eea28d3a3caa9b491f026adaa888be7a
c4b2e8682d649941de5c79041f2c7876d8a305209870d652ff71dd3339c9eade
9ced3405b9528c27e190a5a5a8be8a321a423dcb63dfb604e4d137377c0fe3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 46 /period put
dup 58 /colon put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueXX 5000791 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b094541f345ec367ae85ca9bd
24568a01d3b9f8095f7420e6c423c414b3dcce6da48dd1c89a56d078e0d0e2f2
62a13640a06d17e44ee3866c3471fb58fedf5a3b77294517651c16bdd7267d39
a54e7171752dbde63ac19bb4b3021ce95eb5fe67390b09ae4d9ed4d704a67443
f55dce17acd996c1f5e023c9e5a18cbeecc3097f23763acb86cdd7cd13381ae7
4e48495ec7fa520539d87f8a8dcb3c826275469b6800876a457e7d1e5be867c7
b1ccad69742a8c9b0ad943482bf2a4ad0aed40baeb69a0233bad36b4ca2d2da7
322956c70375d152653500b2f22d2ab6990cadde2da14b4917f7515e64bc3d96
bf775258fc7dae4e42a4c9b6da8eddec4a800c8aadc8d75e48cae52137e05c03
677f5d6a82fa46d9f2fc7f56d62e5c605a1b7898b8d1401c2cac1a0122a2c8a7
aae09607f2c5f29293a09b9959399283be89051452898238b777db9830ff4318
a298b221c4a820c700ca964fc99e6b1d9eb0bafc39be9aa9dffa2fa326b2a466
1e67261bb3dbc85844e76f9313ab533ee16bcb478166de5502b68e6ec1ea6110
f53206cf1cfea419571b0243244b32ea38b828a01e62b03bcf476a32c2341cec
b8a0fa2a3f3f339315d5f3aa7704408f6617d026ffee4925aa48537a4b2e556d
225be09392546ad561cd46cf766f0ba14c6854c5af1a528c3842b0c5aeefefcf
19f19cbce5d967153c4f88e51c776cfbe10d39328466f7a3b83d85601ef4d1ce
0cc136610fa6a74d9676e4e99291d565cad27b9eb2337b0eba4148efd0eb2866
ebf0a4209ba135ad1376cf9cc2d4110f36121055caa3f2e5079d1f6a21a0b5d1
fb6db15cb82b49715eeb220a8aa92ac20467dc1c26e3fa77b5826903c9663ed9
904dd1ad7bb46387b1758a8810f3e8e80f705f59794f3c50a90d05eecb74eec6
8a0d9ef127c452cd0fb043f5885d4d994d9a622a4fb50d9586435afe3f5534f7
a1320351c432e2c717e764b2d9e79388949a0cc973833707bfcfadd0d2cb3187
3a52db0b63bb777681b448d3915ed08eefd93d16d382f25376660078835f9fbe
3dee7337059670f833e9a97d9f62c73d58a5934cc0b2134e5972abfbf5304487
dd72947adbb0b2c45543037c88118e9ca007dfd23e95a16de05ea3a9e5a7fb18
14454d6c42c413c813d46f59db68973eab1bd315d3b8c342caa1c557c6ccdd5d
0107cf670ec5674dc8ce75ba36e302b0772ff4ff751a690f83a18a0a92a638f4
b0c9fb1dbc15b499e8dc248ba4125a752bfe5b92e8667cb695055358501f897e
21d9cd480212caf9e5b350518d51edd6ef77a2fa8010c57827cd2b94fdaffeda
80faaa0a3d1e6e9f32163fce03af3fae143be8b2a562f6cdde7b6f59bc22b11b
09a1fceccee4b3ec17bcce65080e512d8515ee15f4ee9de1740e7bb5df7f57ad
3b21c8c82160ea8ba0ed7f65e5415b49bdac7a999c71ed4341172fb48999aca8
e149d6c7949fadb07d664b96bbc348299b50b826e0165d77d468633dead16e9f
1b7a1d692e4ffb74b331a5c4960346274ee0b9af99a620f26f90726192b7a9bb
2c486cb91e5ac279692b04e44bb6eb303e7c5378a346d66bec39c79f9aec1060
dbb0e3f197f3d45f05fe2394428735889ffd9fdfc32667007e6ee7352142a0e8
869926ab8f57134f55baf5adac69128fd3ee75360b2c8363c864cc33f73d3a32
573944f2fe67df77d776643f8a757c5512513acbca9e86bdd212cef54adb76de
bb1b5d824f2688e76cad72fbbe043775b71829ff5055737e24327e661ccdd3ad
80191e341f4f598fdc080962cc05ae0cdebf62bd4b17aceb3a456c71a81e85b3
e51c04cdf03834ef6b87bd979a9951d2180bd43737c816c8644bdd61d43e2481
fdddd85c4ae9a9b8886850d432252f533b9839896d693824246a7788b625578e
9fa2e8da7ae8b77dae9dbbfb808f5564693786a6704af739f74bf25f1eedc2ff
dad0c1bb86a23601e484ac61f78c34cdcc061b0c87a191a0b2d846c0bc224536
603e937adbeb9603141e14f3a78d6d4a458fff56df616ceac8833bd2829c326d
88b0107f34d0b9cdf3bc2f5690473a11a1c739bf6c32ff71d58ef8d65d4c00af
779c76c136631597eb17732c9d16899cbe90f88597b6496fa9678c43f2f1d799
e90a5ad17ad318cf9e07dffe7545f1492f46605c3394f192a204a8aa1c83812f
63bd857a55e7d1284636003d51df05ebe4752a9d24867385afe6c6d3c79183c9
85a372765f4a307b9a0725667c1dfada007acf133c9dc9ca7a11f1b8fabd9fcb
18c6bc3da42ab0f14bd8e09361150219a7f0fc7d20ccc0070eeb29e8f7173072
dd9571f05002c102be2588e2ed568458917cfd19fb9336db06d67a371fcaba12
77e9bf25107e08d43344cd576437936001b8bc5cf7b4ccb8b141066a9912a644
1fc2ccdfec15b0c4619d5f4292f5db3892015b5a3a6fc845b957e6c9d9885b16
92503c5690e5fccabee09dcc3b046029cdc3e3aa8ade502c02e081f693f86497
7a93a269667f04d2309651a3b31127a9a54d58b59d8a89454e8d307c6f0a90dc
35710d20621d6932dce9405e199e015419c86f1f4297ad1da5fb8150fdc26a25
53395fab9662e54520f0408c05ed79b30f545868595ffe2f876b77b3e6483917
8b84ac9523cfa3d14401a9b88a3a8d0b4a89dac609fbb6e6bdb1c6bf426cacba
dec2bf5d4212b9e91f58130bdd1df9c93550bd29c475f23500b7ff3e3b190074
b42aea7e5fbd3b53a079257aa1ca83cb40c0f342fa87c0816a7a18186575a43b
a75f685cfb02b32541a167f8685c0e96b8a2d4886e1cff99f89724dd9b3a6528
44fa53c7a26979dfabf2022bcea235eb7bad24ed9a987972d419b332480626f9
a3173ce82b43a703926f0198ff17a690e76bc38c64a85b305c2053b9393d3967
f62caae12f3cf7eefb08188c337b99a953f183e59f94bf2cf54fa3377bbcb43f
2e65fa5f0b340bcac0ddbaeb8656fa1fd02e37395078113d4757cff2f5ca7be5
887879d5d7200d539bb6099d55f72c7024bc2fae350312777ea79f14c8d1f90a
3af394bbf424ee4f99b224c30984d26c4b89da51f347f065661f5e9fc15a84e8
d381b40833d49a37bf191d3fa8e050eedd2de2f44aaf3cfa790232005e438b5d
718f2afd9205565becd0fc354ce79518e56570f0652b6c8a16b48dbd115575d5
c8c79b7420a707378746481ea8b6b52c39b2542f308d812dd3721819dc2978d4
22db78a61cc235c2b82fbedccfd37e7e92c06b2f15d34e92714f77963cec7c4d
65626a8f6017948c38dbd0be16cc4288747cd4385363037542167f423e463e73
de2899b129495a1a55c583e93a4dd50a88fc590f9901ed0390209170fcc8feee
937a09d8ce42e64a72010cc88d793a6bf45528a65ed4bc4602ef8be497c2d6ed
a49238efd248d5b7c3b60df4894d5f6db30122732242c1cbabceb3b01f4228f6
b3f2cabb9b296a67f05c6f27929c76f208c9581c776d45d664cb6de735823f23
4aaa769ffd4aff8a9c706a5bddaf9863ba0d91a24ea778aea9d8ba00b20bad28
f119e9b1ce44fefbbf9eae39989af8d29df515602d89f2392e40f25cf74cbd80
5a2f84678656376d5841c20ca344930d1f61b6f76869b321c77042678717ff75
a458806c375dadd8e759718cf4df345516bdf4901ce3c3545a84790b3310c7c7
fe77b09dc9ca5316b603801141ad0dccb8a5a3189332bfa6df3902e7e09ae64f
def1ea865cca4569089611e182f2cd42a9a6fd61682cb1073799b8ee2b764f67
9f058d8f6eab6392409b5d0fe8cc4a9967ec7d02dcb7f5812c45719c0d803e75
5a50326dc3c05754e06ee6027f7928316d64aee88ba7e1d34c2eceaf59e04a7b
68e87b8ecc36e81774009fa9d3a8c95c6f40ed51f967b52e7d659b97b7e3856d
21c0a5e2d58150d6e78973caeee966bdc575dae4cfdefa4c25e5dce3e3075cb9
eafe9425b07796cc4cf4b8fc6ed59bfaaa6d30f34a9dcbf834238abb6edfe6a9
105f424cda855a3cb5c1a683f9b5aa7f0f951ab9998f85e3cfe418752a65654a
8c5710b52a6199387a0cc140e4c2abab189d4a052b8c663f1a7c324a33d7d7e0
bd0dd010018a20af235bd5e7ca74f4ea0fbbdf66a88ef84be4787ba3aa6593ae
136abceb8f1c81e0185c1d08e74b0378b9d2925d8c18b716f786714ddee0a4ca
bf80b9f7d76a62f6518ba9259a6745988f659d1be4b476b7a3c519a00fa33f30
019d6e6431fa1a895e280b8f9a21bc697b003b981bb89fa0543f9e0c6b36dec3
e0792738f6185b283db6241129759b118af79d74f5d369ef74a02990447394e2
24848cf156b73037e126c4e07a725ceaaf027ba600825cbedbcdcbc12757f6ed
d6f634212d450ba6d42a654271bd574db125b4ec93ddb1a6505a
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 110 /n put
dup 116 /t put
dup 121 /y put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueXX 5087383 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a196cf14c95a4e02f9cd2da8c
db2546c6df52e524745992e18d9ff87aa25e4e1800bbe4ebb357c6ef55ed6d03
6d3a00c1ee8073266c21d2f0ac85d656abf61d7e5a4fa87da8ec3b5329e434d0
d2adab706b42a2e5331be5295399d803ccac03f631f01f39a022fcdf63486b68
7d15ef284a77def7fde4898543e7b5f7ec267756103e477f547cfb8d2311c4b0
09deff56085f5d419697af1846c8b88c1bbbae149f0f19ca3c8dafe19cec48fe
6b38357246d8b5cef80b53bab4cbbbe8bc8318cc462a4158258f456e697f6058
86010493f252073ee4e4c9531f23485415ad6bc901bbaea659ef701f825f4b6d
5c9bed0dce7b63810f906b33ea4955531ca1ed1fc120cc56dc1e277a33222cc6
c3a97552607b865783faf0895cbeccd0df54f57bd162a88494768435eda71a39
69718c0c5912d3167bb0971546d733e735aa9bcd89f5aa154656031ab3f6fe41
94ec225ad03ab8b67a9da43ab365c4df17c23e79f685c3b6fd5b654e4a6f2603
6cec3a8641b0b57f93eb95f9e238832aeac2061f3153e0f375513c974f1c38f7
b59edcc94716f2862cf71c9a2be8430985da1cd813b1e1c1b9310564a2eb1aff
52c190f50fc981dccb64bb2c1f7a62c216f211c162c2ed1c554ef49fbaf12b31
aa3b2a80fee259dc0a2a4242869ddec7c29e2941792b28bba7f2c6f77ef69638
12b07d6843f33b51e01c8626b26edc34e1e0fffadede5fb468e8cd5de7e5a64c
366967578f415484d122834de4a647541d66989f7d8b25d1712d8d16729bd9a6
472e9120be9cf16383645b8240dad342ba32cb5ac1e91ec4bab18e8749622433
4f007374cd3f7c0842c0faa839ebc9bee317c53f9361f4e8c06033103a836f00
810ea9658ff30506cf38700fa90d67be30e72106495f5cf00bcceb30f41318d5
98b5c3bd90f65712c258a3390365dd8b94d69eef05b0d104eeff9f270ae89aea
3e98b1ade46787c097e6f3a02cb4ea3469a96af6aa4c01db3f248d39e9bac518
ceda7adee1eebcb8365323d4dede6582739f4903d6093c3f9ecff3823513e462
be43ad11ef0d998a08f733e9888e9cf53c3c518c50e11e28b2e32ba79c7d5eba
7d9b35d08e051d8f431250d41700f007ed2c0d914e216c9798e5415a9fcb45be
593c75228efb15ea9040976c5a9cefd3a16545f85df28033fc4afc5a5e58a32d
0a95dc72ea223cde248915fba24548022fffdbc03e8f9cafdd11066b9e9da891
add0e4e7c766926dd842db2ce4d15349ca657e6bf137c5be11ab0b2af1588383
4e2d025d1a0ff8a7318eb332c3c7c33913c0653901432b95ee657fe91f666115
425d26955c5d5b7927e3cc93e43498c2d6485282c26057a27e3f3eda8624be41
e29ed414d8a386f558ef52028a09bc5b87ecd4a3fe2bf648102199be855ee6c4
4d2f9f54f4f49bd8e85c7b8e053f606cafc058033e095d05cddef5c94e42748b
87866f1f215fb6049e5662571ac692a5fe66cd9ef55a11210bfedbfee9b3c51a
148ebebb204aa012b48f9192d3d3ec8aafd9b02495d2f527e640baa0a71b687b
698d2dbdedcc0c3cfdbd36cb742a00e9a3f39ed086705fbdf7a6a26bb9d097c9
70a04c31723705c5703c8f90df10714ade0f8a702e7e76d1b7f5e0933928b29c
7edda68e6a7f9aa3125baca2f11ec9c36635d52319589ab487c323dd203d7d57
4186d8ac3030b0733a75c9570da6bfea7eac08a0d556d111ed34336f00cfac82
3dd002e20aa15ba4a1bb5286787ca1efb35958112ff5a0509410c2bd08348c4e
ea36a8fbca2b09851c7e51277a7ba9ba6cd87a90dd4cf2a19719c951230598c8
6cc16b296e3cdba316729972383733ff938e2d89716844e9021d27a3757ebd42
b1b5026e2ae31bc81023e6986f3e217a4b9ad9456b83d27aebdde5c3c7552eb4
cf690daba68b1c305f00ed412a08fe103db37547450127f58a24f568615cdf97
9017cca78ef5845928c86dd6c2f855149126890d09e2a64ab77c5b14fa348b20
fddb419e79a9c2856f99c5c31122772621d99314c341b865dc1f196cec9c08f1
ddd96f9d88ed178090178a83a66da64d50f40b0c270cdb6320d6ef0482a0dd7d
8e542f8c7c79b9bed849ef02d6f18c9c83321a6e9517f207ba90eb0372d38498
ef77d53a2b22de70e068295b272b4bb7a3300719e892788e83a6f462d81b88c8
aa8528e948d4d8dc3a552cf51eb79b8bf7ea97f65b80568a8c99eca065704ae0
5d0275535338b604b43c816d0fed8fb41f1dc832e980a720acee805eab840b75
95b977338a7490aee68d94231a72b0a58f722b467305b9f76bfbae5ecdb7ac1d
0c6fa3cad547a031ae416434ba54b5b015417ffcbc459cf450fa33a4a83aad8f
f5cae49ed5d705151164720e3d3a05770afbe9ffe426fe1ab094cb08a1ab906e
3532902ad641a687ccc606a3c7922bf50c6af0dc2f5374fa7913e4ab49894f05
785aa30c14208727104de05a68deb786d4e9a3d792d8b1096896a00f3941326b
1a193614dfd45e02fbbcd84e6f3e8846b9c265453b769e12e30f58586ba438a2
c12de792148280e0948c2adcb0eec8aa086bd3a249fbedbe31f3a999a30caa69
0ee12e0ab093ad16ad183c495f9a344f7e6a6c942efb49162a1457e2d963316b
620d4d8e215c880affffb99ce723fe17aac0eee8f783e0df269ec3dc13d6b690
30dc03dc192adeff13c4f8b8f8e591b4b2fb7512e0e327e1b89f38ef4f504479
04d479f1f9c45b172d33070a2ddab6c102db9aaf89d01dcf04f1b4925a260f1d
17719181b58ba73910858f4aff6fbf2efb4a95ad2ce3cc42a2912a9e6831104b
60e16a4e60c8c53932c7b408717210aafb3a902fc569ffd376e221790ea3ced5
51247699f2def0c7ddf7c14e4b5db94f634a83936f21e21f6fa8033cfcec2824
d8c90d6421d88771ef1109338e5057dd5cd819e8af37cfbd73bfe2d8a3534183
c7e11b15a4e6913a0c692e24e06476732da3a82b794c9d5af8ead3e80112864f
23b870378d70622a9f127ed6b51e362fe2c6389fc8dd326c8b29c00648c83e31
152f61490c5f390fdee3143cae7dd0c7c2536da4e4b9d77eef8f04004c6e6906
0e511713ec6af02a71438f6322cd8aa681c45e21c42d74c3b6e8eb7f1e0254eb
069d2cd93654f17bd6b36f07c28de34eaee5683c868ac6b39029ce23778fb17c
d529bbb0509f483d0b10f23f68ad26c97cb4e7d0492ebd6876930fd9e13ef21a
617d9e87250c4c9b7ed795371b4205c4858b34222ef608c4c0f5fffd1fc5e846
b7a84a7c9eee081041fa3579f3cf681854d10ed5eb7a0dd64bc1f600add75756
e47a6cd53e721074aca5cad8dc19da178ded17e06eddbf2070fca94710015544
1e5411e6c664f31b57338195b9c0620f2fc092168b73413c2679c3f9c6634f57
39cde433c09dcf672c95de97ddf60d2c09f4cccb992865460f25812b11889221
a843f6d612b26c74c5156f7c59121f6f8f7fb691858d75e07fd24b4f8fa4e222
af585930dabaf484dbf3496435ece6e04296c6f39b0da8e29f959a81e787e5ca
b0a5bd4b18f623eabeabf9f4b5ba5acc5ac7479d9191fe860eeca941868a2191
64679dcc58d38f2e32634eeca288fa719165b9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 68 /D put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueXX 5087384 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b33ae3d31bfe98efe259f07f7950237bbaee4f7b64ffea83a
757fa717d50c3298392891bfd60e34a056b0d6021da3fd9b8b01bf78b0b23dc4
ea3b0605150d20b27ff9ea5f2524661019d982a2e47cd7c21ee5ca9ed9227821
f8d07119397de26838c11d7b35bcedc43e011626e300f8249ed846d7b5ccbd89
02550cda17ddf113df658fb13f8162681013766863784efac128e01ef997e1a4
30312afac8f3d948edecd7d5090ab5c864b91d7f6e80256f0e1fc99f1102b74c
61cc456e2e1bedf0e627d5f70f738f963a13666405c51ebf23ca077e97570a2f
1118536b92e585cf1dbd5fbf36a0a5d197538c05304e93a15f3c931168d91d42
483ef428b1a3f1b7e548fd1d23b80f5523c8b8bf450b02804fb689f915c86693
f7dfb1c43f681627c7f027021aa3a8179148f1819cd94b8890a9ac63dc1e8a68
f254b64f6f173c3d02e3ebc037da05074017c8b113e94f4e2d26b467ef9da07e
afd7ea7c86e025af52c5ceeb835951e67e02a38daf1e9e698bd21996c1071e84
ff7fbe77f6ddf9d06fa92b16ecebcbe0370b5cd9d450d0f2906a105cadf93ed0
0abc7fcf2c996e7c15e452006e35390d99b9cfc59925f1444c20d9c3e1fc2910
32cf9fa9d580eac1bc956334da391b870a757c3bee6aa3e005b20988d8587876
3ced20c6edf2ac2b22890e37ff7aedeb0986d85ae05bc84339bf2116df48c5d1
cc888bb33d409b06dd70ffd0618b2080442aac439aeb39c20a87ad74ef10629c
f1604db8611e8e4224c5b21ab0c7ebddc77fe9a283b3a8c6a2a9508f6836e3fc
3eae1366b4da4f44cb7a77fd81d278c17775d56cb28b70f18d894bfd1ec1827f
fb16a96f177344d650cf58aac41dbec5e451844648178ec9334c91886b370b25
c5ce213abd955566c214ec66805e41edbc812f3c8ae50d49744940f68068da79
0c3baa43d28a48c3162f6e51690196aa5d87bc7e7cdb36816a1067d26d9a2d45
6505b5a46aab98c49c95f0caf9d208f161cea6abd6d50a44e33f9f1f586327c0
0dbe77e417390c4c9779ee8e905cb51c5b0ae611f0acb9702161c72284678766
19cb09857479ce4ed9f06f3f83406e047fd0544ec0af65b5582987fc7bf443e4
326cf05868273b57e556e252c8338c788a2a95fe27f389da3c271935ed52a372
1be55f0d2d57cb941d9bc9051f6ec659eac484f86bba351b59eb4bc8c133fc3a
72e9d8cc41582188d616f4f31c981eb0500a63671454e0fefa454d9f362929fd
9b3e0a199d95930546ef6f17a6dddfcee44222245b29e74632fac218e970d601
3e011205b26798ab279862ad07bf6d1c9ccc9b1b3de0bd91034b4b380c0d1fd7
ad299813ecc89475115d4ec159ff98af7cc8af68db57082256d769ad2df309aa
388769b0da1623e3eab3cbc9c33c3c1f16b7f1b3696930cc29385a45c1c34ada
744031d5e5ee220d7c459a9951873ca7953b68cf05123c6fa2a452276795ff11
267f35d835c0e3f4d7cdc0537fa871fbd62112c4430ca886cf7cf68981722427
dd043510bbd869632b266950dabc9ed08edce481b36f44368a4e16565344f625
f2c8bce8457d9c9856639eccf14dbebfdecbbc25544740d241fffadcac1f410d
06c66f73789553ac60f2fac1fcb1c84979da4dd77c6cba105d31c9982ed4826c
509914194de1220c0339625c3cb167912529a16862bc87a413b12dd79b0d1645
3e9569f1ac800d58725ad5957356ab7e18791ae64905d477c8ddc192a53973d3
72eb4d53fa3fe7019e2090eab51dde34082ebc66a5009c4f504a17e676571af7
ad1209c333f5da82289c92755dc1651d78e303d9a3f4a5a036c07ce63424030f
99f49848d54a38291c9155aa7a1ba04606be7daf5a0f4d195ff1708f814b48be
b0322b6fc70b48bdaefe9ed9473d66c1a8ccde700bf2fb411da64f407972e0f3
21433624c577e4f6349edce8e276c0c2b99d959f2ed9b44655c283fdd477d325
d0b03fa46cc5d57f2470b75f6bed933a1854b103ebf110e09e6a5cf03a537549
418aae9a0794b16d109da2b10f60417120af68046766add3fd3caec98e68be54
3a1e4856aa5d50083457714b7ddd50541d4cd5d7e4f9b9bbac1dfa659c09b1ef
d17af5965a907772c7dd3ae3d92bf1fd830d0146d0c5d2857f5b1533954f3282
04049df738b37380d05ef9148a05f15c841bd6938de2eded6cd778e6b28f3f9b
ced7c94fda88892116da64bc6b6e42ac9e40f06ba5486579a791f851eac073b7
673257271fb229cc7b22f2b347b8fe0b398e1ba4a436f4e5b3a7fd2da0309627
540c065cfb739c314a1ce2265be254e5068dba7f58447d799678c4ddfef7d846
b4140154570fdc41d05a6827f95fca1cebe79f7061bc29c58b8fcb5b80c8b8af
683ae0d4f08e48b749dda960de28becc172e187f6f0d0cbcf68884d07b3f0e71
9527143fb7cfb078c35f36207fb84ff6ddc20d0a6f546d478d56bf8c2b3ecbf9
2944070027352da5894a19f0e2786214b55991719ce650e4f2fb602d4ab30a51
fe417a870b22958c9b1aa557811a104c195c4b29d681c452a4049e3ebd9bf367
bac0700f3f5b5a9e61035f0fd01df88334cf3997dfa5b02ca34143a75ae70173
9b8aaa42a11a6e58042d90148fe7909f4ec7a2036c7f2e02afdc197edce6b13e
401303cdc0c16b5ea60394de0ec768b87ed31434dc522795a15d6ccc5aca96de
adf76cf1136711f17f9ac6ec1f08d5e571f34ee69e00bcfc7c480b3b24706f9c
1a9bc29fb1522e39fa7f97a73f75331b4c45ae2d634a8883e77db3ed13719a8c
082afb4e53a8ba7f540d572699c28669e5fe3dd2317804db51fe120c8bc10e13
766a32be65decf2d4943139273e3147a34b2b44c9c40d8dc018bebbef79163c8
d9bcbb40fcf2d478ee4a8108506126e4d548f2313b6e3e99b079aef16534d315
f0f1757ed664ae46aae6acca84e53c6eab8da64689ff31f8d74b140d78a69435
7325c3af0310a49308ad08ac2240268e02e06da3ed41e114d4bd100fb05e373e
7a21d725392c213b2d6850fac4b2f96922f39bf4491641b263391e6f2b4e8cc9
0430067808897eabd35ac60879a99922143f1b43a264b4cdacc9f1945abef6d1
dc7d08bb823a01c9460dbfa10103f0025f36d3a82378211923bd0a615d8bfccb
c77ca51b1d502ccd017dfc0953a5bb3fdf1086badc2015eb3c8d7dbbda399361
9305dc329270c403ca65933839c814266d6598e30c4aea38d80ea8e014557621
7e4488301a2e4618ab49bd05cac4536a35c32409d65d181ba0df6c28e93d8677
d216f8ce3d8eed57ffe9b5d4cb4d0c6dd66dc339bcc6c215f9199d74ca4c578d
c50f2e3100fa8c99cf4092861866e4c371caf3ecb5abd06e28befe6419319b86
6c9478fac58de9fa76fc9dbaadd3a8d05d438f21f00f34b1b2c657fed0b90dcf
de6e534736244dbec1691ed2aaf0f65cbeacf047fe69ed8ea707c4145418ea53
2c58b80748777b0cf726f8d197f4bfb9e05f71f7f17ebf75b3064a3b3bab2c49
cf9cea999c20862ad2a5b5e574fe2181f995b7650012a27e067f871c8c1cb331
68fe212e4b40f69885a2b550a4b0dcf0a833fd71eaf4fe3b4325decf587d5ade
4a36b8a01d65465bc6421482ae58e98c31e03453db9a3764a200855bdaf35fa1
d417c47d42dc09f449a0c974ac056e57b8f3abf08e904aa7376511a318c87f87
b1c5e4c8ce2d8d67d39818d7bddd4891e5200b271a54e56b21877f0c43835f77
0416d66c5ce7d68aa1622cf62a69942fe4946fffc49824698e567601c6d82451
8aad3bb5bda38f7c185ef3d316db54851c9748518082866061fa4ae1eb6d9698
32834752f8a3fcd0b761e72c3546838ac596d61745da18ee612de629b295b746
5b53ab20839a6b0b138ce11a9f356b8bc289e3751a6205c5d7f23911caa3b4a6
a045660dcdaf7cf52b96b2f1d2180e98310401c5814fc02a9172ccb16fe4e1d0
20cbd9b5f5d0fa8ab0f9b56a1bb87ac0709978c615f7e97cbdc9a930e9dfa3c5
73305ba7763fbf30d3d8d9749020a3cebd6de0b8bd22a9a8e0804f530dd22046
314c54fed2fee85d890a1f8fc5a4ebe46dbee3ebc11db9a1bba6d0ad4e09a29d
cc648fe9bedb7613c174caa500da41b196d773132cfa4400c7d932decfffe735
fea501448ec71162e5b9790119690bd1b0d70c6ecb81c26417dc10c0634fca78
83f89456a35fb1f95a9198f909103946252ce858d30013d2830af4922cb0aace
b4b3956c31c4f8b95ce09b38f158ae66251977dd8bb8ed06d100406245616dd3
1064b6d4a8e0e19e5b0387360594f068a7fae5aa712615c8a3239c291a94c432
ba311c2d4049fdd2c28aa390ef3793cba37c319c0a69e6b81eb5a42de89b0be3
195c6bc5dcdb73fbe1c90c7e2f34b74bc34f4fb2cf38e5cdf8eca7ed915e544a
440ba875a48347243411384520b52b25cd49a11d93c9215d62cf5c848cd69183
b55590488346e61bb6baf1f42c0cd2142fb718bf7fe30082af05edf64f89ca4d
5484579ef6591d0bc214d9e469cbcee98a0f9b64a44d72f63bad0e72827e1442
d87c6d906a72f1834d12b08dba755254e02ffb2047bbaffe7da5bfe8a69e4d9e
00a0e455820ae8898ee839f73359cd3ec515ccfc09585bc154db7fe38eaf2bc3
9ac8b6267d03c51834cdf7a66088365c52e148ff163b68cf4e567c633caed2eb
3d22e8ae0fc0d7cce0ba6f0e6fb9a62b57f318259b67daf573e4e79f14c2f622
d438c2f283cda86e7c309ed6a407d7452517cbc483a74440db21cfba16588ef2
272cb195a450a25b117d4d8d5d3cb5076f9645f34adbb0d0d66d8518f33cc929
4deaf37942a745bbc1b745c916bbcc989b6a156e59b794a53927eb061937eb5e
79d8dd50b2ed2d69850f13c0c02aad38fbe97148e1034ee6339c209680001f8a
14db450c15d0d6438d631fbdee2d9d7b93a778ea75f2aa0481f52100e0b67f15
af02b92479239d1cc63ab3e5cdd45aa233e6d7f49d6dd8c942201b18132abd94
765bcc0dc67f72da32b8786cb73a0d7d9b54525946583a0a1821d513121f07e2
f1c8471d73bd931396e997b5e3fe196bf0d4d01098a58d353208e0a661cd6da2
d47bdbd0de9e0bd9661edc881220d22aaf110c4c52eb6effcf5c48569ec8ac61
61be4835fe9c93d297d9f38ba9d1a816d9ba507d3dd105a46471c201624e2d73
77e33d3a0cee5f09b859e39bc588612ae5c4e3c3fc945ac0bd18d808c39b5314
f199752cafddf0dca9744aab01951b843d7caddc2c5ceb31bc60c40d62306d2b
4693e467d36ebfe563f3406210c08cf68f8066fa4d309fb3c0a4c545a8a7691b
7cf62e2f2c5f930bbb4bd33c3b163ca3b85e952b21730b319186ab4e94cc642c
029abe0e3349415c4063e71c37975bba83881e05a0e8cf1067827f6b3b8ebe05
1778f6500e0181f9cd030907ffd8bfe3a5701314eb135e93f4a5b30314c9456b
4e3abf64baf1ac3769ce6209d33f1c2daae027c806a1740af20436aa4de14e3e
0859185dfc7fcf42b17d4809c959593861ff94170c01d44af6e71d912da57f77
169dc311bb6d053ee61f197e7e9dfebd91712cd5d2dbf43a9ef8057f5d4abbdb
9c5e9aede442304d2ec73bc30529a160b730f89ee63c0549a880f592c35250e0
9d959e399bbbb6764413811c6a23ea7fa23760702e837e228e57955df57d1d05
c01ab8785f36171b7feea9205d2257f7383744168a98c6c83cfe966ac14dd046
e72406de9b9cf103e554201fcf2022b6e9a965119eea4327012b063ad357eca7
0e8a4ce290fbdf45aa5fdcc2c8738c50a5e5f418e828e9ca02bddc45e0430e42
89f9e144b0a18cb49f418b69439537f325b05f6e81aedacaa58aa2a6bf40e9e0
45c5ddb8ed7c2a0251dc0123009c355d3bc5bacdf87d4f1143047cd80b34b24c
3f5ed988d14b1460c6b1b82572f30bf79cc7e4508c7544ac5133f2f31c296fc9
2a211563238e153ed9d498abdf1a979c4c560c602fd50502353a442dd76f181d
342220770f7b39b50263a12df563cf00ecc3e43095e03f1ba660f3780139e1c4
4943cdf8dc7ab5aea652ba7b84f5ee36ba89c81bc4ea09732d217a2709a8786a
94b027bcf1869cae17a234bea83916c572c171291457890b9e58e9ab9611048b
a12fab031108955595bad3ae07e15a64d1ad13737762547f0a43b28e75421f39
232e2b8ae14b340b345c68c93c1b0093dd711d14c1f248d4c8bed16ec9adcaee
31950a996b6315133170abba29be3d3369571a37940ec58ca4197002684cd679
1e8c5e96af1952bc496f0422baeb28950932e0c5625deba7de5668000184790f
91445ff254d3e78584e5503e7232967ebb9a2fe49feb0decdde89f1e70e5fdda
795a05b778c0ed409474ae76eaf7f04f298f14fa15fa49dba8ab50bbd51fcb6b
bb5e72c3605c5861267ae550d30aedcc45c7e130271f4c2aedae526099912bbd
a05c885e273e0e2b198ffdacfa7dff578e90560582a7814d2d0b5359ee76c029
c18625bc49fb43380d78e8eb52613f9b716a81c0a4f2f84e9fc4d393bc91f043
98d2bb85454adc2c7f7b2524f2da3eaaa200e080f94018f263b9cecaa5eeac51
338617d73cc708c98d1b923602faa152cade6983db50d51907aab1deb1b73926
2d6dd3f337e63ba2308d94eb7eb15bba6a2934b54da86b24b4c0d17654814a53
3268460318bc7331675d807b2ee518dc7750bdcb1f94c1f064aa0cb0eb729aef
fa641328164a7ee1e50fcf0d681487d44f9e7898c509cb3e06f94cd8a4c4a7ab
9d6b69091fd9b8cabc1681961ac359efa62a72341d4954b8791cc7b70969ee6d
52e675fcbeff932c2e2a66f9e247f2b938d2e648fe3d3e80383a8265e38655f9
f68c52efcebbd76716403290b13ae332f454416b81e2ff80c6fa48c0f9e79079
418c62d4a7df64587ff77058f105d19dd5af1ef2b88226add4eb5560aeab03b9
cce3ff2f75161a81341a06c403c1f6ae3f632bd6965c5f9fd9dbd37719dcea41
df909258692ee167948edfc83cc6285ca1dde345e9e4807988be920cd59dd829
6cce9d6c38b960ac1bf1979431ccbe2c38bd5b648dbbc618b69c530f2e0d6810
54ef5ea4b7e8276a4fc5f1aed6543061d89149608fa8d41e80164bf5b67a7e08
70a423f848d050cdf06630cbfac94f9ef7503e7eba534801e344b20d4091f4c1
ef6e2c10ed375c454131fb557e7a75c82a6ff6b7c92f10a5f0e5118f4e3ecab2
1c1bf8218fe6a4f7944b2748f303a1970809cf88c762f970f44757245a3a3093
1379139878316c900386673ef7266c7cf4c2202cba8cef19ab6fa13149381da3
e3086c3d8613c8c6d5582859259d0c5d22b8107628d9bb056a79646cef822995
d7b4be9d1636302bb6d2f53ac9ac644c477eefa4b75b546a7b097305f5b54c18
c9d77adf1a655dae896d86bb7dd177dba3c6f83872ab190979669e37622c906f
89fcf86fd5b76141023a2fd96c02d680d8309e0a15c325390b2963ae53db2a95
640dca853180bbbc5002ab5c4ec5c8a7c4564a3a1080a9d032d841d0b5b3461f
4022b99eaadacb93e50c0550ce0d83f11bd83e9f65a358bf29bc0e5843213422
ae484c3120d66b04700a559d767681edeeac55d8562f2cea5216f45b1dc77d04
dd9252cea016d1fb85356442c5dd7d5aa692cc7a3a293f1d0ae91d4761ec7785
85eeefecb8045a68f11fad20cd97320cbdacec56d17f44594c41f29f495b28bf
98bc877a27e8b82400fe58dd1632288659737bac63240ec777a1becdffd91ba8
c871fcb3c1ea5b067f049b58275ebecb71a0dca4d3a0f9b762d28c43826e89e1
d9a24b40905d34e393da45991f8420609f43cd9abc6a43395caae2b93f9bccb3
9a08527c0046c05191211a8740a5644d3e9418c8dcec87cfbaca6d574a5d16fb
2e384908c549b2423f82e77cfd136ce6672ae2e7d5137d40b514b255f5092529
9ce6590687aac6b13da852dcca3e8c6bde96e9b8d4ecd2391a6c8fc9aca643dc
90a96ab2c753c1bd4645f2369bdb52169a23b2b6f0496a10a178554914f9f84c
27eb4facbc929245a60fef14f1fc87569cd147bd2b367b7b2d89a6cd04004c2e
11f7fe7e9fed0c39fb625bc2f7f3ba5f9f7507ec852d501dbd46d2017c9cda04
8d019fd79245efb435beba84c32a732d744de2e49b1336f67654f21738e3a0e2
82d2b72f3b00422715ef51838a93db89b49ac5db2bfd457aa4b484ee98cfff94
0607706476c47af9ce1f5e84458f2b9e2f8267e00cf6ec47ed4fc11b637bb138
1391af7cce116fbc2ee5b16a0c37fbcf05a11267eb265236a9994b4cd9983a35
929e6b33881fcce1df00d72f37ec2d23e827decf325c69da63874cf677c3b662
7403bc845940010957f45dc36f5b6a84d3ebcb96ace69b56b752265045fdfc05
d9bacf83b37a4ad41a8d171a4a4be3bfb2078444adbf2f167a4599860ad15fe2
b876ebcdd80d5f4a3471c3e1fde0f5d986a65c02c978e51d989e43b82352c6c8
9d58079d70a33607373d41c9ee6931a602427486fdc8466f67ee663b108364a4
a9b50ce5b9107e719f3ae4fbc9b7bcda3e71a953920399fa07efd706fbfa1dfa
73b36c15269428ed9ea4bd9243d79e29bebad5f86dfbbe0904cb6f39c6b6eeb4
886b014f16a68e40301a249597845d47ca506e69e1261b5f0b3dbeb68a74e0b5
86cdf5c86a3583141ffd270d66e6a7ff6ddf12ac79a8fd86927348dde2bfe4f5
8f14e427e23ca3041cd7912cb47b87c4f7e4dcc96ba05bcebd5941aaec909f07
84b4163c85afb76a94a07631e838560d5ec4606ec815dc75c04a4d3f0c1481cf
9ac2566ed72d5e6d0fcfb9f6f0fa6e49643b6a332b7ae35d01f63aa32e3206ce
19b427d39e4893854dcbaf8ec9d3d935308457a7dfa36d6ab559a104fc813401
2616a27b3f0b3185e427bae1229c8743803a7db13b47961db41d984f0017f77d
d5463fac78a6c7329b6916eea25ba5b08dc72db752e315d4c16ea30ed5e64aed
46f0009429487bf54a4e1625409a878b4223d29c8f7419c3192fa5c50b50aa4c
c671930653505a7d04f0ac280727dddc11b35724fdd6ad22ec3921134e29772d
1744464d14702ebd91c6e4817d6e30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
/UniqueXX 5000827 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3036f2ed7bb65d
cc883aff8d6350d6e8af1a9c1d2d7fcddc4c554c7e350f2420586f43e2124611
487cdb176d453854b51cb8f9100bf241899bbef87d57f1135e589813995c4d86
ce91db2b3757948f365186c2a4f32d845f659a8e95028f9c0168851997135c67
ce7654f2de4f22f51311aa78f440e5fc2c58f6df901fd071b2d53b2697bfcebc
43fe4508828b4756ebbe1f3e8512514162b3bb44493a65f11ab56deaf152fd01
bc8b642e6021af01998edc76b6a1929fbb9fa4fd1a430bfd4464b53f75075f66
c726fc037fc23cf09a178ffc60908f77d8ea9dea79c1e21fcb5a6a994e5a8e5c
c6d6291891df7695db58a2dfcf3bc9a17888c29559ce8f37dd35c0ae35def3e8
daa6d8d574f457b0385efd1611c048b9ce76393fbfa006fd23d742cfe7016035
5fe95302b129a824c7794a9de47e463a7fdc42fd72b9da3fabc3e65d90258ac9
c1ecbd3654b103a488715f9e0e649b57146b786aa399c6ff39f362816306a1e0
ac83a4c83410030d740e15165683e843f69579ec1824c36935ed4705962f494c
401400303b590614e5daa8dc53fdda083fc854e535fcd575b38aa43d3d5c4a38
d56bafa926fb9e7fd69be1af2b502849500693dadd5f00b3185a8b18a0b64f28
9f33f5f1eceb14d6945a22d0def259076cb9b11d899318852053d98c36ce0a0b
e347edaf1e4e777c303b4a051e3da7ae5140ce9dfa018a8669b0b551696e194d
d54ca062ea1ff406ca877790dfd1dc18ac62288cfff849d4a142cb1c1ac5faa0
ae05f039e3cdec6ede558fa3faebb0d3eeb981e561fde8899d5d4effd8610a21
b1ee990d09836d75ca7f8adf56ce3802bb45fa9a0e9449fb97ed1933f3686923
7d6f9b8ba6e7ddd9b21bc2e53af56e28c2dc8ae41f3869a71f23667ab4871f21
2c30e98811166de971c21bb9fbd68e47e0968b4bae2ecbacde3180a7b6571aaa
ed7607583838480507923adff15b8807999dec0c918ffff9741b5da3cdc533b3
dee76202ba7b1d5d4dd92b5473c23f043cb40119e7dfe8b56ff65d69da8e33eb
3fe7f8c7772fd169734ddd090c79728b108687ad12b149a54ff44f3a45216425
7d366b1d955311e755a4c996429815edba5d8b457fc14029a205da9a6ae32615
e09327addbb5ae01ea62e29ad23ff0fe4d657beb6c031e7065c2a2e27a59ae01
51b4371916f30948401aadabe4754a1764707f5717dacdceab632a1c71e649d0
110fc11c20960033c9d12ef36fd527afc5a0a6533daa9426ddcade2ca98e6663
fe4ae4a97a0dcf568ac39b8d7c5b6f63ce0f477da684d981d5f2f1183b0f621a
589bf84718a5133e71492efa86ee596420de71a52d4904284557b8dd96a135bb
21fd5e96527cc3fea8858770836ccc8ca75f86eafd94225db57138d55d4eb9dc
bb4459499057895ed275cfc96f717277c86cccd6c3bfd91d7986e04c3443e655
3d4b6e97f59a5a171f2b8b5cfa80206a1c4a05dde028801298e00fc60da4e118
977028660bb6c2b0fa8ad9cfcccdeb9eea8b7c3443f5ec919b9249b1701b6d23
039bd4405b99f0b0b39c8cd1bdfb3711cc7f90241bcf59c7c2c90d6de2bb09b4
3a5a329a3ea48299c820400b2260d2e1bf3255707d9a7960b528892e9baa14b2
519ef66085859ef5e4d4b98b7a7ca179cafe34b169440bd23bffa8f3b8f80f69
6bbb1fe0d0122329a57f515c234eb4308f54285bd3fd79348c4e76d9944dccc2
0d6e2da03f988b0c9119fa403d2267df63b2bca7ba58a56230a5f617384d3208
bc8e124c6bd4c0b464ef7d4d30feb71829ba4457e3c888a9f2e45e0e5eec8dbb
fdc09c5fe5e1d232b4e68daf74d8628b138f891f24cd49ede774db44e6c1996b
9ba21e46f2fff8f19d732687a9b2500303a1188760843a3ba5eb91443f8541a7
315c0cea0f3115aba2ede033839598940efef7e116be244770e30b7678c07cfc
7392a6e6326cac8484108c830893fb870ab7a719aeccaf46c3752dc17b403823
6be36320a7845c44f73840dbef140dd83f7fb21de14a0f2b35db866c4e3f023c
9626e567b027711cc05da2cf120de941933f52d00a74dac61e26c32402b64354
97ce02213de43f9d63e19344476441a38919740a148b314eb7f7661dc6a99f59
6162969a52bb51eebba631a673245d61acf4497a05c4ce194486abc710d798e0
b1a5f19871e8e5ef88adbfe0011ed68546480286323063100e76faf79d873d70
50d127a99ae683cf4903017c935ac934095575c5b2cf3ee731246e65f16560d9
570e1f63283653949da394657f2cfee2e9cc830de3362b5a9aa550fa2e0aeebd
a832b7c13cac6e4e79a549c43a0f89fede1d021c5818c16c644de477d1bd49d8
746f3b1606d2115b409db4eac3234b4c646a33bb21a4471ccc253e4b100eb6dc
b8da6930d0b0f7c07e1d5aa2e44a42c3d290e1cba1fc08d180b83ce8e2502eac
121147ca6dde1c1f34e9bb34b59750676a4e6e24fe82984ad52ed3d7eaafb98e
985e631b207caa966376082a63853331f20803cd49f125e11419cf2b69b84b5d
ad86cb40f473d77727c389c7aa49ca17ab228dd42a9b87e626aabc8b99de7b12
c9d9bc4be22b112ed0209784e722be56f8578de9e3892e3dd5e87c287d26e844
182951e9f62114c88b704b15f342f33360779b5d75fb553be13a36a5e8efc1fd
ae01b208370f59c622854e057efd0f01839ad2a4fb1bd25b06530ab961649877
58e010aa13cc540c7b7b8c69d7fdedb90b5a8026ac83d0210d79b606d7b3beed
1621b0e4b6076ec55cd0f377df3e4d750d9aa40d3469a1f6ab14277a13855ce2
21db0b1797240fe86508cd709cde77cc8ea505af25b0f2b441ff1273d9e3e455
9cb0bdb680ec072bbeb3c16748649a3b128a808a2ec1dd81e04b0ce170c371fd
5e5a5889e51a6ccabfdfa76f6da8fc94dc1673a033c5b419499d357904471c48
0b286f27b36e24bfb31fce135f47d57a615fe22f668d9608f5b69ac2fff386a9
4c76844e7469632dc39ff993a47e597ca803a657cba23a06ea8f20ff7f53acb0
9e1e4ebe60de41d21c7a8afd6a16f9f6ffe2d1a304cfd55a4bccd479fa58da0a
b826af92fde90b215f5c7ed6e01f54d2cdaa83c10e297c5db8e774c24c0f3e13
6e2a6797eec798678cd4c8bbc61b4aee2a0ec7869e611a4e2a3f93b474ff46da
3b10b9c3716904fa4573295bb4b3afe5fc0f520d5360cf3fbf8e454c386955dd
bcc7cba0e2ecdb834e0a010945bbce1f598a50ae55cddd15d0c0789b31a659ce
3961d322624c00a561dfb988bef8376fa54da05eaacada178e7dfa3c88e3619b
9ae8bf9e4d78d10cc0f4af04fa42fab75a7763411db376d952c9fcf7f34e5102
5ded49143e1bc5b493c3bd50d04a376985b4af134fd403e27eb390a9697e29fd
2f5e866065abbf3ef50c920675131f8848c491173e0f9d330f8ee3559dae3840
b91bc26e5319d683370485987ef019e733721a89705ba53458306e29e36d023c
02c0343d24d4f1d0509baabcb45ac719ca960b98bd3e6a7b7464fbd757fde60f
2e36a8680d7f598155b4c51114e36cf96221ec6f2808cbb05a70eb45cb03ef54
fbee3da4307a6dcf5ce1acf9dd437ed99644488d58ba59d1c920ed3960950f7d
80f5eaf133b20269edfec327eb4a1c8c05a907a4565b20e7ada6d3539d07007b
a7460b93e2b4ca6b0037fb1e6285c0e8081a82fcefbcbc428cabb63f81081944
9a29e59479aac6e08a0b4e6f74ae0f5f93455bad5d7c255ff95f09810202022a
df2063edaa29c824a5e24363fc851850029a4d96afba77fdd7c7ccf947b51bcc
d98ef899b49ff326563e6a4a76fc42fcd77cf2888b4ae01589115ff7680a14b5
e7c3f4c18c5ca788d0b13a67e7c518bba4b74673085d71a5a36a97c4e0cf76c6
20c65eb3fad53fc72a1304b34403e4d03872e64d7dad29b1477646a5f23ee50d
b57feab8ef6f14d3662ea17becdf77577221325d52bf75ce3311c9d4d4bb3d9f
50f7f2c48ef7e12ce1616991c3aff493ae1ffb5d9a1f0a3b1d2baa2185c7de9b
7b1844c4f2dc7c0c0a7297820d80ae85ba3460e7dbdaa8d0d90a3afe3efa43cc
0e05a68eb3836e793a820a2162d9bfa235183d4441bc2094a9e16f52b1eec958
59224fa1d42a453d520a7427401b4e0dd02b04f42b3fe3f9a46f1eec85ccd7ae
5b009ff8e07df6215aac913a1f730d987d64fc11d6e4e5ff0b419ef87a24fab0
12b8214ff999fdb3961b8c5b18f20843a63ea79599d62ed078fd86b0baa09055
ef0a59a7e7b0e61bec45ca2d2b01de6f6b68999731da3c506505670fb2f1569d
c80d26f16ee3bf72719b500225efa6973f80b806f625f6d48272dc0ca9e82ab9
d4cb51c7d14dd7bf4605ea24f2eea4734acac88e08b8a06b6dea1728a7f63768
5c3afa4751f6c0cdcc3c68dfcee02a6d1995a040320b836336f0c606f5ecae94
1f5257e49e65ebe3cee4d24d40a541e2c2b2fd1918c7237bae3b62f3e8a12c5f
0b804ac159dbfe0945443be2a2eef11d4c9a86f3007a1577ca8add956ce574d9
a2f90991c20ebe95b400ce3ae3f1fe673b7c518c1047415805fd5cabb2443942
593b49a23b9b57a2a55a1d73caa6bb6e273d20c5ac95084f77858250411ef049
d394d9c7eb3b7744470214aa6059a5bc2efce2178cb33f3e26f3890677050274
fbef3dba112cf35cbbbc681f3c82938824e5f9231b4c82ba3a50779951aee3cf
cf265c90dd78d7b71f18dc70e7b981d67d4d8bfd29e8ce5847309cc8b2b2a7bb
9c00f53f71c81ec2a7bac19dbe68a36df20abfebcc561abcb6e3785a3c57b42d
c9054a1904fd69ba2c26d740c2610ade83921a26b7441b6c8ed99d058fe22b4a
ad8d0555b1191776de38ad0f174126b232a857276623f2009338b9e98530f4cd
f6a0377a3713f2f8fcdab8fe80288895f940d8cb56f9183b94db219e80763e7d
93b3105bccbd767ac28685e6b1873dcc70e2fd5418bfd1fa084a103509145d8e
ad41e96173cfbc56455505b2e84c49a93cb8abeb8551410ad01dc48ee75b6893
5d02cf665f7f5f661497ad4969e24c623010f80cdf0d8538702c5ea2700f6a21
91c994d73f5802479be4634ac189af7f2ef070f83cb684c871ccd3b426b0402c
39a9168bcb3a9144019a04e02206435a00f1422a182bf9e4c12db8793d556e24
87840c7462c3286f5a6d77993ccb91c5227d9a7457c4109e0f6e41d902d58f82
d9a9ef064f7c56a07012a971e3b226c6a60688519c4bf49eabfb8d665431eb78
ade0b07b757abf15906361a75a2f0aed690a88e31702e5b84cb19db0c1fee868
ef634f11c80803c686f03688fd6898cb00231b2331850dd1fd12171802bf3800
10abd8729a23ac6eb97e76d683e3b1851d8267332eb655359c4b30a8e6532f78
f90cc0aae238c343ae786dbb4e0382519f384e71f8583f6f7e4b8f0c04c56b24
55f3cbbea23209ba951a68eaa14a908918f6ef7fd15bc4a6fec05f1d92610f5d
c25bf286ced6aa6f31d8bb3104d375592728bcbcfe25ae502598b8bf08774c53
7b1ff13890185363735c9e9b2d40962030b7c58286a93826caa52c9960ff0490
9121607a0410878fe48569fdccae1c316b5ce9c998d0789dc4ff1d743825dec4
7e859fe5ecf7f9e688d2bc571be2466bcd4df94b4d0e7de3ec3cca6ad0a90c24
977ffaa46fce02229ebf9bdc2c4398ae317237c7fbee4fae6fd0af60a0243448
a4124a092717fb1ace1f48dd9f89e78bce9074e3b5ecf47937f0e6c5f5a855ff
cbc5a14b3cc8323bc914220b8c6256626dbb00fea0d1e889b975eed075ddd0d6
2b847d4884dae15cba0a4d19698d7ad320ffa43b174683dd09c41153851483e2
d50655a925bef504ac6cde8bf31c45684c278adbd7178c636c7735ea8101da3f
22ded50a3a09ae0d5fef072409a163cc8be11d808fac7cb048eb555af36540f4
c6fe08469dfdefd9f083c299faa0ab7e7c632c36a5a1619e3d72b189c3a04932
10dbb69cc107b8b1a4fc6d98f4acd6059a0f77823a830f837daf99247c900a79
3f4dd866891d6b81d7cb2d081c4bf646d539b316bf5f410726d4b7633905ecf3
bb050dccfecbd14fb3a706c84d4c644584141820a7cf531f593a305c8bb5b719
b0ce511936e43c63e6545f7c9d103f1d9bb840f294d11a6fd806a65faf5fe692
f26f38339549bb66bc240a8918565960a5df0800c09b4a4fe99b4ba22e69fc09
cf1169bf48293f37eb7a047c139ffba25b80fc54bb9f5b147cf10c5352b5bff1
d0d23f02d9c9ddf0b55ebe611c663a1fe0f4cb63323910f8de4dd8cafb5361e4
c3fa0da6d1088fd0aa1196ef960a0f4cbeb35fe7e309d03b94082c90cc19da09
44bc81f1ba934cb79a516b0ad60482895fa76ba6222246a84cc3a0b9c5ac6b60
c4142513d9a433fa1a8e159a0f61899acd4f3b27e6d5ca4a674b0aeb01f5a822
4f65157c85369527632b5002c24e12ad61a0cc28aae83b372634f25d5e17da48
7cab2f6ad7469644a97ab5d025740f07dd7d994ae801a4e3c139d56a4f6ad069
a1604d8e5ddeaf8b84e347d5ddc558dc0d3c9f4ed40feba51d1619ec6acd6dca
e28ae53d96d539b08b7d731748f28cda8179c80c550b7bc6d4b876cfac204bdc
683e472865cf3d8d58f39b220f2688bc475e274c036688ec231cfc7e2ef75e72
a22ce27f53f66d26c142a93785d0f9253c02f1ebed10088559b1e6a2d8d2ad06
f62e91e9c93d5b218becc3a754869a3672e56e6cf7ee99f369c962fc71246827
7f731ee712bd4550cbad67fa3303b4dcc19dc98fa45b226ee365d548f259ec78
fc2fd2d1f403618d7dd9b957be64299df1604d2915e68fe9867097f1dc8fb6ed
3bf18671b9a71031bd26ec51b80c7233c334caf13275532c064fbf2e2b60a789
ebe368aafc6f0447924b18c7e37023641c2f86dab42c635d6a4b8abe5503ef95
c88db0931eb33d66b3325f87922f97d6ef08521b4922715b75c8a65adb24c2ac
2929e452eb64d0d69f845ce9e56204ef38261725529bc358d5b399df6512f7a0
28569fd79cb6163e3319595273490088f5419e2799d871c4025dcd180d0cde9e
9a6e784c60070dd35c6dc3dbef7be3744214e951c5f680b3c9b9d8bb1fa64eab
f07ed32d9d4c4e560a5b8c82d66150fd3fa8f1843b328bfaa061b3880dcdeb3e
9f21fd0037ab5203de39a0fa23e6ed18ca3461bd239a716abdb28b155bf6d6dc
377342df484cc14caac9468578c4705925544ce41b87ffd579d6d241621927fa
4cb844eee8d91bcb8a894853ae231be01f81aed4b5852c6753bf8529387fdf87
a6ce5ac740ce9e420efcffcb112be1bb16cdd10d31f2b77673033cf7ac777e8c
61a45eeb5b28ad0cb1072a2064adbf7895a499146b10581fe53b1ca6bddb036e
69c704f753f3d5127489ef5fd7c12725309091436c5a7fcaad335c6f75908f75
a0145c181c23cbba667e8e9d218b93dfc85b18392a2f87109a9e92322d7c444e
68bdbae26bea311644f8cd6e507f7969263b6e2cf0229bd2d5e8c83bf1bc823e
ae23657219ec923828af45d7932fb39f026e8b6056fc9e4b5958fdb15867b539
9696919ca9ca6ccde441debe322bc4890f40da47ef9274fd0bb5657a296ff220
18398c68b64b9417d85ad4642075cc0c5016395e9ee4e69a09102afffbc0d4fc
214d7971c74f82f7986d265d5dfcc9d5ace8413056ef1d5e1a09d451dc9b2820
af120366a718b65ba369515fffc349fcb36f1db98b0ddb5ffc96143152420b12
921b6557b06b214931c414e019d8d4b7a5413191c4839aa41a0d046c29343dd6
ac3ef6481e21809a37cf1418755ae2cf5d75328f52dfaa61f6f784e6439ffda4
cfeefa5ebd3e56f541ced9bebedbe165befd0d857154708fc66df1d682e954bf
a25995c414afa6b64a905b3b074e0a488a566d51ddc64eb02aaf30be7e644d4f
0a135933697c1be71f195ca58377648112377fcf15d140f04e6ea2a479dcb697
063fc4041026c4802a512b05321af456090f86222520c5b32e2dae9c807694cf
8837168c1a26d3640ec1a4050ca087055775a12b6f8090b0514cf5d78ea4eaac
9780c9c8d9ac47665b12286ed67c715ce4e1a6253f5357b46fe384f799a0487a
a5676c78a9eaef2fb5b70f0eb676a32f05eac1b8bd43057d36f6a4bfe12e3684
161c5c2ee2badb130b2d883f1bb4236d3377a0ab41526a17b46679b1df29d0f0
88093afe5427012e3a24762b644a48f3baac84b37d53e8bc41f8e47dc3d3a17c
1c2329a38aea2215c7670f8ef21d7bbb3b318ebb0647fce532cd90aec91c433d
409878856c2c757b5a4b50ffb40efdf9a0efcfa7a7a464b88dae8ce0fa9ae6ed
504417c97c806fb43aaa55eee4cc949e55b2fe94d80f491cf3499f97320df506
3c80be17639150cd4cb3b03c6e6a9220438470f586adc58901e65164fd555fd5
6cad9f2ebe8e3bf19d75c870e681ce97df0c9e2b13a11c67323c3d181144e620
70bba0e3d623b8f0a1d200b3b22664180d2cddd9459bdf96703bc4abc798bd2d
c0da1d601610b4b57cf03b7bc207b77bb4a3c142a96d18e73e43b2d1a27537ea
c80c93975779f137403c756f8300867adf3115fd30c027837bdcbde5a516c8b0
0fa8409da1be25ab9172fc74e48833315b2366a6831945864d26d2b150557082
0df5a2c9fa7bea4bf365a5107054b972854a0f9338e1c0c77259e4ba1cc185de
77170bc9024cf80f51ca9d584609841a6d0906be3757345ca28e9f9a8eea1d0e
ffbb19dfbd805b5734d76e1af107129f5134fbe7c8577a7c45415833d33af9b0
1738d46503e3fe8294ed00f74ebd732a65c3bd7bf7cde871b6eddec235bf87cf
cfd9ca0dabcd6c226684bd24c05253816a8c6d2babc76a3530873b2d959c994d
c21efbf5cd18307764299aa02fe0bfb8e2695a984d9173de0c6dad4e6bbdf5cb
ae7860a76fbd4e4678842b9e5a102cffdac01f5c4be02bf7ca3eed511bfc038d
8a2af4710f939d74cc5dd4fc1d181c4857b292a0cb1321a32173036a0bce9164
497477f6b3c813e5bf91d7f6b52c14bce64c9b1d205657b9df8db5576743fd65
1575dfaedd2893f2b053ee9c10a5d54ebd6824d85aed13ed57b8833ff8a3c2fb
ed46203a2800207645349a3198585157f6f609e3e7cb5be92aaa2d0e4bb6cf86
0f47ef2517674e0516835ada3cf76be676e526a0b601ea3181df7b96a2034163
46cc66ff619f478c4ddc69273249754fcba7d3d5f5b4b3653b3b2567a58b01b0
d7731318e9e1f4ea8949a018e92977c4a48caf912c2fdada476e19c0c718d8c6
c18579e292601835d98ce8b2fd6fe4f696b074a90747cf493cce034bd85e6704
90a2ff0e57692a1a3b4b1715e0d003879c315ff70d2d45c536423ed028caaede
e6a7cc92cd6eabb321dce17280bc423c1b64f629ce7aea019382a94c8e394c76
a6b19067546679cce3990acb4424b195f104f7c720c9429a08163c202db7093e
a88d63c0e8056f1703dafc454a72245258b8c4d206dca2f63f4d30222142bf52
9c27b52364f21be212c98662134b1c6523d9832e5c3f8bdcef3807deccfc9e05
00413d2c32b9d263ea3c5b8a39167e28ea5be7a1629953d0bcc4c29e8cfd20ca
69f3a6bc16b144203b4e9d8fbe79c5eed4d95e10f2a619e0c6a461b1a48a8173
eec59554d0e2f254047b2bce71b8e5d1ff398c663536689800c28eba829ae01b
35951576afcd6efc3637da496622c21493ade917e81e8784f62b3a5b85736d47
4c95970ba484965fc712636b02d40ae422533326df1f7ffbc75f73708f0ddbfa
c4cb2e7832435458df584dbbd78b3de3a457f256a95c7be0f3eabe1b3d4f2f8b
6508ff6d6c4039124d49a4f37706b60123f0f02fdb7960f2dda1b0cac90d5a84
6997fa76a3e1508b2b590b8d202d7c8d6512810857f3300732afcf2a618db5cb
bbf57f7675cf6afedeede1653a2f16dd1d9d9a363cbbe7a463e2253885442df3
3d3d596e22d469b2782ba1eb6d051f08f71260bff8e561962e95615103546e28
dee213cd2afc8e0cc3ba4fb6de0ff15a78778705c79afd517a2813b157857290
30670d66f2dbd4c2b030690fed50fe3baf574d501ff72f254d3d8d19bfa17521
872a279c521667a7e8992e7b15da1a05063016c4b6397d938fe061ce8715b0d2
33b18fbdcd0d9062385bc95cc704813c6fc49d8cbb24b41ce4688ee5e11de8b5
4721df8541e455571143ca123e7b6d6fa0d128af21899149b5051164b82fcad4
9d6030306a6eae03392ad97d6a4008f038cfac23f9f59d89742a3a83742a1060
6b1505579c5d1fe8918584364e9764823d9cc62ed3a38b337787766f2732536e
bd68618af6551e004e49912a59ca4e881b804ae644a216b882ce83555aab3dec
caaa70dbe4125b7703309e772027c0286f4e5ae6760cd69d7c696d81bf879be9
c6c8ea17aa8018cc79723aa27ae61369cd13db817fb177210f7cfaf69b8c3144
b99a90b28d65ee2c2b6bf6a8b119d87161b637c0c4b40f53c3516f4ace23633d
282468703bf1c2cb4c1fb94b32a9eb8c999950ea6759de8beaad9873167d06fb
c8406532a25ba3397ef9c6191e1f10023b78dbf9a1a863b33d420ee9663bbcc9
83207a3a65feb5c83a2bff8affb607eb5ea4197681f44a81262d90f4c421f9eb
20948378fb2215263e59b6357972cda6533c18470189197067d36300cadfe096
1ca433037d6fb5402e0a4bed98641e97e27b9dcb86726047ca6372da3078138c
cb9782e84a9ff51dd8788224a6cfccd77b2b0ebdba2c7244f4fb52eeb65292a1
1554f7a1e269a37f01df34d01db7cbd67d22d090ecf5afa2aafbc8185e168316
02675a503a27cd55080f7007c603333553f2c4be4e0b2c58fdc81d2167672781
65bd2a5bdfd07e66d78d13ec071cc8537bd38ed20201309946c3b3c47a787079
ba838379c31c22fecb1a2d3362bf3670910a9ce011f8719a35dd5e1cd92b1fd0
6774cb7b05688987fdca0f3325eaded685627856e0f46f6ce16ea72055db452d
b1b12131f5ce90db2e643a128f7d9f53a291468f233f2d10874a8abcc7f6c863
89f7a6cc38a147b071d7ceef4c16c246756afa9d877b857dc6785fb4645b34f9
67bbd1e3ddf69d190ba0f4943cd4c85fff777a423bbb59a736ec7c4f16d70a08
520f71e45ede8c0cdf7c69acc491f5fc3b7a694e9ab4c38884f81e87eb6ead19
529db54b360454ff9c9b9fea6b1a7f1b1a6bfed2e4df1d131a431721d5e87377
5384feaef73bbed8d0485d01a27769f8698b08bbe85fd5c6b9b521c08af5e19c
8cf04d6a9a03491574e13875535e0a4888cb597006158705fb81b79506117fb4
79c6c68410acd1d4e8486452a1b771d603a6fc54624e452505d0aae3ec85f5c1
7793ffdfc3bdb8b00e2e06ce2802ba051b38e7b4fcbcb9eab6188e3eb9f3763f
0f252be3a79be2ffb2c7fe32ba0040bdd0bdc1cf536dbea34939de7620564835
ee84df66ddd892abda0a1cce95521764bc177be96aff7efe93b2a80d758d7390
89c956341940e8ac4f4349c2b74a77669f88503db876685c06814a71794d0d1a
ddd2671b12fe7b475e325d6c765f2fc751cb8ff75d1b515b1c50d33899c18cc8
be85884fbdf5b19c387fb548e17879edd9dbf56326ef56b86da48538e7c3a7b8
c63f259f379538ecb1606df56b375a332a0da3292ac54df24954cf76e31793da
70db479976728e26abde1bedf3c68bd9b7df83416c1c09ee37a0be02bae85255
a137e48f6199a42e6cedb29ee0e396bc942ef64723462572033c83eb52db1116
e24c53b9f9f978a389b921c90f0e3d26e0fa15281037545643bdbf9f3dd8d278
e21fd867f1e63bd7f2281d7bd00f5641d63a16c7613d22c7621418915abd217a
074f6735ca47367700e1d48a3436a29c1120fad605066d3db473b95e61bff859
18b5b414e00c229ea4026d8f1a433461766a30efa71674ffb583902d43a604e2
8c6cf5b96f52a9e674b23d046d2ced424f6ee271f147b8696a02f19e05e13a5a
216c0498445b8e00cf531166452d62373863511b9aa6c3453a6200b874c22a6a
b02fca167f8df3e8711ba644e13e210698e7088cfb33fd6fc1ddeaa239b43cca
92c1ced63334955eeb9bda60a1c191ed2b9161ec225a759033249fd570dfc345
a64e64839b6544433fa57f7b0b4bae7c86b02b2e2abe7fe4c97730c708f3057f
9ca6f2407732d67b25e743e1a0a09766a857110d24fe973a40242b6ee9238502
c639e3bd5ccd01c0cb58f93718dec13a302a764ca307d47817ac22f24c733577
a70064b513015c23dd7e5650ae6f747885d5b29de8d7f710c29911602b7024ba
f50c4b275f0a1b1430fb432df47b5e31a97f524d8c7f97987cf1b38562bd9439
c70b947fb3b4d5f694a473df2ba97a8cc05f50a688d3bd6eb6282e39d69177b2
3759dc785034ca2a1c766c0fad7ef5f73c2a407e078e0a2d4163c6af20f422ee
26418d7b5d71d72747118e9fc40382f4ff1f2b6bf59e016e1d0e2b05fa062da7
e8d9bf65e85328df52b3526dd4d0f59e5c29b5451651527bdb643fde9770a5e3
4e5da9201a44c6ec3c9c54d32969169fcca6b0a938098c7a1c75580a01f4e302
f4cd93df6d5af2439a73bf7f4a76fa3de8dbe355bfeee22186368c3d2b04e815
3dcdb45ee5aacbc1aaafc08a05cfcb36bebd6c9a7adea0be09963280782e0a77
dfe6c3237cace053a98ed89671bb6ed04b2c9ff00c20b2d1c614df64a19d53bc
82c86df5812c0726e98f49d026b774b54fd711bf7eed13f565435c470e65e757
2a735681a4462c75d7ca9b72aca8d8a13365d4e02c3a39688c26e16ac42aba25
38b2858f907f6cfe130ff6772237bfd0d0c39f631b4bc1ce96a84337a9c24d58
62a15f61da1e03d2376ade70395f53d83bb77dc4b319479e740b27be3e79c033
09a0167ba7a0c60ed9a99607fa365d127bef59e1324e86fea509254162fef363
4c7a66a5102fe3910742bddbd726b561a4970a3b7ac4293b43aa1857f056d014
9597dc0b8a7bfd939cdc1d13e50bce996e077257f07bd9b338117d4bff4691b9
42e20fb3b7ef09a09cca95eadc3b059e03fca780d2bad681ea15313ff9dbe173
1207707c4bbf07c409d21a5e67b6d1f9d3c8462c77e20caf2e2fcbd638f711cf
2914e8db29750724d69026754f7174d33fbc4e53cde2f44609f57732f4a2ad26
479efebd98f77dfa498275cb3b71c547d90c08ceea41fef8597ce2c614a75531
c8163a49e17c18bf9d20d67baf7c8b153e4d55134c5da3f3be58ff228ee4caa1
194de9fb2fa1d05f3349b646993d74800d0ba5c593a9d49342d4ccd1e8629bda
ec4965f3f95fd2973b37001a6be11de030cf87b71c6192b7c076d8a85700a7f5
9023db09ece771493144aaf96aa53f86f57836876b9a3bbad017c01acd1498fc
41bb57f344d528ee24fc95538c1ead54c9173e5a230fa810276679df09de9ea2
bb20583951e62972108d8a6254ac2f418f4f6fd4d8438785622d582e96d13a06
762ddc8d9e2b57460765d4cfaa2ba6b6c78ea0f54711053a12f321b91c5ed439
6b4a43205f7cb5a78e2c08c21bbc56b8301b015132ac6cf3b9da15a1383ac972
26b4ef58b58cc8f8c8c7ee99ecbfb735428324d1e0919828f0011da109fca741
8af34b8c1de2fe9c69e7b6b8559d92ba7aead51913116d1ceb2e34757cadee4b
e9db9c5c64a140d4632b66259e45857c02c3ccf301b099dcbd31e37fcefe3dfc
75f3ebc6b020064d8642ab2a9ab62336b37d8d2ffbdfc92a20797d33aa653067
414564707343900f5ca032f6a3ea9f1506918481d7bf1228a5a47e6251daaa7d
4db3fd4c1e471c80212e7a0bd97859b48c8cc497f5379a7f60c71a983505f209
5b1db25780a5873ec0d0330e2166785556ba32e4a357fccafad70c8c5676ebb7
09d6db3cd589956d03cec68f6feea4a8bc207b3c1c5ef27f95f40475b3c5b53d
014c5ce75575384ea503859680e5305c3a9f894b932f4720138f9a73c821e186
05c964cced8cb90260b77c09e4ea88bdb57613351deb16c18bdc7ee22d90149b
64bd468c9088abcf0e7f1dc32b3d0730259e5f4c93dff1039e012d33e60145d8
d3de25e3e204fd69976e0d626e6887cbcfaec838141de1b13ea7e46b2685f1ed
f2445d6dc588cc81c80b7b4441921920783a9589748171c53fc75398aa962bfa
06b6f88f72b1b1d08128f613a2c01b3870d8980b181d0b1cc37a7528dce8998e
540e61f02951162d346e4b562f903d88821c309466c4bde65ae36123247fd1f8
a52aaacf6f3314999f49cf2a39dee581fac5410a4e4be49a7a15f4139a0c987d
0750a7b3bb1da6e8f0c05401791928af47deeff5bb3f5bbcca003be7845854f8
5413d0f3d9136cf04c602ceaa1f7936ff6465d895d91313fada3cdad9a72155d
39f31fd1320e9bec35c41d4087b9d8ab3df6536c1141b805fb24537d501b2700
146b781728194007f1d99b94ecc47d441211bde01088e01215071f05ad4733c5
8e84e2a4774b8be682f764073921c9bdd936ac3875525c1fd5691bcd81ef8e34
6e23bc2e1c93a4b2e1b242d27ead30941a4cfaae495e6a63ff24a6b98f683e17
1f8d3f2e897c1ad9944dd9f13c2279064a3cab9827d287aaee882731eb980cd6
6b9b046f39ac5aae7806021f53f7d9119cc73a8c3c26c960a78df1034b64633e
dc4e02671e04d9b325eb73936c89c4a50b5a773dd2b827bb28745d3f623caac5
fb535234e54b0b54230ef097ffb79eb4b461f2acd7a5dc805ac9f009ac9a
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
/UniqueXX 5000767 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d55fd4dda249cff0b56b9f3aff
e9d0de215c02a52a6bc77155ff6b8cba5cd6646ba331254ac58ace650a967d3b
272331b87b6df06d5ab9d80fabe9f9ceac10139b61244814dd9fc295ed42d1b5
cd11c2e4beab318b20f51ca2c2930657e5343ab7bcf0e8870a0d12de4ffacb6c
b3fdbdda481c2fcb84408d3d902e9a32070b2af6cd9317a33a42a43857c114b3
f4c3005cef9401f1c2bad3e69150d7145b79f95c9cfaf7a335b277e6435ab374
f6a3e78e124ac1e4615511f743ad65c5d778403a840310ac4902985f107fd33c
0049623e4c496cd353d2ae2a4804110c6a420a38ece5d5b235c5e35886a0987d
284e6110527b653b1b2c68c636ef423536180acadb954843eff4d9a82568a713
b682c574e30f793f093aef755c650e0e7175c2e3138695212d9fea7bd4b5805c
a90985b134c6bc15a19afae0bfb3066363ca3e2568c2ac4559a69fc32feb443b
61243b4508b7524d974636855c83c8149d489b68fe18bd497116a953431251df
bd09fa1d2ef66c85b997ab2f6b7c6d9d096cb43931379ff9782fa00c5f3cbd06
04265d16891ffc4f66e4a0307765d384c32aa83a4e4f89ac79ef8e76eed08450
e3466fbaf54f85324f0a4f04bd00ccc22d32e4132c50a6d0323d7fe3092fe211
9ce9d16aed9bbba6bce9e31811d57fc244649ac22541dd16e25e5c0e0ffe02bb
e49105a4459bc9ef49d4d5a274a51a23a81ff225461a812a26efa77b9534e2f2
7241466dd1de91a34edbd8f129d985a13d4a4bdcad32201dea3ff5659f8898fd
81229984727dbb16de926d5f7bc5563f98a3a1e5380ada95c1841767178f3ab8
73d0be42789d6f46087f219d68eb50eadbc102ccab0e07544a4cb5dda159a113
02d0c2b3cbd8b93eef1cf2d6736fb96cd58d277c148859d5b061e82510749d30
49b2bbf363dab3d79e1c7e1d443cfdb8d0ff26b969e0d06601ae3a11d1fc4409
9d7483829db936d88d3e6f8768978a8662f9e8c1b0e310531a02d55570acfa45
920c198d20926309d22b5db8458a17a1d869ac3947c9ca16fc786777bade1326
7d5e27df0d332e2124d959128b7ec6e929ba79904788d6af5d37888fec376e21
9e5f303cd660c039ee6fc0a39cabbecf85220d824aec7a97696bf64b81564996
37ad5929304f0b6a3693cc748eaece4bff571ca963b256cfd265534dff6fffd0
f3af00ef3a445e1ae63e236c27b09b8162af50c6e94562ebafef3eea02507746
49a56f32d6e299db173601e62bdc3913bfed1f7aca2fd897bf1d408e371a1f28
6a8b59c7b0d29ed924113f11891331702eabbcfa8790956288e7f62e6719a6db
347fede6e21d56c5ab5389829c650e13c26efa7c0b044ee323fdf9365f97e7ed
d539e83af70ea1aa7ba8f774645fa58cd9a8ffcff75567b9778bad96fe3802b0
a59059d954ae909c3b3831dd0722290b38b814a0d9f550c3127f14235cc0f340
a1022493bd5ce721e333bd09cfbbff8cfb655357a1c85f6f82bbab8bbe269cc9
972c42b7e89e69ece47af345e709e1020250ef954787d025796bd3f7e0fada11
25f66a2b2b8b82fa8ece13e35e03bf6d797314bd02298e79f65376349249171d
62e6bd3e933bfeefad42d950eb67a6585a80e8396eb2a885ada848fc18375f88
b0a0d77dd01cebe3c527a6e660293b3c316501a0995d9734ac2c20f89ef5ffeb
93c92ba9106a6aa80d9f229e5b926add599d47b878e9a21329580b8557c425a2
0be99d31dd2b9ff5ad25c40acb60a622ea5900a839fd4a810b6d73fd05ecc551
7545c308d03de8689cc5aba61033616fb3d72fb78d3d6e5833d51b0d1713f0ea
e7c6810243c0911ba8d3f0f66ec2868a70ee94b56088e0c7745a9d1f4e8ce8a4
3d6712e0b3c890512164fef4465659b29c6f7a6e99b91a77fb33939839d932dc
a8b9436d2e2f7f0096865939622de0bb50c9eeea8342f3e3fe74f51523243774
44dda484f20c77c9550b414894f10880a8505cf090a34e4b36ef7e592173868d
a9540cd1f79b307be9bf4bb075c5f14b68fd85aa067d17c361addc9e98e4ca19
695569122c292d3882a03ab3913b9dab69a25444b3479796b2efabb70bcc0d3b
b387c17760c1a6819c80205425f574722c2c6c429dce5d6b4b83264a32349bdf
6ef0069fa736b3b0386f5056b1b907efae421ad00138013b6d224c819ba7510d
19127692723c9eba37a63e61dcb705559cf451e11f05f5c649a09b29debbc3f4
2784fa550a01ed393da9f1475ca3993f5afbc925685ff137d5fa17419c593835
a337c8c2427f5a3f0adff51e3c10b2fec06dc35cec92e846b3211cf0a74fd7c8
ea8588b260784149145b3d56f7a3c47693e156963ab1d07d0acea5061a4d5b47
319cef6a560afc4de02608ac4bdf896bbec533a2b7efb73a1664bb1e0fb16799
6133e67f599ebf674ed63cb5dba9dffc42857c53698bcba774f2d1530bd0bac4
8393052643c4c23c39c857d93447b6b00279a8b08175dc71fdc9eebefac85409
fb4621ad5bbd33f1c82319062cbfb6d1aa2f891015be5881ec74a5a5e52f42c3
f3c7e81ae99b5de54e2d2e41bbd29f932b4baf1935f8962b94a63feaeb641149
0832d2a6733568c52e15f963284339ce9b532b8e17d6754753bc3d6e41dcf54f
804553e433c92390e9b55b22c4db3d224afab11119213cdb0b2d52cec3d1b704
2c8dd94328dd586d8c3bab25f4dfe949458adc24c22245993704b837fd668a60
4c3e5ce87f2efdc62f0471a88c57cc6674f17105568af88afe26e026c2953608
03029400dc127cb2dd5c6365b7782177495a8a1986f57e85b005325e06640512
2e7fad2acafdacf9f381dc1545efc7ca8a12150b6799df92f03d8a5cb7e24b6d
cbf81bfc94b39a94cb007631ddf0905f9471f72820f153bc47b97fe084d7fafb
2bd29bd03dd67ae472d4e12c2bace3136d6b68c95813e63e1ae5a07dd80fc93f
f12936c5286f319d8136a211c7b20267bb68a750873ada1506eb7d32fc9f004e
c08518ef8225dc1a82f93f11a52de0b5bf50b4f40c0a10e31227804083cac8e5
e53c1d8ca14d477183e9314527a848249010c66b1066aa8f0674fd43244f1b09
733b79aebcab6319c154ba888844e3de9b77b71adf39c5d17f24ce6a322b55a9
934d2d9a32272df8fad75b1ae6762a35e50228eb567effaf273bf4d75f964b69
e9e7016467589a7d58bd2a8dfa4fd9a54bead06c27a71978cf1f2c9a36bd2e81
23636ba172ab41fd7d769749203e9a9e0d23356fa90b1872a17905f601ea5625
f8bd5c4050008ee79a918a4545b4b62b6b61b04a489e667f8d195114ca49e07a
37ea7e57242dea2290e6f50c7ffc1666b5a155bc4c0836b54df2e590783f4ad9
bce13c9b8c5b47513c4609ce901d466a9901dffa51e4ab11074f39df82d6403f
147158a6cc9d8736ca843920b0479ff930ee1f60472ee50d664f4f4c8f6cc865
924cc8291f20930c77db8bcb70e6d6f0fcb79d5e974439bcdebf92247af1c38b
f293b935fb0d54b903989ed1b4127d565b1e9f1f85428d885ce9eb4c1838474b
eeebc982d12de81d60972a7a8e3b5ab05eb449b2c475f88705142ca29fd0a1d8
57f97afe9226a24bec38dbec9872d5621948804f51112d4a097ec86d0c156848
042f22e5ee13b64848736324377aab26170d333a74cf6c08f1a38e1010700792
6704d8f702c237ee52b5409faeb515da86c1cce560bf75c4ddbae57b6d46de0e
30c1fc1fd1fb047c436247cdc9598d58fbc170ad0bd43b2031bb522da84eb1a4
ed287538386761c9401bc20c6ba975c5d37ebcc50a3d7d90b855dfeb724fe87c
ba030ea0daa829a27565a41a3d1ae8ebfb2a5d1ac1c7a4cbd20cc4f0a1319df7
2dd2eb74db1f26ae2368cba339e579b665380ede055ce7b9d79425b50f27e925
ae0ba20c512e18742df7a62bef4910a5dcc0322f83f61ad4f749d702f0e3d7b7
f774d2fe23a24ba3f3b925b50f803c70caade2e6c5ee48afefb5c220bbf32e56
f071fe2b9e8d3ee9287564af8bc8366e22c2175416aedd82ed8b7559ef6caf4a
7f13a430d171cadd0d773df901ee2b6f8027a246c38fb96831697894f58a3471
8371e61415d21b4bc95092a1ce7e541cf51cf7749d25194be07180fcf77b4900
4abe386b19e2945807a097237ff2d9f585acd3118e3907101ebfac0bb1bf0aee
c5b2aeb352f9e63babeeec1ead64a915236ba0a24c29ffa43a68c621c04a9d2c
c1fb66f413303ce370188d23a7de494bfcda232da3289d6d4498b5bca43aea37
67c6b97de29ce504188ae9816764f4393d3f465a3cce00877ac3f517295d51a6
a0675047e89a28330f5052be1dad807a48f726d92f3bde4c4765d082472c8bd5
ed32b9de9293fe5fa7723a83e3e2537f21a241ef89651822762457ae989dd799
397a4ef60725ab82e311ead9fc57b5861a45bf28c860acaeb7429f8998cfc28f
a9d7cbd9fc2444f2e2bcbcfa295bdbabba8854f15bb7282e1e0f93dbfc6cc82e
e65424620468948ca6e0db6dfe8c80511145330d7b48c5cc949a5b3beaca88a6
f8f260ba1e6f8bde41b6960505fffc3b387a5ff8fc5638d6a20b422ea60ee191
0d176c1fa00c74af58d02ea67c5038c979ecf433b864560adae062ac2b11fcef
a97164019d7c3fc3f3f10f0efcf0c1ef777243c9663603861b9cbca119bb4811
7083ccce892f19e1d9dd00ef9aa3ef103d7930dfa1ef97889ccf88b96c139955
dad032ceae3ad806804af0d2ecc48da49bae7d1b0918394d4508ba4b051817df
e8473c62ff9674b3c682185930d2f3de60854d848787239a59563a4fe092b50c
fec976be1c364ef5f830ae223fac5525a9581d0cac5cbb5cba6977040dbf95ca
db659bcbc41e17aa38507c662386a336164e7db17de0ef954b9ef1d5dcc99581
8570cd9a0f78f6e08da55df175220a4fa2796f12bf4cf015a10d67ceb35db547
40134ae3e6514729e755297316cbafef51629ec165a2c947fa43f2277d1e713b
30c1f8cf3b19810dfe824184241d861e692bfba0e7ae580fd528101dfd45d6d1
eeb1c84499b7e3d3e1fdc6911a42770b1d65de9aee1799d59cc31a0641a8adf2
16f99637dd68da1a2ef445eff8d2a84afdc042cbd4d6a800405763f15ec6e41c
a4d18735dfe4f42467142eb44031a05cdb2627c7b32b17ca543411581d287e3b
ece860a4d72447fc829bbc85c723af4b82d052c61b607a3500009c0c7e3c444c
035cfa8917d51836e7d7f98894c6ff07f76dadd59c830f8b0c33c1d6b631a42d
1833b5280d6162c9189375ec7b66a350f69b79ef294276bd10ea4261b990016b
63dc302f6c93e3054cda569f83a9fdee2fada964741df8185693a52fb82aa9ce
d5a93fa3d7f82282ded5f143e19316f8c7b90cc3582558979c413435c333d2c7
b6bbc070b10f7adeafb1b903b382b171aa75686d4e9f53c6f974b0cfc265ef19
01b56c25df368e6f79d60f3d3e3d290db7f1807793d6b9aec49d43f6812efc00
36008b02e936502615e0fbce649acabff4ec54ae96107a93ff957877c47d215e
7237b46ed96a88fa43824b2200e2f05be9a4e3cde316e0aff9e268328b8d18a2
1d49df28cd5fd21cdb732cae69b4628892701798a461d8550a53896cce8c128c
bb637e33f6148e1ad873befa7db01cb9e4149c82a5cc5a4830c9dc62f3c6da79
c6325bbed02b38ec22dc26323096b2f9d4056a29319ba3fa52eb3cc9a392eb2d
5eb55bea742d2ba4e856c24f6817c6008391d12299667d3d23b162a364c66769
27e667034649c55f989085381f78a7b8567f2892be876b5f90dad2e2d75fd229
0b2d4e48939fcc67387872dd7cacf26f65267a66a0bf545cea3835a4d348a2f2
7a756469faf61d2252cca76b52d9085bda319d2ab104d1ecb81e804497c4f0d3
95581bf12ae60bffcef28185cf1851b4057588d1705795a0593bf0bb102d9266
a12d4f69146b0ea572c1d90e10735fd6c3117343d8625ef5cc6ac75950799a29
9debe9920968d8eb2fa639a2caf6915cdfe9c645c101680f717462e6ff6553d1
4d720c07fa5951696938efd3e9d9deabd67fea2f65f25cdb4dcc4c810092fc61
7ac86a2f59a0e381c689186465e94431880cc463f21ff497e7d33a21ce05f0f1
3bd4f204fe1ed8fd280aa3493c45a19dee49e1c3839f34ed96f13e44d91620ff
33c614ae609427bf2db0e2d536a1486e9a0832c0d8ad9aba2bb8d52ea62eee67
f2ab252a38d8c2ff002fda978acdb9c664d7509eec878ab93ef5f85b423cbd22
1d5bdd9dea99d7b5a51d29a3df5faf20e4162616eb29a10d23db8defdc61d203
39360e0f9d65743f041b89a9320ce6e339e35288fd767b525fa5b6e49ce7dc73
013708f99a3234c4093d0c1834d15319926cc2530d49f357dc0c64e1e7875649
01469f544d9bde1ff8dcc6818be84bfc2b4c24ba3c92ea1a68e199c3d4c11349
6d321d075da7f66bbd2770a80f53033f4d52473828a031cae74cb47c073f8c47
708a16ce9eb214c59b5f4ac77088acaea5049cd03a6cef396067b11205e9b3cf
8d55889eb8a8fa3ac2640bb306406ca058fcd8d81802a4a4efc2ea93fe08d655
29be67464fcca4e051f2a67df2c82595347c68993fb1df20fbab7e2bad73e850
bfe6fc9f91082859f854e31a5a774fc8ba5e90cb455904f255c6b729db6d860c
ddd65129211aed01584d98db525e68c9c6fa60022aa57bd82e6fc52ed98a5b79
196a0cc3d0473cb34099259de87b2a4652ea68a78f6963dc5d7f5e4eef0cab27
2309e703da9578074aa85668f466d86bb04dc4196929175ad30c07e059ad6ef0
59a2113691758049cb8c0936d29005e755983c753828c68b5c09812d5850d163
7a99fe5c01dd48d278c2f18a064629a60f1fcf3fdf5d47e0dc7774efa49f1dbc
b6d42b3347fe666b37fa4570ab277f28468b31e33d76e054c3d251eb488b1ebb
2f8b892cfafb556030356d1604bdf28af4bb5e3287c12661c9e9a053d693e779
f64e454d1df5c7821ce03265b4be6becd37f8e10b835ae5cd444a582a19a4f92
575817db22af251a5738b8c6900bcaec1b8965ea61a863589a549b31d71c8ff6
c0ff2e6341da08fee14ec5a8e1509b9e158fd85c0c276eb0ac5549664168c238
5f85c031d589bb16c7caf77223ebefac9f2d5b109b17d0de5288073b3fbb02a4
8b4117e1b2c6939e5b13fdfd210d430277b0003b040de706d10ea450be43aaf3
753f67c2ebb9e5defe1df4f4d609c7a93a5709396c492feefa6e3b0d73f8e3a4
62bb58b5024ef26127a792d26a70d7b6033340143e28b42fe5bf0c745882f139
8f85a5eba8de2c5ab605d8237662ce03ef86e2d6449ea26a26c1e80272a5af04
dddcc8b7599f05e4aea83deec309183418bbaa15e09353e1ce251383828b18e0
e8ffee84e3a3d7489483311e64dfdbffc91ff0df2da20fb973ffba83515d1c76
3986b13a913f75aaa471e7b48590cce6fac759b4339baa44997cae4e5ca087af
31e25f09c54f32425fa64dbb4756a575a775e5bcb63b633281eff5628cc6e619
ac9e536a030c6d9392cb20011f4cf560e202c9c318632af5afde4caf04baf1cb
061d09d66df10c6787bc804b5d4db3fc26d3d969afc4bb8180f4cf0959817948
6ca124364f88b7cbfe090b0e3f65d7bdce4949b6aacca77e43687bbfec87dd60
95343ee7faa92ffbd9654445347b9971c514b00651e15d9239aa7efcf97ffa13
fe21057ac1c848dfa3c8aaf2882fa2cf0a7eb1f83b31d66d8bc976979bc2e0d2
c925250824fd1a1a27cd31314212c765912ed4ee49684da82766a45e833f4c56
eac459aee9781094c0d7beb3d011027ea4c6007639ca8724a91d8267679339e3
d507cf3b1342d588ea5f235d4e06446d429cc575a57f958795f4b129044dc928
8d3f158f7766c571d51339b16ab553a0ea77dab72be3d63ea887e56cdaafbec6
c7930dfe6cd491a134c1163a78dc6de44041b3f7d7bd161f129d7009e4ebe3c2
648177c1c68000aa21fc77d8d1aa76303520e9fa739a4b6c7b28233819c94af6
13178c1b54759d748a2c04430b3ddf39a4e18a50ecc915e756ff7b8ba3599a8f
3d00c3d5638c30a3550ebc446fe66205cff00960b0f14e50bbd2ef473089eadd
5a048cef62614481c570d27b0b5440adbcf26c346285b41c1fec4f2f766af550
f5517cc0b0a57dab27eb0cf55858da9ee4759e3f7664184eb828ca608f1ef2e6
605494cf28f5f8376c67dad22a9d9271e7635a97fa3e3be1080968b5cd333085
ed86147bd76da4325a2f3bb2e96a31f1108532b6e02b66607593d58b07e0818c
2042343588aea39b84d68bf2015ffd6819df6149d43f628501b012b72c465ce7
47dcc868d890fe65a7bffa751814c02a4103d59c6ae7d6b6e2743af21e7ee783
78102a2352479249c06b8c0e24427e6793e23dc5ce9cfed9f4f356cab1fc7304
0a4f1f9c27cf1eea230bdfdd0149d235302ff14aa9f9b4d261b1a8e023584978
bbe2e12bb0e7c8dfb88bacc6290a01c5cf7887f946b672f8a9a4484185fbda80
1b653dec3651c683e9684ade04912a67dcd4a1f514b113e8e451aeaa63a9e490
eaab1b748111f89ab3821f5d38fa8844fcd833ce6de0faf72828a3fd2301cbe3
5ba201a2a69d9f83038e698db72d9aa3a5b65292d7fb2c44c4316fcf219a5ff3
99adbbbc1def4e0cc72b87806138c504c3bbf0f971c30e31efa58a4d3537035f
c99c753fe0976aba8b4f165c43e30acde56bde22527f67067959eb881d59d1c1
b4ef33df224d008b5af9223fb3e8f13feabcb1beb861323e49905b5e8916fd38
3b10663658db794d99524a7edcc0df7f57b327e9af680a344cda96e1f3d5675b
1058cdc98d5acf38c0716cfcd23fdfedfdb5a1daa699f43883dc2c43c396deda
462edecd045266464ce6c1cd19ae8417db453d8ba21a82dd485175e52f4a5579
cd5143d7bd3a55c1fe734dc9f94f476b308ca650ce8d662c8fcca2be9a4cffe4
213a2de2a9f4cca46cd9e58fd027dc59490cce1693e23b6c5141654a5dbe3729
1f308284c28592a55791d7509aaea03650bd5dbbe963566f72694a1807c8797a
16dced2a1fb8a9e41efb5232a8783f2b651a3caca89a6393ba5c0689408c0159
b8bdeed5d90399375c4c26ae3f71b17dfac9a42fab7f428b4cc87f39424a7fe2
85195a0abb83bd6f08b65ff28c90d0521d2c1006325b5cc696caf47d50e9ea4f
c6d2343e46794647af24d210063873c0de3bb5a9d7ed62b93bfe5181ea84c2ae
d36ec07e480fd7770c6faef7e891d76931caa4cf8bf581c1e9936f855cd21488
3201f4ad3a4d91ef416200e597d200ec7b0dd13f16df2bc693ec6d04d42c4333
1185ec79a06fb91fba5794b8242fab24cddb20c3f325df208104f2a6b7edca88
389275d72f5e4489433df8dbed0e5d2083cd0a90ceab765e3aed6280be01a469
829ec904e4954ce64275d41f626f4fdc8c3de0adbed7e070c5233dfaeabfa831
4b2c0895b51b60a2473083ad5aedfe06f34e199365e9a85060bbcae3318f0fda
a7d341a79980528dca64229d4601729d82615a491a2eee5bff3bef5f18be2f1a
53d01be5b412ea3ec6a3d9e35f27809deaea3342c2ebed6da7d25f741ae3a1ab
f3c0e642a16f00c8aed805c0bb8a00619c9e3fed9a6a3bb843533b2b9e1c8ce0
080d7464124295d718e597bc6e9db11fa042387250ad21a7934928d231aa8264
5b02d919daa73619fa3824c14a6d1d1824c1f0efbb377f69791f172d711e25c9
8efbcc53c287e60e1d615532dfe571079cdfb563022dd44817bf7381c52924ee
f080d090f53ae5a1038045c6d36cb451a1a0ca661a809168f71cec6e84d43a2f
13c2df2d94d6ff36a23ed687c0500612bbff7c86d9f47565d78f98365c5f73b1
a8faf3ad94dab8d27f15552785d398846d987dffe5fdf0fb2da557829381a337
243cbc1553b6d05ac3993cba17af98d03c6970e6e965df98cab4373d2affcb68
fa56594594227a3a3b1e65b41f1256afd6d97b553fc75de4213d22e1fc1f7064
6f28256325d9bad488e3ae3d6aeb14b1868a9aacd874a968fd8911d4e64f9960
be11fb23b78367c5101bd2a4e56792de8be8db5b01faa376d90f5066498eca90
4aa0ae45c4ddc785e4021d395651ec996bd89c2a7bdd5fd5e53b9823de6d0dc7
66a558ca3355a6d308b4dbb7b50b2d2d282bfde16d26c0d0ec2f43ed73173819
bab41502193a5bba3c0f99d4f439874e8bcd16ec5153afb82748f72b073ff25f
727110642f4962271da051a4798a57001671aaae2b1ea92db94e5f530500655d
856815a20f1ae1f0fd5035266d36ef604d93925989c9e4b6fab4a7ca7145ff7e
f476422fe1ca9b846f523de9b49b68eb66efef91ff9b79050a4c559780a69180
75710b9dbe32e755c1ba2752fd6996dd5a2f15ee01229655c7410bb94c45467e
397274441ca8e3046b502f4a35a7c24500dc51f4f69b04740c4b01d5f2c25622
d8bb83697ad61c3cd84bc09ae36a3cf8d1ca9459140b209942b1f33c5763f520
1537a022d5c1f2fbe779fa22ac9f9d39e45b091f7e960696b089c69f608d1235
7eadc124bc9ce5c1a9e350db78153caacdd2df2eb608a47be2f99440176da6b2
4251a4d33a7899111da6e98d4492c489c2e54438727e0bf26a0e1f07de3e4bd7
290250bd0990ca4c8afb8a9c0db9942ffd9620dda1ff14abdcabde965b8cefc4
1272cbf6a5aa50e1d58b283a4406cde7562a61ce2a31eed04798f0634a37e845
f0240fc0f725a445828a7c7ad9483c6687bf7a962c9b523515bd9b3c88e37705
3a9a844e38d4cbfdb3826aacb9bcddebcf048dfa22b7c2b8a1ad844f3bfe7283
6c1edb30130b36ada8fba0f35682cc0ec7ba1c2a258c2679b1ab3c7877989488
924b3951c31120bd045e5eac5eb4dc41d22385a48e85c27272106c2e29056151
1a797d58b62ed94d8e9dd61ff8425d98851dd6b3c399d4fb2d755bac36ecce71
ab127f551a1676fde16a8a66f118f342f8f88a5f08746109d8198861000574e2
08cfe0d4ef7ec055bc9ee4529bcaf68f3be35a29f5bff75b6cff5a4145916059
6139e39f4e3bdd601fa07c85458a56339038b8f1de0c985aef5b4c17c142a8f8
22c4ca98d3a273de6f996174e2d5fdde78999fabb40ae57019c9935a019cf36f
f44f4f015ed1743d884e8587faffdfb3051ce79b54ee797304894a7c68b84ce3
3679596f98897e0d3cb298c2822887a69698941ce80d15908c124ec03145aea4
51531902b1327e9c85048b0c75a7759093e56567b437a6db51589b5d144909df
841a05607d11ee0890514895495fdd9900c7c7decf6e44120068a1d2005adbf9
cd27c52b01910698d176c71b1cf248e706b4b0c17ad07a80eb5e6ac233dc4a67
a3074f83cc184b90ce0ce267d50643f3251a63df9fd2090363bc96e3097f4986
0f01df39c8160c580d95b19db44090e189f0c0514f4c55c06802392955d84231
854b17b85f587b32b20c2e4dcd92f618c3c3df42b7fbfeecb33b996e91b34408
450e76b7166468f4deb409b202f3bbb101d755f71743c65f4ead54f7ad904142
a0d279971205529cffa115c29112a32f8e9bcb3ff2c40863164bfe495f3ad8e0
56937a521d7618abaf5b193f0cc8aee06d3e004791521ca52fdcd9ea903ba76c
4a16a0a35d50fd9ce8811c9d2c3c8a9d3a5dcd4beedfe968e20d413068ba6eae
db14eed1ce3bec7597ec73acf414baa6caef4290477a44bb49175bd3936e48e6
33e62960317434504381f139bd546e10d31584dc343855e2cbaf62bc7bc182cd
a3ba2f0e41311c5729c3db333bad647c
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 36 /dollar put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 127 /dieresis put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueXX 5000792 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685bdd20eb05d5e7c2126132e33a59a7170609
dcf4871a5d023c9ef57d3362d9f2d7a440bb69bf653364105f16f4d0f03582f9
aced3d05cc76489b16e3fa8a446094d30038b06ecceda269f2eab9d19a99c7f9
39f9548f206c5a457a19270b2b82c43b091dfc5573468eaa3e7a4a32f8042891
d85e4b180fcbcb3091d2800e54c87d84ce9cad6869b5aabbbe47f40c68799893
d22b765295e1e69e33aa048b7ed98ba480ceca91f3ebf8ef85fe9a3976909626
b95ac5940d53f9b02215d84a44837ba25ed15cce0d504f1d335065594f3bc824
5405407591cccb11cfd4645da60d960c0b93f187b0cf7b105543c0b70f89af5d
264b6c026e3ae646acf145950202ec73282111e3e601cf2bcde22ce3edf6db23
516481420f26552ff4472d749811f27768150450d0d0ebe3c79f999e99b5c0f2
2eaebb12d97782b1bd91b2a1f62a76412548ad53c0dd411d4a08c0f071c2c218
63d9adb75a4621803ecb84c2bb235b620b658984b2d8e0c4637e2811bc8f0d04
6c8935afc70141e1b2d9c23bdb251d304b3378faf8928bd09686aa0340fb0cb1
dc48c996ef91530ff078666fad227a3589f50b605267212d3a65ebc1019a8eec
9a0739a00279471a01e1505c17658c10030fae32f274fdc8c8774b0d5406c384
a1d17068dcb0c2575c562fdc5a2176609bad9a2c255e426a4325a4fc3053c7b3
2f35f7bbc9aa50135f30223360fa2fbf019294b2e1d1405e078341097090ddba
1561f22f8738fe105c0e3b84532bed145d51428c9cb1807e655408807dc69161
1109a98af82680d6dccc987cb312835dec4ea0645f47a15b6707d654ae54846b
3d3301d61150fdea8ae2da33e79976812c7764050a3e86a2a819ffd3c64c38ec
16b2d0bec3922847fde375ffdd82f8f8bcdfa39c53068da393b35277ba7af682
9e48b1607f22eeefd7d0eea93ba1e2fb9b5ecc6c6fe1075db980999f0be7add2
a6f7bb2053b204d021a5e95c2b28e5fefc26ef36c0f87c42c0d27d219fc9e8bc
693afe75f46a1a4ec625899bd7ab44e9ab261cb750b162135794fb66acc2b450
0a3d9875897cae0684b8c1d88b91c0d81c9bde886f961ddbbe61e096890cd87b
9ad579d48d49ba7d178ed5ebf9b33cb37882cdee33ddb0d6209898df092cc197
bc3a423b93f0757928762defd24455b601f9b9cccfb106fe216082d6282d0237
c42ae9ec34bacf5456d74dbf5a419ea659b925c5ced0e562fbf33702d5da4cb7
5a800b3db77cad89db33ae18345a21cef25164bf8d6251b94f17a35aef722175
c8e5261c8018ad53c0b919590117a7957b3e6b4c3777370d99e5e98a55a7b246
197899aecbf62a64354211dfc1e1b4b33653538e6de7113b74d16efc4f50f683
9e74486f5e88f7d33382593a66676fc6666e521146873973ce772f00204b76ff
4eef0ce9ad8362e5cd8a212fb21f8a6d80aa5bdc3a8a768388d3cb2700c654d0
3a0a59d601af113a7fef91e1541ebcb0bcb4a66c3da3dfa534fdaa9e20ad5027
b9650d88bc04c525456f90706c48ddb31b001724da33c844402b29e21196ded9
1dde7ef7563ffc5033c7ed4d819f7ebf276eb5f023a794f5568bd6232991824e
df8b6eea2c54948b16512beda20f76b847f010998ef07844ceeb0da312339342
c9d00fcc4c1e39652f520e1db8aee93fe908bfc8352a0c84264ee6525b69669f
962d86f273bad494b1257bcbe4e7fd1b6f3667846d22d58016c851a6da9bbb5f
aac1694efff3475802308cc5fd3428b1e9b30f7559de529dfa32d367b621ac80
2d32ae77c1e082e9996a1f50a4a56fd9dc1e56b05d49bd20f316cc7b638512d1
0cb2534c4703700515ba51a4108f3d28a431ba751a1742528a019a2f9d5a82e4
cd5ca939f52e96d4f1556c9f3bd9aa0a66c41bdf16de4cb998a98daf529b7350
5d7c8a2916d42ad06566ab581d47f725559f901bc2cd943490e6e441b47e7937
df1441d740b3133e67fbc5af17dcd1cd5689c22a17243f98aa0504b1a45c4eaa
67e8868096ab9937ef2d509421a6ceef2994a07679975fd5e648772cafc1a8de
8e60fda8a8dea30354c643197754263a2db5603b6a60347ff5d9396210c260ea
d2f06b9588dd29248d3aab70a3512fb719c9ea83bb9983aeec1534960e3e7324
76e5c0c61509e0ea247acc5f477062caf144ec29659b7c7315d2553334a90c9d
1ac567cfe633aaa86ccf03ac476aea446c682e6e41cacaee99bcf3f053d8deaf
20443823bfbb522cd0f2347511c5521617ab98aa1bcbf786c811f92a92543f58
755a917fc9cfaf37f797599fe83bb69e59b2480d78710dd3f22065f8294733f1
54f92d30a0eebd6ad6a6117498d46e085d4b9464a3a9375d51c118d80812cf28
6d84533000dd4272112f3788a5426edd07ce6c975f908fe56c8738797e561ac9
36b62730744a761b316869ac9e09fad7b1fe7eb69991ede5a7145dce2fc1dd3e
ace664e2d08ee3a9616ee38ea225e087afd782b442994eba18fb387117b8ce5d
1971f33ef85f8c5fe035041512e281402b248f5721d3513c37155ac694340d72
4eaaf430cda04297731de4cce897f4463c3267298067009958ebb41491bfc773
92e4ea2f821c62522c21a2f1c249ff1710b5f374779e97d5ba790937516818c5
3c5e77d55747b38a827df8319745c40f094bd0ae62293ae074437cb5d8084694
9e6c606fa2753909403d9edecc8ecd9790acf195dc65c083f8ec3910e7b826f2
3eee9809373a92964109773ab07378d6f8cdf4809cee14fc58c6f5ae4646c480
29860c55ad0174d998b29ce8dd5f93b2cdfe610a1aa59d96efa512c411d71538
5ca1e4bc26bf2c980fe3ee5f6819c9667705cd8138d3a200edd8afc4c41d6b46
fbcd3a3e7947783724dd806fd9f07898e994a79b7e75003e13584076283c9adf
5c22d5439e0215dbdccb2e1fc847c8f173ebfa84fa7dae65f8ced7e72a11d675
7686a902e8204a73e8805e0f42763ce729402fe541fece6388fb13799864bf40
2a7cc475dbb52c17e69528f0329134eb982890424e0098ce56ee2d7350c47edf
41b979301c53a7b548b8c3c3df76071d98f09a270736b61be75adf1ea6b265af
6f5e37d8464d755a6523b4a95fd030aa1c790c79dc8c41a29e6d1a9a5e5fe027
8b996e9e05690a442ec199495712e504010b956f0ce3d1c40c2e69e9a21367ac
3fd92d1428c998f0c58c74818f70cd1392299e647203c037a871480e6aa9552a
0c67b76285ffb354367f5391f657ff3eced1ee1c77099ca681cbc28856dd98c6
7a6dc1a19bf11a10cdfa8372a231cdf82bddf0773b181881f419f724fcc95061
2bcca9077323ceade9b0c4e2dccb4d2a59e1e71d6eea9d3e2381fb8ba9969fc8
52caa5594983bd510e9620792392305f1dd7fc25fdf511a62eeb20332a9042e4
d640bdf8dc2194b7d7e7530cc5d8668db6cf8e44e595e08f9104e51bb1ce7861
b96edc7fd637bd42f52c31f4b2c78f61c3e99168357a3abb144fd8191922f61e
747894237d932a9b903373f61be04312a13c2a16c2059ebb2b7c710615847653
eee3ac4cdff80eca2f8456d49157510cedbdf4a253b3afc3b8a57c2a69150c8c
68b69e9fc71a8cf3f7529dcf65d46e9a8b73465e6e85c3613b2d6c5fac202881
806132dfb9c0ad6bb9f67c7031bc12452b7c38c575d14d49bcbe8f6fc5446e39
db1155edc2a4b7bfebadfca847f556e9550292b3f1c8f3448ca80b91be887ef5
e4bbbaabf565ebd49cdc58746f093677023aa8e2ad5ad875e529e59462bbd33f
198629dde21df0a52f12968a909c071b031a6ce9febb6cf5f8c35e1276235838
53be4e80c575060e183143602109a23612916cc188ccf3155f34fdf91622d230
18460e20494b6166a068d57343019e5c8d4e573d6cb352c500e03c124aef6a49
3a2f262af3926db81198053fa1f564ce63337971b40d9824966afab600e1c5bb
7aac940a95a9008b2ccb0d1f3a3bef2d7b57dd7b8f6eb4d0aa0500395cb66c29
702280e307fc585daad46ff1659aecec4b15014dd6e57f0f14522d7355a6ba65
0515de3ad9cff1b135aecc9a91a50b4df8b282ef231dd7fba200fdc323cdab43
67a64f7a7054cc7019d62d5619b500203cdc6cc06c46fd30c4286ab7f4de6761
50c598e38023cd0e02d3d20601a0bcdf844c07b1c1d5bff2269448519ef73291
2d2e0fa122b6982e1fc53d07b742908e9dace987da4ed4884270b0f7fdbe73f8
82e6732e5ae57f628b9fa529c2d3225dafc1ff68317dddfc410b39891e78e99c
25f51000fae8226272ca619d5e1b00429373c7bedcc85403efdd68b8b6fe6ded
175b6143ea4b427a2c4ef126f5ec8af3e0f49f121fe7459bb1181941b8f15d0f
711a215f60e0246cdf2f6189241a38a1ed7b051c01b11fcf035b79fffde55331
f03f4662740567feca32f331d8a33407c14bbf76e8303f968a90fef7b4bc63cc
2211e0e1b20a65492a32b7780a99462148b78c89ed7737cd98de95507a405a0f
81b7c363f9214320232369ed2ef38419ca7480e49493f8a9128994fcb88b06ea
e91717d74ec975677fa982c9a596585483ff5002203ff90e257eaffb3dddea53
cc4d71da7964256fb395182af2d9804653c12a2269da433ef2323a50fb5b6f30
ad84e6ae5a4cb191d973d0afb18305f3e828b19994444a5a5232205b9d739c30
9ce66808c5ca70e0bba8c6c7745554dc3184784c158c79a3139092fad27c6181
e447bbe4236d0a1fa5b437a5a8f3042ed072faf4546f5c40e0f6f421c81c1881
51cd6c4649b6fbdc6fc280cce17ef9b10d93d80595b42d8a01863c8da6979b9e
ff993ce001eb2461329bd70f5f3aff97b33fee92213cd65316d1a4d25ae19016
07fa71be4a6395a61cf01ec14f6b63c3ff70f6eba2a95194ff8ed3f0f93161f6
53029c672a8351c475d0308cecac68555e0108654282625b83e2b9855a3dce3f
60f3e33abb0afa8e8da7b01784530d77f50c854dd28350f3b1aafbb2ee9265c5
191e1a37a423bd8593671ffaa0d5d54eec94b8703ce841afec477c6e5d2fbb3e
29dce3eec8af046c1a3102c6639f891e2651660ffa6ce51c1d7ba4dd1baef783
f107b9e7a8a9c050164a8b38ec669420bb509cc73486ddb52275ba3ca1dc52b8
96dbf7edb9922ab5c5c5148be7a169dfb149109c163b30c45d4335070fa557ac
083fe1e2dd583ea05cf61621d0b738797bc2a4e6c99a97486911bb8df37c7f58
749bbf1f020886f7c025e30cb7e0015eccec1bbe5cb74155890b3bc01375581e
7c2d28f0633632dbb4ba826bb28e32e47122e133e69acb66118bc3d83a4364db
5c05f6e15f2ff60f1ec4444492da25a4bfc5fb5bf929c70c89f0df0918b45bc8
a077cb4ffa6f050b69b5418b5d361c98706c3512ad33eb16cbf7690535710c0d
4c6cf240bffedfe239df2fedfacb6497d4257536454464a77109fded33399ca7
3da080087ebb8bacd7e839e1ad5d40cfcc73c171613633c09df5e35b573f8a79
bf0373ce02f83270e564cc395edd392d7c9de856decb9089de34c252912cad47
2d5f9ef41e8e531666198d4623cedfbd6e1fe7ba0507bbcf931c66eff3f5ff74
5d16c9ae68dbbda99b93d244cb861c267a08bf5cbb7fd324b0130c599b9e6680
1c36e77c147f7d381ad0e23c93b2882c0c158fc85df0c83c1a8b0ce928b06194
b0be36b708e599327f1711919f3050b611d96f2ed3c47aade97529d5203803c6
14503d577c4cbc884870f46baf97a76ca95723dd94f15886ced6c587fb9f0477
3d59eb52175fe49cc47c3d877eb05a4ab4b0d0fb31ad8ca885166882d5f13f26
243b63b68e0a76ccfaaf3113b321ea4a6ec6a0530c46957d29775e2f7f56d297
63109b5042b6bef8f118b61f785d4b52fe69a845460666a89a04d66dff262969
a50ce16fc63dc78c62c14e51ccda433aff8707dddfdbb37487cad992e7a0c448
62108c65c170fa1097f4adb7efb292938034c4576fe551a9fef9b2fd8dfaa1a0
4d3542a9b9de5717a6f5102aaabc77400b6a9b87ec44389eb0eaef8c1e3e71fd
0c40a1d9d1b6c496be41ebfa6626eefa07fa2ae8a4354caff77d551c3cb40bd8
13ffd296e9c3616b453dd157d048be7133d18b8695c71883e8c677d49c391980
fc6ce5d6c0836742b26ddce56e313d831add7b41bc70f9bd4410f28c5e96e4cc
5edf8df5d24df550752d0ec34390c4e072ecd9afdd93610b6ebf2380b93eeb60
a9afb4b6cb70186858ef4346c7bed2daf06efb7d1c8c0b822a541eb5792e0ec1
b4b81434ff0a5221419a12ee7bb5efd06cde91b31b931d1d86b34d30843dd0c3
fbda4971c0e7435e57dbc721b15a4347255f63e4b5a72b74ed9fcb3ca62ee3a3
d5d90c7a7448f328dd7afeb4f2d1ff30acdc55d1de367dd8aaf64c08d20ea113
1108281eac68088f270955848e2f8a487a77583124f3e811f671f5af53abdc4b
02a4e2538e1575560b9e739491ba41e1c7948ffd0d9f7527987e5b35b7f6e746
72a716798991f2b05cff0ae249dcb8d93bc88f99caeadaf65c267a3be1a7d766
6c50464d89f167f46d0ddf5d0ecd0e5521b75038044d6bc170191ca0754d65fc
1ab1b5f5dc216d0b5426dbe0d7be533fe7f75fed0563f36c8bccbb450bf4b84f
82d47c71e714cfb29fa7e064f621bfeed80689f25569b24b92d1d613540dfe70
c631a8f8a3a109baad9253acba3ce3a0f28534a063c2aba819f6b1296066fc67
69a9c232b7373575a8c3566c5900d149fe4d8b90009c5940f023e78468294077
98e4fca6ad265f1aef4b6278bb0c6fbcc76ea378f6a5f7ba485d3601a2f1d712
d9fdb847e3c51b7db3f4d1a29469ef88bbae6ab1ba02bc225c43e2460cdc07b6
932fc88476bb3a7267f2ec179e194f3d682e776160b631904f8b78445b6e22e5
c4088e856100390cd2b5589d934797b9c5c8b143ef4c6d27efebcb08630151cd
ba0fe65cc146494996e96df3f02fdbe38445989205e04d5684fda7524a4a669e
f5b92cb09c668df5e2f9ff8e0dc22aa0a9a7537c08dc57a76a0c079388b5c9ef
08bad53baf8f45911f3965851c662585204c0eddae1c631344b835d74d4f080a
122e6321185af34b214b4509dc9913081dc36985d4fb6c7f6c017837cef88c52
682bee7eba6e4abad2bfbbe1f38c37a2baa282f1b01e9664ff90761e365fd638
ffe77976b967b77aa9bfd3c1a6cdae30cbf078b8eeff5594628b9b1675567749
8210342820a7ecf8f80a5962af020cab91e746196498610e019a067c2dec77e3
1d5a67cb6ea18de0a93a251001f067daa537a8c19a32668c12b2eaf3c8980c2f
29d140653d849f6a630a664c9d3f4e8c46904cde76f622d230d8bb8026869822
6b1e7ca450b42c15d0e15646e1e58bac071cb646ef5cdcf3c28356687a42ca69
bcaf70a68283bddc812072698cc07c42bc5342b416112bf0c4685016eadb1219
ec0220e4a79f0d70ebfd9f8c80b9bac7c5b58c1a326564ce11003f86d9e64051
48f5bd5aa88872c5df4c60aa0a81f888c95e64e9d8cbdfbb19ee88b8ff85f2a0
d5020666dbd2a9ab9bd7077fa60b0a4b3f68832a313f063fd4c9ff77f8dd099d
56d8b9eab6e8e1a9a9eea155bb5b0d2ecd4dae2f3de0e1e713215049f58339e8
0119079217f34d1c9ee70d2ca9091506256047c3096616964eabf147750d5186
b5f12ef8e7e5bd633bfc6dbb40cf40cd8fcafb3c8a4fb036bf16bc40ac1e023f
a7b79ecb25d4c961589f60bf7b4db58fcfac6500ba8e78b6bc8d9fccccdbfafe
f091e688e65faf64a7c2886e30d6e2f6a49e53bcf4fdb82cd1e3df77bf5e3a40
b2b067744baa239cd83abda4a9f2976d8c3e986a44aa82d165775baced03a628
f5c348a2c2601d17f1935979d728e6b707b9a4530f0f669999256967f6b35ece
1787b19ba6592d85abbd1446238e1b1d8d275ba47128a9fac5cf40d3469ffaad
fc560790cf8c9115285af5f8be8aa2d7d65f3bd5c5daa79041c143e75318de14
0aeb5a0ca65ad8a758a2d081157dafac07e9d1bb4399e44a6614e1cf60ee60bc
c33f68dd7587612b5c322f4534f9615b66087fe8d8950e143096ee6984ce7d7b
278d19f522c50a5b170f36481741af918af7b635d7a6d272acdcb0287ecb8b86
86c42e384489a7d2c65a287976ef00ab6d2f983ca1c3ca16dd4210192f9963fb
e01073c5463c31cd19f0875a65de4a722cb0a170f949fa5d20f97ffae1a18ca9
3afff49948bf1ffd148951bdd47005fb0e652c044a60d846ce3b1e2184425f58
32160c28a154b0dfc2e69b8d46b497f6b2860a0cbe9d9c33676a3f3cdf8f7fa7
bb07a3602c0b96491d7cc11eb5e3cb0b8fbf62876669bdcc1563ae24f6d57bf5
92e30c5f1cbb27eb508615198d89759d510b12636f1b111a3637efbe811a4b23
80f9b8be48c5d1abf69678ea85607a5f90d0a03e7747dec69beb060db100471d
8fb7fa91d58f49f3eaecc6150ff47c1c5acbf60bb16c6868cdd7fa55ceec2689
d779d4c451f52d10a700b499c135a757133949f6d3197a7aed42ce3931d3b29b
239e18d60c0a68549aa9f920cdab7479bbfaf29389e63216f5bedcdaff7fc69a
9ffe26c49aa111f3dc914e1d5f3e669c3098140b8525bab6c6d6276abc7480a3
00003ee1ff5540a5144a6e6ca4f1e26c9750c766bcb69cf26dea9516c0e5c5b9
18117f3c7f0ddbc4b7bbc9b4d2016c6048be97c6dfa182418f07f2c4ee696e5b
386376fb187588bfcc95571b6f914b7678b30743addeb9e87addc1e262b3540c
60f837fa27d7ae9501f82fed358c83ae7eaebb601505c6c71e7be0bfc2bdb598
6ccc4847aa8b6c761d1e8095e70dde6255db30c4dc9c68fe60dabe407044ae2b
4dd8aa9458e4650bb1306019a69a3736e284b8a8aeb102eb7d5619c22b73d538
b2edd90d9569b2b2a60be53db8d7d15aeb5882692040d429696e4fd66e15bd2b
be6fd0c8d2b34a3c667b982450c97a286b54db3ded87bd71fcf32393069e9840
3ebed2763f7693af909fa708498532676c0ad24d47871345dcf4b9af69d3772c
12aa363de93d77e75cda059d0db8103453bed3cb2bcddf03e26cc5336e145eef
efa174605345179ea3faf2deb7ffa3c77ad91aeb9300f1f18205f3e24a489176
fe31a0a91ff7fc81cfaeeb273fa64169d22c0c183557dc159b69dcb9b1ff62f1
444e9237bb6e1db519bf562a04406a002d370536efc9e2bae597c8a006a758ad
0c89cf4a6f36444dc0bea1cd0a4cce679626cbc2028411f28005b082b4f7d9bb
f14dcc37f4d7658c076c863dec1a2fc03565f7414ace09c2be24f00644476e27
082b669bf18b6c2b26bfb46eb134eacd6ab1bcc1ee09952add84018a2aac6d3f
91c962b4c54955402cc27bdf12cc919309c6d021f4867b0dda21daa8e94cfe8d
47ba218aa7aef9ad4a910fb60814df52e3780646d83ad382d73551ecb423bced
b233894b43ac9513d42347c7c2327b5c1f248856109b244b2ff80fb188ddf0f9
59a567435c8afcdeed00326ef49e18a4547d145424d2618ac4c9981599fc0426
337a6a3f2d081d655766b1d3c2132c6a78801fc78f1d6220a2777839b702e227
0c491d6f4930b1691839a2b8e7171c6298ea8365794fc0048d6e5e15b4acc48e
4c109f9123a210db9be42f58794b917d3e5d71485c5fd90f8f6f58a142e4c6be
31479da56d0b028aae086679d173f223728effbf97c97a09483aea41c372afcf
4ed3c2229d686063dd4479e72e1e1a5a539eda405fd206e7c232d04a45f0b972
a1ccbeb98142bdd492442b0bf536a146c8a9cbdcb705648526eee048de489600
15f175120ad23568c5be793c9469c0c4bd451af4fd1e5c506b488753a058656b
c66206300ca29f746734872e84f8bcdff8cc31ee5cb640fd46597bca838a6d9e
081900e2d53265f605b893926932982bcdac4c1606d0314d74e282681c2f4cb8
8200170826dca530ef22d446d57f57f9956bf14b755ecf68bad4cf6450951fc2
dca09a9d34b4fea6a3e2b33912691a3e5e9b3ee149176974dd61725837197131
23e3d2367e9664f878785f48236fb5bb2d88798197b0e8e2af69cbfe5ac94158
cadecbce69e9743762aa2c34b1d070132771edc9ee2909c9c366248f6b05d22a
84d0940dfce5161b2b823e3a4847f1433d3870ff17b15bcd8fe654fec94fa79d
3c22dee41869427ac1cf71f0ad531001c92c47725873c0ebf22e5510e265c2c5
c4d627fa82ad44c6967c806ecf3b7e6ce57c316293215a3de899779c8dc8a98b
6c4a6ce328e9fb3788e777cd609e4aa3a8d8290f9f84376cbb598f4ce66adfd7
9cf4744f6952ba1671dc99ad564a54235baa773088b7f434c8f51bc73f35d326
98c1228f712cb82abd7cb33cd36a8b61930cbfaf96b210472abe321755bdd7b1
d36a7258ac05f0bb27176875ad0888e9a339ac666b88befcc6cb35f053ed23e4
a0eb5fc9f1387960941f635e97d3afe08e2c0c529b7552c472b6e7c5e5cd69f0
a980d08fa1f76812974cc73173f79a198cf6711eaad27fc725c98eb28cf92713
3bc1369dee9aa93401d22dcbebf05857a960d0bfb2bbb551cf13b403fa4d1a7b
5dd41b3fb2269926f99378187b518b03d933e0cdc9c5c661d8bd5013f8910e13
35e5ddffb6e22361b81a058ba8dc0e5a4a4effee479997651a8658c5d2846740
be4bf075030c1b646bb3d4d78392106a9e19f4cb5677c04c5afc96356190c776
cee7735f75532dd6096044c687144baeb89fe48206b20662442437f791c4ba45
c45f7447bc04da10f40f1bb1ac18f5ef7b76d1b8b5681b3735fc7301f385e001
ff85a4d902e65ea6308066a2617f699801767a02366e729a5c502bc091557b68
274fed872015d5032f08f2c8d0c867e4e9cdd0db70615a484fe3a465912d5083
1a5f4753a76f2b8876d999703b5bd01bc8027ce1f68fd7714976575322e7680a
b7b711978551ba31980e6ccee7812733e3312d85aa14264ec1b8e23ed1ec5957
c66dd977a718206b4a56b34e108aabff0111399745f2afd06a59c1d22a05f08c
addb88a3aded8921e493e30c6e0fb280e938e85502fd84e04a282f07bc0faabc
78f0d63aad2abeb6a7b607482ee9b828cb7d4eb8944728db10438e585fba7549
43249b089dcf520002796fdda3f069c83fe46803ecc8f1d55dec8f2961b36b99
989f37b60d1aaea1f847687bf07e1c4adef693f8b45cdd73b0f23a715a665d61
1e79177dd596b7a9adba380a0cd8101732392262b6ef1e8e91701068514adcb9
8a3cbd77e2449b91eaeef58768c7fec876e282eb2ecd319374c3272cc67890c3
4dc20fe08f602434120d3f36bc421912a6d8b6a791ba0c226a8bd60e52084fe2
bfeb5aed3b262c277141c1bb43ae9cd2d0acdfc1cb4283c0853831456c12db68
55fc423ad6110c811f6745ee42d69a45c537170bc09af7eeac34d03df74cc610
2d5e1f3a4d9ba05926e50ed8f5dab15901d0728a8b6c09068a6b3efdcc54b3f3
54a934222b97d069d0cb5ed724e08663902a13ed61a5f4cf62bbb6c1d458666f
b1efaed7d81412b3dc3f003151f379e526c41ecb9406e39efc7624c1770c5c88
55dfcae9007e8e38162d9e8ff94f08f22d793ec267f734bf2dcdf13079232271
16dcd3820a771dd8cfacebe7edc25e3f01131cea62c107a635feeaf153e82541
2f390f0896ba249263ac579f3b5ac33dcce3e65f0678f46a5b92f911af7d0a11
d3c7496d0f33e40d321ad65c7437519afad7613c5540b4c7a56d31eb24fe1268
a2edd17db0450406c17c59b1024f4fc32f499ea392009dc1e8dbc07fa4ec801f
b092587a9f0072865ad8709570d9ae200519754b37fdd8ac9f9e74ef440b6067
dadcd1c260256e10d09d9df7a8d255cb6a5f11b8a4de20f1ac4380e0ee508506
c0df5728a0f4576feb282c156a6928f64356aec5263d364d8a3f7fad1439b2cc
c1daddac23c4ab037dbfe15258e1c084d85d4e43b4db92d1076517c4b35225b0
8e4af5822f3805e18565ad250175fd574ae34a99fff605b0af19edb178b97dd3
4474e0bff19c02a56148a6d34a95ce69fb126cd8360a0ad6774def5669d981ae
a90dbd4d5b43d4fcee2e46a84b9dc9d85c2fe99102a46ffedc85d8073c19e1b5
344a49667180b04bd472eb34323798e4bc412a56fcb19e31057740380bdaf913
5682b37d7808a4ea8c60ff6cd8378dc618cf301261871dac0d5fe31c55df7831
18d87904bac7244c26ed0155d223fc7e5b21605a0aa95c07db676b45b4b74949
b4d3e34228c8e2b441bb16d6a8f36dab00e615682ca549dae6a0b5da00c185d7
0a90ddfdeb9f5a910c9fcb0a19ab64abea0305499ddc388fccafc55cc8c609c4
92dbd597a869862b313fb824eef66605408557578029dd0849085ed8f2a68ef0
e3f92b02f7583b954d2baac563ad2c9e7e38a30563a7e19d23c8c0ee3920d52f
1d210fbc4b3af6f4dc581d63b248bdca42fc88806597cc1560b8070ffd5c5ebb
617e30e7e5013c27e979cd34ea6c1209e874d141e09145ef214fb38e12093957
01e7ba750e0b1554fc827193528158204c756459a6e8720cd3a8fa27bafe107f
0532cafe5ba9fda50ca00755534bb4dbecb099c8d0e2d378124e29c84c06afe4
494331b55930b3e0359c92d07fa0ead6c6c75dd7171ad8bfc2e5043380039aa6
a550026d91cb01e541b7a883827e7dac245a53e7a5439c10edced5bc5da570ea
e52b6cacfc3e3fd87be4b5a633d012c0bf37cc29196238d0071e57c14a8168f5
3399f252dc368ed0ab55d8702a92bc21adec2c3a83c22c7bdfc702d77ab858d2
1cfb4dbdd22eca9f6e61a15a6f85bb5c44a17e23493e8fdfbe401af4650ea0aa
70bf01a605024d9e9c1bd033af2ad2c6e2e983a54e987e2b36e6670d73ab1d7a
f83c3dbd6f60c8f663a1223141e9b37b255a71c9810ef65b8b47828d0f3aa6a0
22d937f31707d7c7332a5fd4a8de4d0034806a96ebfaf466c6fda9cfbaec213b
04a04301b3f40ded5bd2a2e356839e843ea7e3476952582dc5bb92b9014b312f
63118deb73a1edfdf2c2af7420f4244c4f7e7393485eec06b31edc7d90eecead
12ca0a31aeb37b0f052799c035d83b1d10213ac9810f7b7d32aeaf59d6d9fe8d
59e4824ce0b6df1692f3723983b325638e0f6e707f2cfe85464b31c331d17bfc
55630210f31cbbde51ab72e52d3161286e625ad699d3d0c499102602636c83cc
b0a91ac6f39f6f086478f761e00e5db407d415dc7690cd5fba4e4eb7ceb89071
415fe8ab20d2468c0c8608c685a367fa51abba520398365bdc4c3f74238bfad9
b7c0f90cb5bb0178d1403fdee7312e67be9049157a0f0bf175c9a1b1cdd23594
4d7276e6cf3fb2e5b9edc6c80d08e890b53683921b9b61725c9d1e1ac3e9b74e
b62acbae9f9f76329a23aab3470e73ec536c81c5fc3f93b59f004f8b62c87f31
a177453850b2a39cb9278f070e94ed5a0af64b815a7a59262edd18929d21cab9
0597ea9419d45184dfc266be633b54ad9b0245fa06d3fee54d475bcfb5f3024e
8777688dd22e5dcac5733a1b9ce2581c38474e958da1b61d7488dadb3cab0a32
ffdcb35a1501a3a8adf35d0a2d29c15b4bc6f912270449eab4f5196a4743bc2f
0f7e15d7191bd6a38ee25dae1bb9bb54eb28041b4cc7fe11c6916db92d119c12
ef9979ad99aca0aed5407f2bc9e1db031dc3b89d3c4cb771bf7b0e46e8d960c8
a2f0e71c10b4b34a4ddc19e0999ffd1d08e7fbd1c898ef7da9dd00717c4bc2ad
94f9e70ed77b799d90032d65c2bdba8d841099527a9622ddbfafc348f2413b15
81758f98fdd7c3ac15fcfe491231333cf35c0cdacf34c6631d28ca4eb134b156
6eb3b804fe2c8026a8d6436c0b35e1c5eedc66a287dc46fdb13ba30029ddc272
6e2fbc27331ed37309506cb21622f5aa3c58f9e0df13dfedeb1d40e8cde15be8
cbfd789f487ea8d1e2a743cba1eb0a992af0bed45a0b2de2cdab266a9f0dc44b
b99b9cb5aaa647d4bc7269b6c747fdad09622108873c74dbf78cb86cca17526c
e3016f75fc41a91e54e3e0c9b6dcc1d67efd3c8922d02269f6a16adbf410898a
41a35d0912df4d19178b8bbfc609e347a13fcc787556f34f3e78bddd8d1cb48b
52f7af28271042549642728b801d12061759a709c17d8305042a8637449be347
ebdab1eaca559ca2f09e4ae98aa1370c58a776fb8bbd4df39e917fae19bfb863
fa18ec88d610264a93cb670e68a46d806b44986502e868366481e6686e42b9b4
7bf1b0e946ccd616f5077be09a1adb31732aa70ac1530e1ee78d2b181012d1d8
7ecf93b90e1ceea929063fa0248bc1fcd8f3d21ea7c3ea1f3d2fb53fbaa16e24
795b36687e32d800eb81ded4a5eebe98bc2d17c3bdd3e7c87f34c52bb5902da6
cca33d25eef00d005996df7b1804cd2800d64627d4787c693a14d167b39ba2e7
9b50e76e7db8247e98a322b9bf52172f3df25d24960559d3946f90c753160dd8
6f5f246d76fbe95affd8d4162ef39bdf5a103e479ecc87bbe7b8cf693f245410
81671766a3c5c1ae8b906df4fc446a27934bbca5e0d3e6e4325a226ee2ca12b3
e30aa7ccda99c1dd46a177858d44f5fe2bcb7780c40e26ef8638d723705aeab9
f26e279df538717ba8b911ed2a315115fc03005bb2602d0aa532e957fe61b692
71d8f6871de9325a9db3fce988c604ac1db38fd0ba6690b9f21647f64a7688d2
b7b3f2f074f3e5347c3075331715f68937a27cd345d95d0befd7504356697edf
7b0a14a10af71b2413130b3374c21adab590ad662be28f0a3d77d3c71929aba9
f03b58a960000a21432720004a8108f6525656a2b00e3515b17bb18d74fe77bc
da419ba66fb407bf9336fe7bea628fc8125503118332cdfc5e4c270e9c7c1f2f
3947f0be18eb66aefe9e3a3286b1116c2a09320c881ef5fd242e8ec696de15d2
13c7fbd80380523652fa0175dc8b10aa068f8c6f79059bfcb35b36f831a0db3b
5e6d23446a592852eef83bcbb4885cff268c821576683cb51ce32ca55cccc612
d17817f8835eeacf0413245183605c070acff2fc104d0382a5c3c65b60f0eb16
0de2f148be809375e7142ff929e931280b56723ca8618302cef57f172781ebfe
d2f55c6ec6a880e3e6ec87fe77c280e81a5c60aa2b918cfd7d760b78a51e809a
793f85bc77b8a7a388cccb148554f8770dcd22112361132c8ec40e5026d79aa6
17aade59893c15e9277d47afad0359a89a60fbcf4449fa52d421fd044a34ce0b
b829c6ab96a750468e24f98e70881c9228f91e464ef76207e78efc4c78a5e10c
16c928549dd94928915c5ebf5707c12c828564f5decc76336389a4646f580215
ea30312171d1b523dbffde1d8a8487444acf11288e3bd5455def9e6ce7d8e599
ace67428f756e275ff6eed3598309d07ee75e8e6c79d02dfb5732bed67760953
4ee6b0e5222f9f3a9ed4c89f58a0119c7ae793c2f1c9a2b9510f356de1da6ab2
bd4fa4e71b1210f05971b0bd457f698789bc90b7a6748d54d3a6f1689fa6a213
c190b78f5995251952c52e1891178703defb840bd46ac7681ac1d40411cf250b
6e7179f9ddfbda0cad010de3af0c63cb51ebb6a05744e4eeb32a72ab1cad7cdb
c46872b340dda07f979dbabb525575449b99b24533dfaab369bec64c6194e12b
8b3df79abd29414492f2d20f2e7a8cd44fa21c2c15f16ef1b9b637cd134b6426
19a94dc87ba29d304cfe4dff3dece5b8b4695b285b8d79d0d10d5f90cab67d71
fd9c0cea7a7761b7f44662a6f0490c4e4f92823c2a0cd02c38ce697098e599d2
9035280e2b4afd71ef73dce15057a2784f135f406656c6b711eb3a12b56c2b4e
d523c4f5ebf1e520e09e38cc19c0a849fa2acd9e640494e81ec24d463b2928a7
422288f943f73a6f20541975d4f033785c1259bdffb0a7590da387a55d942d31
0d52275a1951b5ed72216eaff618e97381c685bed86fcc83f9e20bb949a1b0bc
cd2a6b3e0d1d546f0c5380c26db77050db850d8490b706e92a9083e0f1a05b2c
243eca110fbd8f355c91df01c1f0f0d162782158bec961965cf9e85a2bc1ef3c
daf8852fda30287b06ed609f9c9562592878241780b50a0a68b3a0e633660e5f
9eeeedb7f3e16addc2ba55cb9985a3d21afd41640d4b8ad5567799dea7055549
780678bd334a9390180e06dfd682e11bee22c656a3b529fd60d7d737aeab3992
933e3eab7b5b4c052a48c4428b06d57ab3369b7dd5ce3c33c29753bb288dafd8
cb53e75a647bcc312f46ffe6c388074e62915a45569838c5688ab1d788c389e0
3e77c35d6af93383dbb2631ddd5278a882ce4e494b6551634be31f510e35d048
dc6d78ed3af0af82e942e2b11084a2c6ce9334f77c5c2ae0582d98f24b2738f0
23ddb24eb5c979cac70f896220a64dfb0fc3d70ff3bb9f1b21bb6a2627c754d1
862f3be0f7d89fae3b8ebe084d1850d70ee36f86abeb6aa35c0b643fb6438ea7
451a6c7e5b496f9853b579b69b69f6d4a4d9c639e586c17ab4659c470725ae8a
42179f804cd561da921ba07bee4d3e0d8bb0eae9d9132d72c2d4acfcf4c2d787
410d91ece747233ddd2836079ee273d36606f09408ce4b8f9c60fdd63b1cc731
5fd7c0db387bb7a8c4fc4b1ee7ab64fbc2ad29f085813fad258759e5cb247b04
5e8753ce0b4f5926b9fe87b6acc25a3dd756dbce90bdbad870621747f6e4e250
41ac5182f4ecb7e23b0320c73fb6a5d4d193dde9b389b5655e1ba4ce855e9642
74cdb061625d7754831c725a217fe217a053b486573a3fe18444f0582cc17923
9821365c26840e730edcb6626a62e99f1a9904c7a644436c32bcabf8c63ee3c3
5e52909b9ac8107ea0f1a2e7170769da989393f85df7be562f096c60b98a9347
836c2098e3aaf5d5edcf70482e9cd5a58737bd11a12346eb2201538aa5534633
b74b7f48f43748b2efa4168c4d33cd524c8a45c7273bb4811f2ca8b06b7432f3
b24cd2123e362031e6364b83c98e3e05778cb2e66a88f49cc6d1d8f0bdaede19
fecdfd0cd8c58234630a6976602d354090524420cb7ae7576439da49ffde53b7
5faabcba7a3b83537b10240b1398df99283e674009b0320149366d87d63868ed
509cfa9110acf652511e9522f0520d7440ae0b64ec743170234eddcee2299a50
6c3b9fae1785bbbab85f3c779510e8627496329b1d8351bf663e53b7bded078f
b0d04171d806a83d7ff351c673865f2218beba2ac5cf32d9d1c06651772f8bc5
467615c46a67941c0153e996ba2c8790bc438f78e18b2a1a54d484f2e7b29061
b533a4008a2e679d39b06264f0d96ca58b4cfa95d96d477b654017f31932e17a
48bb00c6386e093c42c6de3f84cf460967ccef8b349b8bde819004217d607a3e
879d37bc1c9c0e972b70ae394500aa0d7a914808b75947776fdfac457a46f09e
46980abaaa08dedbc9e8f53391d8bf0ad192ddf870df3a3e8006fde75934a26c
07a692e760703b0f08cf05e81b2499ac79dc27ea4915c0e5f9dc35d2f1879795
2ce263f5bde504f67494379e4f8a619165eed46999427c3a662607d90faa35e5
64752644d79e479d991528e7edc2f56cfb5a765ac644cd8707a6c52fc9ac0681
d7dc0535bdc61837b8e4ce1b58a49fdad314d1672f45b0a204d9194904c31fbd
b65e00328220781a417adb9dc95de58c8f6d8aad49ac4019f96a6b1b6717f163
a4690a6d9f66e8c52697eb2c05bca174ac7fc34f01e5a97608a4ca6744891063
a69632dfdce3b67597e8dba80f543d9c44e4b59819f70795142c202af2508c58
a7e07f798be9971fcd4c08eb2b8484129e91f9e23dfbdd64bb4d5ae0d717f497
2a80d67ead74d769dc426f49b86c1f1b72b6cbe80b8875618d67731409d3d77a
e39b5c4a13a544b506a3b4ba91605155d944c92c6685f69cd90fb5a7fb467df2
ddb53ae5eeb1cbbab0de1c7284304d807e0cba9e7d47f741adfb0676ab6e0768
9be7121132dbd07177cd4d07f49ca576ced1e9249113b1bf2ab6991c36977e64
69f3aeb1856abcb534d835d27a1073ca1349f8f3fbf5c78779f87f9a6441ef0f
a4df8fb1bacbd40ed7b19c825ea41318e8ec7d737235aecd889d0423e66b37d0
b3f168f1d604eeb9fcb5017da64c87ab710f61a9496ae2107cb16f8ce49327a1
17531907c86863fc16808272d23ab587b81f09fa35e552eb2edf7030ec6deda5
6903519403018a0a36c388a2e52860102ebd02c1b2efd1491f83d33976fe7009
01234985871795236d67e362304b319e85dcf9a396e3e68a544c8529f0a08aef
5cc36c1cd49caed14bf83a2bb6e4375fec0ff6e9ced5c21d651941ed02e2b37d
6a7178f523c0744755b21fdf4d62c4b0833966959c813508da4a484c195f24ec
cb9e22f3572500f87f0d42cbeffede6b35ae1718682b6b069ddd4592840f4317
26998a0462d1946a3588a0fb33c62058f14060a9be986ffd46b3e46c5cfac561
9da6b4ecb938de4421c95cca9bc5198d5d871938e3f8f9bc516b171c8aff3248
81af72988e004055e5c1a2d7f89cfdfa1076bda2bdc12704391dfd4ecf1cfb34
34533563428b216d2cbc6d01b8d85302163fc696f3e01a3dff8766a56018a560
735d585784ae605464df06aad97e7a5453adb24c3fc1f460351c9716e0e77216
bfef4f749280aef57fb7d784b88ecdbec454b184359b6ffef9c9e6552bec7366
4737a4cb6975185bb7461d32a93af03edeb871f9f81b62666bbe48d03f6ec16b
6edbe29eec64eb883487488e372017e19f8edb02b3e40ad3d036b90ea3d4765e
5dccb9f05aacaa985576ca43cddcd3d0d44e529ef7a530744150e15027be7fe0
5dea030c0f9421a48c03a4b75bbd500091035cf9eca04eb8929c8a359f8e3218
8ba6766dc4dfc668d4efa228bdeab9e33cdac28977babbf10301a6406394209a
d78a30b0139c4f24644498c83b7a649cce4fa35c3df296c92d364a4dd82b98df
593c5079fa20fc152a808dde67e75f9376273eea99356646eafd07c8e72ce46c
468eb615dc0513e81ba6a245a49d10954f37d59b8664353893c18bf7cd821bc4
54cab518e04c3e92d3231a9fce5a4a92bfca390bf3d4c436b44eb41014860620
db20386794343c4992e6318a6953b8cf715cb101cd0f21ee1d3f2800179d6b78
a157c73cd19e0ee41f52b69ac0cdf127e544f14ac35e4d736891d645492d6f2c
7f600ccaac7966b0e014cb2f88578b05311fb0ac4879d1e8fcb62b28271951db
38202926811562f3fe4030aadb4728d6a1b61b48786122ff9faf49e34db2ace9
b4aabc2261b46358330d570fe87aa77fce7146c8b9ccbdda3da9d652a7f1afef
77e29a06f561f9b6a40a8397f0e08ba770ae5e7d30a63f054a7dd6bed98f992b
2d4087dabddf3a1798087f1d66ec39587fba32afa7895a31e907fa1d634481cc
2c9c355ae1d4b0102de25dd92deff7976077b0d69650bb1452a35b382d0b4609
c6f1fb75856ded417be386ad93f79850c731dd9e3e4cd39a2a047984ec8e7ef3
5c6ee1c9af6da15e160928bca0f337f05b1a4fb774c5219c73b3663e993b3e73
e524f5de8442ca670f136090a0b388c5747fdc7e42782b886548432af33c9669
06c8009f61794f78bafeb71f375470c58b3835b6f6afe0532b20c1e2cc3653b8
133f4a8eb142376fdc43ff173b4b24d29636025933cc3f25b539b0089329c285
4bccb2bf694cac07e7b312b441909c952e83cbc7d8bbffea273621909b55c142
e73671367d7a4c5cd964b194e020037d1c5d33744c7126b51ca60d90fe0049b0
500b57d8fd5deec3bf3b244276df46f0d25909d4d6a914ba9d54d18bdbdd45bf
1ad4e713532a4826af08b13cda21e9ba009247e16d80ca875062542f757e0f5e
18fdfb919b75ed0ec90d4015ea75501dd6c09ea7b7a4275cca9a3512f7c2202f
9f3124da93d12b9f75c8b4daadb0c2573948a02a9b3c56508ca59a07257265ac
1904eb4cb101a781e9f477f4f7f7c343f7840406b620262d17f5b412a0a35b15
08a78482cc2c044d4dbe0f3089f0cdf9cd3dbb005cbef6e06e41ef67bc78ee57
6deddd26b9a02d5581bf14d3b0c11d92edfedbf2ce95dd8ab952b8bc3cbbbdb8
1c5ef75b4e59eb24d03a6e25bdc66171d418d6f9eac62a3a0dc0d645b42a122d
1e4cc49cc364157260df3956fb4a032ef04395f0daae5406d738a5f8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 13 /circlecopyrt put
dup 15 /bullet put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueXX 5000819 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddc63eb43f34fa90ea73a234af35fd9b24eb7
4f19626e9124df7acb92629cc87b2cf81c4a89b27447806db34393ddf0402958
e2daee0b4bf315f9aa0a2650d2e11ee289ffaec940d0af160fe7f29411c1c458
69d1ac3bcfe2ae4da72422549095f1fc9fec606289316f106e719a4ae2fd45ee
868fddf07a80e9a626bb43cdfdaa9dcd208b88fd99af20b27f9d6b5cda6a3fa8
8d5acfce8b5eebb38854378cecc3bfdac526514f1be9fb28ae628918ba942a3e
05b78c3aff808cf416a5ed01be280231b75a7aee0c66b0549713bef6b3cbc188
e625ba84cb232937d492a14e1f3f2cc96a02ec98f5ca0069e945cce4eaabaa6c
177e4062888cdc3c6795cc544e34b367a2096c344dd969226071b56109bf8e1a
1a1492c133c3d1bc3528635d5f41364845aad74ed5425405fca22eb92260806e
dccaf6628f0fba7bd87671a18e18e01a3d40eb32122120e349d8cb88612fa27b
b5146ad15a6cf39c2da54eaefbbfda1a8dd91d68187a3abc38771d0a897bb547
378c052109362a702084ad69eb4b10af779c0bcf94e488ca0057e41312dbe2e0
a049f6c9ec7deef472b9d0d9cd8ca2993ed59c289f1ce0a739124469ae4e780b
44cd5971f792652cad38f437f509ba7c2ce02073ba39f54b73eb277f38901e19
053feb3199b66726d105dd74072ca92f75da14524573a65b704c26d1c67f2a4a
936ceb946f24fdedf3592786cabae352a0b7edda0212dc9638eae132ef6d0969
af084440c540244a83129486d6f02879c05333244dceafff18903b7642ce4da3
16697df7fcea1b9520eb575a00d38b3b15b13f5b0c7f52acf904e6c4c2a1dea6
53e396b1d49f940f19811e4900d0e077a04626403dd37501358e1d54b200ebb0
b24a30ee1e8038c79e91cd174687de565bf6af828cb9311e7bf3bd8a0b813cc0
09850ce5cb8e4b6457f835f326b96b02adeb7f1a78873ee1defaceab33ca2b4c
74dee8992fdaac45924ff89e344d98bcc697445eedfc1a209217037737a589e6
ee01d766c9f7d3f3fbbe634a0b5b5a04bd5fb195331af926f7b782feca68b1f1
4578df444e411607e630cd5be436d2c0739a62127c94167d82e7443b3d660f37
3397ddd514da96fb828cef1a098ef5ab1f26e1a50ed26465a3c562a01e934e8a
e0c59edbf014cc15dfa9fa2cd16d36d8e1e4e7404e5291104b54a8992ca287aa
f413ee4faf59240f5b06ab384ad6bc3bc38a40149e33c5349b9f2aac9f5f83e6
0da1046103e7bd23d1bbc0689004e20bb33578a71a175d6a50f942dffc674f71
97b30b558d42155d9997fdd1c08464c792883b16197eb8df844a6bdc7872282b
62648bb2072dd60c2e1c7c4d8762fc8b825eaa00abb8755053489dd813ad7442
53e076973b6e712919e8ffe72231c5e34ad56b3553ab462affa130c3cc71e3f8
c72935182ff0b9cb0c44b25f277575435d642b29b355ec42f5ef78099d8dec85
cf5d7c4169aa4a779c821ef32f9f6d8687bc5555d7d87c4f90826eaca9a846ed
f9cde11b283863d5e50e2bc631724dc3867baa0af3e4c9d52bdb6d76a0d12b98
0fc31145194967c10f264cbd
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (main.dvi)
@start /Fa 135[31 2[31 31 31 31 1[31 31 31 31 2[31 31
31 31 31 31 31 31 31 31 97[{}19 58.1154 /CMITT10 rf /Fb
133[29 1[33 2[36 22 28 29 1[34 34 38 55 3[21 34 31 1[31
34 31 1[34 97[{}17 58.1154 /CMBXTI10 rf /Fc 137[40 42
29 30 3[38 42 62 21 2[21 4[42 33 42 37 39[38 38 38 38
1[38 38 38 38 38 1[21 4[29 29 40[{}25 58.1154 /CMBX7
rf /Fd 198[31 31 31 31 31 31 31 31 31 31 1[31 4[31 31
40[{}13 58.1154 /CMTT8 rf /Fe 82[30 50[36 41 3[46 25
36 36 1[46 46 46 1[25 2[25 46 2[41 46 41 1[46 12[51 46
2[56 8[66 56 3[56 10[46 46 46 46 46 46 46 2[23 46[{
TeXBase1Encoding ReEncodeFont}31 91.3242 /Times-Italic
rf /Ff 141[45 114[{}1 74.7198 /CMCSC10 rf /Fg 205[42
16[61 33[{}2 49.8132 /CMSY6 rf /Fh 141[29 5[20 1[25 22
26[48 78[{}5 49.8132 /CMMI6 rf /Fi 136[39 1[39 39 39
2[39 39 39 39 39 2[39 39 39 1[39 39 39 1[39 17[39 20[39
6[39 39 2[39 39 39 2[39 42[{}24 74.7198 /CMTT9 rf /Fj
242[57 13[{}1 41.511 /CMSY5 rf /Fk 141[25 114[{}1 41.511
/CMCSC10 rf /Fl 137[35 2[32 4[43 1[20 2[24 1[35 1[35
55[28 45[{}8 66.4176 /CMBXTI10 rf
%DVIPSBitmapFont: Fm cmex7 7 1
/Fm 1 27 df<151E157EEC01FEEC03F8EC0FE0EC1FC0EC3F80EC7E005CA2495A495AA349
5AB3B3A5495AA3495AA249C7FC137E137C5BEA03F0485AEA1F8048C8FC12FC12F012FC12
3F6C7EEA07E06C7EC67E137C137E7F6D7EA26D7EA36D7EB3B3A56D7EA36D7E6D7EA2147E
EC3F80EC1FC0EC0FE0EC03F8EC01FEEC007E151E1F8B778232>26
D E
%EndDVIPSBitmapFont
/Fn 143[55 8[34 34 47[0 52[20 52{}6 58.1154 /CMSY7 rf
/Fo 133[32 34 38 1[33 39 25 31 31 1[34 33 41 59 21 2[23
39 32 32 31 35 30 29 36 13[41 50 6[56 37 7[50 3[52 34
52 20 59[{}31 58.1154 /CMMI7 rf /Fp 133[30 35 35 47 35
37 26 26 26 35 37 33 37 55 19 35 21 19 37 33 21 30 37
30 37 33 3[19 1[19 4[49 1[47 37 48 1[45 51 49 60 41 1[34
24 49 51 43 45 50 47 46 49 3[51 1[19 19 33 33 33 33 33
33 33 33 33 33 33 19 22 19 51 1[26 26 2[55 23[38 38 39
11[{}71 58.1154 /CMR7 rf /Fq 133[36 43 43 59 43 45 32
32 34 43 45 41 45 68 23 43 25 23 45 41 25 37 45 36 45
40 9[84 1[62 57 45 61 1[55 61 1[77 49 2[30 63 64 51 53
62 59 58 61 10[41 2[41 41 1[41 1[23 27 23 2[32 32 23
24[68 45 45 12[{}57 66.4176 /CMBX8 rf /Fr 134[30 30 40
30 31 22 23 22 30 31 28 31 46 17 30 18 17 31 28 18 25
31 25 31 28 3[17 1[17 3[55 2[40 31 2[37 43 1[49 3[21
41 3[42 12[28 28 28 28 28 28 28 28 1[17 20 17 6[46 3[17
33[{}49 41.511 /CMR5 rf /Fs 135[32 10[50 11[30 35[47
3[30 30 30 30 30 30 30 30 30 49[{}13 49.8132 /CMR6 rf
/Ft 136[51 2[27 28 28 1[39 35 39 4[20 39 1[22 31 39 41[20
11[20 2[55 1[27 27 40[{}17 66.4176 /CMR8 rf /Fu 134[35
4[25 5[43 1[21 1[29 24 3[33 1[31 1[37 16[45 80[{}10 66.4176
/CMMI8 rf
%DVIPSBitmapFont: Fv cmex9 9 2
/Fv 2 81 df<161E167EED01FE1507ED1FF8ED3FE0EDFF804A13004A5AEC07F84A5AA24A
5A4A5A5D147F92C7FCA25C5CB3B3AF13015CA213035C13075C130F5C495A495A49C8FC13
FE485AEA07F8485AEA3FC0B4C9FC12FCA2B4FCEA3FC0EA0FF06C7EEA01FC6C7E137F6D7E
6D7E6D7E801307801303801301A2801300B3B3AF8080A281143F816E7E6E7EA26E7EEC03
FE6E7E6E1380ED3FE0ED1FF8ED07FE1501ED007E161E27B277823A>26
D<BB12801AC0A3D87FC0C914E06C6C1603F0007F6C6CEF1FF06C6C17076C6C1701F100F8
6C6C18786C6C183C6C6D171C1A0C6D6C170E6D6C17066D7E1A036D6C17006D7E6D7EA26D
7E6D7F6E7EA26E7E6E7E6E7EA26E7E6E7E6E7EA26E7F6F7E153FA26F5A93CAFC153E157E
5D5D4A5A4A5A14074A5A5D4ACBFC143E5C14FC495A4A170349481706495A010F180E4948
170C91CB121C013E183C49187801FC18F84848170149EF07F04848171F4848177F484893
3803FFE0001F94B5FC48BAFC1AC05ABBFC1A80484B7C7F51>80 D
E
%EndDVIPSBitmapFont
/Fw 134[38 44 55 37 44 28 36 35 1[39 37 46 68 23 2[26
44 37 37 36 40 33 1[41 12[45 47 2[49 1[61 1[52 7[63 9[21
58[{}28 74.7198 /CMMI9 rf /Fx 134[37 35 51 35 41 25 31
32 1[39 39 43 63 20 2[24 39 35 24 35 39 35 35 39 12[55
43 56 1[52 59 57 69 48 2[30 1[59 1[52 58 55 1[57 6[24
39 39 39 2[39 1[39 39 1[39 24 27 24 2[31 31 24 26[43
12[{}51 74.7198 /CMTI9 rf /Fy 175[41 3[37 2[22 4[48 16[33
2[33 3[17 4[22 39[{TeXBase1Encoding ReEncodeFont}8 66.4176
/Times-Italic rf /Fz 82[22 22[33 28[33 1[48 33 33 18
26 22 33 33 33 33 52 18 33 1[18 33 33 22 29 33 29 33
29 11[48 41 37 2[37 2[59 2[26 5[48 44 1[48 7[33 33 1[33
33 1[33 33 33 33 18 17 1[17 41[37 2[{TeXBase1Encoding ReEncodeFont}46
66.4176 /Times-Roman rf /FA 133[39 47 1[64 1[49 34 35
36 47 49 44 49 74 25 47 1[25 49 44 27 41 49 39 49 43
12[62 49 66 1[60 1[69 84 53 2[33 69 1[56 58 68 64 1[67
6[25 44 44 44 44 44 44 44 44 44 44 2[29 32[49 12[{}50
74.7198 /CMBX9 rf /FB 128[38 2[77 38 34 41 41 55 41 43
30 30 30 41 43 38 43 64 21 41 23 21 43 38 23 34 43 34
43 38 21 2[21 38 21 47 2[79 58 58 55 43 57 60 52 60 58
70 48 60 39 28 58 60 50 52 59 55 54 58 1[36 1[60 1[21
21 38 38 38 38 38 38 38 38 38 38 38 21 26 21 60 1[30
30 21 1[64 38 1[38 19[64 43 43 45 11[{}86 74.7198 /CMR9
rf /FC 134[50 50 72 1[55 33 39 44 1[55 50 55 83 28 1[33
28 1[50 1[44 55 44 55 50 7[72 1[100 1[72 66 55 72 1[61
78 72 94 66 78 1[39 78 78 61 66 72 72 66 72 6[33 50 50
50 50 50 50 50 50 50 50 1[25 6[33 39[{TeXBase1Encoding ReEncodeFont}54
99.6264 /Times-Bold rf /FD 152[38 38 86[38 1[77 11[21
60{}6 74.7198 /CMSY9 rf /FE 134[42 3[46 23 42 28 1[46
46 46 69 18 2[18 46 46 23 46 46 42 46 46 12[51 55 5[69
46 2[23 5[60 1[55 7[46 5[46 46 46 46 3[23 41[42 2[{
TeXBase1Encoding ReEncodeFont}33 83.022 /Helvetica rf
/FF 82[33 51[50 3[55 28 50 33 1[55 55 55 83 22 50 1[22
55 55 1[55 55 50 1[55 11[72 1[66 72 2[78 1[83 11[66 101
17[28 1[28 4[22 39[{TeXBase1Encoding ReEncodeFont}29
99.6264 /Helvetica rf /FG 133[75 2[116 83 91 50 83 58
1[91 91 91 133 42 2[42 91 91 1[83 1[83 1[83 17[116 1[124
91 2[42 108 4[108 8[50 58[{TeXBase1Encoding ReEncodeFont}25
149.44 /Helvetica-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 1272 108 a FG(Meta)42 b(Optimization:)30 274
y(Impr)m(o)m(ving)g(Compiler)f(Heuristics)g(with)h(Mac)o(hine)g
(Learning)511 618 y FF(Mar)q(k)28 b(Stephenson)j(and)534
718 y(Saman)f(Amar)o(asinghe)298 805 y FE(Massachusetts)22
b(Institute)i(of)f(T)-10 b(echnology)388 892 y(Labor)o(ator)r(y)24
b(f)n(or)e(Computer)i(Science)584 979 y(Cambr)q(idge)o(,)g(MA)f(02139)
183 1112 y FD(f)p FF(mstephen,)29 b(saman)p FD(g)p FF(@cag.lcs)o
(.mit.edu)2091 618 y(Mar)t(tin)f(Mar)t(tin)g(and)h(Una\255Ma)m(y)g
(O'Reilly)2181 705 y FE(Massachusetts)22 b(Institute)h(of)h(T)-10
b(echnology)2303 792 y(Ar)s(ti\002cial)24 b(Intelligence)h(Labor)o
(ator)r(y)2467 879 y(Cambr)q(idge)o(,)f(MA)f(02139)2266
1012 y FD(f)p FF(mcm,)k(unama)m(y)p FD(g)p FF(@ai.mit.edu)-152
1413 y FC(ABSTRA)-5 b(CT)-152 1533 y FB(Compiler)21 b(writers)f(ha)n(v)
n(e)f(crafted)g(man)n(y)g(heuristics)h(o)n(v)n(er)f(the)g(y)n(ears)-152
1620 y(to)27 b(appro)n(ximately)g(solv)n(e)h(NP-hard)e(problems)h
(e\016cien)n(tly)-6 b(.)37 b(Find-)-152 1707 y(ing)31
b(a)g(heuristic)g(that)f(p)r(erforms)i(w)n(ell)g(on)e(a)h(broad)g
(range)g(of)g(ap-)-152 1795 y(plications)f(is)f(a)g(tedious)g(and)f
(di\016cult)g(pro)r(cess.)45 b(This)29 b(pap)r(er)f(in-)-152
1882 y(tro)r(duces)34 b(Meta)g(Optimization,)i(a)e(metho)r(dology)g
(for)h(automat-)-152 1969 y(ically)j(\014ne-tuning)d(compiler)i
(heuristics.)68 b(Meta)37 b(Optimization)-152 2056 y(uses)k(mac)n
(hine-learning)g(tec)n(hniques)e(to)i(automatically)g(searc)n(h)-152
2143 y(the)18 b(space)h(of)f(compiler)i(heuristics.)32
b(Our)18 b(tec)n(hniques)f(reduce)h(com-)-152 2230 y(piler)28
b(design)g(complexit)n(y)f(b)n(y)f(relieving)i(compiler)h(writers)f(of)
g(the)-152 2318 y(tedium)35 b(of)h(heuristic)g(tuning.)63
b(Our)35 b(mac)n(hine-learning)h(system)-152 2405 y(uses)30
b(an)g(ev)n(olutionary)f(algorithm)i(to)f(automatically)h(\014nd)d
(e\013ec-)-152 2492 y(tiv)n(e)20 b(compiler)i(heuristics.)33
b(W)-6 b(e)20 b(presen)n(t)g(promising)i(exp)r(erimen)n(tal)-152
2579 y(results.)33 b(In)17 b(one)i(mo)r(de)f(of)h(op)r(eration)g(Meta)g
(Optimization)g(creates)-152 2666 y(application-sp)r(eci\014c)31
b(heuristics)e(whic)n(h)h(often)f(result)h(in)f(impres-)-152
2754 y(siv)n(e)f(sp)r(eedups.)41 b(F)-6 b(or)28 b(h)n(yp)r(erblo)r(c)n
(k)f(formation,)j(one)e(optimization)-152 2841 y(w)n(e)j(presen)n(t)e
(in)h(this)g(pap)r(er,)h(w)n(e)f(obtain)g(an)g(a)n(v)n(erage)h(sp)r
(eedup)e(of)-152 2928 y(23\045)e(\(up)d(to)i(73\045\))g(for)h(the)e
(applications)i(in)f(our)f(suite.)35 b(F)-6 b(urther-)-152
3015 y(more,)26 b(b)n(y)e(ev)n(olving)h(a)g(compiler's)i(heuristic)e(o)
n(v)n(er)f(sev)n(eral)i(b)r(enc)n(h-)-152 3102 y(marks,)37
b(w)n(e)d(can)g(create)g(e\013ectiv)n(e,)i(general-purp)r(ose)f
(heuristics.)-152 3189 y(The)23 b(b)r(est)f(general-purp)r(ose)h
(heuristic)g(our)f(system)h(found)f(for)h(h)n(y-)-152
3277 y(p)r(erblo)r(c)n(k)j(formation)i(impro)n(v)n(ed)e(p)r(erformance)
h(b)n(y)e(an)h(a)n(v)n(erage)h(of)-152 3364 y(25\045)g(on)f(our)f
(training)i(set,)f(and)g(9\045)g(on)g(a)g(completely)g(unrelated)-152
3451 y(test)j(set.)45 b(W)-6 b(e)29 b(demonstrate)g(the)g(e\016cacy)g
(of)h(our)f(tec)n(hniques)f(on)-152 3538 y(three)g(di\013eren)n(t)g
(optimizations)i(in)e(this)g(pap)r(er:)39 b(h)n(yp)r(erblo)r(c)n(k)27
b(for-)-152 3625 y(mation,)g(register)g(allo)r(cation,)h(and)d(data)h
(prefetc)n(hing.)-152 3784 y FC(Categories)f(and)g(Subject)i
(Descriptors)-152 3905 y FB(D.1.2)h([)p FA(Programming)33
b(T)-7 b(ec)n(hniques)p FB(]:)35 b(Automatic)27 b(Program-)-152
3992 y(ming;)41 b(D.2.2)36 b([)p FA(Soft)n(w)n(are)41
b(Engineering)p FB(]:)54 b(Design)35 b(T)-6 b(o)r(ols)37
b(and)-152 4079 y(T)-6 b(ec)n(hniques;)26 b(I.2.6)h([)p
FA(Arti\014cial)i(In)n(telligence)p FB(]:)k(Learning)-152
4238 y FC(General)25 b(T)-9 b(erms)-152 4359 y FB(Design,)27
b(Algorithms,)g(P)n(erformance)-152 4518 y FC(K)n(eyw)o(ords)-152
4638 y FB(Mac)n(hine)42 b(Learning,)j(Priorit)n(y)d(F)-6
b(unctions,)44 b(Genetic)e(Program-)-152 4726 y(ming,)27
b(Compiler)g(Heuristics)-152 5072 y Fz(Permission)f(to)f(mak)o(e)h
(digital)i(or)d(hard)g(copies)i(of)e(all)h(or)f(part)g(of)g(this)h(w)o
(ork)f(for)-152 5147 y(personal)f(or)f(classroom)g(use)f(is)g(granted)j
(without)e(fee)h(pro)o(vided)g(that)f(copies)h(are)-152
5222 y(not)c(made)f(or)g(distrib)o(uted)i(for)e(pro\002t)g(or)g
(commercial)i(adv)n(antage)h(and)d(that)h(copies)-152
5296 y(bear)e(this)f(notice)i(and)e(the)g(full)h(citation)h(on)e(the)g
(\002rst)g(page.)25 b(T)-5 b(o)15 b(cop)o(y)j(otherwise,)g(to)-152
5371 y(republish,)g(to)e(post)f(on)h(serv)o(ers)g(or)g(to)g(redistrib)o
(ute)i(to)e(lists,)g(requires)i(prior)e(speci\002c)-152
5446 y(permission)i(and/or)h(a)e(fee.)-152 5520 y Fy(PLDI'03,)g
Fz(June)g(9\22611,)g(2003,)g(San)g(Die)o(go,)h(California,)h(USA.)-152
5595 y(Cop)o(yright)h(2003)d(A)m(CM)g(1\25558113\255662\2555/03/0006)22
b(...)p FB($)p Fz(5.00.)2040 1413 y FC(1.)99 b(INTR)m(ODUCTION)2115
1521 y FB(Compiler)25 b(writers)h(ha)n(v)n(e)d(a)i(di\016cult)f(task.)
34 b(They)24 b(are)h(exp)r(ected)2040 1608 y(to)42 b(create)g
(e\013ectiv)n(e)g(and)f(inexp)r(ensiv)n(e)h(solutions)h(to)e(NP-hard)
2040 1695 y(problems)21 b(suc)n(h)e(as)i(register)g(allo)r(cation)h
(and)e(instruction)g(sc)n(hedul-)2040 1782 y(ing.)34
b(Their)23 b(solutions)g(are)g(exp)r(ected)f(to)h(in)n(teract)f(w)n
(ell)i(with)f(other)2040 1869 y(optimizations)39 b(that)e(the)g
(compiler)h(p)r(erforms.)70 b(Because)39 b(some)2040
1956 y(optimizations)24 b(ha)n(v)n(e)e(comp)r(eting)h(and)f
(con\015icting)h(goals,)j(adv)n(erse)2040 2044 y(in)n(teractions)18
b(are)g(inevitable.)33 b(Getting)17 b(all)i(of)f(the)f(compiler)i
(passes)2040 2131 y(to)26 b(mesh)g(nicely)f(is)i(a)f(daun)n(ting)f
(task.)2115 2218 y(The)19 b(adv)n(en)n(t)e(of)j(in)n(tractably)f
(complex)f(computer)h(arc)n(hitectures)2040 2305 y(also)31
b(complicates)g(the)e(compiler)i(writer's)g(task.)46
b(Since)29 b(it)h(is)g(im-)2040 2392 y(p)r(ossible)d(to)g(create)g(a)f
(simple)h(mo)r(del)g(that)e(captures)i(the)e(in)n(trica-)2040
2480 y(cies)d(of)g(mo)r(dern)f(arc)n(hitectures)h(and)f(compilers,)i
(compiler)f(writers)2040 2567 y(rely)c(on)h(inaccurate)g(abstractions.)
33 b(Suc)n(h)17 b(mo)r(dels)j(are)f(based)f(up)r(on)2040
2654 y(man)n(y)g(assumptions,)j(and)c(th)n(us)h(ma)n(y)g(not)g(ev)n(en)
g(prop)r(erly)g(sim)n(ulate)2040 2741 y(\014rst-order)25
b(e\013ects.)2115 2828 y(Because)34 b(compilers)g(cannot)f(a\013ord)f
(to)h(optimally)h(solv)n(e)f(NP-)2040 2915 y(hard)20
b(problems,)j(compiler)e(writers)h(devise)e(clev)n(er)h(heuristics)g
(that)2040 3003 y(quic)n(kly)26 b(\014nd)g(go)r(o)r(d)h(appro)n(ximate)
h(solutions)g(for)f(a)g(large)i(class)f(of)2040 3090
y(applications.)34 b(Unfortunately)-6 b(,)21 b(heuristics)g(rely)f(on)g
(a)g(fair)i(amoun)n(t)2040 3177 y(of)f(t)n(w)n(eaking)f(to)g(ac)n(hiev)
n(e)g(suitable)g(p)r(erformance.)34 b(T)-6 b(rial-and-error)2040
3264 y(exp)r(erimen)n(tation)31 b(can)g(help)f(an)h(engineer)g
(optimize)h(the)e(heuris-)2040 3351 y(tic)d(for)g(a)g(giv)n(en)g
(compiler)g(and)g(arc)n(hitecture.)37 b(F)-6 b(or)27
b(instance,)g(one)2040 3438 y(migh)n(t)e(b)r(e)f(able)h(to)f(use)h
(iterativ)n(e)f(exp)r(erimen)n(tation)h(to)f(\014gure)h(out)2040
3526 y(ho)n(w)c(m)n(uc)n(h)e(to)i(unroll)g(lo)r(ops)g(for)h(a)e(giv)n
(en)h(arc)n(hitecture)f(\()p Fx(i.e.)p FB(,)h(with-)2040
3613 y(out)32 b(thrashing)g(the)f(instruction)h(cac)n(he)h(or)f
(incurring)g(to)r(o)g(m)n(uc)n(h)2040 3700 y(register)27
b(pressure\).)2115 3787 y(After)k(studying)g(sev)n(eral)h(compiler)h
(optimizations,)i(w)n(e)d(found)2040 3874 y(that)g(man)n(y)f
(heuristics)i(ha)n(v)n(e)e(a)i(fo)r(cal)h(p)r(oin)n(t.)53
b(A)32 b(single)h Fx(priority)2040 3961 y FB(or)k Fx(c)l(ost)44
b FB(function)37 b(often)f(dictates)h(the)f(e\016cacy)g(of)h(a)g
(heuristic.)2040 4049 y(A)c(priorit)n(y)h(function|)f(a)h(function)g
(of)h(the)e(factors)i(that)e(a\013ect)2040 4136 y(a)c(giv)n(en)f
(problem|)g(measures)h(the)e(relativ)n(e)i(imp)r(ortance)g(of)g(the)
2040 4223 y(di\013eren)n(t)c(options)h(a)n(v)l(ailable)h(to)f(a)g
(compiler)h(algorithm.)2115 4310 y(T)-6 b(ak)n(e)29 b(register)h(allo)r
(cation)h(for)f(example.)45 b(When)28 b(a)h(graph)g(col-)2040
4397 y(oring)23 b(register)h(allo)r(cator)h(cannot)d(successfully)i
(color)g(an)e(in)n(terfer-)2040 4485 y(ence)33 b(graph,)j(it)d(spills)h
(a)g(v)l(ariable)g(to)f(memory)g(and)g(remo)n(v)n(es)g(it)2040
4572 y(from)g(the)e(graph.)53 b(The)32 b(allo)r(cator)i(then)d
(attempts)h(to)g(color)h(the)2040 4659 y(reduced)25 b(graph.)35
b(When)25 b(a)h(graph)g(is)g(not)g(colorable,)i(c)n(ho)r(osing)f(an)
2040 4746 y(appropriate)e(v)l(ariable)f(to)h(spill)f(is)h(crucial.)35
b(F)-6 b(or)24 b(man)n(y)g(allo)r(cators,)2040 4833 y(this)38
b(decision)h(is)f(b)r(esto)n(w)n(ed)h(up)r(on)e(a)h(single)h(priorit)n
(y)f(function.)2040 4920 y(Based)24 b(on)f(relev)l(an)n(t)g(data)g(\()p
Fx(e.g.)p FB(,)h(n)n(um)n(b)r(er)e(of)h(references,)j(depth)c(in)2040
5008 y(lo)r(op)f(nest,)h(etc.\),)g(the)e(function)h(assigns)h(w)n(eigh)
n(ts)f(to)g(all)g(uncolored)2040 5095 y(v)l(ariables)27
b(and)e(thereb)n(y)f(determines)i(whic)n(h)g(v)l(ariable)g(to)g(spill.)
2115 5182 y(Fine-tuning)i(priorit)n(y)h(functions)g(to)g(ac)n(hiev)n(e)
g(suitable)g(p)r(erfor-)2040 5269 y(mance)18 b(is)h(a)f(tedious)h(pro)r
(cess.)33 b(Curren)n(tly)-6 b(,)19 b(compiler)g(writers)g(man-)2040
5356 y(ually)33 b(exp)r(erimen)n(t)e(with)i(di\013eren)n(t)f(priorit)n
(y)g(functions.)55 b(F)-6 b(or)32 b(in-)p eop
%%Page: 2 2
2 1 bop -152 -69 a FB(stance,)40 b(Bernstein)d(et)g(al.)g(man)n(ually)g
(iden)n(ti\014ed)e(three)i(priorit)n(y)-152 19 y(functions)d(for)g(c)n
(ho)r(osing)g(spill)g(v)l(ariables)g([3].)57 b(By)33
b(applying)g(the)-152 106 y(three)25 b(functions)h(to)g(a)f(suite)h(of)
g(b)r(enc)n(hmarks,)f(they)f(found)h(that)g(a)-152 193
y(register)30 b(allo)r(cator's)i(e\013ectiv)n(eness)d(is)g(highly)f
(dep)r(enden)n(t)g(on)g(the)-152 280 y(priorit)n(y)e(function)g(the)f
(compiler)i(uses.)-77 367 y(The)e(imp)r(ortance)g(of)g(priorit)n(y)g
(functions)g(is)g(a)g(k)n(ey)e(insigh)n(t)i(that)-152
454 y(motiv)l(ates)18 b(Meta)g(Optimization,)i(a)d(metho)r(d)g(b)n(y)f
(whic)n(h)h(a)h(mac)n(hine-)-152 542 y(learning)25 b(algorithm)g
(automatically)g(searc)n(hes)g(the)e(priorit)n(y)g(func-)-152
629 y(tion)28 b(solution)g(space.)39 b(More)29 b(sp)r(eci\014cally)-6
b(,)28 b(w)n(e)g(use)f(a)g(learning)i(al-)-152 716 y(gorithm)e(that)g
(iterativ)n(ely)g(searc)n(hes)g(for)h(priorit)n(y)e(functions)h(that)
-152 803 y(impro)n(v)n(e)f(the)f(execution)h(time)g(of)g(compiled)g
(applications.)-77 890 y(Our)34 b(system)g(can)h(b)r(e)f(used)g(to)h
(cater)g(a)g(priorit)n(y)f(function)h(to)-152 977 y(a)29
b(sp)r(eci\014c)g(input)f(program.)44 b(This)29 b(mo)r(de)g(of)g(op)r
(eration)h(is)f(essen-)-152 1065 y(tially)i(an)f(adv)l(anced)g(form)h
(of)g(feedbac)n(k)f(directed)g(optimization.)-152 1152
y(More)f(imp)r(ortan)n(tly)-6 b(,)28 b(it)f(can)h(b)r(e)g(used)f(to)h
(\014nd)e(a)i(general-purp)r(ose)-152 1239 y(function)i(that)f(w)n
(orks)h(w)n(ell)g(for)g(a)g(broad)f(range)h(of)g(applications.)-152
1326 y(In)d(this)g(mo)r(de)h(of)g(op)r(eration,)h(Meta)f(Optimization)g
(can)g(p)r(erform)-152 1413 y(the)i(tedious)g(w)n(ork)f(that)h(is)g
(curren)n(tly)f(p)r(erformed)h(b)n(y)f(engineers.)-152
1500 y(F)-6 b(or)25 b(eac)n(h)f(of)h(the)f(three)g(case)i(studies)e(w)n
(e)h(describ)r(e)g(in)f(this)g(pap)r(er,)-152 1588 y(w)n(e)29
b(w)n(ere)g(able)g(to)f(at)h(least)g(matc)n(h)f(the)g(p)r(erformance)i
(of)f(h)n(uman-)-152 1675 y(generated)21 b(priorit)n(y)f(functions.)33
b(In)19 b(some)i(cases)h(w)n(e)e(ac)n(hiev)n(ed)g(con-)-152
1762 y(siderable)27 b(sp)r(eedups.)-77 1849 y(While)c(man)n(y)f
(researc)n(hers)h(ha)n(v)n(e)f(used)g(mac)n(hine-learning)i(tec)n(h-)
-152 1936 y(niques)j(and)h(exhaustiv)n(e)e(searc)n(h)i(algorithms)i(to)
d(impro)n(v)n(e)h(an)f(ap-)-152 2023 y(plication,)21
b(none)d(ha)n(v)n(e)g(used)g(learning)h(to)f(searc)n(h)h(for)g(priorit)
n(y)f(func-)-152 2111 y(tions.)58 b(Because)35 b(Meta)f(Optimization)g
(impro)n(v)n(es)f(the)g(e\013ectiv)n(e-)-152 2198 y(ness)23
b(of)g(the)g(compiler)g(itself,)i(in)d(theory)-6 b(,)23
b(w)n(e)g(need)f(only)g(apply)g(the)-152 2285 y(pro)r(cess)27
b(once)f(\(rather)g(than)f(on)g(a)h(p)r(er-application)h(basis\).)-77
2372 y(The)g(remainder)g(of)h(this)f(pap)r(er)f(is)i(organized)g(as)f
(follo)n(ws.)41 b(The)-152 2459 y(next)d(section)i(in)n(tro)r(duces)f
(priorit)n(y)f(functions.)74 b(Section)39 b(3)g(de-)-152
2547 y(scrib)r(es)28 b(genetic)g(programming,)h(a)e(mac)n
(hine-learning)h(tec)n(hnique)-152 2634 y(that)h(is)h(w)n(ell)g(suited)
f(to)g(our)h(problem.)45 b(Section)29 b(4)h(discusses)g(our)-152
2721 y(metho)r(dology)-6 b(.)33 b(W)-6 b(e)20 b(apply)f(our)g(tec)n
(hnique)g(to)h(three)f(separate)i(case)-152 2808 y(studies)h(in)f
(Section)g(5,)i(Section)f(6,)h(and)d(Section)i(7.)33
b(Results)22 b(of)g(our)-152 2895 y(exp)r(erimen)n(ts)34
b(are)g(included)f(in)g(the)g(case)i(study)d(sections.)59
b(Sec-)-152 2982 y(tion)18 b(8)g(discusses)g(related)g(w)n(ork,)i(and)d
(\014nally)g(Section)g(9)h(concludes.)-152 3223 y FC(2.)100
b(PRIORITY)24 b(FUNCTIONS)-77 3331 y FB(This)31 b(section)g(is)f(in)n
(tended)g(to)g(giv)n(e)g(the)g(reader)h(a)f(feel)h(for)g(the)-152
3418 y(utilit)n(y)g(and)f(ubiquit)n(y)f(of)i(priorit)n(y)g(functions.)
50 b(Put)30 b(simply)-6 b(,)32 b(pri-)-152 3505 y(orit)n(y)24
b(functions)h(prioritize)g(the)f(options)h(a)n(v)l(ailable)g(to)f(a)h
(compiler)-152 3592 y(algorithm.)-77 3679 y(F)-6 b(or)22
b(example,)h(in)f(list)g(sc)n(heduling,)h(a)f(priorit)n(y)g(function)g
(assigns)-152 3767 y(a)31 b(w)n(eigh)n(t)f(to)g(eac)n(h)g(instruction)h
(in)f(the)f(sc)n(heduler's)i(dep)r(endence)-152 3854
y(graph,)24 b(dictating)e(the)g(order)g(in)g(whic)n(h)h(to)f(sc)n
(hedule)g(instructions.)-152 3941 y(A)38 b(common)g(and)g(e\013ectiv)n
(e)g(heuristic)g(assigns)i(priorities)f(using)-152 4028
y(latency-w)n(eigh)n(ted)21 b(depths)e([10].)34 b(Essen)n(tially)-6
b(,)22 b(this)f(is)f(the)g(instruc-)-152 4115 y(tion's)32
b(depth)e(in)g(the)h(dep)r(endence)f(graph,)i(taking)f(in)n(to)g
(accoun)n(t)-152 4202 y(the)26 b(latency)f(of)i(instructions)f(on)g
(all)g(paths)g(to)g(the)f(ro)r(ot)h(no)r(des:)-152 4456
y Fw(P)11 b FB(\()p Fw(i)p FB(\))21 b(=)96 4351 y Fv(\032)792
4409 y Fu(l)q(atency)r Ft(\()p Fu(i)p Ft(\))72 b(:)e(if)22
b Fu(i)i Ft(is)f(indep)r(enden)n(t.)321 4453 y Fs(max)201
4510 y Fr(i)d(dep)q(ends)h(on)f(j)564 4484 y Fu(l)q(atency)r
Ft(\()p Fu(i)p Ft(\))d(+)e Fu(P)10 b Ft(\()p Fu(j)t Ft(\))71
b(:)f(otherwise.)-152 4680 y FB(The)23 b(list)f(sc)n(heduler)g(pro)r
(ceeds)h(b)n(y)e(sc)n(heduling)h Fx(r)l(e)l(ady)30 b
FB(instructions)-152 4767 y(in)36 b(priorit)n(y)h(order.)66
b(In)36 b(other)g(w)n(ords,)k(if)d(t)n(w)n(o)g(instructions)f(are)-152
4855 y(ready)26 b(to)h(b)r(e)f(sc)n(heduled,)g(the)g(algorithm)h(will)h
(fa)n(v)n(or)e(the)g(instruc-)-152 4942 y(tion)41 b(with)g(the)g
(higher)f(priorit)n(y)-6 b(.)80 b(The)41 b(sc)n(heduling)f(algorithm)
-152 5029 y(hinges)24 b(up)r(on)e(the)g(priorit)n(y)h(function.)34
b(Apart)22 b(from)i(enforcing)g(the)-152 5116 y(legalit)n(y)29
b(of)g(the)f(sc)n(hedule,)h(the)e(sc)n(heduler)h(en)n(tirely)g(relies)h
(on)f(the)-152 5203 y(priorit)n(y)e(function)g(to)g(mak)n(e)f(all)i(of)
f(its)g(decisions.)-77 5290 y(This)c(description)g(of)g(list)g(sc)n
(heduling)g(is)f(a)h(simpli\014cation.)35 b(Pro-)-152
5378 y(duction)c(compilers)g(use)g(sophisticated)h(priorit)n(y)e
(functions)h(that)2040 -69 y(accoun)n(t)18 b(for)h(man)n(y)e(comp)r
(eting)i(factors)g(\()p Fx(e.g.)p FB(,)h(ho)n(w)e(a)g(giv)n(en)g(sc)n
(hed-)2040 19 y(ule)26 b(ma)n(y)f(a\013ect)h(register)h(allo)r
(cation\).)2115 106 y(The)38 b(remainder)f(of)i(the)e(section)h(lists)h
(a)e(few)i(other)f(priorit)n(y)2040 193 y(functions)25
b(that)f(are)h(amenable)g(to)g(the)f(tec)n(hniques)g(w)n(e)h(discuss)g
(in)2040 280 y(this)31 b(pap)r(er.)51 b(W)-6 b(e)31 b(will)i(explore)e
(three)g(of)h(the)f(follo)n(wing)j(priorit)n(y)2040 367
y(functions)26 b(in)g(detail)g(later)h(in)e(the)g(pap)r(er.)2151
515 y FD(\017)38 b FA(Clustered)f(sc)n(heduling)p FB(:)3119
497 y(\177)3109 515 y(Ozer)32 b(et)g(al.)i(describ)r(e)f(an)f(ap-)2227
603 y(proac)n(h)h(to)f(sc)n(heduling)h(for)g(arc)n(hitectures)g(with)g
(clustered)2227 690 y(register)23 b(\014les)f([20].)35
b(They)21 b(note)h(that)f(the)h(c)n(hoice)g(of)h(priorit)n(y)2227
777 y(function)30 b(has)g(a)g(\\strong)h(e\013ect)f(on)g(the)f(sc)n
(hedule.")48 b(They)2227 864 y(also)27 b(in)n(v)n(estigate)f(\014v)n(e)
f(di\013eren)n(t)g(priorit)n(y)h(functions)g([20].)2151
1005 y FD(\017)38 b FA(Hyp)r(erblo)r(c)n(k)32 b(formation)p
FB(:)38 b(Later)28 b(in)g(this)f(pap)r(er)h(w)n(e)g(use)2227
1092 y(the)17 b(formation)h(of)g(predicated)f(h)n(yp)r(erblo)r(c)n(ks)g
(as)h(a)f(case)h(study)-6 b(.)2151 1233 y FD(\017)38
b FA(Meld)30 b(sc)n(heduling)p FB(:)36 b(Abraham)26 b(et)h(al.)h(rely)f
(on)f(a)i(priorit)n(y)2227 1320 y(function)c(to)g(sc)n(hedule)f(across)
j(region)e(b)r(oundaries)g([1].)35 b(The)2227 1407 y(priorit)n(y)22
b(function)g(is)g(used)g(to)g(sort)g(regions)h(b)n(y)e(the)h(order)g
(in)2227 1494 y(whic)n(h)k(they)e(should)i(b)r(e)g(visited.)2151
1635 y FD(\017)38 b FA(Mo)r(dulo)30 b(sc)n(heduling)p
FB(:)k(In)25 b([22],)j(Rau)d(states)i(that)e(\\there)2227
1722 y(is)35 b(a)f(limitless)j(n)n(um)n(b)r(er)c(of)i(priorit)n(y)f
(functions")h(that)f(can)2227 1810 y(b)r(e)29 b(devised)h(for)g(mo)r
(dulo)h(sc)n(heduling.)46 b(Rau)29 b(describ)r(es)i(the)2227
1897 y(tradeo\013s)c(in)n(v)n(olv)n(ed)f(when)h(considering)g(sc)n
(heduling)g(priori-)2227 1984 y(ties.)2151 2125 y FD(\017)38
b FA(Data)22 b(Prefetc)n(hing)p FB(:)32 b(Later)20 b(in)f(this)h(pap)r
(er)f(w)n(e)h(in)n(v)n(estigate)2227 2212 y(a)28 b(priorit)n(y)f
(function)h(that)f(determines)h(whether)f(or)h(not)f(to)2227
2299 y(prefetc)n(h)f(an)f(address.)2151 2440 y FD(\017)38
b FA(Register)33 b(allo)r(cation)p FB(:)42 b(Man)n(y)29
b(register)i(allo)r(cation)h(algo-)2227 2527 y(rithms)22
b(use)g(cost)h(functions)f(to)h(determine)f(whic)n(h)g(v)l(ariables)
2227 2614 y(to)d(spill)g(if)g(spilling)h(is)f(required.)32
b(W)-6 b(e)18 b(use)h(register)g(allo)r(cation)2227 2701
y(as)26 b(a)g(case)h(study)d(later)j(in)e(the)h(pap)r(er.)2115
2850 y(This)k(is)h(not)e(an)h(exhaustiv)n(e)f(list)h(of)h
(applications.)48 b(Man)n(y)30 b(im-)2040 2937 y(p)r(ortan)n(t)22
b(compiler)i(optimizations)g(emplo)n(y)e(cost)h(functions)g(of)g(the)
2040 3024 y(sort)29 b(men)n(tioned)f(ab)r(o)n(v)n(e.)42
b(The)29 b(next)e(section)i(in)n(tro)r(duces)g(genetic)2040
3111 y(programming,)j(whic)n(h)e(w)n(e)g(use)g(to)g(automatically)h
(\014nd)e(e\013ectiv)n(e)2040 3198 y(priorit)n(y)d(functions.)2040
3391 y FC(3.)99 b(GENETIC)26 b(PR)m(OGRAMMING)2115 3499
y FB(Of)37 b(the)g(man)n(y)f(a)n(v)l(ailable)j(mac)n(hine-learning)f
(tec)n(hniques,)h(w)n(e)2040 3587 y(c)n(hose)28 b(to)g(emplo)n(y)f
(genetic)h(programming)g(\(GP\))g(b)r(ecause)g(its)g(at-)2040
3674 y(tributes)d(b)r(est)g(\014t)f(the)h(needs)g(of)g(our)g
(application.)36 b(The)25 b(follo)n(wing)2040 3761 y(list)i(highligh)n
(ts)f(the)f(suitabilit)n(y)h(of)h(GP)f(to)g(our)f(problem:)2151
3909 y FD(\017)38 b FB(GP)g(is)h(esp)r(ecially)g(appropriate)g(when)f
(the)f(relationships)2227 3996 y(among)c(relev)l(an)n(t)e(v)l(ariables)
i(are)f(p)r(o)r(orly)h(understo)r(o)r(d)f([13].)2227
4083 y(Suc)n(h)26 b(is)h(the)f(case)i(with)f(compiler)h(heuristics,)g
(whic)n(h)f(often)2227 4171 y(feature)h(uncertain)g(tradeo\013s.)42
b(T)-6 b(o)r(da)n(y's)28 b(complex)g(systems)2227 4258
y(also)f(in)n(tro)r(duce)e(uncertain)n(t)n(y)-6 b(.)2151
4399 y FD(\017)38 b FB(GP)f(is)g(capable)g(of)h(searc)n(hing)f
(high-dimensional)g(spaces.)2227 4486 y(Man)n(y)25 b(other)h(learning)h
(algorithms)g(are)f(not)g(as)g(scalable.)2151 4627 y
FD(\017)38 b FB(GP)27 b(is)h(a)f(distributed)g(algorithm.)40
b(With)26 b(the)h(cost)h(of)g(com-)2227 4714 y(puting)20
b(p)r(o)n(w)n(er)h(at)f(an)h(all-time)g(lo)n(w,)i(it)d(is)h(no)n(w)g
(economically)2227 4801 y(feasible)28 b(to)e(dedicate)g(a)h(cluster)f
(of)h(mac)n(hines)f(to)h(searc)n(hing)2227 4888 y(a)f(solution)g
(space.)2151 5029 y FD(\017)38 b FB(GP)30 b(solutions)h(are)g(h)n(uman)
e(readable.)48 b(The)30 b(`genomes')i(on)2227 5116 y(whic)n(h)k(GP)g
(op)r(erates)h(are)g(parse)f(trees)h(whic)n(h)f(can)g(easily)2227
5203 y(b)r(e)23 b(con)n(v)n(erted)g(to)h(free-form)h(arithmetic)f
(equations.)34 b(Other)2227 5290 y(mac)n(hine-learning)c(represen)n
(tations,)i(suc)n(h)e(as)g(neural)g(net-)2227 5378 y(w)n(orks,)c(are)h
(not)e(as)h(comprehensible.)p eop
%%Page: 3 3
3 2 bop -152 977 a @beginspecial 53 @llx 328 @lly 559
@urx 464 @ury 5040 @rwi @clip @setspecial
%%BeginDocument: figs/genomes.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.10 (Thu Nov 21 16:49:49 EST 2002)
%%For: (mstephen) Mark Stephenson
%%Title: G
%%Pages: (atend)
%%BoundingBox: 53 328 559 464
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 54 329 559 464
%%PageOrientation: Portrait
gsave
53 328 506 136 boxprim clip newpath
54 329 translate
0 0 1 beginpage
0.5175 set_scale
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
% cluster0
gsave 10 dict begin
newpath 8 8 moveto
182 8 lineto
182 252 lineto
8 252 lineto
closepath
stroke
gsave 10 dict begin
23 237 moveto 17 -0.5 (\(a\)) alignedtext
end grestore
end grestore
% cluster1
gsave 10 dict begin
newpath 190 8 moveto
564 8 lineto
564 252 lineto
190 252 lineto
closepath
stroke
gsave 10 dict begin
206 237 moveto 18 -0.5 (\(b\)) alignedtext
end grestore
end grestore
% cluster2
gsave 10 dict begin
newpath 572 8 moveto
744 8 lineto
744 252 lineto
572 252 lineto
closepath
stroke
gsave 10 dict begin
587 237 moveto 16 -0.5 (\(c\)) alignedtext
end grestore
end grestore
% cluster3
gsave 10 dict begin
newpath 752 8 moveto
966 8 lineto
966 252 lineto
752 252 lineto
closepath
stroke
gsave 10 dict begin
768 237 moveto 18 -0.5 (\(d\)) alignedtext
end grestore
end grestore

%	a
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
63 120 46 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
63 115 moveto 71 -0.5 (exec_ratio) alignedtext
end grestore
end grestore

%	b
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
59 34 43 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
59 29 moveto 65 -0.5 (num_ops) alignedtext
end grestore
end grestore

%	four
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
147 34 27 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
147 29 moveto 18 -0.5 (4.0) alignedtext
end grestore
end grestore

%	plus
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
104 206 18 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
104 201 moveto 9 -0.5 (+) alignedtext
end grestore
end grestore

%	plus -> a
newpath 96 189 moveto
90 177 82 160 76 146 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 79 146 moveto
72 138 lineto
74 148 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
145 120 18 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
145 115 moveto 6 -0.5 (*) alignedtext
end grestore
end grestore

%	plus -> mul
newpath 112 189 moveto
118 177 126 159 133 144 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 135 146 moveto
137 136 lineto
130 144 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul -> b
newpath 132 107 moveto
119 94 98 73 82 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 85 56 moveto
76 51 lineto
81 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul -> four
newpath 145 102 moveto
146 90 146 75 147 62 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 150 62 moveto
147 52 lineto
145 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	c
gsave 10 dict begin
240 34 42 18 ellipse_path
stroke
gsave 10 dict begin
240 29 moveto 62 -0.5 (total_ops) alignedtext
end grestore
end grestore

%	two
gsave 10 dict begin
327 34 27 18 ellipse_path
stroke
gsave 10 dict begin
327 29 moveto 17 -0.5 (2.3) alignedtext
end grestore
end grestore

%	d
gsave 10 dict begin
428 34 56 18 ellipse_path
stroke
gsave 10 dict begin
428 29 moveto 90 -0.5 (predictability) alignedtext
end grestore
end grestore

%	tmpf
gsave 10 dict begin
529 34 27 18 ellipse_path
stroke
gsave 10 dict begin
529 29 moveto 15 -0.5 (4.1) alignedtext
end grestore
end grestore

%	sub
gsave 10 dict begin
377 206 18 18 ellipse_path
stroke
gsave 10 dict begin
377 201 moveto 4 -0.5 (-) alignedtext
end grestore
end grestore

%	mul1
gsave 10 dict begin
327 120 18 18 ellipse_path
stroke
gsave 10 dict begin
327 115 moveto 6 -0.5 (*) alignedtext
end grestore
end grestore

%	sub -> mul1
newpath 368 190 moveto
360 177 349 158 341 144 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 343 143 moveto
336 136 lineto
339 146 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul2
gsave 10 dict begin
428 120 18 18 ellipse_path
stroke
gsave 10 dict begin
428 115 moveto 5 -0.5 (/) alignedtext
end grestore
end grestore

%	sub -> mul2
newpath 386 190 moveto
394 177 405 158 414 144 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 416 146 moveto
419 136 lineto
412 143 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul1 -> c
newpath 314 107 moveto
301 94 280 73 264 57 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 266 56 moveto
257 51 lineto
263 59 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul1 -> two
newpath 327 102 moveto
327 90 327 75 327 62 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 330 62 moveto
327 52 lineto
325 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul2 -> d
newpath 428 102 moveto
428 90 428 75 428 62 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 431 62 moveto
428 52 lineto
426 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mul2 -> tmpf
newpath 442 108 moveto
458 94 485 71 505 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 506 56 moveto
512 48 lineto
503 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	minus
gsave 10 dict begin
649 206 18 18 ellipse_path
stroke
gsave 10 dict begin
649 201 moveto 4 -0.5 (-) alignedtext
end grestore
end grestore

%	mul9
gsave 10 dict begin
608 120 18 18 ellipse_path
stroke
gsave 10 dict begin
608 115 moveto 6 -0.5 (*) alignedtext
end grestore
end grestore

%	minus -> mul9
newpath 641 189 moveto
635 177 627 159 620 144 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 623 144 moveto
616 136 lineto
618 146 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	tmpa
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
690 120 46 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
690 115 moveto 71 -0.5 (exec_ratio) alignedtext
end grestore
end grestore

%	minus -> tmpa
newpath 657 189 moveto
663 177 671 160 677 146 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 679 148 moveto
681 138 lineto
674 146 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	tmpc
gsave 10 dict begin
622 34 42 18 ellipse_path
stroke
gsave 10 dict begin
622 29 moveto 62 -0.5 (total_ops) alignedtext
end grestore
end grestore

%	mul9 -> tmpc
newpath 611 102 moveto
613 90 615 75 618 61 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 620 62 moveto
619 52 lineto
615 62 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	tmpt
gsave 10 dict begin
709 34 27 18 ellipse_path
stroke
gsave 10 dict begin
709 29 moveto 17 -0.5 (2.3) alignedtext
end grestore
end grestore

%	mul9 -> tmpt
newpath 622 108 moveto
638 94 665 71 685 54 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 686 56 moveto
692 48 lineto
683 53 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	tmpp
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
868 206 18 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
868 201 moveto 9 -0.5 (+) alignedtext
end grestore
end grestore

%	tmpl
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
827 120 46 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
827 115 moveto 71 -0.5 (exec_ratio) alignedtext
end grestore
end grestore

%	tmpp -> tmpl
newpath 860 189 moveto
854 177 846 160 840 146 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 843 146 moveto
836 138 lineto
838 148 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	times
gsave 10 dict begin
filled
0.000 0.000 0.498 nodecolor
0.000 0.000 0.498 nodecolor
909 120 18 18 ellipse_path
fill
0.000 0.000 0.498 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
909 115 moveto 9 -0.5 (+) alignedtext
end grestore
end grestore

%	tmpp -> times
newpath 876 189 moveto
882 177 890 159 897 144 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 899 146 moveto
901 136 lineto
894 144 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	e
gsave 10 dict begin
filled
0.000 0.000 0.498 nodecolor
0.000 0.000 0.498 nodecolor
823 34 63 18 ellipse_path
fill
0.000 0.000 0.498 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
823 29 moveto 104 -0.5 (num_branches) alignedtext
end grestore
end grestore

%	times -> e
newpath 896 107 moveto
883 94 863 74 847 58 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 849 56 moveto
840 51 lineto
845 60 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	one
gsave 10 dict begin
filled
0.000 0.000 0.498 nodecolor
0.000 0.000 0.498 nodecolor
931 34 27 18 ellipse_path
fill
0.000 0.000 0.498 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
931 29 moveto 15 -0.5 (1.2) alignedtext
end grestore
end grestore

%	times -> one
newpath 914 102 moveto
917 90 921 75 924 61 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 926 62 moveto
926 52 lineto
921 61 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 170 x FA(Figure)30 b(1:)39 b Fq(GP)28 b(Genomes.)37
b(P)n(art)26 b(\(a\))h(and)g(\(b\))g(sho)n(w)g(examples)g(of)g(GP)h
(genomes.)36 b(P)n(art)27 b(\(c\))g(pro)n(vides)f(an)i(example)f(of)g
(a)g(random)-152 1235 y(crosso)n(v)n(er)f(of)h(the)g(genomes)g(in)g
(\(a\))f(and)h(\(b\).)35 b(P)n(art)26 b(\(d\))h(sho)n(ws)g(a)f(m)n
(utation)g(of)g(the)h(genome)h(in)e(part)h(\(a\).)-25
2901 y @beginspecial 35 @llx 35 @lly 499 @urx 435 @ury
2088 @rwi @clip @setspecial
%%BeginDocument: figs/gpflow.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.10 (Thu Nov 21 16:49:49 EST 2002)
%%For: (mstephen) Mark Stephenson
%%Title: gpflow
%%Pages: (atend)
%%BoundingBox: 35 35 499 435
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 36 36 499 435
%%PageOrientation: Portrait
gsave
35 35 464 400 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	eval
gsave 10 dict begin
337 282 125 18 ellipse_path
stroke
gsave 10 dict begin
337 277 moveto 229 -0.5 (Compile and run each expression) alignedtext
end grestore
end grestore

%	sat
gsave 10 dict begin
269 208 63 18 ellipse_path
stroke
gsave 10 dict begin
269 203 moveto 104 -0.5 (gens < LIMIT?) alignedtext
end grestore
end grestore

%	eval -> sat
newpath 321 264 moveto
312 254 301 243 291 232 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 293 231 moveto
285 225 lineto
290 234 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	sel
gsave 10 dict begin
127 116 127 18 ellipse_path
stroke
gsave 10 dict begin
127 111 moveto 232 -0.5 (Probabilistically select expressions) alignedtext
end grestore
end grestore

%	mutate
gsave 10 dict begin
292 34 97 25 ellipse_path
stroke
gsave 10 dict begin
292 37 moveto 165 -0.5 (Crossover and mutation) alignedtext
292 21 moveto 104 -0.5 (gens = gens + 1) alignedtext
end grestore
end grestore

%	sel -> mutate
newpath 162 99 moveto
184 88 213 74 238 61 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 239 63 moveto
247 57 lineto
237 59 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	mutate -> eval
newpath 341 256 moveto
347 219 353 152 335 98 curveto
330 84 322 70 314 59 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 339 254 moveto
340 264 lineto
344 254 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore

%	sat -> sel
newpath 243 191 moveto
220 176 187 154 161 139 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 164 138 moveto
154 134 lineto
161 142 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
gsave 10 dict begin
234 157 moveto 21 -0.5 (No) alignedtext
end grestore

%	end
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
299 116 27 18 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
299 111 moveto 28 -0.5 (End) alignedtext
end grestore
end grestore

%	sat -> end
newpath 275 190 moveto
279 177 285 158 290 143 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 292 144 moveto
293 134 lineto
287 143 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
gsave 10 dict begin
307 157 moveto 25 -0.5 (Yes) alignedtext
end grestore

%	init
gsave 10 dict begin
filled
0.000 0.000 0.000 nodecolor
337 364 97 25 ellipse_path
fill
0.000 0.000 0.000 nodecolor
gsave 10 dict begin
0.000 0.000 1.000 nodecolor
337 367 moveto 165 -0.5 (Create initial population) alignedtext
337 351 moveto 58 -0.5 (gens = 0) alignedtext
end grestore
end grestore

%	init -> eval
newpath 337 338 moveto
337 329 337 319 337 309 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 340 310 moveto
337 300 lineto
335 310 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial -152 3071 a FA(Figure)35 b(2:)50 b Fq(Flo)n(w)31
b(of)h(genetic)g(programming.)48 b(Genetic)32 b(pro-)-152
3158 y(gramming)25 b(\(GP\))i(initially)e(creates)i(a)g(p)r(opulation)f
(of)g(expres-)-152 3245 y(sions.)45 b(Eac)n(h)30 b(expression)g(is)f
(then)i(assigned)f(a)f(\014tness,)i(whic)n(h)-152 3332
y(is)38 b(a)f(measure)h(of)g(ho)n(w)f(w)n(ell)g(it)g(satis\014es)h(the)
g(end)g(goal.)67 b(In)-152 3419 y(our)26 b(case,)g(\014tness)g(is)g
(prop)r(ortional)d(to)i(the)h(execution)g(time)f(of)-152
3507 y(the)d(compiled)e(application\(s\).)32 b(Un)n(til)20
b(some)h(user-de\014ned)i(cap)-152 3594 y(on)30 b(the)g(n)n(um)n(b)r
(er)h(of)e(generations)g(is)h(reac)n(hed,)g(the)g(algorithm)-152
3681 y(probabilistically)35 b(c)n(ho)r(oses)k(the)g(b)r(est)g
(expressions)g(for)f(mat-)-152 3768 y(ing)e(and)h(con)n(tin)n(ues.)63
b(T)-7 b(o)36 b(guard)f(against)g(stagnation,)h(some)-152
3855 y(expressions)28 b(undergo)e(m)n(utation.)-77 4157
y FB(Lik)n(e)40 b(other)f(ev)n(olutionary)h(algorithms,)46
b(GP)40 b(is)g(lo)r(osely)h(pat-)-152 4244 y(terned)c(on)g(Darwinian)g
(ev)n(olution.)69 b(GP)37 b(main)n(tains)h(a)f(p)r(opula-)-152
4332 y(tion)32 b(of)g(parse)h(trees)f([13].)53 b(In)31
b(our)h(case,)i(eac)n(h)e(parse)g(tree)g(is)g(an)-152
4419 y(expression)20 b(that)f(represen)n(ts)h(a)g(priorit)n(y)f
(function.)33 b(As)19 b(with)h(natu-)-152 4506 y(ral)j(selection,)h
(expressions)f(are)g(c)n(hosen)f(for)h(repro)r(duction)f(\(called)-152
4593 y(crosso)n(v)n(er\))37 b(according)g(to)f(their)g(lev)n(el)g(of)g
(\014tness.)65 b(Expressions)-152 4680 y(that)23 b(b)r(est)g(solv)n(e)g
(the)g(problem)g(are)g(most)h(lik)n(ely)f(to)g(ha)n(v)n(e)f(progen)n(y)
-6 b(.)-152 4767 y(The)31 b(algorithm)h(also)f(randomly)g(m)n(utates)f
(some)h(expressions)h(to)-152 4855 y(inno)n(v)l(ate)26
b(a)g(p)r(ossibly)g(stagnan)n(t)g(p)r(opulation.)-77
4942 y(Figure)21 b(2)f(sho)n(ws)h(the)e(general)i(\015o)n(w)f(of)h
(genetic)g(programming)g(in)-152 5029 y(the)29 b(con)n(text)f(of)i(our)
e(system.)44 b(The)29 b(algorithm)i(b)r(egins)e(b)n(y)f(creat-)-152
5116 y(ing)e(a)g(p)r(opulation)g(of)h(initial)f(expressions.)36
b(The)26 b(baseline)g(heuris-)-152 5203 y(tic)33 b(o)n(v)n(er)e(whic)n
(h)h(w)n(e)h(try)e(to)h(impro)n(v)n(e)g(is)h(included)e(in)h(the)g
(initial)-152 5290 y(p)r(opulation;)25 b(the)e(remainder)h(of)g(the)f
(initial)i(expressions)f(are)g(ran-)-152 5378 y(domly)30
b(generated.)46 b(The)30 b(algorithm)h(then)e(determines)h(eac)n(h)g
(ex-)2040 1484 y(pression's)i(lev)n(el)f(of)h(\014tness.)49
b(In)30 b(our)h(case,)i(compilers)f(that)e(pro-)2040
1571 y(duce)20 b(the)h Fx(fastest)29 b FB(co)r(de)21
b(are)h(\014ttest.)32 b(Once)20 b(the)h(algorithm)h(reac)n(hes)2040
1658 y(a)28 b(user-de\014ned)e(limit)i(on)f(the)g(n)n(um)n(b)r(er)f(of)
j(generations,)g(the)e(pro-)2040 1745 y(cess)f(stops;)h(otherwise,)g
(the)e(algorithm)i(pro)r(ceeds)f(b)n(y)e(probabilis-)2040
1832 y(tically)c(c)n(ho)r(osing)g(the)f(b)r(est)g(expressions)g(for)h
(mating.)33 b(Some)19 b(of)h(the)2040 1920 y(o\013spring)26
b(undergo)g(m)n(utation,)g(and)f(the)g(algorithm)i(con)n(tin)n(ues.)
2115 2007 y(Unlik)n(e)40 b(other)h(ev)n(olutionary)g(algorithms,)46
b(whic)n(h)41 b(use)g(\014xed-)2040 2094 y(length)h(binary)f
Fx(genomes)p FB(,)48 b(GP's)42 b(expressions)h(are)f(v)l(ariable)h(in)
2040 2181 y(length)35 b(and)f(free-form.)63 b(Figure)36
b(1)f(pro)n(vides)g(sev)n(eral)g(examples)2040 2268 y(of)i(genetic)f
(programming)h(genomes)f(\(expressions\).)66 b(V)-6 b(ariable-)2040
2355 y(length)39 b(genomes)i(do)e(not)g(arti\014cially)h(constrain)g
(ev)n(olution)g(b)n(y)2040 2443 y(setting)29 b(a)f(maxim)n(um)g(genome)
h(size.)44 b(Ho)n(w)n(ev)n(er,)29 b(without)f(sp)r(ecial)2040
2530 y(consideration,)e(genomes)e(gro)n(w)g(exp)r(onen)n(tially)g
(during)f(crosso)n(v)n(er)2040 2617 y(and)i(m)n(utation.)2115
2704 y(Our)33 b(system)g(rew)n(ards)h Fx(p)l(arsimony)41
b FB(b)n(y)32 b(selecting)j(the)e(smaller)2040 2791 y(of)d(t)n(w)n(o)g
(otherwise)g(equally)f(\014t)g(expressions)h([13].)47
b(P)n(arsimonious)2040 2878 y(expressions)27 b(are)h(aligned)f(with)g
(our)f(philosoph)n(y)h(of)g(using)g(GP)g(as)2040 2966
y(a)e(to)r(ol)h(for)g(compiler)f(writers)h(and)f(arc)n(hitects)g(to)g
(iden)n(tify)f(imp)r(or-)2040 3053 y(tan)n(t)34 b(heuristic)g
Fx(fe)l(atur)l(es)42 b FB(and)34 b(the)f(relationships)j(among)f(them.)
2040 3140 y(Without)g(enforcing)i(parsimon)n(y)-6 b(,)38
b(expressions)e(quic)n(kly)e(b)r(ecome)2040 3227 y(unin)n(telligible.)
2115 3314 y(In)g(Figure)i(1,)i(part)d(\(c\))f(pro)n(vides)h(an)g
(example)g(of)h(crosso)n(v)n(er,)2040 3401 y(the)29 b(metho)r(d)g(b)n
(y)f(whic)n(h)h(t)n(w)n(o)g(expressions)h(repro)r(duce.)45
b(Here)29 b(the)2040 3489 y(t)n(w)n(o)d(expressions)g(in)f(\(a\))g(and)
g(\(b\))f(pro)r(duce)h(o\013spring.)35 b(Crosso)n(v)n(er)2040
3576 y(w)n(orks)26 b(b)n(y)f(selecting)i(a)f(random)g(no)r(de)g(in)f
(eac)n(h)h(paren)n(t,)g(and)f(then)2040 3663 y(sw)n(apping)35
b(the)e(subtrees)h(ro)r(oted)h(at)f(those)g(no)r(des)3583
3631 y Fs(1)3618 3663 y FB(.)59 b(In)33 b(theory)-6 b(,)2040
3750 y(crosso)n(v)n(er)18 b(w)n(orks)g(b)n(y)e(propagating)i(`go)r(o)r
(d')h(sub)r(expressions.)32 b(Go)r(o)r(d)2040 3837 y(sub)r(expressions)
26 b(increase)h(an)f(expression's)g(\014tness.)2115 3924
y(Because)d(GP)g(fa)n(v)n(ors)g(\014t)e(expressions,)j(expressions)f
(with)f(fa)n(v)n(or-)2040 4012 y(able)32 b(building)g(blo)r(c)n(ks)g
(are)g(more)h(lik)n(ely)e(selected)i(for)f(crosso)n(v)n(er,)2040
4099 y(further)d(disseminating)i(the)e(blo)r(c)n(ks.)45
b(Our)29 b(system)g(uses)h(tourna-)2040 4186 y(men)n(t)c(selection)i
(to)e(c)n(ho)r(ose)i(expressions)f(for)g(crosso)n(v)n(er.)38
b(T)-6 b(ourna-)2040 4273 y(men)n(t)32 b(selection)h(c)n(ho)r(oses)h
Fw(N)41 b FB(expressions)33 b(at)f(random)h(from)g(the)2040
4360 y(p)r(opulation)26 b(and)f(selects)h(the)f(one)g(with)g(the)g
(highest)h(\014tness)f([13].)2040 4448 y Fw(N)44 b FB(is)36
b(referred)h(to)f(as)g(the)f(tournamen)n(t)g(size.)66
b(Small)36 b(v)l(alues)g(of)2040 4535 y Fw(N)e FB(reduce)25
b(selection)i(pressure;)f(expressions)h(are)f(only)f(compared)2040
4622 y(against)i(the)e(other)h Fw(N)g FD(\000)16 b FB(1)26
b(expressions)h(in)e(the)h(tournamen)n(t.)2115 4709 y(Finally)-6
b(,)20 b(part)e(\(d\))f(sho)n(ws)i(a)f(m)n(utated)g(v)n(ersion)g(of)h
(the)e(expression)2040 4796 y(in)29 b(\(a\).)45 b(Here,)31
b(a)e(randomly)g(generated)h(expression)f(supplan)n(ts)g(a)2040
4883 y(randomly)d(c)n(hosen)g(no)r(de)f(in)h(the)f(expression.)36
b(F)-6 b(or)25 b(details)i(on)f(the)2040 4971 y(m)n(utation)g(op)r
(erators)h(w)n(e)f(implemen)n(ted,)g(see)g([2].)p 2040
5143 797 4 v 2044 5196 a Fs(1)2078 5228 y Fr(Selection)h(algorithms)f
(m)o(ust)e(use)h(caution)i(when)e(selecting)h(random)g(tree)h(no)q
(des.)42 b(If)2040 5278 y(w)o(e)24 b(consider)i(a)f(full)f(binary)h
(tree,)i(then)e(leaf)g(no)q(des)h(comprise)f(o)o(v)o(er)f(50\045)h(of)g
(the)g(tree.)2040 5328 y(Th)o(us,)f(a)g(naiv)o(e)g(selection)h
(algorithm)g(will)d(c)o(ho)q(ose)j(leaf)g(no)q(des)g(o)o(v)o(er)f(half)
g(of)g(the)h(time.)2040 5378 y(W)l(e)19 b(emplo)o(y)e(depth-fair)j
(crosso)o(v)o(er,)f(whic)o(h)f(equally)g(w)o(eighs)h(eac)o(h)g(lev)o
(el)f(of)g(the)i(tree)g([12].)p eop
%%Page: 4 4
4 3 bop -145 -148 1980 4 v -147 -82 4 67 v -100 -102
a Fp(Real-V)-5 b(alued)20 b(F)-5 b(unction)p 903 -82
V 420 w(Represen)n(tation)p 1833 -82 V -145 -79 1980
4 v -145 -64 V -147 3 4 67 v -100 -17 a Fo(Real)38 -9
y Fr(1)86 -17 y Fp(+)15 b Fo(Real)290 -9 y Fr(2)p 903
3 V 949 -17 a Fp(\(add)22 b Fo(Real)1242 -9 y Fr(1)1298
-17 y Fo(Real)1436 -9 y Fr(2)1469 -17 y Fp(\))p 1833
3 V -145 6 1980 4 v -147 72 4 67 v -100 53 a Fo(Real)38
61 y Fr(1)86 53 y Fn(\000)15 b Fo(Real)291 61 y Fr(2)p
903 72 V 949 53 a Fp(\(sub)22 b Fo(Real)1235 61 y Fr(1)1291
53 y Fo(Real)1429 61 y Fr(2)1462 53 y Fp(\))p 1833 72
V -145 76 1980 4 v -147 142 4 67 v -100 122 a Fo(Real)38
130 y Fr(1)86 122 y Fn(\001)15 b Fo(Real)259 130 y Fr(2)p
903 142 V 949 122 a Fp(\(m)n(ul)22 b Fo(Real)1244 130
y Fr(1)1300 122 y Fo(Real)1438 130 y Fr(2)1471 122 y
Fp(\))p 1833 142 V -145 146 1980 4 v -147 285 4 140 v
-100 148 a Fm(\032)-13 195 y Fo(Real)125 203 y Fr(1)158
195 y Fo(=Real)330 203 y Fr(2)430 195 y Fp(:)66 b(if)22
b Fo(Real)715 203 y Fr(2)767 195 y Fn(6)p Fp(=)d(0)331
262 y(0)66 b(:)g(if)22 b Fo(Real)715 270 y Fr(2)767 262
y Fp(=)d(0)p 903 285 V 949 230 a(\(div)j Fo(Real)1226
238 y Fr(1)1282 230 y Fo(Real)1420 238 y Fr(2)1453 230
y Fp(\))p 1833 285 V -145 288 1980 4 v -147 359 4 72
v -100 294 a Fn(p)p -46 294 172 3 v -46 339 a Fo(Real)92
347 y Fr(1)p 903 359 4 72 v 949 339 a Fp(\(sqrt)h Fo(Real)1249
347 y Fr(1)1282 339 y Fp(\))p 1833 359 V -145 363 1980
4 v -147 502 4 140 v -100 365 a Fm(\032)-13 412 y Fo(Real)125
420 y Fr(1)225 412 y Fp(:)66 b(if)o Fo(B)s(ool)489 420
y Fr(1)-13 479 y Fo(Real)125 487 y Fr(2)225 479 y Fp(:)g(if)21
b(not)p Fo(B)s(ool)607 487 y Fr(1)p 903 502 V 949 447
a Fp(\(tern)h Fo(B)s(ool)1256 455 y Fr(1)1310 447 y Fo(Real)1448
455 y Fr(1)1504 447 y Fo(Real)1642 455 y Fr(2)1675 447
y Fp(\))p 1833 502 V -145 505 1980 4 v -147 645 4 140
v -100 508 a Fm(\032)-13 555 y Fo(Real)125 563 y Fr(1)174
555 y Fn(\001)14 b Fo(Real)346 563 y Fr(2)446 555 y Fp(:)66
b(if)o Fo(B)s(ool)710 563 y Fr(1)208 622 y Fo(Real)346
630 y Fr(2)446 622 y Fp(:)g(if)22 b(not)o Fo(B)s(ool)828
630 y Fr(1)p 903 645 V 949 590 a Fp(\(cm)n(ul)f Fo(B)s(ool)1275
598 y Fr(1)1330 590 y Fo(Real)1468 598 y Fr(1)1523 590
y Fo(Real)1661 598 y Fr(2)1695 590 y Fp(\))p 1833 645
V -145 648 1980 4 v -147 715 4 67 v -100 695 a(Returns)g(real)h
(constan)n(t)g Fo(K)p 903 715 V 344 w Fp(\(rconst)g Fo(K)t
Fp(\))p 1833 715 V -145 718 1980 4 v -147 851 4 133 v
-100 764 a(Returns)15 b(real)g(v)l(alue)g(of)g Fo(ar)r(g)j
Fp(from)d(en-)-100 831 y(vironmen)n(t)p 903 851 V 949
764 a(\(rarg)23 b Fo(ar)r(g)r Fp(\))p 1833 851 V -145
854 1980 4 v -145 949 V -147 1015 4 67 v -100 995 a(Bo)r(olean-V)-5
b(alued)20 b(F)-5 b(unction)p 903 1015 V 317 w(Represen)n(tation)p
1833 1015 V -145 1019 1980 4 v -145 1034 V -147 1100
4 67 v -100 1080 a Fo(B)s(ool)40 1088 y Fr(1)94 1080
y Fp(and)22 b Fo(B)s(ool)363 1088 y Fr(2)p 903 1100 V
949 1080 a Fp(\(and)g Fo(B)s(ool)1244 1088 y Fr(1)1298
1080 y Fo(B)s(ool)1438 1088 y Fr(2)1470 1080 y Fp(\))p
1833 1100 V -145 1103 1980 4 v -147 1170 4 67 v -100
1150 a Fo(B)s(ool)40 1158 y Fr(1)94 1150 y Fp(or)g Fo(B)s(ool)315
1158 y Fr(2)p 903 1170 V 949 1150 a Fp(\(or)h Fo(B)s(ool)1197
1158 y Fr(1)1251 1150 y Fo(B)s(ool)1391 1158 y Fr(2)1423
1150 y Fp(\))p 1833 1170 V -145 1173 1980 4 v -147 1239
4 67 v -100 1219 a(not)f Fo(B)s(ool)158 1227 y Fr(1)p
903 1239 V 949 1219 a Fp(\(not)g Fo(B)s(ool)1233 1227
y Fr(1)1265 1219 y Fp(\))p 1833 1239 V -145 1243 1980
4 v -147 1309 4 67 v -100 1289 a Fo(Real)38 1297 y Fr(1)90
1289 y Fo(<)d(Real)299 1297 y Fr(2)p 903 1309 V 949 1289
a Fp(\(lt)j Fo(Real)1180 1297 y Fr(1)1236 1289 y Fo(Real)1374
1297 y Fr(2)1407 1289 y Fp(\))p 1833 1309 V -145 1312
1980 4 v -147 1379 4 67 v -100 1359 a Fo(Real)38 1367
y Fr(1)90 1359 y Fo(>)d(Real)299 1367 y Fr(2)p 903 1379
V 949 1359 a Fp(\(gt)k Fo(Real)1195 1367 y Fr(1)1250
1359 y Fo(Real)1388 1367 y Fr(2)1422 1359 y Fp(\))p 1833
1379 V -145 1382 1980 4 v -147 1449 4 67 v -100 1429
a Fo(Real)38 1437 y Fr(1)90 1429 y Fp(=)c Fo(Real)298
1437 y Fr(2)p 903 1449 V 949 1429 a Fp(\(eq)j Fo(Real)1200
1437 y Fr(1)1256 1429 y Fo(Real)1394 1437 y Fr(2)1427
1429 y Fp(\))p 1833 1449 V -145 1452 1980 4 v -147 1518
4 67 v -100 1498 a(Returns)f(Bo)r(olean)h(constan)n(t)p
903 1518 V 297 w(\(b)r(const)g Fn(f)p Fo(tr)r(ue;)11
b(f)c(alse)p Fn(g)p Fp(\))p 1833 1518 V -145 1522 1980
4 v -147 1654 4 133 v -100 1568 a(Returns)47 b(Bo)r(olean)h(v)l(alue)f
(of)h Fo(ar)r(g)-100 1635 y Fp(from)21 b(en)n(vironmen)n(t)p
903 1654 V 949 1568 a(\(barg)i Fo(ar)r(g)r Fp(\))p 1833
1654 V -145 1658 1980 4 v -152 1801 a FA(T)-7 b(able)26
b(1:)38 b Fq(GP)26 b(primitiv)n(es.)34 b(Our)25 b(GP)h(system)f(uses)h
(the)f(prim-)-152 1888 y(itiv)n(es)k(and)g(syn)n(tax)g(sho)n(wn)g(in)g
(this)g(table.)43 b(The)29 b(top)g(segmen)n(t)-152 1975
y(represen)n(ts)j(the)g(real-v)-5 b(alued)31 b(functions,)i(whic)n(h)e
(all)g(return)g(a)-152 2063 y(real)k(v)-5 b(alue.)62
b(Lik)n(ewise,)36 b(the)g(functions)g(in)f(the)h(b)r(ottom)f(seg-)-152
2150 y(men)n(t)27 b(all)f(return)h(a)f(Bo)r(olean)g(v)-5
b(alue.)-77 2456 y FB(T)f(o)22 b(\014nd)e(general-purp)r(ose)h
(expressions)h(\()p Fx(i.e.)p FB(,)f(expressions)h(that)-152
2543 y(w)n(ork)g(w)n(ell)g(for)h(a)e(broad)h(range)g(of)g(input)e
(programs\),)k(the)d(learning)-152 2631 y(algorithm)26
b(learns)f(from)f(a)h Fx(set)32 b FB(of)25 b(`training')g(programs.)35
b(T)-6 b(o)25 b(train)-152 2718 y(on)f(m)n(ultiple)f(input)g(programs,)
j(w)n(e)d(use)h(the)f(tec)n(hnique)g(describ)r(ed)-152
2805 y(b)n(y)f(Gathercole)h(in)g([9].)34 b(The)23 b(tec)n
(hnique|called)f(dynamic)g(subset)-152 2892 y(selection)e(\(DSS\)|)c
(trains)j(on)f(subsets)h(of)g(the)e(training)i(programs,)-152
2979 y(concen)n(trating)27 b(more)f(e\013ort)g(on)f(programs)i(that)f
(p)r(erform)g(p)r(o)r(orly)-152 3067 y(compared)h(to)f(the)g(baseline)h
(heuristics.)37 b(DSS)25 b(reduces)h(the)g(n)n(um-)-152
3154 y(b)r(er)c(of)g(\014tness)g(ev)l(aluations)g(that)f(need)g(to)h(b)
r(e)g(p)r(erformed)g(in)g(order)-152 3241 y(to)37 b(ac)n(hiev)n(e)g(a)g
(suitable)h(solution.)69 b(Because)37 b(our)g(system)g(m)n(ust)-152
3328 y(compile)25 b(and)f(run)g(b)r(enc)n(hmarks)f(to)i(test)f(an)g
(expression's)h(lev)n(el)g(of)-152 3415 y(\014tness,)h(\014tness)g(ev)l
(aluations)g(for)h(our)e(problem)h(are)g(costly)-6 b(.)-77
3502 y(The)29 b(next)g(section)h(describ)r(es)g(the)e(metho)r(dology)i
(that)f(w)n(e)h(use)-152 3590 y(throughout)c(the)f(remainder)h(of)g
(the)g(pap)r(er.)-152 3788 y FC(4.)100 b(METHODOLOGY)-77
3896 y FB(Compiler)36 b(priorit)n(y)e(functions)g(are)h(often)g(based)f
(on)g(assump-)-152 3983 y(tions)25 b(that)e(ma)n(y)h(not)f(b)r(e)h(v)l
(alid)g(across)h(application)g(and)f(arc)n(hitec-)-152
4070 y(tural)j(v)l(ariations.)38 b(In)26 b(other)g(w)n(ords,)i(who)f
(kno)n(ws)g(on)f(what)h(set)g(of)-152 4157 y(b)r(enc)n(hmarks,)35
b(and)d(for)i(what)f(target)g(arc)n(hitecture)g(the)g(priorit)n(y)-152
4244 y(functions)28 b(w)n(ere)g(designed?)40 b(It)27
b(could)h(b)r(e)f(the)g(case)i(that)e(a)h(prior-)-152
4332 y(it)n(y)22 b(function)h(w)n(as)g(designed)g(for)g(completely)g
(orthogonal)h(circum-)-152 4419 y(stances)j(than)e(those)h(under)f
(whic)n(h)g(y)n(ou)g(use)h(y)n(our)f(compiler.)-77 4506
y(Our)34 b(system)h(uses)g(genetic)h(programming)g(to)f(automatically)
-152 4593 y(searc)n(h)h(for)h(e\013ectiv)n(e)e(priorit)n(y)h
(functions.)64 b(Though)36 b(it)g(ma)n(y)f(b)r(e)-152
4680 y(p)r(ossible)19 b(to)f(`ev)n(olv)n(e')g(the)f(underlying)f
(algorithm,)21 b(w)n(e)d(restrict)g(our-)-152 4767 y(selv)n(es)28
b(to)g(priorit)n(y)f(functions.)40 b(This)28 b(drastically)h(reduces)e
(searc)n(h)-152 4855 y(space)i(size,)i(and)d(the)g(underlying)g
(algorithm)i(ensures)f(optimiza-)-152 4942 y(tion)f(legalit)n(y)-6
b(.)42 b(F)-6 b(urthermore,)29 b(this)f(tec)n(hnique)e(is)j(still)g(v)n
(ery)e(p)r(o)n(w-)-152 5029 y(erful;)j(ev)n(en)e(small)h(c)n(hanges)f
(to)g(the)g(priorit)n(y)g(function)g(can)g(dras-)-152
5116 y(tically)f(impro)n(v)n(e)e(\(or)h(diminish\))g(p)r(erformance.)
-77 5203 y(W)-6 b(e)35 b(optimize)i(a)f(giv)n(en)g(priorit)n(y)f
(function)h(b)n(y)f(wrapping)h(the)-152 5290 y(iterativ)n(e)23
b(framew)n(ork)h(of)f(Figure)g(2)f(around)h(the)f(compiler)h(and)f(ar-)
-152 5378 y(c)n(hitecture.)57 b(W)-6 b(e)32 b(replace)i(the)f(priorit)n
(y)g(function)g(that)g(w)n(e)g(wish)p 2065 -148 1943
4 v 2063 -82 4 67 v 2110 -102 a Fp(P)n(arameter)p 2896
-82 V 531 w(Setting)p 4006 -82 V 2065 -79 1943 4 v 2065
-64 V 2063 3 4 67 v 2110 -17 a(P)n(opulation)21 b(size)p
2896 3 V 390 w(400)h(expressions)p 4006 3 V 2065 6 1943
4 v 2063 72 4 67 v 2110 53 a(Num)n(b)r(er)f(of)h(generations)p
2896 72 V 172 w(50)g(generations)p 4006 72 V 2065 76
1943 4 v 2063 142 4 67 v 2110 122 a(Generational)f(replacemen)n(t)p
2896 142 V 87 w(22)h(expressions)p 4006 142 V 2065 146
1943 4 v 2063 212 4 67 v 2110 192 a(Mutation)f(rate)p
2896 212 V 426 w(5\045)p 4006 212 V 2065 215 1943 4 v
2063 282 4 67 v 2110 262 a(T)-5 b(ournamen)n(t)21 b(size)p
2896 282 V 353 w(7)p 4006 282 V 2065 285 1943 4 v 2063
418 4 133 v 2110 332 a(Elitism)p 2896 418 V 624 w(Best)30
b(expression)e(is)i(guaran)n(teed)e(sur-)2943 398 y(viv)l(al.)p
4006 418 V 2065 421 1943 4 v 2063 554 4 133 v 2110 468
a(Fitness)p 2896 554 V 626 w(Av)n(erage)f(sp)r(eedup)e(o)n(v)n(er)j
(the)f(baseline)2943 534 y(on)22 b(the)f(suite)h(of)g(b)r(enc)n
(hmarks.)p 4006 554 V 2065 557 1943 4 v 2040 701 a FA(T)-7
b(able)30 b(2:)42 b Fq(GP)30 b(parameters.)39 b(This)28
b(table)g(sho)n(ws)h(the)g(GP)g(pa-)2040 788 y(rameters)d(w)n(e)h(used)
h(to)e(collect)h(the)g(results)f(in)h(this)g(section.)2040
1098 y FB(to)j(optimize)g(with)g(an)g(expression)g(parser)g(and)g(ev)l
(aluator.)47 b(This)2040 1185 y(allo)n(ws)29 b(us)f(to)f(compile)h(the)
f(b)r(enc)n(hmarks)g(in)g(our)h(`training')g(suite)2040
1272 y(using)20 b(the)f(expressions|)i(whic)n(h)e(are)i(priorit)n(y)e
(functions|)h(in)g(the)2040 1359 y(p)r(opulation.)34
b(The)21 b(expressions)h(that)f(create)h(the)f(fastest)h(executa-)2040
1446 y(bles)i(for)g(the)f(applications)i(in)e(the)g(training)h(suite)f
(are)h(fa)n(v)n(ored)g(for)2040 1533 y(crosso)n(v)n(er.)2115
1621 y(Our)k(system)g(uses)h(total)h(execution)e(time)h(to)g(assign)h
(\014tnesses.)2040 1708 y(This)36 b(approac)n(h)f(fo)r(cuses)h(on)f
(frequen)n(tly)f(executed)g(pro)r(cedures,)2040 1795
y(and)i(therefore,)k(ma)n(y)c(slo)n(wly)i(con)n(v)n(erge)e(up)r(on)g
(general-purp)r(ose)2040 1882 y(solutions.)e(Ho)n(w)n(ev)n(er,)23
b(when)e(one)g(w)n(an)n(ts)h(to)f(sp)r(ecialize)i(a)f(compiler)2040
1969 y(for)31 b(a)g(giv)n(en)f(input)f(program,)k(this)d(ev)l(aluation)
h(of)g(\014tness)f(w)n(orks)2040 2056 y(extremely)25
b(w)n(ell.)2115 2144 y(T)-6 b(able)25 b(1)g(sho)n(ws)h(the)f(GP)g
(expression)g(primitiv)n(es)g(that)g(our)g(sys-)2040
2231 y(tem)20 b(uses.)33 b(Careful)22 b(selection)g(of)f(GP)f(primitiv)
n(es)h(is)g(essen)n(tial.)34 b(W)-6 b(e)2040 2318 y(w)n(an)n(t)21
b(to)g(giv)n(e)f(the)h(system)f(enough)h(\015exibilit)n(y)f(to)h(p)r
(oten)n(tially)g(\014nd)2040 2405 y(unexp)r(ected)26
b(results.)39 b(Ho)n(w)n(ev)n(er,)28 b(the)e(more)i(leew)n(a)n(y)f(w)n
(e)h(giv)n(e)f(GP)-6 b(,)2040 2492 y(the)25 b(longer)i(it)f(will)h(tak)
n(e)e(to)h(con)n(v)n(erge)g(up)r(on)f(a)h(general)h(solution.)2115
2579 y(Our)h(system)g(creates)i(an)e(initial)i(p)r(opulation)f(that)f
(consists)i(of)2040 2667 y(399)40 b(randomly)e(generated)h
(expressions;)46 b(it)38 b(randomly)h(`gro)n(ws')2040
2754 y(expressions)20 b(of)f(v)l(arying)f(heigh)n(ts)h(using)g(the)f
(primitiv)n(es)h(in)g(T)-6 b(able)19 b(1)2040 2841 y(and)25
b Fx(fe)l(atur)l(es)33 b FB(extracted)25 b(b)n(y)g(the)g(compiler)h
(writer.)35 b(F)-6 b(eatures)26 b(are)2040 2928 y(measurable)c(program)
f(c)n(haracteristics)i(that)d(the)g(compiler)i(writer)2040
3015 y(thinks)d(ma)n(y)h(b)r(e)g(imp)r(ortan)n(t)g(for)g(forming)h(go)r
(o)r(d)g(priorit)n(y)f(functions)2040 3103 y(\()p Fx(e.g.)p
FB(,)26 b(latency-w)n(eigh)n(ted)f(depth)g(for)h(list)h(sc)n
(heduling\).)2115 3190 y(In)37 b(addition)h(to)h(the)e(randomly)h
(generated)h(expressions,)j(w)n(e)2040 3277 y(seed)32
b(the)g(initial)h(p)r(opulation)f(with)g(the)f(compiler)i(writer's)h(b)
r(est)2040 3364 y(guess.)82 b(In)41 b(other)g(w)n(ords,)46
b(w)n(e)c(include)f(the)g(priorit)n(y)g(function)2040
3451 y(distributed)34 b(with)g(the)g(compiler.)61 b(F)-6
b(or)34 b(t)n(w)n(o)h(of)g(the)f(three)g(opti-)2040 3538
y(mizations)25 b(presen)n(ted)e(in)h(this)g(pap)r(er,)g(w)n(e)g(found)f
(that)h(the)f(seed)h(is)2040 3626 y(quic)n(kly)f(obscured)i(and)f(w)n
(eeded)g(out)g(of)h(the)f(p)r(opulation)h(as)g(more)2040
3713 y(fa)n(v)n(orable)j(expressions)g(emerge.)40 b(In)27
b(fact,)i(for)f(h)n(yp)r(erblo)r(c)n(k)e(selec-)2040
3800 y(tion)j(and)f(data)h(prefetc)n(hing,)h(whic)n(h)f(w)n(e)g
(discuss)g(later,)h(the)e(seed)2040 3887 y(had)h(no)g(impact)h(on)f
(the)g(\014nal)g(solution.)47 b(These)30 b(results)g(suggest)2040
3974 y(that)25 b(one)g(could)h(use)f(Meta)h(Optimization)g(to)f
(construct)h(priorit)n(y)2040 4061 y(functions)j(from)h(scratc)n(h)f
(rather)f(than)g(trying)h(to)g(impro)n(v)n(e)f(up)r(on)2040
4149 y(preexisting)i(functions.)46 b(In)28 b(this)i(w)n(a)n(y)-6
b(,)30 b(our)f(to)r(ol)h(can)g(reduce)f(the)2040 4236
y(complexit)n(y)d(of)g(compiler)h(design)f(b)n(y)f(sparing)h(the)f
(engineer)i(from)2040 4323 y(p)r(erfunctory)e(algorithm)i(t)n(w)n
(eaking.)2115 4410 y(T)-6 b(able)34 b(2)g(summarizes)h(the)e
(parameters)i(that)e(w)n(e)i(use)e(to)h(col-)2040 4497
y(lect)e(results.)54 b(W)-6 b(e)32 b(c)n(hose)g(the)f(parameters)i(in)f
(the)f(table)i(after)f(a)2040 4584 y(mo)r(derate)26 b(amoun)n(t)f(of)g
(exp)r(erimen)n(tation.)35 b(W)-6 b(e)24 b(giv)n(e)i(our)f(GP)g(sys-)
2040 4672 y(tem)j(50)h(generations)h(to)f(\014nd)e(a)h(solution.)44
b(F)-6 b(or)28 b(the)g(b)r(enc)n(hmarks)2040 4759 y(that)k(w)n(e)h
(surv)n(ey)n(ed,)g(the)f(time)h(required)f(to)g(run)g(for)h(50)g
(genera-)2040 4846 y(tions)c(is)g(ab)r(out)g(one)g(da)n(y)f(p)r(er)g(b)
r(enc)n(hmark)g(in)h(the)f(training)h(set)3976 4814 y
Fs(2)4011 4846 y FB(.)2040 4933 y(Our)k(system)g(memoizes)h(b)r(enc)n
(hmark)f(\014tnesses)g(b)r(ecause)h(\014tness)2040 5020
y(ev)l(aluations)26 b(are)h(so)f(costly)-6 b(.)2115 5108
y(After)23 b(ev)n(ery)e(generation)j(the)e(system)h Fx(r)l(andomly)30
b FB(replaces)24 b(22\045)2040 5195 y(of)18 b(the)f(p)r(opulation)g
(with)h(new)f(expressions)h(created)f(via)h(the)f(crosso)n(v)n(er)p
2040 5242 797 4 v 2044 5296 a Fs(2)2078 5328 y Fr(W)l(e)22
b(ran)g(on)g(15)g(to)g(20)g(mac)o(hines)g(in)f(parallel)h(for)g(the)h
(exp)q(erimen)o(ts)f(in)g(Section)g(5)g(and)2040 5378
y(Section)f(6,)f(and)g(w)o(e)f(used)h(5)g(mac)o(hines)f(for)i(the)g
(exp)q(erimen)o(ts)f(in)g(Section)h(7.)p eop
%%Page: 5 5
5 4 bop -54 1168 a @beginspecial 53 @llx 53 @lly 289
@urx 355 @ury 1584 @rhi @setspecial
%%BeginDocument: figs/predvconta.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.10 (Thu Nov 21 16:49:49 EST 2002)
%%For: (mstephen) Mark Stephenson
%%Title: cluster0
%%Pages: (atend)
%%BoundingBox: 53 53 289 355
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 54 54 289 355
%%PageOrientation: Portrait
gsave
53 53 236 302 boxprim clip newpath
54 54 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
117 5 moveto 17 -0.5 (\(a\)) alignedtext
end grestore

%	branch
gsave 10 dict begin
rounded
newpath 140 272 moveto
91 272 lineto
stroke
newpath 91 272 moveto
86 272 80 266 80 260 curveto
stroke
newpath 80 260 moveto
80 248 lineto
stroke
newpath 80 248 moveto
80 241 85 236 91 236 curveto
stroke
newpath 91 236 moveto
140 236 lineto
stroke
newpath 140 236 moveto
145 236 152 241 152 247 curveto
stroke
newpath 152 247 moveto
152 259 lineto
stroke
newpath 152 259 moveto
152 266 146 272 140 272 curveto
stroke
gsave 10 dict begin
116 249 moveto 59 -0.5 (branch ...) alignedtext
end grestore
end grestore

%	taken
gsave 10 dict begin
rounded
newpath 93 168 moveto
11 168 lineto
stroke
newpath 11 168 moveto
5 168 0 162 0 156 curveto
stroke
newpath 0 156 moveto
0 144 lineto
stroke
newpath 0 144 moveto
0 137 6 132 12 132 curveto
stroke
newpath 12 132 moveto
94 132 lineto
stroke
newpath 94 132 moveto
100 132 106 137 106 143 curveto
stroke
newpath 106 143 moveto
106 155 lineto
stroke
newpath 106 155 moveto
106 162 99 168 93 168 curveto
stroke
gsave 10 dict begin
53 145 moveto 92 -0.5 (d - buf & 0x1) alignedtext
end grestore
end grestore

%	branch -> taken
gsave 10 dict begin
newpath 105 236 moveto
95 219 80 194 69 176 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 71 175 moveto
64 168 lineto
67 178 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
end grestore

%	ntaken
gsave 10 dict begin
rounded
newpath 222 200 moveto
136 200 lineto
stroke
newpath 136 200 moveto
130 200 124 194 124 188 curveto
stroke
newpath 124 188 moveto
124 111 lineto
stroke
newpath 124 111 moveto
124 106 129 100 135 100 curveto
stroke
newpath 135 100 moveto
221 100 lineto
stroke
newpath 221 100 moveto
227 100 234 105 234 111 curveto
stroke
newpath 234 111 moveto
234 188 lineto
stroke
newpath 234 188 moveto
234 193 228 200 222 200 curveto
stroke
gsave 10 dict begin
179 185 moveto 0 -0.5 () alignedtext
124 169 moveto 83 0.0 (  buf = *inp) alignedtext
124 153 moveto 97 0.0 (  inp = inp + 1) alignedtext
124 137 moveto 92 0.0 ( 	t = buf >> 4) alignedtext
124 121 moveto 89 0.0 (  d = t & 0xf) alignedtext
179 105 moveto 0 -0.5 () alignedtext
end grestore
end grestore

%	branch -> ntaken
gsave 10 dict begin
newpath 127 236 moveto
132 228 138 218 144 208 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 146 210 moveto
149 200 lineto
142 207 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
end grestore

%	fthru
gsave 10 dict begin
rounded
newpath 131 64 moveto
100 64 lineto
stroke
newpath 100 64 moveto
95 64 89 58 89 52 curveto
stroke
newpath 89 52 moveto
89 40 lineto
stroke
newpath 89 40 moveto
89 33 94 28 100 28 curveto
stroke
newpath 100 28 moveto
131 28 lineto
stroke
newpath 131 28 moveto
136 28 143 33 143 39 curveto
stroke
newpath 143 39 moveto
143 51 lineto
stroke
newpath 143 51 moveto
143 58 137 64 131 64 curveto
stroke
end grestore

%	taken -> fthru
gsave 10 dict begin
newpath 64 132 moveto
74 115 89 90 100 72 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 102 74 moveto
105 64 lineto
98 71 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
end grestore

%	ntaken -> fthru
gsave 10 dict begin
newpath 149 100 moveto
143 90 137 80 132 72 curveto
stroke
gsave 10 dict begin
solid
0.000 0.000 0.000 edgecolor
newpath 134 71 moveto
127 64 lineto
130 74 lineto
closepath
fill
0.000 0.000 0.000 edgecolor
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial 1116 w @beginspecial 53 @llx 53 @lly 207
@urx 243 @ury 1008 @rhi @setspecial
%%BeginDocument: figs/predvcontb.eps
%!PS-Adobe-2.0
%%Creator: dot version 1.8.10 (Thu Nov 21 16:49:49 EST 2002)
%%For: (mstephen) Mark Stephenson
%%Title: cluster1
%%Pages: (atend)
%%BoundingBox: 53 53 207 243
%%EndComments
save
%%BeginProlog
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

%%BeginResource: procset
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/layerlen layercolorseq length def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

%%EndResource
%%EndProlog
%%BeginSetup
14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 54 54 207 243
%%PageOrientation: Portrait
gsave
53 53 154 190 boxprim clip newpath
54 54 translate
0 0 1 beginpage
0 0 translate 0 rotate
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font
gsave 10 dict begin
76 5 moveto 18 -0.5 (\(b\)) alignedtext
end grestore

%	region
gsave 10 dict begin
rounded
newpath 140 160 moveto
12 160 lineto
stroke
newpath 12 160 moveto
6 160 0 153 0 147 curveto
stroke
newpath 0 147 moveto
0 40 lineto
stroke
newpath 0 40 moveto
0 33 5 28 11 28 curveto
stroke
newpath 11 28 moveto
139 28 lineto
stroke
newpath 139 28 moveto
145 28 152 34 152 40 curveto
stroke
newpath 152 40 moveto
152 147 lineto
stroke
newpath 152 147 moveto
152 154 146 160 140 160 curveto
stroke
gsave 10 dict begin
0 145 moveto 0 0.0 () alignedtext
0 129 moveto 100 0.0 (    cmp p2,p3 ...) alignedtext
0 113 moveto 138 0.0 ( 		\(p2\) d = buf & 0x1 ) alignedtext
0 97 moveto 113 0.0 ( 		\(p3\) buf = *inp ) alignedtext
0 81 moveto 127 0.0 ( 		\(p3\) inp = inp + 1 ) alignedtext
0 65 moveto 127 0.0 ( 		\(p3\) t = buf >> 4 ) alignedtext
0 49 moveto 119 0.0 ( 		\(p3\) d = t & 0xf ) alignedtext
76 33 moveto 4 -0.5 ( ) alignedtext
end grestore
end grestore
endpage
grestore
%%PageTrailer
%%EndPage: 1
%%Trailer
%%Pages: 1
end
restore
%%EOF

%%EndDocument
 @endspecial -152 1339 a FA(Figure)22 b(3:)35 b Fq(Con)n(trol)18
b(\015o)n(w)i Fl(v)p Fq(.)33 b(predicated)20 b(execution.)34
b(P)n(art)19 b(\(a\))-152 1426 y(sho)n(ws)h(a)g(segmen)n(t)g(of)g(con)n
(trol-\015o)n(w)e(that)h(demonstrates)g(a)h(sim-)-152
1513 y(ple)34 b(if-then-else)g(statemen)n(t.)54 b(As)35
b(is)e(t)n(ypical)f(with)h(m)n(ultime-)-152 1600 y(dia)f(and)h(in)n
(teger)e(applications,)g(there)i(are)f(few)g(instructions)-152
1687 y(p)r(er)j(basic)f(blo)r(c)n(k)h(in)f(the)h(example.)58
b(P)n(art)33 b(\(b\))h(is)h(the)f(corre-)-152 1774 y(sp)r(onding)k
(predicated)g(h)n(yp)r(erblo)r(c)n(k.)68 b(If-con)n(v)n(ersion)37
b(merges)-152 1862 y(disjoin)n(t)d(paths)h(of)f(con)n(trol)f(b)n(y)i
(creating)f(predicated)g(h)n(yp)r(er-)-152 1949 y(blo)r(c)n(ks.)59
b(Cho)r(osing)34 b(whic)n(h)g(paths)h(to)f(merge)g(is)h(a)f(balancing)
-152 2036 y(act.)57 b(In)36 b(this)e(example,)h(branc)n(hing)f(ma)n(y)f
(b)r(e)i(more)f(e\016cien)n(t)-152 2123 y(than)27 b(predicating)f(if)g
(p3)h(is)g(rarely)f(true.)-152 2379 y FB(op)r(eration)20
b(presen)n(ted)f(in)f(Section)i(3.)32 b(Only)18 b(the)h(b)r(est)g
(expression)g(is)-152 2466 y(guaran)n(teed)30 b(surviv)l(al.)44
b(T)n(ypically)-6 b(,)31 b(GP)e(practitioners)h(use)g(m)n(uc)n(h)-152
2553 y(higher)j(replacemen)n(t)g(rates.)55 b(Ho)n(w)n(ev)n(er,)34
b(since)f(w)n(e)g(use)f(dynamic)-152 2640 y(subset)g(selection,)i(only)
e(a)f(subset)h(of)g(b)r(enc)n(hmarks)f(is)h(ev)l(aluated)-152
2727 y(in)j(a)g(generation.)61 b(Th)n(us,)37 b(w)n(e)e(need)f(a)h(lo)n
(w)n(er)h(replacemen)n(t)e(rate)-152 2815 y(in)f(order)f(to)h(increase)
g(the)f(lik)n(eliho)r(o)r(d)h(that)f(a)h(giv)n(en)f(expression)-152
2902 y(will)26 b(b)r(e)e(tested)g(on)h(more)g(than)e(one)i(subset)f(of)
h(b)r(enc)n(hmarks.)34 b(The)-152 2989 y(m)n(utation)c(op)r(erator,)i
(whic)n(h)e(is)g(discussed)g(in)g(the)f(same)i(section,)-152
3076 y(m)n(utates)25 b(roughly)f(5\045)g(of)h(the)f(new)g(expressions.)
35 b(Finally)-6 b(,)25 b(w)n(e)g(use)-152 3163 y(a)c(tournamen)n(t)f
(size)h(of)g(7)g(when)f(selecting)i(the)e(\014ttest)g(expressions.)-152
3250 y(This)27 b(setting)f(causes)g(mo)r(derate)h(selection)g
(pressure.)-77 3338 y(The)f(follo)n(wing)i(three)d(sections)i(build)e
(up)r(on)g(the)g(metho)r(dology)-152 3425 y(describ)r(ed)f(in)g(this)g
(section)h(b)n(y)e(presen)n(ting)h(individual)g(case)h(stud-)-152
3512 y(ies.)35 b(Results)22 b(for)i(eac)n(h)e(of)i(the)e(case)h
(studies)g(are)g(included)f(in)h(their)-152 3599 y(resp)r(ectiv)n(e)j
(sections.)-152 3819 y FC(5.)100 b(CASE)25 b(STUD)l(Y)h(I:)f
(HYPERBLOCK)23 3935 y(FORMA)-9 b(TION)-77 4043 y FB(This)27
b(section)g(describ)r(es)h(the)e(op)r(eration)h(of)h(our)e(system)h(in)
f(the)-152 4130 y(con)n(text)g(of)g(a)g(sp)r(eci\014c)h(compiler)f
(optimization:)36 b(h)n(yp)r(erblo)r(c)n(k)25 b(for-)-152
4217 y(mation.)51 b(Here)31 b(w)n(e)g(in)n(tro)r(duce)g(the)f
(optimization,)k(and)c(then)g(w)n(e)-152 4304 y(discuss)21
b(factors)h(that)e(migh)n(t)h(b)r(e)f(imp)r(ortan)n(t)h(when)f
(creating)h(a)g(pri-)-152 4392 y(orit)n(y)26 b(function)f(for)h(it.)34
b(W)-6 b(e)25 b(conclude)h(the)e(section)j(b)n(y)d(presen)n(ting)-152
4479 y(exp)r(erimen)n(tal)i(results)g(for)h(h)n(yp)r(erblo)r(c)n(k)e
(formation.)-77 4566 y(Arc)n(hitects)c(ha)n(v)n(e)g(prop)r(osed)g(t)n
(w)n(o)g(notew)n(orth)n(y)g(metho)r(ds)g(for)h(de-)-152
4653 y(creasing)38 b(the)f(costs)g(asso)r(ciated)i(with)e(con)n(trol)g
(transfers)1617 4621 y Fs(3)1653 4653 y FB(:)56 b(im-)-152
4740 y(pro)n(v)n(ed)17 b(branc)n(h)f(prediction,)j(and)e(predication.)
32 b(Impro)n(v)n(ed)16 b(branc)n(h)-152 4828 y(prediction)i(algorithms)
g(w)n(ould)g(ob)n(viously)f(increase)h(pro)r(cessor)h(uti-)-152
4915 y(lization.)33 b(Unfortunately)-6 b(,)19 b(some)f(branc)n(hes)f
(are)h(inheren)n(tly)f(unpre-)-152 5002 y(dictable,)29
b(and)f(hence,)g(ev)n(en)f(the)g(most)i(sophisticated)f(algorithm)-152
5089 y(w)n(ould)d(fail.)35 b(F)-6 b(or)24 b(suc)n(h)g(branc)n(hes,)g
(predication)h(ma)n(y)f(b)r(e)g(a)g(fruitful)-152 5176
y(alternativ)n(e.)p -152 5242 797 4 v -148 5296 a Fs(3)-113
5328 y Fr(The)g(P)o(en)o(tium)230 5327 y Fk(r)214 5328
y Fj(\015)g Fr(4)h(arc)o(hitecture)j(features)e(20)f(pip)q(eline)g
(stages.)41 b(It)24 b(squashes)g(up)h(to)-152 5378 y(126)c(in-fligh)o
(t)e(instructions)i(when)f(it)g(mispredicts.)2115 -69
y FB(Rather)k(than)h(relying)g(on)h(branc)n(h)e(prediction,)i
(predication)f(al-)2040 19 y(lo)n(ws)19 b(a)e(m)n(ultiple-issue)h(pro)r
(cessor)h(to)e(sim)n(ultaneously)h(execute)f(the)2040
106 y(tak)n(en)25 b(and)h(fall-through)g(paths)f(of)i(con)n(trol)f
(\015o)n(w.)35 b(The)26 b(pro)r(cessor)2040 193 y(n)n(ulli\014es)c(all)
g(instructions)g(in)g(the)f(incorrect)h(path.)33 b(In)21
b(this)h(mo)r(del,)2040 280 y(a)30 b(predicate)f(op)r(erand)g(guards)h
(the)f(execution)g(of)h(ev)n(ery)e(instruc-)2040 367
y(tion.)33 b(If)21 b(the)f(v)l(alue)h(of)g(the)f(op)r(erand)h(is)g
(true,)h(then)e(the)g(instruction)2040 454 y(executes)j(normally)-6
b(.)34 b(If)23 b(ho)n(w)n(ev)n(er,)h(the)e(op)r(erand)h(is)h(false,)h
(the)e(pro-)2040 542 y(cessor)h(n)n(ulli\014es)e(the)g(instruction,)h
(prev)n(en)n(ting)e(it)i(from)g(mo)r(difying)2040 629
y(pro)r(cessor)k(state.)2115 716 y(Figure)42 b(3)f(highligh)n(ts)h(the)
f(di\013erence)h(b)r(et)n(w)n(een)f(con)n(trol-\015o)n(w)2040
803 y(and)g(predicated)g(execution.)80 b(P)n(art)41 b(\(a\))g(sho)n(ws)
h(a)f(segmen)n(t)h(of)2040 890 y(con)n(trol-\015o)n(w.)35
b(Using)26 b(a)g(pro)r(cess)h(dubb)r(ed)d(if-con)n(v)n(ersion,)j(the)e
(IM-)2040 977 y(P)-6 b(A)n(CT)26 b(predicating)h(compiler)g(merges)g
(disjoin)n(t)g(paths)f(of)h(execu-)2040 1065 y(tion)f(in)n(to)g(a)h
(predicated)e(h)n(yp)r(erblo)r(c)n(k.)35 b(A)25 b(h)n(yp)r(erblo)r(c)n
(k)g(is)i(a)f(predi-)2040 1152 y(cated)i(single-en)n(try)-6
b(,)27 b(m)n(ultiple-exit)g(region.)41 b(P)n(art)28 b(\(b\))f(sho)n(ws)
h(the)2040 1239 y(h)n(yp)r(erblo)r(c)n(k)37 b(corresp)r(onding)i(to)f
(the)g(con)n(trol-\015o)n(w)g(in)g(part)g(\(a\).)2040
1326 y(Here,)29 b Fi(p2)g FB(and)f Fi(p3)h FB(are)g(m)n(utually)f
(exclusiv)n(e)g(predicates)h(that)f(are)2040 1413 y(set)e(according)h
(to)f(the)f(branc)n(h)g(condition)h(in)g(part)f(\(a\).)2115
1500 y(Though)h(predication)h(e\013ectiv)n(ely)g(exp)r(oses)g(ILP)-6
b(,)26 b(simply)h(pred-)2040 1588 y(icating)j(ev)n(erything)e(will)i
(diminish)e(p)r(erformance)i(b)n(y)e(saturating)2040
1675 y(mac)n(hine)35 b(resources)h(with)g(useless)g(instructions.)63
b(Ho)n(w)n(ev)n(er,)38 b(an)2040 1762 y(appropriate)26
b(balance)g(of)h(predication)f(and)f(branc)n(hing)g(can)h(dras-)2040
1849 y(tically)h(impro)n(v)n(e)e(p)r(erformance.)2040
1999 y FC(5.1)99 b(F)n(eatur)n(e)26 b(Extraction)2115
2107 y FB(In)21 b(the)g(follo)n(wing)k(list)d(w)n(e)h(giv)n(e)f(a)g
(brief)g(o)n(v)n(erview)g(of)h(sev)n(eral)g(cri-)2040
2195 y(teria)k(that)e(are)i(useful)f(to)g(consider)h(when)f(forming)h
(h)n(yp)r(erblo)r(c)n(ks.)2040 2282 y(Suc)n(h)k(criteria)i(are)g(often)
f(referred)h(to)f(as)h(features.)54 b(In)32 b(the)f(list,)2040
2369 y(a)h(path)f(refers)i(to)e(a)h(path)f(of)i(con)n(trol)f(\015o)n(w)
g(\()p Fx(i.e.)p FB(,)g(a)g(sequence)f(of)2040 2456 y(basic)25
b(blo)r(c)n(ks)g(that)f(are)h(connected)f(b)n(y)g(edges)h(in)f(the)g
(con)n(trol)h(\015o)n(w)2040 2543 y(graph\):)2151 2690
y FD(\017)38 b FA(P)n(ath)33 b(predictabilit)n(y)p FB(:)38
b(Predictable)29 b(branc)n(hes)g(incur)f(no)2227 2777
y(misprediction)c(p)r(enalties,)h(and)f(th)n(us,)f(should)h(probably)f
(re-)2227 2865 y(main)30 b(unpredicated.)47 b(Com)n(bining)31
b(m)n(ultiple)f(paths)g(of)g(ex-)2227 2952 y(ecution)k(in)n(to)h(a)f
(single)i(predicated)e(region)h(uses)g(precious)2227
3039 y(mac)n(hine)h(resources)h([15].)66 b(In)36 b(this)g(case,)j
(using)d(mac)n(hine)2227 3126 y(resources)41 b(to)f(parallelize)h
(individual)f(paths)f(is)i(t)n(ypically)2227 3213 y(wiser.)2151
3354 y FD(\017)d FA(P)n(ath)48 b(frequency)p FB(:)66
b(Infrequen)n(tly)40 b(executed)h(paths)g(are)2227 3441
y(probably)34 b(not)g(w)n(orth)h(predicating.)62 b(Including)34
b(the)g(path)2227 3528 y(in)e(a)g(h)n(yp)r(erblo)r(c)n(k)e(w)n(ould)i
(consume)g(resources,)j(and)c(could)2227 3615 y(negativ)n(ely)26
b(a\013ect)g(p)r(erformance.)2151 3755 y FD(\017)38 b
FA(P)n(ath)21 b(ILP)p FB(:)f(If)e(a)h(path's)g(lev)n(el)f(of)i
(parallelism)g(is)f(lo)n(w,)i(it)e(ma)n(y)2227 3843 y(b)r(e)h(w)n(orth)
n(while)i(to)e(predicate)h(the)f(path.)32 b(In)20 b(other)g(w)n(ords,)j
(if)2227 3930 y(a)c(path)g(do)r(es)h(not)f(fully)h(use)f(mac)n(hine)g
(resources,)j(com)n(bining)2227 4017 y(it)31 b(with)g(another)g(sequen)
n(tial)g(path)f(probably)g(will)i(not)f(di-)2227 4104
y(minish)f(p)r(erformance.)48 b(Because)31 b(predicated)f(instructions)
2227 4191 y(do)25 b(not)f(need)h(to)g(kno)n(w)g(the)f(v)l(alue)h(of)g
(their)g(guarding)h(pred-)2227 4278 y(icate)f(un)n(til)e(late)i(in)e
(the)h(pip)r(eline,)h(a)f(pro)r(cessor)h(can)f(sustain)2227
4366 y(high)i(lev)n(els)g(of)g(ILP)-6 b(.)2151 4506 y
FD(\017)38 b FA(Num)n(b)r(er)33 b(of)h(instructions)g(in)f(path)p
FB(:)42 b(Long)30 b(paths)f(use)2227 4593 y(up)39 b(mac)n(hine)g
(resources,)45 b(and)39 b(if)h(predicated,)k(will)d(lik)n(ely)2227
4680 y(slo)n(w)20 b(execution.)32 b(This)20 b(is)g(esp)r(ecially)g
(true)f(when)g(long)h(paths)2227 4767 y(are)33 b(com)n(bined)g(with)f
(short)h(paths.)56 b(Since)32 b(ev)n(ery)g(instruc-)2227
4855 y(tion)j(in)g(a)g(h)n(yp)r(erblo)r(c)n(k)e(executes,)38
b(long)d(paths)g(e\013ectiv)n(ely)2227 4942 y(dela)n(y)25
b(the)g(time)h(to)f(completion)h(of)h(short)e(paths.)34
b(The)26 b(cost)2227 5029 y(of)32 b(misprediction)f(is)h(relativ)n(ely)
f(high)g(for)g(short)h(paths.)49 b(If)2227 5116 y(the)37
b(pro)r(cessor)h(mispredicts)g(on)f(a)g(short)h(path,)h(the)e(pro-)2227
5203 y(cessor)d(has)e(to)h(n)n(ullify)f(all)i(the)e(instructions)g(in)h
(the)f(path,)2227 5290 y Fx(and)43 b FB(the)35 b(subsequen)n(t)f(con)n
(trol-indep)r(enden)n(t)g(instructions)2227 5378 y(fetc)n(hed)25
b(b)r(efore)i(the)e(branc)n(h)g(condition)h(resolv)n(es.)p
eop
%%Page: 6 6
6 5 bop -41 -69 a FD(\017)38 b FA(Num)n(b)r(er)45 b(of)h(branc)n(hes)f
(in)g(path)p FB(:)62 b(P)n(aths)40 b(of)g(con)n(trol)35
19 y(through)21 b(sev)n(eral)h(branc)n(hes)f(ha)n(v)n(e)g(a)g(greater)h
(c)n(hance)g(of)g(mis-)35 106 y(predicting.)39 b(Therefore,)29
b(it)e(ma)n(y)g(b)r(e)g(w)n(orth)n(while)h(to)f(predi-)35
193 y(cate)f(suc)n(h)f(paths.)34 b(On)24 b(the)h(other)h(hand,)f
(including)g(sev)n(eral)35 280 y(suc)n(h)j(paths)h(ma)n(y)f(pro)r(duce)
g(large)i(h)n(yp)r(erblo)r(c)n(ks)e(that)g(satu-)35 367
y(rate)e(resources.)-41 516 y FD(\017)38 b FA(Compiler)19
b(optimization)h(considerations)p FB(:)30 b(P)n(aths)17
b(that)35 603 y(con)n(tain)38 b(hazard)g(conditions)h(\()p
Fx(i.e.)p FB(,)h(p)r(oin)n(ter)e(dereferences)35 690
y(and)f(pro)r(cedure)f(calls\))j(limit)e(the)g(e\013ectiv)n(eness)g(of)
g(man)n(y)35 777 y(compiler)29 b(optimizations.)43 b(In)27
b(the)g(presence)i(of)f(hazards,)h(a)35 864 y(compiler)37
b(m)n(ust)e(mak)n(e)h(conserv)l(ativ)n(e)g(assumptions.)66
b(The)35 952 y(co)r(de)40 b(in)g(Figure)g(3\(a\))g(could)g(b)r
(ene\014t)e(from)j(predication.)35 1039 y(Without)17
b(arc)n(hitectural)h(supp)r(ort,)h(the)d(load)i(from)g
Fi(*inp)g FB(can-)35 1126 y(not)34 b(b)r(e)f(hoisted)h(ab)r(o)n(v)n(e)g
(the)g(branc)n(h.)58 b(The)34 b(program)g(will)35 1213
y(b)r(eha)n(v)n(e)22 b(unexp)r(ectedly)g(if)h(the)g(load)g(is)g(not)g
(supp)r(osed)g(to)g(ex-)35 1300 y(ecute)i(and)g(it)h(accesses)h
(protected)e(memory)-6 b(.)34 b(By)25 b(remo)n(ving)35
1387 y(branc)n(hes)k(from)h(the)f(instruction)g(stream,)j(predication)d
(af-)35 1475 y(fords)37 b(the)f(sc)n(heduler)h(freer)g(co)r(de)g
(motion)g(opp)r(ortunities.)35 1562 y(F)-6 b(or)22 b(instance,)h(the)f
(predicated)g(h)n(yp)r(erblo)r(c)n(k)f(in)h(Figure)g(3\(b\))35
1649 y(allo)n(ws)33 b(the)d(sc)n(heduler)g(to)g(rearrange)i(memory)f
(op)r(erations)35 1736 y(without)26 b(con)n(trol-\015o)n(w)g(concerns.)
-41 1885 y FD(\017)38 b FA(Mac)n(hine-sp)r(eci\014c)20
b(considerations)p FB(:)30 b(A)17 b(heuristic)g(should)35
1972 y(accoun)n(t)27 b(for)g(mac)n(hine)f(c)n(haracteristics.)39
b(F)-6 b(or)27 b(instance,)g(the)35 2059 y(branc)n(h)e(dela)n(y)h(p)r
(enalt)n(y)f(is)h(a)g(decisiv)n(e)g(factor.)-77 2224
y(Clearly)-6 b(,)21 b(there)d(is)h(m)n(uc)n(h)f(to)g(consider)h(when)f
(designing)h(a)g(heuris-)-152 2311 y(tic)30 b(for)h(h)n(yp)r(erblo)r(c)
n(k)d(selection.)48 b(Man)n(y)29 b(of)h(the)g(ab)r(o)n(v)n(e)f
(considera-)-152 2398 y(tions)j(mak)n(e)e(sense)i(on)e(their)h(o)n(wn,)
i(but)d(when)h(they)f(are)h(put)f(to-)-152 2485 y(gether,)21
b(con)n(tradictions)e(arise.)33 b(Finding)19 b(the)f(righ)n(t)g(mix)g
(of)i(criteria)-152 2572 y(to)g(construct)g(an)f(e\013ectiv)n(e)h
(priorit)n(y)g(function)f(is)i(non)n(trivial.)32 b(That)-152
2659 y(is)23 b(wh)n(y)e(w)n(e)h(b)r(eliev)n(e)g(automating)h(the)f
(decision)g(pro)r(cess)h(is)f(crucial.)-152 2814 y FC(5.2)99
b(T)-7 b(rimaran')l(s)26 b(Heuristic)-77 2922 y FB(W)-6
b(e)21 b(no)n(w)g(discuss)h(the)e(heuristic)i(emplo)n(y)n(ed)f(b)n(y)f
(T)-6 b(rimaran's)22 b(IM-)-152 3009 y(P)-6 b(A)n(CT)21
b(compiler)h(for)g(creating)g(predicated)f(h)n(yp)r(erblo)r(c)n(ks)f
([15,)j(16].)-152 3096 y(The)41 b(IMP)-6 b(A)n(CT)41
b(compiler)g(b)r(egins)h(b)n(y)d(transforming)j(the)e(co)r(de)-152
3183 y(so)34 b(that)e(it)h(is)h(more)f(amenable)h(to)f(h)n(yp)r(erblo)r
(c)n(k)f(formation)i([15].)-152 3270 y(IMP)-6 b(A)n(CT's)37
b(algorithm)g(then)e(iden)n(ti\014es)g(acyclic)i(paths)f(of)g(con-)-152
3358 y(trol)g(that)f(are)h(suitable)g(for)h(h)n(yp)r(erblo)r(c)n(k)d
(inclusion.)65 b(P)n(ark)35 b(and)-152 3445 y(Sc)n(hlansk)n(er)19
b(detail)i(this)e(p)r(ortion)h(of)h(the)e(algorithm)i(in)e([21].)34
b(A)19 b(pri-)-152 3532 y(orit)n(y)g(function|)g(whic)n(h)g(is)h(the)e
(critical)i(calculation)h(in)e(the)f(predi-)-152 3619
y(cation)i(decision)h(pro)r(cess|)f(assigns)h(a)f(v)l(alue)f(to)g(eac)n
(h)h(of)g(the)f(paths)-152 3706 y(based)j(on)g(c)n(haracteristics)i
(suc)n(h)d(as)i(the)f(ones)g(just)g(describ)r(ed)g([15].)-152
3793 y(Some)k(of)h(these)e(c)n(haracteristics)j(come)e(from)h(run)n
(time)e(pro\014ling.)-77 3881 y(IMP)-6 b(A)n(CT)26 b(uses)g(the)f
(priorit)n(y)h(function)g(sho)n(wn)g(b)r(elo)n(w:)82
4134 y Fw(h)126 4142 y Fh(i)174 4134 y FB(=)255 4029
y Fv(\032)350 4089 y FB(0)p Fw(:)p FB(25)78 b(:)f(if)26
b Fw(path)883 4097 y Fh(i)935 4089 y FB(con)n(tains)g(a)g(hazard.)448
4177 y(1)77 b(:)g(if)26 b Fw(path)883 4185 y Fh(i)935
4177 y FB(is)g(hazard)g(free.)266 4430 y Fw(d)p 311 4430
24 4 v 28 w(r)r(atio)503 4438 y Fh(i)550 4430 y FB(=)834
4381 y Fw(dep)p 954 4381 V 27 w(heig)s(ht)1194 4389 y
Fh(i)p 641 4413 772 4 v 641 4480 a FB(max)784 4488 y
Fh(j)s Fs(=1)p Fg(!)p Fh(N)1021 4480 y Fw(dep)p 1141
4480 24 4 v 27 w(heig)s(ht)1381 4488 y Fh(j)299 4704
y Fw(o)p 341 4704 V 28 w(r)r(atio)533 4712 y Fh(i)580
4704 y FB(=)864 4655 y Fw(num)p 1027 4655 V 28 w(ops)1162
4663 y Fh(i)p 671 4686 710 4 v 671 4754 a FB(max)814
4762 y Fh(j)s Fs(=1)p Fg(!)p Fh(N)1051 4754 y Fw(num)p
1214 4754 24 4 v 27 w(ops)1348 4762 y Fh(j)-113 4978
y Fw(pr)r(ior)r(ity)155 4986 y Fh(i)202 4978 y FB(=)21
b Fw(exec)p 437 4978 V 27 w(r)r(atio)628 4986 y Fh(i)668
4978 y FD(\001)14 b Fw(h)747 4986 y Fh(i)788 4978 y FD(\001)h
FB(\(2)p Fw(:)p FB(1)j FD(\000)f Fw(d)p 1091 4978 V 27
w(r)r(atio)1282 4986 y Fh(i)1325 4978 y FD(\000)g Fw(o)p
1444 4978 V 28 w(r)r(atio)1636 4986 y Fh(i)1662 4978
y FB(\))51 b(\(1\))-77 5116 y(The)25 b(heuristic)g(applies)g(the)g(ab)r
(o)n(v)n(e)f(equation)h(to)g(all)g(paths)g(in)f(a)-152
5203 y(predicatable)k(region.)39 b(Based)28 b(on)f(a)g(run)n(time)g
(pro\014le,)g Fw(exec)p 1650 5203 V 27 w(r)r(atio)-152
5290 y FB(is)39 b(the)g(probabilit)n(y)f(that)g(the)h(path)f(is)h
(executed.)72 b(The)39 b(prior-)-152 5378 y(it)n(y)25
b(function)h(also)h(p)r(enalizes)f(paths)f(that)g(con)n(tain)h(hazards)
g(\()p Fx(e.g.)p FB(,)p 2055 -148 1962 4 v 2053 -82 4
67 v 2100 -102 a Fp(F)-5 b(eature)p 2726 -82 V 453 w(Description)p
4016 -82 V 2055 -79 1962 4 v 2055 -64 V 2053 69 4 133
v 2100 -17 a(Registers)p 2726 69 V 409 w(64)27 b(general-purp)r(ose)e
(registers,)j(64)g(\015oating-)2773 49 y(p)r(oin)n(t)21
b(registers,)h(and)f(256)i(predicate)p 4016 69 V 2053
136 4 67 v 2726 136 V 2773 116 a(registers.)p 4016 136
V 2055 139 1962 4 v 2053 405 4 266 v 2100 185 a(In)n(teger)e(units)p
2726 405 V 303 w(4)41 b(fully-pip)r(elined)c(units)j(with)h(1-cycle)f
(la-)2773 252 y(tencies,)28 b(except)f(for)h(m)n(ultiply)f
(instructions,)2773 318 y(whic)n(h)16 b(require)g(3)i(cycles,)f(and)g
(divide)f(instruc-)2773 385 y(tions,)21 b(whic)n(h)h(require)f(8.)p
4016 405 V 2055 408 1962 4 v 2053 607 4 200 v 2100 454
a(Floating-p)r(oin)n(t)g(units)p 2726 607 V 90 w(2)h(fully-pip)r
(elined)d(units)j(with)h(3-cycle)e(laten-)2773 521 y(cies,)f(except)g
(for)i(divide)e(instructions,)g(whic)n(h)2773 587 y(require)g(8)j
(cycles.)p 4016 607 V 2055 610 1962 4 v 2053 876 4 266
v 2100 657 a(Memory)e(units)p 2726 876 V 268 w(2)28 b(memory)f(units.)
46 b(L1)29 b(cac)n(he)d(accesses)i(tak)n(e)2773 723 y(2)j(cycles,)i(L2)
f(accesses)e(tak)n(e)i(7)g(cycles,)g(and)2773 790 y(L3)26
b(accesses)g(require)f(35)h(cycles.)41 b(Stores)26 b(are)2773
856 y(bu\013ered,)20 b(and)i(th)n(us)g(require)f(1)h(cycle.)p
4016 876 V 2055 879 1962 4 v 2053 946 4 67 v 2100 926
a(Branc)n(h)g(unit)p 2726 946 V 325 w(1)g(branc)n(h)f(unit.)p
4016 946 V 2055 949 1962 4 v 2053 1082 4 133 v 2100 996
a(Branc)n(h)h(prediction)p 2726 1082 V 150 w(2-bit)48
b(branc)n(h)g(predictor)f(with)i(a)g(5-cycle)2773 1062
y(branc)n(h)21 b(misprediction)e(p)r(enalt)n(y)-5 b(.)p
4016 1082 V 2055 1085 1962 4 v 2040 1229 a FA(T)e(able)37
b(3:)58 b Fq(Arc)n(hitectural)34 b(c)n(haracteristics.)59
b(This)35 b(table)g(de-)2040 1316 y(scrib)r(es)40 b(the)f(EPIC)h(arc)n
(hitecture)e(o)n(v)n(er)h(whic)n(h)g(w)n(e)g(ev)n(olv)n(ed.)2040
1403 y(This)22 b(mo)r(del)g(appro)n(ximates)e(the)i(In)n(tel)g(Itanium)
f(arc)n(hitecture.)2040 1764 y FB(p)r(oin)n(ter)29 b(dereferences)g
(and)f(pro)r(cedure)h(calls\).)44 b(Suc)n(h)28 b(paths)g(ma)n(y)2040
1851 y(constrain)f(aggressiv)n(e)g(compiler)g(optimizations.)37
b(T)-6 b(o)26 b(a)n(v)n(oid)g(large)2040 1938 y(h)n(yp)r(erblo)r(c)n
(ks,)21 b(the)f(heuristic)h(is)g(careful)g(not)f(to)h(c)n(ho)r(ose)g
(paths)f(that)2040 2026 y(ha)n(v)n(e)34 b(a)h(large)h(dep)r(endence)e
(heigh)n(t)g(\()p Fw(dep)p 3308 2026 24 4 v 27 w(heig)s(ht)p
FB(\))f(with)i(resp)r(ect)2040 2113 y(to)29 b(the)g(maxim)n(um)f(dep)r
(endence)g(heigh)n(t.)45 b(Similarly)29 b(it)g(p)r(enalizes)2040
2200 y(paths)d(that)f(con)n(tain)h(to)r(o)g(man)n(y)f(instructions)h
(\()p Fw(num)p 3642 2200 V 28 w(ops)p FB(\).)2115 2287
y(IMP)-6 b(A)n(CT's)18 b(algorithm)g(then)f(merges)h(the)f(paths)g
(with)g(the)g(high-)2040 2374 y(est)31 b(priorities)i(in)n(to)e(a)g
(predicated)g(h)n(yp)r(erblo)r(c)n(k.)49 b(The)31 b(algorithm)2040
2461 y(stops)23 b(merging)h(paths)f(when)f(it)h(has)g(consumed)g(the)f
(target)i(arc)n(hi-)2040 2549 y(tecture's)i(estimated)h(resources.)2040
2742 y FC(5.3)99 b(Experimental)26 b(Setup)2115 2850
y FB(This)34 b(section)g(discusses)g(the)f(exp)r(erimen)n(tal)h
(results)g(for)g(opti-)2040 2937 y(mizing)42 b(T)-6 b(rimaran's)42
b(h)n(yp)r(erblo)r(c)n(k)d(selection)j(priorit)n(y)f(function.)2040
3024 y(T)-6 b(rimaran)28 b(is)g(an)g(in)n(tegrated)f(compiler)i(and)e
(sim)n(ulator)h(for)g(a)g(pa-)2040 3111 y(rameterized)g(EPIC)g(arc)n
(hitecture.)39 b(T)-6 b(able)28 b(3)f(details)h(the)f(sp)r(eci\014c)
2040 3198 y(arc)n(hitecture)k(o)n(v)n(er)f(whic)n(h)h(w)n(e)g(ev)n(olv)
n(ed.)49 b(This)31 b(mo)r(del)h(resem)n(bles)2040 3285
y(In)n(tel's)26 b(Itanium)2553 3252 y Ff(r)2538 3254
y FD(\015)2644 3285 y FB(arc)n(hitecture.)2115 3373 y(W)-6
b(e)29 b(mo)r(di\014ed)h(T)-6 b(rimaran's)31 b(IMP)-6
b(A)n(CT)29 b(compiler)i(b)n(y)e(replacing)2040 3460
y(its)20 b(h)n(yp)r(erblo)r(c)n(k)f(formation)i(priorit)n(y)e(function)
h(\(Equation)g(1\))f(with)2040 3547 y(our)33 b(GP)h(expression)f
(parser)h(and)f(ev)l(aluator.)57 b(This)34 b(allo)n(ws)h(IM-)2040
3634 y(P)-6 b(A)n(CT)32 b(to)g(read)f(an)h(expression)g(and)f(ev)l
(aluate)h(it)g(based)f(on)h(the)2040 3721 y(v)l(alues)d(of)g(h)n
(uman-selected)f(features)h(that)g(migh)n(t)f(b)r(e)g(imp)r(ortan)n(t)
2040 3808 y(for)34 b(creating)g(e\013ectiv)n(e)g(priorit)n(y)f
(functions.)57 b(T)-6 b(able)34 b(4)g(describ)r(es)2040
3896 y(these)26 b(features.)2115 3983 y(The)32 b(h)n(yp)r(erblo)r(c)n
(k)f(formation)j(algorithm)f(passes)g(the)f(features)2040
4070 y(in)27 b(the)f(table)i(as)f(parameters)h(to)f(the)g(expression)g
(ev)l(aluator.)38 b(F)-6 b(or)2040 4157 y(instance,)20
b(if)f(an)f(expression)h(con)n(tains)f(a)h(reference)g(to)f
Fi(dep)p 3752 4157 V 29 w(height)p FB(,)2040 4244 y(the)24
b(path's)h(dep)r(endence)f(heigh)n(t)g(will)i(b)r(e)e(used)h(when)f
(the)g(expres-)2040 4332 y(sion)38 b(is)g(ev)l(aluated.)69
b(Most)38 b(of)g(the)f(c)n(haracteristics)i(in)e(T)-6
b(able)38 b(4)2040 4419 y(w)n(ere)30 b(already)f(a)n(v)l(ailable)h(in)f
(IMP)-6 b(A)n(CT.)29 b(Equation)g(1)g(has)h(a)f(lo)r(cal)2040
4506 y(scop)r(e.)38 b(T)-6 b(o)27 b(pro)n(vide)f(some)h(global)h
(information,)h(w)n(e)e(also)h(extract)2040 4593 y(the)g(minim)n(um,)i
(maxim)n(um,)f(mean,)h(and)e(standard)h(deviation)g(of)2040
4680 y(all)e(path-sp)r(eci\014c)e(c)n(haracteristics)j(in)d(the)g
(table.)2115 4767 y(W)-6 b(e)31 b(added)g(a)h(2-bit)f(dynamic)g(branc)n
(h)g(predictor)h(to)f(the)g(sim-)2040 4855 y(ulator)39
b(and)e(w)n(e)i(mo)r(di\014ed)f(the)g(compiler's)h(pro\014ler)f(to)h
(extract)2040 4942 y(branc)n(h)28 b(predictabilit)n(y)h(statistics.)46
b(Lastly)-6 b(,)29 b(w)n(e)h(enabled)e(the)h(fol-)2040
5029 y(lo)n(wing)34 b(compiler)g(optimizations:)51 b(function)33
b(inlining,)j(lo)r(op)e(un-)2040 5116 y(rolling,)42 b(bac)n(k)n(edge)36
b(coalescing,)43 b(acyclic)38 b(global)g(sc)n(heduling)f([6],)2040
5203 y(mo)r(dulo)25 b(sc)n(heduling)f([25],)i(h)n(yp)r(erblo)r(c)n(k)e
(formation,)i(register)g(allo-)2040 5290 y(cation,)j(mac)n(hine-sp)r
(eci\014c)f(p)r(eephole)f(optimization,)j(and)d(sev)n(eral)2040
5378 y(classic)h(optimizations.)p eop
%%Page: 7 7
7 6 bop -101 -148 1892 4 v -103 -82 4 67 v -56 -102 a
Fp(F)-5 b(eature)p 499 -82 V 382 w(Description)p 1789
-82 V -101 -79 1892 4 v -101 -64 V -103 69 4 133 v -56
-17 a Fo(dep)p 48 -17 20 4 v 24 w(heig)r(ht)p 499 69
4 133 v 287 w Fp(The)51 b(maxim)n(um)e(instruction)h(dep)r(endence)546
49 y(heigh)n(t)21 b(o)n(v)n(er)h(all)g(instructions)f(in)h(path.)p
1789 69 V -101 72 1892 4 v -103 205 4 133 v -56 119 a
Fo(num)p 87 119 20 4 v 24 w(ops)p 499 205 4 133 v 341
w Fp(The)31 b(total)g(n)n(um)n(b)r(er)f(of)h(instructions)f(in)i(the)
546 185 y(path.)p 1789 205 V -101 209 1892 4 v -103 408
4 200 v -56 255 a Fo(exec)p 78 255 20 4 v 24 w(r)r(atio)p
499 408 4 200 v 298 w Fp(Ho)n(w)18 b(frequen)n(tly)d(this)i(path)f(is)i
(executed)c(com-)546 322 y(pared)40 b(to)h(other)g(paths)g(considered)e
(\(from)546 388 y(pro\014le\).)p 1789 408 V -101 411
1892 4 v -103 478 4 67 v -56 458 a Fo(num)p 87 458 20
4 v 24 w(br)r(anches)p 499 478 4 67 v 169 w Fp(The)17
b(total)h(n)n(um)n(b)r(er)e(of)i(branc)n(hes)f(in)g(the)g(path.)p
1789 478 V -101 481 1892 4 v -103 680 4 200 v -56 527
a Fo(pr)r(edictability)p 499 680 V 200 w Fp(Av)n(erage)30
b(path)h(predictabilit)n(y)e(obtained)h(b)n(y)546 594
y(sim)n(ulating)24 b(a)i(branc)n(h)f(predictor)f(\(from)h(pro-)546
660 y(\014le\).)p 1789 680 V -101 684 1892 4 v -103 816
4 133 v -56 730 a Fo(pr)r(edict)p 159 730 20 4 v 23 w(pr)r(oduct)p
499 816 4 133 v 139 w Fp(Pro)r(duct)g(of)j(branc)n(h)e
(predictabilities)e(in)k(the)546 796 y(path)21 b(\(from)h(pro\014le\).)
p 1789 816 V -101 820 1892 4 v -103 953 4 133 v -56 866
a Fo(av)r(g)p 53 866 20 4 v 26 w(ops)p 175 866 V 24 w(executed)p
499 953 4 133 v 91 w Fp(The)28 b(a)n(v)n(erage)g(n)n(um)n(b)r(er)e(of)i
(instructions)f(exe-)546 933 y(cuted)20 b(in)i(the)g(path)f(\(from)h
(pro\014le\).)p 1789 953 V -101 956 1892 4 v -103 1155
4 200 v -56 1002 a Fo(unsaf)7 b(e)p 165 1002 20 4 v 24
w(J)e(S)s(R)p 499 1155 4 200 v 225 w Fp(If)18 b(the)g(path)g(con)n
(tains)g(a)h(subroutine)e(call)h(that)546 1069 y(ma)n(y)d(ha)n(v)n(e)h
(side-e\013ects,)g(it)f(returns)g Fo(tr)r(ue)p Fp(;)k(oth-)546
1135 y(erwise)i(it)i(returns)e Fo(f)7 b(alse)p Fp(.)p
1789 1155 V -101 1158 1892 4 v -103 1358 4 200 v -56
1205 a Fo(saf)g(e)p 85 1205 20 4 v 24 w(J)e(S)s(R)p 499
1358 4 200 v 305 w Fp(If)20 b(the)g(path)g(con)n(tains)g(a)g
(side-e\013ect)f(free)h(sub-)546 1271 y(routine)k(call,)i(it)f(returns)
g Fo(tr)r(ue)p Fp(;)j(otherwise)d(it)546 1338 y(returns)c
Fo(f)7 b(alse)p Fp(.)p 1789 1358 V -101 1361 1892 4 v
-103 1560 4 200 v -56 1407 a Fo(mem)p 97 1407 20 4 v
24 w(haz)r(ar)r(d)p 499 1560 4 200 v 216 w Fp(If)17 b(the)g(path)f(con)
n(tains)h(an)h(unresolv)l(able)e(mem-)546 1474 y(ory)31
b(access,)i(it)e(returns)g Fo(tr)r(ue)p Fp(;)36 b(otherwise)31
b(it)546 1540 y(returns)21 b Fo(f)7 b(alse)p Fp(.)p 1789
1560 V -101 1564 1892 4 v -103 1696 4 133 v -56 1610
a Fo(max)p 81 1610 20 4 v 23 w(dep)p 204 1610 V 24 w(heig)r(ht)p
499 1696 4 133 v 131 w Fp(The)19 b(maxim)n(um)f(dep)r(endence)e(heigh)n
(t)i(o)n(v)n(er)i(all)546 1676 y(paths)c(considered)f(for)i(h)n(yp)r
(erblo)r(c)n(k)e(inclusion.)p 1789 1696 V -101 1700 1892
4 v -103 1833 4 133 v -56 1746 a Fo(total)p 88 1746 20
4 v 24 w(ops)p 499 1833 4 133 v 340 w Fp(The)23 b(sum)h(of)f(all)h
(instructions)f(in)g(paths)h(con-)546 1813 y(sidered)c(for)i(h)n(yp)r
(erblo)r(c)n(k)e(inclusion.)p 1789 1833 V -101 1836 1892
4 v -103 1969 4 133 v -56 1882 a Fo(num)p 87 1882 20
4 v 24 w(paths)p 499 1969 4 133 v 274 w Fp(Num)n(b)r(er)35
b(of)i(paths)h(considered)d(for)i(h)n(yp)r(er-)546 1949
y(blo)r(c)n(k)21 b(inclusion.)p 1789 1969 V -101 1972
1892 4 v -152 2115 a FA(T)-7 b(able)35 b(4:)53 b Fq(Hyp)r(erblo)r(c)n
(k)34 b(selection)f(features.)54 b(The)34 b(compiler)-152
2202 y(writer)43 b(c)n(ho)r(oses)i(in)n(teresting)f(attributes,)j(and)d
(the)h(system)-152 2290 y(ev)n(olv)n(es)32 b(a)g(priorit)n(y)f
(function)h(based)h(on)f(them.)52 b(W)-7 b(e)33 b(rely)f(on)-152
2377 y(pro\014le)26 b(information)d(to)i(extract)g(some)h(of)f(these)i
(parameters.)-152 2464 y(W)-7 b(e)24 b(also)f(include)h(the)f(min,)h
(mean,)f(max,)h(and)f(standard)g(devi-)-152 2551 y(ation)28
b(of)g(path)g(c)n(haracteristics.)38 b(This)28 b(pro)n(vides)g(some)h
(global)-152 2638 y(information)c(to)h(the)i(greedy)f(lo)r(cal)f
(heuristic.)-152 2968 y FC(5.4)99 b(Experimental)27 b(Results)-77
3076 y FB(W)-6 b(e)20 b(use)g(the)g(familiar)i(b)r(enc)n(hmarks)e(in)g
(T)-6 b(able)21 b(5)f(to)h(test)f(our)g(sys-)-152 3163
y(tem.)35 b(All)25 b(of)g(the)g(T)-6 b(rimaran)26 b(certi\014ed)e(b)r
(enc)n(hmarks)h(are)g(included)-152 3250 y(in)18 b(the)f(table)220
3219 y Fs(4)273 3250 y FB([24].)33 b(Our)17 b(suite)h(also)h(includes)f
(man)n(y)f(of)h(the)f(Media-)-152 3338 y(b)r(enc)n(h)32
b(b)r(enc)n(hmarks)g([14].)57 b(The)33 b(build)g(pro)r(cess)g(for)h
(ghostscript)-152 3425 y(pro)n(v)n(ed)22 b(to)r(o)h(di\016cult)f(to)g
(compile.)35 b(W)-6 b(e)21 b(also)j(exclude)e(the)g(remain-)-152
3512 y(der)33 b(of)i(the)e(Mediab)r(enc)n(h)g(applications)i(b)r
(ecause)f(the)f(T)-6 b(rimaran)-152 3599 y(system)26
b(do)r(es)g(not)g(compile)g(them)g(correctly)1183 3567
y Fs(5)1218 3599 y FB(.)-77 3686 y(W)-6 b(e)23 b(b)r(egin)h(b)n(y)e
(presen)n(ting)i(results)g(for)g(application-sp)r(ecialized)-152
3773 y(heuristics.)35 b(F)-6 b(ollo)n(wing)27 b(this,)e(w)n(e)g(sho)n
(w)g(that)g(it)g(is)g(p)r(ossible)h(to)f(use)-152 3861
y(Meta)i(Optimization)f(to)g(create)g(general-purp)r(ose)h(heuristics.)
-129 4110 y Fe(5.4.1)90 b(Specialized)21 b(Priority)h(Functions)-77
4217 y FB(Sp)r(ecialized)33 b(heuristics)g(are)g(created)f(b)n(y)f
(optimizing)i(a)g(prior-)-152 4305 y(it)n(y)38 b(function)h(for)g(a)f
(giv)n(en)g(application.)74 b(In)38 b(other)g(w)n(ords,)k(w)n(e)-152
4392 y(train)27 b(the)e(priorit)n(y)h(function)g(on)g(a)h(single)g(b)r
(enc)n(hmark.)35 b(Figure)26 b(4)-152 4479 y(sho)n(ws)35
b(that)e(Meta)i(Optimization)f(is)h(extremely)e(e\013ectiv)n(e)h(on)f
(a)-152 4566 y(p)r(er-b)r(enc)n(hmark)19 b(basis.)33
b(The)20 b(dark)f(bar)g(sho)n(ws)h(the)f(sp)r(eedup)g(\(o)n(v)n(er)-152
4653 y(T)-6 b(rimaran's)27 b(baseline)f(heuristic\))g(of)g(eac)n(h)g(b)
r(enc)n(hmark)e(when)h(run)-152 4740 y(with)j(the)g(same)g(data)g(on)g
(whic)n(h)g(it)f(w)n(as)i(trained.)41 b(The)28 b(ligh)n(t)g(bar)-152
4828 y(sho)n(ws)g(the)e(sp)r(eedup)g(attained)g(when)h(the)f(b)r(enc)n
(hmark)f(pro)r(cesses)-152 4915 y(a)j(data)g(set)f(that)h(w)n(as)g(not)
f(used)h(to)f(train)h(the)f(priorit)n(y)g(function.)-152
5002 y(W)-6 b(e)26 b(call)g(this)g(the)f(no)n(v)n(el)h(data)g(set.)p
-152 5064 797 4 v -148 5118 a Fs(4)-113 5149 y Fr(Due)i(to)g
(preexisting)h(bugs)g(in)e(T)l(rimaran,)j(w)o(e)e(could)g(not)h(get)g
(134.p)q(erl)g(to)g(execute)-152 5199 y(correctly)l(,)22
b(though)f([24])e(certified)i(it.)-148 5246 y Fs(5)-113
5278 y Fr(W)l(e)e(exclude)i(cjp)q(eg,)g(the)g(complemen)o(t)f(of)g(djp)
q(eg,)h(b)q(ecause)g(it)f(do)q(es)g(not)h(execute)g(prop-)-152
5328 y(erly)h(when)h(compiled)f(with)g(some)f(priorit)o(y)i(functions.)
33 b(Our)22 b(system)f(can)i(also)f(b)q(e)g(used)-152
5378 y(to)f(unco)o(v)o(er)f(bugs!)p 2040 -140 2016 4
v 2038 -74 4 67 v 2085 -94 a Fp(Benc)n(hmark)p 2508 -74
V 143 w(Suite)p 2945 -74 V 287 w(Description)p 4054 -74
V 2040 -70 2016 4 v 2040 -55 V 2038 11 4 67 v 2085 -9
a(co)r(drle4)p 2508 11 V 260 w(See)h([4])p 2945 11 V
247 w(RLE)h(t)n(yp)r(e)g(4)g(enco)r(der/deco)r(der.)p
4054 11 V 2038 77 V 2085 58 a(deco)r(drle4)p 2508 77
V 2945 77 V 4054 77 V 2040 81 2016 4 v 2038 147 4 67
v 2085 127 a(h)n(u\013)p 2200 127 20 4 v 24 w(enc)p 2508
147 4 67 v 238 w(See)f([4])p 2945 147 V 247 w(A)h(Hu\013man)g(enco)r
(der/deco)r(der.)p 4054 147 V 2038 214 V 2085 194 a(h)n(u\013)p
2200 194 20 4 v 24 w(dec)p 2508 214 4 67 v 2945 214 V
4054 214 V 2040 217 2016 4 v 2038 283 4 67 v 2085 263
a(djp)r(eg)p 2508 283 V 310 w(Mediab)r(enc)n(h)p 2945
283 V 86 w(Lossy)h(still)f(image)f(decompressor.)p 4054
283 V 2040 287 2016 4 v 2038 353 4 67 v 2085 333 a(g721enco)r(de)p
2508 353 V 139 w(Mediab)r(enc)n(h)p 2945 353 V 86 w(CCITT)j(v)n(oice)p
4054 353 V 2038 420 V 2085 400 a(g721deco)r(de)p 2508
420 V 2945 420 V 575 w(compressor/decompressor.)p 4054
420 V 2040 423 2016 4 v 2038 489 4 67 v 2085 469 a(mp)r(eg2dec)p
2508 489 V 183 w(Mediab)r(enc)n(h)p 2945 489 V 86 w(Lossy)f(video)e
(decompressor.)p 4054 489 V 2040 493 2016 4 v 2038 559
4 67 v 2085 539 a(rasta)p 2508 559 V 326 w(Mediab)r(enc)n(h)p
2945 559 V 86 w(Sp)r(eec)n(h)f(recognition)h(application.)p
4054 559 V 2040 562 2016 4 v 2038 629 4 67 v 2085 609
a(ra)n(w)n(caudio)p 2508 629 V 179 w(Mediab)r(enc)n(h)p
2945 629 V 86 w(Adaptiv)n(e)g(di\013eren)n(tial)g(pulse)g(co)r(de)p
4054 629 V 2038 695 V 2085 675 a(ra)n(wdaudio)p 2508
695 V 2945 695 V 606 w(mo)r(dulation)16 b(audio)h(enco)r(der/deco)r
(der.)p 4054 695 V 2040 698 2016 4 v 2038 765 4 67 v
2085 745 a(toast)p 2508 765 V 326 w(Mediab)r(enc)n(h)p
2945 765 V 86 w(Sp)r(eec)n(h)j(transco)r(der.)p 4054
765 V 2040 768 2016 4 v 2038 835 4 67 v 2085 815 a(unepic)p
2508 835 V 280 w(Mediab)r(enc)n(h)p 2945 835 V 86 w(Exp)r(erimen)n(tal)
f(image)j(decompressor.)p 4054 835 V 2040 838 2016 4
v 2038 904 4 67 v 2085 884 a(085.cc1)p 2508 904 V 259
w(SPEC92)p 2945 904 V 196 w(gcc)g(C)g(compiler.)p 4054
904 V 2040 908 2016 4 v 2038 1041 4 133 v 2085 954 a(052.alvinn)p
2508 1041 V 172 w(SPEC92)p 2945 1041 V 196 w(Single-precision)76
b(neural)i(net)n(w)n(ork)2991 1021 y(training.)p 4054
1041 V 2040 1044 2016 4 v 2038 1177 4 133 v 2085 1090
a(179.art)p 2508 1177 V 267 w(SPEC2000)p 2945 1177 V
130 w(A)69 b(neural)f(net)n(w)n(ork-based)g(image)2991
1157 y(recognition)21 b(algorithm.)p 4054 1177 V 2040
1180 2016 4 v 2038 1246 4 67 v 2085 1226 a(osdemo)p 2508
1246 V 256 w(Mediab)r(enc)n(h)p 2945 1246 V 86 w(P)n(art)h(of)g(a)h
(3-D)g(graphics)e(library)p 4054 1246 V 2038 1313 V 2085
1293 a(mipmap)p 2508 1313 V 234 w(Mediab)r(enc)n(h)p
2945 1313 V 86 w(similar)h(to)g(Op)r(enGL.)p 4054 1313
V 2040 1316 2016 4 v 2038 1383 4 67 v 2085 1363 a(129.compress)p
2508 1383 V 89 w(SPEC95)p 2945 1383 V 196 w(In-memory)f(\014le)g
(compressor)h(and)p 4054 1383 V 2038 1449 V 2508 1449
V 2945 1449 V 2991 1429 a(decompressor.)p 4054 1449 V
2040 1452 2016 4 v 2038 1652 4 200 v 2085 1499 a(023.eqn)n(tott)p
2508 1652 V 141 w(SPEC92)p 2945 1652 V 196 w(Creates)e(a)g(truth)g
(table)f(from)h(a)g(logical)2991 1565 y(represen)n(tation)31
b(of)i(a)g(Bo)r(olean)g(equa-)2991 1632 y(tion.)p 4054
1652 V 2040 1655 2016 4 v 2038 1721 4 67 v 2085 1701
a(132.ijp)r(eg)p 2508 1721 V 210 w(SPEC95)p 2945 1721
V 196 w(JPEG)22 b(compressor)f(and)p 4054 1721 V 2038
1788 V 2508 1788 V 2945 1788 V 2991 1768 a(decompressor.)p
4054 1788 V 2040 1791 2016 4 v 2038 1857 4 67 v 2085
1838 a(130.li)p 2508 1857 V 314 w(SPEC95)p 2945 1857
V 196 w(Lisp)h(in)n(terpreter.)p 4054 1857 V 2040 1861
2016 4 v 2038 1927 4 67 v 2085 1907 a(124.m88ksim)p 2508
1927 V 96 w(SPEC95)p 2945 1927 V 196 w(Pro)r(cessor)g(sim)n(ulator.)p
4054 1927 V 2040 1931 2016 4 v 2038 1997 4 67 v 2085
1977 a(147.v)n(ortex)p 2508 1997 V 169 w(SPEC95)p 2945
1997 V 196 w(An)g(ob)t(ject)e(orien)n(ted)h(database.)p
4054 1997 V 2040 2000 2016 4 v 2040 2143 a FA(T)-7 b(able)36
b(5:)55 b Fq(Benc)n(hmarks)34 b(used.)59 b(The)35 b(set)g(includes)g
(applica-)2040 2231 y(tions)22 b(from)g(the)h(Sp)r(ecIn)n(t,)h(Sp)r
(ecFP)-7 b(,)24 b(and)f(Mediab)r(enc)n(h)g(b)r(enc)n(h-)2040
2318 y(mark)j(suites,)h(as)g(w)n(ell)f(as)g(a)h(few)g(miscellaneous)f
(programs.)2115 2647 y FB(In)n(tuitiv)n(ely)-6 b(,)23
b(in)g(most)i(cases)g(the)e(training)h(input)f(data)h(ac)n(hiev)n(es)
2040 2734 y(a)18 b(b)r(etter)f(sp)r(eedup.)31 b(Because)18
b(Meta)g(Optimization)f(is)h(p)r(erformance-)2040 2821
y(driv)n(en,)j(it)f(selects)h(priorit)n(y)f(functions)h(that)f(excel)g
(on)g(the)g(training)2040 2908 y(input)34 b(data.)62
b(The)35 b(alternate)g(input)f(data)h(lik)n(ely)g(exercises)h(dif-)2040
2996 y(feren)n(t)g(paths)f(of)i(con)n(trol)f(\015o)n(w|paths)g(whic)n
(h)f(ma)n(y)h(ha)n(v)n(e)f(b)r(een)2040 3083 y(un)n(used)40
b(during)h(training.)80 b(Nonetheless,)46 b(in)41 b(ev)n(ery)f(case,)46
b(the)2040 3170 y(application-sp)r(eci\014c)30 b(priorit)n(y)f
(function)f(outp)r(erforms)i(the)f(base-)2040 3257 y(line.)2115
3344 y(Figure)c(5)g(sho)n(ws)h(\014tness)e(impro)n(v)n(emen)n(ts)g(o)n
(v)n(er)h(generations.)35 b(In)2040 3431 y(man)n(y)40
b(cases,)45 b(Meta)c(Optimization)f(\014nds)f(a)i(sup)r(erior)g
(priorit)n(y)2040 3519 y(function)30 b(quic)n(kly)-6
b(,)30 b(and)f(\014nds)g(only)h(marginal)h(impro)n(v)n(emen)n(ts)f(as)
2040 3606 y(the)e(ev)n(olution)g(con)n(tin)n(ues.)40
b(In)28 b(fact,)h(the)f(baseline)g(priorit)n(y)g(func-)2040
3693 y(tion)i(is)h(quic)n(kly)d(obscured)i(b)n(y)f(GP-generated)i
(expressions.)48 b(Of-)2040 3780 y(ten,)30 b(the)f Fx(initial)36
b FB(p)r(opulation)29 b(con)n(tains)h(at)g(least)g(one)f(expression)
2040 3867 y(that)g(outp)r(erforms)i(the)e(baseline.)47
b(This)30 b(means)g(that)f(b)n(y)f(simply)2040 3954 y(creating)i(and)e
(testing)h(399)h(random)f(expressions,)i(w)n(e)e(w)n(ere)g(able)2040
4042 y(to)23 b(\014nd)e(a)i(priorit)n(y)g(function)f(that)h(outp)r
(erformed)g(T)-6 b(rimaran's)24 b(for)2040 4129 y(the)h(giv)n(en)h(b)r
(enc)n(hmark.)2115 4216 y(Once)40 b(GP)g(has)h(disco)n(v)n(ered)f(a)h
(decen)n(t)e(solution,)45 b(the)40 b(searc)n(h)2040 4303
y(space)32 b(and)f(op)r(erator)h(dynamics)f(are)h(suc)n(h)e(that)h
(most)h(o\013spring)2040 4390 y(will)22 b(b)r(e)d(w)n(orse,)k(some)e
(will)g(b)r(e)f(equal)g(and)g(v)n(ery)f(few)i(turn)f(out)f(to)i(b)r(e)
2040 4477 y(b)r(etter.)40 b(This)29 b(seems)f(indicativ)n(e)g(of)g(a)g
(steep)g(hill)g(in)f(the)h(solution)2040 4565 y(space.)34
b(In)22 b(addition,)i(m)n(ultiple)f(reruns)f(using)h(di\013eren)n(t)f
(initializa-)2040 4652 y(tion)33 b(seeds)h(rev)n(eal)g(min)n(uscule)f
(di\013erences)h(in)f(p)r(erformance.)58 b(It)2040 4739
y(migh)n(t)23 b(b)r(e)g(a)g(space)g(in)g(whic)n(h)g(there)g(are)g(man)n
(y)f(p)r(ossible)i(solutions)2040 4826 y(asso)r(ciated)k(with)e(a)g
(giv)n(en)f(\014tness.)2063 4987 y Fe(5.4.2)90 b(Gener)o(al\255Purpose)
18 b(Priority)k(Functions)2115 5095 y FB(W)-6 b(e)29
b(divided)f(the)h(b)r(enc)n(hmarks)f(in)i(T)-6 b(able)29
b(5)h(in)n(to)f(t)n(w)n(o)h(sets)3897 5063 y Fs(6)3932
5095 y FB(:)41 b(a)2040 5182 y(training)33 b(set,)h(and)e(a)g(test)g
(set.)54 b(Instead)32 b(of)h(creating)g(a)g(priorit)n(y)p
2040 5242 797 4 v 2044 5296 a Fs(6)2078 5328 y Fr(W)l(e)17
b(c)o(hose)f(to)h(train)g(mostly)f(on)g(Mediab)q(enc)o(h)i
(applications)f(b)q(ecause)h(they)f(compile)f(and)2040
5378 y(run)k(faster)i(than)e(the)h(Sp)q(ec)g(b)q(enc)o(hmarks.)p
eop
%%Page: 8 8
8 7 bop -145 1186 a @beginspecial 81 @llx 63 @lly 747
@urx 513 @ury 2376 @rwi @clip @setspecial
%%BeginDocument: figs/predication_spec.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (predication_spec.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422201135-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 81 63 747 513
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
81 63 moveto 747 63 lineto 747 513 lineto 81 513 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
81 63 665 449 rectclip
[ 0 -1 1 0 18 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font NPKBFB+Arial
11 dict begin
/FontName /NPKBFB+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/NPKBFB+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 78 /N put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 160 /space put
pop
%%EndResource
[/N15/NPKBFB+Arial 1 TZ
%%BeginResource: font NPKBEP+Arial,Bold
11 dict begin
/FontName /NPKBEP+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/two 
<10bf3170560f9ea7e16bf7693df0cb4f75611840d7a72974788dc612e04a
7d391fa4118f20c60ca0210831c4216daf82822fd8577427332b85b36191
bafa300362603f7ac5486d82f6744735bd9aea952436a54773d0a34c3025
802ed04fffcb4fa74d75ac70e802cddfdbd6346360b0b1acf15e7ef6f0dd
ea8a6108bc3278173c6d152ded71a3f7dba5eefbc64d9c815a4795> ND 
/three 
<10bf3170435d0d440860530d539ff91fbeb84b45ccc7a1133230e64e009e
0c490ad4a8c72e30c66b9d7da2ebb61201fd5dbcf58b0c0488dc2a377321
5f26e0f7b61ae06bbd548a7c70db3930bb70d925be0576849d7017235523
559a7bd33c2b1cf718bf0b01521a2da1ae141319b8a7b7648826982192c9
9cac43d499c3346f8ae704779f7b332be818bd1aedb27938b45cc4303b57
6f7b6048a80721796cf703217479afeb4946fccc211036e97d76c144b665
49f485406b5a21bfa9b3b6ddd1fb25f39a00f379> ND 
/four 
<10bf31706c4c139ade6f8bf362e1c7a16dbcd949f520c66a4ee068301011
5c84fd3458c85a1ed0da84b737ec75e38936c9e254983ec49c73b3d2f1ea
186a33> ND 
/five 
<10bf317045bac03cbb36d436f7d39d6a14b5d4927fa1207089e9bb93285a
8a89fc87d0321f2870a2d7b1738d7f6f7c0a6dc828de6c5cacb5b2cd49e5
affe133d3a4281edfd13fbeaf4bb7b2bac2c239fe074efab974ff5c1a7d9
09cc004d88dae324a0c297547d69551cd69163ec55c49d6dc108adda14c4
40493fc655bef7d1c3df7be9f8747641> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/NPKBEP+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/NPKBEP+Arial,Bold 1 TZ
false setSA
n
94.8 726.3 330.6 -600.54 re
1 1 1 setrgbcolor
f
q
n
378.18 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
378.18 125.76 m
378.18 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
330.96 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
330.96 125.76 m
330.96 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
283.74 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
283.74 125.76 m
283.74 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
236.46 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
236.46 125.76 m
236.46 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
189.24 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
189.24 125.76 m
189.24 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
142.02 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
142.02 125.76 m
142.02 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
94.8 125.76 0.0599976 600.54 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
94.8 125.76 m
94.8 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
106.08 216.84 20.46 225.24 re
eoclip
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
94.8 125.76 330.6 600.54 re
0 0 0  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
114.66 138.6 310.74 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
286.56 198.66 138.84 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
274.26 258.72 151.14 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
330 318.78 95.4 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
325.26 378.84 100.14 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
314.88 438.9 110.52 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
230.82 498.9 194.58 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
322.44 558.96 102.96 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
316.8 619.02 108.6 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
279.54 679.08 145.86 17.1 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
318.18 155.76 107.22 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
290.16 215.82 135.24 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
294.78 275.88 130.62 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
330.66 335.94 94.74 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
325.02 396 100.38 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
330.96 456.06 94.44 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
309.54 516.06 115.86 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
324.48 576.12 100.92 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
262.08 636.18 163.32 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
309.54 696.24 115.86 17.1 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
0.0599976 w
n
94.8 125.76 m
425.4 125.76 l
425.4 121.2 m
425.4 125.76 l
378.18 121.2 m
378.18 125.76 l
330.96 121.2 m
330.96 125.76 l
283.74 121.2 m
283.74 125.76 l
236.46 121.2 m
236.46 125.76 l
189.24 121.2 m
189.24 125.76 l
142.02 121.2 m
142.02 125.76 l
94.8 121.2 m
94.8 125.76 l
425.4 125.76 m
425.4 726.3 l
429.96 125.76 m
425.4 125.76 l
429.96 185.82 m
425.4 185.82 l
429.96 245.88 m
425.4 245.88 l
429.96 305.94 m
425.4 305.94 l
429.96 366 m
425.4 366 l
429.96 426.06 m
425.4 426.06 l
429.96 486.06 m
425.4 486.06 l
429.96 546.12 m
425.4 546.12 l
429.96 606.18 m
425.4 606.18 l
429.96 666.24 m
425.4 666.24 l
429.96 726.3 m
425.4 726.3 l
S
1 1 1  setrgbcolor
306.48 691.26 m
/N13 -12 Tf
(1.54)
[-6.66724 -3.33124 -6.66724 -6.66724 ] pdfxs
336.48 708.42 m
(1.23)
[-6.66724 -3.33124 -6.66724 -6.66724 ] pdfxs
0 0 0  setrgbcolor
430.2 106.32 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(0) show
382.98 94.0205 m
(0.5) show
335.76 106.32 m
(1) show
288.539 94.0205 m
(1.5) show
241.259 106.32 m
(2) show
194.039 94.0205 m
(2.5) show
146.818 106.32 m
(3) show
99.5981 94.0205 m
(3.5) show
529.38 160.44 m
/N15 -14.76 Tf
(129) show
(.c)
[-4.10778 -7.3845 ] pdfxs
(o) show
(m)
[-12.2995 ] pdfxs
(p) show
(r)
[-4.91947 ] pdfxs
(e) show
(ss)
[-7.3845 -7.3845 ] pdfxs
517.979 220.5 m
(g721encode)
[-8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 -8.21691 -8.21691 -8.21691 ] pdfxs
517.979 280.56 m
(g721decode)
[-8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 -8.21691 -8.21691 -8.21691 ] pdfxs
493.259 340.62 m
(hu) show
(ff)
[-4.10778 -4.10778 ] pdfxs
(_de) show
(c) show
493.259 400.68 m
(hu) show
(ff)
[-4.10778 -4.10778 ] pdfxs
(_en) show
(c) show
503.999 460.74 m
(rawcaudio)
[-4.92668 -8.21826 -10.6682 -7.39171 -8.21826 -8.21826 -8.21826 -3.28821 -8.21826 ] pdfxs
504.838 520.8 m
(rawdaudio)
[-4.92826 -8.21984 -10.6698 -8.21984 -8.21984 -8.21984 -8.21984 -3.28978 -8.21984 ] pdfxs
468.598 580.86 m
(t)
[-4.10485 ] pdfxs
(oas) show
(t) show
505.618 640.92 m
(mpeg2dec)
[-12.3053 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 ] pdfxs
491.637 700.98 m
(Average)
[-9.85223 -7.38743 -8.21399 -4.9224 -8.21399 -8.21399 -8.21399 ] pdfxs
291.238 84.0608 m
/N13 -14.76 Tf
(Speedup)
[-9.83895 -9.01239 -8.2007 -8.2007 -9.01239 -9.01239 -9.01239 ] pdfxs
n
106.14 442.02 20.4 -225.12 re
1 1 1  setrgbcolor
f
n
106.08 216.84 20.46 225.18 re
0 0 0  setrgbcolor
S
0.960007 w
n
112.32 221.28 9.06 9.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
121.86 233.82 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(Train data set) show
n
112.32 330.78 9.06 9.06 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
121.86 343.32 m
(Novel data set) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 1356 a FA(Figure)30 b(4:)41 b Fq(Hyp)r(erblo)r(c)n(k)
29 b(sp)r(ecialization.)36 b(This)28 b(graph)f(sho)n(ws)-152
1444 y(sp)r(eedups)i(obtained)d(b)n(y)h(training)e(on)i(a)g(p)r(er-b)r
(enc)n(hmarks)g(ba-)-152 1531 y(sis.)34 b(The)23 b(dark)g(colored)f
(bars)g(are)g(executions)h(using)g(the)g(same)-152 1618
y(data)32 b(set)g(on)h(whic)n(h)f(the)h(sp)r(ecialized)f(priorit)n(y)f
(function)h(w)n(as)-152 1705 y(trained.)47 b(The)31 b(ligh)n(t)e
(colored)h(bars)h(are)f(executions)h(that)f(use)-152
1792 y(an)d(alternate,)e(or)i(no)n(v)n(el)f(data)g(set.)-145
3204 y @beginspecial 81 @llx 63 @lly 756 @urx 504 @ury
2376 @rwi @clip @setspecial
%%BeginDocument: figs/pred_evolution.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (pred_evolution.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422200821-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 81 63 756 504
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
81 63 moveto 756 63 lineto 756 504 lineto 81 504 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
81 63 675 441 rectclip
[ 0 -1 1 0 18 585.36 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font NMKOKJ+Arial,Bold
11 dict begin
/FontName /NMKOKJ+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/G 
<10bf317049853377a7c14408213f8cb0d7a0c9f167e5d8c5ab81d02a6368
40fe7690a6220dd951ed1475afe94af1dca8cd00af32527ccdb4443a6f1b
0f1d9f948f41689d552617fbb202a848e943cafeef773c524f107cecac26
dd1073fd79085c0ccd4cc17b02b3c84d6937bb8c88ee0f58f0488cae3848
b481c280d21ec8fe3faf9183edbd586a23518efaddb855a9de63fa94b398
a92d1943acefbb9697> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/NMKOKJ+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%%EndResource
[/N26/NMKOKJ+Arial,Bold 1 TZ
%%BeginResource: font NMKOJN+Arial
11 dict begin
/FontName /NMKOJN+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/NMKOJN+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
pop
%%EndResource
[/N22/NMKOJN+Arial 1 TZ
false setSA
n
92.94 724.68 386.94 -611.52 re
1 1 1 setrgbcolor
f
q
n
402.48 113.16 0.0599976 611.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
402.48 113.16 m
402.48 724.68 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
325.08 113.16 0.0599976 611.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
325.08 113.16 m
325.08 724.68 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
92.7 113.16 387.42 611.52 re
152.58 610.2 134.4 104.28 re
eoclip
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
247.74 113.16 m
247.74 724.68 l
170.34 113.16 m
170.34 724.68 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
92.94 113.16 0.0599976 611.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
92.94 113.16 m
92.94 724.68 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
152.58 610.2 134.4 104.28 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
92.94 113.16 386.94 611.52 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
1 J
0 j
0.0599976 w
10 M
[] 0 d
n
92.94 113.16 m
479.88 113.16 l
479.88 109.44 m
479.88 113.16 l
402.48 109.44 m
402.48 113.16 l
325.08 109.44 m
325.08 113.16 l
247.74 109.44 m
247.74 113.16 l
170.34 109.44 m
170.34 113.16 l
92.94 109.44 m
92.94 113.16 l
479.88 113.16 m
479.88 724.68 l
483.6 113.16 m
479.88 113.16 l
483.6 174.3 m
479.88 174.3 l
483.6 235.44 m
479.88 235.44 l
483.6 296.64 m
479.88 296.64 l
483.6 357.78 m
479.88 357.78 l
483.6 418.92 m
479.88 418.92 l
483.6 480.06 m
479.88 480.06 l
483.6 541.2 m
479.88 541.2 l
483.6 602.4 m
479.88 602.4 l
483.6 663.54 m
479.88 663.54 l
483.6 724.68 m
479.88 724.68 l
0 0 0  setrgbcolor
S
1 j
0.960007 w
n
479.88 113.16 m
136.8 125.4 l
134.46 162.06 l
134.28 272.16 l
129.18 284.4 l
128.94 382.2 l
128.22 406.68 l
125.64 443.4 l
125.64 724.68 l
479.88 113.16 m
400.02 125.4 l
397.14 137.64 l
396 149.88 l
391.8 211.02 l
388.38 284.4 l
387.6 321.06 l
387.6 724.68 l
479.88 113.16 m
457.32 125.4 l
457.2 137.64 l
457.14 149.88 l
457.14 162.06 l
457.08 198.78 l
457.08 223.26 l
457.02 235.44 l
457.02 333.3 l
456.96 394.44 l
456.96 541.2 l
456.9 626.82 l
456.9 724.68 l
S
n
479.88 113.16 m
468.18 125.4 l
464.46 149.88 l
464.46 724.68 l
0.199997 0.199997 0.199997  setrgbcolor
S
n
479.88 113.16 m
343.44 125.4 l
316.32 174.3 l
316.32 724.68 l
479.88 113.16 m
469.98 125.4 l
469.98 149.88 l
468.84 162.06 l
468.78 174.3 l
468.72 223.26 l
468.66 235.44 l
467.28 480.06 l
467.28 724.68 l
0.501999 0.501999 0.501999  setrgbcolor
S
n
479.88 113.16 m
471.48 125.4 l
470.88 137.64 l
470.7 162.06 l
470.7 724.68 l
0 0 0  setrgbcolor
S
n
479.88 113.16 m
478.44 125.4 l
478.44 724.68 l
0.753006 0.753006 0.753006  setrgbcolor
S
n
477.36 113.16 m
479.88 115.68 l
482.4 113.16 l
479.88 110.64 l
477.36 113.16 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
134.28 125.4 m
136.8 127.92 l
139.32 125.4 l
136.8 122.88 l
134.28 125.4 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
131.94 162.06 m
134.46 164.58 l
136.98 162.06 l
134.46 159.54 l
131.94 162.06 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
131.76 272.16 m
134.28 274.68 l
136.8 272.16 l
134.28 269.64 l
131.76 272.16 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
126.66 284.4 m
129.18 286.92 l
131.7 284.4 l
129.18 281.88 l
126.66 284.4 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
126.42 382.2 m
128.94 384.72 l
131.46 382.2 l
128.94 379.68 l
126.42 382.2 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
125.7 406.68 m
128.22 409.2 l
130.74 406.68 l
128.22 404.16 l
125.7 406.68 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
123.12 443.4 m
125.64 445.92 l
128.16 443.4 l
125.64 440.88 l
123.12 443.4 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
123.12 504.54 m
125.64 507.06 l
128.16 504.54 l
125.64 502.02 l
123.12 504.54 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
n
123.12 724.68 m
125.64 727.2 l
128.16 724.68 l
125.64 722.16 l
123.12 724.68 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
q
n
471.96 110.64 10.44 10.44 re
W
n
0 j
n
477.36 110.64 4.97998 4.98 re
S
Q
0 j
n
397.5 122.88 4.97998 4.98 re
394.62 135.12 4.97998 4.98 re
393.48 147.36 4.97998 4.98 re
389.28 208.5 4.98001 4.98 re
385.86 281.88 4.97998 4.97998 re
385.08 318.54 4.97998 4.97998 re
S
q
n
379.68 716.76 15.84 10.5 re
W
n
n
385.08 722.16 4.97998 4.97998 re
S
Q
1 j
n
477.36 113.16 m
482.4 115.68 l
482.4 110.64 l
477.36 113.16 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.8 125.4 m
459.84 127.92 l
459.84 122.88 l
454.8 125.4 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.68 137.64 m
459.72 140.16 l
459.72 135.12 l
454.68 137.64 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.62 149.88 m
459.66 152.4 l
459.66 147.36 l
454.62 149.88 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.62 162.06 m
459.66 164.58 l
459.66 159.54 l
454.62 162.06 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.56 198.78 m
459.6 201.3 l
459.6 196.26 l
454.56 198.78 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.56 223.26 m
459.6 225.78 l
459.6 220.74 l
454.56 223.26 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.5 235.44 m
459.54 237.96 l
459.54 232.92 l
454.5 235.44 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.5 333.3 m
459.54 335.82 l
459.54 330.78 l
454.5 333.3 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.44 394.44 m
459.48 396.96 l
459.48 391.92 l
454.44 394.44 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.44 541.2 m
459.48 543.72 l
459.48 538.68 l
454.44 541.2 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.38 626.82 m
459.42 629.34 l
459.42 624.3 l
454.38 626.82 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.38 687.96 m
459.42 690.48 l
459.42 685.44 l
454.38 687.96 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
n
454.38 724.68 m
459.42 727.2 l
459.42 722.16 l
454.38 724.68 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
q
n
476.82 110.64 3.66 3.12 re
W
n
n
479.88 113.16 m
477.36 110.64 l
0.199997 0.199997 0.199997  setrgbcolor
S
Q
q
n
479.34 112.62 3.06 3.66 re
W
n
n
479.88 113.16 m
482.4 115.68 l
0.199997 0.199997 0.199997  setrgbcolor
S
Q
q
n
479.34 110.64 3.06 3.12 re
W
n
n
479.88 113.16 m
482.4 110.64 l
0.199997 0.199997 0.199997  setrgbcolor
S
Q
n
479.88 113.16 m
477.36 115.68 l
468.18 125.4 m
465.66 122.88 l
468.18 125.4 m
470.7 127.92 l
468.18 125.4 m
470.7 122.88 l
468.18 125.4 m
465.66 127.92 l
464.46 149.88 m
461.94 147.36 l
464.46 149.88 m
466.98 152.4 l
464.46 149.88 m
466.98 147.36 l
464.46 149.88 m
461.94 152.4 l
464.46 724.68 m
461.94 722.16 l
0.199997 0.199997 0.199997  setrgbcolor
S
q
n
463.92 724.14 3.66 3.12 re
W
n
n
464.46 724.68 m
466.98 727.2 l
S
Q
n
464.46 724.68 m
466.98 722.16 l
S
q
n
461.4 724.14 3.66 3.12 re
W
n
n
464.46 724.68 m
461.94 727.2 l
S
Q
q
n
476.82 110.64 3.66 3.12 re
W
n
n
479.88 113.16 m
477.36 110.64 l
0.501999 0.501999 0.501999  setrgbcolor
S
Q
q
n
479.34 112.62 3.06 3.66 re
W
n
n
479.88 113.16 m
482.4 115.68 l
0.501999 0.501999 0.501999  setrgbcolor
S
Q
q
n
479.34 110.64 3.06 3.12 re
W
n
n
479.88 113.16 m
482.4 110.64 l
0.501999 0.501999 0.501999  setrgbcolor
S
Q
n
479.88 113.16 m
477.36 115.68 l
479.88 113.16 m
477.36 113.16 l
0.501999 0.501999 0.501999  setrgbcolor
S
q
n
479.34 112.62 3.06 1.14 re
W
n
n
479.88 113.16 m
482.4 113.16 l
S
Q
n
343.44 125.4 m
340.92 122.88 l
343.44 125.4 m
345.96 127.92 l
343.44 125.4 m
345.96 122.88 l
343.44 125.4 m
340.92 127.92 l
343.44 125.4 m
340.92 125.4 l
343.44 125.4 m
345.96 125.4 l
316.32 174.3 m
313.8 171.78 l
316.32 174.3 m
318.84 176.82 l
316.32 174.3 m
318.84 171.78 l
316.32 174.3 m
313.8 176.82 l
316.32 174.3 m
313.8 174.3 l
316.32 174.3 m
318.84 174.3 l
316.32 724.68 m
313.8 722.16 l
S
q
n
315.78 724.14 3.66 3.12 re
W
n
n
316.32 724.68 m
318.84 727.2 l
S
Q
n
316.32 724.68 m
318.84 722.16 l
S
q
n
313.26 724.14 3.66 3.12 re
W
n
n
316.32 724.68 m
313.8 727.2 l
S
Q
n
316.32 724.68 m
313.8 724.68 l
316.32 724.68 m
318.84 724.68 l
S
n
479.82 115.62 m
478.44 115.62 477.36 114.48 477.36 113.1 c
477.36 111.72 478.44 110.64 479.82 110.64 c
481.2 110.64 482.34 111.72 482.34 113.1 c
482.34 114.48 481.2 115.62 479.82 115.62 c
h
q
eofill
Q
S
n
469.92 127.86 m
468.54 127.86 467.46 126.72 467.46 125.34 c
467.46 123.96 468.54 122.88 469.92 122.88 c
471.3 122.88 472.44 123.96 472.44 125.34 c
472.44 126.72 471.3 127.86 469.92 127.86 c
h
q
eofill
Q
S
n
469.92 152.34 m
468.54 152.34 467.46 151.2 467.46 149.82 c
467.46 148.44 468.54 147.36 469.92 147.36 c
471.3 147.36 472.44 148.44 472.44 149.82 c
472.44 151.2 471.3 152.34 469.92 152.34 c
h
q
eofill
Q
S
n
468.78 164.52 m
467.4 164.52 466.32 163.38 466.32 162 c
466.32 160.62 467.4 159.54 468.78 159.54 c
470.16 159.54 471.3 160.62 471.3 162 c
471.3 163.38 470.16 164.52 468.78 164.52 c
h
q
eofill
Q
S
n
468.72 176.76 m
467.34 176.76 466.26 175.62 466.26 174.24 c
466.26 172.86 467.34 171.78 468.72 171.78 c
470.1 171.78 471.24 172.86 471.24 174.24 c
471.24 175.62 470.1 176.76 468.72 176.76 c
h
q
eofill
Q
S
n
468.66 225.72 m
467.28 225.72 466.2 224.58 466.2 223.2 c
466.2 221.82 467.28 220.74 468.66 220.74 c
470.04 220.74 471.18 221.82 471.18 223.2 c
471.18 224.58 470.04 225.72 468.66 225.72 c
h
q
eofill
Q
S
n
468.6 237.9 m
467.22 237.9 466.14 236.76 466.14 235.38 c
466.14 234 467.22 232.92 468.6 232.92 c
469.98 232.92 471.12 234 471.12 235.38 c
471.12 236.76 469.98 237.9 468.6 237.9 c
h
q
eofill
Q
S
n
467.22 482.52 m
465.84 482.52 464.76 481.38 464.76 480 c
464.76 478.62 465.84 477.54 467.22 477.54 c
468.6 477.54 469.74 478.62 469.74 480 c
469.74 481.38 468.6 482.52 467.22 482.52 c
h
q
eofill
Q
S
n
467.22 727.14 m
465.84 727.14 464.76 726 464.76 724.62 c
464.76 723.24 465.84 722.16 467.22 722.16 c
468.6 722.16 469.74 723.24 469.74 724.62 c
469.74 726 468.6 727.14 467.22 727.14 c
h
q
eofill
Q
S
n
479.88 113.16 m
477.36 113.16 l
0 0 0  setrgbcolor
S
q
n
479.34 112.62 3.06 1.14 re
W
n
n
479.88 113.16 m
482.4 113.16 l
S
Q
q
n
479.34 110.64 1.13998 3.12 re
W
n
n
479.88 113.16 m
479.88 110.64 l
S
Q
n
479.88 113.16 m
479.88 115.68 l
471.48 125.4 m
468.96 125.4 l
471.48 125.4 m
474 125.4 l
471.48 125.4 m
471.48 122.88 l
471.48 125.4 m
471.48 127.92 l
470.88 137.64 m
468.36 137.64 l
470.88 137.64 m
473.4 137.64 l
470.88 137.64 m
470.88 135.12 l
470.88 137.64 m
470.88 140.16 l
470.7 162.06 m
468.18 162.06 l
470.7 162.06 m
473.22 162.06 l
470.7 162.06 m
470.7 159.54 l
470.7 162.06 m
470.7 164.58 l
470.7 235.44 m
468.18 235.44 l
470.7 235.44 m
473.22 235.44 l
470.7 235.44 m
470.7 232.92 l
470.7 235.44 m
470.7 237.96 l
470.7 284.4 m
468.18 284.4 l
470.7 284.4 m
473.22 284.4 l
470.7 284.4 m
470.7 281.88 l
470.7 284.4 m
470.7 286.92 l
470.7 467.82 m
468.18 467.82 l
470.7 467.82 m
473.22 467.82 l
470.7 467.82 m
470.7 465.3 l
470.7 467.82 m
470.7 470.34 l
470.7 724.68 m
468.18 724.68 l
470.7 724.68 m
473.22 724.68 l
470.7 724.68 m
470.7 722.16 l
S
q
n
470.16 724.14 1.13998 3.12 re
W
n
n
470.7 724.68 m
470.7 727.2 l
S
Q
0 j
n
477.36 110.64 4.97998 4.98 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
0.753006 0.753006 0.753006  setrgbcolor
S
n
475.92 122.88 4.97998 4.98 re
q
eofill
Q
S
n
475.92 208.5 4.97998 4.98 re
q
eofill
Q
S
n
475.92 355.26 4.97998 4.97998 re
q
eofill
Q
S
n
475.92 722.16 4.97998 4.97998 re
q
eofill
Q
S
0 0 0  setrgbcolor
483.66 97.38 m
/N22 [0 12 -12 0 0 0] Tf
(1) show
406.26 87.3599 m
(1.5) show
328.86 97.38 m
(2) show
251.52 87.3599 m
(2.5) show
174.12 97.38 m
(3) show
96.7201 87.3599 m
(3.5) show
501.12 109.86 m
(05)
[61.1376 57.7788 ] pdfys
(1) show
(0)
[54.5244 ] pdfys
(1) show
(5)
[54.4644 ] pdfys
(2) show
(0)
[54.4644 ] pdfys
(2) show
(5)
[54.4644 ] pdfys
(3) show
(0)
[54.4644 ] pdfys
(3) show
(5)
[54.5244 ] pdfys
(4) show
(0)
[54.4644 ] pdfys
(4) show
(5)
[54.4644 ] pdfys
(50) show
521.46 387.24 m
/N26 [0 12 -12 0 0 0] Tf
(Generation) show
311.7 79.14 m
/N26 -12 Tf
(Speedup)
[-7.99072 -7.31873 -6.65881 -6.65881 -7.31873 -7.31873 -7.31873 ] pdfxs
n
152.64 714.42 134.34 -104.16 re
1 1 1  setrgbcolor
f
0.0599976 w
n
152.58 610.2 134.4 104.22 re
0 0 0  setrgbcolor
S
1 j
0.960007 w
n
161.28 613.92 m
161.28 633.9 l
S
n
158.76 623.88 m
161.28 626.4 l
163.8 623.88 l
161.28 621.36 l
158.76 623.88 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
S
165.36 636.66 m
/N22 [0 11.76 -11.76 0 0 0] Tf
(129.compress) show
n
178.08 613.92 m
178.08 633.9 l
S
0 j
n
175.56 621.36 4.98 4.97998 re
S
182.16 636.66 m
(g721decode) show
1 j
n
194.88 613.92 m
194.88 633.9 l
S
n
192.36 623.88 m
197.4 626.4 l
197.4 621.36 l
192.36 623.88 l
h
q
1 1 1  setrgbcolor
eofill
Q
S
198.96 636.66 m
(mpeg2dec) show
n
211.68 613.92 m
211.68 633.9 l
211.68 623.88 m
209.16 621.36 l
211.68 623.88 m
214.2 626.4 l
211.68 623.88 m
214.2 621.36 l
211.68 623.88 m
209.16 626.4 l
0.199997 0.199997 0.199997  setrgbcolor
S
0 0 0  setrgbcolor
215.76 636.66 m
(rawcaudio) show
n
228.48 613.92 m
228.48 633.9 l
228.48 623.88 m
225.96 621.36 l
228.48 623.88 m
231 626.4 l
228.48 623.88 m
231 621.36 l
228.48 623.88 m
225.96 626.4 l
228.48 623.88 m
225.96 623.88 l
228.48 623.88 m
231 623.88 l
0.501999 0.501999 0.501999  setrgbcolor
S
0 0 0  setrgbcolor
232.56 636.66 m
(rawdaudio) show
n
245.28 613.92 m
245.28 633.9 l
0.501999 0.501999 0.501999  setrgbcolor
S
n
245.22 626.34 m
243.84 626.34 242.76 625.2 242.76 623.82 c
242.76 622.44 243.84 621.36 245.22 621.36 c
246.6 621.36 247.74 622.44 247.74 623.82 c
247.74 625.2 246.6 626.34 245.22 626.34 c
h
q
eofill
Q
S
0 0 0  setrgbcolor
249.36 636.66 m
(toast) show
n
262.08 613.92 m
262.08 633.9 l
262.08 623.88 m
259.56 623.88 l
262.08 623.88 m
264.6 623.88 l
262.08 623.88 m
262.08 621.36 l
262.08 623.88 m
262.08 626.4 l
S
266.16 636.66 m
(huff_enc) show
n
278.88 613.92 m
278.88 633.9 l
0.753006 0.753006 0.753006  setrgbcolor
S
0 j
n
276.36 621.36 4.97998 4.97998 re
q
eofill
Q
S
0 0 0  setrgbcolor
282.96 636.66 m
(huff_dec) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 3374 a FA(Figure)32 b(5:)44 b Fq(Hyp)r(erblo)r(c)n(k)
29 b(formation)e(ev)n(olution.)41 b(This)29 b(\014gure)-152
3462 y(graphs)g(the)h(b)r(est)g(\014tness)g(o)n(v)n(er)e(generations.)
42 b(F)-7 b(or)29 b(this)g(prob-)-152 3549 y(lem,)24
b(Meta)f(Optimization)f(quic)n(kly)h(\014nds)h(a)g(priorit)n(y)d
(function)-152 3636 y(that)26 b(outp)r(erforms)h(T)-7
b(rimaran's)24 b(baseline)j(heuristic.)-152 3896 y FB(function)g(for)g
(eac)n(h)f(b)r(enc)n(hmark,)g(in)g(this)g(section)h(w)n(e)g(aim)f(to)h
(\014nd)-152 3983 y(one)d(priorit)n(y)f(function)g(that)g(w)n(orks)g(w)
n(ell)i(for)e(all)i(the)d(b)r(enc)n(hmarks)-152 4070
y(in)k(the)e(training)i(set.)35 b(T)-6 b(o)26 b(this)f(end,)g(w)n(e)h
(ev)n(olv)n(e)f(o)n(v)n(er)g(the)g(training)-152 4157
y(set)h(using)g(dynamic)f(subset)h(selection)h([9].)-77
4244 y(Figure)e(6)f(sho)n(ws)h(the)e(results)i(of)g(applying)f(the)f
(single)i(b)r(est)f(pri-)-152 4332 y(orit)n(y)32 b(function)f(to)h(the)
f(b)r(enc)n(hmarks)f(in)i(the)f(training)h(set.)52 b(The)-152
4419 y(dark)37 b(bar)g(asso)r(ciated)h(with)g(eac)n(h)f(b)r(enc)n
(hmark)f(is)h(the)f(sp)r(eedup)-152 4506 y(o)n(v)n(er)23
b(T)-6 b(rimaran's)24 b(base)f(heuristic)g(when)g(the)f(training)i
(input)e(data)-152 4593 y(is)k(used.)34 b(This)25 b(data)h(set)f
(yields)g(a)g(44\045)h(impro)n(v)n(emen)n(t.)33 b(The)25
b(ligh)n(t)-152 4680 y(bar)c(sho)n(ws)g(results)g(when)g(no)n(v)n(el)f
(input)g(data)h(is)g(used.)32 b(The)21 b(o)n(v)n(erall)-152
4767 y(impro)n(v)n(emen)n(t)k(for)i(this)f(set)f(is)i(25\045.)-77
4855 y(It)c(is)h(in)n(teresting)g(that,)g(on)f(a)n(v)n(erage,)i(the)e
(general-purp)r(ose)h(pri-)-152 4942 y(orit)n(y)32 b(function)f(outp)r
(erforms)h(the)f(application-sp)r(eci\014c)i(priorit)n(y)-152
5029 y(function)20 b(on)f(the)g(no)n(v)n(el)g(data)h(set.)32
b(The)20 b(general-purp)r(ose)g(solution)-152 5116 y(is)25
b(less)g(susceptible)g(to)g(v)l(ariations)g(in)f(input)f(data)i(b)r
(ecause)f(it)h(w)n(as)-152 5203 y(trained)h(to)g(b)r(e)f(more)i
(general.)-77 5290 y(W)-6 b(e)17 b(then)f(apply)h(the)g(resulting)h
(priorit)n(y)f(function)h(to)f(the)g(b)r(enc)n(h-)-152
5378 y(marks)39 b(in)f(the)h(test)f(set.)74 b(The)38
b(mac)n(hine-learning)i(comm)n(unit)n(y)2046 1195 y @beginspecial
81 @llx 63 @lly 756 @urx 522 @ury 2376 @rwi @clip @setspecial
%%BeginDocument: figs/pred_trainset.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (training.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422210610-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 81 63 756 522
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
81 63 moveto 756 63 lineto 756 522 lineto 81 522 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
81 63 675 459 rectclip
[ 0 -1 1 0 18 603.36 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font BBJMDN+Arial
11 dict begin
/FontName /BBJMDN+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BBJMDN+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 78 /N put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 160 /space put
pop
%%EndResource
[/N15/BBJMDN+Arial 1 TZ
%%BeginResource: font BBJMDB+Arial,Bold
11 dict begin
/FontName /BBJMDB+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/two 
<10bf3170560f9ea7e16bf7693df0cb4f75611840d7a72974788dc612e04a
7d391fa4118f20c60ca0210831c4216daf82822fd8577427332b85b36191
bafa300362603f7ac5486d82f6744735bd9aea952436a54773d0a34c3025
802ed04fffcb4fa74d75ac70e802cddfdbd6346360b0b1acf15e7ef6f0dd
ea8a6108bc3278173c6d152ded71a3f7dba5eefbc64d9c815a4795> ND 
/four 
<10bf31706c4c139ade6f8bf362e1c7a16dbcd949f520c66a4ee068301011
5c84fd3458c85a1ed0da84b737ec75e38936c9e254983ec49c73b3d2f1ea
186a33> ND 
/five 
<10bf317045bac03cbb36d436f7d39d6a14b5d4927fa1207089e9bb93285a
8a89fc87d0321f2870a2d7b1738d7f6f7c0a6dc828de6c5cacb5b2cd49e5
affe133d3a4281edfd13fbeaf4bb7b2bac2c239fe074efab974ff5c1a7d9
09cc004d88dae324a0c297547d69551cd69163ec55c49d6dc108adda14c4
40493fc655bef7d1c3df7be9f8747641> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BBJMDB+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
dup 160 /space put
pop
%%EndResource
[/N13/BBJMDB+Arial,Bold 1 TZ
q
n
381.18 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
381.18 137.82 m
381.18 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
332.82 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
332.82 137.82 m
332.82 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
284.46 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
284.46 137.82 m
284.46 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
236.1 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
236.1 137.82 m
236.1 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
187.74 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
187.74 137.82 m
187.74 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
139.38 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
139.38 137.82 m
139.38 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
91.02 137.82 0.0599976 595.2 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
false setSA
n
91.02 137.82 m
91.02 733.02 l
0 0 0 setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
99.9 216.84 24.42 274.02 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
false setSA
n
91.02 137.82 338.52 595.2 re
0.501999 0.501999 0.501999 setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
false setSA
n
226.32 144.9 203.22 15.72 re
q
0.199997 0.199997 0.199997 setrgbcolor
eofill
Q
0 0 0 setrgbcolor
S
n
332.82 190.68 96.72 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
281.64 236.46 147.9 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
298.56 282.24 130.98 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
247.56 328.02 181.98 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
340.14 373.8 89.4 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
329.28 419.58 100.26 15.78 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
320.22 465.42 109.32 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
314.88 511.2 114.66 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
127.14 556.98 302.4 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
331.26 602.76 98.28 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
331.98 648.54 97.56 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
290.16 694.32 139.38 15.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
233.16 160.68 196.38 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
332.7 206.46 96.84 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
283.98 252.24 145.56 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
299.4 298.02 130.14 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
312.54 343.8 117 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
332.82 389.58 96.72 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
330.72 435.42 98.82 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
263.76 481.2 165.78 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
333.48 526.98 96.06 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
320.04 572.76 109.5 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
331.14 618.54 98.4 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
332.52 664.32 97.02 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
n
308.88 710.1 120.66 15.72 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
0.0599976 w
n
91.02 137.82 m
429.54 137.82 l
429.54 132.06 m
429.54 137.82 l
381.18 132.06 m
381.18 137.82 l
332.82 132.06 m
332.82 137.82 l
284.46 132.06 m
284.46 137.82 l
236.1 132.06 m
236.1 137.82 l
187.74 132.06 m
187.74 137.82 l
139.38 132.06 m
139.38 137.82 l
91.02 132.06 m
91.02 137.82 l
429.54 137.82 m
429.54 733.02 l
434.1 137.82 m
429.54 137.82 l
434.1 183.6 m
429.54 183.6 l
434.1 229.38 m
429.54 229.38 l
434.1 275.16 m
429.54 275.16 l
434.1 320.94 m
429.54 320.94 l
434.1 366.72 m
429.54 366.72 l
434.1 412.5 m
429.54 412.5 l
434.1 458.34 m
429.54 458.34 l
434.1 504.12 m
429.54 504.12 l
434.1 549.9 m
429.54 549.9 l
434.1 595.68 m
429.54 595.68 l
434.1 641.46 m
429.54 641.46 l
434.1 687.24 m
429.54 687.24 l
434.1 733.02 m
429.54 733.02 l
S
1 1 1  setrgbcolor
322.92 706.68 m
/N13 -14.76 Tf
(1) show
(.)
[-4.10778 ] pdfxs
(44) show
345.481 724.261 m
(1) show
(.)
[-4.10778 ] pdfxs
(25) show
0 0 0  setrgbcolor
435.78 98.04 m
/N15 [0 18.48 -18.48 0 0 0] Tf
(0.0) show
387.42 98.04 m
(0.5) show
339.059 98.04 m
(1.0) show
290.699 98.04 m
(1.5) show
242.339 98.04 m
(2.0) show
193.979 98.04 m
(2.5) show
145.618 98.04 m
(3.0) show
97.2582 98.04 m
(3.5) show
505.68 165.42 m
/N15 -14.76 Tf
(decodrle4)
[-8.21691 -8.21691 -7.39036 -8.21691 -8.21691 -4.92533 -3.28686 -8.21691 -8.21691 ] pdfxs
489.24 211.199 m
(codrle4)
[-7.39036 -8.21691 -8.21691 -4.92533 -3.28686 -8.21691 -8.21691 ] pdfxs
522.12 256.979 m
(g721decode)
[-8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 -8.21691 -8.21691 -8.21691 ] pdfxs
522.12 302.759 m
(g721encode)
[-8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 -8.21691 -8.21691 -8.21691 ] pdfxs
508.98 348.538 m
(rawdaudio)
[-4.92826 -8.21984 -10.6698 -8.21984 -8.21984 -8.21984 -8.21984 -3.28978 -8.21984 ] pdfxs
508.14 394.318 m
(rawcaudio)
[-4.92668 -8.21826 -10.6682 -7.39171 -8.21826 -8.21826 -8.21826 -3.28821 -8.21826 ] pdfxs
472.74 440.097 m
(t)
[-4.10485 ] pdfxs
(oas) show
(t) show
509.76 485.877 m
(mpeg2dec)
[-12.3053 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 ] pdfxs
528.599 531.656 m
(124.m88ksim)
[-8.21241 -8.21241 -8.21241 -4.10913 -12.3008 -8.21241 -8.21241 -7.38585 -7.38585 -3.28235 -12.3008 
] pdfxs
533.519 577.436 m
(129.compress)
[-8.21241 -8.21241 -8.21241 -4.10913 -7.38585 -8.21241 -12.3008 -8.21241 -4.92082 -8.21241 -7.38585 
-7.38585 ] pdfxs
497.398 623.215 m
(huff_enc)
[-8.21241 -8.21241 -4.10913 -4.10913 -8.21241 -8.21241 -8.21241 -7.38585 ] pdfxs
497.398 668.995 m
(huff_dec)
[-8.21241 -8.21241 -4.10913 -4.10913 -8.21241 -8.21241 -8.21241 -7.38585 ] pdfxs
495.777 714.774 m
(Average)
[-9.85223 -7.38743 -8.21399 -4.9224 -8.21399 -8.21399 -8.21399 ] pdfxs
298.86 86.52 m
/N13 -18.24 Tf
(Speedup)
[-12.1787 -11.1573 -10.1542 -10.1542 -11.1573 -11.1573 -11.1573 ] pdfxs
n
99.96 490.8 24.36 -273.9 re
1 1 1  setrgbcolor
f
n
99.9 216.84 24.42 273.96 re
0 0 0  setrgbcolor
S
0.960007 w
n
107.4 222.06 11.22 11.22 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
119.1 237.6 m
/N15 [0 18 -18 0 0 0] Tf
(Train data set) show
n
107.4 355.5 11.22 11.22 re
q
0.753006 0.753006 0.753006  setrgbcolor
eofill
Q
S
119.1 371.04 m
(Novel data set) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2040 1365 a FA(Figure)45 b(6:)70 b Fq(T)-7
b(raining)39 b(on)j(m)n(ultiple)e(b)r(enc)n(hmarks.)78
b(A)42 b Fl(sin-)2040 1452 y(gle)h Fq(priorit)n(y)35
b(function)i(w)n(as)f(obtained)h(b)n(y)g(training)e(o)n(v)n(er)h(all)
2040 1539 y(the)29 b(b)r(enc)n(hmarks)g(in)g(this)g(graph.)41
b(The)29 b(dark)f(bars)h(represen)n(t)2040 1626 y(sp)r(eedups)k
(obtained)e(b)n(y)h(running)f(the)g(giv)n(en)g(b)r(enc)n(hmark)h(on)
2040 1714 y(the)e(same)g(data)f(that)h(w)n(as)f(used)i(to)e(train)g
(the)h(priorit)n(y)e(func-)2040 1801 y(tion.)35 b(The)27
b(ligh)n(t)f(bars)g(corresp)r(ond)h(to)g(a)g(no)n(v)n(el)f(data)g(set.)
2040 2056 y FB(refers)31 b(to)g(this)f(as)h(cross)g(v)l(alidation.)49
b(Since)30 b(the)g(b)r(enc)n(hmarks)g(in)2040 2143 y(the)19
b(test)h(set)f(are)h(not)g(related)g(to)f(the)h(b)r(enc)n(hmarks)e(in)i
(the)f(training)2040 2230 y(set,)26 b(this)g(is)g(a)g(measure)h(of)f
(the)f(priorit)n(y)h(function's)g(generalit)n(y)-6 b(.)2115
2317 y(The)26 b(results)g(of)g(the)f(cross)i(v)l(alidation)f(are)g(sho)
n(wn)f(in)h(Figure)g(7.)2040 2404 y(This)36 b(exp)r(erimen)n(t)e
(applies)h(the)g(b)r(est)g(priorit)n(y)f(function)h(on)g(the)2040
2491 y(training)k(set)f(to)g(the)g(b)r(enc)n(hmarks)g(in)g(the)g(test)g
(set.)72 b(The)38 b(a)n(v-)2040 2579 y(erage)e(sp)r(eedup)f(on)g(the)g
(test)h(set)f(is)h(9\045.)64 b(In)34 b(three)h(cases)i(\(un-)2040
2666 y(epic,)32 b(023.eqn)n(tott,)h(and)d(085.cc1\))i(T)-6
b(rimaran's)32 b(baseline)f(heuris-)2040 2753 y(tic)26
b(marginally)h(outp)r(erforms)g(the)f(GP-generated)g(priorit)n(y)g
(func-)2040 2840 y(tion.)41 b(F)-6 b(or)28 b(the)g(remaining)g(b)r(enc)
n(hmarks,)g(the)g(heuristic)g(our)g(sys-)2040 2927 y(tem)e(found)f(is)h
(b)r(etter.)2063 3090 y Fe(5.4.3)90 b(The)22 b(Best)g(Priority)g
(Function)2115 3198 y FB(Figure)i(8)h(sho)n(ws)f(the)g(b)r(est)g
(general-purp)r(ose)h(priorit)n(y)e(function)2040 3285
y(our)37 b(system)g(found)g(for)h(h)n(yp)r(erblo)r(c)n(k)e(selection.)
71 b(Because)38 b(par-)2040 3373 y(simon)n(y)32 b(pressure)f(fa)n(v)n
(ors)i(small)f(expressions,)i(most)e(of)g(our)g(sys-)2040
3460 y(tem's)e(solutions)g(are)g(readable.)46 b(Nev)n(ertheless,)31
b(the)e(expressions)2040 3547 y(presen)n(ted)h(in)g(this)h(pap)r(er)f
(ha)n(v)n(e)g(b)r(een)g(hand)g(simpli\014ed)g(for)i(ease)2040
3634 y(of)27 b(discussion.)2115 3721 y(Notice)41 b(that)g(some)g(parts)
g(of)h(the)e(expression)i(ha)n(v)n(e)e(no)h(im-)2040
3808 y(pact)28 b(on)h(the)e(o)n(v)n(erall)j(result.)42
b(F)-6 b(or)28 b(instance,)i(remo)n(ving)f(the)e(sub-)2040
3896 y(expression)k(on)f(line)g(2)h(will)h(not)e(a\013ect)g(the)g
(heuristic;)j(the)d(v)l(alue)2040 3983 y(is)25 b(in)n(v)l(arian)n(t)f
(to)g(a)h(sc)n(heduling)f(region)i(since)e(the)g(mean)h(execution)2040
4070 y(ratio)38 b(is)g(the)f(same)h(for)g(all)h(paths)e(in)g(the)g
(region.)70 b(Suc)n(h)37 b(`use-)2040 4157 y(less')24
b(expressions)f(are)g(called)h(in)n(trons.)34 b(It)22
b(turns)g(out)g(that)h(in)n(trons)2040 4244 y(are)g(actually)h(quite)e
(useful)h(for)h(preserving)f(go)r(o)r(d)h(building)e(blo)r(c)n(ks)2040
4332 y(during)j(crosso)n(v)n(er)i(and)e(m)n(utation)h([13].)2115
4419 y(The)f(conditional)h(m)n(ultiply)f(statemen)n(t)g(on)g(line)h(4)f
(do)r(es)h(ha)n(v)n(e)e(a)2040 4506 y(direct)f(e\013ect)f(on)g(the)g
(priorit)n(y)h(function:)33 b(it)22 b(fa)n(v)n(ors)h(paths)f(that)h(do)
2040 4593 y(not)34 b(ha)n(v)n(e)g(p)r(oin)n(ter)h(dereferences)g(\(b)r
(ecause)g(the)f(sub-expression)2040 4680 y(in)29 b(line)g(5)g(will)h
(alw)n(a)n(ys)g(b)r(e)e(greater)i(than)e(one\).)43 b(P)n(oin)n(ters)30
b(inhibit)2040 4767 y(the)i(e\013ectiv)n(eness)g(of)h(the)f(sc)n
(heduler)g(and)g(other)g(compiler)h(opti-)2040 4855 y(mizations,)e(and)
d(th)n(us)g(dereferences)i(should)f(b)r(e)f(p)r(enalized.)44
b(The)2040 4942 y(IMP)-6 b(A)n(CT)25 b(group)g(came)h(to)f(the)f(exact)
h(same)h(conclusion,)g(though)2040 5029 y(the)f(exten)n(t)g(to)h(whic)n
(h)g(they)e(p)r(enalize)j(dereferences)g(di\013ers)f([15].)2115
5116 y(The)c(sub-expression)f(on)g(line)h(8)g(fa)n(v)n(ors)g(`bush)n
(y')f(parallel)i(paths,)2040 5203 y(where)i(there)g(are)g(n)n(umerous)f
(indep)r(enden)n(t)f(op)r(erations.)36 b(This)25 b(re-)2040
5290 y(sult)d(is)h(somewhat)g(coun)n(terin)n(tuitiv)n(e)e(since)h
(highly)g(parallel)i(paths)2040 5378 y(will)29 b(quic)n(kly)e(saturate)
h(mac)n(hine)g(resources.)42 b(In)27 b(addition,)i(paths)p
eop
%%Page: 9 9
9 8 bop -145 1186 a @beginspecial 81 @llx 63 @lly 747
@urx 513 @ury 2376 @rwi @clip @setspecial
%%BeginDocument: figs/crossval.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (training.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030425163122-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 81 63 747 513
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
81 63 moveto 747 63 lineto 747 513 lineto 81 513 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
81 63 665 449 rectclip
[ 0 -1 1 0 18 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font IJBKOL+Arial
11 dict begin
/FontName /IJBKOL+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/S 
<10bf31704ab370a8a6c235279ed6c2ccfc716fa1295d141c34dd24f95c73
82e11c724a74e86021432ff58ab0f9585559c2cc7a3fe0720eadda5eee3e
cb055c76e8d7f22cfddbcfbe4ee1a562282b307d86efef90d9a8c71c96ab
9543712fa6240508ea1f38536804c47dfcc21f777c873fc11b7e20f7a228
b35e8d75f100a7da6082feb065d087853344b8bf00df7291cc74173d8c17
2964ca635a4e981f1604dc10d454f452e70073d386bcbe3ed4c09e72aa02
e7eb1e382ccb2fe70e1e9e3084e7824b4261723bffe42f4fc72d36ddcdd9
e884d10e18a55004b6149a9b0c7ead4b42afa8906a80deea322a930f4d91
ac35a6e6186e5d082f09> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/j 
<10bf3170af4c4e03cb099088e1548d44a53dbade2c858e7043672d28af7a
255a52c1fc5961ee26822ea9a234df911035f9c353cbc5b83b929a71f6d2
1b26fffa3fa0b8fccdceb1472f97c84f0973818dc194> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/q 
<10bf31705c36af5cef64feff3875e93eaf63e864fd70bb6a233352105e24
3a5cd4f03912d5acd21f32af0f91c1a9946998d2b523bf278ed7e760296f
82ab85e13d34ee43890ecb71199ab005d452eb9982133856fef3006dcdc9
47bf3adb9d4a6a991e8aff21b2bb5591c29aca63e8bcc0429c71b550be84
f5817c08976f9f682b468226026818eeaa8d92033b36d7291e> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ff75d7a6d9ab8ab83f71f1130ffc9a46b
7d934ffb8ab93375fd62539cb08006> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/IJBKOL+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
pop
%%EndResource
[/N15/IJBKOL+Arial 1 TZ
%%BeginResource: font IJBKNP+Arial,Bold
11 dict begin
/FontName /IJBKNP+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/zero 
<10bf317047276c49b0d576f188d46ae965fd1ee754bf887206fb36232fbb
89f30bf7d7ccc04b68096e51e4fa383bd83a62a12254967c97fccef8f682
660584deed9a81b43cbb2c7b7968da901e3ae8e83e66419f304294be518a
c53bdfb87ba841dcf049e90378ca4bf02bb8502cda53c68c5e2344ff3039
a6b7677199a113d4a1df9615bbdd894af0ddf69e08437253bed3648332ae
c1e0f4e1525f1c1a3191b7b4ff> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/nine 
<10bf3170599a82ae97e466601e5f82e740a08f997218e30ce923542a1795
66f12b1b389002c628ce7f4dfc475549ebbceb20a69c90a116ba9877413a
91eea8edaf36f7a6c7176d858cefcd9a396bf8b5067c1b63148fbc06dc1c
3436a0b4a094a70dc1067dec799850b087d0623bba21834c3034f76fc491
7c0a4f617e96ce044c0841537ce874b23238cc7d15dc81416e1ef9922e11
e36742b051fbe97a7af85556f0a8a0f27895dd059895b58625194d9d7836
17ddfafea05d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/IJBKNP+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 57 /nine put
pop
%%EndResource
[/N13/IJBKNP+Arial,Bold 1 TZ
false setSA
n
76.02 733.02 459.06 -675 re
1 1 1 setrgbcolor
f
q
n
380.46 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
380.46 136.68 m
380.46 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
340.2 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
340.2 136.68 m
340.2 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
299.88 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
299.88 136.68 m
299.88 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
259.62 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
259.62 136.68 m
259.62 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
219.36 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
219.36 136.68 m
219.36 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
179.1 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
179.1 136.68 m
179.1 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
138.78 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
138.78 136.68 m
138.78 725.1 l
0 0 0  setrgbcolor
S
Q
q
n
98.52 136.68 0.0599976 588.42 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
98.52 136.68 m
98.52 725.1 l
0 0 0  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
98.52 136.68 322.2 588.42 re
0.501999 0.501999 0.501999  setrgbcolor
S
n
224.04 150.24 196.68 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
q
n
136.44 190.08 284.28 28.98 re
W
n
n
141.84 195.48 278.88 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
Q
n
202.86 240.78 217.86 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
219.54 286.02 201.18 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
q
n
174 325.92 246.72 28.92 re
W
n
n
179.4 331.32 241.32 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
Q
n
219.36 376.56 201.36 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
187.8 421.8 232.92 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
228.06 467.1 192.66 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
199.2 512.34 221.52 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
189.84 557.58 230.88 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
218.1 602.88 202.62 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
212.28 648.12 208.44 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
201.84 693.42 218.88 18.06 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
0.0599976 w
n
98.52 136.68 m
420.72 136.68 l
420.72 131.04 m
420.72 136.68 l
380.46 131.04 m
380.46 136.68 l
340.2 131.04 m
340.2 136.68 l
299.88 131.04 m
299.88 136.68 l
259.62 131.04 m
259.62 136.68 l
219.36 131.04 m
219.36 136.68 l
179.1 131.04 m
179.1 136.68 l
138.78 131.04 m
138.78 136.68 l
98.52 131.04 m
98.52 136.68 l
420.72 136.68 m
420.72 725.1 l
426.36 136.68 m
420.72 136.68 l
426.36 181.92 m
420.72 181.92 l
426.36 227.22 m
420.72 227.22 l
426.36 272.46 m
420.72 272.46 l
426.36 317.76 m
420.72 317.76 l
426.36 363 m
420.72 363 l
426.36 408.24 m
420.72 408.24 l
426.36 453.54 m
420.72 453.54 l
426.36 498.78 m
420.72 498.78 l
426.36 544.02 m
420.72 544.02 l
426.36 589.32 m
420.72 589.32 l
426.36 634.56 m
420.72 634.56 l
426.36 679.86 m
420.72 679.86 l
426.36 725.1 m
420.72 725.1 l
S
1 1 1  setrgbcolor
233.46 706.8 m
/N13 -14.28 Tf
(1.09)
[-7.92115 -3.95132 -7.92115 -7.92115 ] pdfxs
0 0 0  setrgbcolor
426.78 97.86 m
/N15 [0 18 -18 0 0 0] Tf
(0.0) show
386.52 97.86 m
(0.2) show
346.259 97.86 m
(0.4) show
305.939 97.86 m
(0.6) show
265.678 97.86 m
(0.8) show
225.418 97.86 m
(1.0) show
185.157 97.86 m
(1.2) show
144.837 97.86 m
(1.4) show
104.577 97.86 m
(1.6) show
487.62 165.06 m
/N15 -18 Tf
(unepic)
[-10.0187 -10.0187 -10.0187 -10.0187 -4.00644 -9.01071 ] pdfxs
478.62 210.36 m
(djpeg)
[-10.0187 -4.00644 -10.0187 -10.0187 -10.0187 ] pdfxs
474.539 255.6 m
(r) show
(a)
[-10.0061 ] pdfxs
(st) show
(a) show
524.579 300.839 m
(023.eqntott) show
507.659 346.14 m
(132.ijpeg)
[-10.0171 -10.0171 -10.0171 -5.01306 -4.00479 -4.00479 -10.0171 -10.0171 -10.0171 ] pdfxs
516.659 391.379 m
(052.alvinn)
[-10.0151 -10.0151 -10.0151 -5.01114 -10.0151 -4.00287 -9.00714 -4.00287 -10.0151 -10.0151 ] pdfxs
518.58 436.68 m
(147) show
(.)
[-5.00592 ] pdfxs
(vor) show
(t)
[-5.00592 ] pdfxs
(ex) show
497.579 481.919 m
(085.cc1) show
455.519 527.159 m
(art)
[-10.0151 -6.00101 -5.01114 ] pdfxs
477.599 572.459 m
(130.li)
[-10.0171 -10.0171 -10.0171 -5.01306 -4.00479 -4.00479 ] pdfxs
498.6 617.699 m
(osdemo)
[-10.0151 -9.00714 -10.0151 -10.0151 -15.001 -10.0151 ] pdfxs
498.6 662.938 m
(mipmap)
[-15.0046 -4.00644 -10.0187 -15.0046 -10.0187 -10.0187 ] pdfxs
501.601 708.239 m
(Av)
[-12.0114 -9.00549 ] pdfxs
(e) show
(r)
[-5.99936 ] pdfxs
(age) show
295.681 86.3982 m
(S)
[-12.0114 ] pdfxs
(peedup) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 1356 a FA(Figure)25 b(7:)38 b Fq(Cross)22
b(v)-5 b(alidation)22 b(of)h(the)h(general-purp)r(ose)f(prior-)-152
1444 y(it)n(y)18 b(function.)33 b(The)19 b(b)r(est)g(priorit)n(y)e
(function)h(found)h(b)n(y)g(training)-152 1531 y(on)30
b(the)f(b)r(enc)n(hmarks)g(in)h(Figure)e(6)h(is)h(applied)f(to)f(the)i
(b)r(enc)n(h-)-152 1618 y(marks)c(in)h(this)g(graph.)-152
1779 y Fd(\(1\))k(\()p Fc(add)-152 1846 y Fd(\(2\))62
b(\()p Fc(sub)24 b(\(m)n(ul)i Fb(exe)m(c)p 477 1846 21
4 v 23 w(r)m(atio)p 637 1846 V 26 w(me)m(an)k Fc(0.8720\))24
b(0.9400\))-152 1912 y Fd(\(3\))62 b(\()p Fc(m)n(ul)25
b(0.4762)-152 1978 y Fd(\(4\))154 b(\()p Fc(cm)n(ul)26
b(\(not)f Fb(mem)p 616 1978 V 25 w(hazar)m(d)6 b Fc(\))-152
2045 y Fd(\(5\))185 b(\()p Fc(m)n(ul)25 b(0.6727)f Fb(num)p
673 2045 V 24 w(p)m(aths)5 b Fc(\))-152 2111 y Fd(\(6\))185
b(\()p Fc(m)n(ul)25 b(1.1609)-152 2178 y Fd(\(7\))216
b(\()p Fc(add)-152 2244 y Fd(\(8\))247 b(\()p Fc(sub)-152
2311 y Fd(\(9\))278 b(\()p Fc(m)n(ul)-152 2377 y Fd(\(10\))g(\()p
Fc(div)24 b Fb(num)p 541 2377 V 25 w(ops)31 b(dep)p 792
2377 V 25 w(height)6 b Fc(\))26 b(10.8240\))-152 2443
y Fd(\(11\))247 b Fa(exec)p 347 2443 19 4 v 20 w(ratio)7
b Fd(\))-152 2510 y(\(12\))216 b(\()p Fc(sub)24 b Fd(\()p
Fc(m)n(ul)i Fd(\()p Fc(cm)n(ul)f Fa(has)p 846 2510 V
21 w(unsafe)p 1053 2510 V 19 w(jsr)-152 2576 y Fd(\(13\))777
b Fa(predict)p 970 2576 V 19 w(product)p 1206 2576 V
18 w(mean)-152 2643 y Fd(\(14\))g(0.9838\))-152 2709
y(\(15\))565 b(\()p Fc(sub)24 b(1.1039)f Fb(num)p 1073
2709 21 4 v 25 w(ops)p 1194 2709 V 26 w(max)7 b Fc(\)\))-152
2775 y Fd(\(16\))385 b(\()p Fc(sub)25 b Fd(\()p Fc(m)n(ul)g
Fa(dep)p 803 2775 19 4 v 20 w(height)p 1009 2775 V 19
w(mean)-152 2842 y Fd(\(17\))734 b Fa(num)p 803 2842
V 20 w(branches)p 1071 2842 V 18 w(max)9 b Fd(\))-152
2908 y(\(18\))555 b Fa(num)p 624 2908 V 20 w(paths)8
b Fd(\)\)\)\)\)\)\))-152 3108 y FA(Figure)33 b(8:)45
b Fq(The)30 b(b)r(est)h(priorit)n(y)d(function)h(our)h(system)g(found)
-152 3195 y(for)d(h)n(yp)r(erblo)r(c)n(k)g(sc)n(heduling.)-152
3451 y FB(with)34 b(higher)f Fw(exec)p 427 3451 24 4
v 27 w(r)r(atio)p FB('s)h(are)f(sligh)n(tly)h(p)r(enalized,)i(whic)n(h)
d(also)-152 3538 y(de\014es)26 b(in)n(tuition.)-77 3625
y(The)k(conditional)h(m)n(ultiply)f(expression)g(on)g(line)h(12)g(p)r
(enalizes)-152 3712 y(paths)f(with)f(unsafe)h(calls)h(\()p
Fx(i.e.)p FB(,)e(calls)i(to)f(subroutines)f(that)g(ma)n(y)-152
3800 y(ha)n(v)n(e)22 b(side)g(e\013ects\).)34 b(Once)21
b(again)i(this)f(agrees)i(with)e(the)g(IMP)-6 b(A)n(CT)-152
3887 y(group's)27 b(reasoning)g([15].)-77 3974 y(Because)37
b(T)-6 b(rimaran)36 b(is)g(suc)n(h)g(a)f(large)i(and)f(complicated)g
(sys-)-152 4061 y(tem,)24 b(it)g(is)f(di\016cult)g(to)h(kno)n(w)f
(exactly)g(wh)n(y)g(the)f(priorit)n(y)i(function)-152
4148 y(in)38 b(Figure)g(8)g(w)n(orks)h(w)n(ell.)72 b(This)38
b(is)g(exactly)g(the)f(p)r(oin)n(t)h(of)g(us-)-152 4235
y(ing)31 b(a)g(metho)r(dology)g(lik)n(e)g(Meta)g(Optimization.)49
b(The)31 b(b)r(oun)n(tiful)-152 4323 y(complexities)37
b(of)f(compilers)g(and)f(systems)h(are)f(di\016cult)h(to)f(un-)-152
4410 y(derstand.)f(Also)25 b(w)n(orth)n(y)f(of)h(notice)f(is)h(the)f
(fact)h(that)f(w)n(e)h(get)f(suc)n(h)-152 4497 y(go)r(o)r(d)f(sp)r
(eedups,)f(particularly)g(on)f(the)g(training)g(set,)i(b)n(y)d(c)n
(hanging)-152 4584 y(suc)n(h)26 b(a)g(small)g(p)r(ortion)h(of)f(the)f
(compiler.)-77 4671 y(The)33 b(next)e(section)i(presen)n(ts)f(another)h
(case)g(study)-6 b(,)33 b(whic)n(h)f(w)n(e)-152 4759
y(also)27 b(test)f(on)g(T)-6 b(rimaran.)-152 4979 y FC(6.)100
b(CASE)25 b(STUD)l(Y)h(II:)23 5095 y(REGISTER)f(ALLOCA)-9
b(TION)-77 5203 y FB(The)21 b(imp)r(ortance)h(of)g(register)g(allo)r
(cation)i(is)d(w)n(ell-kno)n(wn,)i(so)e(w)n(e)-152 5290
y(will)32 b(not)d(motiv)l(ate)h(the)g(optimization)h(here.)47
b(Man)n(y)29 b(register)j(al-)-152 5378 y(lo)r(cation)j(algorithms)g
(use)e(cost)g(functions)h(to)f(determine)g(whic)n(h)2040
-69 y(v)l(ariables)d(to)g(spill)h(when)e(spilling)i(is)f(required.)46
b(F)-6 b(or)30 b(instance)g(in)2040 19 y(priorit)n(y-based)23
b(coloring)i(register)f(allo)r(cation,)i(the)d(priorit)n(y)g(func-)2040
106 y(tion)h(is)h(an)f(estimate)h(of)g(the)f(relativ)n(e)h(b)r
(ene\014ts)e(of)i(storing)g(a)g(giv)n(en)2040 193 y(v)l(ariable)h(in)g
(a)g(register)h([7].)2115 280 y(Priorit)n(y-based)33
b(coloring)h(\014rst)e(asso)r(ciates)j(a)e Fx(live)h(r)l(ange)39
b FB(with)2040 367 y(ev)n(ery)h(v)l(ariable.)78 b(A)40
b(liv)n(e)h(range)g(is)f(the)g(comp)r(osition)i(of)f(co)r(de)2040
454 y(segmen)n(ts)26 b(\(basic)g(blo)r(c)n(ks\),)g(through)g(whic)n(h)f
(the)g(asso)r(ciated)j(v)l(ari-)2040 542 y(able's)38
b(v)l(alue)e(m)n(ust)h(b)r(e)g(preserv)n(ed.)67 b(The)37
b(algorithm)h(then)e(pri-)2040 629 y(oritizes)i(eac)n(h)e(liv)n(e)g
(range)h(based)f(on)g(the)g(estimated)h(execution)2040
716 y(sa)n(vings)26 b(of)h(register)g(allo)r(cating)h(the)d(asso)r
(ciated)j(v)l(ariable:)2145 934 y Fw(sav)s(ing)s(s)2410
942 y Fh(i)2457 934 y FB(=)21 b Fw(w)2593 942 y Fh(i)2637
934 y FD(\001)c FB(\()p Fw(LD)r(sav)s(e)g FD(\001)g Fw(uses)3182
942 y Fh(i)3225 934 y FB(+)g Fw(S)t(T)11 b(sav)s(e)16
b FD(\001)h Fw(def)8 b(s)3773 942 y Fh(i)3799 934 y FB(\))106
b(\(2\))2528 1150 y Fw(pr)r(ior)r(ity)s FB(\()p Fw(l)q(r)r
FB(\))21 b(=)3032 1037 y Fv(P)3113 1116 y Fh(i)p Fg(2)p
Fh(lr)3244 1093 y Fw(sav)s(ing)s(s)3509 1101 y Fh(i)p
3032 1133 503 4 v 3248 1200 a Fw(N)3935 1150 y FB(\(3\))2115
1292 y(Equation)31 b(2)g(is)h(used)f(to)g(compute)g(the)g(sa)n(vings)h
(of)g(eac)n(h)f(co)r(de)2040 1380 y(segmen)n(t.)47 b
Fw(LD)r(sav)s(e)29 b FB(and)g Fw(S)t(T)11 b(sav)s(e)29
b FB(are)h(estimates)h(of)f(the)f(execu-)2040 1467 y(tion)d(time)g(sa)n
(v)n(ed)f(b)n(y)g(k)n(eeping)h(the)f(asso)r(ciated)j(v)l(ariable)e(in)f
(a)h(reg-)2040 1554 y(ister)33 b(for)g(references)h(and)e
(de\014nitions)g(resp)r(ectiv)n(ely)-6 b(.)55 b Fw(uses)3851
1562 y Fh(i)3909 1554 y FB(and)2040 1641 y Fw(def)8 b(s)2197
1649 y Fh(i)2245 1641 y FB(represen)n(t)22 b(the)g(n)n(um)n(b)r(er)g
(of)h(uses)f(and)g(de\014nitions)g(of)h(a)g(v)l(ari-)2040
1728 y(able)k(in)f(blo)r(c)n(k)g Fw(i)p FB(.)36 b Fw(w)2634
1736 y Fh(i)2687 1728 y FB(is)27 b(the)e(estimated)i(execution)f
(frequency)g(for)2040 1815 y(the)f(blo)r(c)n(k.)2115
1903 y(Equation)e(3)h(sums)g(the)f(sa)n(vings)h(o)n(v)n(er)f(the)h
Fw(N)32 b FB(blo)r(c)n(ks)23 b(that)h(com-)2040 1990
y(p)r(ose)29 b(the)f(liv)n(e)g(range.)43 b(Th)n(us,)29
b(this)g(priorit)n(y)f(function)g(represen)n(ts)2040
2077 y(the)34 b(sa)n(vings)h(incurred)e(b)n(y)g(accessing)j(a)e
(register)i(instead)e(of)h(re-)2040 2164 y(sorting)27
b(to)f(main)g(memory)-6 b(.)2115 2251 y(The)25 b(algorithm)h(then)d
(tries)j(to)e(assign)i(registers)g(to)f(liv)n(e)g(ranges)2040
2339 y(in)31 b(priorit)n(y)f(order.)50 b(Please)32 b(see)f([7])h(for)f
(a)g(complete)g(description)2040 2426 y(of)d(the)e(algorithm.)40
b(F)-6 b(or)27 b(our)g(purp)r(oses,)h(the)e(imp)r(ortan)n(t)i(thing)e
(to)2040 2513 y(note)36 b(is)h(that)f(the)f(success)i(of)g(the)f
(algorithm)h(dep)r(ends)f(on)g(the)2040 2600 y(priorit)n(y)26
b(function.)2115 2687 y(The)f(priorit)n(y)g(function)g(describ)r(ed)g
(ab)r(o)n(v)n(e)g(is)g(in)n(tuitiv)n(e|)f(it)h(as-)2040
2774 y(signs)19 b(w)n(eigh)n(ts)h(to)e(liv)n(e)h(ranges)g(based)g(on)f
(the)h(estimated)g(execution)2040 2862 y(sa)n(vings)h(of)f(register)h
(allo)r(cating)h(them.)32 b(Nev)n(ertheless,)21 b(our)d(system)2040
2949 y(\014nds)25 b(functions)h(that)f(impro)n(v)n(e)h(the)f(heuristic)
h(b)n(y)f(up)g(to)h(11\045.)2040 3096 y FC(6.1)99 b(Experimental)26
b(Results)2115 3204 y FB(W)-6 b(e)35 b(collected)i(these)f(results)g
(using)g(the)f(same)h(exp)r(erimen)n(tal)2040 3291 y(setup)d(that)h(w)n
(e)g(used)g(for)g(h)n(yp)r(erblo)r(c)n(k)f(selection.)60
b(W)-6 b(e)34 b(use)g(T)-6 b(ri-)2040 3379 y(maran)27
b(and)f(w)n(e)h(target)g(the)f(arc)n(hitecture)h(describ)r(ed)g(in)f(T)
-6 b(able)27 b(3.)2040 3466 y(Ho)n(w)n(ev)n(er,)c(to)g(more)f
(e\013ectiv)n(ely)g(stress)h(the)f(register)i(allo)r(cator,)h(w)n(e)
2040 3553 y(only)30 b(use)f(32)h(general-purp)r(ose)h(registers)g(and)e
(32)h(\015oating-p)r(oin)n(t)2040 3640 y(registers.)2115
3727 y(W)-6 b(e)38 b(mo)r(di\014ed)h(T)-6 b(rimaran's)40
b(Elcor)f(register)h(allo)r(cator)h(b)n(y)d(re-)2040
3814 y(placing)d(its)g(priorit)n(y)f(function)g(\(Equation)g(2\))h
(with)f(an)g(expres-)2040 3902 y(sion)28 b(parser)h(and)e(ev)l
(aluator.)41 b(The)28 b(register)h(allo)r(cation)h(heuristic)2040
3989 y(describ)r(ed)j(ab)r(o)n(v)n(e)g(essen)n(tially)h(w)n(orks)f(at)g
(the)g(basic)g(blo)r(c)n(k)g(lev)n(el.)2040 4076 y(Equation)23
b(3)h(simply)f(sums)g(and)g(normalizes)i(the)e(priorities)h(of)g(the)
2040 4163 y(individual)i(basic)h(blo)r(c)n(ks.)37 b(F)-6
b(or)26 b(this)h(reason,)g(w)n(e)g(sta)n(y)f(within)h(the)2040
4250 y(algorithm's)h(framew)n(ork)f(and)e(lea)n(v)n(e)h(Equation)g(3)g
(in)n(tact.)2115 4337 y(F)-6 b(or)30 b(a)h(more)g(detailed)g
(description)g(of)g(our)f(exp)r(erimen)n(ts)g(with)2040
4425 y(register)37 b(allo)r(cation,)j(including)c(the)f(features)h(w)n
(e)g(extracted)f(to)2040 4512 y(p)r(erform)27 b(them,)e(please)i(see)f
([23].)2063 4659 y Fe(6.1.1)90 b(Specialized)21 b(Priority)h(Functions)
2115 4767 y FB(These)e(results)g(indicate)g(that)g(Meta)g(Optimization)
g(w)n(orks)g(w)n(ell,)2040 4855 y(ev)n(en)33 b(for)i(w)n(ell-studied)f
(heuristics.)60 b(Figure)35 b(9)f(sho)n(ws)h(sp)r(eedups)2040
4942 y(obtained)29 b(b)n(y)f(sp)r(ecializing)j(T)-6 b(rimaran's)31
b(register)f(allo)r(cator)h(for)f(a)2040 5029 y(giv)n(en)24
b(application.)35 b(The)24 b(dark)g(bar)g(asso)r(ciated)i(with)e(eac)n
(h)h(appli-)2040 5116 y(cation)33 b(represen)n(ts)e(the)h(sp)r(eedup)f
(obtained)h(b)n(y)e(using)i(the)g(same)2040 5203 y(input)g(data)i(that)
f(w)n(as)h(used)f(to)h(sp)r(ecialize)h(the)e(heuristic.)57
b(The)2040 5290 y(ligh)n(t)25 b(bar)h(sho)n(ws)f(the)g(sp)r(eedup)f
(when)h(the)g(b)r(enc)n(hmark)f(pro)r(cesses)2040 5378
y(a)i(no)n(v)n(el)g(data)f(set.)p eop
%%Page: 10 10
10 9 bop -55 1091 a @beginspecial 72 @llx 63 @lly 737
@urx 522 @ury 2160 @rwi @clip @setspecial
%%BeginDocument: figs/regalloc_spec.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (regalloc.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422201441-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 72 63 737 522
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
72 63 moveto 737 63 lineto 737 522 lineto 72 522 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
72 63 665 459 rectclip
[ 0 -1 1 0 8.64 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font OCHJCD+Arial
11 dict begin
/FontName /OCHJCD+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/OCHJCD+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 78 /N put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 160 /space put
pop
%%EndResource
[/N15/OCHJCD+Arial 1 TZ
%%BeginResource: font OCHJAN+Arial,Bold
11 dict begin
/FontName /OCHJAN+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/zero 
<10bf317047276c49b0d576f188d46ae965fd1ee754bf887206fb36232fbb
89f30bf7d7ccc04b68096e51e4fa383bd83a62a12254967c97fccef8f682
660584deed9a81b43cbb2c7b7968da901e3ae8e83e66419f304294be518a
c53bdfb87ba841dcf049e90378ca4bf02bb8502cda53c68c5e2344ff3039
a6b7677199a113d4a1df9615bbdd894af0ddf69e08437253bed3648332ae
c1e0f4e1525f1c1a3191b7b4ff> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/six 
<10bf317047276c4999812b7a58c0572e6389f25a493cb50dd70351626cc6
677e41da6002a25ccd83eb879220f1bc9ec49e34f0a95c5563d62d2d3c67
7e7c51052e3f8f20b1a6cb020fff107774ea9002a9fc904e7bc7f5d9b128
7ee966600e4e14d3e81950544387475dc2df7bded8d1fd6f65f14436d6d3
412de54a2b4d22c27c387de4cbd77eed536038a5eb6fa3506f61d4aa5d88
fa83602ba166c3d588bfbd81466cb552670a0c10abf1fa1f55b49bb8a5b6
39b4f6cde0263c5e> ND 
/eight 
<10bf317046e8724abbe2ac86c2cf7a78841eb5dc770ebb4ea1c4f512adc0
68d936ac596c6ecfbe3787453f4392126716012c4cec7f853ce00610d660
7ccbc9a011f1907068667d76381354d3dcd2e184502b830d50f1e64b289e
c1f74623e41eab46feb846ffd0abef7cae881f0a23d0ec8568c75fd44e2c
ee4891dc68682d7fc50a733d4e515af54a916e6168114cd1c5ca9699d453
f46dee4a35d724771d4c51530925c3bec4596d2cd147f1113c1bd5eed190
05ff2c81249c3fa7df02b428c80039e3f2c7d59ef90c10534c69c0d5d424
dc28a7f8b441cc0de9ae5e026189841f6379b27057318d3711fc7969d51d
c63d14f7f5df0e8b48> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/OCHJAN+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 54 /six put
dup 56 /eight put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/OCHJAN+Arial,Bold 1 TZ
false setSA
n
76.02 733.02 459.06 -675 re
1 1 1 setrgbcolor
f
q
n
366.72 132.66 0.0599976 593.64 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
366.72 132.66 m
366.72 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
310.98 132.66 0.0599976 593.64 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
310.98 132.66 m
310.98 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
255.3 132.66 0.0599976 593.64 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
255.3 132.66 m
255.3 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
199.56 132.66 0.0599976 593.64 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
199.56 132.66 m
199.56 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
143.88 132.66 0.0599976 593.64 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
143.88 132.66 m
143.88 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
88.14 132.66 0.0599976 593.64 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
88.14 132.66 m
88.14 726.3 l
0 0 0  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
96.66 200.1 20.46 244.98 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
88.14 132.66 334.26 593.64 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
q
n
148.14 145.44 274.26 35.04 re
W
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
153.54 150.84 268.86 24.18 re
q
0 0 0  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
Q
q
n
172.26 230.22 250.14 35.04 re
W
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
177.66 235.62 244.74 24.18 re
q
0 0 0  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
255.3 320.46 167.1 24.18 re
q
0 0 0  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
q
n
169.86 399.84 252.54 35.04 re
W
n
n
175.26 405.24 247.14 24.18 re
q
eofill
Q
S
Q
n
308.4 490.08 114 24.18 re
q
eofill
Q
S
n
286.86 574.86 135.54 24.18 re
q
eofill
Q
S
n
226.2 659.7 196.2 24.18 re
q
eofill
Q
S
n
184.02 175.08 238.38 24.12 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
211.5 259.86 210.9 24.18 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
300.66 344.7 121.74 24.12 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
q
n
161.76 424.08 260.64 35.04 re
W
n
n
167.16 429.48 255.24 24.18 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
Q
n
310.68 514.32 111.72 24.12 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
296.76 599.1 125.64 24.18 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
245.1 683.94 177.3 24.12 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
0.0599976 w
n
88.14 132.66 m
422.4 132.66 l
422.4 128.1 m
422.4 132.66 l
366.72 128.1 m
366.72 132.66 l
310.98 128.1 m
310.98 132.66 l
255.3 128.1 m
255.3 132.66 l
199.56 128.1 m
199.56 132.66 l
143.88 128.1 m
143.88 132.66 l
88.14 128.1 m
88.14 132.66 l
422.4 132.66 m
422.4 726.3 l
426.96 132.66 m
422.4 132.66 l
426.96 217.44 m
422.4 217.44 l
426.96 302.28 m
422.4 302.28 l
426.96 387.06 m
422.4 387.06 l
426.96 471.9 m
422.4 471.9 l
426.96 556.68 m
422.4 556.68 l
426.96 641.52 m
422.4 641.52 l
426.96 726.3 m
422.4 726.3 l
S
n
230.22 681 28.74 -18.3 re
f
1 1 1  setrgbcolor
258.96 676.32 m
/N13 -14.76 Tf
(1) show
(.)
[-4.10778 ] pdfxs
(08) show
277.86 700.5 m
(1) show
(.)
[-4.10778 ] pdfxs
(06) show
0 0 0  setrgbcolor
427.2 100.92 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(0.9) show
371.519 92.7002 m
(0.95) show
315.78 113.219 m
(1) show
260.099 92.7002 m
(1.05) show
204.36 100.92 m
(1.1) show
148.679 92.7002 m
(1.15) show
92.9394 100.92 m
(1.2) show
502.62 179.76 m
/N15 -14.76 Tf
(mpeg2dec)
[-12.3053 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 ] pdfxs
500.999 264.54 m
(rawcaudio)
[-4.92668 -8.21826 -10.6682 -7.39171 -8.21826 -8.21826 -8.21826 -3.28821 -8.21826 ] pdfxs
526.379 349.38 m
(129) show
(.c)
[-4.10778 -7.3845 ] pdfxs
(o) show
(m)
[-12.2995 ] pdfxs
(p) show
(r)
[-4.91947 ] pdfxs
(e) show
(ss)
[-7.3845 -7.3845 ] pdfxs
490.258 434.16 m
(hu) show
(ff)
[-4.10778 -4.10778 ] pdfxs
(_en) show
(c) show
490.258 518.94 m
(hu) show
(ff)
[-4.10778 -4.10778 ] pdfxs
(_de) show
(c) show
514.978 603.781 m
(g721decode)
[-8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -8.21691 -7.39036 -8.21691 -8.21691 -8.21691 ] pdfxs
488.638 688.56 m
(Average)
[-9.85223 -7.38743 -8.21399 -4.9224 -8.21399 -8.21399 -8.21399 ] pdfxs
286.377 82.741 m
/N13 -14.76 Tf
(Speedup)
[-9.83895 -9.01239 -8.2007 -8.2007 -9.01239 -9.01239 -9.01239 ] pdfxs
n
96.72 445.02 20.4 -244.86 re
1 1 1  setrgbcolor
f
n
96.66 200.1 20.46 244.92 re
0 0 0  setrgbcolor
S
0.960007 w
n
102.9 204.54 9.06 9.06 re
q
eofill
Q
S
112.44 217.08 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(Training data set) show
n
102.9 333.78 9.06 9.06 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
112.44 346.32 m
(Novel data set) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 1261 a FA(Figure)58 b(9:)97 b Fq(Register)53
b(allo)r(cation)e(sp)r(ecialization.)113 b(This)-152
1348 y(graph)39 b(sho)n(ws)g(sp)r(eedups)i(obtained)e(b)n(y)g(training)
e(on)i(a)g(p)r(er-)-152 1435 y(b)r(enc)n(hmarks)25 b(basis.)35
b(The)25 b(dark)f(colored)g(bars)g(are)h(executions)-152
1522 y(using)39 b(the)f(same)g(data)g(set)g(on)g(whic)n(h)g(the)h(sp)r
(ecialized)f(pri-)-152 1610 y(orit)n(y)c(function)h(w)n(as)g(trained.)
59 b(The)36 b(ligh)n(t)e(colored)g(bars)h(are)-152 1697
y(executions)27 b(that)g(use)g(a)g(no)n(v)n(el)f(data)g(set.)-109
3333 y @beginspecial 90 @llx 54 @lly 657 @urx 495 @ury
2289 @rwi @clip @setspecial
%%BeginDocument: figs/regalloc_evolution.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (regalloc.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422205208-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 90 54 657 495
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
90 54 moveto 657 54 lineto 657 495 lineto 90 495 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
90 54 567 441 rectclip
[ 0 -1 1 0 36 584.64 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font AEMDDC+Arial,Bold
11 dict begin
/FontName /AEMDDC+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/G 
<10bf317049853377a7c14408213f8cb0d7a0c9f167e5d8c5ab81d02a6368
40fe7690a6220dd951ed1475afe94af1dca8cd00af32527ccdb4443a6f1b
0f1d9f948f41689d552617fbb202a848e943cafeef773c524f107cecac26
dd1073fd79085c0ccd4cc17b02b3c84d6937bb8c88ee0f58f0488cae3848
b481c280d21ec8fe3faf9183edbd586a23518efaddb855a9de63fa94b398
a92d1943acefbb9697> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AEMDDC+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%%EndResource
[/N26/AEMDDC+Arial,Bold 1 TZ
%%BeginResource: font AEMDCG+Arial
11 dict begin
/FontName /AEMDCG+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AEMDCG+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
pop
%%EndResource
[/N24/AEMDCG+Arial 1 TZ
false setSA
n
97.92 606.36 387.6 -487.44 re
1 1 1 setrgbcolor
f
q
n
420.96 118.92 0.119995 487.44 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
420.96 118.92 m
420.96 606.36 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
356.28 118.92 0.119995 487.44 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
356.28 118.92 m
356.28 606.36 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
97.44 118.92 388.56 487.44 re
202.56 492.12 100.8 106.68 re
eoclip
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
291.72 118.92 m
291.72 606.36 l
227.16 118.92 m
227.16 606.36 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
162.48 118.92 0.119995 487.44 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
162.48 118.92 m
162.48 606.36 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
97.92 118.92 0.119995 487.44 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
97.92 118.92 m
97.92 606.36 l
0.753006 0.753006 0.753006  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
202.56 492.12 100.8 106.68 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
97.92 118.92 387.6 487.44 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
1 J
0 j
0.119995 w
10 M
[] 0 d
n
97.92 118.92 m
485.52 118.92 l
485.52 115.32 m
485.52 118.92 l
420.96 115.32 m
420.96 118.92 l
356.28 115.32 m
356.28 118.92 l
291.72 115.32 m
291.72 118.92 l
227.16 115.32 m
227.16 118.92 l
162.48 115.32 m
162.48 118.92 l
97.92 115.32 m
97.92 118.92 l
485.52 118.92 m
485.52 606.36 l
489.12 118.92 m
485.52 118.92 l
489.12 167.64 m
485.52 167.64 l
489.12 216.36 m
485.52 216.36 l
489.12 265.2 m
485.52 265.2 l
489.12 313.92 m
485.52 313.92 l
489.12 362.64 m
485.52 362.64 l
489.12 411.36 m
485.52 411.36 l
489.12 460.08 m
485.52 460.08 l
489.12 508.92 m
485.52 508.92 l
489.12 557.64 m
485.52 557.64 l
489.12 606.36 m
485.52 606.36 l
0 0 0  setrgbcolor
S
1 j
0.960007 w
n
485.52 118.92 m
312.72 128.64 l
303.84 138.36 l
152.4 157.92 l
140.52 226.2 l
122.28 265.2 l
122.16 294.36 l
121.68 430.92 l
121.56 450.36 l
121.08 469.92 l
120.48 518.64 l
120.48 606.36 l
S
n
485.52 118.92 m
283.44 128.64 l
278.4 157.92 l
176.28 177.36 l
176.28 606.36 l
485.52 118.92 m
481.56 128.64 l
476.04 157.92 l
468.6 167.64 l
444.24 177.36 l
429.96 255.36 l
429.6 352.92 l
429.6 606.36 l
0.501999 0.501999 0.501999  setrgbcolor
S
n
485.52 118.92 m
450.36 128.64 l
449.4 138.36 l
429.12 148.2 l
420.84 157.92 l
420.36 167.64 l
417.6 177.36 l
411.48 187.2 l
403.2 226.2 l
383.4 265.2 l
365.64 284.64 l
361.44 362.64 l
357.48 430.92 l
356.4 469.92 l
356.4 606.36 l
485.52 118.92 m
328.44 128.64 l
278.28 148.2 l
271.68 167.64 l
269.76 177.36 l
263.4 196.92 l
239.76 226.2 l
233.4 235.92 l
233.16 304.2 l
190.56 333.36 l
179.04 391.92 l
170.76 421.08 l
170.76 606.36 l
0.587997 0.587997 0.587997  setrgbcolor
S
n
485.52 118.92 m
485.28 128.64 l
483.36 177.36 l
482.88 216.36 l
480.12 284.64 l
480.12 391.92 l
479.88 411.36 l
479.88 460.08 l
479.76 469.92 l
479.76 606.36 l
0 0 0  setrgbcolor
S
q
n
481.92 115.44 7.08002 7.08 re
W
n
n
485.4 121.8 m
483.84 121.8 482.52 120.48 482.52 118.8 c
482.52 117.12 483.84 115.92 485.4 115.92 c
487.08 115.92 488.4 117.12 488.4 118.8 c
488.4 120.48 487.08 121.8 485.4 121.8 c
h
S
Q
n
312.6 131.52 m
311.04 131.52 309.72 130.2 309.72 128.52 c
309.72 126.84 311.04 125.64 312.6 125.64 c
314.28 125.64 315.6 126.84 315.6 128.52 c
315.6 130.2 314.28 131.52 312.6 131.52 c
h
303.72 141.24 m
302.16 141.24 300.84 139.92 300.84 138.24 c
300.84 136.56 302.16 135.36 303.72 135.36 c
305.4 135.36 306.72 136.56 306.72 138.24 c
306.72 139.92 305.4 141.24 303.72 141.24 c
h
152.28 160.8 m
150.72 160.8 149.4 159.48 149.4 157.8 c
149.4 156.12 150.72 154.92 152.28 154.92 c
153.96 154.92 155.28 156.12 155.28 157.8 c
155.28 159.48 153.96 160.8 152.28 160.8 c
h
140.4 229.08 m
138.84 229.08 137.52 227.76 137.52 226.08 c
137.52 224.4 138.84 223.2 140.4 223.2 c
142.08 223.2 143.4 224.4 143.4 226.08 c
143.4 227.76 142.08 229.08 140.4 229.08 c
h
122.16 268.08 m
120.6 268.08 119.28 266.76 119.28 265.08 c
119.28 263.4 120.6 262.2 122.16 262.2 c
123.84 262.2 125.16 263.4 125.16 265.08 c
125.16 266.76 123.84 268.08 122.16 268.08 c
h
122.04 297.24 m
120.48 297.24 119.16 295.92 119.16 294.24 c
119.16 292.56 120.48 291.36 122.04 291.36 c
123.72 291.36 125.04 292.56 125.04 294.24 c
125.04 295.92 123.72 297.24 122.04 297.24 c
h
121.56 433.8 m
120 433.8 118.68 432.48 118.68 430.8 c
118.68 429.12 120 427.92 121.56 427.92 c
123.24 427.92 124.56 429.12 124.56 430.8 c
124.56 432.48 123.24 433.8 121.56 433.8 c
h
121.44 453.24 m
119.88 453.24 118.56 451.92 118.56 450.24 c
118.56 448.56 119.88 447.36 121.44 447.36 c
123.12 447.36 124.44 448.56 124.44 450.24 c
124.44 451.92 123.12 453.24 121.44 453.24 c
h
120.96 472.8 m
119.4 472.8 118.08 471.48 118.08 469.8 c
118.08 468.12 119.4 466.92 120.96 466.92 c
122.64 466.92 123.96 468.12 123.96 469.8 c
123.96 471.48 122.64 472.8 120.96 472.8 c
h
120.36 521.52 m
118.8 521.52 117.48 520.2 117.48 518.52 c
117.48 516.84 118.8 515.64 120.36 515.64 c
122.04 515.64 123.36 516.84 123.36 518.52 c
123.36 520.2 122.04 521.52 120.36 521.52 c
h
120.36 609.24 m
118.8 609.24 117.48 607.92 117.48 606.24 c
117.48 604.56 118.8 603.36 120.36 603.36 c
122.04 603.36 123.36 604.56 123.36 606.24 c
123.36 607.92 122.04 609.24 120.36 609.24 c
h
S
q
n
481.92 115.44 7.08002 7.2 re
W
n
n
482.52 118.92 m
488.52 121.92 l
488.52 115.92 l
482.52 118.92 l
h
0.501999 0.501999 0.501999  setrgbcolor
S
Q
n
280.44 128.64 m
286.44 131.64 l
286.44 125.64 l
280.44 128.64 l
h
275.4 157.92 m
281.4 160.92 l
281.4 154.92 l
275.4 157.92 l
h
173.28 177.36 m
179.28 180.36 l
179.28 174.36 l
173.28 177.36 l
h
0.501999 0.501999 0.501999  setrgbcolor
S
q
n
172.68 602.76 7.32001 7.20001 re
W
n
n
173.28 606.36 m
179.28 609.36 l
179.28 603.36 l
173.28 606.36 l
h
S
Q
n
482.52 118.92 m
488.52 121.92 l
488.52 115.92 l
482.52 118.92 l
h
q
eofill
Q
S
n
478.56 128.64 m
484.56 131.64 l
484.56 125.64 l
478.56 128.64 l
h
q
eofill
Q
S
n
473.04 157.92 m
479.04 160.92 l
479.04 154.92 l
473.04 157.92 l
h
q
eofill
Q
S
n
465.6 167.64 m
471.6 170.64 l
471.6 164.64 l
465.6 167.64 l
h
q
eofill
Q
S
n
441.24 177.36 m
447.24 180.36 l
447.24 174.36 l
441.24 177.36 l
h
q
eofill
Q
S
n
426.96 255.36 m
432.96 258.36 l
432.96 252.36 l
426.96 255.36 l
h
q
eofill
Q
S
n
426.6 352.92 m
432.6 355.92 l
432.6 349.92 l
426.6 352.92 l
h
q
eofill
Q
S
n
426.6 460.08 m
432.6 463.08 l
432.6 457.08 l
426.6 460.08 l
h
q
eofill
Q
S
n
426.6 606.36 m
432.6 609.36 l
432.6 603.36 l
426.6 606.36 l
h
q
eofill
Q
S
n
485.4 121.8 m
483.84 121.8 482.52 120.48 482.52 118.8 c
482.52 117.12 483.84 115.92 485.4 115.92 c
487.08 115.92 488.4 117.12 488.4 118.8 c
488.4 120.48 487.08 121.8 485.4 121.8 c
h
q
eofill
Q
0.587997 0.587997 0.587997  setrgbcolor
S
n
450.24 131.52 m
448.68 131.52 447.36 130.2 447.36 128.52 c
447.36 126.84 448.68 125.64 450.24 125.64 c
451.92 125.64 453.24 126.84 453.24 128.52 c
453.24 130.2 451.92 131.52 450.24 131.52 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
449.28 141.24 m
447.72 141.24 446.4 139.92 446.4 138.24 c
446.4 136.56 447.72 135.36 449.28 135.36 c
450.96 135.36 452.28 136.56 452.28 138.24 c
452.28 139.92 450.96 141.24 449.28 141.24 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
429 151.08 m
427.44 151.08 426.12 149.76 426.12 148.08 c
426.12 146.4 427.44 145.2 429 145.2 c
430.68 145.2 432 146.4 432 148.08 c
432 149.76 430.68 151.08 429 151.08 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
420.72 160.8 m
419.16 160.8 417.84 159.48 417.84 157.8 c
417.84 156.12 419.16 154.92 420.72 154.92 c
422.4 154.92 423.72 156.12 423.72 157.8 c
423.72 159.48 422.4 160.8 420.72 160.8 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
420.24 170.52 m
418.68 170.52 417.36 169.2 417.36 167.52 c
417.36 165.84 418.68 164.64 420.24 164.64 c
421.92 164.64 423.24 165.84 423.24 167.52 c
423.24 169.2 421.92 170.52 420.24 170.52 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
417.48 180.24 m
415.92 180.24 414.6 178.92 414.6 177.24 c
414.6 175.56 415.92 174.36 417.48 174.36 c
419.16 174.36 420.48 175.56 420.48 177.24 c
420.48 178.92 419.16 180.24 417.48 180.24 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
411.36 190.08 m
409.8 190.08 408.48 188.76 408.48 187.08 c
408.48 185.4 409.8 184.2 411.36 184.2 c
413.04 184.2 414.36 185.4 414.36 187.08 c
414.36 188.76 413.04 190.08 411.36 190.08 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
403.08 229.08 m
401.52 229.08 400.2 227.76 400.2 226.08 c
400.2 224.4 401.52 223.2 403.08 223.2 c
404.76 223.2 406.08 224.4 406.08 226.08 c
406.08 227.76 404.76 229.08 403.08 229.08 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
383.28 268.08 m
381.72 268.08 380.4 266.76 380.4 265.08 c
380.4 263.4 381.72 262.2 383.28 262.2 c
384.96 262.2 386.28 263.4 386.28 265.08 c
386.28 266.76 384.96 268.08 383.28 268.08 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
365.52 287.52 m
363.96 287.52 362.64 286.2 362.64 284.52 c
362.64 282.84 363.96 281.64 365.52 281.64 c
367.2 281.64 368.52 282.84 368.52 284.52 c
368.52 286.2 367.2 287.52 365.52 287.52 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
361.32 365.52 m
359.76 365.52 358.44 364.2 358.44 362.52 c
358.44 360.84 359.76 359.64 361.32 359.64 c
363 359.64 364.32 360.84 364.32 362.52 c
364.32 364.2 363 365.52 361.32 365.52 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
357.36 433.8 m
355.8 433.8 354.48 432.48 354.48 430.8 c
354.48 429.12 355.8 427.92 357.36 427.92 c
359.04 427.92 360.36 429.12 360.36 430.8 c
360.36 432.48 359.04 433.8 357.36 433.8 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
356.28 472.8 m
354.72 472.8 353.4 471.48 353.4 469.8 c
353.4 468.12 354.72 466.92 356.28 466.92 c
357.96 466.92 359.28 468.12 359.28 469.8 c
359.28 471.48 357.96 472.8 356.28 472.8 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
n
356.28 609.24 m
354.72 609.24 353.4 607.92 353.4 606.24 c
353.4 604.56 354.72 603.36 356.28 603.36 c
357.96 603.36 359.28 604.56 359.28 606.24 c
359.28 607.92 357.96 609.24 356.28 609.24 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
q
n
481.92 115.44 4.32001 4.2 re
W
n
n
485.52 118.92 m
482.52 115.92 l
0.501999 0.501999 0.501999  setrgbcolor
S
Q
q
n
484.92 118.32 4.08002 4.32001 re
W
n
n
485.52 118.92 m
488.52 121.92 l
0.501999 0.501999 0.501999  setrgbcolor
S
Q
q
n
484.92 115.44 4.08002 4.2 re
W
n
n
485.52 118.92 m
488.52 115.92 l
0.501999 0.501999 0.501999  setrgbcolor
S
Q
n
485.52 118.92 m
482.52 121.92 l
485.52 118.92 m
482.52 118.92 l
0.501999 0.501999 0.501999  setrgbcolor
S
q
n
484.92 118.32 4.08002 1.32001 re
W
n
n
485.52 118.92 m
488.52 118.92 l
S
Q
n
328.44 128.64 m
325.44 125.64 l
328.44 128.64 m
331.44 131.64 l
328.44 128.64 m
331.44 125.64 l
328.44 128.64 m
325.44 131.64 l
328.44 128.64 m
325.44 128.64 l
328.44 128.64 m
331.44 128.64 l
278.28 148.2 m
275.28 145.2 l
278.28 148.2 m
281.28 151.2 l
278.28 148.2 m
281.28 145.2 l
278.28 148.2 m
275.28 151.2 l
278.28 148.2 m
275.28 148.2 l
278.28 148.2 m
281.28 148.2 l
271.68 167.64 m
268.68 164.64 l
271.68 167.64 m
274.68 170.64 l
271.68 167.64 m
274.68 164.64 l
271.68 167.64 m
268.68 170.64 l
271.68 167.64 m
268.68 167.64 l
271.68 167.64 m
274.68 167.64 l
269.76 177.36 m
266.76 174.36 l
269.76 177.36 m
272.76 180.36 l
269.76 177.36 m
272.76 174.36 l
269.76 177.36 m
266.76 180.36 l
269.76 177.36 m
266.76 177.36 l
269.76 177.36 m
272.76 177.36 l
263.4 196.92 m
260.4 193.92 l
263.4 196.92 m
266.4 199.92 l
263.4 196.92 m
266.4 193.92 l
263.4 196.92 m
260.4 199.92 l
263.4 196.92 m
260.4 196.92 l
263.4 196.92 m
266.4 196.92 l
239.76 226.2 m
236.76 223.2 l
239.76 226.2 m
242.76 229.2 l
239.76 226.2 m
242.76 223.2 l
239.76 226.2 m
236.76 229.2 l
239.76 226.2 m
236.76 226.2 l
239.76 226.2 m
242.76 226.2 l
233.4 235.92 m
230.4 232.92 l
233.4 235.92 m
236.4 238.92 l
233.4 235.92 m
236.4 232.92 l
233.4 235.92 m
230.4 238.92 l
233.4 235.92 m
230.4 235.92 l
233.4 235.92 m
236.4 235.92 l
233.16 304.2 m
230.16 301.2 l
233.16 304.2 m
236.16 307.2 l
233.16 304.2 m
236.16 301.2 l
233.16 304.2 m
230.16 307.2 l
233.16 304.2 m
230.16 304.2 l
233.16 304.2 m
236.16 304.2 l
190.56 333.36 m
187.56 330.36 l
190.56 333.36 m
193.56 336.36 l
190.56 333.36 m
193.56 330.36 l
190.56 333.36 m
187.56 336.36 l
190.56 333.36 m
187.56 333.36 l
190.56 333.36 m
193.56 333.36 l
179.04 391.92 m
176.04 388.92 l
179.04 391.92 m
182.04 394.92 l
179.04 391.92 m
182.04 388.92 l
179.04 391.92 m
176.04 394.92 l
179.04 391.92 m
176.04 391.92 l
179.04 391.92 m
182.04 391.92 l
170.76 421.08 m
167.76 418.08 l
170.76 421.08 m
173.76 424.08 l
170.76 421.08 m
173.76 418.08 l
170.76 421.08 m
167.76 424.08 l
S
n
170.76 421.08 m
167.76 421.08 l
170.76 421.08 m
173.76 421.08 l
170.76 606.36 m
167.76 603.36 l
S
q
n
170.16 605.76 4.32001 4.20001 re
W
n
n
170.76 606.36 m
173.76 609.36 l
S
Q
n
170.76 606.36 m
173.76 603.36 l
S
q
n
167.16 605.76 4.32001 4.20001 re
W
n
n
170.76 606.36 m
167.76 609.36 l
S
Q
n
170.76 606.36 m
167.76 606.36 l
170.76 606.36 m
173.76 606.36 l
S
q
n
481.44 115.44 4.79999 4.2 re
W
n
n
485.52 118.92 m
482.04 115.44 l
0 0 0  setrgbcolor
S
Q
q
n
484.92 118.32 4.08002 4.8 re
W
n
n
485.52 118.92 m
489 122.4 l
0 0 0  setrgbcolor
S
Q
q
n
484.92 115.44 4.08002 4.2 re
W
n
n
485.52 118.92 m
489 115.44 l
0 0 0  setrgbcolor
S
Q
n
485.52 118.92 m
482.04 122.4 l
485.28 128.64 m
481.8 125.16 l
0 0 0  setrgbcolor
S
q
n
484.68 128.04 4.32001 4.8 re
W
n
n
485.28 128.64 m
488.76 132.12 l
S
Q
q
n
484.68 124.56 4.32001 4.8 re
W
n
n
485.28 128.64 m
488.76 125.16 l
S
Q
n
485.28 128.64 m
481.8 132.12 l
483.36 177.36 m
479.88 173.88 l
483.36 177.36 m
486.84 180.84 l
483.36 177.36 m
486.84 173.88 l
483.36 177.36 m
479.88 180.84 l
482.88 216.36 m
479.4 212.88 l
482.88 216.36 m
486.36 219.84 l
482.88 216.36 m
486.36 212.88 l
482.88 216.36 m
479.4 219.84 l
480.12 284.64 m
476.64 281.16 l
480.12 284.64 m
483.6 288.12 l
480.12 284.64 m
483.6 281.16 l
480.12 284.64 m
476.64 288.12 l
480.12 391.92 m
476.64 388.44 l
480.12 391.92 m
483.6 395.4 l
480.12 391.92 m
483.6 388.44 l
480.12 391.92 m
476.64 395.4 l
479.88 411.36 m
476.4 407.88 l
479.88 411.36 m
483.36 414.84 l
479.88 411.36 m
483.36 407.88 l
479.88 411.36 m
476.4 414.84 l
479.88 460.08 m
476.4 456.6 l
479.88 460.08 m
483.36 463.56 l
479.88 460.08 m
483.36 456.6 l
479.88 460.08 m
476.4 463.56 l
479.76 469.92 m
476.28 466.44 l
479.76 469.92 m
483.24 473.4 l
479.76 469.92 m
483.24 466.44 l
479.76 469.92 m
476.28 473.4 l
479.76 606.36 m
476.28 602.88 l
S
q
n
479.16 605.76 4.80002 4.20001 re
W
n
n
479.76 606.36 m
483.24 609.84 l
S
Q
n
479.76 606.36 m
483.24 602.88 l
S
q
n
475.68 605.76 4.79999 4.20001 re
W
n
n
479.76 606.36 m
476.28 609.84 l
S
Q
489.12 103.44 m
/N24 [0 11.76 -11.76 0 0 0] Tf
(1) show
424.56 80.3998 m
(1.025) show
359.88 86.9996 m
(1.05) show
295.32 80.3998 m
(1.075) show
230.76 93.5993 m
(1.1) show
166.08 80.3998 m
(1.125) show
101.52 86.9996 m
(1.15) show
506.16 115.68 m
(05)
[48.7181 45.3583 ] pdfys
(1) show
(0)
[42.2983 ] pdfys
(1) show
(5)
[42.1784 ] pdfys
(2) show
(0)
[42.1784 ] pdfys
(2) show
(5)
[42.1784 ] pdfys
(3) show
(0)
[42.1784 ] pdfys
(3) show
(5)
[42.2983 ] pdfys
(4) show
(0)
[42.1784 ] pdfys
(4) show
(5)
[42.1784 ] pdfys
(50) show
526.32 331.559 m
/N26 [0 11.76 -11.76 0 0 0] Tf
(Generation) show
316.68 72.12 m
/N26 -11.76 Tf
(Speedup)
[-7.8003 -7.20172 -6.57265 -6.57265 -7.21936 -7.21936 -7.21936 ] pdfxs
n
202.68 598.68 100.68 -106.44 re
1 1 1  setrgbcolor
f
0.119995 w
n
202.56 492.12 100.8 106.56 re
0 0 0  setrgbcolor
S
0.960007 w
n
211.32 495.84 m
211.32 517.8 l
211.2 509.64 m
209.64 509.64 208.32 508.32 208.32 506.64 c
208.32 504.96 209.64 503.76 211.2 503.76 c
212.88 503.76 214.2 504.96 214.2 506.64 c
214.2 508.32 212.88 509.64 211.2 509.64 c
h
S
215.28 520.56 m
/N24 [0 11.76 -11.76 0 0 0] Tf
(mpeg2dec) show
n
228.12 495.84 m
228.12 517.8 l
225.12 506.76 m
231.12 509.76 l
231.12 503.76 l
225.12 506.76 l
h
0.501999 0.501999 0.501999  setrgbcolor
S
0 0 0  setrgbcolor
232.08 520.56 m
(rawcaudio) show
n
244.92 495.84 m
244.92 517.8 l
0.501999 0.501999 0.501999  setrgbcolor
S
n
241.92 506.76 m
247.92 509.76 l
247.92 503.76 l
241.92 506.76 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
248.88 520.56 m
(g721decode) show
n
261.72 495.84 m
261.72 517.8 l
0.587997 0.587997 0.587997  setrgbcolor
S
n
261.6 509.64 m
260.04 509.64 258.72 508.32 258.72 506.64 c
258.72 504.96 260.04 503.76 261.6 503.76 c
263.28 503.76 264.6 504.96 264.6 506.64 c
264.6 508.32 263.28 509.64 261.6 509.64 c
h
q
0.501999 0.501999 0.501999  setrgbcolor
eofill
Q
S
0 0 0  setrgbcolor
265.68 520.56 m
(129.compress) show
n
278.52 495.84 m
278.52 517.8 l
0.587997 0.587997 0.587997  setrgbcolor
S
n
278.52 506.76 m
275.52 503.76 l
278.52 506.76 m
281.52 509.76 l
278.52 506.76 m
281.52 503.76 l
278.52 506.76 m
275.52 509.76 l
278.52 506.76 m
275.52 506.76 l
278.52 506.76 m
281.52 506.76 l
0.501999 0.501999 0.501999  setrgbcolor
S
0 0 0  setrgbcolor
282.48 520.56 m
(huff_enc) show
n
295.32 495.84 m
295.32 517.8 l
295.32 506.76 m
291.84 503.28 l
295.32 506.76 m
298.8 510.24 l
295.32 506.76 m
298.8 503.28 l
295.32 506.76 m
291.84 510.24 l
S
299.28 520.56 m
(huff_dec) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 3503 a FA(Figure)41 b(10:)61 b Fq(Register)37
b(allo)r(cation)e(ev)n(olution.)65 b(This)37 b(\014gure)-152
3590 y(graphs)c(\014tness)g(o)n(v)n(er)f(generations.)52
b(Unlik)n(e)32 b(the)h(h)n(yp)r(erblo)r(c)n(k)-152 3677
y(selection)27 b(ev)n(olution,)e(these)j(\014tnesses)g(impro)n(v)n(e)e
(gradually)-7 b(.)-77 3983 y FB(Once)30 b(again,)k(it)d(mak)n(es)g
(sense)g(that)g(the)f(training)i(input)e(data)-152 4070
y(outp)r(erforms)35 b(the)e(alternate)i(input)e(data.)58
b(In)33 b(the)h(case)g(of)h(reg-)-152 4157 y(ister)30
b(allo)r(cation)h(ho)n(w)n(ev)n(er,)f(w)n(e)f(see)g(that)g(the)f
(disparit)n(y)h(b)r(et)n(w)n(een)-152 4244 y(sp)r(eedups)21
b(on)g(training)h(and)f(no)n(v)n(el)g(data)g(is)h(less)g(pronounced)e
(than)-152 4332 y(it)j(is)g(with)g(h)n(yp)r(erblo)r(c)n(k)e(selection.)
35 b(This)23 b(is)h(lik)n(ely)e(b)r(ecause)h(h)n(yp)r(er-)-152
4419 y(blo)r(c)n(k)g(selection)h(is)f(extremely)g(data-driv)n(en.)33
b(An)22 b(examination)h(of)-152 4506 y(the)30 b(general-purp)r(ose)h(h)
n(yp)r(erblo)r(c)n(k)f(formation)h(heuristic)g(rev)n(eals)-152
4593 y(t)n(w)n(o)20 b(dynamic)f(factors)h(\()p Fw(exec)p
717 4593 24 4 v 27 w(r)r(atio)f FB(and)g Fw(pr)r(edict)p
1314 4593 V 27 w(pr)r(oduct)p 1599 4593 V 27 w(mean)p
FB(\))-152 4680 y(that)k(are)g(critical)h(comp)r(onen)n(ts)f(in)g(the)g
(h)n(yp)r(erblo)r(c)n(k)e(decision)j(pro-)-152 4767 y(cess.)-77
4855 y(Figure)32 b(10)f(graphs)h(\014tness)f(impro)n(v)n(emen)n(ts)f(o)
n(v)n(er)h(generations.)-152 4942 y(It)f(is)g(in)n(teresting)h(to)f
(con)n(trast)h(this)f(graph)g(with)g(Figure)h(5.)48 b(The)-152
5029 y(fairly)32 b(constan)n(t)f(impro)n(v)n(emen)n(t)f(in)h(\014tness)
f(o)n(v)n(er)h(sev)n(eral)g(genera-)-152 5116 y(tions)k(seems)g(to)g
(suggest)g(that)f(this)g(problem)h(is)g(harder)f(to)g(op-)-152
5203 y(timize)g(than)e(h)n(yp)r(erblo)r(c)n(k)f(selection.)57
b(Additionally)-6 b(,)34 b(unlik)n(e)e(the)-152 5290
y(h)n(yp)r(erblo)r(c)n(k)d(selection)i(algorithm,)h(the)d(baseline)h
(heuristic)g(t)n(ypi-)-152 5378 y(cally)d(remained)f(in)f(the)h(p)r
(opulation)g(for)g(sev)n(eral)h(generations.)2040 1079
y @beginspecial 117 @llx 63 @lly 783 @urx 477 @ury 2376
@rwi @clip @setspecial
%%BeginDocument: ./figs/regalloc_train.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (regalloc_train.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422210234-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 117 63 783 477
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
117 63 moveto 783 63 lineto 783 477 lineto 117 477 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
117 63 665 413 rectclip
[ 0 -1 1 0 54 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font AOFAKK+Arial
11 dict begin
/FontName /AOFAKK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/h 
<10bf31703f932f5ecb68c849e33d1fed17c766a03dcb89fd4259247501b2
92adfc2297be69c7091e34ced000096d0ca29850717d0ee8abe567011317
96a4072dab7df40090735d5712990fb13b0847093cc929cc1cd64c87dd80
565b94c081eb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AOFAKK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 78 /N put
dup 84 /T put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 160 /space put
pop
%%EndResource
[/N15/AOFAKK+Arial 1 TZ
%%BeginResource: font AOFAKI+Arial,Bold
11 dict begin
/FontName /AOFAKI+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/zero 
<10bf317047276c49b0d576f188d46ae965fd1ee754bf887206fb36232fbb
89f30bf7d7ccc04b68096e51e4fa383bd83a62a12254967c97fccef8f682
660584deed9a81b43cbb2c7b7968da901e3ae8e83e66419f304294be518a
c53bdfb87ba841dcf049e90378ca4bf02bb8502cda53c68c5e2344ff3039
a6b7677199a113d4a1df9615bbdd894af0ddf69e08437253bed3648332ae
c1e0f4e1525f1c1a3191b7b4ff> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/three 
<10bf3170435d0d440860530d539ff91fbeb84b45ccc7a1133230e64e009e
0c490ad4a8c72e30c66b9d7da2ebb61201fd5dbcf58b0c0488dc2a377321
5f26e0f7b61ae06bbd548a7c70db3930bb70d925be0576849d7017235523
559a7bd33c2b1cf718bf0b01521a2da1ae141319b8a7b7648826982192c9
9cac43d499c3346f8ae704779f7b332be818bd1aedb27938b45cc4303b57
6f7b6048a80721796cf703217479afeb4946fccc211036e97d76c144b665
49f485406b5a21bfa9b3b6ddd1fb25f39a00f379> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AOFAKI+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/AOFAKI+Arial,Bold 1 TZ
false setSA
n
75.96 733.08 459.24 -675.12 re
1 1 1 setrgbcolor
f
n
126.96 726.36 295.8 -594.24 re
f
q
n
373.44 132.12 0.119995 594.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
373.44 132.12 m
373.44 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
324.12 132.12 0.119995 594.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
324.12 132.12 m
324.12 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
274.92 132.12 0.119995 594.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
274.92 132.12 m
274.92 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
225.6 132.12 0.119995 594.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
225.6 132.12 m
225.6 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
176.28 132.12 0.119995 594.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
176.28 132.12 m
176.28 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
126.96 132.12 0.119995 594.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
126.96 132.12 m
126.96 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
141.72 202.32 20.76 224.64 re
eoclip
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
126.96 132.12 295.8 594.24 re
0.753006 0.753006 0.753006  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
244.56 146.28 178.2 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
257.4 212.28 165.36 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
261 278.28 161.76 18.84 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
184.56 344.4 238.2 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
274.32 410.4 148.44 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
310.8 476.4 111.96 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
274.92 542.4 147.84 18.84 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
q
n
165.6 602.52 257.16 30.84 re
W
n
n
171.6 608.52 251.16 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
Q
n
247.44 674.52 175.32 18.72 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
255.84 165.12 166.92 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
262.2 231.12 160.56 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
255.6 297.24 167.16 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
q
n
170.4 357.24 252.36 30.84 re
W
n
n
176.4 363.24 246.36 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
Q
n
274.56 429.24 148.2 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
282 495.24 140.76 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
274.8 561.36 147.96 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
183.96 627.36 238.8 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
245.64 693.36 177.12 18.72 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
0.119995 w
n
126.96 132.12 m
422.76 132.12 l
422.76 127.56 m
422.76 132.12 l
373.44 127.56 m
373.44 132.12 l
324.12 127.56 m
324.12 132.12 l
274.92 127.56 m
274.92 132.12 l
225.6 127.56 m
225.6 132.12 l
176.28 127.56 m
176.28 132.12 l
126.96 127.56 m
126.96 132.12 l
422.76 132.12 m
422.76 726.36 l
427.32 132.12 m
422.76 132.12 l
427.32 198.12 m
422.76 198.12 l
427.32 264.12 m
422.76 264.12 l
427.32 330.24 m
422.76 330.24 l
427.32 396.24 m
422.76 396.24 l
427.32 462.24 m
422.76 462.24 l
427.32 528.24 m
422.76 528.24 l
427.32 594.36 m
422.76 594.36 l
427.32 660.36 m
422.76 660.36 l
427.32 726.36 m
422.76 726.36 l
S
1 1 1  setrgbcolor
274.08 687.36 m
/N13 -11.76 Tf
(1.03)
[-6.59849 -3.24219 -6.59849 -6.59849 ] pdfxs
272.279 706.2 m
(1.03)
[-6.59849 -3.24219 -6.59849 -6.59849 ] pdfxs
0 0 0  setrgbcolor
427.56 92.4 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(0.85) show
378.239 100.559 m
(0.9) show
328.919 92.4 m
(0.95) show
279.719 112.8 m
(1) show
230.399 92.4 m
(1.05) show
181.078 100.559 m
(1.1) show
131.757 92.4 m
(1.15) show
526.44 169.92 m
/N15 -14.76 Tf
(129.compress)
[-8.16669 -8.16669 -8.16669 -4.06341 -7.4405 -8.15783 -12.2551 -8.16669 -4.8751 -8.16669 -7.4405 
-7.34013 ] pdfxs
514.8 235.919 m
(g721decode)
[-8.15791 -8.15791 -8.15791 -8.15791 -8.15791 -8.15791 -7.44057 -8.15791 -8.15791 -8.15791 ] pdfxs
514.8 302.04 m
(g721encode)
[-8.15791 -8.15791 -8.15791 -8.15791 -8.15791 -8.15791 -7.44057 -8.15791 -8.15791 -8.15791 ] pdfxs
490.321 368.039 m
(huff_enc)
[-8.16534 -8.16534 -4.06206 -4.06206 -8.16534 -8.16534 -8.16534 -7.33878 ] pdfxs
490.321 434.038 m
(huff_dec)
[-8.16534 -8.16534 -4.06206 -4.06206 -8.16534 -8.16534 -8.16534 -7.33878 ] pdfxs
500.761 500.038 m
(rawcaudio)
[-4.89132 -8.18291 -10.6328 -7.44048 -8.18291 -8.18291 -8.18291 -3.25285 -8.18291 ] pdfxs
501.481 566.037 m
(rawdaudio)
[-4.88254 -8.17412 -10.6241 -8.17412 -8.17412 -8.17412 -8.17412 -3.24406 -8.17412 ] pdfxs
502.561 632.157 m
(mpeg2dec)
[-12.2447 -8.15633 -8.15633 -8.15633 -8.15633 -8.15633 -8.15633 -7.32977 ] pdfxs
488.641 698.156 m
(Average)
[-9.81665 -7.4404 -8.1784 -4.88682 -8.1784 -8.1784 -8.1784 ] pdfxs
305.881 82.4375 m
/N13 -14.76 Tf
(Speedup)
[-9.82115 -8.9946 -8.18291 -8.18291 -8.9946 -8.9946 -8.9946 ] pdfxs
n
141.84 426.84 20.64 -224.4 re
1 1 1  setrgbcolor
f
n
141.72 202.32 20.76 224.52 re
0 0 0  setrgbcolor
S
0.960007 w
n
148.08 206.76 9 9 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
157.56 219.36 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(Train data set) show
n
148.08 315.96 9 9 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
157.56 328.56 m
(Novel data set) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 170 x FA(Figure)32 b(11:)46 b Fq(T)-7 b(raining)28
b(a)i(register)f(allo)r(cation)e(priorit)n(y)h(func-)2040
1336 y(tion)19 b(on)h(m)n(ultiple)e(b)r(enc)n(hmarks.)33
b(Our)20 b(DSS)g(ev)n(olution)f(trained)2040 1424 y(on)k(all)f(the)h(b)
r(enc)n(hmarks)g(in)g(this)g(\014gure.)34 b(The)23 b(single)g(b)r(est)g
(pri-)2040 1511 y(orit)n(y)32 b(function)h(w)n(as)f(applied)h(to)g(all)
f(the)h(b)r(enc)n(hmarks.)55 b(The)2040 1598 y(dark)34
b(bars)g(represen)n(t)h(sp)r(eedups)h(obtained)f(b)n(y)f(running)h(the)
2040 1685 y(giv)n(en)41 b(b)r(enc)n(hmark)g(on)g(the)h(same)f(data)f
(that)h(w)n(as)f(used)i(to)2040 1772 y(train)35 b(the)h(priorit)n(y)e
(function.)62 b(The)36 b(ligh)n(t)e(bars)i(corresp)r(ond)2040
1860 y(to)27 b(an)f(alternate)g(data)g(set.)2040 3280
y @beginspecial 90 @llx 63 @lly 755 @urx 504 @ury 2376
@rwi @clip @setspecial
%%BeginDocument: ./figs/regalloc_test.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (regalloc_gp.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030422204331-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 90 63 755 504
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
90 63 moveto 755 63 lineto 755 504 lineto 90 504 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
90 63 665 441 rectclip
[ 0 -1 1 0 26.64 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font PMOBCD+Arial
11 dict begin
/FontName /PMOBCD+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/j 
<10bf3170af4c4e03cb099088e1548d44a53dbade2c858e7043672d28af7a
255a52c1fc5961ee26822ea9a234df911035f9c353cbc5b83b929a71f6d2
1b26fffa3fa0b8fccdceb1472f97c84f0973818dc194> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/q 
<10bf31705c36af5cef64feff3875e93eaf63e864fd70bb6a233352105e24
3a5cd4f03912d5acd21f32af0f91c1a9946998d2b523bf278ed7e760296f
82ab85e13d34ee43890ecb71199ab005d452eb9982133856fef3006dcdc9
47bf3adb9d4a6a991e8aff21b2bb5591c29aca63e8bcc0429c71b550be84
f5817c08976f9f682b468226026818eeaa8d92033b36d7291e> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ff75d7a6d9ab8ab83f71f1130ffc9a46b
7d934ffb8ab93375fd62539cb08006> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PMOBCD+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
pop
%%EndResource
[/N15/PMOBCD+Arial 1 TZ
%%BeginResource: font PMOBBH+Arial,Bold
11 dict begin
/FontName /PMOBBH+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/zero 
<10bf317047276c49b0d576f188d46ae965fd1ee754bf887206fb36232fbb
89f30bf7d7ccc04b68096e51e4fa383bd83a62a12254967c97fccef8f682
660584deed9a81b43cbb2c7b7968da901e3ae8e83e66419f304294be518a
c53bdfb87ba841dcf049e90378ca4bf02bb8502cda53c68c5e2344ff3039
a6b7677199a113d4a1df9615bbdd894af0ddf69e08437253bed3648332ae
c1e0f4e1525f1c1a3191b7b4ff> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/two 
<10bf3170560f9ea7e16bf7693df0cb4f75611840d7a72974788dc612e04a
7d391fa4118f20c60ca0210831c4216daf82822fd8577427332b85b36191
bafa300362603f7ac5486d82f6744735bd9aea952436a54773d0a34c3025
802ed04fffcb4fa74d75ac70e802cddfdbd6346360b0b1acf15e7ef6f0dd
ea8a6108bc3278173c6d152ded71a3f7dba5eefbc64d9c815a4795> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PMOBBH+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/PMOBBH+Arial,Bold 1 TZ
false setSA
n
75.96 733.08 459.24 -675.12 re
1 1 1 setrgbcolor
f
n
105 726.36 320.4 -594.84 re
f
q
n
372 131.52 0.119995 594.84 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
372 131.52 m
372 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
318.6 131.52 0.119995 594.84 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
318.6 131.52 m
318.6 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
265.2 131.52 0.119995 594.84 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
265.2 131.52 m
265.2 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
211.8 131.52 0.119995 594.84 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
211.8 131.52 m
211.8 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
158.4 131.52 0.119995 594.84 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
158.4 131.52 m
158.4 726.36 l
0 0 0  setrgbcolor
S
Q
q
n
105 131.52 0.119995 594.84 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
105 131.52 m
105 726.36 l
0 0 0  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
105 131.52 320.4 594.84 re
0.501999 0.501999 0.501999  setrgbcolor
S
n
329.4 147.72 96 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
258.36 201.84 167.04 21.48 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
262.92 255.84 162.48 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
254.52 309.96 170.88 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
309.24 364.08 116.16 21.48 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
268.32 418.08 157.08 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
320.04 472.2 105.36 21.48 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
q
n
133.2 520.2 292.2 33.72 re
W
n
n
139.2 526.2 286.2 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
Q
n
253.92 580.32 171.48 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
210.36 634.44 215.04 21.48 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
260.64 688.44 164.76 21.6 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
0.119995 w
n
105 131.52 m
425.4 131.52 l
425.4 126.96 m
425.4 131.52 l
372 126.96 m
372 131.52 l
318.6 126.96 m
318.6 131.52 l
265.2 126.96 m
265.2 131.52 l
211.8 126.96 m
211.8 131.52 l
158.4 126.96 m
158.4 131.52 l
105 126.96 m
105 131.52 l
425.4 131.52 m
425.4 726.36 l
429.96 131.52 m
425.4 131.52 l
429.96 185.64 m
425.4 185.64 l
429.96 239.64 m
425.4 239.64 l
429.96 293.76 m
425.4 293.76 l
429.96 347.88 m
425.4 347.88 l
429.96 401.88 m
425.4 401.88 l
429.96 456 m
425.4 456 l
429.96 510 m
425.4 510 l
429.96 564.12 m
425.4 564.12 l
429.96 618.24 m
425.4 618.24 l
429.96 672.24 m
425.4 672.24 l
429.96 726.36 m
425.4 726.36 l
S
1 1 1  setrgbcolor
287.76 702.84 m
/N13 -12 Tf
(1.02)
[-6.71283 -3.37683 -6.71283 -6.71283 ] pdfxs
0 0 0  setrgbcolor
430.32 90.84 m
/N15 [0 15 -15 0 0 0] Tf
(0.96) show
376.92 90.84 m
(0.98) show
323.52 111.84 m
(1) show
270.12 90.84 m
(1.02) show
216.72 90.84 m
(1.04) show
163.32 90.84 m
(1.06) show
109.92 90.84 m
(1.08) show
503.04 163.44 m
/N15 -15 Tf
(decodrle4)
[-8.39241 -8.39241 -7.55241 -8.39241 -8.39241 -5.0473 -3.38219 -8.39241 -8.39241 ] pdfxs
486.24 217.56 m
(codrle4)
[-7.55104 -8.39104 -8.39104 -5.04593 -3.38081 -8.39104 -8.39104 ] pdfxs
526.32 271.68 m
(124.m88ksim)
[-8.38509 -8.38509 -8.38509 -4.21509 -12.54 -8.38509 -8.38509 -7.54509 -7.54509 -3.37486 -12.54 
] pdfxs
481.2 325.68 m
(unepic)
[-8.39104 -8.39104 -8.39104 -8.39104 -3.38081 -7.55104 ] pdfxs
473.64 379.8 m
(djpeg)
[-8.39104 -3.38081 -8.39104 -8.39104 -8.39104 ] pdfxs
512.28 433.92 m
(023.eqntott)
[-8.38943 -8.38943 -8.38943 -4.21944 -8.38943 -8.38943 -8.38943 -4.21944 -8.38943 -4.21944 -4.21944 
] pdfxs
498 487.92 m
(132.ijpeg)
[-8.38806 -8.38806 -8.38806 -4.21806 -3.37784 -3.37784 -8.38806 -8.38806 -8.38806 ] pdfxs
506.76 542.04 m
(147.vortex)
[-8.39104 -8.39104 -8.39104 -4.22104 -7.55104 -8.39104 -5.04593 -4.22104 -8.39104 -7.55104 ] pdfxs
489.6 596.04 m
(085.cc1)
[-8.39539 -8.39539 -8.39539 -4.22539 -7.55539 -7.55539 -8.39539 ] pdfxs
472.8 650.16 m
(130.li)
[-8.38348 -8.38348 -8.38348 -4.21349 -3.37326 -3.37326 ] pdfxs
492.6 704.28 m
(Average)
[-9.9599 -7.56002 -8.39401 -5.0489 -8.39401 -8.39401 -8.39401 ] pdfxs
296.88 80.5204 m
/N13 -15 Tf
(Speedup)
[-9.963 -9.123 -8.39711 -8.39711 -9.123 -9.123 -9.123 ] pdfxs
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 170 x FA(Figure)i(12:)39 b Fq(Cross)26 b(v)-5
b(alidation)25 b(of)h(the)h(general-purp)r(ose)f(reg-)2040
3537 y(ister)c(allo)r(cation)e(priorit)n(y)g(function.)34
b(The)23 b(b)r(est)g(priorit)n(y)d(func-)2040 3625 y(tion)k(found)i(b)n
(y)e(the)i(DSS)f(run)h(is)e(applied)h(to)f(the)i(b)r(enc)n(hmarks)2040
3712 y(in)h(this)g(graph.)35 b(Results)27 b(from)f(t)n(w)n(o)g(target)f
(arc)n(hitectures)h(are)2040 3799 y(sho)n(wn.)2063 4048
y Fe(6.1.2)90 b(Gener)o(al\255Purpose)18 b(Priority)k(Functions)2115
4156 y FB(Just)h(as)g(w)n(e)g(did)f(in)g(Section)h(5.4.2,)i(w)n(e)e
(divide)g(our)f(b)r(enc)n(hmarks)2040 4243 y(in)n(to)k(a)h(training)g
(set)f(and)g(a)h(test)f(set)3131 4211 y Fs(7)3166 4243
y FB(.)36 b(The)26 b(b)r(enc)n(hmarks)g(in)g(Fig-)2040
4330 y(ure)e(11)g(sho)n(w)h(the)e(training)i(set)f(for)g(this)g(exp)r
(erimen)n(t.)34 b(The)24 b(\014gure)2040 4417 y(also)i(sho)n(ws)g(the)e
(results)h(of)g(applying)g(the)f(b)r(est)h(priorit)n(y)f(function)2040
4504 y(\(from)30 b(our)f(DSS)e(run\))i(to)g(all)h(the)e(b)r(enc)n
(hmarks)g(in)h(the)g(set.)44 b(The)2040 4591 y(dark)37
b(bar)f(asso)r(ciated)j(with)e(eac)n(h)g(b)r(enc)n(hmark)f(is)i(the)e
(sp)r(eedup)2040 4679 y(o)n(v)n(er)31 b(T)-6 b(rimaran's)32
b(baseline)g(heuristic)f(when)f(using)i(the)e(training)2040
4766 y(input)24 b(data.)34 b(The)25 b(a)n(v)n(erage)g(for)g(this)g
(data)g(set)g(is)g(3\045.)34 b(On)24 b(a)h(no)n(v)n(el)2040
4853 y(data)19 b(set)f(w)n(e)h(attain)g(an)f(a)n(v)n(erage)h(sp)r
(eedup)f(of)h(3\045,)h(whic)n(h)f(indicates)2040 4940
y(that)25 b(register)h(allo)r(cation)h(is)e(not)g(as)g(susceptible)h
(to)f(v)l(ariations)h(in)2040 5027 y(input)f(data.)2115
5114 y(Figure)33 b(12)h(sho)n(ws)f(the)g(cross)g(v)l(alidation)h
(results)f(for)h(this)e(ex-)p 2040 5193 797 4 v 2044
5246 a Fs(7)2078 5278 y Fr(This)20 b(exp)q(erimen)o(t)i(uses)e(smaller)
g(test)h(and)g(training)g(sets)g(due)g(to)g(preexisting)g(bugs)g(in)
2040 5328 y(T)l(rimaran.)k(It)20 b(do)q(es)g(not)g(correctly)h(compile)
f(sev)o(eral)f(of)h(our)g(b)q(enc)o(hmarks)g(when)g(target-)2040
5378 y(ing)g(a)g(mac)o(hine)f(with)h(32)g(registers.)p
eop
%%Page: 11 11
11 10 bop -145 1079 a @beginspecial 117 @llx 63 @lly
783 @urx 477 @ury 2376 @rwi @clip @setspecial
%%BeginDocument: figs/prefetching_spec.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (prefetching-numbers.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030425173303-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 117 63 783 477
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
117 63 moveto 783 63 lineto 783 477 lineto 117 477 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
117 63 665 413 rectclip
[ 0 -1 1 0 54 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font MBJDEK+Arial
11 dict begin
/FontName /MBJDEK+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/j 
<10bf3170af4c4e03cb099088e1548d44a53dbade2c858e7043672d28af7a
255a52c1fc5961ee26822ea9a234df911035f9c353cbc5b83b929a71f6d2
1b26fffa3fa0b8fccdceb1472f97c84f0973818dc194> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/MBJDEK+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 78 /N put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 160 /space put
pop
%%EndResource
[/N15/MBJDEK+Arial 1 TZ
%%BeginResource: font MBJDEI+Arial,Bold
11 dict begin
/FontName /MBJDEI+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/zero 
<10bf317047276c49b0d576f188d46ae965fd1ee754bf887206fb36232fbb
89f30bf7d7ccc04b68096e51e4fa383bd83a62a12254967c97fccef8f682
660584deed9a81b43cbb2c7b7968da901e3ae8e83e66419f304294be518a
c53bdfb87ba841dcf049e90378ca4bf02bb8502cda53c68c5e2344ff3039
a6b7677199a113d4a1df9615bbdd894af0ddf69e08437253bed3648332ae
c1e0f4e1525f1c1a3191b7b4ff> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/three 
<10bf3170435d0d440860530d539ff91fbeb84b45ccc7a1133230e64e009e
0c490ad4a8c72e30c66b9d7da2ebb61201fd5dbcf58b0c0488dc2a377321
5f26e0f7b61ae06bbd548a7c70db3930bb70d925be0576849d7017235523
559a7bd33c2b1cf718bf0b01521a2da1ae141319b8a7b7648826982192c9
9cac43d499c3346f8ae704779f7b332be818bd1aedb27938b45cc4303b57
6f7b6048a80721796cf703217479afeb4946fccc211036e97d76c144b665
49f485406b5a21bfa9b3b6ddd1fb25f39a00f379> ND 
/four 
<10bf31706c4c139ade6f8bf362e1c7a16dbcd949f520c66a4ee068301011
5c84fd3458c85a1ed0da84b737ec75e38936c9e254983ec49c73b3d2f1ea
186a33> ND 
/five 
<10bf317045bac03cbb36d436f7d39d6a14b5d4927fa1207089e9bb93285a
8a89fc87d0321f2870a2d7b1738d7f6f7c0a6dc828de6c5cacb5b2cd49e5
affe133d3a4281edfd13fbeaf4bb7b2bac2c239fe074efab974ff5c1a7d9
09cc004d88dae324a0c297547d69551cd69163ec55c49d6dc108adda14c4
40493fc655bef7d1c3df7be9f8747641> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/MBJDEI+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/MBJDEI+Arial,Bold 1 TZ
false setSA
n
76.02 733.02 459.06 -675 re
1 1 1 setrgbcolor
f
q
n
396.96 121.02 0.0599976 604.38 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
396.96 121.02 m
396.96 725.4 l
0 0 0  setrgbcolor
S
Q
q
n
342.54 121.02 0.0599976 604.38 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
342.54 121.02 m
342.54 725.4 l
0 0 0  setrgbcolor
S
Q
q
n
288.18 121.02 0.0599976 604.38 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
288.18 121.02 m
288.18 725.4 l
0 0 0  setrgbcolor
S
Q
q
n
233.76 121.02 0.0599976 604.38 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
233.76 121.02 m
233.76 725.4 l
0 0 0  setrgbcolor
S
Q
q
n
179.34 121.02 0.0599976 604.38 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
179.34 121.02 m
179.34 725.4 l
0 0 0  setrgbcolor
S
Q
q
n
124.92 121.02 0.0599976 604.38 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
124.92 121.02 m
124.92 725.4 l
0 0 0  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
147.6 260.16 17.22 161.52 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
124.92 121.02 326.46 604.38 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
334.38 132.78 117 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
189.12 187.74 262.26 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
303.42 242.64 147.96 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
312.12 297.6 139.26 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
305.58 352.56 145.8 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
247.86 407.52 203.52 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
340.38 462.42 111 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
338.34 517.38 113.04 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
337.14 572.34 114.24 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
337.14 627.3 114.24 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
304.56 682.2 146.82 15.66 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
336.06 148.5 115.32 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
q
n
142.32 198.06 309.06 26.46 re
W
n
n
147.72 203.46 303.66 15.6 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
Q
n
292.02 258.36 159.36 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
312.12 313.32 139.26 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
306.18 368.28 145.2 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
248.52 423.24 202.86 15.6 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
339.72 478.14 111.66 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
339.3 533.1 112.08 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
360.54 588.06 90.84 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
311.7 643.02 139.68 15.6 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
299.4 697.92 151.98 15.66 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
0.0599976 w
n
124.92 121.02 m
451.38 121.02 l
451.38 117.3 m
451.38 121.02 l
396.96 117.3 m
396.96 121.02 l
342.54 117.3 m
342.54 121.02 l
288.18 117.3 m
288.18 121.02 l
233.76 117.3 m
233.76 121.02 l
179.34 117.3 m
179.34 121.02 l
124.92 117.3 m
124.92 121.02 l
451.38 121.02 m
451.38 725.4 l
455.1 121.02 m
451.38 121.02 l
455.1 175.98 m
451.38 175.98 l
455.1 230.88 m
451.38 230.88 l
455.1 285.84 m
451.38 285.84 l
455.1 340.8 m
451.38 340.8 l
455.1 395.76 m
451.38 395.76 l
455.1 450.66 m
451.38 450.66 l
455.1 505.62 m
451.38 505.62 l
455.1 560.58 m
451.38 560.58 l
455.1 615.54 m
451.38 615.54 l
455.1 670.44 m
451.38 670.44 l
455.1 725.4 m
451.38 725.4 l
S
1 1 1  setrgbcolor
331.5 693.66 m
/N13 -12 Tf
(1.35)
[-6.66724 -3.33124 -6.66724 -6.66724 ] pdfxs
326.34 709.38 m
(1.40)
[-6.66724 -3.33124 -6.66724 -6.66724 ] pdfxs
0 0 0  setrgbcolor
455.16 88.56 m
/N15 [0 12 -12 0 0 0] Tf
(0.00) show
400.74 88.56 m
(0.50) show
346.32 88.56 m
(1.00) show
291.96 88.56 m
(1.50) show
237.54 88.56 m
(2.00) show
183.12 88.56 m
(2.50) show
128.7 88.56 m
(3.00) show
525.9 152.22 m
/N15 -12 Tf
(101) show
(.t)
[-3.33966 -3.33966 ] pdfxs
(o) show
(mc)
[-9.99957 -6.00366 ] pdfxs
(a) show
(tv)
[-3.33966 -6.00366 ] pdfxs
511.14 207.18 m
(102.swim)
[-6.65991 -6.65991 -6.65991 -3.32391 -5.98792 -8.65173 -2.65173 -9.98383 ] pdfxs
519.84 262.08 m
(103.su2cor)
[-6.66486 -6.66486 -6.66486 -3.32886 -5.99286 -6.66486 -6.66486 -5.99286 -6.66486 -3.98877 ] pdfxs
517.86 317.04 m
(125)
[-6.66962 -6.66962 -6.66962 ] pdfxs
(.t) show
(urb3d)
[-6.66962 -3.99353 -6.66962 -6.66962 -6.66962 ] pdfxs
518.46 372 m
(146.wave5)
[-6.66357 -6.66357 -6.66357 -3.32758 -8.6554 -6.66357 -5.99158 -6.66357 -6.66357 ] pdfxs
516.48 426.96 m
(093.nasa7)
[-6.66357 -6.66357 -6.66357 -3.32758 -6.66357 -6.66357 -5.99158 -6.66357 -6.66357 ] pdfxs
516.48 481.86 m
(015.doduc)
[-6.66248 -6.66248 -6.66248 -3.32648 -6.66248 -6.66248 -6.66248 -6.66248 -5.99048 ] pdfxs
525.84 536.82 m
(034.mdljdp2)
[-6.66248 -6.66248 -6.66248 -3.32648 -9.98639 -6.66248 -2.6543 -2.6543 -6.66248 -6.66248 -6.66248 
] pdfxs
513.84 591.78 m
(107)
[-6.67072 -6.67072 -6.67072 ] pdfxs
(.m) show
(g)
[-6.67072 ] pdfxs
(r) show
(id)
[-2.66254 -6.67072 ] pdfxs
505.8 646.68 m
(141.apsi)
[-6.66595 -6.66595 -6.66595 -3.32996 -6.66595 -6.66595 -5.99396 -2.65778 ] pdfxs
505.14 701.64 m
(Average)
[-7.99548 -5.99158 -6.66357 -3.98749 -6.66357 -6.66357 -6.66357 ] pdfxs
313.44 80.3401 m
/N13 -12 Tf
(Speedup)
[-7.99072 -7.31873 -6.65881 -6.65881 -7.31873 -7.31873 -7.31873 ] pdfxs
n
147.66 421.62 17.16 -161.4 re
1 1 1  setrgbcolor
f
n
147.6 260.16 17.22 161.46 re
0 0 0  setrgbcolor
S
0.960007 w
n
152.76 263.94 7.38 7.38 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
160.62 274.2 m
/N15 [0 12 -12 0 0 0] Tf
(Training data) show
n
152.76 349.98 7.38 7.38 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
160.62 360.24 m
(Novel data) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial -152 1249 a FA(Figure)22 b(13:)36 b Fq(Prefetc)n(hing)21
b(sp)r(ecialization.)32 b(This)20 b(graph)g(sho)n(ws)-152
1336 y(sp)r(eedups)29 b(obtained)d(b)n(y)h(training)e(on)i(a)g(p)r
(er-b)r(enc)n(hmarks)g(ba-)-152 1424 y(sis.)34 b(The)23
b(dark)g(colored)f(bars)g(are)g(executions)h(using)g(the)g(same)-152
1511 y(data)32 b(set)g(on)h(whic)n(h)f(the)h(sp)r(ecialized)f(priorit)n
(y)f(function)h(w)n(as)-152 1598 y(trained.)47 b(The)31
b(ligh)n(t)e(colored)h(bars)h(are)f(executions)h(that)f(use)-152
1685 y(a)d(no)n(v)n(el)f(data)g(set.)-152 1909 y FB(p)r(erimen)n(t.)44
b(The)28 b(\014gure)h(sho)n(ws)g(the)g(sp)r(eedups)f(\(o)n(v)n(er)g(T)
-6 b(rimaran's)-152 1997 y(baseline\))25 b(ac)n(hiev)n(ed)f(b)n(y)e
(applying)i(the)g(single)h(b)r(est)e(priorit)n(y)h(func-)-152
2084 y(tion)d(to)f(a)h(set)g(of)g(b)r(enc)n(hmarks)f(that)g(w)n(ere)h
(not)f(in)g(the)g(training)h(set.)-152 2171 y(The)32
b(learned)g(priorit)n(y)f(function)h(outp)r(erforms)g(the)g(baseline)g
(for)-152 2258 y(all)i(b)r(enc)n(hmarks)f(except)f(deco)r(drle4)i(and)f
(132.ijp)r(eg.)59 b(Although)-152 2345 y(the)30 b(o)n(v)n(erall)h(sp)r
(eedup)e(on)i(the)e(cross)i(v)l(alidation)g(set)f(is)h(only)f(3\045,)
-152 2432 y(this)c(is)g(an)f(exciting)h(result.)35 b(Register)26
b(allo)r(cation)h(is)f(w)n(ell-studied)-152 2520 y(optimization)h(whic)
n(h)f(our)g(tec)n(hnique)e(is)j(able)f(to)g(impro)n(v)n(e.)-152
2715 y FC(7.)100 b(CASE)25 b(STUD)l(Y)h(III:)23 2831
y(D)m(A)-9 b(T)g(A)24 b(PREFETCHING)-77 2939 y FB(This)41
b(section)g(describ)r(es)g(another)f(memory)g(hierarc)n(h)n(y)g(opti-)
-152 3026 y(mization.)h(Data)28 b(prefetc)n(hing)g(is)f(an)h
(optimization)h(aimed)e(at)h(re-)-152 3113 y(ducing)e(the)f(costs)h(of)
g(long-latency)g(memory)g(accesses.)36 b(By)25 b(mo)n(v-)-152
3200 y(ing)f(data)g(from)g(main)g(memory)g(in)n(to)f(cac)n(he)h
Fx(b)l(efor)l(e)31 b FB(it)23 b(is)h(accessed,)-152 3288
y(prefetc)n(hing)i(can)g(e\013ectiv)n(ely)g(reduce)f(memory)h
(latencies.)-77 3375 y(Ho)n(w)n(ev)n(er,)36 b(prefetc)n(hing)e(can)g
(degrade)g(p)r(erformance)h(in)e(man)n(y)-152 3462 y(cases.)39
b(F)-6 b(or)27 b(instance,)g(aggressiv)n(e)h(prefetc)n(hing)f(ma)n(y)g
(evict)f(useful)-152 3549 y(data)e(from)g(the)f(cac)n(he)h(b)r(efore)h
(it)e(is)h(needed.)33 b(In)23 b(addition,)i(adding)-152
3636 y(unnecessary)19 b(prefetc)n(h)g(instructions)h(ma)n(y)f(hinder)f
(instruction)i(ca-)-152 3723 y(c)n(he)26 b(p)r(erformance)h(and)e
(saturate)h(memory)g(queues.)-77 3811 y(The)i(Op)r(en)g(Researc)n(h)g
(Compiler)h(\(OR)n(C\))f([19])h(uses)g(an)f(exten-)-152
3898 y(sion)37 b(of)g(Mo)n(wry's)g(algorithm)g([18])h(to)e(insert)g
(prefetc)n(h)g(instruc-)-152 3985 y(tions.)k(OR)n(C)26
b(uses)i(a)f(priorit)n(y)h(function)f(that)g(assigns)h(a)g(Bo)r(olean)
-152 4072 y(con\014dence)18 b(to)g(prefetc)n(hing)g(a)g(giv)n(en)g
(address.)32 b(Subsequen)n(t)16 b(passes)-152 4159 y(use)30
b(this)g(v)l(alue)f(to)h(determine)f(whether)h(or)g(not)f(to)h(prefetc)
n(h)f(the)-152 4246 y(address.)68 b(Curren)n(tly)-6 b(,)39
b(the)d(priorit)n(y)h(function)g(is)g(simply)g(based)-152
4334 y(up)r(on)25 b(ho)n(w)h(w)n(ell)h(the)e(compiler)i(can)f(estimate)
h(lo)r(op)f(trip)g(coun)n(ts.)-152 4485 y FC(7.1)99 b(Experimental)27
b(Setup)-77 4593 y FB(This)h(case)h(study)d(is)j(di\013eren)n(t)e(from)
h(those)g(already)g(presen)n(ted)-152 4680 y(in)21 b(t)n(w)n(o)g(imp)r
(ortan)n(t)g(w)n(a)n(ys.)33 b(First,)22 b(w)n(e)f(collected)h(the)e
(results)h(of)h(this)-152 4767 y(section)31 b(in)f(the)f(con)n(text)g
(of)i(a)f(real)h(mac)n(hine:)43 b(w)n(e)30 b(use)g(the)f(Op)r(en)-152
4855 y(Researc)n(h)20 b(Compiler,)j(and)c(w)n(e)h(target)g(an)g
(Itanium)f(I)g(arc)n(hitecture.)-152 4942 y(Just)26 b(as)g(with)f(the)g
(previous)g(t)n(w)n(o)h(case)g(studies,)g(the)f(\014tness)g(of)h(an)
-152 5029 y(expression)21 b(is)f(the)g(sp)r(eedup)f(o)n(v)n(er)h(the)f
(baseline)i(priorit)n(y)f(function.)-152 5116 y(Ho)n(w)n(ev)n(er,)33
b(unlik)n(e)d(sim)n(ulated)i(execution)f(whic)n(h)g(is)h(p)r(erfectly)f
(re-)-152 5203 y(pro)r(ducible,)24 b(real)g(en)n(vironmen)n(ts)f(are)h
(inheren)n(tly)e(noisy)-6 b(.)33 b(Ev)n(en)23 b(on)-152
5290 y(an)33 b(unloaded)g(system,)h(bac)n(k-to-bac)n(k)e(runs)g(of)h(a)
h(program)f(ma)n(y)-152 5378 y(v)l(ary)-6 b(.)2082 1095
y @beginspecial 90 @llx 63 @lly 765 @urx 504 @ury 2289
@rwi @clip @setspecial
%%BeginDocument: figs/prefetching_evolution.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (prefetching-numbers.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030425112000-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 90 63 765 504
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
90 63 moveto 765 63 lineto 765 504 lineto 90 504 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
90 63 675 441 rectclip
[ 0 -1 1 0 26.64 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font GMAIJJ+Arial,Bold
11 dict begin
/FontName /GMAIJJ+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/G 
<10bf317049853377a7c14408213f8cb0d7a0c9f167e5d8c5ab81d02a6368
40fe7690a6220dd951ed1475afe94af1dca8cd00af32527ccdb4443a6f1b
0f1d9f948f41689d552617fbb202a848e943cafeef773c524f107cecac26
dd1073fd79085c0ccd4cc17b02b3c84d6937bb8c88ee0f58f0488cae3848
b481c280d21ec8fe3faf9183edbd586a23518efaddb855a9de63fa94b398
a92d1943acefbb9697> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GMAIJJ+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 83 /S put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
%%EndResource
[/N26/GMAIJJ+Arial,Bold 1 TZ
%%BeginResource: font GMAIJH+Arial
11 dict begin
/FontName /GMAIJH+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/j 
<10bf3170af4c4e03cb099088e1548d44a53dbade2c858e7043672d28af7a
255a52c1fc5961ee26822ea9a234df911035f9c353cbc5b83b929a71f6d2
1b26fffa3fa0b8fccdceb1472f97c84f0973818dc194> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/GMAIJH+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
pop
%%EndResource
[/N24/GMAIJH+Arial 1 TZ
false setSA
n
76.02 733.02 459.06 -675 re
1 1 1 setrgbcolor
f
q
n
426.18 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
426.18 120.36 m
426.18 617.88 l
0 0 0  setrgbcolor
S
Q
q
n
373.02 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
373.02 120.36 m
373.02 617.88 l
0 0 0  setrgbcolor
S
Q
q
n
319.8 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
319.8 120.36 m
319.8 617.88 l
0 0 0  setrgbcolor
S
Q
q
n
266.64 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
266.64 120.36 m
266.64 617.88 l
0 0 0  setrgbcolor
S
Q
q
n
213.48 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
213.48 120.36 m
213.48 617.88 l
0 0 0  setrgbcolor
S
Q
q
n
160.32 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
160.32 120.36 m
160.32 617.88 l
0 0 0  setrgbcolor
S
Q
q
n
107.16 120.36 0.0599976 497.52 re
W
n
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
107.16 120.36 m
107.16 617.88 l
0 0 0  setrgbcolor
S
Q
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
93.84 120.36 385.5 497.52 re
93.84 120.36 m
479.34 120.36 l
479.34 116.64 m
479.34 120.36 l
426.18 116.64 m
426.18 120.36 l
373.02 116.64 m
373.02 120.36 l
319.8 116.64 m
319.8 120.36 l
266.64 116.64 m
266.64 120.36 l
213.48 116.64 m
213.48 120.36 l
160.32 116.64 m
160.32 120.36 l
107.16 116.64 m
107.16 120.36 l
479.34 120.36 m
479.34 617.88 l
483.06 120.36 m
479.34 120.36 l
483.06 170.1 m
479.34 170.1 l
483.06 219.84 m
479.34 219.84 l
483.06 269.64 m
479.34 269.64 l
483.06 319.38 m
479.34 319.38 l
483.06 369.12 m
479.34 369.12 l
483.06 418.86 m
479.34 418.86 l
483.06 468.6 m
479.34 468.6 l
483.06 518.4 m
479.34 518.4 l
483.06 568.14 m
479.34 568.14 l
483.06 617.88 m
479.34 617.88 l
0 0 0  setrgbcolor
S
0.960007 w
n
479.34 120.36 m
476.64 120.6 l
473.82 120.78 l
471 120.84 l
468.06 120.84 l
465.12 120.78 l
462.12 120.66 l
456 120.3 l
449.82 119.82 l
443.58 119.28 l
437.4 118.8 l
434.4 118.62 l
431.34 118.5 l
428.4 118.38 l
425.46 118.38 l
422.58 118.44 l
419.76 118.56 l
417 118.8 l
414.36 119.1 l
411.78 119.58 l
409.32 120.12 l
406.92 120.84 l
404.7 121.68 l
402.54 122.7 l
400.5 123.84 l
398.58 125.16 l
397.68 125.88 l
396.84 126.72 l
396 127.5 l
395.22 128.4 l
393.78 130.32 l
393.12 131.34 l
392.46 132.48 l
391.92 133.68 l
391.32 134.94 l
390.84 136.26 l
390.36 137.64 l
389.88 139.08 l
389.52 140.58 l
389.1 142.08 l
388.8 143.7 l
388.44 145.38 l
388.2 147.06 l
387.9 148.8 l
387.72 150.6 l
387.3 154.32 l
387.06 158.22 l
386.88 162.24 l
386.76 166.32 l
386.76 170.58 l
386.82 174.9 l
386.94 179.28 l
387.12 183.66 l
387.36 188.16 l
387.9 197.1 l
388.26 201.54 l
388.56 205.98 l
389.28 214.62 l
389.64 218.82 l
390 222.9 l
390.3 226.86 l
390.6 230.7 l
390.9 234.36 l
391.02 236.16 l
391.14 237.84 l
391.2 239.52 l
391.26 241.14 l
391.38 242.7 l
391.38 244.26 l
391.44 245.7 l
391.44 249.72 l
391.38 251.52 l
391.38 253.32 l
391.32 255 l
391.2 258.12 l
391.14 259.62 l
391.14 261.06 l
390.96 265.02 l
390.9 267.42 l
390.78 269.76 l
390.66 271.92 l
390.6 274.08 l
390.54 276.12 l
390.42 278.22 l
390.36 280.32 l
390.3 282.48 l
390.24 284.7 l
390.18 287.04 l
390.12 289.5 l
390.12 291.24 l
390.06 293.1 l
390.06 295.08 l
390 297.12 l
390 306 l
389.94 308.34 l
389.94 320.58 l
389.88 325.56 l
389.88 342.36 l
389.82 344.52 l
389.82 350.76 l
389.76 352.62 l
389.76 356.1 l
389.7 357.72 l
389.7 359.16 l
389.64 361.02 l
389.58 362.76 l
389.52 364.44 l
389.46 366 l
389.34 367.56 l
389.28 369 l
389.04 371.64 l
388.98 372.84 l
388.74 375 l
388.68 375.96 l
388.56 376.86 l
388.5 377.7 l
388.44 378.42 l
388.38 379.08 l
388.32 379.98 l
388.2 380.76 l
388.14 381.42 l
388.08 382.02 l
387.96 382.62 l
387.9 383.1 l
387.72 384.06 l
387.6 385.02 l
387.48 386.1 l
387.42 386.7 l
387.36 387.36 l
387.3 388.14 l
387.24 389.04 l
0 0 0.501999  setrgbcolor
S
n
387.24 389.04 m
387.18 390 l
387.18 406.8 l
387.12 407.94 l
387.06 408.9 l
387 409.8 l
386.94 410.58 l
386.82 411.24 l
386.7 411.84 l
386.58 412.38 l
386.52 412.92 l
386.22 413.88 l
385.86 415.32 l
385.62 416.52 l
385.5 417.18 l
385.38 417.96 l
385.26 418.86 l
385.2 419.22 l
385.14 419.76 l
385.08 420.42 l
384.96 421.2 l
384.84 422.16 l
384.72 423.18 l
384.6 424.38 l
384.42 425.64 l
384.3 427.02 l
384.18 428.46 l
384.06 430.02 l
383.94 431.64 l
383.88 433.38 l
383.76 435.12 l
383.7 436.92 l
383.7 442.02 l
383.64 443.76 l
383.64 457.92 l
383.58 460.2 l
383.58 524.64 l
383.64 530.94 l
383.64 575.7 l
383.7 582 l
383.7 617.88 l
S
n
479.34 120.36 m
473.52 120.54 l
467.64 120.66 l
461.64 120.78 l
455.58 120.96 l
449.46 121.08 l
443.28 121.2 l
436.98 121.32 l
430.68 121.44 l
424.32 121.56 l
417.9 121.68 l
411.42 121.8 l
404.88 121.92 l
391.74 122.16 l
378.48 122.4 l
365.1 122.58 l
351.72 122.82 l
324.84 123.24 l
311.46 123.42 l
298.14 123.66 l
285 123.84 l
271.92 124.08 l
265.44 124.2 l
259.08 124.32 l
252.72 124.44 l
246.42 124.56 l
240.18 124.74 l
234 124.86 l
227.88 124.98 l
221.82 125.1 l
215.88 125.28 l
210 125.4 l
204.24 125.58 l
198.54 125.76 l
192.96 125.88 l
187.44 126.06 l
182.04 126.24 l
176.76 126.42 l
171.54 126.6 l
166.5 126.84 l
161.52 127.02 l
156.72 127.2 l
152.04 127.44 l
147.48 127.68 l
143.04 127.86 l
138.72 128.1 l
134.58 128.34 l
130.62 128.64 l
126.78 128.88 l
123.06 129.18 l
119.52 129.42 l
116.16 129.72 l
112.98 130.02 l
109.98 130.32 l
108.96 130.5 l
108 130.68 l
107.16 130.98 l
106.38 131.34 l
105.72 131.76 l
105.12 132.24 l
104.64 132.78 l
104.16 133.38 l
103.8 134.04 l
103.5 134.7 l
103.26 135.48 l
103.08 136.32 l
102.96 137.16 l
102.9 138.06 l
102.84 139.98 l
102.9 142.08 l
103.08 144.36 l
103.32 146.76 l
103.62 149.28 l
103.86 151.86 l
104.1 154.56 l
104.22 157.32 l
104.28 160.14 l
104.28 162.06 l
104.22 164.04 l
104.22 168.18 l
104.16 170.28 l
104.16 174.72 l
104.1 177 l
104.1 184.14 l
104.04 186.6 l
104.04 191.64 l
103.98 196.86 l
103.98 207.84 l
103.92 213.6 l
103.92 231.72 l
103.86 238.02 l
103.86 338.58 l
103.92 346.38 l
103.92 378.36 l
103.98 394.56 l
103.98 410.94 l
104.04 427.44 l
104.04 443.94 l
104.1 460.44 l
104.1 477 l
104.16 493.44 l
104.16 517.86 l
104.22 525.96 l
104.22 565.56 l
104.28 573.24 l
104.28 617.88 l
1 0 1  setrgbcolor
S
n
479.34 120.36 m
478.38 121.56 l
477.36 122.64 l
476.34 123.66 l
475.32 124.74 l
474.3 125.88 l
473.88 126.48 l
473.4 127.14 l
472.98 127.86 l
472.62 128.58 l
472.26 129.42 l
471.96 130.32 l
471.48 132.24 l
471.06 134.34 l
470.82 136.62 l
470.58 139.02 l
470.46 141.6 l
470.34 144.36 l
470.22 147.18 l
470.04 150.24 l
470.04 150.66 l
469.98 150.96 l
469.98 151.38 l
469.92 151.8 l
469.92 152.28 l
469.86 152.88 l
469.86 153.48 l
469.8 154.14 l
469.8 154.86 l
469.68 156.42 l
469.68 157.32 l
469.62 158.22 l
469.56 160.14 l
469.44 162.24 l
469.38 164.46 l
469.32 166.86 l
469.2 169.32 l
469.2 171.9 l
469.14 174.54 l
469.08 177.3 l
469.08 196.2 l
469.02 198.42 l
469.02 483.12 l
469.08 498.84 l
469.08 617.88 l
0 0 0  setrgbcolor
S
n
479.34 120.36 m
266.4 130.32 l
264.78 160.14 l
248.52 190.02 l
247.38 219.84 l
247.38 617.88 l
0.501999 0 0  setrgbcolor
S
n
479.34 120.36 m
477.06 120.66 l
474.72 120.96 l
472.26 121.32 l
469.8 121.62 l
464.76 122.22 l
459.6 122.82 l
454.38 123.48 l
449.1 124.08 l
443.88 124.74 l
438.78 125.34 l
436.26 125.64 l
433.74 125.94 l
431.34 126.3 l
428.94 126.6 l
426.66 126.9 l
424.38 127.2 l
422.22 127.5 l
420.12 127.8 l
418.14 128.16 l
416.22 128.46 l
414.42 128.76 l
412.74 129.06 l
411.18 129.36 l
409.68 129.72 l
408.36 130.02 l
407.16 130.32 l
406.74 130.44 l
406.38 130.62 l
406.02 130.86 l
405.78 131.1 l
405.36 131.64 l
405.12 132.24 l
404.94 132.96 l
404.94 133.68 l
405.06 134.52 l
405.42 136.08 l
405.72 136.92 l
405.96 137.64 l
406.26 138.36 l
406.5 138.96 l
406.68 139.5 l
406.8 139.98 l
406.86 140.28 l
406.86 140.94 l
406.8 141.3 l
406.8 141.78 l
406.74 142.32 l
406.74 143.58 l
406.68 144.24 l
406.68 145.02 l
406.62 146.64 l
406.56 148.38 l
406.56 154.08 l
406.5 156.24 l
406.5 163.44 l
406.44 166.08 l
406.44 174.66 l
406.38 177.72 l
406.38 184.14 l
406.32 187.5 l
406.32 198.06 l
406.26 201.72 l
406.26 209.22 l
406.2 213.06 l
406.2 220.92 l
406.14 224.88 l
406.14 232.98 l
406.02 249.48 l
406.02 257.82 l
405.84 282.78 l
405.84 290.94 l
405.78 299.04 l
405.78 303 l
405.72 306.9 l
405.72 314.64 l
405.66 318.42 l
405.66 325.74 l
405.6 329.28 l
405.6 336.18 l
405.54 339.48 l
405.54 345.84 l
405.48 348.9 l
405.48 354.66 l
405.42 357.36 l
405.42 364.8 l
405.36 367.02 l
405.36 370.98 l
405.3 372.78 l
405.3 376.2 l
405.24 377.82 l
405.24 379.44 l
405.18 382.56 l
405.12 385.44 l
405 388.26 l
404.94 390.84 l
404.88 393.3 l
404.82 395.64 l
404.76 397.86 l
404.7 399.96 l
404.64 401.94 l
404.58 403.8 l
404.52 405.6 l
404.46 407.28 l
404.46 410.64 l
404.4 412.56 l
404.4 418.74 l
404.34 420.96 l
404.34 430.44 l
404.28 435.48 l
404.28 450.6 l
404.22 453.06 l
404.22 472.5 l
404.16 474.18 l
404.16 479.58 l
404.04 481.62 l
403.98 482.76 l
403.98 483.96 l
403.92 484.56 l
403.92 485.28 l
403.86 486 l
403.86 617.88 l
0.501999 0 0.501999  setrgbcolor
S
n
479.34 120.36 m
476.58 120.66 l
473.7 120.96 l
470.82 121.26 l
467.82 121.56 l
464.82 121.8 l
461.76 122.1 l
455.46 122.64 l
449.16 123.12 l
442.8 123.66 l
436.5 124.2 l
430.32 124.74 l
427.26 124.98 l
424.26 125.28 l
421.32 125.58 l
418.44 125.88 l
415.68 126.18 l
412.98 126.48 l
410.34 126.78 l
407.82 127.14 l
405.36 127.5 l
403.08 127.86 l
400.86 128.22 l
398.82 128.58 l
396.9 129 l
395.1 129.42 l
393.48 129.84 l
391.98 130.32 l
391.14 130.62 l
390.42 130.98 l
389.76 131.4 l
389.22 131.82 l
388.74 132.3 l
388.32 132.78 l
388.02 133.32 l
387.78 133.86 l
387.42 135.06 l
387.36 135.72 l
387.36 137.04 l
387.42 137.7 l
387.66 139.08 l
388.02 140.52 l
388.44 141.96 l
389.34 144.9 l
389.76 146.34 l
390.06 147.66 l
390.24 148.98 l
390.3 149.64 l
390.3 150.24 l
390.24 151.8 l
390.18 153.42 l
390.12 155.16 l
390.06 157.02 l
390 159 l
389.94 161.1 l
389.88 163.32 l
389.82 165.66 l
389.76 168.18 l
389.76 170.82 l
389.7 173.58 l
389.64 176.52 l
389.58 179.64 l
389.52 182.94 l
389.52 186.36 l
389.46 188.16 l
389.46 192.36 l
389.4 194.82 l
389.4 197.28 l
389.34 199.8 l
389.34 202.44 l
389.28 205.08 l
389.28 207.84 l
389.22 210.6 l
389.22 213.48 l
389.16 216.42 l
389.16 219.42 l
389.1 222.48 l
389.1 225.6 l
389.04 228.78 l
389.04 232.08 l
388.98 235.38 l
388.98 238.8 l
388.92 242.34 l
388.92 249.54 l
388.86 253.26 l
388.86 257.04 l
388.8 260.94 l
388.8 264.84 l
388.74 268.92 l
388.74 273 l
388.68 277.2 l
388.68 281.52 l
388.62 285.84 l
388.62 290.28 l
388.56 294.84 l
388.56 304.2 l
388.5 306.66 l
388.5 314.34 l
388.44 319.68 l
388.44 325.2 l
388.38 330.84 l
388.38 336.6 l
388.32 342.54 l
388.32 348.54 l
388.26 354.66 l
388.26 360.84 l
388.14 373.5 l
388.14 379.86 l
387.96 418.5 l
387.96 424.86 l
387.9 431.16 l
387.9 437.4 l
387.84 443.58 l
387.84 455.64 l
387.78 461.46 l
387.78 472.8 l
387.72 478.2 l
387.72 498.24 l
387.66 502.92 l
387.66 579.48 l
387.72 586.92 l
387.72 617.88 l
0.501999 0 0  setrgbcolor
S
n
479.34 120.36 m
478.32 120.96 l
477.18 121.62 l
474.9 122.82 l
472.5 124.08 l
470.16 125.34 l
469.02 125.94 l
467.94 126.6 l
466.92 127.2 l
465.96 127.86 l
465.06 128.46 l
464.28 129.06 l
463.02 130.32 l
463.02 130.44 l
462.96 130.62 l
462.96 135 l
463.02 136.68 l
463.02 617.88 l
0 0.501999 0.501999  setrgbcolor
S
n
479.34 120.36 m
478.5 121.62 l
477.66 122.82 l
475.92 125.34 l
475.08 126.6 l
474.3 127.86 l
473.58 129.06 l
472.98 130.32 l
472.26 132.24 l
471.96 133.26 l
471.66 134.34 l
471.42 135.54 l
471.3 136.26 l
471.24 136.92 l
471.12 137.7 l
471.06 138.48 l
470.94 139.38 l
470.88 140.28 l
470.82 141.54 l
470.7 142.86 l
470.58 145.62 l
470.52 147.12 l
470.46 148.68 l
470.4 150.36 l
470.4 152.1 l
470.34 153.9 l
470.28 155.88 l
470.28 157.92 l
470.22 160.08 l
470.16 162.36 l
470.16 164.82 l
470.1 167.4 l
470.04 170.1 l
470.04 171.54 l
469.98 173.04 l
469.98 178.08 l
469.92 179.88 l
469.92 199.92 l
469.86 204.12 l
469.86 208.26 l
469.74 216.3 l
469.68 218.16 l
469.68 220.02 l
469.62 221.82 l
469.56 223.56 l
469.5 225.24 l
469.44 226.86 l
469.32 228.36 l
469.26 229.8 l
469.2 231.06 l
468.96 233.34 l
468.72 235.38 l
468.54 236.34 l
468.24 238.08 l
467.94 239.7 l
467.58 241.26 l
467.22 242.7 l
466.86 244.2 l
466.44 245.64 l
466.08 247.2 l
465.72 248.82 l
465.36 250.56 l
465.24 251.46 l
465.06 252.48 l
464.94 253.5 l
464.76 254.64 l
464.64 255.78 l
464.52 256.98 l
464.46 258.3 l
464.34 259.68 l
464.22 261.3 l
464.16 263.04 l
464.1 264.9 l
463.98 266.82 l
463.92 268.86 l
463.8 273.18 l
463.74 275.46 l
463.68 277.8 l
463.62 280.2 l
463.32 305.1 l
463.32 307.56 l
463.26 309.9 l
463.26 312.24 l
463.2 314.52 l
463.2 316.68 l
463.14 318.78 l
463.14 320.82 l
463.08 322.74 l
463.08 324.54 l
463.02 326.28 l
463.02 327.9 l
462.96 329.34 l
462.9 331.14 l
462.84 332.82 l
462.72 334.38 l
462.66 335.88 l
462.6 337.26 l
462.36 339.78 l
462.3 340.92 l
462.18 342.06 l
462.06 343.14 l
461.88 345.18 l
461.7 347.16 l
461.58 349.2 l
461.52 350.4 l
461.4 351.66 l
461.28 352.98 l
461.04 355.86 l
460.92 357.42 l
460.8 359.1 l
460.68 360.84 l
460.56 362.7 l
460.44 364.68 l
460.32 366.78 l
460.2 369 l
460.08 371.28 l
459.96 373.74 l
459.9 376.32 l
459.84 379.08 l
459.78 381 l
459.78 382.92 l
459.72 384.96 l
459.72 387 l
459.66 389.16 l
459.66 393.54 l
459.6 395.88 l
459.6 398.22 l
459.54 400.62 l
459.54 405.66 l
459.48 408.24 l
459.48 416.4 l
459.42 419.22 l
459.42 431.1 l
459.36 434.22 l
459.36 454.14 l
459.3 457.68 l
459.3 468.6 l
0 0 1  setrgbcolor
S
n
459.3 468.6 m
459.3 484.38 l
459.24 488.58 l
459.24 549.36 l
459.3 559.26 l
459.3 617.88 l
S
n
479.34 120.36 m
478.5 121.56 l
477.72 122.64 l
476.88 123.66 l
476.1 124.74 l
475.26 125.88 l
474.84 126.48 l
474.42 127.14 l
474.06 127.86 l
473.64 128.58 l
473.28 129.42 l
472.86 130.32 l
472.8 130.38 l
472.68 130.74 l
472.5 130.92 l
471.84 132.24 l
471.36 133.14 l
470.88 134.16 l
470.34 135.3 l
469.8 136.62 l
469.26 138 l
468.18 141.12 l
467.76 142.8 l
467.4 144.6 l
467.1 146.4 l
466.86 148.32 l
466.8 150.24 l
466.8 152.16 l
466.74 154.14 l
466.74 156.18 l
466.68 158.28 l
466.68 162.6 l
466.62 164.88 l
466.62 171.9 l
466.56 174.36 l
466.56 181.98 l
466.5 184.56 l
466.5 192.72 l
466.44 198.42 l
466.44 210.18 l
466.38 216.36 l
466.38 256.2 l
466.32 263.28 l
466.32 292.8 l
466.38 300.42 l
466.38 347.94 l
466.44 356.1 l
466.44 389.16 l
466.5 405.96 l
466.5 422.82 l
466.56 439.74 l
466.56 456.72 l
466.68 490.5 l
466.68 523.8 l
466.74 532.02 l
466.74 564.36 l
466.8 572.28 l
466.8 617.88 l
0 0.800003 1  setrgbcolor
S
n
479.34 120.36 m
479.28 120.42 l
479.16 120.42 l
478.68 120.54 l
478.38 120.6 l
478.08 120.72 l
477.24 120.96 l
476.34 121.2 l
475.26 121.56 l
474.18 121.98 l
473.04 122.46 l
471.9 123.06 l
470.82 123.78 l
469.8 124.56 l
468.9 125.46 l
468.12 126.48 l
467.76 127.02 l
467.28 128.22 l
467.1 128.88 l
466.98 129.6 l
466.92 130.32 l
466.86 132.3 l
466.8 134.34 l
466.8 136.38 l
466.74 138.54 l
466.68 140.76 l
466.68 142.98 l
466.56 147.66 l
466.56 150.06 l
466.5 152.58 l
466.5 155.1 l
466.44 157.62 l
466.38 160.26 l
466.38 165.66 l
466.32 168.42 l
466.32 171.24 l
466.26 174.06 l
466.26 177 l
466.2 179.94 l
466.2 185.94 l
466.14 192.18 l
466.14 198.54 l
466.08 205.08 l
466.08 211.8 l
466.02 218.64 l
466.02 302.34 l
466.08 310.56 l
466.08 327.24 l
466.14 335.7 l
466.14 352.8 l
466.2 361.44 l
466.2 370.14 l
466.26 378.84 l
466.68 502.32 l
466.74 510.96 l
466.74 528.24 l
466.8 536.76 l
466.8 553.68 l
466.86 562.02 l
466.86 578.46 l
466.92 586.5 l
466.92 617.88 l
0 0.501999 0  setrgbcolor
S
n
476.82 120.36 m
479.34 122.88 l
481.86 120.36 l
479.34 117.84 l
476.82 120.36 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0.501999  setrgbcolor
S
n
391.26 130.32 m
393.78 132.84 l
396.3 130.32 l
393.78 127.8 l
391.26 130.32 l
h
q
eofill
Q
S
n
388.92 249.72 m
391.44 252.24 l
393.96 249.72 l
391.44 247.2 l
388.92 249.72 l
h
q
eofill
Q
S
n
387.6 289.5 m
390.12 292.02 l
392.64 289.5 l
390.12 286.98 l
387.6 289.5 l
h
q
eofill
Q
S
n
387.18 359.16 m
389.7 361.68 l
392.22 359.16 l
389.7 356.64 l
387.18 359.16 l
h
q
eofill
Q
S
n
385.86 379.08 m
388.38 381.6 l
390.9 379.08 l
388.38 376.56 l
385.86 379.08 l
h
q
eofill
Q
S
n
384.72 389.04 m
387.24 391.56 l
389.76 389.04 l
387.24 386.52 l
384.72 389.04 l
h
q
eofill
Q
S
n
384.54 408.9 m
387.06 411.42 l
389.58 408.9 l
387.06 406.38 l
384.54 408.9 l
h
q
eofill
Q
S
n
382.74 418.86 m
385.26 421.38 l
387.78 418.86 l
385.26 416.34 l
382.74 418.86 l
h
q
eofill
Q
S
n
381.18 438.78 m
383.7 441.3 l
386.22 438.78 l
383.7 436.26 l
381.18 438.78 l
h
q
eofill
Q
S
n
381.18 617.88 m
383.7 620.4 l
386.22 617.88 l
383.7 615.36 l
381.18 617.88 l
h
q
eofill
Q
S
0 j
n
476.82 117.84 4.97998 4.98 re
q
1 0 1  setrgbcolor
eofill
Q
1 0 1  setrgbcolor
S
n
107.46 127.8 4.98 4.98 re
q
eofill
Q
S
n
101.76 157.62 4.98 4.98 re
q
eofill
Q
S
n
101.76 615.36 4.98 4.97998 re
q
eofill
Q
S
1 j
n
476.82 120.36 m
481.86 122.88 l
481.86 117.84 l
476.82 120.36 l
h
q
1 1 0  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
469.44 130.32 m
474.48 132.84 l
474.48 127.8 l
469.44 130.32 l
h
q
1 1 0  setrgbcolor
eofill
Q
S
n
467.52 150.24 m
472.56 152.76 l
472.56 147.72 l
467.52 150.24 l
h
q
1 1 0  setrgbcolor
eofill
Q
S
n
466.56 180.06 m
471.6 182.58 l
471.6 177.54 l
466.56 180.06 l
h
q
1 1 0  setrgbcolor
eofill
Q
S
n
466.56 617.88 m
471.6 620.4 l
471.6 615.36 l
466.56 617.88 l
h
q
1 1 0  setrgbcolor
eofill
Q
S
q
n
476.28 117.84 3.66 3.12 re
W
n
n
479.34 120.36 m
476.82 117.84 l
0.501999 0 0  setrgbcolor
S
Q
q
n
478.8 119.82 3.06 3.66 re
W
n
n
479.34 120.36 m
481.86 122.88 l
0.501999 0 0  setrgbcolor
S
Q
q
n
478.8 117.84 3.06 3.12 re
W
n
n
479.34 120.36 m
481.86 117.84 l
0.501999 0 0  setrgbcolor
S
Q
n
479.34 120.36 m
476.82 122.88 l
266.4 130.32 m
263.88 127.8 l
266.4 130.32 m
268.92 132.84 l
266.4 130.32 m
268.92 127.8 l
266.4 130.32 m
263.88 132.84 l
264.78 160.14 m
262.26 157.62 l
264.78 160.14 m
267.3 162.66 l
264.78 160.14 m
267.3 157.62 l
264.78 160.14 m
262.26 162.66 l
248.52 190.02 m
246 187.5 l
248.52 190.02 m
251.04 192.54 l
248.52 190.02 m
251.04 187.5 l
248.52 190.02 m
246 192.54 l
247.38 219.84 m
244.86 217.32 l
247.38 219.84 m
249.9 222.36 l
247.38 219.84 m
249.9 217.32 l
247.38 219.84 m
244.86 222.36 l
247.38 617.88 m
244.86 615.36 l
0.501999 0 0  setrgbcolor
S
q
n
246.84 617.34 3.66 3.12 re
W
n
n
247.38 617.88 m
249.9 620.4 l
S
Q
n
247.38 617.88 m
249.9 615.36 l
S
q
n
244.32 617.34 3.66 3.12 re
W
n
n
247.38 617.88 m
244.86 620.4 l
S
Q
q
n
476.28 117.84 3.66 3.12 re
W
n
n
479.34 120.36 m
476.82 117.84 l
0.501999 0 0.501999  setrgbcolor
S
Q
q
n
478.8 119.82 3.06 3.66 re
W
n
n
479.34 120.36 m
481.86 122.88 l
0.501999 0 0.501999  setrgbcolor
S
Q
q
n
478.8 117.84 3.06 3.12 re
W
n
n
479.34 120.36 m
481.86 117.84 l
0.501999 0 0.501999  setrgbcolor
S
Q
n
479.34 120.36 m
476.82 122.88 l
479.34 120.36 m
476.82 120.36 l
0.501999 0 0.501999  setrgbcolor
S
q
n
478.8 119.82 3.06 1.14 re
W
n
n
479.34 120.36 m
481.86 120.36 l
S
Q
n
407.16 130.32 m
404.64 127.8 l
407.16 130.32 m
409.68 132.84 l
407.16 130.32 m
409.68 127.8 l
407.16 130.32 m
404.64 132.84 l
407.16 130.32 m
404.64 130.32 l
407.16 130.32 m
409.68 130.32 l
406.86 140.28 m
404.34 137.76 l
406.86 140.28 m
409.38 142.8 l
406.86 140.28 m
409.38 137.76 l
406.86 140.28 m
404.34 142.8 l
406.86 140.28 m
404.34 140.28 l
406.86 140.28 m
409.38 140.28 l
406.56 150.24 m
404.04 147.72 l
406.56 150.24 m
409.08 152.76 l
406.56 150.24 m
409.08 147.72 l
406.56 150.24 m
404.04 152.76 l
406.56 150.24 m
404.04 150.24 l
406.56 150.24 m
409.08 150.24 l
405.36 369.12 m
402.84 366.6 l
405.36 369.12 m
407.88 371.64 l
405.36 369.12 m
407.88 366.6 l
405.36 369.12 m
402.84 371.64 l
405.36 369.12 m
402.84 369.12 l
405.36 369.12 m
407.88 369.12 l
404.46 408.9 m
401.94 406.38 l
404.46 408.9 m
406.98 411.42 l
404.46 408.9 m
406.98 406.38 l
404.46 408.9 m
401.94 411.42 l
404.46 408.9 m
401.94 408.9 l
404.46 408.9 m
406.98 408.9 l
404.16 478.56 m
401.64 476.04 l
404.16 478.56 m
406.68 481.08 l
404.16 478.56 m
406.68 476.04 l
404.16 478.56 m
401.64 481.08 l
404.16 478.56 m
401.64 478.56 l
404.16 478.56 m
406.68 478.56 l
403.86 488.52 m
401.34 486 l
403.86 488.52 m
406.38 491.04 l
403.86 488.52 m
406.38 486 l
403.86 488.52 m
401.34 491.04 l
403.86 488.52 m
401.34 488.52 l
403.86 488.52 m
406.38 488.52 l
403.86 617.88 m
401.34 615.36 l
S
q
n
403.32 617.34 3.66 3.12 re
W
n
n
403.86 617.88 m
406.38 620.4 l
S
Q
n
403.86 617.88 m
406.38 615.36 l
S
q
n
400.8 617.34 3.66 3.12 re
W
n
n
403.86 617.88 m
401.34 620.4 l
S
Q
n
403.86 617.88 m
401.34 617.88 l
403.86 617.88 m
406.38 617.88 l
S
q
n
476.76 117.84 5.10001 5.16 re
W
n
n
476.76 123 5.10001 -5.16 re
0.501999 0 0  setrgbcolor
f
Q
q
n
476.28 117.84 3.66 3.12 re
W
n
n
479.34 120.36 m
476.82 117.84 l
0.501999 0 0  setrgbcolor
S
Q
q
n
478.8 119.82 3.06 3.66 re
W
n
n
479.34 120.36 m
481.86 122.88 l
0.501999 0 0  setrgbcolor
S
Q
q
n
478.8 117.84 3.06 3.12 re
W
n
n
479.34 120.36 m
481.86 117.84 l
0.501999 0 0  setrgbcolor
S
Q
n
479.34 120.36 m
476.82 122.88 l
0.501999 0 0  setrgbcolor
S
n
389.4 132.96 5.22 -5.22 re
f
n
391.98 130.32 m
389.46 127.8 l
391.98 130.32 m
394.5 132.84 l
391.98 130.32 m
394.5 127.8 l
391.98 130.32 m
389.46 132.84 l
S
n
387.72 152.88 5.22 -5.22 re
f
n
390.3 150.24 m
387.78 147.72 l
390.3 150.24 m
392.82 152.76 l
390.3 150.24 m
392.82 147.72 l
390.3 150.24 m
387.78 152.76 l
S
n
386.88 192.66 5.22 -5.22 re
f
n
389.46 190.02 m
386.94 187.5 l
389.46 190.02 m
391.98 192.54 l
389.46 190.02 m
391.98 187.5 l
389.46 190.02 m
386.94 192.54 l
S
n
385.98 302.1 5.22 -5.22 re
f
n
388.56 299.46 m
386.04 296.94 l
388.56 299.46 m
391.08 301.98 l
388.56 299.46 m
391.08 296.94 l
388.56 299.46 m
386.04 301.98 l
S
n
385.14 491.16 5.22 -5.22 re
f
n
387.72 488.52 m
385.2 486 l
387.72 488.52 m
390.24 491.04 l
387.72 488.52 m
390.24 486 l
387.72 488.52 m
385.2 491.04 l
S
q
n
385.14 615.3 5.22 5.15997 re
W
n
n
385.14 620.46 5.22 -5.15997 re
f
Q
n
387.72 617.88 m
385.2 615.36 l
S
q
n
387.18 617.34 3.66 3.12 re
W
n
n
387.72 617.88 m
390.24 620.4 l
S
Q
n
387.72 617.88 m
390.24 615.36 l
S
q
n
384.66 617.34 3.66 3.12 re
W
n
n
387.72 617.88 m
385.2 620.4 l
S
Q
n
479.34 120.36 m
476.82 120.36 l
0 0.501999 0.501999  setrgbcolor
S
q
n
478.8 119.82 3.06 1.14 re
W
n
n
479.34 120.36 m
481.86 120.36 l
S
Q
q
n
478.8 117.84 1.14001 3.12 re
W
n
n
479.34 120.36 m
479.34 117.84 l
S
Q
n
479.34 120.36 m
479.34 122.88 l
463.02 130.32 m
460.5 130.32 l
463.02 130.32 m
465.54 130.32 l
463.02 130.32 m
463.02 127.8 l
463.02 130.32 m
463.02 132.84 l
463.02 140.28 m
460.5 140.28 l
463.02 140.28 m
465.54 140.28 l
463.02 140.28 m
463.02 137.76 l
463.02 140.28 m
463.02 142.8 l
463.02 617.88 m
460.5 617.88 l
463.02 617.88 m
465.54 617.88 l
463.02 617.88 m
463.02 615.36 l
S
q
n
462.48 617.34 1.14001 3.12 re
W
n
n
463.02 617.88 m
463.02 620.4 l
S
Q
0 j
n
478.86 120.36 0.899994 2.52 re
q
0 0 1  setrgbcolor
eofill
Q
0 0 1  setrgbcolor
S
n
472.5 130.32 0.899994 2.52 re
q
eofill
Q
S
n
470.4 140.28 0.899994 2.52 re
q
eofill
Q
S
n
469.56 170.1 0.899994 2.52 re
q
eofill
Q
S
n
468.78 229.8 0.899994 2.52 re
q
eofill
Q
S
n
463.86 259.68 0.899994 2.52002 re
q
eofill
Q
S
n
462.48 329.34 0.899994 2.51999 re
q
eofill
Q
S
n
461.1 349.2 0.899994 2.52002 re
q
eofill
Q
S
n
459.36 379.08 0.899994 2.52002 re
q
eofill
Q
S
n
458.82 468.6 0.899994 2.51999 re
q
eofill
Q
S
n
458.82 617.88 0.899994 2.52002 re
q
eofill
Q
S
n
478.86 117.84 0.899994 5.03999 re
q
0 0.800003 1  setrgbcolor
eofill
Q
0 0.800003 1  setrgbcolor
S
n
472.38 127.8 0.899994 5.03999 re
q
eofill
Q
S
n
466.32 147.72 0.899994 5.03999 re
q
eofill
Q
S
n
466.32 615.36 0.899994 5.03998 re
q
eofill
Q
S
1 j
n
476.82 120.36 m
479.34 122.88 l
481.86 120.36 l
479.34 117.84 l
476.82 120.36 l
h
q
0.800003 1 1  setrgbcolor
eofill
Q
0 0.501999 0  setrgbcolor
S
n
464.4 130.32 m
466.92 132.84 l
469.44 130.32 l
466.92 127.8 l
464.4 130.32 l
h
q
0.800003 1 1  setrgbcolor
eofill
Q
S
n
464.4 617.88 m
466.92 620.4 l
469.44 617.88 l
466.92 615.36 l
464.4 617.88 l
h
q
0.800003 1 1  setrgbcolor
eofill
Q
S
0 0 0  setrgbcolor
483.12 104.58 m
/N24 [0 12 -12 0 0 0] Tf
(1) show
429.96 94.5599 m
(1.2) show
376.8 94.5599 m
(1.4) show
323.58 94.5599 m
(1.6) show
270.42 94.5599 m
(1.8) show
217.26 104.58 m
(2) show
164.1 94.5599 m
(2.2) show
110.941 94.5599 m
(2.4) show
500.581 117.06 m
(05)
[49.7376 46.3776 ] pdfys
(1) show
(0)
[43.1244 ] pdfys
(1) show
(5)
[43.0644 ] pdfys
(2) show
(0)
[43.0644 ] pdfys
(2) show
(5)
[43.0644 ] pdfys
(3) show
(0)
[43.0644 ] pdfys
(3) show
(5)
[43.1244 ] pdfys
(4) show
(0)
[43.0644 ] pdfys
(4) show
(5)
[43.0644 ] pdfys
(50) show
520.921 337.44 m
/N26 [0 12 -12 0 0 0] Tf
(Generation) show
311.88 79.68 m
/N26 -12 Tf
(Speedup)
[-7.99072 -7.31873 -6.65881 -6.65881 -7.31873 -7.31873 -7.31873 ] pdfxs
n
201.18 730.08 170.94 -95.88 re
1 1 1  setrgbcolor
f
0.0599976 w
n
201.12 634.14 171 95.94 re
0 0 0  setrgbcolor
S
0.960007 w
n
210 637.92 m
210 657.9 l
0 0 0.501999  setrgbcolor
S
n
207.48 647.88 m
210 650.4 l
212.52 647.88 l
210 645.36 l
207.48 647.88 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
214.14 660.72 m
/N24 [0 12 -12 0 0 0] Tf
(103.su2cor) show
n
227.1 637.92 m
227.1 657.9 l
1 0 1  setrgbcolor
S
0 j
n
224.58 645.36 4.98 4.97998 re
q
eofill
Q
S
0 0 0  setrgbcolor
231.24 660.72 m
(102.swim) show
1 j
n
244.2 637.92 m
244.2 657.9 l
S
n
241.68 647.88 m
246.72 650.4 l
246.72 645.36 l
241.68 647.88 l
h
q
1 1 0  setrgbcolor
eofill
Q
S
248.34 660.72 m
(034.mdljdp2) show
n
261.3 637.92 m
261.3 657.9 l
261.3 647.88 m
258.78 645.36 l
261.3 647.88 m
263.82 650.4 l
261.3 647.88 m
263.82 645.36 l
261.3 647.88 m
258.78 650.4 l
0.501999 0 0  setrgbcolor
S
0 0 0  setrgbcolor
265.44 660.72 m
(093.nasa7) show
n
278.4 637.92 m
278.4 657.9 l
278.4 647.88 m
275.88 645.36 l
278.4 647.88 m
280.92 650.4 l
278.4 647.88 m
280.92 645.36 l
278.4 647.88 m
275.88 650.4 l
278.4 647.88 m
275.88 647.88 l
278.4 647.88 m
280.92 647.88 l
0.501999 0 0.501999  setrgbcolor
S
0 0 0  setrgbcolor
282.54 660.72 m
(125.turb3d) show
n
295.5 637.92 m
295.5 657.9 l
0.501999 0 0  setrgbcolor
S
n
292.92 650.52 5.22 -5.21997 re
f
n
295.5 647.88 m
292.98 645.36 l
295.5 647.88 m
298.02 650.4 l
295.5 647.88 m
298.02 645.36 l
295.5 647.88 m
292.98 650.4 l
S
0 0 0  setrgbcolor
299.64 660.72 m
(146.wave5) show
n
312.6 637.92 m
312.6 657.9 l
312.6 647.88 m
310.08 647.88 l
312.6 647.88 m
315.12 647.88 l
312.6 647.88 m
312.6 645.36 l
312.6 647.88 m
312.6 650.4 l
0 0.501999 0.501999  setrgbcolor
S
0 0 0  setrgbcolor
316.74 660.72 m
(015.doduc) show
n
329.7 637.92 m
329.7 657.9 l
0 0 1  setrgbcolor
S
0 j
n
329.22 647.88 0.899994 2.52002 re
q
eofill
Q
S
0 0 0  setrgbcolor
333.84 660.72 m
(101.tomcatv) show
1 j
n
346.8 637.92 m
346.8 657.9 l
0 0.800003 1  setrgbcolor
S
0 j
n
346.32 645.36 0.899994 5.03998 re
q
eofill
Q
S
0 0 0  setrgbcolor
350.94 660.72 m
(107.mgrid) show
1 j
n
363.9 637.92 m
363.9 657.9 l
0 0.501999 0  setrgbcolor
S
n
361.38 647.88 m
363.9 650.4 l
366.42 647.88 l
363.9 645.36 l
361.38 647.88 l
h
q
0.800003 1 1  setrgbcolor
eofill
Q
S
0 0 0  setrgbcolor
368.04 660.72 m
(141.apsi) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2040 1265 a FA(Figure)22 b(14:)35 b Fq(Prefetc)n(hing)21
b(ev)n(olution.)32 b(This)20 b(\014gure)g(graphs)g(\014t-)2040
1352 y(ness)j(o)n(v)n(er)f(generations.)33 b(The)22 b(baseline)h
(expression)f(is)h(quic)n(kly)2040 1439 y(w)n(eeded)28
b(out)f(of)f(the)h(p)r(opulation.)2115 1695 y FB(F)-6
b(ortunately)g(,)30 b(GP)h(can)f(handle)f(noisy)i(en)n(vironmen)n(ts,)f
(as)h(long)2040 1782 y(as)26 b(the)g(lev)n(el)g(of)h(noise)f(is)g
(smaller)i(than)d(attainable)i(sp)r(eedups)e(us-)2040
1870 y(ing)36 b(our)g(tec)n(hnique.)65 b(F)-6 b(or)36
b(the)g(Itanium)f(pro)r(cessor,)40 b(this)c(is)h(in-)2040
1957 y(deed)23 b(the)f(case.)35 b(Since)23 b(it)g(is)h(a)f(single)h
(threaded,)g(statically)g(sc)n(hed-)2040 2044 y(uled)e(pro)r(cessor,)i
(our)e(measuremen)n(ts)g(are)g(fairly)h(consisten)n(t;)h(v)l(ari-)2040
2131 y(ations)g(due)e(to)h(noise)h(are)f(w)n(ell)h(within)f(the)f
(range)i(of)f(our)g(attained)2040 2218 y(sp)r(eedups.)2115
2305 y(Another)16 b(ma)t(jor)j(div)n(ergence)e(from)h(the)f(metho)r
(dology)h(emplo)n(y)n(ed)2040 2393 y(in)i(the)g(last)h(t)n(w)n(o)g
(case)g(studies)g(is)g(the)e(format)j(of)f(the)f(priorit)n(y)g(func-)
2040 2480 y(tion)f(that)f(w)n(e)h(aim)g(to)g(optimize.)33
b(Whereas)19 b(the)g(priorit)n(y)f(functions)2040 2567
y(for)38 b(register)g(allo)r(cation)h(and)d(h)n(yp)r(erblo)r(c)n(k)g
(formation)i(are)f(real-)2040 2654 y(v)l(alued,)28 b(the)f(prefetc)n
(hing)h(priorit)n(y)g(function)g(is)g(Bo)r(olean-v)l(alued.)2040
2741 y(This)e(case)h(study)e(emphasizes)h(GP's)h(\015exibilit)n(y)-6
b(.)2115 2829 y(As)28 b(the)g(OR)n(C)f(w)n(ebsite)i(recommends,)h(w)n
(e)e(compile)i(all)f(b)r(enc)n(h-)2040 2916 y(marks)h(with)g
Fi(-O3)h FB(optimizations)g(enabled,)g(and)f(w)n(e)g(use)g(pro\014le-)
2040 3003 y(driv)n(en)c(feedbac)n(k.)36 b(F)-6 b(or)27
b(additional)g(details)h(suc)n(h)e(as)h(the)f(features)2040
3090 y(w)n(e)g(extracted)g(for)g(this)g(optimization,)h(please)g(see)f
([23].)2040 3254 y FC(7.2)99 b(Experimental)26 b(Results)2115
3362 y FB(Prefetc)n(hing)21 b(is)g(kno)n(wn)f(to)g(b)r(e)g(an)g
(e\013ectiv)n(e)g(tec)n(hnique)g(for)h(\015oat-)2040
3449 y(ing)d(p)r(oin)n(t)f(b)r(enc)n(hmarks,)h(and)f(for)h(this)f
(reason)h(w)n(e)g(train)f(on)g(v)l(arious)2040 3536 y(SPECFP)27
b(b)r(enc)n(hmarks)e(in)g(this)h(case)h(study)-6 b(.)2063
3701 y Fe(7.2.1)90 b(Specialized)21 b(Priority)h(Functions)2115
3808 y FB(Figure)c(13)g(sho)n(ws)g(the)f(results)g(of)h(the)f(ten)g
(di\013eren)n(t)g(application-)2040 3896 y(sp)r(ecialized)22
b(priorit)n(y)f(functions.)33 b(Closer)22 b(examination)f(of)g(the)f
(GP)2040 3983 y(solutions)f(rev)n(eals)f(that)f(OR)n(C)g(o)n(v)n
(erzealously)i(prefetc)n(hes)f(and)f(that)2040 4070 y(b)n(y)g(simply)i
(taming)g(the)f(compiler's)i(aggressiv)n(eness,)i(one)d(can)f(sub-)2040
4157 y(stan)n(tially)23 b(impro)n(v)n(e)g(p)r(erformance)h(\(on)e(this)
h(set)g(of)g(b)r(enc)n(hmarks\).)2040 4244 y(The)36 b(GP)g(solutions)h
(rarely)e(prefetc)n(hed.)64 b(In)35 b(fact,)k(sh)n(utting)c(o\013)2040
4332 y(prefetc)n(hing)28 b(altogether)h(ac)n(hiev)n(es)g(gains)f
(within)g(7\045)h(of)f(the)g(sp)r(e-)2040 4419 y(cialized)f(priorit)n
(y)f(functions.)2115 4506 y(Figure)18 b(14)f(graphs)h(\014tness)f(o)n
(v)n(er)g(generation)h(for)g(the)f(application-)2040
4593 y(sp)r(eci\014c)42 b(exp)r(erimen)n(ts.)83 b(Just)42
b(as)g(with)g(h)n(yp)r(erblo)r(c)n(k)f(selection,)2040
4680 y(the)c(baseline)i(priorit)n(y)f(function)f(has)h(no)g(impact)g
(on)f(the)h(\014nal)2040 4767 y(solutions|)d(it)e(is)i(quic)n(kly)d
(obscured)i(b)n(y)e(sup)r(erior)i(expressions.)2040 4855
y(As)27 b(is)h(the)e(case)i(with)g(h)n(yp)r(erblo)r(c)n(k)e(selection,)
j(it)e(app)r(ears)h(that)f(in)2040 4942 y(man)n(y)e(cases,)i(GP)e
(solutions)i(get)f(`stuc)n(k')f(in)g(a)h(lo)r(cal)h(minim)n(um)e(in)
2040 5029 y(the)g(solution)h(space;)g(the)f(\014tnesses)g(stop)g(impro)
n(ving)g(early)h(in)f(the)2040 5116 y(ev)n(olution.)50
b(One)30 b(plausible)i(explanation)f(for)g(this)g(is)g(our)g(use)g(of)
2040 5203 y(parsimon)n(y)19 b(pressure)g(in)f(the)g(selection)i(pro)r
(cess.)33 b(F)-6 b(or)19 b(application-)2040 5290 y(sp)r(eci\014c)f(ev)
n(olutions,)j(it)d(is)g(often)h(the)e(case)i(that)f(v)n(ery)f(small)i
(expres-)2040 5378 y(sions)25 b(w)n(ork)f(w)n(ell.)35
b(While)25 b(these)f(small)h(expressions)g(are)f(e\013ectiv)n(e,)p
eop
%%Page: 12 12
12 11 bop -152 1093 a @beginspecial 117 @llx 72 @lly
774 @urx 485 @ury 2376 @rwi @clip @setspecial
%%BeginDocument: ./figs/prefetching_train.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (prefetching-numbers.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030425005031-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 117 72 774 485
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
117 72 moveto 774 72 lineto 774 485 lineto 117 485 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
117 72 657 413 rectclip
[ 0 -1 1 0 45.36 602.64 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font CLLJDG+Arial
11 dict begin
/FontName /CLLJDG+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/j 
<10bf3170af4c4e03cb099088e1548d44a53dbade2c858e7043672d28af7a
255a52c1fc5961ee26822ea9a234df911035f9c353cbc5b83b929a71f6d2
1b26fffa3fa0b8fccdceb1472f97c84f0973818dc194> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CLLJDG+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 65 /A put
dup 78 /N put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 160 /space put
pop
%%EndResource
[/N15/CLLJDG+Arial 1 TZ
%%BeginResource: font CLLJDE+Arial,Bold
11 dict begin
/FontName /CLLJDE+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/three 
<10bf3170435d0d440860530d539ff91fbeb84b45ccc7a1133230e64e009e
0c490ad4a8c72e30c66b9d7da2ebb61201fd5dbcf58b0c0488dc2a377321
5f26e0f7b61ae06bbd548a7c70db3930bb70d925be0576849d7017235523
559a7bd33c2b1cf718bf0b01521a2da1ae141319b8a7b7648826982192c9
9cac43d499c3346f8ae704779f7b332be818bd1aedb27938b45cc4303b57
6f7b6048a80721796cf703217479afeb4946fccc211036e97d76c144b665
49f485406b5a21bfa9b3b6ddd1fb25f39a00f379> ND 
/six 
<10bf317047276c4999812b7a58c0572e6389f25a493cb50dd70351626cc6
677e41da6002a25ccd83eb879220f1bc9ec49e34f0a95c5563d62d2d3c67
7e7c51052e3f8f20b1a6cb020fff107774ea9002a9fc904e7bc7f5d9b128
7ee966600e4e14d3e81950544387475dc2df7bded8d1fd6f65f14436d6d3
412de54a2b4d22c27c387de4cbd77eed536038a5eb6fa3506f61d4aa5d88
fa83602ba166c3d588bfbd81466cb552670a0c10abf1fa1f55b49bb8a5b6
39b4f6cde0263c5e> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CLLJDE+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 49 /one put
dup 51 /three put
dup 54 /six put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/CLLJDE+Arial,Bold 1 TZ
false setSA
n
75.96 733.08 459.24 -675.12 re
1 1 1 setrgbcolor
f
q
n
362.28 142.2 0.119995 584.28 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
362.28 142.2 m
362.28 726.48 l
0 0 0  setrgbcolor
S
Q
q
n
316.44 142.2 0.119995 584.28 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
316.44 142.2 m
316.44 726.48 l
0 0 0  setrgbcolor
S
Q
q
n
270.72 142.2 0.119995 584.28 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
270.72 142.2 m
270.72 726.48 l
0 0 0  setrgbcolor
S
Q
q
n
224.88 142.2 0.119995 584.28 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
224.88 142.2 m
224.88 726.48 l
0 0 0  setrgbcolor
S
Q
q
n
179.16 142.2 0.119995 584.28 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
179.16 142.2 m
179.16 726.48 l
0 0 0  setrgbcolor
S
Q
q
n
133.32 142.2 0.119995 584.28 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
133.32 142.2 m
133.32 726.48 l
0 0 0  setrgbcolor
S
Q
q
n
72 54 467.04 683.04 re
141.12 300.12 25.56 288.24 re
eoclip
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
133.32 142.2 274.68 584.28 re
0 0 0  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
317.28 151.56 90.72 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
199.56 204.72 208.44 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
292.56 257.76 115.44 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
291.36 310.92 116.64 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
286.56 364.08 121.44 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
247.08 417.12 160.92 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
314.64 470.28 93.36 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
313.32 523.32 94.68 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
309.36 576.48 98.64 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
310.92 629.64 97.08 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
288.24 682.68 119.76 17.04 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
315.96 168.72 92.04 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
q
n
153.84 215.88 254.16 29.04 re
W
n
n
159.84 221.88 248.16 16.92 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
Q
n
291 274.92 117 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
291.24 328.08 116.76 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
285.24 381.24 122.76 16.92 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
260.4 434.28 147.6 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
317.52 487.44 90.48 16.92 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
313.32 540.48 94.68 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
312.36 593.64 95.64 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
291.36 646.8 116.64 16.92 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
n
283.8 699.84 124.2 17.04 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
0.119995 w
n
133.32 142.2 m
408 142.2 l
408 136.32 m
408 142.2 l
362.28 136.32 m
362.28 142.2 l
316.44 136.32 m
316.44 142.2 l
270.72 136.32 m
270.72 142.2 l
224.88 136.32 m
224.88 142.2 l
179.16 136.32 m
179.16 142.2 l
133.32 136.32 m
133.32 142.2 l
408 142.2 m
408 726.48 l
413.88 142.2 m
408 142.2 l
413.88 195.36 m
408 195.36 l
413.88 248.4 m
408 248.4 l
413.88 301.56 m
408 301.56 l
413.88 354.72 m
408 354.72 l
413.88 407.76 m
408 407.76 l
413.88 460.92 m
408 460.92 l
413.88 513.96 m
408 513.96 l
413.88 567.12 m
408 567.12 l
413.88 620.28 m
408 620.28 l
413.88 673.32 m
408 673.32 l
413.88 726.48 m
408 726.48 l
S
1 1 1  setrgbcolor
315.36 694.8 m
/N13 -12 Tf
(1.31)
[-6.71283 -3.37683 -6.71283 -6.71283 ] pdfxs
310.92 711.96 m
(1.36)
[-6.71283 -3.37683 -6.71283 -6.71283 ] pdfxs
0 0 0  setrgbcolor
414.36 101.4 m
/N15 [0 18.96 -18.96 0 0 0] Tf
(0.0) show
368.64 101.4 m
(0.5) show
322.8 101.4 m
(1.0) show
277.08 101.4 m
(1.5) show
231.24 101.4 m
(2.0) show
185.52 101.4 m
(2.5) show
139.681 101.4 m
(3.0) show
525.84 174.96 m
/N15 -18.96 Tf
(101.tomcatv)
[-10.5568 -10.5568 -10.5568 -5.28592 -5.28592 -10.5568 -15.8086 -9.49505 -10.5568 -5.28592 -9.49505 
] pdfxs
502.439 228.12 m
(102) show
(.)
[-5.2729 ] pdfxs
(swim) show
516.36 281.28 m
(103.su2cor)
[-10.553 -10.553 -10.553 -5.28216 -9.49129 -10.553 -10.553 -9.49129 -10.553 -6.32482 ] pdfxs
513.239 334.321 m
(125.turb3d)
[-10.5588 -10.5588 -10.5588 -5.28795 -5.28795 -10.5588 -6.33061 -10.5588 -10.5588 -10.5588 ] pdfxs
514.079 387.481 m
(146.wave5)
[-10.5513 -10.5513 -10.5513 -5.28043 -13.6984 -10.5513 -9.48955 -10.5513 -10.5513 ] pdfxs
511.08 440.641 m
(093.nasa7)
[-10.5551 -10.5551 -10.5551 -5.28419 -10.5551 -10.5551 -9.49331 -10.5551 -10.5551 ] pdfxs
511.08 493.682 m
(015.doduc)
[-10.5568 -10.5568 -10.5568 -5.28592 -10.5568 -10.5568 -10.5568 -10.5568 -9.49505 ] pdfxs
525.84 546.842 m
(034.mdljdp2)
[-10.5551 -10.5551 -10.5551 -5.28419 -15.8069 -10.5551 -4.22214 -4.22214 -10.5551 -10.5551 -10.5551 
] pdfxs
506.88 599.883 m
(107.mgrid)
[-10.5609 -10.5609 -10.5609 -5.28997 -15.8126 -10.5609 -6.33264 -4.22793 -10.5609 ] pdfxs
494.16 653.043 m
(141.apsi)
[-10.5551 -10.5551 -10.5551 -5.28419 -10.5551 -10.5551 -9.49331 -4.22214 ] pdfxs
493.079 706.203 m
(Average)
[-12.6557 -9.48955 -10.5513 -6.32309 -10.5513 -10.5513 -10.5513 ] pdfxs
310.799 88.8024 m
/N13 -18.96 Tf
(Speedup)
[-12.6006 -11.6431 -10.5834 -10.5834 -11.6261 -11.6261 -11.6261 ] pdfxs
n
141.24 588.24 25.44 -288 re
1 1 1  setrgbcolor
f
n
141.12 300.12 25.56 288.12 re
0 0 0  setrgbcolor
S
0.960007 w
n
149.04 305.52 11.64 11.64 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
161.16 321.72 m
/N15 [0 18.96 -18.96 0 0 0] Tf
(Train data set) show
n
149.04 445.92 11.64 11.64 re
q
0.587997 0.587997 0.587997  setrgbcolor
eofill
Q
S
161.16 462.12 m
(Novel data set) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 170 x FA(Figure)35 b(15:)49 b Fq(T)-7 b(raining)31
b(a)g(prefetc)n(hing)h(priorit)n(y)d(function)j(on)-152
1350 y(m)n(ultiple)27 b(b)r(enc)n(hmarks.)39 b(Our)28
b(DSS)g(ev)n(olution)f(trained)g(on)h(all)-152 1438 y(the)k(b)r(enc)n
(hmarks)g(in)f(this)g(\014gure.)49 b(The)32 b(single)f(b)r(est)h
(priorit)n(y)-152 1525 y(function)i(w)n(as)f(applied)h(to)f(all)g(the)i
(b)r(enc)n(hmarks.)56 b(The)35 b(dark)-152 1612 y(bars)c(represen)n(t)g
(sp)r(eedups)i(obtained)d(b)n(y)h(running)g(the)g(giv)n(en)-152
1699 y(b)r(enc)n(hmark)c(on)h(the)f(same)g(data)f(that)g(w)n(as)g(used)
i(to)f(train)f(the)-152 1786 y(priorit)n(y)e(function.)35
b(The)26 b(ligh)n(t)e(bars)h(corresp)r(ond)h(to)f(an)h(alter-)-152
1873 y(nate)h(data)f(set.)-152 2106 y FB(they)37 b(limit)i(the)e
(genetic)i(material)g(a)n(v)l(ailable)g(to)e(the)h(crosso)n(v)n(er)-152
2193 y(op)r(erator.)55 b(F)-6 b(urthermore,)34 b(since)f(w)n(e)g(alw)n
(a)n(ys)g(k)n(eep)e(the)h(b)r(est)h(ex-)-152 2280 y(pression,)24
b(the)e(p)r(opulation)h(so)r(on)g(b)r(ecomes)g(in)n(bred)f(with)h
(copies)g(of)-152 2368 y(the)28 b(top)g(expression.)42
b(F)-6 b(uture)26 b(w)n(ork)j(will)g(explore)f(the)g(impact)g(of)-152
2455 y(parsimon)n(y)e(pressure)g(and)f(elitism.)-129
2608 y Fe(7.2.2)90 b(Gener)o(al\255Purpose)19 b(Priority)j(Functions)
-77 2716 y FB(The)33 b(p)r(erformance)i(of)e(the)g(b)r(est)g
(DSS-generated)f(prefetc)n(hing)-152 2804 y(priorit)n(y)17
b(function)h(is)f(sho)n(wn)h(in)f(Figure)h(15.)32 b(The)18
b(priorit)n(y)f(function)-152 2891 y(w)n(as)35 b(trained)e(on)h(the)f
(same)h(b)r(enc)n(hmarks)f(in)h(the)f(\014gure,)j(whic)n(h)-152
2978 y(are)f(a)e(com)n(bination)i(of)f(SPEC92)h(and)f(SPEC95)h
(\015oating)f(p)r(oin)n(t)-152 3065 y(b)r(enc)n(hmarks.)k(Data)27
b(prefetc)n(hing,)h(lik)n(e)f(h)n(yp)r(erblo)r(c)n(k)f(selection,)i(is)
-152 3152 y(extremely)35 b(data-driv)n(en.)62 b(By)35
b(applying)g(the)g(same)h(input)f(data)-152 3239 y(that)j(w)n(e)h(used)
f(to)h(train)f(the)g(priorit)n(y)h(function)f(w)n(e)h(ac)n(hiev)n(e)f
(a)-152 3327 y(31\045)28 b(sp)r(eedup.)37 b(Somewhat)28
b(surprisingly)-6 b(,)27 b(the)g(no)n(v)n(el)g(input)f(data)-152
3414 y(set)i(ac)n(hiev)n(es)h(a)f(b)r(etter)g(sp)r(eedup)f(of)h
(36\045.)42 b(Because)29 b(the)f(priorit)n(y)-152 3501
y(function)37 b(learned)f(to)g(prefetc)n(h)g(infrequen)n(tly)-6
b(,)38 b(it)e(is)h(simply)f(the)-152 3588 y(case)26 b(that)f(the)g(no)n
(v)n(el)g(data)h(set)f(is)h(more)f(sensitiv)n(e)h(to)f(prefetc)n(hing)
-152 3675 y(than)h(the)f(training)h(data)g(set)g(is.)-77
3762 y(Figure)h(16)g(sho)n(ws)g(the)f(cross)i(v)l(alidation)f(results)f
(for)i(this)e(opti-)-152 3850 y(mization,)k(and)e(prompts)g(us)g(to)g
(men)n(tion)g(a)g(ca)n(v)n(eat)h(of)f(our)h(tec)n(h-)-152
3937 y(nique.)74 b(GP's)39 b(abilit)n(y)h(to)f(iden)n(tify)f(go)r(o)r
(d)i(general-purp)r(ose)g(so-)-152 4024 y(lutions)g(is)h(based)e(on)h
(the)f(b)r(enc)n(hmarks)g(o)n(v)n(er)h(whic)n(h)f(they)g(are)-152
4111 y(ev)n(olv)n(ed.)66 b(F)-6 b(or)36 b(the)g(SPEC92)h(and)f(SPEC95)h
(b)r(enc)n(hmarks)f(that)-152 4198 y(w)n(ere)27 b(used)e(to)h(train)g
(our)g(general-purp)r(ose)g(heuristic,)h(aggressiv)n(e)-152
4286 y(prefetc)n(hing)19 b(w)n(as)g(debilitating.)33
b(Ho)n(w)n(ev)n(er,)20 b(for)g(a)e(couple)h(of)g(b)r(enc)n(h-)-152
4373 y(marks)30 b(in)f(the)f(SPEC2000)j(\015oating)f(p)r(oin)n(t)f
(set,)i(w)n(e)e(see)h(that)e(ag-)-152 4460 y(gressiv)n(e)f(prefetc)n
(hing)e(is)h(desirable.)35 b(Th)n(us,)26 b(unless)f(designers)i(can)
-152 4547 y(assert)g(that)e(the)h(training)g(set)g(pro)n(vides)f
(adequate)h(problem)f(co)n(v-)-152 4634 y(erage,)e(they)c(cannot)h
(completely)g(trust)g(GP-generated)g(solutions.)-152
4921 y FC(8.)100 b(RELA)-9 b(TED)26 b(W)o(ORK)-77 5029
y FB(Man)n(y)c(researc)n(hers)i(ha)n(v)n(e)e(applied)h(mac)n
(hine-learning)h(metho)r(ds)-152 5116 y(to)h(compilation,)i(and)e
(therefore,)h(only)f(the)f(most)i(relev)l(an)n(t)e(w)n(orks)-152
5203 y(are)j(cited)e(here.)-77 5290 y(Calder)j(et)f(al.)i(used)e(sup)r
(ervised)g(learning)h(tec)n(hniques)e(to)i(\014ne-)-152
5378 y(tune)34 b(static)g(branc)n(h)g(prediction)g(heuristics)h([5].)60
b(They)34 b(emplo)n(y)2040 1113 y @beginspecial 81 @llx
63 @lly 747 @urx 513 @ury 2246 @rwi @clip @setspecial
%%BeginDocument: ./figs/prefetching_test.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (prefetching-numbers.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20030425005244-04'00')
%%For: (root)
%%DocumentData: Clean7Bit
%%BoundingBox: 81 63 747 513
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
81 63 moveto 747 63 lineto 747 513 lineto 81 513 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
81 63 665 449 rectclip
[ 0 -1 1 0 18 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font CNMCOE+Arial
11 dict begin
/FontName /CNMCOE+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/d 
<10bf31705fc19346123ea144938c3fcda937cd4a672f67877e80be643ef8
5a01cff57f62859595ad9c2a1ef16f4c22144c6fc4d200f23642de52d57f
47e47c78a8b6713f5cb6dcd4a475047f70e7386f0baddd9f1c37f1598f60
1bc5b6005acf2115ed4aa52ed6ed621e5045f115e6c8ed146247e81ce086
3c881ef71e6e234403d5f37c528c6ebb0616bbdc05a29ca9d830ed27448f
> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/f 
<10bf31706629561882b73d5b02cebd16b0942e445fbe6e3232b3823cbdb2
63dcf8e5b5846268df4eba2210bb667f400c46f76ed43d4b268aed98cf98
689dff659a93d69b1917cc1e5f49aadef7d4b3b6109675927aeb98089c> ND 
/g 
<10bf3170599a82ae9f38a9e935b4e0f3d7776326ecd8d725592828643987
c2e996bcd7d71545c3eb62141100b3029b5db47d5a1c74ff1f384da4be0e
6cf0ee7a06a6ed308265b547c61245dd74ea50abb0d2d3cd2399420ee06e
7956a28a86fe6b998b8722a5746802f533a367725615f062015db919f3df
3c1161274e44726519555c137d48159ae02477eb468fd9fc7a3d8570c8a3
e043f93c86fb8138e2b07c9d11fc45f70eb798bfa21ffadc315e7d76733b
5b2c49936a2059f2200afe935aa8ae6d77bf03212f2cde46> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/m 
<10bf31703f92f56d921ff977e5d6963369571a0659b0c0d4b90a5d6fb9cf
6faeef66a6b161cb3d25beb050c083e79f2022ade1c13065af4f750db4fe
1ad2e1c991cb72a1a606eb51e0d41e91fb4441b42920d1b3a1093a55a67e
1a1fd7d653f510dbcf49e0790e917a5508d455454558a59585ba63bcbeb1
95200dede71b995b075a583acbe0294673e1e62af20184e1e4ef7c875961
9374c008bd7ea0a3f8> ND 
/p 
<10bf31703f932f5ecb85f9f26ec0d7d79e55a006319a903b4934e0296676
bb7a5df970714192f29a85860f4cb191aa4b83ebc5b58328ecf58ed9d6ff
d0d3a63dd21733d64450e3abce2a149390b0894b2fb0fce1ee78d045f446
04c31c787e13fdae7e79785a1956f734ed54b976e123646b63ce5bee0b68
59b26a26c2ad993325ab7bd77cdd1be893a8ccd1451854fed772889a0d7d
7791ac97d81ac7> ND 
/q 
<10bf31705c36af5cef64feff3875e93eaf63e864fd70bb6a233352105e24
3a5cd4f03912d5acd21f32af0f91c1a9946998d2b523bf278ed7e760296f
82ab85e13d34ee43890ecb71199ab005d452eb9982133856fef3006dcdc9
47bf3adb9d4a6a991e8aff21b2bb5591c29aca63e8bcc0429c71b550be84
f5817c08976f9f682b468226026818eeaa8d92033b36d7291e> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/v 
<10bf31706ae07dd17dfbac8a1ae33180eda67f1c12c0170124c5b65d6008
42ef910f621d12aef7aac075b848d0659b626414ef71a4> ND 
/w 
<10bf31707c6251ab9dc02dac0cfe6b2ad0a1717407cbd63b737120f851f4
8bf643a435f165b7893dd828fd2da9e1185df5d44f0e3e41505c0548c1d2
65fe2f6b93f7702905dcf1946733a5e23d> ND 
/x 
<10bf317060ff640a97f40d52fc73b98a64469b3f084ceb61cbde39a670a8
6bdd66d38d792d8bbe1de58b050ff75d7a6d9ab8ab83f71f1130ffc9a46b
7d934ffb8ab93375fd62539cb08006> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CNMCOE+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
pop
%%EndResource
[/N15/CNMCOE+Arial 1 TZ
%%BeginResource: font CNMCOC+Arial,Bold
11 dict begin
/FontName /CNMCOC+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/zero 
<10bf317047276c49b0d576f188d46ae965fd1ee754bf887206fb36232fbb
89f30bf7d7ccc04b68096e51e4fa383bd83a62a12254967c97fccef8f682
660584deed9a81b43cbb2c7b7968da901e3ae8e83e66419f304294be518a
c53bdfb87ba841dcf049e90378ca4bf02bb8502cda53c68c5e2344ff3039
a6b7677199a113d4a1df9615bbdd894af0ddf69e08437253bed3648332ae
c1e0f4e1525f1c1a3191b7b4ff> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/S 
<10bf31705d65c0900ab6f1dec202feebed63a391e8923b6171e4bd9a9891
3483f7e18f03f81efeea9ec6e499086f29e069b330e0714349bdbde86411
119421305eb3ccf831a419f2b1b383ae283eef31cd6ab17d35e046224edf
8d334c91b8f3410ce0b754cf25ffc38b1c45008fedcc6fb476440d278757
5aef3183071e560db2a44ec14079a58ceb82879a9f1a9b4e9fcabb16df58
24675d0a68f72691cd9980f0d6d9adcd3e204eaf9c302558bc548ec6583d
8e097a247d483ed52d9f91d7ca0feb01513c1c9a868c4cf1c92a6751c828
3f7c6f8c290f25> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/CNMCOC+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 83 /S put
dup 100 /d put
dup 101 /e put
dup 112 /p put
dup 117 /u put
pop
%%EndResource
[/N13/CNMCOC+Arial,Bold 1 TZ
false setSA
n
75.96 733.08 459.24 -675.12 re
1 1 1 setrgbcolor
f
q
n
374.16 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
374.16 133.92 m
374.16 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
334.68 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
334.68 133.92 m
334.68 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
295.2 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
295.2 133.92 m
295.2 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
255.72 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
255.72 133.92 m
255.72 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
216.24 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
216.24 133.92 m
216.24 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
176.76 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
176.76 133.92 m
176.76 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
137.28 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
137.28 133.92 m
137.28 725.16 l
0 0 0  setrgbcolor
S
Q
q
n
97.8 133.92 0.119995 591.24 re
W
n
1 J
1 j
0.119995 w
10 M
[] 0 d
n
97.8 133.92 m
97.8 725.16 l
0 0 0  setrgbcolor
S
Q
1 J
0 j
0.960007 w
10 M
[] 0 d
n
97.8 133.92 315.84 591.24 re
0.501999 0.501999 0.501999  setrgbcolor
S
n
190.08 147.48 223.56 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
0 0 0  setrgbcolor
S
n
268.08 192.96 145.56 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
240.72 238.44 172.92 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
217.08 283.92 196.56 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
213.72 329.4 199.92 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
215.52 374.88 198.12 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
215.64 420.36 198 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
216.6 465.84 197.04 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
217.56 511.32 196.08 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
220.56 556.8 193.08 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
127.08 602.28 286.56 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
217.44 647.76 196.2 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
n
213.36 693.24 200.28 18.12 re
q
0.199997 0.199997 0.199997  setrgbcolor
eofill
Q
S
0.119995 w
n
97.8 133.92 m
413.64 133.92 l
413.64 128.64 m
413.64 133.92 l
374.16 128.64 m
374.16 133.92 l
334.68 128.64 m
334.68 133.92 l
295.2 128.64 m
295.2 133.92 l
255.72 128.64 m
255.72 133.92 l
216.24 128.64 m
216.24 133.92 l
176.76 128.64 m
176.76 133.92 l
137.28 128.64 m
137.28 133.92 l
97.8 128.64 m
97.8 133.92 l
413.64 133.92 m
413.64 725.16 l
418.92 133.92 m
413.64 133.92 l
418.92 179.4 m
413.64 179.4 l
418.92 224.88 m
413.64 224.88 l
418.92 270.36 m
413.64 270.36 l
418.92 315.84 m
413.64 315.84 l
418.92 361.32 m
413.64 361.32 l
418.92 406.8 m
413.64 406.8 l
418.92 452.28 m
413.64 452.28 l
418.92 497.76 m
413.64 497.76 l
418.92 543.24 m
413.64 543.24 l
418.92 588.72 m
413.64 588.72 l
418.92 634.2 m
413.64 634.2 l
418.92 679.68 m
413.64 679.68 l
418.92 725.16 m
413.64 725.16 l
S
1 1 1  setrgbcolor
240.48 705.96 m
/N13 -12 Tf
(1.01)
[-6.71283 -3.37683 -6.71283 -6.71283 ] pdfxs
0 0 0  setrgbcolor
419.28 111.48 m
/N15 [0 17.04 -17.04 0 0 0] Tf
(0) show
379.8 97.3199 m
(0.2) show
340.32 97.3199 m
(0.4) show
300.84 97.3199 m
(0.6) show
261.361 97.3199 m
(0.8) show
221.881 111.48 m
(1) show
182.401 97.3199 m
(1.2) show
142.921 97.3199 m
(1.4) show
103.441 97.3199 m
(1.6) show
524.76 162.24 m
/N15 -17.04 Tf
(168.wupwise)
[-9.48619 -9.48619 -9.48619 -4.74908 -12.3146 -9.48619 -9.48619 -12.3146 -3.79458 -8.53196 -9.48619 
] pdfxs
498.36 207.72 m
(171.swim)
[-9.48957 -9.48957 -9.48957 -4.75246 -8.53534 -12.318 -3.79796 -14.2095 ] pdfxs
502.32 253.2 m
(172.mgrid)
[-9.46747 -9.46747 -9.46747 -4.73036 -14.1874 -9.46747 -5.66743 -3.77586 -9.46747 ] pdfxs
501.48 298.68 m
(173) show
(.)
[-4.7405 ] pdfxs
(applu) show
505.321 344.159 m
(178) show
(.)
[-4.7405 ] pdfxs
(galgel) show
515.64 389.639 m
(183)
[-9.47085 -9.47085 -9.47085 ] pdfxs
(.) show
(equa)
[-9.47085 -9.47085 -9.47085 -9.47085 ] pdfxs
(k) show
(e) show
515.521 435.119 m
(187.facerec)
[-9.46227 -9.46227 -9.46227 -4.72516 -4.72516 -9.46227 -8.50804 -9.46227 -5.66223 -9.46227 -8.50804 
] pdfxs
507.001 480.599 m
(188.ammp)
[-9.45551 -9.45551 -9.45551 -4.7184 -9.45551 -14.1755 -14.1755 -9.45551 ] pdfxs
499.561 526.079 m
(189) show
(.)
[-4.73894 ] pdfxs
(lucas) show
517.322 571.559 m
(200.sixtrack)
[-9.46747 -9.46747 -9.46747 -4.73036 -8.51324 -3.77586 -8.51324 -4.73036 -5.66743 -9.46747 -8.51324 
-8.51324 ] pdfxs
491.041 617.039 m
(301.apsi)
[-9.46747 -9.46747 -9.46747 -4.73036 -9.46747 -9.46747 -8.51324 -3.77586 ] pdfxs
507.001 662.518 m
(191.fma3d)
[-9.46071 -9.46071 -9.46071 -4.7236 -4.7236 -14.1807 -9.46071 -9.46071 -9.46071 ] pdfxs
490.08 707.998 m
(Average) show
291.84 85.558 m
/N13 -17.04 Tf
(Speedup)
[-11.3895 -10.4352 -9.49815 -9.49815 -10.4352 -10.4352 -10.4352 ] pdfxs
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 170 x FA(Figure)53 b(16:)88 b Fq(Cross)49
b(v)-5 b(alidation)47 b(of)i(the)h(general-purp)r(ose)2040
1371 y(prefetc)n(hing)38 b(priorit)n(y)e(function)i(on)g(SPEC2000.)69
b(The)38 b(b)r(est)2040 1458 y(priorit)n(y)23 b(function)i(found)h(b)n
(y)f(the)g(DSS)h(run)g(is)f(applied)g(to)g(the)2040 1545
y(b)r(enc)n(hmarks)32 b(in)f(this)g(graph.)49 b(Results)31
b(from)g(t)n(w)n(o)f(target)g(ar-)2040 1632 y(c)n(hitectures)d(are)f
(sho)n(wn.)2040 1886 y FB(neural)38 b(net)n(w)n(orks)g(and)f(decision)h
(trees)g(to)g(searc)n(h)g(for)h(e\013ectiv)n(e)2040 1973
y(static)27 b(branc)n(h)e(prediction)h(heuristics.)36
b(While)27 b(our)f(metho)r(dology)2040 2061 y(is)g(similar,)i(our)d(w)n
(ork)h(di\013ers)g(in)f(sev)n(eral)h(imp)r(ortan)n(t)g(w)n(a)n(ys.)35
b(Most)2040 2148 y(imp)r(ortan)n(tly)-6 b(,)34 b(w)n(e)e(use)h(unsup)r
(ervised)e(learning,)k(while)e(they)f(use)2040 2235 y(sup)r(ervised)26
b(learning.)2115 2322 y(Unsup)r(ervised)32 b(learning)i(is)f(used)g(to)
g(capture)g(inheren)n(t)f(orga-)2040 2409 y(nization)g(in)e(data,)j
(and)e(th)n(us,)g(only)g(input)f(data)h(is)g(required)g(for)2040
2497 y(training.)63 b(Sup)r(ervised)34 b(learning)h(attempts)g(to)g
(matc)n(h)g(training)2040 2584 y(inputs)22 b(with)h(kno)n(wn)g
(outcomes,)h(called)g Fx(lab)l(els)p FB(.)34 b(This)24
b(means)f(that)2040 2671 y(their)29 b(learning)h(tec)n(hniques)e(rely)h
(on)g(kno)n(wing)h(the)e(optimal)i(out-)2040 2758 y(come,)20
b(while)f(ours)e(do)r(es)h(not)2878 2726 y Fs(8)2913
2758 y FB(.)32 b(In)16 b(their)i(case)g(determining)g(the)f(op-)2040
2845 y(timal)28 b(outcome)g(is)f(trivial|)h(they)e(simply)h(run)f(the)h
(b)r(enc)n(hmarks)2040 2932 y(in)c(their)f(training)h(set)g(and)f(note)
h(the)f(direction)h(that)f(eac)n(h)h(branc)n(h)2040 3020
y(fa)n(v)n(ors.)68 b(In)36 b(this)g(sense,)k(their)d(metho)r(d)f(is)h
(simply)g(a)g(classi\014er:)2040 3107 y(classify)26 b(the)e(data)g(in)n
(to)h(t)n(w)n(o)f(groups,)i(either)e(tak)n(en)g(or)g(not-tak)n(en.)2040
3194 y(Priorit)n(y)i(functions)f(cannot)g(b)r(e)g(classi\014ed)h(in)f
(this)g(w)n(a)n(y)-6 b(,)26 b(and)e(th)n(us)2040 3281
y(they)h(demand)g(an)h(unsup)r(ervised)f(metho)r(d)g(suc)n(h)g(as)i
(ours.)2115 3368 y(W)-6 b(e)26 b(also)j(di\013er)e(in)g(the)f(end)h
(goal)h(of)g(our)f(learning)h(tec)n(hniques.)2040 3455
y(They)e(use)h(misprediction)g(rates)g(to)f(guide)h(the)f(learning)h
(pro)r(cess.)2040 3543 y(While)d(this)g(is)g(a)g(p)r(erfectly)g(v)l
(alid)g(c)n(hoice,)h(it)f(do)r(es)g(not)f(necessarily)2040
3630 y(re\015ect)j(the)f(b)r(ottom)h(line:)35 b(execution)25
b(time.)2115 3717 y(Monsifrot)41 b(et)f(al.)h(use)f(a)g(classi\014er)h
(based)f(on)g(decision)g(tree)2040 3804 y(learning)33
b(to)f(determine)f(whic)n(h)h(lo)r(ops)h(to)f(unroll)g([17].)54
b(Lik)n(e)31 b([5],)2040 3891 y(this)17 b(sup)r(ervised)g(metho)r
(dology)h(relies)h(on)e(extracting)g(lab)r(els,)k(whic)n(h)2040
3978 y(is)26 b(not)g(only)f(di\016cult,)h(in)g(man)n(y)f(cases)i(it)f
(is)g(simply)g(not)f(feasible.)2115 4066 y(Co)r(op)r(er)i(et)g(al.)g
(use)f(genetic)h(algorithms)h(to)e(solv)n(e)h(compilation)2040
4153 y(phase)36 b(ordering)g(problems)g([8].)66 b(Their)36
b(tec)n(hnique)f(is)h(quite)f(ef-)2040 4240 y(fectiv)n(e.)56
b(Ho)n(w)n(ev)n(er,)35 b(lik)n(e)e(other)f(related)i(w)n(ork,)h(they)c
(ev)n(olv)n(e)i(the)2040 4327 y(application,)f(not)e(the)f(compiler)
3025 4295 y Fs(9)3061 4327 y FB(.)47 b(Th)n(us,)31 b(their)e(compiler)i
(itera-)2040 4414 y(tiv)n(ely)26 b(ev)n(olv)n(es)g Fx(every)34
b FB(program)27 b(it)f(compiles.)37 b(By)25 b(ev)n(olving)i(com-)2040
4501 y(piler)18 b(heuristics,)i(and)c(not)i(the)e(applications)j
(themselv)n(es,)g(w)n(e)f(need)2040 4589 y(only)26 b(apply)f(our)h(pro)
r(cess)g(once)g(as)g(sho)n(wn)g(in)g(Section)g(5.4.2.)2115
4676 y(The)17 b(COGEN\(t\))g(compiler)h(creativ)n(ely)g(uses)f(genetic)
h(algorithms)2040 4763 y(to)28 b(map)f(co)r(de)g(to)h(irregular)g(DSPs)
f([11].)41 b(This)28 b(compiler,)h(though)2040 4850 y(in)n(teresting,)
20 b(also)g(ev)n(olv)n(es)e(on)g(a)g(p)r(er-application)h(basis.)33
b(Nonethe-)2040 4937 y(less,)26 b(the)e(compile-once)h(nature)f(of)i
(DSP)d(applications)j(ma)n(y)e(w)n(ar-)2040 5025 y(ran)n(t)i(the)f
(long,)i(iterativ)n(e)f(compilation)h(pro)r(cess.)p 2040
5114 797 4 v 2044 5167 a Fs(8)2078 5199 y Fr(This)d(is)g(a)h(strict)g
(requiremen)o(t)h(b)q(oth)g(for)f(decision)g(trees)h(and)e(the)i
(gradien)o(t)f(descen)o(t)2040 5249 y(metho)q(d)c(they)f(use)g(to)h
(train)f(their)h(neural)g(net)o(w)o(ork.)2044 5296 y
Fs(9)2078 5328 y Fr(Ho)o(w)o(ev)o(er,)e(they)h(w)o(ere)f(able)h(to)g
(man)o(ually)e(construct)j(a)f(general-purp)q(ose)i(sequence)e(us-)2040
5378 y(ing)g(information)h(gleaned)f(from)g(their)h(application-sp)q
(ecific)h(ev)o(olutions.)p eop
%%Page: 13 13
13 12 bop -152 -69 a FC(9.)100 b(CONCLUSION)-77 39 y
FB(Compiler)42 b(dev)n(elop)r(ers)g(ha)n(v)n(e)e(alw)n(a)n(ys)i(had)f
(to)g(con)n(tend)g(with)-152 126 y(complex)33 b(phenomenon)f(that)h
(are)g(not)g(easy)g(mo)r(deled.)56 b(F)-6 b(or)33 b(ex-)-152
214 y(ample,)g(it)d(has)h(nev)n(er)f(b)r(een)g(p)r(ossible)i(to)e
(create)h(a)g(useful)g(mo)r(del)-152 301 y(for)39 b(all)g(the)f(input)f
(programs)i(the)f(compiler)h(has)f(to)h(optimize.)-152
388 y(Ho)n(w)n(ev)n(er)34 b(un)n(til)f(recen)n(tly)-6
b(,)34 b(most)g(arc)n(hitectures|)g(the)f(target)h(of)-152
475 y(compiler)27 b(optimizations|)h(w)n(ere)e(simple)h(and)f
(analyzable.)36 b(This)-152 562 y(is)26 b(no)f(longer)g(the)g(case.)35
b(A)24 b(complex)h(compiler)h(with)f(m)n(ultiple)g(in-)-152
649 y(terdep)r(enden)n(t)h(optimization)j(passes)f(exacerbates)g(the)f
(problem.)-152 737 y(In)18 b(man)n(y)g(instances,)j(end-to-end)16
b(p)r(erformance)k(can)f(only)f(b)r(e)g(ev)l(al-)-152
824 y(uated)26 b(empirically)-6 b(.)-77 911 y(Optimally)22
b(solving)g(NP-hard)f(problems)h(is)g(not)g(practical)g(ev)n(en)-152
998 y(when)29 b(simple)h(analytical)g(mo)r(dels)g(exist.)45
b(Th)n(us,)30 b(heuristics)g(pla)n(y)-152 1085 y(a)36
b(ma)t(jor)i(role)e(in)g(mo)r(dern)g(compilers.)66 b(Borro)n(wing)38
b(tec)n(hniques)-152 1173 y(from)g(the)f(mac)n(hine-learning)h(comm)n
(unit)n(y)-6 b(,)39 b(w)n(e)e(created)h(a)f(gen-)-152
1260 y(eral)32 b(framew)n(ork)g(for)f(dev)n(eloping)g(compiler)h
(heuristics.)50 b(W)-6 b(e)30 b(ad-)-152 1347 y(v)n(o)r(cate)c(a)f(mac)
n(hine-learning)h(based)g(metho)r(dology)g(for)g(automat-)-152
1434 y(ically)h(learning)g(e\013ectiv)n(e)e(compiler)i(heuristics.)-77
1521 y(The)22 b(tec)n(hniques)g(presen)n(ted)f(in)h(this)g(pap)r(er)g
(sho)n(w)h(promise,)h(but)-152 1608 y(they)33 b(are)i(still)g(in)f
(their)g(infancy)-6 b(.)59 b(F)-6 b(or)34 b(man)n(y)f(applications)j
(our)-152 1696 y(tec)n(hniques)20 b(found)h(excellen)n(t)g
(application-sp)r(eci\014c)h(priorit)n(y)e(func-)-152
1783 y(tions.)68 b(Ho)n(w)n(ev)n(er,)40 b(the)c(disparit)n(y)h(in)f
(some)i(cases)g(b)r(et)n(w)n(een)e(the)-152 1870 y(application-sp)r
(eci\014c)19 b(p)r(erformance)f(and)f(the)g(general-purp)r(ose)g(p)r
(er-)-152 1957 y(formance)27 b(tells)g(us)e(that)h(our)f(tec)n(hniques)
g(can)h(b)r(e)g(impro)n(v)n(ed.)-77 2044 y(W)-6 b(e)19
b(also)i(note)e(disparities)h(b)r(et)n(w)n(een)g(the)e(p)r(erformance)j
(of)f(train-)-152 2131 y(ing)g(set)f(applications)h(and)f(the)f(cross)i
(v)l(alidation)g(p)r(erformance.)33 b(In)-152 2219 y(some)23
b(cases)h(our)e(solutions)h Fx(over\014t)31 b FB(the)22
b(training)h(set.)33 b(If)23 b(compiler)-152 2306 y(dev)n(elop)r(ers)37
b(use)f(our)g(tec)n(hnique)f(but)g(only)h(train)h(using)f(b)r(enc)n(h-)
-152 2393 y(marks)22 b(on)f(whic)n(h)g(their)g(compiler)h(will)h(b)r(e)
e(judged,)h(the)f(generalit)n(y)-152 2480 y(of)27 b(their)e(compiler)i
(ma)n(y)e(actually)i(b)r(e)e(reduced.)-77 2567 y(Our)e(\015edgling)g
(researc)n(h)h(has)g(a)f(few)h(shortcomings)h(that)e(future)-152
2654 y(w)n(ork)33 b(will)h(address.)56 b(F)-6 b(or)33
b(instance,)i(the)e(success)g(of)h(an)n(y)e(learn-)-152
2742 y(ing)23 b(algorithm)h(hinges)f(on)f(selecting)i(the)e(righ)n(t)g
(features.)34 b(W)-6 b(e)22 b(will)-152 2829 y(explore)27
b(tec)n(hniques)f(that)g(aid)h(in)f(extracting)h(features)h(that)e(b)r
(est)-152 2916 y(re\015ect)33 b(program)g(v)l(ariabilit)n(y)-6
b(.)56 b(While)33 b(genetic)g(programming)h(is)-152 3003
y(w)n(ell-suited)25 b(to)e(our)h(application,)h(it)f(to)r(o)g(has)g
(shortcomings.)36 b(The)-152 3090 y(o)n(v)n(erriding)e(goal)g(of)g(our)
f(researc)n(h)h(is)g(to)f(free)h(h)n(umans)e(from)i(te-)-152
3178 y(dious)f(parameter)g(t)n(w)n(eaking.)56 b(Unfortunately)-6
b(,)34 b(GP's)g(success)f(is)-152 3265 y(dep)r(enden)n(t)c(on)i
(parameters)g(suc)n(h)f(as)h(p)r(opulation)g(size)h(and)e(m)n(u-)-152
3352 y(tation)25 b(rate,)g(and)f(\014nding)g(an)g(adequate)g(solution)h
(relies)h(on)e(some)-152 3439 y(exp)r(erimen)n(tation)29
b(\(whic)n(h)e(fortunately)i(can)f(b)r(e)g(p)r(erformed)h(with)-152
3526 y(a)36 b(minimal)h(amoun)n(t)e(of)h(user)g(in)n(teraction\).)64
b(F)-6 b(uture)35 b(w)n(ork)g(will)-152 3613 y(exp)r(erimen)n(t)25
b(with)h(di\013eren)n(t)g(learning)g(tec)n(hniques.)-77
3701 y(W)-6 b(e)20 b(b)r(eliev)n(e)h(the)g(b)r(ene\014ts)f(of)i(using)f
(a)g(system)g(lik)n(e)g(ours)g(far)g(out-)-152 3788 y(w)n(eighs)28
b(the)f(dra)n(wbac)n(ks.)38 b(While)27 b(our)f(tec)n(hniques)g(do)h
(not)g(alw)n(a)n(ys)-152 3875 y(ac)n(hiev)n(e)35 b(large)h(sp)r
(eedups,)h(they)d(do)h(reduce)g(design)g(complexit)n(y)-152
3962 y(considerably)-6 b(.)47 b(Compiler)31 b(writers)g(are)f(forced)g
(to)g(sp)r(end)g(a)g(large)-152 4049 y(p)r(ortion)g(of)f(their)g(time)g
(designing)h(heuristics.)44 b(The)29 b(results)g(pre-)-152
4136 y(sen)n(ted)21 b(in)f(this)h(pap)r(er)g(lead)g(us)g(to)g(b)r
(eliev)n(e)g(that)f(mac)n(hine-learning)-152 4224 y(tec)n(hniques)f
(can)g(optimize)h(heuristics)g(at)g(least)g(as)g(w)n(ell)g(h)n(uman)e
(de-)-152 4311 y(signers.)33 b(W)-6 b(e)18 b(b)r(eliev)n(e)h(that)e
(automatic)i(heuristic)g(tuning)f(based)g(on)-152 4398
y(empirical)k(ev)l(aluation)f(will)h(b)r(ecome)f(prev)l(alen)n(t,)g
(and)f(that)h(design-)-152 4485 y(ers)30 b(will)h(in)n(ten)n(tionally)e
(exp)r(ose)h(algorithm)h(p)r(olicies)g(to)f(facilitate)-152
4572 y(mac)n(hine-learning)d(optimization.)-77 4659 y(A)j(to)r(olset)i
(that)f(can)f(b)r(e)h(used)f(to)h(ev)n(olv)n(e)f(compiler)i(heuristics)
-152 4747 y(will)27 b(b)r(e)f(a)n(v)l(ailable)h(at:)178
4894 y Fi(http://www.cag.lcs.mit.edu/met)q(aopt)2040
-69 y FC(10.)99 b(A)-5 b(CKNO)g(WLEDGMENTS)2115 39 y
FB(W)f(e)29 b(w)n(ould)h(lik)n(e)f(to)h(thank)f(the)g(PLDI)g(review)n
(ers)h(for)h(their)e(in-)2040 126 y(sigh)n(tful)18 b(commen)n(ts.)32
b(In)16 b(general)j(w)n(e)e(thank)f(ev)n(ery)n(one)h(who)g(help)r(ed)
2040 214 y(us)38 b(with)f(this)h(pap)r(er,)j(esp)r(ecially)e(Kristen)e
(Grauman,)k(Mic)n(hael)2040 301 y(Gordon,)31 b(Sam)e(Larsen,)i(William)
g(Thies,)g(Derek)e(Bruening,)i(and)2040 388 y(Vladimir)g(Kiriansky)-6
b(.)47 b(Finally)-6 b(,)32 b(thanks)d(to)h(Mic)n(hael)h(Smith)f(and)
2040 475 y(Glenn)g(Hollo)n(w)n(a)n(y)g(at)f(Harv)l(ard)g(Univ)n(ersit)n
(y)g(for)h(lending)f(us)h(their)2040 562 y(Itanium)25
b(mac)n(hines)h(in)f(our)h(hour)f(of)h(need.)34 b(This)27
b(w)n(ork)e(is)h(funded)2040 649 y(b)n(y)f(D)n(ARP)-6
b(A,)24 b(NSF,)h(and)g(the)h(Oxygen)e(Alliance.)2040
849 y FC(11.)99 b(REFERENCES)2078 1016 y FB([1])39 b(S.)26
b(G.)g(Abraham,)f(V.)h(Kathail,)h(and)e(B.)h(L.)g(Deitric)n(h.)g(Meld)
2197 1104 y(Sc)n(heduling:)34 b(Relaxing)26 b(Sc)n(heduling)f(Constain)
n(ts)i(Across)2197 1191 y(Region)f(Boundaries.)h(In)e
Fx(Pr)l(o)l(c)l(e)l(e)l(dings)30 b(of)d(the)h(29th)h(A)n(nnual)2197
1278 y(International)g(Symp)l(osium)e(on)h(Micr)l(o)l(ar)l(chite)l
(ctur)l(e)2197 1365 y(\(MICR)n(O-29\))p FB(,)e(pages)h(308{321,)i
(1996.)2078 1477 y([2])39 b(W.)26 b(Banzhaf,)h(P)-6 b(.)26
b(Nordin,)f(R.)h(Keller,)g(and)g(F.)g(F)-6 b(rancone.)2197
1564 y Fx(Genetic)29 b(Pr)l(o)l(gr)l(amming)f(:)35 b(A)n(n)28
b(Intr)l(o)l(duction)h(:)35 b(On)27 b(the)2197 1652 y(A)n(utomatic)h
(Evolution)h(of)e(Computer)h(Pr)l(o)l(gr)l(ams)i(and)e(Its)2197
1739 y(Applic)l(ations)p FB(.)f(Morgan)g(Kaufmann,)e(1998.)2078
1851 y([3])39 b(D.)26 b(Bernstein,)g(D.)g(Goldin,)g(and)f(M.)i(G.)f
(et.)g(al.)h(Spill)f(Co)r(de)2197 1938 y(Minimization)g(T)-6
b(ec)n(hniques)25 b(for)g(Optimizing)h(Compilers.)g(In)2197
2025 y Fx(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)d(the)h(SIGPLAN)g('89)f
(Confer)l(enc)l(e)i(on)2197 2112 y(Pr)l(o)l(gr)l(amming)f(L)l(anguage)i
(Design)e(and)g(Implementation)p FB(,)2197 2200 y(pages)e(258{263,)j
(1989.)2078 2312 y([4])39 b(D.)26 b(Bourgin.)g Fx(L)l(osslessy)k(c)l
(ompr)l(ession)f(schemes)p FB(.)2197 2399 y(h)n
(ttp://hpux.u-aizu.ac.jp/hpp)r(d/hpux-)2197 2486 y(/Languages/co)r
(decs-1.0/.)2078 2598 y([5])39 b(B.)26 b(Calder,)h(D.)f(G.)g(ad)g(Mic)n
(hael)h(Jones,)f(D.)g(Lindsa)n(y)-6 b(,)2197 2685 y(J.)26
b(Martin,)h(M.)f(Mozer,)h(and)f(B.)g(Zorn.)g(Evidence-Based)2197
2772 y(Static)g(Branc)n(h)g(Prediction)g(Using)g(Mac)n(hine)g
(Learning.)h(In)2197 2860 y Fx(A)n(CM)g(T)-6 b(r)l(ansactions)30
b(on)e(Pr)l(o)l(gr)l(amming)g(L)l(anguages)i(and)2197
2947 y(Systems)f(\(T)-6 b(oPL)l(aS-19\))p FB(,)28 b(v)n(olume)e(19,)g
(1997.)2078 3059 y([6])39 b(P)-6 b(.)26 b(Chang,)g(D.)g(La)n(v)n(ery)-6
b(,)25 b(S.)g(Mahlk)n(e,)i(W.)e(Chen,)h(and)2197 3146
y(W.)g(Hwu.)f(The)h(Imp)r(ortance)g(of)h(Prepass)f(Co)r(de)h(Sc)n
(heduling)2197 3233 y(for)f(Sup)r(erscalar)h(and)e(Sup)r(erpip)r
(elined)g(pro)r(cessors.)j(In)2197 3320 y Fx(IEEE)f(T)-6
b(r)l(ansactions)30 b(on)e(Computers)p FB(,)f(v)n(olume)f(44,)g(pages)
2197 3407 y(353{370,)j(Marc)n(h)d(1995.)2078 3520 y([7])39
b(F.)26 b(C.)g(Cho)n(w)h(and)e(J.)i(L.)e(Hennessey)-6
b(.)25 b(The)h(Priorit)n(y-Based)2197 3607 y(Coloring)i(Appro)r(c)n(h)c
(to)i(Register)h(Allo)r(cation.)g(In)e Fx(A)n(CM)2197
3694 y(T)-6 b(r)l(ansactions)30 b(on)d(Pr)l(o)l(gr)l(amming)i(L)l
(anguages)g(and)f(Systems)2197 3781 y(\(T)-6 b(oPL)l(aS-12\))p
FB(,)28 b(pages)f(501{536,)h(1990.)2078 3893 y([8])39
b(K.)26 b(Co)r(op)r(er,)h(P)-6 b(.)26 b(Sc)n(heilk)n(e,)f(and)h(D.)f
(Subramanian.)2197 3980 y(Optimizing)h(for)g(Reduced)f(Co)r(de)h(Space)
g(using)g(Genetic)2197 4067 y(Algorithms.)h(In)e Fx(L)l(anguages,)k
(Compilers,)e(T)-6 b(o)l(ols)28 b(for)2197 4155 y(Emb)l(e)l(dde)l(d)h
(Systems)p FB(,)e(pages)g(1{9,)g(1999.)2078 4267 y([9])39
b(C.)26 b(Gathercole.)i Fx(A)n(n)f(Investigation)i(of)e(Sup)l(ervise)l
(d)2197 4354 y(L)l(e)l(arning)i(in)e(Genetic)h(Pr)l(o)l(gr)l(amming)p
FB(.)f(PhD)f(thesis,)2197 4441 y(Univ)n(ersit)n(y)f(of)h(Edin)n(burgh,)
f(1998.)2040 4553 y([10])39 b(P)-6 b(.)26 b(B.)g(Gibb)r(ons)g(and)f(S.)
h(S.)g(Muc)n(hnic)n(k.)f(E\016cien)n(t)2197 4640 y(Instruction)g(Sc)n
(heduling)f(for)i(a)g(Pip)r(elined)f(Arc)n(hitecture.)g(In)2197
4728 y Fx(Pr)l(o)l(c)l(e)l(e)l(dings)30 b(of)d(the)h(A)n(CM)f(Symp)l
(osium)h(on)g(Compiler)2197 4815 y(Construction)p FB(,)g(v)n(olume)e
(21,)g(pages)h(11{16,)h(1986.)2040 4927 y([11])39 b(G.)26
b(W.)g(Grew)n(al)h(and)e(C.)i(T.)f(Wilson.)h(Mappping)f(Reference)2197
5014 y(Co)r(de)g(to)g(Irregular)h(DSPs)e(with)h(the)f(Retargetable,)
2197 5101 y(Optimizing)h(Compiler)h(COGEN\(T\).)f(In)f
Fx(International)2197 5188 y(Symp)l(osium)j(on)g(Micr)l(o)l(ar)l(chite)
l(ctur)l(e)p FB(,)h(v)n(olume)c(34,)i(pages)2197 5275
y(192{202,)i(2001)p eop
%%Page: 14 14
14 13 bop 5 -69 a FB(.)-152 43 y([12])39 b(M.)26 b(Kessler)h(and)e(T.)i
(Ha)n(ynes.)e(Depth-F)-6 b(air)25 b(Crosso)n(v)n(er)i(in)5
131 y(Genetic)f(Programming.)i(In)d Fx(Pr)l(o)l(c)l(e)l(e)l(dings)30
b(of)d(the)h(A)n(CM)5 218 y(Symp)l(osium)g(on)g(Applie)l(d)f(Computing)
p FB(,)g(pages)f(319{323,)5 305 y(F)-6 b(ebruary)25 b(1999.)-152
417 y([13])39 b(J.)27 b(Koza.)f Fx(Genetic)j(Pr)l(o)l(gr)l(amming:)36
b(On)27 b(the)i(Pr)l(o)l(gr)l(amming)5 504 y(of)d(Computers)j(by)e(Me)l
(ans)g(of)g(Natur)l(al)g(Sele)l(ction)p FB(.)f(The)f(MIT)5
591 y(Press,)i(1992.)-152 703 y([14])39 b(C.)27 b(Lee,)f(M.)g(P)n(otk)n
(onjak,)g(and)g(W.)f(H.)h(Mangione-Smith.)5 791 y(MediaBenc)n(h:)35
b(a)26 b(to)r(ol)h(for)g(ev)l(aluating)f(and)f(syn)n(thesizing)5
878 y(m)n(ultimedia)h(and)g(comm)n(unication)g(systems.)g(In)5
965 y Fx(International)j(Symp)l(osium)f(on)f(Micr)l(o)l(ar)l(chite)l
(ctur)l(e)p FB(,)5 1052 y(v)n(olume)f(30,)g(pages)h(330{335,)i(1997.)
-152 1164 y([15])39 b(S.)26 b(A.)f(Mahlk)n(e.)i Fx(Exploiting)g
(instruction)i(level)f(p)l(ar)l(al)t(lelism)5 1251 y(in)f(the)i(pr)l
(esenc)l(e)g(of)f(br)l(anches)p FB(.)g(PhD)d(thesis,)h(Univ)n(ersit)n
(y)f(of)5 1339 y(Illinois)i(at)f(Urbana-Champaign,)g(Departmen)n(t)f
(of)5 1426 y(Electrical)j(and)d(Computer)h(Engineering,)h(1996.)-152
1538 y([16])39 b(S.)26 b(A.)f(Mahlk)n(e,)i(D.)e(Lin,)h(W.)g(Chen,)g(R.)
f(Hank,)g(and)5 1625 y(R.)h(Bringmann.)g(E\013ectiv)n(e)g(Compiler)h
(Supp)r(ort)d(for)5 1712 y(Predicated)i(Execution)g(Using)g(the)f(Hyp)r
(erblo)r(c)n(k.)g(In)5 1799 y Fx(International)k(Symp)l(osium)f(on)f
(Micr)l(o)l(ar)l(chite)l(ctur)l(e)p FB(,)5 1887 y(v)n(olume)f(25,)g
(pages)h(45{54,)h(1992.)-152 1999 y([17])39 b(A.)26 b(Monsifrot,)h(F.)f
(Bo)r(din,)h(and)e(R.)h(Quiniou.)f(A)h(Mac)n(hine)5 2086
y(Learning)g(Approac)n(h)f(to)h(Automatic)g(Pro)r(duction)g(of)5
2173 y(Compiler)h(Heuristics.)g(In)e Fx(Arti\014cial)i(Intel)t(ligenc)l
(e:)5 2260 y(Metho)l(dolo)l(gy,)i(Systems,)g(Applic)l(ations)p
FB(,)d(pages)h(41{50,)5 2347 y(2002.)-152 2459 y([18])39
b(T.)27 b(C.)f(Mo)n(wry)-6 b(.)26 b Fx(T)-6 b(oler)l(ating)29
b(L)l(atency)g(thr)l(ough)5 2547 y(Softwar)l(e-Contr)l(ol)t(le)l(d)h
(Data)f(Pr)l(efetching)p FB(.)e(PhD)e(thesis,)5 2634
y(Stanford)h(Univ)n(ersit)n(y)-6 b(,)24 b(Departmen)n(t)h(of)i
(Electrical)5 2721 y(Engineering,)g(1994)2197 -69 y(.)2040
43 y([19])39 b(Op)r(en)25 b(Researc)n(h)h(Compiler.)2197
131 y Fx(http://ipf-or)l(c.sour)l(c)l(efor)l(ge.net)p
FB(.)2040 243 y([20])39 b(E.)26 b(Ozer,)g(S.)g(Banerjia,)h(and)f(T.)g
(Con)n(te.)h(Uni\014ed)d(Assign)2197 330 y(and)h(Sc)n(hedule:)34
b(A)25 b(New)h(Approac)n(h)f(to)h(Sc)n(heduling)f(for)2197
417 y(Clustered)h(Register)h(Filee)f(Microarc)n(hitectures.)i(In)2197
504 y Fx(Pr)l(o)l(c)l(e)l(e)l(dings)i(of)d(the)h(27th)h(A)n(nnual)f
(International)2197 591 y(Symp)l(osium)g(on)g(Micr)l(o)l(ar)l(chite)l
(ctur)l(e)i(\(MICR)n(O-24\))p FB(,)d(pages)2197 679 y(308{315,)i(1998.)
2040 791 y([21])39 b(J.)26 b(C.)h(H.)e(P)n(ark)h(and)f(M.)i(S.)e(Sc)n
(hlansk)n(er.)h(On)f(Predicated)2197 878 y(Execution.)h(T)-6
b(ec)n(hnical)26 b(Rep)r(ort)g(HPL-91-58,)g(Hewlett)2197
965 y(P)n(ac)n(k)l(ard)f(Lab)r(oratories,)j(1991.)2040
1077 y([22])39 b(B.)26 b(R.)g(Rau.)f(Iterativ)n(e)h(Mo)r(dulo)g(Sc)n
(heduling:)34 b(An)2197 1164 y(Algorithm)26 b(for)h(Soft)n(w)n(are)f
(Pip)r(elining)h(Lo)r(ops.)g(In)2197 1251 y Fx(Pr)l(o)l(c)l(e)l(e)l
(dings)j(of)d(the)h(27th)h(A)n(nnual)f(International)2197
1339 y(Symp)l(osium)g(on)g(Micr)l(o)l(ar)l(chite)l(ctur)l(e)i(\(MICR)n
(O-24\))p FB(,)2197 1426 y(No)n(v)n(em)n(b)r(er)25 b(1994.)2040
1538 y([23])39 b(M.)26 b(Stephenson,)f(S.)h(Amarasinghe,)h(U.-M.)f
(O'Reilly)-6 b(,)25 b(and)2197 1625 y(M.)h(Martin.)h(Compiler)g
(Heuristic)f(Design)g(with)g(Mac)n(hine)2197 1712 y(Learning.)g(T)-6
b(ec)n(hnical)27 b(Rep)r(ort)e(TR-893,)i(Massac)n(h)n(usetts)2197
1799 y(Institute)e(of)h(T)-6 b(ec)n(hnology)g(,)27 b(2003.)2040
1911 y([24])39 b(T)-6 b(rimaran.)27 b Fx(http://www.trimar)l(an.or)l(g)
p FB(.)2040 2023 y([25])39 b(N.)25 b(W)-6 b(arter.)26
b Fx(Mo)l(dulo)i(Sche)l(duling)g(with)g(Isomorphic)2197
2111 y(Contr)l(ol)g(T)-6 b(r)l(ansformations)p FB(.)28
b(PhD)d(thesis,)i(Univ)n(ersit)n(y)d(of)2197 2198 y(Illinois)j(at)f
(Urbana-Champaign,)g(Departmen)n(t)f(of)2197 2285 y(Electrical)i(and)f
(Computer)g(Engineering,)h(1993.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
